typedef unsigned char   undefined;

typedef unsigned long long    GUID;
typedef pointer32 ImageBaseOffset32;

typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
float10
typedef long long    longlong;
typedef char    sbyte;
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned long long    ulonglong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined5;
typedef unsigned long long    undefined6;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef unsigned short    wchar16;
typedef short    wchar_t;
typedef unsigned short    word;
typedef struct _s_HandlerType _s_HandlerType, *P_s_HandlerType;

typedef struct TypeDescriptor TypeDescriptor, *PTypeDescriptor;

typedef int ptrdiff_t;

struct TypeDescriptor {
    dword hash;
    void *spare;
    char name[0];
};

struct _s_HandlerType {
    uint adjectives;
    struct TypeDescriptor *pType;
    ptrdiff_t dispCatchObj;
    void *addressOfHandler;
};

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct {
    dword OffsetToDirectory;
    dword DataIsDirectory;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion {
    dword OffsetToData;
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;
};

typedef struct _s_FuncInfo _s_FuncInfo, *P_s_FuncInfo;

typedef int __ehstate_t;

typedef struct _s_UnwindMapEntry _s_UnwindMapEntry, *P_s_UnwindMapEntry;

typedef struct _s_UnwindMapEntry UnwindMapEntry;

typedef struct _s_TryBlockMapEntry _s_TryBlockMapEntry, *P_s_TryBlockMapEntry;

typedef struct _s_TryBlockMapEntry TryBlockMapEntry;

typedef struct _s_HandlerType HandlerType;

struct _s_FuncInfo {
    uint magicNumber_and_bbtFlags;
    __ehstate_t maxState;
    UnwindMapEntry *pUnwindMap;
    uint nTryBlocks;
    TryBlockMapEntry *pTryBlockMap;
    uint nIPMapEntries;
    void *pIPToStateMap;
};

struct _s_UnwindMapEntry {
    __ehstate_t toState;
    void (*action)(void);
};

struct _s_TryBlockMapEntry {
    __ehstate_t tryLow;
    __ehstate_t tryHigh;
    __ehstate_t catchHigh;
    int nCatches;
    HandlerType *pHandlerArray;
};

typedef struct SoundPlayer SoundPlayer, *PSoundPlayer;

typedef struct CSoundManager CSoundManager, *PCSoundManager;

typedef struct IDirectSoundBuffer IDirectSoundBuffer, *PIDirectSoundBuffer;

typedef struct IDirectSoundBuffer *LPDIRECTSOUNDBUFFER;

typedef struct HWND__ HWND__, *PHWND__;

typedef struct HWND__ *HWND;

typedef struct CStreamingSound CStreamingSound, *PCStreamingSound;

typedef void *HANDLE;

typedef struct IDirectSound8 IDirectSound8, *PIDirectSound8;

typedef struct IDirectSound8 *LPDIRECTSOUND8;

typedef struct IDirectSoundBufferVtbl IDirectSoundBufferVtbl, *PIDirectSoundBufferVtbl;

typedef long LONG;

typedef LONG HRESULT;


/* WARNING! conflicting data type names: /deps/guiddef.h/GUID - /GUID */

typedef GUID IID;

typedef void *LPVOID;

typedef ulong DWORD;

typedef DWORD ULONG;

typedef struct _DSBCAPS _DSBCAPS, *P_DSBCAPS;

typedef struct _DSBCAPS *LPDSBCAPS;

typedef DWORD *LPDWORD;

typedef struct tWAVEFORMATEX tWAVEFORMATEX, *PtWAVEFORMATEX;

typedef struct tWAVEFORMATEX *LPWAVEFORMATEX;

typedef long *LPLONG;

typedef struct IDirectSound IDirectSound, *PIDirectSound;

typedef struct IDirectSound *LPDIRECTSOUND;

typedef struct _DSBUFFERDESC _DSBUFFERDESC, *P_DSBUFFERDESC;

typedef struct _DSBUFFERDESC DSBUFFERDESC;

typedef DSBUFFERDESC *LPCDSBUFFERDESC;

typedef struct tWAVEFORMATEX WAVEFORMATEX;

typedef WAVEFORMATEX *LPCWAVEFORMATEX;

typedef struct CSound CSound, *PCSound;

typedef int BOOL;

typedef struct IDirectSound8Vtbl IDirectSound8Vtbl, *PIDirectSound8Vtbl;

typedef struct IUnknown IUnknown, *PIUnknown;

typedef struct IUnknown *LPUNKNOWN;

typedef struct _DSCAPS _DSCAPS, *P_DSCAPS;

typedef struct _DSCAPS *LPDSCAPS;

typedef GUID *LPCGUID;

typedef ushort WORD;

typedef struct IDirectSoundVtbl IDirectSoundVtbl, *PIDirectSoundVtbl;

typedef struct CWaveFile CWaveFile, *PCWaveFile;

typedef struct IUnknownVtbl IUnknownVtbl, *PIUnknownVtbl;

typedef struct HMMIO__ HMMIO__, *PHMMIO__;

typedef struct HMMIO__ *HMMIO;

typedef struct _MMCKINFO _MMCKINFO, *P_MMCKINFO;

typedef struct _MMCKINFO MMCKINFO;

typedef struct _MMIOINFO _MMIOINFO, *P_MMIOINFO;

typedef struct _MMIOINFO MMIOINFO;

typedef uchar BYTE;


/* WARNING! conflicting data type names: /deps/WinDef.h/ULONG - /deps/wtypes.h/ULONG */

typedef DWORD FOURCC;

typedef long LONG_PTR;

typedef LONG_PTR LRESULT;

typedef char CHAR;

typedef CHAR *LPSTR;

typedef uint UINT;

typedef LONG_PTR LPARAM;

typedef LRESULT (MMIOPROC)(LPSTR, UINT, LPARAM, LPARAM);

typedef MMIOPROC *LPMMIOPROC;

typedef struct HTASK__ HTASK__, *PHTASK__;

typedef struct HTASK__ *HTASK;

typedef char *HPSTR;

struct _MMIOINFO {
    DWORD dwFlags;
    FOURCC fccIOProc;
    LPMMIOPROC pIOProc;
    UINT wErrorRet;
    HTASK htask;
    LONG cchBuffer;
    HPSTR pchBuffer;
    HPSTR pchNext;
    HPSTR pchEndRead;
    HPSTR pchEndWrite;
    LONG lBufOffset;
    LONG lDiskOffset;
    DWORD adwInfo[3];
    DWORD dwReserved1;
    DWORD dwReserved2;
    HMMIO hmmio;
};

struct _MMCKINFO {
    FOURCC ckid;
    DWORD cksize;
    FOURCC fccType;
    DWORD dwDataOffset;
    DWORD dwFlags;
};

struct CWaveFile {
    WAVEFORMATEX *m_pwfx;
    HMMIO m_hmmio;
    MMCKINFO m_ck;
    MMCKINFO m_ckRiff;
    DWORD m_dwSize;
    MMIOINFO m_mmioinfoOut;
    DWORD m_dwFlags;
    BOOL m_bIsReadingFromMemory;
    BYTE *m_pbData;
    BYTE *m_pbDataCur;
    ULONG m_ulDataSize;
    DWORD m_loopStartPoint;
    DWORD m_loopEndPoint;
};

struct tWAVEFORMATEX {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
};

struct CSound {
    void *vtbl;
    LPDIRECTSOUNDBUFFER *m_apDSBuffer;
    DWORD m_dwDSBufferSize;
    struct CWaveFile *m_pWaveFile;
    DWORD m_dwNumBuffers;
    int m_dwCurFadeoutProgress;
    int m_dwTotalFadeout;
    DWORD m_dwIsFadingOut;
};

struct CStreamingSound {
    struct CSound base;
    DWORD m_dwLastPlayPos;
    DWORD m_dwPlayProgress;
    DWORD m_dwNotifySize;
    DWORD m_dwNextWriteOffset; /* Created by retype action */
    BOOL m_bFillNextNotificationWithSilence;
};

struct IDirectSound {
    struct IDirectSoundVtbl *lpVtbl;
};

struct _DSCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwMinSecondarySampleRate;
    DWORD dwMaxSecondarySampleRate;
    DWORD dwPrimaryBuffers;
    DWORD dwMaxHwMixingAllBuffers;
    DWORD dwMaxHwMixingStaticBuffers;
    DWORD dwMaxHwMixingStreamingBuffers;
    DWORD dwFreeHwMixingAllBuffers;
    DWORD dwFreeHwMixingStaticBuffers;
    DWORD dwFreeHwMixingStreamingBuffers;
    DWORD dwMaxHw3DAllBuffers;
    DWORD dwMaxHw3DStaticBuffers;
    DWORD dwMaxHw3DStreamingBuffers;
    DWORD dwFreeHw3DAllBuffers;
    DWORD dwFreeHw3DStaticBuffers;
    DWORD dwFreeHw3DStreamingBuffers;
    DWORD dwTotalHwMemBytes;
    DWORD dwFreeHwMemBytes;
    DWORD dwMaxContigFreeHwMemBytes;
    DWORD dwUnlockTransferRateHwBuffers;
    DWORD dwPlayCpuOverheadSwBuffers;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct CSoundManager {
    LPDIRECTSOUND8 m_pDS;
};

struct SoundPlayer {
    struct CSoundManager csoundmanager;
    undefined field1_0x4;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    LPDIRECTSOUNDBUFFER sound_buffers[26];
    undefined field6_0x70;
    undefined field7_0x71;
    undefined field8_0x72;
    undefined field9_0x73;
    undefined field10_0x74;
    undefined field11_0x75;
    undefined field12_0x76;
    undefined field13_0x77;
    undefined field14_0x78;
    undefined field15_0x79;
    undefined field16_0x7a;
    undefined field17_0x7b;
    undefined field18_0x7c;
    undefined field19_0x7d;
    undefined field20_0x7e;
    undefined field21_0x7f;
    undefined field22_0x80;
    undefined field23_0x81;
    undefined field24_0x82;
    undefined field25_0x83;
    undefined field26_0x84;
    undefined field27_0x85;
    undefined field28_0x86;
    undefined field29_0x87;
    undefined field30_0x88;
    undefined field31_0x89;
    undefined field32_0x8a;
    undefined field33_0x8b;
    undefined field34_0x8c;
    undefined field35_0x8d;
    undefined field36_0x8e;
    undefined field37_0x8f;
    undefined field38_0x90;
    undefined field39_0x91;
    undefined field40_0x92;
    undefined field41_0x93;
    undefined field42_0x94;
    undefined field43_0x95;
    undefined field44_0x96;
    undefined field45_0x97;
    undefined field46_0x98;
    undefined field47_0x99;
    undefined field48_0x9a;
    undefined field49_0x9b;
    undefined field50_0x9c;
    undefined field51_0x9d;
    undefined field52_0x9e;
    undefined field53_0x9f;
    undefined field54_0xa0;
    undefined field55_0xa1;
    undefined field56_0xa2;
    undefined field57_0xa3;
    undefined field58_0xa4;
    undefined field59_0xa5;
    undefined field60_0xa6;
    undefined field61_0xa7;
    undefined field62_0xa8;
    undefined field63_0xa9;
    undefined field64_0xaa;
    undefined field65_0xab;
    undefined field66_0xac;
    undefined field67_0xad;
    undefined field68_0xae;
    undefined field69_0xaf;
    undefined field70_0xb0;
    undefined field71_0xb1;
    undefined field72_0xb2;
    undefined field73_0xb3;
    undefined field74_0xb4;
    undefined field75_0xb5;
    undefined field76_0xb6;
    undefined field77_0xb7;
    undefined field78_0xb8;
    undefined field79_0xb9;
    undefined field80_0xba;
    undefined field81_0xbb;
    undefined field82_0xbc;
    undefined field83_0xbd;
    undefined field84_0xbe;
    undefined field85_0xbf;
    undefined field86_0xc0;
    undefined field87_0xc1;
    undefined field88_0xc2;
    undefined field89_0xc3;
    undefined field90_0xc4;
    undefined field91_0xc5;
    undefined field92_0xc6;
    undefined field93_0xc7;
    undefined field94_0xc8;
    undefined field95_0xc9;
    undefined field96_0xca;
    undefined field97_0xcb;
    undefined field98_0xcc;
    undefined field99_0xcd;
    undefined field100_0xce;
    undefined field101_0xcf;
    undefined field102_0xd0;
    undefined field103_0xd1;
    undefined field104_0xd2;
    undefined field105_0xd3;
    undefined field106_0xd4;
    undefined field107_0xd5;
    undefined field108_0xd6;
    undefined field109_0xd7;
    undefined field110_0xd8;
    undefined field111_0xd9;
    undefined field112_0xda;
    undefined field113_0xdb;
    undefined field114_0xdc;
    undefined field115_0xdd;
    undefined field116_0xde;
    undefined field117_0xdf;
    undefined field118_0xe0;
    undefined field119_0xe1;
    undefined field120_0xe2;
    undefined field121_0xe3;
    undefined field122_0xe4;
    undefined field123_0xe5;
    undefined field124_0xe6;
    undefined field125_0xe7;
    undefined field126_0xe8;
    undefined field127_0xe9;
    undefined field128_0xea;
    undefined field129_0xeb;
    undefined field130_0xec;
    undefined field131_0xed;
    undefined field132_0xee;
    undefined field133_0xef;
    undefined field134_0xf0;
    undefined field135_0xf1;
    undefined field136_0xf2;
    undefined field137_0xf3;
    undefined field138_0xf4;
    undefined field139_0xf5;
    undefined field140_0xf6;
    undefined field141_0xf7;
    undefined field142_0xf8;
    undefined field143_0xf9;
    undefined field144_0xfa;
    undefined field145_0xfb;
    undefined field146_0xfc;
    undefined field147_0xfd;
    undefined field148_0xfe;
    undefined field149_0xff;
    undefined field150_0x100;
    undefined field151_0x101;
    undefined field152_0x102;
    undefined field153_0x103;
    undefined field154_0x104;
    undefined field155_0x105;
    undefined field156_0x106;
    undefined field157_0x107;
    undefined field158_0x108;
    undefined field159_0x109;
    undefined field160_0x10a;
    undefined field161_0x10b;
    undefined field162_0x10c;
    undefined field163_0x10d;
    undefined field164_0x10e;
    undefined field165_0x10f;
    undefined field166_0x110;
    undefined field167_0x111;
    undefined field168_0x112;
    undefined field169_0x113;
    undefined field170_0x114;
    undefined field171_0x115;
    undefined field172_0x116;
    undefined field173_0x117;
    undefined field174_0x118;
    undefined field175_0x119;
    undefined field176_0x11a;
    undefined field177_0x11b;
    undefined field178_0x11c;
    undefined field179_0x11d;
    undefined field180_0x11e;
    undefined field181_0x11f;
    undefined field182_0x120;
    undefined field183_0x121;
    undefined field184_0x122;
    undefined field185_0x123;
    undefined field186_0x124;
    undefined field187_0x125;
    undefined field188_0x126;
    undefined field189_0x127;
    undefined field190_0x128;
    undefined field191_0x129;
    undefined field192_0x12a;
    undefined field193_0x12b;
    undefined field194_0x12c;
    undefined field195_0x12d;
    undefined field196_0x12e;
    undefined field197_0x12f;
    undefined field198_0x130;
    undefined field199_0x131;
    undefined field200_0x132;
    undefined field201_0x133;
    undefined field202_0x134;
    undefined field203_0x135;
    undefined field204_0x136;
    undefined field205_0x137;
    undefined field206_0x138;
    undefined field207_0x139;
    undefined field208_0x13a;
    undefined field209_0x13b;
    undefined field210_0x13c;
    undefined field211_0x13d;
    undefined field212_0x13e;
    undefined field213_0x13f;
    undefined field214_0x140;
    undefined field215_0x141;
    undefined field216_0x142;
    undefined field217_0x143;
    undefined field218_0x144;
    undefined field219_0x145;
    undefined field220_0x146;
    undefined field221_0x147;
    undefined field222_0x148;
    undefined field223_0x149;
    undefined field224_0x14a;
    undefined field225_0x14b;
    undefined field226_0x14c;
    undefined field227_0x14d;
    undefined field228_0x14e;
    undefined field229_0x14f;
    undefined field230_0x150;
    undefined field231_0x151;
    undefined field232_0x152;
    undefined field233_0x153;
    undefined field234_0x154;
    undefined field235_0x155;
    undefined field236_0x156;
    undefined field237_0x157;
    undefined field238_0x158;
    undefined field239_0x159;
    undefined field240_0x15a;
    undefined field241_0x15b;
    undefined field242_0x15c;
    undefined field243_0x15d;
    undefined field244_0x15e;
    undefined field245_0x15f;
    undefined field246_0x160;
    undefined field247_0x161;
    undefined field248_0x162;
    undefined field249_0x163;
    undefined field250_0x164;
    undefined field251_0x165;
    undefined field252_0x166;
    undefined field253_0x167;
    undefined field254_0x168;
    undefined field255_0x169;
    undefined field256_0x16a;
    undefined field257_0x16b;
    undefined field258_0x16c;
    undefined field259_0x16d;
    undefined field260_0x16e;
    undefined field261_0x16f;
    undefined field262_0x170;
    undefined field263_0x171;
    undefined field264_0x172;
    undefined field265_0x173;
    undefined field266_0x174;
    undefined field267_0x175;
    undefined field268_0x176;
    undefined field269_0x177;
    undefined field270_0x178;
    undefined field271_0x179;
    undefined field272_0x17a;
    undefined field273_0x17b;
    undefined field274_0x17c;
    undefined field275_0x17d;
    undefined field276_0x17e;
    undefined field277_0x17f;
    undefined field278_0x180;
    undefined field279_0x181;
    undefined field280_0x182;
    undefined field281_0x183;
    undefined field282_0x184;
    undefined field283_0x185;
    undefined field284_0x186;
    undefined field285_0x187;
    undefined field286_0x188;
    undefined field287_0x189;
    undefined field288_0x18a;
    undefined field289_0x18b;
    undefined field290_0x18c;
    undefined field291_0x18d;
    undefined field292_0x18e;
    undefined field293_0x18f;
    undefined field294_0x190;
    undefined field295_0x191;
    undefined field296_0x192;
    undefined field297_0x193;
    undefined field298_0x194;
    undefined field299_0x195;
    undefined field300_0x196;
    undefined field301_0x197;
    undefined field302_0x198;
    undefined field303_0x199;
    undefined field304_0x19a;
    undefined field305_0x19b;
    undefined field306_0x19c;
    undefined field307_0x19d;
    undefined field308_0x19e;
    undefined field309_0x19f;
    undefined field310_0x1a0;
    undefined field311_0x1a1;
    undefined field312_0x1a2;
    undefined field313_0x1a3;
    undefined field314_0x1a4;
    undefined field315_0x1a5;
    undefined field316_0x1a6;
    undefined field317_0x1a7;
    undefined field318_0x1a8;
    undefined field319_0x1a9;
    undefined field320_0x1aa;
    undefined field321_0x1ab;
    undefined field322_0x1ac;
    undefined field323_0x1ad;
    undefined field324_0x1ae;
    undefined field325_0x1af;
    undefined field326_0x1b0;
    undefined field327_0x1b1;
    undefined field328_0x1b2;
    undefined field329_0x1b3;
    undefined field330_0x1b4;
    undefined field331_0x1b5;
    undefined field332_0x1b6;
    undefined field333_0x1b7;
    undefined field334_0x1b8;
    undefined field335_0x1b9;
    undefined field336_0x1ba;
    undefined field337_0x1bb;
    undefined field338_0x1bc;
    undefined field339_0x1bd;
    undefined field340_0x1be;
    undefined field341_0x1bf;
    undefined field342_0x1c0;
    undefined field343_0x1c1;
    undefined field344_0x1c2;
    undefined field345_0x1c3;
    undefined field346_0x1c4;
    undefined field347_0x1c5;
    undefined field348_0x1c6;
    undefined field349_0x1c7;
    undefined field350_0x1c8;
    undefined field351_0x1c9;
    undefined field352_0x1ca;
    undefined field353_0x1cb;
    undefined field354_0x1cc;
    undefined field355_0x1cd;
    undefined field356_0x1ce;
    undefined field357_0x1cf;
    undefined field358_0x1d0;
    undefined field359_0x1d1;
    undefined field360_0x1d2;
    undefined field361_0x1d3;
    undefined field362_0x1d4;
    undefined field363_0x1d5;
    undefined field364_0x1d6;
    undefined field365_0x1d7;
    undefined field366_0x1d8;
    undefined field367_0x1d9;
    undefined field368_0x1da;
    undefined field369_0x1db;
    undefined field370_0x1dc;
    undefined field371_0x1dd;
    undefined field372_0x1de;
    undefined field373_0x1df;
    undefined field374_0x1e0;
    undefined field375_0x1e1;
    undefined field376_0x1e2;
    undefined field377_0x1e3;
    undefined field378_0x1e4;
    undefined field379_0x1e5;
    undefined field380_0x1e6;
    undefined field381_0x1e7;
    undefined field382_0x1e8;
    undefined field383_0x1e9;
    undefined field384_0x1ea;
    undefined field385_0x1eb;
    undefined field386_0x1ec;
    undefined field387_0x1ed;
    undefined field388_0x1ee;
    undefined field389_0x1ef;
    undefined field390_0x1f0;
    undefined field391_0x1f1;
    undefined field392_0x1f2;
    undefined field393_0x1f3;
    undefined field394_0x1f4;
    undefined field395_0x1f5;
    undefined field396_0x1f6;
    undefined field397_0x1f7;
    undefined field398_0x1f8;
    undefined field399_0x1f9;
    undefined field400_0x1fa;
    undefined field401_0x1fb;
    undefined field402_0x1fc;
    undefined field403_0x1fd;
    undefined field404_0x1fe;
    undefined field405_0x1ff;
    undefined field406_0x200;
    undefined field407_0x201;
    undefined field408_0x202;
    undefined field409_0x203;
    undefined field410_0x204;
    undefined field411_0x205;
    undefined field412_0x206;
    undefined field413_0x207;
    LPDIRECTSOUNDBUFFER duplicateSoundBuffers[32];
    undefined field415_0x288;
    undefined field416_0x289;
    undefined field417_0x28a;
    undefined field418_0x28b;
    undefined field419_0x28c;
    undefined field420_0x28d;
    undefined field421_0x28e;
    undefined field422_0x28f;
    undefined field423_0x290;
    undefined field424_0x291;
    undefined field425_0x292;
    undefined field426_0x293;
    undefined field427_0x294;
    undefined field428_0x295;
    undefined field429_0x296;
    undefined field430_0x297;
    undefined field431_0x298;
    undefined field432_0x299;
    undefined field433_0x29a;
    undefined field434_0x29b;
    undefined field435_0x29c;
    undefined field436_0x29d;
    undefined field437_0x29e;
    undefined field438_0x29f;
    undefined field439_0x2a0;
    undefined field440_0x2a1;
    undefined field441_0x2a2;
    undefined field442_0x2a3;
    undefined field443_0x2a4;
    undefined field444_0x2a5;
    undefined field445_0x2a6;
    undefined field446_0x2a7;
    undefined field447_0x2a8;
    undefined field448_0x2a9;
    undefined field449_0x2aa;
    undefined field450_0x2ab;
    undefined field451_0x2ac;
    undefined field452_0x2ad;
    undefined field453_0x2ae;
    undefined field454_0x2af;
    undefined field455_0x2b0;
    undefined field456_0x2b1;
    undefined field457_0x2b2;
    undefined field458_0x2b3;
    undefined field459_0x2b4;
    undefined field460_0x2b5;
    undefined field461_0x2b6;
    undefined field462_0x2b7;
    undefined field463_0x2b8;
    undefined field464_0x2b9;
    undefined field465_0x2ba;
    undefined field466_0x2bb;
    undefined field467_0x2bc;
    undefined field468_0x2bd;
    undefined field469_0x2be;
    undefined field470_0x2bf;
    undefined field471_0x2c0;
    undefined field472_0x2c1;
    undefined field473_0x2c2;
    undefined field474_0x2c3;
    undefined field475_0x2c4;
    undefined field476_0x2c5;
    undefined field477_0x2c6;
    undefined field478_0x2c7;
    undefined field479_0x2c8;
    undefined field480_0x2c9;
    undefined field481_0x2ca;
    undefined field482_0x2cb;
    undefined field483_0x2cc;
    undefined field484_0x2cd;
    undefined field485_0x2ce;
    undefined field486_0x2cf;
    undefined field487_0x2d0;
    undefined field488_0x2d1;
    undefined field489_0x2d2;
    undefined field490_0x2d3;
    undefined field491_0x2d4;
    undefined field492_0x2d5;
    undefined field493_0x2d6;
    undefined field494_0x2d7;
    undefined field495_0x2d8;
    undefined field496_0x2d9;
    undefined field497_0x2da;
    undefined field498_0x2db;
    undefined field499_0x2dc;
    undefined field500_0x2dd;
    undefined field501_0x2de;
    undefined field502_0x2df;
    undefined field503_0x2e0;
    undefined field504_0x2e1;
    undefined field505_0x2e2;
    undefined field506_0x2e3;
    undefined field507_0x2e4;
    undefined field508_0x2e5;
    undefined field509_0x2e6;
    undefined field510_0x2e7;
    undefined field511_0x2e8;
    undefined field512_0x2e9;
    undefined field513_0x2ea;
    undefined field514_0x2eb;
    undefined field515_0x2ec;
    undefined field516_0x2ed;
    undefined field517_0x2ee;
    undefined field518_0x2ef;
    undefined field519_0x2f0;
    undefined field520_0x2f1;
    undefined field521_0x2f2;
    undefined field522_0x2f3;
    undefined field523_0x2f4;
    undefined field524_0x2f5;
    undefined field525_0x2f6;
    undefined field526_0x2f7;
    undefined field527_0x2f8;
    undefined field528_0x2f9;
    undefined field529_0x2fa;
    undefined field530_0x2fb;
    undefined field531_0x2fc;
    undefined field532_0x2fd;
    undefined field533_0x2fe;
    undefined field534_0x2ff;
    undefined field535_0x300;
    undefined field536_0x301;
    undefined field537_0x302;
    undefined field538_0x303;
    undefined field539_0x304;
    undefined field540_0x305;
    undefined field541_0x306;
    undefined field542_0x307;
    undefined field543_0x308;
    undefined field544_0x309;
    undefined field545_0x30a;
    undefined field546_0x30b;
    undefined field547_0x30c;
    undefined field548_0x30d;
    undefined field549_0x30e;
    undefined field550_0x30f;
    undefined field551_0x310;
    undefined field552_0x311;
    undefined field553_0x312;
    undefined field554_0x313;
    undefined field555_0x314;
    undefined field556_0x315;
    undefined field557_0x316;
    undefined field558_0x317;
    undefined field559_0x318;
    undefined field560_0x319;
    undefined field561_0x31a;
    undefined field562_0x31b;
    undefined field563_0x31c;
    undefined field564_0x31d;
    undefined field565_0x31e;
    undefined field566_0x31f;
    undefined field567_0x320;
    undefined field568_0x321;
    undefined field569_0x322;
    undefined field570_0x323;
    undefined field571_0x324;
    undefined field572_0x325;
    undefined field573_0x326;
    undefined field574_0x327;
    undefined field575_0x328;
    undefined field576_0x329;
    undefined field577_0x32a;
    undefined field578_0x32b;
    undefined field579_0x32c;
    undefined field580_0x32d;
    undefined field581_0x32e;
    undefined field582_0x32f;
    undefined field583_0x330;
    undefined field584_0x331;
    undefined field585_0x332;
    undefined field586_0x333;
    undefined field587_0x334;
    undefined field588_0x335;
    undefined field589_0x336;
    undefined field590_0x337;
    undefined field591_0x338;
    undefined field592_0x339;
    undefined field593_0x33a;
    undefined field594_0x33b;
    undefined field595_0x33c;
    undefined field596_0x33d;
    undefined field597_0x33e;
    undefined field598_0x33f;
    undefined field599_0x340;
    undefined field600_0x341;
    undefined field601_0x342;
    undefined field602_0x343;
    undefined field603_0x344;
    undefined field604_0x345;
    undefined field605_0x346;
    undefined field606_0x347;
    undefined field607_0x348;
    undefined field608_0x349;
    undefined field609_0x34a;
    undefined field610_0x34b;
    undefined field611_0x34c;
    undefined field612_0x34d;
    undefined field613_0x34e;
    undefined field614_0x34f;
    undefined field615_0x350;
    undefined field616_0x351;
    undefined field617_0x352;
    undefined field618_0x353;
    undefined field619_0x354;
    undefined field620_0x355;
    undefined field621_0x356;
    undefined field622_0x357;
    undefined field623_0x358;
    undefined field624_0x359;
    undefined field625_0x35a;
    undefined field626_0x35b;
    undefined field627_0x35c;
    undefined field628_0x35d;
    undefined field629_0x35e;
    undefined field630_0x35f;
    undefined field631_0x360;
    undefined field632_0x361;
    undefined field633_0x362;
    undefined field634_0x363;
    undefined field635_0x364;
    undefined field636_0x365;
    undefined field637_0x366;
    undefined field638_0x367;
    undefined field639_0x368;
    undefined field640_0x369;
    undefined field641_0x36a;
    undefined field642_0x36b;
    undefined field643_0x36c;
    undefined field644_0x36d;
    undefined field645_0x36e;
    undefined field646_0x36f;
    undefined field647_0x370;
    undefined field648_0x371;
    undefined field649_0x372;
    undefined field650_0x373;
    undefined field651_0x374;
    undefined field652_0x375;
    undefined field653_0x376;
    undefined field654_0x377;
    undefined field655_0x378;
    undefined field656_0x379;
    undefined field657_0x37a;
    undefined field658_0x37b;
    undefined field659_0x37c;
    undefined field660_0x37d;
    undefined field661_0x37e;
    undefined field662_0x37f;
    undefined field663_0x380;
    undefined field664_0x381;
    undefined field665_0x382;
    undefined field666_0x383;
    undefined field667_0x384;
    undefined field668_0x385;
    undefined field669_0x386;
    undefined field670_0x387;
    undefined field671_0x388;
    undefined field672_0x389;
    undefined field673_0x38a;
    undefined field674_0x38b;
    undefined field675_0x38c;
    undefined field676_0x38d;
    undefined field677_0x38e;
    undefined field678_0x38f;
    undefined field679_0x390;
    undefined field680_0x391;
    undefined field681_0x392;
    undefined field682_0x393;
    undefined field683_0x394;
    undefined field684_0x395;
    undefined field685_0x396;
    undefined field686_0x397;
    undefined field687_0x398;
    undefined field688_0x399;
    undefined field689_0x39a;
    undefined field690_0x39b;
    undefined field691_0x39c;
    undefined field692_0x39d;
    undefined field693_0x39e;
    undefined field694_0x39f;
    undefined field695_0x3a0;
    undefined field696_0x3a1;
    undefined field697_0x3a2;
    undefined field698_0x3a3;
    undefined field699_0x3a4;
    undefined field700_0x3a5;
    undefined field701_0x3a6;
    undefined field702_0x3a7;
    undefined field703_0x3a8;
    undefined field704_0x3a9;
    undefined field705_0x3aa;
    undefined field706_0x3ab;
    undefined field707_0x3ac;
    undefined field708_0x3ad;
    undefined field709_0x3ae;
    undefined field710_0x3af;
    undefined field711_0x3b0;
    undefined field712_0x3b1;
    undefined field713_0x3b2;
    undefined field714_0x3b3;
    undefined field715_0x3b4;
    undefined field716_0x3b5;
    undefined field717_0x3b6;
    undefined field718_0x3b7;
    undefined field719_0x3b8;
    undefined field720_0x3b9;
    undefined field721_0x3ba;
    undefined field722_0x3bb;
    undefined field723_0x3bc;
    undefined field724_0x3bd;
    undefined field725_0x3be;
    undefined field726_0x3bf;
    undefined field727_0x3c0;
    undefined field728_0x3c1;
    undefined field729_0x3c2;
    undefined field730_0x3c3;
    undefined field731_0x3c4;
    undefined field732_0x3c5;
    undefined field733_0x3c6;
    undefined field734_0x3c7;
    undefined field735_0x3c8;
    undefined field736_0x3c9;
    undefined field737_0x3ca;
    undefined field738_0x3cb;
    undefined field739_0x3cc;
    undefined field740_0x3cd;
    undefined field741_0x3ce;
    undefined field742_0x3cf;
    undefined field743_0x3d0;
    undefined field744_0x3d1;
    undefined field745_0x3d2;
    undefined field746_0x3d3;
    undefined field747_0x3d4;
    undefined field748_0x3d5;
    undefined field749_0x3d6;
    undefined field750_0x3d7;
    undefined field751_0x3d8;
    undefined field752_0x3d9;
    undefined field753_0x3da;
    undefined field754_0x3db;
    undefined field755_0x3dc;
    undefined field756_0x3dd;
    undefined field757_0x3de;
    undefined field758_0x3df;
    undefined field759_0x3e0;
    undefined field760_0x3e1;
    undefined field761_0x3e2;
    undefined field762_0x3e3;
    undefined field763_0x3e4;
    undefined field764_0x3e5;
    undefined field765_0x3e6;
    undefined field766_0x3e7;
    undefined field767_0x3e8;
    undefined field768_0x3e9;
    undefined field769_0x3ea;
    undefined field770_0x3eb;
    undefined field771_0x3ec;
    undefined field772_0x3ed;
    undefined field773_0x3ee;
    undefined field774_0x3ef;
    undefined field775_0x3f0;
    undefined field776_0x3f1;
    undefined field777_0x3f2;
    undefined field778_0x3f3;
    undefined field779_0x3f4;
    undefined field780_0x3f5;
    undefined field781_0x3f6;
    undefined field782_0x3f7;
    undefined field783_0x3f8;
    undefined field784_0x3f9;
    undefined field785_0x3fa;
    undefined field786_0x3fb;
    undefined field787_0x3fc;
    undefined field788_0x3fd;
    undefined field789_0x3fe;
    undefined field790_0x3ff;
    undefined field791_0x400;
    undefined field792_0x401;
    undefined field793_0x402;
    undefined field794_0x403;
    undefined field795_0x404;
    undefined field796_0x405;
    undefined field797_0x406;
    undefined field798_0x407;
    undefined field799_0x408;
    undefined field800_0x409;
    undefined field801_0x40a;
    undefined field802_0x40b;
    undefined field803_0x40c;
    undefined field804_0x40d;
    undefined field805_0x40e;
    undefined field806_0x40f;
    undefined field807_0x410;
    undefined field808_0x411;
    undefined field809_0x412;
    undefined field810_0x413;
    undefined field811_0x414;
    undefined field812_0x415;
    undefined field813_0x416;
    undefined field814_0x417;
    undefined field815_0x418;
    undefined field816_0x419;
    undefined field817_0x41a;
    undefined field818_0x41b;
    undefined field819_0x41c;
    undefined field820_0x41d;
    undefined field821_0x41e;
    undefined field822_0x41f;
    undefined field823_0x420;
    undefined field824_0x421;
    undefined field825_0x422;
    undefined field826_0x423;
    undefined field827_0x424;
    undefined field828_0x425;
    undefined field829_0x426;
    undefined field830_0x427;
    undefined field831_0x428;
    undefined field832_0x429;
    undefined field833_0x42a;
    undefined field834_0x42b;
    undefined field835_0x42c;
    undefined field836_0x42d;
    undefined field837_0x42e;
    undefined field838_0x42f;
    undefined field839_0x430;
    undefined field840_0x431;
    undefined field841_0x432;
    undefined field842_0x433;
    undefined field843_0x434;
    undefined field844_0x435;
    undefined field845_0x436;
    undefined field846_0x437;
    undefined field847_0x438;
    undefined field848_0x439;
    undefined field849_0x43a;
    undefined field850_0x43b;
    undefined field851_0x43c;
    undefined field852_0x43d;
    undefined field853_0x43e;
    undefined field854_0x43f;
    undefined field855_0x440;
    undefined field856_0x441;
    undefined field857_0x442;
    undefined field858_0x443;
    undefined field859_0x444;
    undefined field860_0x445;
    undefined field861_0x446;
    undefined field862_0x447;
    undefined field863_0x448;
    undefined field864_0x449;
    undefined field865_0x44a;
    undefined field866_0x44b;
    undefined field867_0x44c;
    undefined field868_0x44d;
    undefined field869_0x44e;
    undefined field870_0x44f;
    undefined field871_0x450;
    undefined field872_0x451;
    undefined field873_0x452;
    undefined field874_0x453;
    undefined field875_0x454;
    undefined field876_0x455;
    undefined field877_0x456;
    undefined field878_0x457;
    undefined field879_0x458;
    undefined field880_0x459;
    undefined field881_0x45a;
    undefined field882_0x45b;
    undefined field883_0x45c;
    undefined field884_0x45d;
    undefined field885_0x45e;
    undefined field886_0x45f;
    undefined field887_0x460;
    undefined field888_0x461;
    undefined field889_0x462;
    undefined field890_0x463;
    undefined field891_0x464;
    undefined field892_0x465;
    undefined field893_0x466;
    undefined field894_0x467;
    undefined field895_0x468;
    undefined field896_0x469;
    undefined field897_0x46a;
    undefined field898_0x46b;
    undefined field899_0x46c;
    undefined field900_0x46d;
    undefined field901_0x46e;
    undefined field902_0x46f;
    undefined field903_0x470;
    undefined field904_0x471;
    undefined field905_0x472;
    undefined field906_0x473;
    undefined field907_0x474;
    undefined field908_0x475;
    undefined field909_0x476;
    undefined field910_0x477;
    undefined field911_0x478;
    undefined field912_0x479;
    undefined field913_0x47a;
    undefined field914_0x47b;
    undefined field915_0x47c;
    undefined field916_0x47d;
    undefined field917_0x47e;
    undefined field918_0x47f;
    undefined field919_0x480;
    undefined field920_0x481;
    undefined field921_0x482;
    undefined field922_0x483;
    undefined field923_0x484;
    undefined field924_0x485;
    undefined field925_0x486;
    undefined field926_0x487;
    undefined field927_0x488;
    undefined field928_0x489;
    undefined field929_0x48a;
    undefined field930_0x48b;
    undefined field931_0x48c;
    undefined field932_0x48d;
    undefined field933_0x48e;
    undefined field934_0x48f;
    undefined field935_0x490;
    undefined field936_0x491;
    undefined field937_0x492;
    undefined field938_0x493;
    undefined field939_0x494;
    undefined field940_0x495;
    undefined field941_0x496;
    undefined field942_0x497;
    undefined field943_0x498;
    undefined field944_0x499;
    undefined field945_0x49a;
    undefined field946_0x49b;
    undefined field947_0x49c;
    undefined field948_0x49d;
    undefined field949_0x49e;
    undefined field950_0x49f;
    undefined field951_0x4a0;
    undefined field952_0x4a1;
    undefined field953_0x4a2;
    undefined field954_0x4a3;
    undefined field955_0x4a4;
    undefined field956_0x4a5;
    undefined field957_0x4a6;
    undefined field958_0x4a7;
    undefined field959_0x4a8;
    undefined field960_0x4a9;
    undefined field961_0x4aa;
    undefined field962_0x4ab;
    undefined field963_0x4ac;
    undefined field964_0x4ad;
    undefined field965_0x4ae;
    undefined field966_0x4af;
    undefined field967_0x4b0;
    undefined field968_0x4b1;
    undefined field969_0x4b2;
    undefined field970_0x4b3;
    undefined field971_0x4b4;
    undefined field972_0x4b5;
    undefined field973_0x4b6;
    undefined field974_0x4b7;
    undefined field975_0x4b8;
    undefined field976_0x4b9;
    undefined field977_0x4ba;
    undefined field978_0x4bb;
    undefined field979_0x4bc;
    undefined field980_0x4bd;
    undefined field981_0x4be;
    undefined field982_0x4bf;
    undefined field983_0x4c0;
    undefined field984_0x4c1;
    undefined field985_0x4c2;
    undefined field986_0x4c3;
    undefined field987_0x4c4;
    undefined field988_0x4c5;
    undefined field989_0x4c6;
    undefined field990_0x4c7;
    undefined field991_0x4c8;
    undefined field992_0x4c9;
    undefined field993_0x4ca;
    undefined field994_0x4cb;
    undefined field995_0x4cc;
    undefined field996_0x4cd;
    undefined field997_0x4ce;
    undefined field998_0x4cf;
    undefined field999_0x4d0;
    undefined field1000_0x4d1;
    undefined field1001_0x4d2;
    undefined field1002_0x4d3;
    undefined field1003_0x4d4;
    undefined field1004_0x4d5;
    undefined field1005_0x4d6;
    undefined field1006_0x4d7;
    undefined field1007_0x4d8;
    undefined field1008_0x4d9;
    undefined field1009_0x4da;
    undefined field1010_0x4db;
    undefined field1011_0x4dc;
    undefined field1012_0x4dd;
    undefined field1013_0x4de;
    undefined field1014_0x4df;
    undefined field1015_0x4e0;
    undefined field1016_0x4e1;
    undefined field1017_0x4e2;
    undefined field1018_0x4e3;
    undefined field1019_0x4e4;
    undefined field1020_0x4e5;
    undefined field1021_0x4e6;
    undefined field1022_0x4e7;
    undefined field1023_0x4e8;
    undefined field1024_0x4e9;
    undefined field1025_0x4ea;
    undefined field1026_0x4eb;
    undefined field1027_0x4ec;
    undefined field1028_0x4ed;
    undefined field1029_0x4ee;
    undefined field1030_0x4ef;
    undefined field1031_0x4f0;
    undefined field1032_0x4f1;
    undefined field1033_0x4f2;
    undefined field1034_0x4f3;
    undefined field1035_0x4f4;
    undefined field1036_0x4f5;
    undefined field1037_0x4f6;
    undefined field1038_0x4f7;
    undefined field1039_0x4f8;
    undefined field1040_0x4f9;
    undefined field1041_0x4fa;
    undefined field1042_0x4fb;
    undefined field1043_0x4fc;
    undefined field1044_0x4fd;
    undefined field1045_0x4fe;
    undefined field1046_0x4ff;
    undefined field1047_0x500;
    undefined field1048_0x501;
    undefined field1049_0x502;
    undefined field1050_0x503;
    undefined field1051_0x504;
    undefined field1052_0x505;
    undefined field1053_0x506;
    undefined field1054_0x507;
    undefined field1055_0x508;
    undefined field1056_0x509;
    undefined field1057_0x50a;
    undefined field1058_0x50b;
    undefined field1059_0x50c;
    undefined field1060_0x50d;
    undefined field1061_0x50e;
    undefined field1062_0x50f;
    undefined field1063_0x510;
    undefined field1064_0x511;
    undefined field1065_0x512;
    undefined field1066_0x513;
    undefined field1067_0x514;
    undefined field1068_0x515;
    undefined field1069_0x516;
    undefined field1070_0x517;
    undefined field1071_0x518;
    undefined field1072_0x519;
    undefined field1073_0x51a;
    undefined field1074_0x51b;
    undefined field1075_0x51c;
    undefined field1076_0x51d;
    undefined field1077_0x51e;
    undefined field1078_0x51f;
    undefined field1079_0x520;
    undefined field1080_0x521;
    undefined field1081_0x522;
    undefined field1082_0x523;
    undefined field1083_0x524;
    undefined field1084_0x525;
    undefined field1085_0x526;
    undefined field1086_0x527;
    undefined field1087_0x528;
    undefined field1088_0x529;
    undefined field1089_0x52a;
    undefined field1090_0x52b;
    undefined field1091_0x52c;
    undefined field1092_0x52d;
    undefined field1093_0x52e;
    undefined field1094_0x52f;
    undefined field1095_0x530;
    undefined field1096_0x531;
    undefined field1097_0x532;
    undefined field1098_0x533;
    undefined field1099_0x534;
    undefined field1100_0x535;
    undefined field1101_0x536;
    undefined field1102_0x537;
    undefined field1103_0x538;
    undefined field1104_0x539;
    undefined field1105_0x53a;
    undefined field1106_0x53b;
    undefined field1107_0x53c;
    undefined field1108_0x53d;
    undefined field1109_0x53e;
    undefined field1110_0x53f;
    undefined field1111_0x540;
    undefined field1112_0x541;
    undefined field1113_0x542;
    undefined field1114_0x543;
    undefined field1115_0x544;
    undefined field1116_0x545;
    undefined field1117_0x546;
    undefined field1118_0x547;
    undefined field1119_0x548;
    undefined field1120_0x549;
    undefined field1121_0x54a;
    undefined field1122_0x54b;
    undefined field1123_0x54c;
    undefined field1124_0x54d;
    undefined field1125_0x54e;
    undefined field1126_0x54f;
    undefined field1127_0x550;
    undefined field1128_0x551;
    undefined field1129_0x552;
    undefined field1130_0x553;
    undefined field1131_0x554;
    undefined field1132_0x555;
    undefined field1133_0x556;
    undefined field1134_0x557;
    undefined field1135_0x558;
    undefined field1136_0x559;
    undefined field1137_0x55a;
    undefined field1138_0x55b;
    undefined field1139_0x55c;
    undefined field1140_0x55d;
    undefined field1141_0x55e;
    undefined field1142_0x55f;
    undefined field1143_0x560;
    undefined field1144_0x561;
    undefined field1145_0x562;
    undefined field1146_0x563;
    undefined field1147_0x564;
    undefined field1148_0x565;
    undefined field1149_0x566;
    undefined field1150_0x567;
    undefined field1151_0x568;
    undefined field1152_0x569;
    undefined field1153_0x56a;
    undefined field1154_0x56b;
    undefined field1155_0x56c;
    undefined field1156_0x56d;
    undefined field1157_0x56e;
    undefined field1158_0x56f;
    undefined field1159_0x570;
    undefined field1160_0x571;
    undefined field1161_0x572;
    undefined field1162_0x573;
    undefined field1163_0x574;
    undefined field1164_0x575;
    undefined field1165_0x576;
    undefined field1166_0x577;
    undefined field1167_0x578;
    undefined field1168_0x579;
    undefined field1169_0x57a;
    undefined field1170_0x57b;
    undefined field1171_0x57c;
    undefined field1172_0x57d;
    undefined field1173_0x57e;
    undefined field1174_0x57f;
    undefined field1175_0x580;
    undefined field1176_0x581;
    undefined field1177_0x582;
    undefined field1178_0x583;
    undefined field1179_0x584;
    undefined field1180_0x585;
    undefined field1181_0x586;
    undefined field1182_0x587;
    undefined field1183_0x588;
    undefined field1184_0x589;
    undefined field1185_0x58a;
    undefined field1186_0x58b;
    undefined field1187_0x58c;
    undefined field1188_0x58d;
    undefined field1189_0x58e;
    undefined field1190_0x58f;
    undefined field1191_0x590;
    undefined field1192_0x591;
    undefined field1193_0x592;
    undefined field1194_0x593;
    undefined field1195_0x594;
    undefined field1196_0x595;
    undefined field1197_0x596;
    undefined field1198_0x597;
    undefined field1199_0x598;
    undefined field1200_0x599;
    undefined field1201_0x59a;
    undefined field1202_0x59b;
    undefined field1203_0x59c;
    undefined field1204_0x59d;
    undefined field1205_0x59e;
    undefined field1206_0x59f;
    undefined field1207_0x5a0;
    undefined field1208_0x5a1;
    undefined field1209_0x5a2;
    undefined field1210_0x5a3;
    undefined field1211_0x5a4;
    undefined field1212_0x5a5;
    undefined field1213_0x5a6;
    undefined field1214_0x5a7;
    undefined field1215_0x5a8;
    undefined field1216_0x5a9;
    undefined field1217_0x5aa;
    undefined field1218_0x5ab;
    undefined field1219_0x5ac;
    undefined field1220_0x5ad;
    undefined field1221_0x5ae;
    undefined field1222_0x5af;
    undefined field1223_0x5b0;
    undefined field1224_0x5b1;
    undefined field1225_0x5b2;
    undefined field1226_0x5b3;
    undefined field1227_0x5b4;
    undefined field1228_0x5b5;
    undefined field1229_0x5b6;
    undefined field1230_0x5b7;
    undefined field1231_0x5b8;
    undefined field1232_0x5b9;
    undefined field1233_0x5ba;
    undefined field1234_0x5bb;
    undefined field1235_0x5bc;
    undefined field1236_0x5bd;
    undefined field1237_0x5be;
    undefined field1238_0x5bf;
    undefined field1239_0x5c0;
    undefined field1240_0x5c1;
    undefined field1241_0x5c2;
    undefined field1242_0x5c3;
    undefined field1243_0x5c4;
    undefined field1244_0x5c5;
    undefined field1245_0x5c6;
    undefined field1246_0x5c7;
    undefined field1247_0x5c8;
    undefined field1248_0x5c9;
    undefined field1249_0x5ca;
    undefined field1250_0x5cb;
    undefined field1251_0x5cc;
    undefined field1252_0x5cd;
    undefined field1253_0x5ce;
    undefined field1254_0x5cf;
    undefined field1255_0x5d0;
    undefined field1256_0x5d1;
    undefined field1257_0x5d2;
    undefined field1258_0x5d3;
    undefined field1259_0x5d4;
    undefined field1260_0x5d5;
    undefined field1261_0x5d6;
    undefined field1262_0x5d7;
    undefined field1263_0x5d8;
    undefined field1264_0x5d9;
    undefined field1265_0x5da;
    undefined field1266_0x5db;
    undefined field1267_0x5dc;
    undefined field1268_0x5dd;
    undefined field1269_0x5de;
    undefined field1270_0x5df;
    undefined field1271_0x5e0;
    undefined field1272_0x5e1;
    undefined field1273_0x5e2;
    undefined field1274_0x5e3;
    undefined field1275_0x5e4;
    undefined field1276_0x5e5;
    undefined field1277_0x5e6;
    undefined field1278_0x5e7;
    undefined field1279_0x5e8;
    undefined field1280_0x5e9;
    undefined field1281_0x5ea;
    undefined field1282_0x5eb;
    undefined field1283_0x5ec;
    undefined field1284_0x5ed;
    undefined field1285_0x5ee;
    undefined field1286_0x5ef;
    undefined field1287_0x5f0;
    undefined field1288_0x5f1;
    undefined field1289_0x5f2;
    undefined field1290_0x5f3;
    undefined field1291_0x5f4;
    undefined field1292_0x5f5;
    undefined field1293_0x5f6;
    undefined field1294_0x5f7;
    undefined field1295_0x5f8;
    undefined field1296_0x5f9;
    undefined field1297_0x5fa;
    undefined field1298_0x5fb;
    undefined field1299_0x5fc;
    undefined field1300_0x5fd;
    undefined field1301_0x5fe;
    undefined field1302_0x5ff;
    undefined field1303_0x600;
    undefined field1304_0x601;
    undefined field1305_0x602;
    undefined field1306_0x603;
    undefined field1307_0x604;
    undefined field1308_0x605;
    undefined field1309_0x606;
    undefined field1310_0x607;
    LPDIRECTSOUNDBUFFER soundbuffer;
    HWND game_window; /* Created by retype action */
    struct CSoundManager *csoundmanager_ptr; /* Created by retype action */
    undefined field1314_0x614;
    undefined field1315_0x615;
    undefined field1316_0x616;
    undefined field1317_0x617;
    int field1318_0x618;
    undefined field1319_0x61c;
    undefined field1320_0x61d;
    undefined field1321_0x61e;
    undefined field1322_0x61f;
    int soundBuffersToPlay[3]; /* Created by retype action */
    struct CStreamingSound *streamingSound;
    HANDLE hEvent;
};

struct HMMIO__ {
    int unused;
};

struct IDirectSoundBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundBuffer *);
    ULONG (*Release)(struct IDirectSoundBuffer *);
    HRESULT (*GetCaps)(struct IDirectSoundBuffer *, LPDSBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundBuffer *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetVolume)(struct IDirectSoundBuffer *, LPLONG);
    HRESULT (*GetPan)(struct IDirectSoundBuffer *, LPLONG);
    HRESULT (*GetFrequency)(struct IDirectSoundBuffer *, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundBuffer *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundBuffer *, LPDIRECTSOUND, LPCDSBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundBuffer *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Play)(struct IDirectSoundBuffer *, DWORD, DWORD, DWORD);
    HRESULT (*SetCurrentPosition)(struct IDirectSoundBuffer *, DWORD);
    HRESULT (*SetFormat)(struct IDirectSoundBuffer *, LPCWAVEFORMATEX);
    HRESULT (*SetVolume)(struct IDirectSoundBuffer *, LONG);
    HRESULT (*SetPan)(struct IDirectSoundBuffer *, LONG);
    HRESULT (*SetFrequency)(struct IDirectSoundBuffer *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundBuffer *);
    HRESULT (*Unlock)(struct IDirectSoundBuffer *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*Restore)(struct IDirectSoundBuffer *);
};

struct HWND__ {
    int unused;
};

struct _DSBCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwUnlockTransferRate;
    DWORD dwPlayCpuOverhead;
};

struct IDirectSound8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSound8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound8 *);
    ULONG (*Release)(struct IDirectSound8 *);
    HRESULT (*CreateSoundBuffer)(struct IDirectSound8 *, LPCDSBUFFERDESC, LPDIRECTSOUNDBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSound8 *, LPDSCAPS);
    HRESULT (*DuplicateSoundBuffer)(struct IDirectSound8 *, LPDIRECTSOUNDBUFFER, LPDIRECTSOUNDBUFFER *);
    HRESULT (*SetCooperativeLevel)(struct IDirectSound8 *, HWND, DWORD);
    HRESULT (*Compact)(struct IDirectSound8 *);
    HRESULT (*GetSpeakerConfig)(struct IDirectSound8 *, LPDWORD);
    HRESULT (*SetSpeakerConfig)(struct IDirectSound8 *, DWORD);
    HRESULT (*Initialize)(struct IDirectSound8 *, LPCGUID);
    HRESULT (*VerifyCertification)(struct IDirectSound8 *, LPDWORD);
};

struct IDirectSoundVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound *);
    ULONG (*Release)(struct IDirectSound *);
    HRESULT (*CreateSoundBuffer)(struct IDirectSound *, LPCDSBUFFERDESC, LPDIRECTSOUNDBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSound *, LPDSCAPS);
    HRESULT (*DuplicateSoundBuffer)(struct IDirectSound *, LPDIRECTSOUNDBUFFER, LPDIRECTSOUNDBUFFER *);
    HRESULT (*SetCooperativeLevel)(struct IDirectSound *, HWND, DWORD);
    HRESULT (*Compact)(struct IDirectSound *);
    HRESULT (*GetSpeakerConfig)(struct IDirectSound *, LPDWORD);
    HRESULT (*SetSpeakerConfig)(struct IDirectSound *, DWORD);
    HRESULT (*Initialize)(struct IDirectSound *, LPCGUID);
};

struct IDirectSound8 {
    struct IDirectSound8Vtbl *lpVtbl;
};

struct IUnknownVtbl {
    HRESULT (*QueryInterface)(struct IUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IUnknown *);
    ULONG (*Release)(struct IUnknown *);
};

struct IUnknown {
    struct IUnknownVtbl *lpVtbl;
};

struct _DSBUFFERDESC {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
    GUID guid3DAlgorithm;
};

struct IDirectSoundBuffer {
    struct IDirectSoundBufferVtbl *lpVtbl;
};

struct HTASK__ {
    int unused;
};

typedef struct test test, *Ptest;

struct test {
    void *field0_0x0;
    int field1_0x4;
    int field2_0x8;
};

typedef struct Ending Ending, *PEnding;

typedef struct ChainElem ChainElem, *PChainElem;

typedef enum ChainCallbackResult {
    CHAIN_CALLBACK_RESULT_CONTINUE_AND_REMOVE_JOB=0,
    CHAIN_CALLBACK_RESULT_CONTINUE=1,
    CHAIN_CALLBACK_RESULT_EXECUTE_AGAIN=2,
    CHAIN_CALLBACK_RESULT_BREAK=3,
    CHAIN_CALLBACK_RESULT_EXIT_GAME_SUCCESS=4,
    CHAIN_CALLBACK_RESULT_EXIT_GAME_ERROR=5,
    CHAIN_CALLBACK_RESULT_RESTART_FROM_FIRST_JOB=6
} ChainCallbackResult;

typedef enum ZunResult {
    ZUN_ERROR=-1,
    ZUN_SUCCESS=0
} ZunResult;

typedef struct ZunTimer ZunTimer, *PZunTimer;

typedef struct AnmVm AnmVm, *PAnmVm;

typedef DWORD D3DCOLOR;

typedef struct _D3DVECTOR _D3DVECTOR, *P_D3DVECTOR;

typedef struct _D3DVECTOR D3DXVECTOR3;

typedef struct D3DXVECTOR2 D3DXVECTOR2, *PD3DXVECTOR2;

typedef struct _D3DMATRIX _D3DMATRIX, *P_D3DMATRIX;

typedef struct _D3DMATRIX D3DMATRIX;

typedef union D3DCOLORUNION D3DCOLORUNION, *PD3DCOLORUNION;

typedef enum AnmVmFlags {
    AnmVmFlags_None=0,
    AnmVmFlags_1=1,
    AnmVmFlags_0 | AnmVmFlags_1=3,
    AnmVmFlags_2=4,
    AnmVmFlags_3=8,
    AnmVmFlags_4=16,
    AnmVmFlags_5=32,
    AnmVmFlags_6=64,
    AnmVmFlags_7=128,
    AnmVmFlags_8=256,
    AnmVmFlags_9=512,
    AnmVmFlags_10=1024,
    AnmVmFlags_11=2048,
    AnmVmFlags_12=4096,
    AnmVmFlags_13=8192,
    AnmVmFlags_14=16384,
    AnmVmFlags_15=32768
} AnmVmFlags;

typedef struct AnmRawInstr AnmRawInstr, *PAnmRawInstr;

typedef struct AnmLoadedSprite AnmLoadedSprite, *PAnmLoadedSprite;

typedef uchar uint8_t;

typedef float FLOAT;

typedef enum AnmOpcode {
    AnmOpcode_Exit=0,
    AnmOpcode_SetActiveSprite=1,
    AnmOpcode_SetScale=2,
    AnmOpcode_SetAlpha=3,
    AnmOpcode_SetColor=4,
    AnmOpcode_5=5,
    AnmOpcode_6=6,
    AnmOpcode_FlipX=7,
    AnmOpcode_FlipY=8,
    AnmOpcode_SetRotation=9,
    AnmOpcode_10=10,
    AnmOpcode_11=11,
    AnmOpcode_12=12,
    AnmOpcode_13=13,
    AnmOpcode_14=14,
    AnmOpcode_ExitHide=15,
    AnmOpcode_16=16,
    AnmOpcode_17=17,
    AnmOpcode_18=18,
    AnmOpcode_19=19,
    AnmOpcode_20=20,
    AnmOpcode_Stop=21,
    AnmOpcode_22=22,
    AnmOpcode_23=23,
    AnmOpcode_StopHide=24,
    AnmOpcode_25=25,
    AnmOpcode_26=26,
    AnmOpcode_27=27,
    AnmOpcode_28=28,
    AnmOpcode_29=29,
    AnmOpcode_30=30,
    AnmOpcode_31=31
} AnmOpcode;

struct D3DXVECTOR2 {
    FLOAT x;
    FLOAT y;
};

struct AnmLoadedSprite {
    uint sourceFileIndex;
    struct D3DXVECTOR2 startPixelInclusive;
    struct D3DXVECTOR2 endPixelInclusive;
    float textureHeight;
    float textureWidth;
    struct D3DXVECTOR2 uvStart;
    struct D3DXVECTOR2 uvEnd;
    float heightPx;
    float widthPx;
    int spriteId;
};

struct _D3DMATRIX {
    float m[4][4];
};

struct _D3DVECTOR {
    float x;
    float y;
    float z;
};

struct ChainElem {
    short priority;
    ushort flags;
    ChainCallbackResult (*callback)(void *);
    ZunResult (*addedCallback)(void *);
    ZunResult (*deletedCallback)(void *);
    struct ChainElem *prev;
    struct ChainElem *next;
    struct ChainElem *unkPtr;
    void *arg;
};

union D3DCOLORUNION {
    D3DCOLOR color;
    byte bytes[4];
};

struct AnmRawInstr {
    ushort time;
    enum AnmOpcode opcode;
    uchar argsCount;
    uint args[10];
};

struct ZunTimer {
    int previous;
    float subFrame;
    int current;
};

struct AnmVm {
    D3DXVECTOR3 rotation;
    D3DXVECTOR3 angleVel;
    float scaleY;
    float scaleX;
    float scaleInterpFinalY;
    float scaleInterpFinalX;
    struct D3DXVECTOR2 uvScrollPos;
    struct ZunTimer currentTimeInScript;
    D3DMATRIX matrix;
    union D3DCOLORUNION color;
    enum AnmVmFlags flags;
    undefined field11_0x82;
    undefined field12_0x83;
    ushort alphaInterpEndTime;
    ushort scaleInterpEndTime;
    ushort autoRotate;
    short pendingInterrupt;
    ushort posInterpEndTime;
    undefined field18_0x8e;
    undefined field19_0x8f;
    D3DXVECTOR3 pos;
    float scaleInterpInitialY;
    float scaleInterpInitialX;
    struct ZunTimer scaleInterpTime;
    short spriteNumber;
    short anotherSpriteNumber;
    short anmFileIndex;
    undefined field27_0xb6;
    undefined field28_0xb7;
    struct AnmRawInstr *beginingOfScript;
    struct AnmRawInstr *currentInstruction;
    struct AnmLoadedSprite *sprite;
    D3DCOLOR alphaInterpInitial;
    D3DCOLOR alphaInterpFinal;
    D3DXVECTOR3 posInterpInitial;
    D3DXVECTOR3 posInterpFinal;
    D3DXVECTOR3 pos2;
    struct ZunTimer posInterpTime;
    int timeOfLastSpriteSet;
    struct ZunTimer alphaInterpTime;
    uint8_t fontWidth;
    uint8_t fontHeight;
    undefined field42_0x10e;
    undefined field43_0x10f;
};

struct Ending {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    struct ChainElem *chainElem;
    struct ZunTimer anmTimer4;
    struct AnmVm AnmVm;
    struct AnmVm field7_0x124;
    struct AnmVm field8_0x234;
    struct AnmVm field9_0x344;
    struct AnmVm field10_0x454;
    struct AnmVm field11_0x564;
    struct AnmVm field12_0x674;
    struct AnmVm field13_0x784;
    struct AnmVm field14_0x894;
    struct AnmVm field15_0x9a4;
    struct AnmVm field16_0xab4;
    struct AnmVm field17_0xbc4;
    struct AnmVm field18_0xcd4;
    struct AnmVm field19_0xde4;
    struct AnmVm field20_0xef4;
    struct AnmVm field21_0x1004;
    char *endFileData;
    undefined1 unk_dependent_on_clrd;
    undefined field24_0x1119;
    undefined field25_0x111a;
    undefined field26_0x111b;
    struct ZunTimer Timer1;
    struct ZunTimer Timer2;
    struct ZunTimer Timer3;
    long minWaitResetFrames; /* Created by retype action */
    long minWaitFrames;
    long line2Delay;
    long topLineDelay;
    undefined field34_0x1150;
    undefined field35_0x1151;
    undefined field36_0x1152;
    undefined field37_0x1153;
    int possibly_times_file_parsed;
    long textColor;
    D3DCOLOR unk_d3dcolor;
    int timeFading;
    long fadeFrames;
    int fadeType;
    char *endFileDataPtr;
};

typedef struct GameWindow GameWindow, *PGameWindow;

struct GameWindow {
    HWND window;
    int isAppClosing;
    int lastActiveAppValue;
    int isAppActive;
    byte curFrame;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    uint screen_save_active;
    uint low_power_active;
    uint power_off_active;
};

typedef struct SoundBufferIdxVolume SoundBufferIdxVolume, *PSoundBufferIdxVolume;

struct SoundBufferIdxVolume {
    int buffer_idx;
    short volume;
};

typedef struct _D3DXIMAGE_INFO _D3DXIMAGE_INFO, *P_D3DXIMAGE_INFO;

typedef struct _D3DXIMAGE_INFO D3DXIMAGE_INFO;

typedef enum _D3DFORMAT {
    D3DFMT_UNKNOWN=0,
    D3DFMT_R8G8B8=20,
    D3DFMT_A8R8G8B8=21,
    D3DFMT_X8R8G8B8=22,
    D3DFMT_R5G6B5=23,
    D3DFMT_X1R5G5B5=24,
    D3DFMT_A1R5G5B5=25,
    D3DFMT_A4R4G4B4=26,
    D3DFMT_R3G3B2=27,
    D3DFMT_A8=28,
    D3DFMT_A8R3G3B2=29,
    D3DFMT_X4R4G4B4=30,
    D3DFMT_A8P8=40,
    D3DFMT_P8=41,
    D3DFMT_L8=50,
    D3DFMT_A8L8=51,
    D3DFMT_A4L4=52,
    D3DFMT_V8U8=60,
    D3DFMT_L6V5U5=61,
    D3DFMT_X8L8V8U8=62,
    D3DFMT_Q8W8V8U8=63,
    D3DFMT_V16U16=64,
    D3DFMT_W11V11U10=65,
    D3DFMT_UYVY=66,
    D3DFMT_YUY2=67,
    D3DFMT_DXT1=68,
    D3DFMT_DXT2=69,
    D3DFMT_D16_LOCKABLE=70,
    D3DFMT_DXT3=70,
    D3DFMT_D32=71,
    D3DFMT_DXT4=71,
    D3DFMT_DXT5=72,
    D3DFMT_D15S1=73,
    D3DFMT_D24S8=75,
    D3DFMT_D24X8=77,
    D3DFMT_D24X4S4=79,
    D3DFMT_D16=80,
    D3DFMT_VERTEXDATA=100,
    D3DFMT_INDEX16=101,
    D3DFMT_INDEX32=102,
    D3DFMT_FORCE_DWORD=2147483647
} _D3DFORMAT;

typedef enum _D3DFORMAT D3DFORMAT;

struct _D3DXIMAGE_INFO {
    UINT Width;
    UINT Height;
    UINT Depth;
    UINT MipLevels;
    D3DFORMAT Format;
};

typedef struct struct_1 struct_1, *Pstruct_1;

struct struct_1 {
    struct IUnknownVtbl base;
    void *TestCooperativeLevel;
    void *GetAvailableTextureMem;
    void *ResourceManagerDiscardBytes;
    void *field4_0x18;
    void *field5_0x1c;
    void *field6_0x20;
    void *field7_0x24;
    void *field8_0x28;
    void *field9_0x2c;
    void *field10_0x30;
    void *field11_0x34;
    void *field12_0x38;
    void *field13_0x3c;
    void *field14_0x40;
    void *field15_0x44;
    void *field16_0x48;
    void *field17_0x4c;
    void *field18_0x50;
    void *field19_0x54;
    void *field20_0x58;
    void *field21_0x5c;
    void *field22_0x60;
    void *field23_0x64;
    void *field24_0x68;
    void *field25_0x6c;
    void *field26_0x70;
    void *field27_0x74;
    void *field28_0x78;
    void *field29_0x7c;
    void *field30_0x80;
    void *field31_0x84;
    void *field32_0x88;
    void *field33_0x8c;
    void *field34_0x90;
    void *field35_0x94;
    void *field36_0x98;
    void *field37_0x9c;
    void *field38_0xa0;
    void *field39_0xa4;
    void *field40_0xa8;
    void *field41_0xac;
    void *field42_0xb0;
    void *field43_0xb4;
    void *field44_0xb8;
    void *field45_0xbc;
    void *field46_0xc0;
    void *field47_0xc4;
    void *field48_0xc8;
    void *field49_0xcc;
    void *field50_0xd0;
    void *field51_0xd4;
    void *field52_0xd8;
    void *field53_0xdc;
    void *field54_0xe0;
    void *field55_0xe4;
    void *field56_0xe8;
    void *field57_0xec;
    void *field58_0xf0;
    void *field59_0xf4;
};

typedef struct Pbg3File Pbg3File, *PPbg3File;

struct Pbg3File { /* PlaceHolder Class Structure */
};

typedef struct PointF32 PointF32, *PPointF32;

struct PointF32 {
    float x;
    float y;
    float z;
};

typedef struct BombData BombData, *PBombData;

struct BombData {
    void *calc;
    void *draw;
};

typedef struct CLIENT_ID CLIENT_ID, *PCLIENT_ID;

struct CLIENT_ID {
    void *UniqueProcess;
    void *UniqueThread;
};

typedef struct AmsgPair AmsgPair, *PAmsgPair;

struct AmsgPair {
    int err_code;
    void *err_msg;
};

typedef struct _s_FuncInfo FuncInfo;

typedef struct IMAGE_DOS_HEADER IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

struct IMAGE_DOS_HEADER {
    char e_magic[2]; /* Magic number */
    word e_cblp; /* Bytes of last page */
    word e_cp; /* Pages in file */
    word e_crlc; /* Relocations */
    word e_cparhdr; /* Size of header in paragraphs */
    word e_minalloc; /* Minimum extra paragraphs needed */
    word e_maxalloc; /* Maximum extra paragraphs needed */
    word e_ss; /* Initial (relative) SS value */
    word e_sp; /* Initial SP value */
    word e_csum; /* Checksum */
    word e_ip; /* Initial IP value */
    word e_cs; /* Initial (relative) CS value */
    word e_lfarlc; /* File address of relocation table */
    word e_ovno; /* Overlay number */
    word e_res[4][4]; /* Reserved words */
    word e_oemid; /* OEM identifier (for e_oeminfo) */
    word e_oeminfo; /* OEM information; e_oemid specific */
    word e_res2[10][10]; /* Reserved words */
    dword e_lfanew; /* File address of new exe header */
    byte e_program[64]; /* Actual DOS program */
};

#define SHTDN_REASON_MAJOR_NONE 0

#define SHTDN_REASON_MINOR_INSTALLATION 2

#define UCLEANUI 67108864

#define SHTDN_REASON_FLAG_CLEAN_UI 67108864

#define SHTDN_REASON_FLAG_DIRTY_UI 134217728

#define SHTDN_REASON_MINOR_BLUESCREEN 15

#define SHTDN_REASON_MINOR_PROCESSOR 8

#define SHTDN_REASON_MAJOR_APPLICATION 262144

#define SHTDN_REASON_FLAG_PLANNED 2147483648

#define SHTDN_REASON_MINOR_CORDUNPLUGGED 11

#define MAX_REASON_NAME_LEN 64

#define SHTDN_REASON_MAJOR_OPERATINGSYSTEM 131072

#define PCLEANUI 2214592512

#define SHTDN_REASON_MINOR_ENVIRONMENT 12

#define SHTDN_REASON_MAJOR_HARDWARE 65536

#define SHTDN_REASON_MINOR_UNSTABLE 6

#define SHTDN_REASON_UNKNOWN 255

#define SHTDN_REASON_MINOR_RECONFIG 4

#define SHTDN_REASON_MINOR_HUNG 5

#define SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED 33554432

#define SHTDN_REASON_FLAG_COMMENT_REQUIRED 16777216

#define SHTDN_REASON_MAJOR_OTHER 0

#define SHTDN_REASON_FLAG_USER_DEFINED 1073741824

#define SHTDN_REASON_MAJOR_SYSTEM 327680

#define SHTDN_REASON_MINOR_UPGRADE 3

#define UDIRTYUI 134217728

#define SHTDN_REASON_MINOR_OTHERDRIVER 14

#define SHTDN_REASON_MINOR_DISK 7

#define MAX_REASON_COMMENT_LEN 512

#define SHTDN_REASON_MINOR_HARDWARE_DRIVER 13

#define MAX_REASON_DESC_LEN 256

#define MAX_REASON_BUGID_LEN 32

#define SHTDN_REASON_MINOR_OTHER 0

#define SHTDN_REASON_MINOR_NONE 255

#define SHTDN_REASON_MAJOR_POWER 393216

#define SHTDN_REASON_MINOR_MAINTENANCE 1

#define SHTDN_REASON_MINOR_POWER_SUPPLY 10

#define SHTDN_REASON_VALID_BIT_MASK 3238002687

#define SHTDN_REASON_MAJOR_SOFTWARE 196608

#define SHTDN_REASON_MINOR_NETWORKCARD 9

typedef struct _iobuf _iobuf, *P_iobuf;

struct _iobuf {
    char *_ptr;
    int _cnt;
    char *_base;
    int _flag;
    int _file;
    int _charbuf;
    int _bufsiz;
    char *_tmpfname;
};

typedef struct _iobuf FILE;

typedef struct _DIOBJECTDATAFORMAT _DIOBJECTDATAFORMAT, *P_DIOBJECTDATAFORMAT;

struct _DIOBJECTDATAFORMAT {
    GUID *pguid;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
};

typedef struct DIDEVICEOBJECTINSTANCEA DIDEVICEOBJECTINSTANCEA, *PDIDEVICEOBJECTINSTANCEA;

typedef struct DIDEVICEOBJECTINSTANCEA *LPDIDEVICEOBJECTINSTANCEA;

struct DIDEVICEOBJECTINSTANCEA {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[260];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
};

typedef struct DIDEVICEINSTANCE_DX3W DIDEVICEINSTANCE_DX3W, *PDIDEVICEINSTANCE_DX3W;

typedef wchar_t WCHAR;

struct DIDEVICEINSTANCE_DX3W {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[260];
    WCHAR tszProductName[260];
};

typedef struct DIDEVICEOBJECTINSTANCE_DX3W DIDEVICEOBJECTINSTANCE_DX3W, *PDIDEVICEOBJECTINSTANCE_DX3W;

typedef struct DIDEVICEOBJECTINSTANCE_DX3W *LPCDIDEVICEOBJECTINSTANCE_DX3W;

struct DIDEVICEOBJECTINSTANCE_DX3W {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[260];
};

typedef struct DIPROPPOINTER DIPROPPOINTER, *PDIPROPPOINTER;

typedef struct DIPROPPOINTER *LPCDIPROPPOINTER;

typedef struct DIPROPHEADER DIPROPHEADER, *PDIPROPHEADER;

typedef uint UINT_PTR;

struct DIPROPHEADER {
    DWORD dwSize;
    DWORD dwHeaderSize;
    DWORD dwObj;
    DWORD dwHow;
};

struct DIPROPPOINTER {
    struct DIPROPHEADER diph;
    UINT_PTR uData;
};

typedef struct _DIMOUSESTATE2 _DIMOUSESTATE2, *P_DIMOUSESTATE2;

typedef struct _DIMOUSESTATE2 DIMOUSESTATE2;

struct _DIMOUSESTATE2 {
    LONG lX;
    LONG lY;
    LONG lZ;
    BYTE rgbButtons[8];
};

typedef struct DIENVELOPE DIENVELOPE, *PDIENVELOPE;

typedef struct DIENVELOPE *LPDIENVELOPE;

struct DIENVELOPE {
    DWORD dwSize;
    DWORD dwAttackLevel;
    DWORD dwAttackTime;
    DWORD dwFadeLevel;
    DWORD dwFadeTime;
};

typedef struct DIDEVCAPS_DX3 DIDEVCAPS_DX3, *PDIDEVCAPS_DX3;

typedef struct DIDEVCAPS_DX3 *LPDIDEVCAPS_DX3;

struct DIDEVCAPS_DX3 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
};

typedef struct IDirectInputDeviceWVtbl IDirectInputDeviceWVtbl, *PIDirectInputDeviceWVtbl;

typedef struct IDirectInputDeviceW IDirectInputDeviceW, *PIDirectInputDeviceW;

typedef struct DIDEVCAPS DIDEVCAPS, *PDIDEVCAPS;

typedef struct DIDEVCAPS *LPDIDEVCAPS;

typedef struct DIDEVICEOBJECTINSTANCEW DIDEVICEOBJECTINSTANCEW, *PDIDEVICEOBJECTINSTANCEW;

typedef struct DIDEVICEOBJECTINSTANCEW *LPCDIDEVICEOBJECTINSTANCEW;

typedef BOOL (*LPDIENUMDEVICEOBJECTSCALLBACKW)(LPCDIDEVICEOBJECTINSTANCEW, LPVOID);

typedef struct DIPROPHEADER *LPDIPROPHEADER;

typedef struct DIPROPHEADER *LPCDIPROPHEADER;

typedef struct DIDEVICEOBJECTDATA DIDEVICEOBJECTDATA, *PDIDEVICEOBJECTDATA;

typedef struct DIDEVICEOBJECTDATA *LPDIDEVICEOBJECTDATA;

typedef struct _DIDATAFORMAT _DIDATAFORMAT, *P_DIDATAFORMAT;

typedef struct _DIDATAFORMAT DIDATAFORMAT;

typedef DIDATAFORMAT *LPCDIDATAFORMAT;

typedef struct DIDEVICEOBJECTINSTANCEW *LPDIDEVICEOBJECTINSTANCEW;

typedef struct DIDEVICEINSTANCEW DIDEVICEINSTANCEW, *PDIDEVICEINSTANCEW;

typedef struct DIDEVICEINSTANCEW *LPDIDEVICEINSTANCEW;

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

typedef struct HINSTANCE__ *HINSTANCE;

typedef struct _DIOBJECTDATAFORMAT *LPDIOBJECTDATAFORMAT;

struct IDirectInputDeviceWVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDeviceW *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDeviceW *);
    ULONG (*Release)(struct IDirectInputDeviceW *);
    HRESULT (*GetCapabilities)(struct IDirectInputDeviceW *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDeviceW *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDeviceW *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDeviceW *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDeviceW *);
    HRESULT (*Unacquire)(struct IDirectInputDeviceW *);
    HRESULT (*GetDeviceState)(struct IDirectInputDeviceW *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDeviceW *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDeviceW *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDeviceW *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDeviceW *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDeviceW *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDeviceW *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDeviceW *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDeviceW *, HINSTANCE, DWORD, GUID *);
};

struct DIDEVICEINSTANCEW {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[260];
    WCHAR tszProductName[260];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
};

struct DIDEVICEOBJECTINSTANCEW {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[260];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
};

struct IDirectInputDeviceW {
    struct IDirectInputDeviceWVtbl *lpVtbl;
};

struct DIDEVCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
    DWORD dwFFSamplePeriod;
    DWORD dwFFMinTimeResolution;
    DWORD dwFirmwareRevision;
    DWORD dwHardwareRevision;
    DWORD dwFFDriverVersion;
};

struct _DIDATAFORMAT {
    DWORD dwSize;
    DWORD dwObjSize;
    DWORD dwFlags;
    DWORD dwDataSize;
    DWORD dwNumObjs;
    LPDIOBJECTDATAFORMAT rgodf;
};

struct HINSTANCE__ {
    int unused;
};

struct DIDEVICEOBJECTDATA {
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
    UINT_PTR uAppData;
};

typedef struct DICONSTANTFORCE DICONSTANTFORCE, *PDICONSTANTFORCE;

struct DICONSTANTFORCE {
    LONG lMagnitude;
};

typedef struct DIEFFESCAPE DIEFFESCAPE, *PDIEFFESCAPE;

struct DIEFFESCAPE {
    DWORD dwSize;
    DWORD dwCommand;
    LPVOID lpvInBuffer;
    DWORD cbInBuffer;
    LPVOID lpvOutBuffer;
    DWORD cbOutBuffer;
};

typedef struct IDirectInputA IDirectInputA, *PIDirectInputA;

typedef struct IDirectInputA *LPDIRECTINPUT;

typedef struct IDirectInputAVtbl IDirectInputAVtbl, *PIDirectInputAVtbl;

typedef struct IDirectInputDeviceA IDirectInputDeviceA, *PIDirectInputDeviceA;

typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICEA;

typedef struct DIDEVICEINSTANCEA DIDEVICEINSTANCEA, *PDIDEVICEINSTANCEA;

typedef struct DIDEVICEINSTANCEA *LPCDIDEVICEINSTANCEA;

typedef BOOL (*LPDIENUMDEVICESCALLBACKA)(LPCDIDEVICEINSTANCEA, LPVOID);

typedef struct IDirectInputDeviceAVtbl IDirectInputDeviceAVtbl, *PIDirectInputDeviceAVtbl;

typedef struct DIDEVICEOBJECTINSTANCEA *LPCDIDEVICEOBJECTINSTANCEA;

typedef BOOL (*LPDIENUMDEVICEOBJECTSCALLBACKA)(LPCDIDEVICEOBJECTINSTANCEA, LPVOID);

typedef struct DIDEVICEINSTANCEA *LPDIDEVICEINSTANCEA;

struct IDirectInputDeviceAVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDeviceA *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDeviceA *);
    ULONG (*Release)(struct IDirectInputDeviceA *);
    HRESULT (*GetCapabilities)(struct IDirectInputDeviceA *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDeviceA *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDeviceA *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDeviceA *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDeviceA *);
    HRESULT (*Unacquire)(struct IDirectInputDeviceA *);
    HRESULT (*GetDeviceState)(struct IDirectInputDeviceA *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDeviceA *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDeviceA *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDeviceA *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDeviceA *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDeviceA *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDeviceA *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDeviceA *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDeviceA *, HINSTANCE, DWORD, GUID *);
};

struct IDirectInputA {
    struct IDirectInputAVtbl *lpVtbl;
};

struct IDirectInputDeviceA {
    struct IDirectInputDeviceAVtbl *lpVtbl;
};

struct IDirectInputAVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputA *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputA *);
    ULONG (*Release)(struct IDirectInputA *);
    HRESULT (*CreateDevice)(struct IDirectInputA *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInputA *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInputA *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInputA *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputA *, HINSTANCE, DWORD);
};

struct DIDEVICEINSTANCEA {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[260];
    CHAR tszProductName[260];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
};

typedef struct IDirectInputDevice7A IDirectInputDevice7A, *PIDirectInputDevice7A;

typedef struct IDirectInputDevice7AVtbl IDirectInputDevice7AVtbl, *PIDirectInputDevice7AVtbl;

typedef struct DIEFFECT DIEFFECT, *PDIEFFECT;

typedef struct DIEFFECT *LPCDIEFFECT;

typedef struct IDirectInputEffect IDirectInputEffect, *PIDirectInputEffect;

typedef struct IDirectInputEffect *LPDIRECTINPUTEFFECT;

typedef struct DIEFFECTINFOA DIEFFECTINFOA, *PDIEFFECTINFOA;

typedef struct DIEFFECTINFOA *LPCDIEFFECTINFOA;

typedef BOOL (*LPDIENUMEFFECTSCALLBACKA)(LPCDIEFFECTINFOA, LPVOID);

typedef struct DIEFFECTINFOA *LPDIEFFECTINFOA;

typedef BOOL (*LPDIENUMCREATEDEFFECTOBJECTSCALLBACK)(LPDIRECTINPUTEFFECT, LPVOID);

typedef struct DIEFFESCAPE *LPDIEFFESCAPE;

typedef struct DIDEVICEOBJECTDATA *LPCDIDEVICEOBJECTDATA;

typedef CHAR *LPCSTR;

typedef struct DIFILEEFFECT DIFILEEFFECT, *PDIFILEEFFECT;

typedef struct DIFILEEFFECT *LPCDIFILEEFFECT;

typedef BOOL (*LPDIENUMEFFECTSINFILECALLBACK)(LPCDIFILEEFFECT, LPVOID);

typedef struct DIFILEEFFECT *LPDIFILEEFFECT;

typedef struct IDirectInputEffectVtbl IDirectInputEffectVtbl, *PIDirectInputEffectVtbl;

typedef GUID *LPGUID;

typedef struct DIEFFECT *LPDIEFFECT;

struct IDirectInputEffect {
    struct IDirectInputEffectVtbl *lpVtbl;
};

struct DIEFFECTINFOA {
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    CHAR tszName[260];
};

struct DIEFFECT {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    LPDWORD rgdwAxes;
    LPLONG rglDirection;
    LPDIENVELOPE lpEnvelope;
    DWORD cbTypeSpecificParams;
    LPVOID lpvTypeSpecificParams;
    DWORD dwStartDelay;
};

struct IDirectInputEffectVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputEffect *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputEffect *);
    ULONG (*Release)(struct IDirectInputEffect *);
    HRESULT (*Initialize)(struct IDirectInputEffect *, HINSTANCE, DWORD, GUID *);
    HRESULT (*GetEffectGuid)(struct IDirectInputEffect *, LPGUID);
    HRESULT (*GetParameters)(struct IDirectInputEffect *, LPDIEFFECT, DWORD);
    HRESULT (*SetParameters)(struct IDirectInputEffect *, LPCDIEFFECT, DWORD);
    HRESULT (*Start)(struct IDirectInputEffect *, DWORD, DWORD);
    HRESULT (*Stop)(struct IDirectInputEffect *);
    HRESULT (*GetEffectStatus)(struct IDirectInputEffect *, LPDWORD);
    HRESULT (*Download)(struct IDirectInputEffect *);
    HRESULT (*Unload)(struct IDirectInputEffect *);
    HRESULT (*Escape)(struct IDirectInputEffect *, LPDIEFFESCAPE);
};

struct IDirectInputDevice7A {
    struct IDirectInputDevice7AVtbl *lpVtbl;
};

struct DIFILEEFFECT {
    DWORD dwSize;
    GUID GuidEffect;
    LPCDIEFFECT lpDiEffect;
    CHAR szFriendlyName[260];
};

struct IDirectInputDevice7AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice7A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice7A *);
    ULONG (*Release)(struct IDirectInputDevice7A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice7A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice7A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice7A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice7A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice7A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice7A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice7A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice7A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice7A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice7A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice7A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice7A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice7A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice7A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice7A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice7A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice7A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice7A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice7A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice7A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice7A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice7A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice7A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice7A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice7A *, LPCSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice7A *, LPCSTR, DWORD, LPDIFILEEFFECT, DWORD);
};

typedef struct DIDEVICEOBJECTDATA_DX3 DIDEVICEOBJECTDATA_DX3, *PDIDEVICEOBJECTDATA_DX3;

struct DIDEVICEOBJECTDATA_DX3 {
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
};

typedef struct _DIDEVICEIMAGEINFOA _DIDEVICEIMAGEINFOA, *P_DIDEVICEIMAGEINFOA;

typedef struct tagRECT tagRECT, *PtagRECT;

typedef struct tagRECT RECT;

typedef struct tagPOINT tagPOINT, *PtagPOINT;

typedef struct tagPOINT POINT;

struct tagPOINT {
    LONG x;
    LONG y;
};

struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct _DIDEVICEIMAGEINFOA {
    CHAR tszImagePath[260];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
};

typedef struct DIEFFECTINFOW DIEFFECTINFOW, *PDIEFFECTINFOW;

typedef struct DIEFFECTINFOW *LPCDIEFFECTINFOW;

typedef BOOL (*LPDIENUMEFFECTSCALLBACKW)(LPCDIEFFECTINFOW, LPVOID);

struct DIEFFECTINFOW {
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    WCHAR tszName[260];
};

typedef struct _DIDEVICEIMAGEINFOHEADERW _DIDEVICEIMAGEINFOHEADERW, *P_DIDEVICEIMAGEINFOHEADERW;

typedef struct _DIDEVICEIMAGEINFOW _DIDEVICEIMAGEINFOW, *P_DIDEVICEIMAGEINFOW;

typedef struct _DIDEVICEIMAGEINFOW *LPDIDEVICEIMAGEINFOW;

struct _DIDEVICEIMAGEINFOW {
    WCHAR tszImagePath[260];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
};

struct _DIDEVICEIMAGEINFOHEADERW {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    LPDIDEVICEIMAGEINFOW lprgImageInfoArray;
};

typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICE;

typedef struct IDirectInputDevice8A IDirectInputDevice8A, *PIDirectInputDevice8A;

typedef struct IDirectInputDevice8AVtbl IDirectInputDevice8AVtbl, *PIDirectInputDevice8AVtbl;

typedef struct _DIACTIONFORMATA _DIACTIONFORMATA, *P_DIACTIONFORMATA;

typedef struct _DIACTIONFORMATA *LPDIACTIONFORMATA;

typedef struct _DIDEVICEIMAGEINFOHEADERA _DIDEVICEIMAGEINFOHEADERA, *P_DIDEVICEIMAGEINFOHEADERA;

typedef struct _DIDEVICEIMAGEINFOHEADERA *LPDIDEVICEIMAGEINFOHEADERA;

typedef struct _DIACTIONA _DIACTIONA, *P_DIACTIONA;

typedef struct _DIACTIONA *LPDIACTIONA;

typedef struct _FILETIME _FILETIME, *P_FILETIME;

typedef struct _FILETIME FILETIME;

typedef struct _DIDEVICEIMAGEINFOA *LPDIDEVICEIMAGEINFOA;

typedef union _union_2537 _union_2537, *P_union_2537;

struct IDirectInputDevice8A {
    struct IDirectInputDevice8AVtbl *lpVtbl;
};

struct _DIDEVICEIMAGEINFOHEADERA {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    LPDIDEVICEIMAGEINFOA lprgImageInfoArray;
};

struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

struct IDirectInputDevice8AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice8A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice8A *);
    ULONG (*Release)(struct IDirectInputDevice8A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice8A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice8A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice8A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice8A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice8A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice8A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice8A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice8A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice8A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice8A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice8A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice8A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice8A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice8A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice8A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice8A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice8A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice8A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice8A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice8A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice8A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice8A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice8A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice8A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice8A *, LPCSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice8A *, LPCSTR, DWORD, LPDIFILEEFFECT, DWORD);
    HRESULT (*BuildActionMap)(struct IDirectInputDevice8A *, LPDIACTIONFORMATA, LPCSTR, DWORD);
    HRESULT (*SetActionMap)(struct IDirectInputDevice8A *, LPDIACTIONFORMATA, LPCSTR, DWORD);
    HRESULT (*GetImageInfo)(struct IDirectInputDevice8A *, LPDIDEVICEIMAGEINFOHEADERA);
};

union _union_2537 {
    LPCSTR lptszActionName;
    UINT uResIdString;
};

struct _DIACTIONA {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union _union_2537 field3_0xc;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
};

struct _DIACTIONFORMATA {
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    LPDIACTIONA rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    CHAR tszActionMap[260];
};

typedef struct IDirectInput2W IDirectInput2W, *PIDirectInput2W;

typedef struct IDirectInput2WVtbl IDirectInput2WVtbl, *PIDirectInput2WVtbl;

typedef struct IDirectInputDeviceW *LPDIRECTINPUTDEVICEW;

typedef struct DIDEVICEINSTANCEW *LPCDIDEVICEINSTANCEW;

typedef BOOL (*LPDIENUMDEVICESCALLBACKW)(LPCDIDEVICEINSTANCEW, LPVOID);

typedef WCHAR *LPCWSTR;

struct IDirectInput2WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput2W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput2W *);
    ULONG (*Release)(struct IDirectInput2W *);
    HRESULT (*CreateDevice)(struct IDirectInput2W *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput2W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput2W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput2W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput2W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput2W *, GUID *, LPCWSTR, LPGUID);
};

struct IDirectInput2W {
    struct IDirectInput2WVtbl *lpVtbl;
};

typedef struct DIPROPDWORD DIPROPDWORD, *PDIPROPDWORD;

struct DIPROPDWORD {
    struct DIPROPHEADER diph;
    DWORD dwData;
};

typedef struct DIPROPCPOINTS DIPROPCPOINTS, *PDIPROPCPOINTS;

typedef struct _CPOINT _CPOINT, *P_CPOINT;

typedef struct _CPOINT CPOINT;

struct _CPOINT {
    LONG lP;
    DWORD dwLog;
};

struct DIPROPCPOINTS {
    struct DIPROPHEADER diph;
    DWORD dwCPointsNum;
    CPOINT cp[8];
};

typedef struct IDirectInput2A IDirectInput2A, *PIDirectInput2A;

typedef struct IDirectInput2AVtbl IDirectInput2AVtbl, *PIDirectInput2AVtbl;

struct IDirectInput2AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput2A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput2A *);
    ULONG (*Release)(struct IDirectInput2A *);
    HRESULT (*CreateDevice)(struct IDirectInput2A *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput2A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput2A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput2A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput2A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput2A *, GUID *, LPCSTR, LPGUID);
};

struct IDirectInput2A {
    struct IDirectInput2AVtbl *lpVtbl;
};

typedef struct _DICOLORSET _DICOLORSET, *P_DICOLORSET;

typedef struct _DICOLORSET DICOLORSET;

typedef DICOLORSET *LPCDICOLORSET;

struct _DICOLORSET {
    DWORD dwSize;
    D3DCOLOR cTextFore;
    D3DCOLOR cTextHighlight;
    D3DCOLOR cCalloutLine;
    D3DCOLOR cCalloutHighlight;
    D3DCOLOR cBorder;
    D3DCOLOR cControlFill;
    D3DCOLOR cHighlightFill;
    D3DCOLOR cAreaFill;
};

typedef struct IDirectInputDevice7W IDirectInputDevice7W, *PIDirectInputDevice7W;

typedef struct IDirectInputDevice7WVtbl IDirectInputDevice7WVtbl, *PIDirectInputDevice7WVtbl;

typedef struct DIEFFECTINFOW *LPDIEFFECTINFOW;

struct IDirectInputDevice7WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice7W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice7W *);
    ULONG (*Release)(struct IDirectInputDevice7W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice7W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice7W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice7W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice7W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice7W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice7W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice7W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice7W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice7W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice7W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice7W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice7W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice7W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice7W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice7W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice7W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice7W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice7W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice7W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice7W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice7W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice7W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice7W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice7W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice7W *, LPCWSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice7W *, LPCWSTR, DWORD, LPDIFILEEFFECT, DWORD);
};

struct IDirectInputDevice7W {
    struct IDirectInputDevice7WVtbl *lpVtbl;
};

typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8A;

typedef struct _DIDEVICEIMAGEINFOHEADERA DIDEVICEIMAGEINFOHEADERA;

typedef DIDEVICEIMAGEINFOHEADERA DIDEVICEIMAGEINFOHEADER;

typedef struct DICONDITION DICONDITION, *PDICONDITION;

struct DICONDITION {
    LONG lOffset;
    LONG lPositiveCoefficient;
    LONG lNegativeCoefficient;
    DWORD dwPositiveSaturation;
    DWORD dwNegativeSaturation;
    LONG lDeadBand;
};

typedef struct _DIDEVICEIMAGEINFOHEADERW *LPDIDEVICEIMAGEINFOHEADERW;

typedef struct DIDEVICEINSTANCE_DX3A DIDEVICEINSTANCE_DX3A, *PDIDEVICEINSTANCE_DX3A;

struct DIDEVICEINSTANCE_DX3A {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[260];
    CHAR tszProductName[260];
};

typedef struct IDirectInputDevice8W IDirectInputDevice8W, *PIDirectInputDevice8W;

typedef struct IDirectInputDevice8WVtbl IDirectInputDevice8WVtbl, *PIDirectInputDevice8WVtbl;

typedef struct _DIACTIONFORMATW _DIACTIONFORMATW, *P_DIACTIONFORMATW;

typedef struct _DIACTIONFORMATW *LPDIACTIONFORMATW;

typedef struct _DIACTIONW _DIACTIONW, *P_DIACTIONW;

typedef struct _DIACTIONW *LPDIACTIONW;

typedef union _union_2539 _union_2539, *P_union_2539;

struct _DIACTIONFORMATW {
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    LPDIACTIONW rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    WCHAR tszActionMap[260];
};

union _union_2539 {
    LPCWSTR lptszActionName;
    UINT uResIdString;
};

struct _DIACTIONW {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union _union_2539 field3_0xc;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
};

struct IDirectInputDevice8WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice8W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice8W *);
    ULONG (*Release)(struct IDirectInputDevice8W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice8W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice8W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice8W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice8W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice8W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice8W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice8W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice8W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice8W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice8W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice8W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice8W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice8W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice8W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice8W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice8W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice8W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice8W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice8W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice8W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice8W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice8W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice8W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice8W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice8W *, LPCWSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice8W *, LPCWSTR, DWORD, LPDIFILEEFFECT, DWORD);
    HRESULT (*BuildActionMap)(struct IDirectInputDevice8W *, LPDIACTIONFORMATW, LPCWSTR, DWORD);
    HRESULT (*SetActionMap)(struct IDirectInputDevice8W *, LPDIACTIONFORMATW, LPCWSTR, DWORD);
    HRESULT (*GetImageInfo)(struct IDirectInputDevice8W *, LPDIDEVICEIMAGEINFOHEADERW);
};

struct IDirectInputDevice8W {
    struct IDirectInputDevice8WVtbl *lpVtbl;
};

typedef struct DIPROPCAL DIPROPCAL, *PDIPROPCAL;

struct DIPROPCAL {
    struct DIPROPHEADER diph;
    LONG lMin;
    LONG lCenter;
    LONG lMax;
};

typedef struct _DIACTIONFORMATW DIACTIONFORMATW;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A DIDEVICEOBJECTINSTANCE_DX3A, *PDIDEVICEOBJECTINSTANCE_DX3A;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A *LPDIDEVICEOBJECTINSTANCE_DX3A;

struct DIDEVICEOBJECTINSTANCE_DX3A {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[260];
};

typedef struct IDirectInputDevice2A IDirectInputDevice2A, *PIDirectInputDevice2A;

typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2;

typedef struct IDirectInputDevice2AVtbl IDirectInputDevice2AVtbl, *PIDirectInputDevice2AVtbl;

struct IDirectInputDevice2A {
    struct IDirectInputDevice2AVtbl *lpVtbl;
};

struct IDirectInputDevice2AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice2A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice2A *);
    ULONG (*Release)(struct IDirectInputDevice2A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice2A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice2A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice2A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice2A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice2A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice2A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice2A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice2A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice2A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice2A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice2A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice2A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice2A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice2A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice2A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice2A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice2A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice2A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice2A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice2A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice2A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice2A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice2A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice2A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
};

typedef struct DIPROPGUIDANDPATH DIPROPGUIDANDPATH, *PDIPROPGUIDANDPATH;

struct DIPROPGUIDANDPATH {
    struct DIPROPHEADER diph;
    GUID guidClass;
    WCHAR wszPath[260];
};

typedef struct IDirectInput8AVtbl IDirectInput8AVtbl, *PIDirectInput8AVtbl;

typedef struct IDirectInput8A IDirectInput8A, *PIDirectInput8A;

typedef BOOL (*LPDIENUMDEVICESBYSEMANTICSCBA)(LPCDIDEVICEINSTANCEA, LPDIRECTINPUTDEVICE8A, DWORD, DWORD, LPVOID);

typedef BOOL (*LPDICONFIGUREDEVICESCALLBACK)(struct IUnknown *, LPVOID);

typedef struct _DICONFIGUREDEVICESPARAMSA _DICONFIGUREDEVICESPARAMSA, *P_DICONFIGUREDEVICESPARAMSA;

typedef struct _DICONFIGUREDEVICESPARAMSA *LPDICONFIGUREDEVICESPARAMSA;

struct _DICONFIGUREDEVICESPARAMSA {
    DWORD dwSize;
    DWORD dwcUsers;
    LPSTR lptszUserNames;
    DWORD dwcFormats;
    LPDIACTIONFORMATA lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    struct IUnknown *lpUnkDDSTarget;
};

struct IDirectInput8AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput8A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput8A *);
    ULONG (*Release)(struct IDirectInput8A *);
    HRESULT (*CreateDevice)(struct IDirectInput8A *, GUID *, LPDIRECTINPUTDEVICE8A *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput8A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput8A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput8A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput8A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput8A *, GUID *, LPCSTR, LPGUID);
    HRESULT (*EnumDevicesBySemantics)(struct IDirectInput8A *, LPCSTR, LPDIACTIONFORMATA, LPDIENUMDEVICESBYSEMANTICSCBA, LPVOID, DWORD);
    HRESULT (*ConfigureDevices)(struct IDirectInput8A *, LPDICONFIGUREDEVICESCALLBACK, LPDICONFIGUREDEVICESPARAMSA, DWORD, LPVOID);
};

struct IDirectInput8A {
    struct IDirectInput8AVtbl *lpVtbl;
};

typedef struct _DICONFIGUREDEVICESPARAMSW _DICONFIGUREDEVICESPARAMSW, *P_DICONFIGUREDEVICESPARAMSW;

typedef struct _DICONFIGUREDEVICESPARAMSW *LPDICONFIGUREDEVICESPARAMSW;

typedef WCHAR *LPWSTR;

struct _DICONFIGUREDEVICESPARAMSW {
    DWORD dwSize;
    DWORD dwcUsers;
    LPWSTR lptszUserNames;
    DWORD dwcFormats;
    LPDIACTIONFORMATW lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    struct IUnknown *lpUnkDDSTarget;
};

typedef struct _DIACTIONFORMATA DIACTIONFORMATA;

typedef LPDIDEVICEIMAGEINFOA LPDIDEVICEIMAGEINFO;

typedef struct _DICONFIGUREDEVICESPARAMSA DICONFIGUREDEVICESPARAMSA;

typedef DICONFIGUREDEVICESPARAMSA DICONFIGUREDEVICESPARAMS;

typedef struct _DIACTIONA DIACTIONA;

typedef LPDICONFIGUREDEVICESPARAMSA LPDICONFIGUREDEVICESPARAMS;

typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7;

typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8;

typedef struct DIJOYSTATE DIJOYSTATE, *PDIJOYSTATE;

typedef struct DIJOYSTATE *LPDIJOYSTATE;

struct DIJOYSTATE {
    LONG lX;
    LONG lY;
    LONG lZ;
    LONG lRx;
    LONG lRy;
    LONG lRz;
    LONG rglSlider[2];
    DWORD rgdwPOV[4];
    BYTE rgbButtons[32];
};

typedef struct DIDEVICEOBJECTINSTANCE_DX3W *LPDIDEVICEOBJECTINSTANCE_DX3W;

typedef struct _DIDEVICEIMAGEINFOW DIDEVICEIMAGEINFOW;

typedef struct DICONDITION *LPDICONDITION;

typedef struct _DIDEVICEIMAGEINFOHEADERW DIDEVICEIMAGEINFOHEADERW;

typedef DIDEVICEIMAGEINFOHEADERW *LPCDIDEVICEIMAGEINFOHEADERW;

typedef DIDEVICEIMAGEINFOHEADERA *LPCDIDEVICEIMAGEINFOHEADERA;

typedef struct IDirectInputWVtbl IDirectInputWVtbl, *PIDirectInputWVtbl;

typedef struct IDirectInputW IDirectInputW, *PIDirectInputW;

struct IDirectInputW {
    struct IDirectInputWVtbl *lpVtbl;
};

struct IDirectInputWVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputW *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputW *);
    ULONG (*Release)(struct IDirectInputW *);
    HRESULT (*CreateDevice)(struct IDirectInputW *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInputW *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInputW *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInputW *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputW *, HINSTANCE, DWORD);
};

typedef struct DIPROPCAL *LPDIPROPCAL;

typedef struct _DIDEVICEIMAGEINFOA DIDEVICEIMAGEINFOA;

typedef DIACTIONFORMATA DIACTIONFORMAT;

typedef struct _DIOBJECTDATAFORMAT DIOBJECTDATAFORMAT;

typedef DIOBJECTDATAFORMAT *LPCDIOBJECTDATAFORMAT;

typedef struct DIPROPSTRING DIPROPSTRING, *PDIPROPSTRING;

typedef struct DIPROPSTRING *LPCDIPROPSTRING;

struct DIPROPSTRING {
    struct DIPROPHEADER diph;
    WCHAR wsz[260];
};

typedef struct DIRAMPFORCE DIRAMPFORCE, *PDIRAMPFORCE;

typedef struct DIRAMPFORCE *LPDIRAMPFORCE;

struct DIRAMPFORCE {
    LONG lStart;
    LONG lEnd;
};

typedef DICONFIGUREDEVICESPARAMS *LPCDICONFIGUREDEVICESPARAMS;

typedef struct DICUSTOMFORCE DICUSTOMFORCE, *PDICUSTOMFORCE;

typedef struct DICUSTOMFORCE *LPDICUSTOMFORCE;

struct DICUSTOMFORCE {
    DWORD cChannels;
    DWORD dwSamplePeriod;
    DWORD cSamples;
    LPLONG rglForceData;
};

typedef struct DIPROPPOINTER *LPDIPROPPOINTER;

typedef struct DIDEVICEOBJECTDATA_DX3 *LPCDIDEVICEOBJECTDATA_DX;

typedef struct IDirectInput8WVtbl IDirectInput8WVtbl, *PIDirectInput8WVtbl;

typedef struct IDirectInput8W IDirectInput8W, *PIDirectInput8W;

typedef struct IDirectInputDevice8W *LPDIRECTINPUTDEVICE8W;

typedef BOOL (*LPDIENUMDEVICESBYSEMANTICSCBW)(LPCDIDEVICEINSTANCEW, LPDIRECTINPUTDEVICE8W, DWORD, DWORD, LPVOID);

struct IDirectInput8W {
    struct IDirectInput8WVtbl *lpVtbl;
};

struct IDirectInput8WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput8W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput8W *);
    ULONG (*Release)(struct IDirectInput8W *);
    HRESULT (*CreateDevice)(struct IDirectInput8W *, GUID *, LPDIRECTINPUTDEVICE8W *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput8W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput8W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput8W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput8W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput8W *, GUID *, LPCWSTR, LPGUID);
    HRESULT (*EnumDevicesBySemantics)(struct IDirectInput8W *, LPCWSTR, LPDIACTIONFORMATW, LPDIENUMDEVICESBYSEMANTICSCBW, LPVOID, DWORD);
    HRESULT (*ConfigureDevices)(struct IDirectInput8W *, LPDICONFIGUREDEVICESCALLBACK, LPDICONFIGUREDEVICESPARAMSW, DWORD, LPVOID);
};

typedef LPDIDEVICEINSTANCEA LPDIDEVICEINSTANCE;

typedef struct IDirectInputDevice2WVtbl IDirectInputDevice2WVtbl, *PIDirectInputDevice2WVtbl;

typedef struct IDirectInputDevice2W IDirectInputDevice2W, *PIDirectInputDevice2W;

struct IDirectInputDevice2W {
    struct IDirectInputDevice2WVtbl *lpVtbl;
};

struct IDirectInputDevice2WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice2W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice2W *);
    ULONG (*Release)(struct IDirectInputDevice2W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice2W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice2W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice2W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice2W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice2W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice2W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice2W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice2W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice2W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice2W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice2W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice2W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice2W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice2W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice2W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice2W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice2W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice2W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice2W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice2W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice2W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice2W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice2W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice2W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
};

typedef struct DIPERIODIC DIPERIODIC, *PDIPERIODIC;

typedef struct DIPERIODIC *LPDIPERIODIC;

struct DIPERIODIC {
    DWORD dwMagnitude;
    LONG lOffset;
    DWORD dwPhase;
    DWORD dwPeriod;
};

typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7A;

typedef struct IDirectInputDevice7W *LPDIRECTINPUTDEVICE7W;

typedef DIACTIONFORMAT *LPCDIACTIONFORMAT;

typedef struct DIEFFECT_DX5 DIEFFECT_DX5, *PDIEFFECT_DX5;

struct DIEFFECT_DX5 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    LPDWORD rgdwAxes;
    LPLONG rglDirection;
    LPDIENVELOPE lpEnvelope;
    DWORD cbTypeSpecificParams;
    LPVOID lpvTypeSpecificParams;
};

typedef struct DIDEVICEINSTANCEA DIDEVICEINSTANCE;

typedef struct DIJOYSTATE2 DIJOYSTATE2, *PDIJOYSTATE2;

struct DIJOYSTATE2 {
    LONG lX;
    LONG lY;
    LONG lZ;
    LONG lRx;
    LONG lRy;
    LONG lRz;
    LONG rglSlider[2];
    DWORD rgdwPOV[4];
    BYTE rgbButtons[128];
    LONG lVX;
    LONG lVY;
    LONG lVZ;
    LONG lVRx;
    LONG lVRy;
    LONG lVRz;
    LONG rglVSlider[2];
    LONG lAX;
    LONG lAY;
    LONG lAZ;
    LONG lARx;
    LONG lARy;
    LONG lARz;
    LONG rglASlider[2];
    LONG lFX;
    LONG lFY;
    LONG lFZ;
    LONG lFRx;
    LONG lFRy;
    LONG lFRz;
    LONG rglFSlider[2];
};

typedef struct DIDEVICEINSTANCE_DX3W *LPDIDEVICEINSTANCE_DX3W;

typedef struct _CPOINT *PCPOINT;

typedef struct DIDEVICEOBJECTINSTANCEA DIDEVICEOBJECTINSTANCE;

typedef DIDEVICEOBJECTINSTANCE *LPCDIDEVICEOBJECTINSTANCE;

typedef struct _DIMOUSESTATE _DIMOUSESTATE, *P_DIMOUSESTATE;

typedef struct _DIMOUSESTATE *LPDIMOUSESTATE;

struct _DIMOUSESTATE {
    LONG lX;
    LONG lY;
    LONG lZ;
    BYTE rgbButtons[4];
};

typedef struct DIEFFECTINFOA DIEFFECTINFO;

typedef struct DIRAMPFORCE *LPCDIRAMPFORCE;

typedef struct DIDEVICEOBJECTDATA_DX3 *LPDIDEVICEOBJECTDATA_DX3;

typedef struct _DIDATAFORMAT *LPDIDATAFORMAT;

typedef struct DIPROPCAL *LPCDIPROPCAL;

typedef DIDEVICEIMAGEINFOA *LPCDIDEVICEIMAGEINFOA;

typedef struct DIPROPRANGE DIPROPRANGE, *PDIPROPRANGE;

struct DIPROPRANGE {
    struct DIPROPHEADER diph;
    LONG lMin;
    LONG lMax;
};

typedef LPDIEFFECTINFOA LPDIEFFECTINFO;

typedef struct DIDEVICEINSTANCE_DX3A *LPDIDEVICEINSTANCE_DX3A;

typedef struct DICONSTANTFORCE *LPCDICONSTANTFORCE;

typedef DIDEVICEIMAGEINFOW *LPCDIDEVICEIMAGEINFOW;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A *LPCDIDEVICEOBJECTINSTANCE_DX3A;

typedef struct _DIACTIONW DIACTIONW;

typedef DIACTIONW *LPCDIACTIONW;

typedef struct DIENVELOPE *LPCDIENVELOPE;

typedef struct IDirectInput7WVtbl IDirectInput7WVtbl, *PIDirectInput7WVtbl;

typedef struct IDirectInput7W IDirectInput7W, *PIDirectInput7W;

struct IDirectInput7WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput7W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput7W *);
    ULONG (*Release)(struct IDirectInput7W *);
    HRESULT (*CreateDevice)(struct IDirectInput7W *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput7W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput7W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput7W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput7W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput7W *, GUID *, LPCWSTR, LPGUID);
    HRESULT (*CreateDeviceEx)(struct IDirectInput7W *, GUID *, IID *, LPVOID *, LPUNKNOWN);
};

struct IDirectInput7W {
    struct IDirectInput7WVtbl *lpVtbl;
};

typedef struct IDirectInput7W *LPDIRECTINPUT7W;

typedef struct IDirectInput7A IDirectInput7A, *PIDirectInput7A;

typedef struct IDirectInput7A *LPDIRECTINPUT7A;

typedef struct IDirectInput7AVtbl IDirectInput7AVtbl, *PIDirectInput7AVtbl;

struct IDirectInput7A {
    struct IDirectInput7AVtbl *lpVtbl;
};

struct IDirectInput7AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput7A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput7A *);
    ULONG (*Release)(struct IDirectInput7A *);
    HRESULT (*CreateDevice)(struct IDirectInput7A *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput7A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput7A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput7A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput7A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput7A *, GUID *, LPCSTR, LPGUID);
    HRESULT (*CreateDeviceEx)(struct IDirectInput7A *, GUID *, IID *, LPVOID *, LPUNKNOWN);
};

typedef struct DIPROPSTRING *LPDIPROPSTRING;

typedef DIACTIONA *LPCDIACTIONA;

typedef struct _DICONFIGUREDEVICESPARAMSW DICONFIGUREDEVICESPARAMSW;

typedef struct IDirectInput8W *LPDIRECTINPUT8W;

typedef struct IDirectInput8A *LPDIRECTINPUT8A;

typedef DIACTIONFORMATW *LPCDIACTIONFORMATW;

typedef struct DIPROPGUIDANDPATH *LPDIPROPGUIDANDPATH;

typedef DIDEVICEIMAGEINFOHEADER *LPCDIDEVICEIMAGEINFOHEADER;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A DIDEVICEOBJECTINSTANCE_DX3;

typedef DIACTIONFORMATA *LPCDIACTIONFORMATA;

typedef struct _DICOLORSET *LPDICOLORSET;

typedef DIDEVICEIMAGEINFOA DIDEVICEIMAGEINFO;

typedef LPDIEFFECT LPDIEFFECT_DX6;

typedef struct DIEFFECT_DX5 *LPDIEFFECT_DX5;

typedef LPDIDEVICEINSTANCE_DX3A LPDIDEVICEINSTANCE_DX3;

typedef struct DIDEVICEINSTANCE_DX3A DIDEVICEINSTANCE_DX3;

typedef LPDIDEVICEOBJECTINSTANCEA LPDIDEVICEOBJECTINSTANCE;

typedef struct _DIMOUSESTATE2 *LPDIMOUSESTATE2;

typedef struct DIPROPCPOINTS *LPCDIPROPCPOINTS;

typedef DIDEVICEINSTANCE *LPCDIDEVICEINSTANCE;

typedef DIEFFECTINFO *LPCDIEFFECTINFO;

typedef DIACTIONA DIACTION;

typedef struct DIPROPDWORD *LPCDIPROPDWORD;

typedef struct DIPROPGUIDANDPATH *LPCDIPROPGUIDANDPATH;

typedef DICONFIGUREDEVICESPARAMSW *LPCDICONFIGUREDEVICESPARAMSW;

typedef struct IDirectInputDevice2W *LPDIRECTINPUTDEVICE2W;

typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2A;

typedef DICONFIGUREDEVICESPARAMSA *LPCDICONFIGUREDEVICESPARAMSA;

typedef struct DIEFFECT DIEFFECT_DX6;

typedef struct DIEFFECT_DX5 *LPCDIEFFECT_DX5;

typedef LPDIDEVICEIMAGEINFOHEADERA LPDIDEVICEIMAGEINFOHEADER;

typedef struct DIDEVICEINSTANCE_DX3A *LPCDIDEVICEINSTANCE_DX3A;

typedef DIDEVICEIMAGEINFO *LPCDIDEVICEIMAGEINFO;

typedef LPDIACTIONA LPDIACTION;

typedef DIDEVICEINSTANCE_DX3 *LPCDIDEVICEINSTANCE_DX3;

typedef struct IDirectInputA *LPDIRECTINPUTA;

typedef struct DIDEVICEINSTANCE_DX3W *LPCDIDEVICEINSTANCE_DX3W;

typedef struct _DIMOUSESTATE DIMOUSESTATE;

typedef struct IDirectInputW *LPDIRECTINPUTW;

typedef struct DIPERIODIC *LPCDIPERIODIC;

typedef struct DICUSTOMFORCE *LPCDICUSTOMFORCE;

typedef struct DIJOYSTATE2 *LPDIJOYSTATE2;

typedef LPDIACTIONFORMATA LPDIACTIONFORMAT;

typedef struct DICONSTANTFORCE *LPDICONSTANTFORCE;

typedef struct IDirectInput2A *LPDIRECTINPUT2A;

typedef struct DIPROPRANGE *LPDIPROPRANGE;

typedef struct IDirectInput2W *LPDIRECTINPUT2W;

typedef DIDEVICEOBJECTINSTANCE_DX3 *LPCDIDEVICEOBJECTINSTANCE_DX3;

typedef struct DIPROPRANGE *LPCDIPROPRANGE;

typedef DIACTION *LPCDIACTION;

typedef LPDIDEVICEOBJECTINSTANCE_DX3A LPDIDEVICEOBJECTINSTANCE_DX3;

typedef struct DICONDITION *LPCDICONDITION;

typedef struct IDirectInput2A *LPDIRECTINPUT2;

typedef struct DIPROPCPOINTS *LPDIPROPCPOINTS;

typedef struct IDirectInput8A *LPDIRECTINPUT8;

typedef struct IDirectInput7A *LPDIRECTINPUT7;

typedef struct DIPROPDWORD *LPDIPROPDWORD;

#define DIBUTTON_FOOTBALLP_DEVICE 335561982

#define DIBUTTON_SOCCERO_DEVICE 503334142

#define DIKEYBOARD_AX 2164262038

#define DIAXIS_FLYINGH_TORQUE 100817412

#define DIKEYBOARD_LBRACKET 2164261914

#define DIKEYBOARD_AT 2164262033

#define DIBUTTON_FOOTBALLP_HELP 335545347

#define DIAXIS_2DCONTROL_LATERAL 587235841

#define DIBUTTON_TPS_STEPLEFT 167789575

#define DIEP_DIRECTION 64

#define DIBUTTON_BBALLD_JUMP 318768129

#define DIAXIS_FISHING_MOVE 234947074

#define DIHATSWITCH_CADF_HATSWITCH 620774913

#define DI8DEVTYPE1STPERSON_LIMITED 1

#define DIBUTTON_BBALLO_POST 302007308

#define DIBUTTON_FLYINGC_PAUSE 67126524

#define DIKEYBOARD_MULTIPLY 2164261943

#define DIDC_DEADBAND 16384

#define DIK_MINUS 12

#define DIAXIS_FOOTBALLO_MOVE 369164802

#define DIHATSWITCH_3DCONTROL_HATSWITCH 603997697

#define DIBUTTON_SOCCERD_PAUSE 520111356

#define DIKEYBOARD_F8 2164261954

#define DIKEYBOARD_F7 2164261953

#define DIKEYBOARD_F9 2164261955

#define DIKEYBOARD_F4 2164261950

#define DIKEYBOARD_F3 2164261949

#define DIBUTTON_FLYINGH_PAUSE 100680956

#define DIKEYBOARD_F6 2164261952

#define DIKEYBOARD_F5 2164261951

#define DIKEYBOARD_F2 2164261948

#define DIBUTTON_ARCADEP_FIRE 570426370

#define DIKEYBOARD_F1 2164261947

#define DIBUTTON_DRIVINGT_DASHBOARD 50355205

#define DIERR_HASEFFECTS 2147746308

#define DIBUTTON_DRIVINGR_MENU 16778493

#define DIDAL_RIGHTALIGNED 2

#define DIBUTTON_BIKINGM_DEVICE 469779710

#define DIBUTTON_MECHA_BACK_LINK 687949032

#define DIKEYBOARD_DECIMAL 2164261971

#define JOY_PASSDRIVERDATA 268435456

#define DIVIRTUAL_REMOTE_CONTROL 654311424

#define DIVOICE_VOICECOMMAND 2197816336

#define DIEFT_CONDITION 4

#define DI8DEVTYPEGAMEPAD_LIMITED 1

#define DIBUTTON_SPACESIM_RIGHT_LINK 117490924

#define DISDD_CONTINUE 1

#define DIBUTTON_HUNTING_WEAPON 218104835

#define DIBUTTON_SOCCERD_FORWARD_LINK 520176864

#define DIEDBSFL_ATTACHEDONLY 0

#define DIBUTTON_MECHA_FORWARD_LINK 687949024

#define DI8DEVTYPE1STPERSON_SHOOTER 4

#define DIAXIS_HOCKEYD_MOVE 436273666

#define DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK 184698092

#define DIBUTTON_FLYINGM_TARGET 83889155

#define DIK_INSERT 210

#define JOY_HWS_AUTOLOAD 268435456

#define DIBUTTON_BASEBALLP_LOOK 268452871

#define DIBUTTON_BASEBALLP_BASE 268436483

#define DIBUTTON_BASEBALLF_DIVE 285213702

#define DIBUTTON_ARCADEP_MENU 570426621

#define DIBUTTON_HOCKEYD_BLOCK 436208644

#define DIGDD_PEEK 1

#define DIERR_NOINTERFACE 2147500034

#define DIBUTTON_HOCKEYD_ZOOM 436225030

#define DI8DEVTYPEKEYBOARD_JAPANAX 11

#define DIKEYBOARD_WEBFORWARD 2164262121

#define DIEFT_STARTDELAY 32768

#define DIBUTTON_REMOTE_TV 654334984

#define DIPROP_GUIDANDPATH 12

#define DIK_CAPSLOCK 58

#define DI8DEVTYPE_DEVICE 17

#define DIKEYBOARD_RSHIFT 2164261942

#define DIBUTTON_FLYINGM_FLAPSUP 83907591

#define DIAXIS_FLYINGH_PITCH 100731394

#define DIKEYBOARD_POWER 2164262110

#define DIBUTTON_SPACESIM_MENU 117441789

#define DIBUTTON_FOOTBALLD_SELECT 385876994

#define DIBUTTON_FIGHTINGH_PAUSE 134235388

#define DIBUTTON_FPS_GLANCE_UP_LINK 151110880

#define DIBUTTON_RACQUET_FORWARD_LINK 536954080

#define DIBUTTON_BASEBALLP_DEVICE 268453118

#define DIBUTTON_BBALLD_TIMEOUT 318784520

#define DIBUTTON_HUNTING_FIRESECONDARY 218121227

#define DIBUTTON_ARCADEP_PAUSE 570443004

#define DIERR_OTHERAPPHASPRIO 2147942405

#define DIKEYBOARD_NUMPADENTER 2164262044

#define DIKEYBOARD_WEBFAVORITES 2164262118

#define DIBUTTON_FLYINGM_PAUSE 83903740

#define DIAXIS_FLYINGM_PITCH 83954178

#define DIAXIS_FLYINGM_BANK 83921409

#define DIKEYBOARD_TAB 2164261903

#define DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK 67618028

#define DISCL_EXCLUSIVE 1

#define DIBUTTON_SOCCERO_BACK_LINK 503399656

#define DIEP_ALLPARAMS_DX5 511

#define DIBUTTON_BASEBALLP_THROW 268436484

#define DIBUTTON_SPACESIM_DEVICE 117458174

#define DIBUTTON_FISHING_ROTATE_LEFT_LINK 235029732

#define DIVOICE_CHANNEL2 2197816322

#define DIVOICE_CHANNEL1 2197816321

#define DIVOICE_CHANNEL4 2197816324

#define DIVOICE_CHANNEL3 2197816323

#define DIVOICE_CHANNEL6 2197816326

#define DIVOICE_CHANNEL5 2197816325

#define DIVOICE_CHANNEL8 2197816328

#define DIVOICE_CHANNEL7 2197816327

#define DIBUTTON_SOCCERO_SUBSTITUTE 503333895

#define DI_EFFECTRESTARTED 4

#define DIBUTTON_STRATEGYR_MENU 184550653

#define DIBUTTON_3DCONTROL_DEVICE 603997438

#define DIBUTTON_SKIING_DEVICE 486556926

#define DIEDBSFL_FORCEFEEDBACK 256

#define DI8DEVTYPEMOUSE_TRACKBALL 5

#define DIBUTTON_BASEBALLF_PAUSE 285230332

#define DIBUTTON_SOCCERO_LEFT_LINK 503366884

#define DIBUTTON_BASEBALLF_BURST 285213700

#define DIBUTTON_SPACESIM_WEAPONS 117441538

#define DIAXIS_2DCONTROL_ROTATEZ 587350532

#define DIBUTTON_2DCONTROL_SELECT 587203585

#define DIBUTTON_FOOTBALLD_SUBSTITUTE 385893389

#define DIBUTTON_FOOTBALLD_ZOOM 385893388

#define DIBUTTON_3DCONTROL_SELECT 603980801

#define DIK_NEXTTRACK 153

#define DIBUTTON_HUNTING_DEVICE 218121470

#define DIERR_NOTFOUND 2147942402

#define DIBUTTON_CADF_DISPLAY 620774405

#define DIAXIS_RACQUET_LATERAL 536904193

#define DIAH_ERROR 2147483648

#define DIBUTTON_FLYINGM_GLANCE_LEFT_LINK 84395236

#define DIDC_POSNEGSATURATION 8192

#define DIBUTTON_BBALLD_BACK_LINK 318850280

#define DIBUTTON_FOOTBALLO_PAUSE 369116412

#define DIVIRTUAL_SPORTS_FOOTBALL_QBCK 352321536

#define DIPROPAUTOCENTER_OFF 0

#define DIBUTTON_DRIVINGT_WEAPONS 50334722

#define DIPROP_VIDPID 24

#define DIBUTTON_FLYINGM_GLANCE_DOWN_LINK 84395240

#define DIK_APOSTROPHE 40

#define DI8DEVTYPE_FLIGHT 23

#define DI8DEVTYPEDRIVING_LIMITED 1

#define DIHATSWITCH_ARCADES_VIEW 553666049

#define DIPROP_BUFFERSIZE 1

#define DIAXIS_SOCCERD_MOVE 520159746

#define DIBUTTON_FOOTBALLQ_FORWARD_LINK 352404704

#define DIBUTTON_FIGHTINGH_BLOCK 134218755

#define DIAXIS_SOCCERO_MOVE 503382530

#define DIKEYBOARD_WEBSEARCH 2164262117

#define DIBUTTON_SKIING_RIGHT_LINK 486589676

#define DI8DEVTYPEMOUSE_TOUCHPAD 4

#define DIBUTTON_FPS_CROUCH 150995973

#define DIK_DIVIDE 181

#define DIKEYBOARD_NUMLOCK 2164261957

#define DIBUTTON_DRIVINGR_BRAKE 16796676

#define DIBUTTON_TPS_ACTION 167773186

#define DIBUTTON_MECHA_DEVICE 687883518

#define DIEP_TYPESPECIFICPARAMS 256

#define DIVIRTUAL_SPORTS_HUNTING 218103808

#define DIBUTTON_HOCKEYO_PASS 419431426

#define DIAXIS_FOOTBALLO_LATERAL 369132033

#define DIAXIS_SPACESIM_CLIMB 117555716

#define DIHATSWITCH_BBALLO_GLANCE 302007809

#define DI8DEVTYPEJOYSTICK_LIMITED 1

#define DIBUTTON_HOCKEYG_STEAL 452985859

#define DIK_STOP 149

#define DIBUTTON_REMOTE_CABLE 654334985

#define DI8DEVTYPESUPPLEMENTAL_HANDTRACKER 5

#define DIAXIS_DRIVINGT_STEER 50366977

#define DIDOI_POLLED 32768

#define DIDFT_POV 16

#define DIAXIS_DRIVINGR_ACCELERATE 17011202

#define DIDFT_RELAXIS 1

#define DIPROP_USERNAME 25

#define DIBUTTON_TPS_GLANCE_LEFT_LINK 168281316

#define DIAXIS_STRATEGYR_ROTATE 184697347

#define DIK_POWER 222

#define DIDIFT_OVERLAY 2

#define DIBUTTON_BROWSER_PRINT 671106058

#define DIBUTTON_REMOTE_CD 654334986

#define DIKEYBOARD_DELETE 2164262099

#define DI8DEVTYPE_REMOTE 27

#define DIBUTTON_BBALLO_SPECIAL 301990917

#define DIAXIS_ANY_Y_1 4278272513

#define DIAXIS_FLYINGH_COLLECTIVE 100764163

#define DIAXIS_ANY_Y_2 4278272514

#define DI8DEVTYPEMOUSE_ABSOLUTE 6

#define DIBUTTON_DRIVINGR_STEER_LEFT_LINK 16829668

#define DIBUTTON_BASEBALLP_PAUSE 268453116

#define DIEP_STARTDELAY 512

#define DIAXIS_2DCONTROL_INOUT 587301379

#define DIBUTTON_DRIVINGT_STEER_RIGHT_LINK 50384108

#define DIBUTTON_BBALLO_FAKE 301990916

#define DIBUTTON_RACQUET_SMASH 536871939

#define DIBUTTON_DRIVINGT_TARGET 50334723

#define DIBUTTON_SOCCERD_RIGHT_LINK 520144108

#define DIBUTTON_DRIVINGT_DEVICE 50349310

#define DIVIRTUAL_SPORTS_SKIING 486539264

#define DIBUTTON_FISHING_DEVICE 234898686

#define DIBUTTON_DRIVINGR_SHIFTUP 16780289

#define DIBUTTON_ARCADEP_RIGHT_LINK 570475756

#define DIBUTTON_DRIVINGC_FIRESECONDARY 33573897

#define DIK_ABNT_C1 115

#define DIK_ABNT_C2 126

#define DIBUTTON_FOOTBALLD_PAUSE 385893628

#define DIBUTTON_FISHING_BAIT 234882052

#define DIBUTTON_ARCADES_VIEW_LEFT_LINK 554157284

#define DIBUTTON_MECHA_FASTER_LINK 688112864

#define DIERR_UNSUPPORTED 2147500033

#define DIK_VOLUMEUP 176

#define DIK_NEXT 209

#define DIBUTTON_FPS_ROTATE_RIGHT_LINK 151045356

#define DIBUTTON_DRIVINGT_BARREL_DOWN_LINK 50414824

#define DIGFFS_EMPTY 1

#define DIBUTTON_SOCCERO_SHOOT 503317505

#define DIBUTTON_STRATEGYR_JUMP 184550407

#define DIPROP_AUTOCENTER 9

#define DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK 50840812

#define DIES_SOLO 1

#define DIBUTTON_HUNTING_JUMP 218121226

#define DI8DEVTYPE_JOYSTICK 20

#define DIKEYBOARD_SYSRQ 2164262071

#define DIBUTTON_STRATEGYT_BACK_LINK 201409768

#define DIDFT_VENDORDEFINED 67108864

#define DIBUTTON_ARCADES_VIEW_RIGHT_LINK 554157292

#define DIBUTTON_FOOTBALLQ_MENU 352322813

#define DI8DEVTYPEKEYBOARD_NEC98LAPTOP 8

#define DIK_CONVERT 121

#define DI_DOWNLOADSKIPPED 3

#define DIGFFS_USERFFSWITCHON 1024

#define DIPROP_JOYSTICKID 15

#define DIBUTTON_3DCONTROL_MENU 603981053

#define DIBUTTON_FOOTBALLO_DEVICE 369116414

#define DIAXIS_DRIVINGT_ACCELERATE 50565635

#define DIBUTTON_BBALLO_MENU 301991165

#define DIBUTTON_TPS_GLANCE_DOWN_LINK 168281320

#define DIBUTTON_BBALLD_FAKE 318768131

#define DIBUTTON_FOOTBALLP_SELECT 335545346

#define DIK_APPS 221

#define DIVIRTUAL_SPORTS_RACQUET 536870912

#define DIEP_NORESTART 1073741824

#define DIVIRTUAL_ARCADE_PLATFORM 570425344

#define DIBUTTON_CADM_SPECIAL 637535235

#define DIBUTTON_BIKINGM_LEFT_LINK 469812452

#define DIBUTTON_FISHING_RIGHT_LINK 234931436

#define DIKEYBOARD_WAKE 2164262115

#define DIBUTTON_FPS_SELECT 150995972

#define DIBUTTON_DRIVINGC_SHIFTDOWN 33573893

#define DIBUTTON_REMOTE_DIGIT9 654332952

#define DIBUTTON_REMOTE_DIGIT8 654332951

#define DIBUTTON_BBALLD_LEFT_LINK 318817508

#define DIKEYBOARD_RMENU 2164262072

#define DIBUTTON_SKIING_SELECT 486540293

#define DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK 17286380

#define DIK_TAB 15

#define DIAH_UNMAPPED 0

#define DISCL_NONEXCLUSIVE 2

#define DIBUTTON_FOOTBALLO_LEFTARM 369099778

#define DIBUTTON_REMOTE_DIGIT3 654332946

#define DIAFTS_NEWDEVICELOW 4294967295

#define DIBUTTON_REMOTE_DIGIT2 654332945

#define DIBUTTON_REMOTE_DIGIT1 654332944

#define DIBUTTON_BASEBALLP_SELECT 268436481

#define DIAXIS_HOCKEYG_MOVE 453050882

#define DIBUTTON_REMOTE_DIGIT0 654332943

#define DIBUTTON_REMOTE_DIGIT7 654332950

#define DIBUTTON_REMOTE_DIGIT6 654332949

#define DIBUTTON_REMOTE_DIGIT5 654332948

#define DIDOI_ASPECTPOSITION 256

#define DIBUTTON_REMOTE_DIGIT4 654332947

#define DIBUTTON_BASEBALLB_PAUSE 251675900

#define DIBUTTON_REMOTE_PLAY 654320643

#define DIAXIS_CADF_MOVE 620823042

#define DIBUTTON_MECHA_FIRE 687866881

#define DIRECTINPUT_VERSION 2048

#define DIBUTTON_STRATEGYT_LEFT_LINK 201376996

#define DIKEYBOARD_MUTE 2164262048

#define DIBUTTON_SOCCERD_LEFT_LINK 520144100

#define DIBUTTON_MECHA_MENU 687867133

#define DIBUTTON_BBALLO_TIMEOUT 302007309

#define DIKEYBOARD_RCONTROL 2164262045

#define DIBUTTON_BBALLO_SCREEN 302007305

#define DIKEYBOARD_NUMPADEQUALS 2164262029

#define DIBUTTON_BBALLD_SUBSTITUTE 318784521

#define DIBUTTON_MECHA_ROTATE_LEFT_LINK 688014564

#define DIVOICE_TRANSMIT 2197816333

#define DIAFTS_UNUSEDDEVICELOW 0

#define DIKEYBOARD_HOME 2164262087

#define DI8DEVTYPESUPPLEMENTAL_THREEPEDALS 12

#define DIK_UNLABELED 151

#define DIEFT_FFATTACK 512

#define DIPROP_KEYNAME 20

#define DIAXIS_BASEBALLB_MOVE 251724290

#define DIBUTTON_STRATEGYT_DEVICE 201344254

#define DIKEYBOARD_COLON 2164262034

#define DIBUTTON_FOOTBALLD_FORWARD_LINK 385959136

#define DIAXIS_FLYINGC_PITCH 67176962

#define DIBUTTON_BASEBALLF_SHIFTOUT 285230088

#define DIBUTTON_FLYINGH_VIEW 100688901

#define DIEFF_OBJECTOFFSETS 2

#define DIBUTTON_HUNTING_BINOCULAR 218104836

#define DIERR_READONLY 2147942405

#define DIBUTTON_BIKINGM_SELECT 469763076

#define DIBUTTON_BASEBALLP_PITCH 268436482

#define DIBUTTON_DRIVINGR_SHIFTDOWN 16780290

#define DIBUTTON_SPACESIM_DISPLAY 117457925

#define DIBUTTON_BBALLD_DEVICE 318784766

#define DIBUTTON_HOCKEYD_SUBSTITUTE 436225033

#define DIAXIS_BASEBALLP_MOVE 268501506

#define DIGFFS_SAFETYSWITCHON 256

#define DIAH_USERCONFIG 1

#define DIBUTTON_FIGHTINGH_DODGE 134235146

#define DIK_PAUSE 197

#define DIAXIS_FIGHTINGH_MOVE 134283778

#define DIBUTTON_FOOTBALLQ_FAKE 352322566

#define DIBUTTON_SOCCERD_BLOCK 520094721

#define DIBUTTON_CADF_PAUSE 620774652

#define DIBUTTON_SOCCERO_SHOOTHIGH 503333897

#define DIBUTTON_FLYINGM_COUNTER 83909636

#define DIBUTTON_BBALLD_MENU 318768381

#define DIBUTTON_FPS_FORWARD_LINK 151078112

#define DIBUTTON_DRIVINGC_AIDS 33571847

#define DIBUTTON_SOCCERO_PASS 503317506

#define DIAXIS_ANY_X_1 4278239745

#define DIAXIS_ANY_X_2 4278239746

#define DIBUTTON_BASEBALLB_NOSTEAL 251675657

#define DIHATSWITCH_DRIVINGT_GLANCE 50349569

#define DIBUTTON_FPS_BACKWARD_LINK 151078120

#define DIAXIS_HOCKEYO_MOVE 419496450

#define DIBUTTON_SOCCERD_SPECIAL 520094725

#define DIPROP_APPDATA 22

#define DIPROP_LOGICALRANGE 19

#define DIBUTTON_SKIING_CAMERA 486540291

#define DIBUTTON_HOCKEYG_TIMEOUT 453002247

#define DIBUTTON_DRIVINGC_TARGET 33557507

#define DIGFFS_USERFFSWITCHOFF 2048

#define DIK_DOWNARROW 208

#define DIBUTTON_FLYINGH_COUNTER 100684804

#define DI8DEVCLASS_DEVICE 1

#define DIHATSWITCH_RACQUET_GLANCE 536888833

#define DIBUTTON_STRATEGYT_SELECT 201327617

#define DIBUTTON_TPS_GLANCE_UP_LINK 168281312

#define DIK_RALT 184

#define DIBUTTON_FLYINGH_SLOWER_LINK 100916456

#define DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK 101172460

#define DIDAL_MIDDLE 0

#define DIKEYBOARD_SLEEP 2164262111

#define DIAXIS_DRIVINGC_ACCELERATE 33788418

#define DIAXIS_BASEBALLF_LATERAL 285245953

#define DIBUTTON_RACQUET_TIMEOUT 536888326

#define DI8DEVTYPE1STPERSON_SIXDOF 3

#define DIBUTTON_MECHA_LEFT_LINK 687916260

#define DIDFT_NOCOLLECTION 16776960

#define DIBUTTON_DRIVINGC_STEER_LEFT_LINK 33606884

#define DIBUTTON_TPS_STEPRIGHT 167789576

#define DIEFT_HARDWARE 255

#define DIPH_DEVICE 0

#define DIHATSWITCH_FLYINGC_GLANCE 67126785

#define DIHATSWITCH_HOCKEYO_SCROLL 419448321

#define DIDFT_PSHBUTTON 4

#define DIBUTTON_FIGHTINGH_FORWARD_LINK 134300896

#define DI8DEVCLASS_POINTER 2

#define DIBUTTON_FLYINGH_FASTER_LINK 100916448

#define DIBUTTON_FLYINGH_GEAR 100688902

#define DIBUTTON_MECHA_JUMP 687866886

#define DIBUTTON_BASEBALLB_BURST 251659270

#define DIBUTTON_FOOTBALLO_SUBSTITUTE 369116171

#define DIEP_TRIGGERBUTTON 8

#define DIAXIS_HUNTING_LATERAL 218137089

#define DI8DEVTYPESCREENPTR_UNKNOWN 2

#define DIHATSWITCH_STRATEGYR_GLANCE 184567297

#define DIBUTTON_FOOTBALLO_BACK_LINK 369181928

#define DIBUTTON_BASEBALLP_RIGHT_LINK 268485868

#define DIAXIS_DRIVINGT_BRAKE 50614789

#define DIKEYBOARD_LSHIFT 2164261930

#define DIBUTTON_GOLF_RIGHT_LINK 402703596

#define DIBUTTON_MECHA_ROTATE_RIGHT_LINK 688014572

#define DIDF_ABSAXIS 1

#define DIBUTTON_FOOTBALLP_PAUSE 335561980

#define DIVOICE_PLAYBACKMUTE 2197816332

#define DIBUTTON_ARCADES_VIEW_UP_LINK 554157280

#define DIBUTTON_DRIVINGC_FIRE 33557505

#define DIBUTTON_FIGHTINGH_LEFT_LINK 134268132

#define DIK_MEDIASTOP 164

#define DI8DEVTYPE_DEVICECTRL 25

#define DIAXIS_FPS_ROTATE 151028225

#define DIK_LMENU 56

#define DIBUTTON_2DCONTROL_SPECIAL2 587203588

#define DIBUTTON_2DCONTROL_SPECIAL1 587203586

#define DIBUTTON_RACQUET_BACK_LINK 536954088

#define DIAXIS_BIKINGM_TURN 469795329

#define DIBUTTON_BBALLD_STEAL 318768130

#define DIK_PERIOD 52

#define DIBUTTON_SKIING_JUMP 486540289

#define DIK_SLASH 53

#define DIEFF_POLAR 32

#define JOY_HWS_NODEVNODE 536870912

#define DIDC_POSNEGCOEFFICIENTS 4096

#define DIK_YEN 125

#define DIAXIS_SKIING_TURN 486572545

#define DIBUTTON_BASEBALLB_POWER 251659267

#define DIBUTTON_3DCONTROL_PAUSE 603997436

#define DIBUTTON_BASEBALLF_SHIFTIN 285230087

#define DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK 84395244

#define DIAXIS_BASEBALLP_LATERAL 268468737

#define DIBUTTON_HOCKEYO_PAUSE 419448060

#define DIBUTTON_2DCONTROL_PAUSE 587220220

#define DIBUTTON_BIKINGM_CAMERA 469763074

#define DIBUTTON_SOCCERO_PASSTHRU 503333898

#define DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE 6

#define DIK_RIGHTARROW 205

#define DIBUTTON_TPS_SELECT 167773187

#define DIERR_OBJECTNOTFOUND 2147942402

#define DIBUTTON_STRATEGYR_LEFT_LINK 184599780

#define DIBUTTON_BBALLD_PLAY 318768135

#define DIBUTTON_STRATEGYR_RIGHT_LINK 184599788

#define DIDC_POLLEDDEVICE 2

#define DIVOICE_ALL 2197816330

#define DIK_RIGHT 205

#define DIBUTTON_DRIVINGR_AIDS 16794630

#define DIBUTTON_TPS_TURN_RIGHT_LINK 167920876

#define DIKEYBOARD_NOCONVERT 2164262011

#define DIAH_APPREQUESTED 2

#define DIBUTTON_DRIVINGR_STEER_RIGHT_LINK 16829676

#define DIBUTTON_SOCCERD_DEVICE 520111358

#define DIHATSWITCH_MECHA_GLANCE 687883777

#define DIBUTTON_MECHA_VIEW 687883272

#define DIERR_GENERIC 2147500037

#define DIBUTTON_BBALLO_SUBSTITUTE 302007310

#define DIEGES_EMULATED 2

#define DIBUTTON_SKIING_MENU 486540541

#define DIBUTTON_DRIVINGC_MENU 33555709

#define DIAXIS_SOCCERO_BEND 503415299

#define DIBUTTON_FPS_DEVICE 151012606

#define DIAXIS_CADM_MOVE 637600258

#define DIAXIS_BROWSER_VIEW 671187459

#define DIBUTTON_SOCCERD_BACK_LINK 520176872

#define DIAXIS_ANY_A_1 4278436353

#define DIBUTTON_FIGHTINGH_BACKWARD_LINK 134300904

#define DIAXIS_ANY_A_2 4278436354

#define DIVIRTUAL_CAD_2DCONTROL 587202560

#define DIK_AT 145

#define DIBUTTON_BBALLD_PLAYER 318768133

#define DIK_AX 150

#define DIK_RWIN 220

#define DIBUTTON_RACQUET_SUBSTITUTE 536888327

#define DIKEYBOARD_SPACE 2164261945

#define DI8DEVTYPE_MOUSE 18

#define DI_SECONDS 1000000

#define DIAXIS_FLYINGM_BRAKE 84173317

#define DIBUTTON_FISHING_CAST 234882049

#define DIAXIS_FLYINGC_RUDDER 67260933

#define DIVIRTUAL_SPORTS_SOCCER_OFFENSE 503316480

#define DI8DEVTYPEFLIGHT_STICK 2

#define DIBUTTON_SPACESIM_TURN_RIGHT_LINK 117589228

#define DIBUTTON_HOCKEYG_STRATEGY 453002246

#define DIBUTTON_FOOTBALLD_SUPERTACKLE 385876998

#define DIAXIS_ANY_S_1 4278534657

#define DIBUTTON_HUNTING_FORWARD_LINK 218186976

#define DIBUTTON_FLYINGH_GLANCE_UP_LINK 101172448

#define DIBUTTON_FLYINGC_GEAR 67120131

#define DIAXIS_ANY_S_2 4278534658

#define DIBUTTON_HUNTING_MAP 218104838

#define DIKEYBOARD_MEDIASELECT 2164262125

#define DIK_PREVTRACK 144

#define DIK_GRAVE 41

#define DIBUTTON_HUNTING_MENU 218105085

#define DIPROP_PRODUCTNAME 14

#define DIK_F4 62

#define DIERR_HANDLEEXISTS 2147942405

#define DIK_F3 61

#define DIK_F2 60

#define DIK_F1 59

#define DIK_F8 66

#define DIK_F7 65

#define DIK_F6 64

#define DIK_F5 63

#define DIK_F9 67

#define DI8DEVTYPESUPPLEMENTAL_DUALPEDALS 11

#define DIAXIS_ANY_B_2 4278469122

#define DIAXIS_ANY_B_1 4278469121

#define DIBUTTON_ARCADEP_FIRESECONDARY 570442758

#define DIBUTTON_MECHA_SLOWER_LINK 688112872

#define DIBUTTON_SPACESIM_VIEW 117457924

#define DIBUTTON_GOLF_BACK_LINK 402736360

#define DIBUTTON_SOCCERO_SPRINT 503333899

#define DIBUTTON_FOOTBALLQ_SLIDE 352322564

#define DI8DEVTYPEDRIVING_HANDHELD 5

#define DIBUTTON_BASEBALLF_FORWARD_LINK 285295840

#define DIPROP_CALIBRATIONMODE 10

#define DIK_WEBSTOP 232

#define DI8DEVCLASS_GAMECTRL 4

#define DIBUTTON_FLYINGM_DEVICE 83903742

#define DIBUTTON_HUNTING_FIRE 218104833

#define DIBUTTON_SPACESIM_GLANCE_LEFT_LINK 117949668

#define DI8DEVTYPEFLIGHT_RC 4

#define DIBUTTON_FIGHTINGH_CROUCH 134218756

#define DIPROP_SATURATION 6

#define DIAXIS_FIGHTINGH_ROTATE 134365699

#define DIBUTTON_HUNTING_PAUSE 218121468

#define DIKEYBOARD_WEBBACK 2164262122

#define DIAXIS_SPACESIM_ROTATE 117588485

#define DIBUTTON_ARCADEP_CROUCH 570426371

#define DIK_BACKSLASH 43

#define DIKEYBOARD_COMMA 2164261939

#define DIVIRTUAL_FLYING_HELICOPTER 100663296

#define DIVIRTUAL_FLYING_MILITARY 83886080

#define DIAXIS_CADM_LATERAL 637567489

#define DIBUTTON_FLYINGC_FLAPSDOWN 67134469

#define DIBUTTON_HOCKEYO_BURST 419431427

#define DIBUTTON_FLYINGM_WEAPONS 83889154

#define DIBUTTON_FLYINGH_FIRE 100668417

#define DIBUTTON_FOOTBALLD_PLAY 385876993

#define DI8DEVTYPESUPPLEMENTAL_THROTTLE 8

#define DIEP_SAMPLEPERIOD 2

#define DIVIRTUAL_STRATEGY_ROLEPLAYING 184549376

#define DIDFT_ALL 0

#define DI8DEVTYPE_SCREENPOINTER 26

#define DIBUTTON_BASEBALLB_BUNT 251659268

#define DIAXIS_FLYINGM_THROTTLE 84120067

#define DIEDBS_NEWDEVICE 32

#define DIBUTTON_RACQUET_MENU 536872189

#define DIBUTTON_3DCONTROL_SPECIAL 603980803

#define DIBUTTON_DRIVINGT_BARREL_UP_LINK 50414816

#define DIVIRTUAL_SPORTS_BIKING_MOUNTAIN 469762048

#define DIKEYBOARD_PRIOR 2164262089

#define DIBUTTON_SPACESIM_TURN_LEFT_LINK 117589220

#define DIDOI_FFACTUATOR 1

#define DIBUTTON_DRIVINGT_FIRESECONDARY 50351111

#define DIKEYBOARD_A 2164261918

#define DIKEYBOARD_B 2164261936

#define DIKEYBOARD_C 2164261934

#define DIKEYBOARD_D 2164261920

#define DIKEYBOARD_E 2164261906

#define DIKEYBOARD_F 2164261921

#define DIKEYBOARD_G 2164261922

#define DIKEYBOARD_H 2164261923

#define DIKEYBOARD_I 2164261911

#define DIKEYBOARD_J 2164261924

#define DIKEYBOARD_K 2164261925

#define DIKEYBOARD_L 2164261926

#define DIKEYBOARD_M 2164261938

#define DIKEYBOARD_N 2164261937

#define DIBUTTON_BASEBALLB_SELECT 251659265

#define DIKEYBOARD_0 2164261899

#define DIBUTTON_HOCKEYD_BACK_LINK 436290792

#define DIKEYBOARD_1 2164261890

#define DIKEYBOARD_2 2164261891

#define DIKEYBOARD_3 2164261892

#define DIKEYBOARD_4 2164261893

#define DIKEYBOARD_5 2164261894

#define DIKEYBOARD_6 2164261895

#define DIKEYBOARD_7 2164261896

#define DIKEYBOARD_8 2164261897

#define DIKEYBOARD_9 2164261898

#define DIBUTTON_BASEBALLB_NORMAL 251659266

#define DIBUTTON_FLYINGH_MENU 100664573

#define DIKEYBOARD_O 2164261912

#define DIEDFL_ATTACHEDONLY 1

#define DIKEYBOARD_P 2164261913

#define DIKEYBOARD_Q 2164261904

#define DI8DEVTYPESCREENPTR_LIGHTGUN 3

#define DIKEYBOARD_R 2164261907

#define DIKEYBOARD_S 2164261919

#define DIBUTTON_FOOTBALLQ_JUMP 352322563

#define DIBUTTON_BIKINGM_RIGHT_LINK 469812460

#define DIKEYBOARD_T 2164261908

#define DIKEYBOARD_U 2164261910

#define DIKEYBOARD_V 2164261935

#define DIKEYBOARD_W 2164261905

#define DIKEYBOARD_X 2164261933

#define DIKEYBOARD_Y 2164261909

#define DIKEYBOARD_Z 2164261932

#define DIAXIS_DRIVINGR_BRAKE 17043971

#define DI8DEVTYPESCREENPTR_LIGHTPEN 4

#define DISCL_BACKGROUND 8

#define DIAXIS_BBALLO_MOVE 302055938

#define DIK_LEFT 203

#define DIVIRTUAL_SPORTS_FISHING 234881024

#define DIBUTTON_FOOTBALLQ_RIGHT_LINK 352371948

#define DIAXIS_3DCONTROL_INOUT 604078595

#define DIERR_DEVICENOTREG 2147746132

#define DIBUTTON_DRIVINGC_WEAPONS 33557506

#define DIK_WEBFAVORITES 230

#define DIDOI_FFEFFECTTRIGGER 2

#define DIBUTTON_SPACESIM_LEFT_LINK 117490916

#define DIKEYBOARD_NEXT 2164262097

#define DIBUTTON_BROWSER_MENU 671089917

#define DIVIRTUAL_FIGHTING_THIRDPERSON 167772160

#define DIBUTTON_ARCADES_FORWARD_LINK 553731296

#define DIDF_RELAXIS 2

#define DIDC_POLLEDDATAFORMAT 8

#define DIBUTTON_FOOTBALLD_DEVICE 385893630

#define DIBUTTON_FPS_WEAPONS 150995970

#define DIAXIS_FIGHTINGH_LATERAL 134251009

#define DI8DEVTYPE_1STPERSON 24

#define DIEP_TRIGGERREPEATINTERVAL 16

#define DIERR_BADDRIVERVER 2147942519

#define DIEFT_POSNEGSATURATION 8192

#define DIPROP_FFLOAD 8

#define DIAXIS_BBALLD_MOVE 318833154

#define DIBUTTON_FOOTBALLP_PLAY 335545345

#define DIDAL_CENTERED 0

#define DIKEYBOARD_SCROLL 2164261958

#define DIBUTTON_FLYINGM_GLANCE_UP_LINK 84395232

#define DIAXIS_HOCKEYG_LATERAL 453018113

#define DIEFT_CONSTANTFORCE 1

#define DIBUTTON_FPS_JUMP 150995974

#define DIA_FORCEFEEDBACK 1

#define JOY_HWS_ISGAMEPORTDRIVER 67108864

#define DISCL_NOWINKEY 16

#define DIK_RCONTROL 157

#define DIAXIS_BROWSER_LATERAL 671121921

#define DIK_NUMPADSTAR 55

#define DIBUTTON_DRIVINGC_PAUSE 33572092

#define DIBUTTON_BROWSER_HOME 671106053

#define DIBUTTON_SOCCERD_SUBSTITUTE 520111116

#define DIBUTTON_ARCADEP_FORWARD_LINK 570508512

#define DIBUTTON_DRIVINGC_DASHBOARD 33571846

#define DIBUTTON_HOCKEYG_BLOCK 452985860

#define JOY_HWS_ISANALOGPORTDRIVER 134217728

#define DIBUTTON_STRATEGYT_MENU 201327869

#define DIBUTTON_HOCKEYG_PAUSE 453002492

#define DIVIRTUAL_SPACESIM 117440512

#define DI_OK 0

#define DIBUTTON_BASEBALLF_NEAREST 285213697

#define DIBUTTON_ARCADES_DEVICE 553665790

#define DIVIRTUAL_SPORTS_HOCKEY_GOALIE 452984832

#define DIBUTTON_HOCKEYD_FORWARD_LINK 436290784

#define JOY_US_VOLATILE 8

#define DIKEYBOARD_ADD 2164261966

#define DIDC_SATURATION 2048

#define DIBUTTON_FIGHTINGH_PUNCH 134218753

#define DIVIRTUAL_CAD_3DCONTROL 603979776

#define DIBUTTON_DRIVINGT_STEER_LEFT_LINK 50384100

#define DIDFT_FFEFFECTTRIGGER 33554432

#define DIKEYBOARD_KANJI 2164262036

#define DIBUTTON_RACQUET_SWING 536871937

#define DIKEYBOARD_ESCAPE 2164261889

#define DI_DEGREES 100

#define DIBUTTON_SOCCERO_HEAD 503333901

#define DIBUTTON_ARCADEP_BACK_LINK 570508520

#define DIBUTTON_BBALLO_PLAYER 301990918

#define DIBUTTON_MECHA_FIRESECONDARY 687883273

#define DIBUTTON_FOOTBALLQ_FAKESNAP 352338951

#define DIGFFS_SAFETYSWITCHOFF 512

#define DIBUTTON_HUNTING_ROTATE_LEFT_LINK 218252516

#define DIBUTTON_2DCONTROL_MENU 587203837

#define DI8DEVTYPESCREENPTR_TOUCH 5

#define DIAXIS_MECHA_THROTTLE 688095748

#define DIBUTTON_ARCADES_PAUSE 553665788

#define DIBUTTON_REMOTE_PAUSE 654329084

#define DIBUTTON_SPACESIM_GEAR 117457928

#define DIDC_PHANTOM 131072

#define DIKEYBOARD_APPS 2164262109

#define DIK_PLAYPAUSE 162

#define DIAH_DEFAULT 32

#define DIK_LEFTARROW 203

#define DIVIRTUAL_CAD_MODEL 637534208

#define DIBUTTON_HOCKEYD_PLAYER 436208641

#define DIAXIS_HUNTING_MOVE 218169858

#define DIK_WEBBACK 234

#define DIPH_BYUSAGE 3

#define DIHATSWITCH_FISHING_GLANCE 234898945

#define DIBUTTON_DRIVINGC_STEER_RIGHT_LINK 33606892

#define DIAH_HWDEFAULT 8

#define DIBUTTON_BIKINGM_FASTER_LINK 469845216

#define DIPROP_GRANULARITY 3

#define DIAXIS_FOOTBALLD_MOVE 385942018

#define DIK_DECIMAL 83

#define DIBUTTON_STRATEGYR_DEVICE 184567038

#define DIAXIS_FPS_MOVE 151060994

#define DIBUTTON_DRIVINGT_MENU 50332925

#define DIK_SUBTRACT 74

#define DIBUTTON_SOCCERD_FOUL 520111112

#define DIBUTTON_FISHING_MAP 234882053

#define DI8DEVTYPEFLIGHT_LIMITED 1

#define DIEDBSFL_MULTIMICEKEYBOARDS 8192

#define DIBUTTON_FOOTBALLQ_SELECT 352322561

#define DIKEYBOARD_RBRACKET 2164261915

#define DIBUTTON_DRIVINGR_DEVICE 16794878

#define DIBUTTON_SOCCERD_GOALIECHARGE 520111115

#define DIBUTTON_DRIVINGT_FIRE 50334721

#define DIBUTTON_FOOTBALLO_SHOULDER 369116167

#define DIENUM_CONTINUE 1

#define DIAXIS_CADM_INOUT 637633027

#define DIPROP_DEADZONE 5

#define DIK_MAIL 236

#define DIBUTTON_FLYINGM_FIRESECONDARY 83905545

#define DIBUTTON_SPACESIM_FIRE 117441537

#define DIAXIS_ANY_R_2 4278338050

#define DIAXIS_ANY_R_1 4278338049

#define DIEDBSFL_VALID 28944

#define DIAXIS_FOOTBALLD_LATERAL 385909249

#define DIBUTTON_FLYINGH_TARGET 100668419

#define DIBUTTON_FLYINGC_SLOWER_LINK 67359976

#define DIBUTTON_FOOTBALLO_ZOOM 369116170

#define DIBUTTON_CADF_SPECIAL 620758019

#define DIBUTTON_FOOTBALLQ_MOTION 352338952

#define DIBUTTON_HOCKEYO_LEFT_LINK 419480804

#define DIBUTTON_ARCADES_CARRY 553649154

#define DIK_BACK 14

#define DIVIRTUAL_FIGHTING_FPS 150994944

#define DIK_LCONTROL 29

#define DIBUTTON_DRIVINGC_BRAKE 33573896

#define DIK_ADD 78

#define DIBUTTON_HOCKEYG_PASS 452985857

#define DIVIRTUAL_DRIVING_MECHA 687865856

#define DIKEYBOARD_UP 2164262088

#define DIERR_MAPFILEFAIL 2147746315

#define DIBUTTON_TPS_FORWARD_LINK 167855328

#define DIERR_NOTEXCLUSIVEACQUIRED 2147746309

#define DIBUTTON_ARCADEP_JUMP 570426369

#define DIK_UNDERLINE 147

#define DIBUTTON_REMOTE_RECORD 654320647

#define DIBUTTON_GOLF_ZOOM 402670599

#define DIBUTTON_BIKINGM_ZOOM 469779462

#define DIERR_ACQUIRED 2147942570

#define DI_NOEFFECT 1

#define DIPROPAXISMODE_REL 1

#define DIBUTTON_MECHA_REVERSE 687866884

#define DIDFT_AXIS 3

#define DIK_WEBFORWARD 233

#define DIBUTTON_HUNTING_CALL 218104837

#define DIPROPAXISMODE_ABS 0

#define DIAXIS_TPS_MOVE 167838210

#define DIBUTTON_HOCKEYG_ZOOM 453002245

#define DIK_NUMPADCOMMA 179

#define DIBUTTON_HOCKEYG_FORWARD_LINK 453068000

#define DIK_DOWN 208

#define DIAXIS_FLYINGC_BRAKE 67398148

#define DIVIRTUAL_BROWSER_CONTROL 671088640

#define DIBUTTON_HOCKEYO_SHOOT 419431425

#define DIK_SEMICOLON 39

#define DIBUTTON_FOOTBALLQ_SNAP 352322562

#define DIVOICE_TEAM 2197816329

#define DIKEYBOARD_EQUALS 2164261901

#define DIK_LWIN 219

#define DIAXIS_ANY_Z_1 4278305281

#define DIAXIS_ANY_Z_2 4278305282

#define DIBUTTON_ARCADES_THROW 553649153

#define DIKEYBOARD_WEBSTOP 2164262120

#define DIFEF_MODIFYIFNEEDED 16

#define DIBUTTON_DRIVINGR_PIT 16794633

#define DIBUTTON_GOLF_DOWN 402654212

#define DIDBAM_INITIALIZE 2

#define DIBUTTON_CADF_MENU 620758269

#define DIERR_NOTDOWNLOADED 2147746307

#define DIBUTTON_FLYINGC_MENU 67110141

#define DIBUTTON_SOCCERD_HEAD 520111113

#define DIBUTTON_GOLF_TIMEOUT 402670600

#define DIBUTTON_FOOTBALLD_RIP 385893386

#define DIVIRTUAL_SPORTS_BASEBALL_BAT 251658240

#define DIAXIS_RACQUET_MOVE 536936962

#define DIBUTTON_FLYINGC_GLANCE_LEFT_LINK 67618020

#define DISFFC_STOPALL 2

#define DIBUTTON_BBALLO_PLAY 302007306

#define DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE 318767104

#define DIGFFS_POWERON 64

#define DIBUTTON_GOLF_SELECT 402654210

#define DIAXIS_BASEBALLF_MOVE 285278722

#define DIBUTTON_BROWSER_SELECT 671089665

#define DIPH_BYID 2

#define DI8DEVTYPE_GAMEPAD 21

#define DIPROP_GETPORTDISPLAYNAME 16

#define DIAXIS_MECHA_TORSO 687931906

#define DIBUTTON_TPS_DODGE 167789577

#define DIBUTTON_FPS_GLANCEL 151012362

#define DIK_MYCOMPUTER 235

#define DIBUTTON_FOOTBALLD_LEFT_LINK 385926372

#define DISFFC_PAUSE 4

#define DIHATSWITCH_DRIVINGC_GLANCE 33572353

#define DIBUTTON_FLYINGM_VIEW 83911685

#define DIBUTTON_FPS_FIRESECONDARY 151012364

#define DIBUTTON_HOCKEYO_FAKE 419431429

#define DIBUTTON_FPS_GLANCER 151012363

#define DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE 369098752

#define DI_BUFFEROVERFLOW 1

#define DIBUTTON_CADF_DEVICE 620774654

#define DIDSAM_DEFAULT 0

#define DI8DEVTYPEKEYBOARD_J3100 12

#define DIBUTTON_SOCCERD_CLEAR 520111114

#define DIDC_EMULATED 4

#define DIHATSWITCH_SOCCERO_GLANCE 503334401

#define DIBUTTON_GOLF_TERRAIN 402654213

#define DIBUTTON_FLYINGM_FLAPSDOWN 83907592

#define DIBUTTON_FOOTBALLO_RIGHT_LINK 369149164

#define DIAXIS_TPS_TURN 167903745

#define DIBUTTON_FOOTBALLD_BACK_LINK 385959144

#define DIK_NUMPADENTER 156

#define DI8DEVTYPEMOUSE_UNKNOWN 1

#define DIAXIS_BASEBALLB_LATERAL 251691521

#define DIBUTTON_REMOTE_DEVICE 654329086

#define DIBUTTON_CADM_SELECT 637535233

#define DIDBAM_PRESERVE 1

#define DIBUTTON_FLYINGH_FIRESECONDARY 100682759

#define DIHATSWITCH_CADM_HATSWITCH 637552129

#define DICD_EDIT 1

#define DIBUTTON_RACQUET_RIGHT_LINK 536921324

#define DI_WRITEPROTECT 19

#define DI_FFNOMINALMAX 10000

#define DI8DEVTYPE_KEYBOARD 19

#define DIBUTTON_FLYINGM_FASTER_LINK 84137184

#define DIEDBSFL_NONGAMINGDEVICES 16384

#define DIBUTTON_DRIVINGC_DEVICE 33572094

#define DIKEYBOARD_BACKSLASH 2164261931

#define DIBUTTON_RACQUET_BACKSWING 536871938

#define DIAXIS_FPS_SIDESTEP 151142916

#define DIBUTTON_FIGHTINGH_DEVICE 134235390

#define DIEDFL_FORCEFEEDBACK 256

#define DIBUTTON_ARCADEP_VIEW_UP_LINK 570934496

#define DIBUTTON_TPS_USE 167773188

#define DIPH_BYOFFSET 1

#define DIKEYBOARD_MAIL 2164262124

#define DIBUTTON_BASEBALLB_STEAL 251659269

#define DIBUTTON_FOOTBALLQ_PAUSE 352339196

#define DIBUTTON_BASEBALLB_CONTACT 251659272

#define DIEDFL_INCLUDEHIDDEN 262144

#define DIHATSWITCH_BIKINGM_SCROLL 469779969

#define DIBUTTON_FLYINGH_GLANCE_LEFT_LINK 101172452

#define DIKEYBOARD_UNDERLINE 2164262035

#define DIBUTTON_HOCKEYO_TIMEOUT 419447816

#define DI8DEVTYPEFLIGHT_YOKE 3

#define DIBUTTON_GOLF_SUBSTITUTE 402670601

#define DIAXIS_SOCCERO_LATERAL 503349761

#define DIBUTTON_ARCADES_ATTACK 553649155

#define DIBUTTON_BROWSER_STOP 671106052

#define DIERR_NOTACQUIRED 2147942412

#define DIDFT_ALIAS 134217728

#define DIDFT_OUTPUT 268435456

#define DIBUTTON_REMOTE_VCR 654334987

#define DIRECTINPUT_HEADER_VERSION 2048

#define DIBUTTON_HUNTING_DISPLAY 218121224

#define DIBUTTON_FOOTBALLO_FORWARD_LINK 369181920

#define DI8DEVTYPEKEYBOARD_PCAT 3

#define DIBUTTON_STRATEGYR_SELECT 184550403

#define DIDEVTYPE_HID 65536

#define DIPROP_AXISMODE 2

#define DIGFFS_POWEROFF 128

#define DI8DEVTYPEKEYBOARD_PCENH 4

#define DIDAL_BOTTOMALIGNED 8

#define DIAXIS_FLYINGH_BANK 100698625

#define DIBUTTON_STRATEGYR_GET 184550401

#define DIBUTTON_SKIING_FASTER_LINK 486622432

#define DIBUTTON_GOLF_SWING 402654209

#define DIGFFS_ACTUATORSOFF 32

#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED 4

#define DIBUTTON_TPS_TURN_LEFT_LINK 167920868

#define DIKEYBOARD_INSERT 2164262098

#define DIBUTTON_SPACESIM_FORWARD_LINK 117523680

#define DIBUTTON_BASEBALLP_FAKE 268436485

#define DIVIRTUAL_SPORTS_HOCKEY_OFFENSE 419430400

#define DI_SETTINGSNOTSAVED 11

#define DIKEYBOARD_VOLUMEDOWN 2164262062

#define DIBUTTON_HOCKEYO_RIGHT_LINK 419480812

#define DIBUTTON_FOOTBALLD_AUDIBLE 385893387

#define DIEDBSFL_THISUSER 16

#define DIBUTTON_FOOTBALLO_SPIN 369099781

#define DIBUTTON_HOCKEYG_BACK_LINK 453068008

#define DIBUTTON_HOCKEYD_MENU 436208893

#define DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER 3

#define DIBUTTON_FISHING_BACK_LINK 234964200

#define DIBUTTON_FLYINGH_DEVICE 100680958

#define DIBUTTON_HOCKEYO_MENU 419431677

#define DIEP_NODOWNLOAD 2147483648

#define DIBUTTON_ARCADEP_VIEW_DOWN_LINK 570934504

#define DIVIRTUAL_SPORTS_FOOTBALL_FIELD 335544320

#define DIBUTTON_FOOTBALLD_JUMP 385876995

#define DIEFF_OBJECTIDS 1

#define DIBUTTON_HOCKEYO_SPECIAL 419431428

#define DIBUTTON_BROWSER_REFRESH 671089666

#define DIAXIS_CADF_LATERAL 620790273

#define DIPROPRANGE_NOMAX 2147483647

#define DI8DEVTYPE_DRIVING 22

#define DIAXIS_FISHING_LATERAL 234914305

#define DIBUTTON_FISHING_PAUSE 234898684

#define DIBUTTON_BBALLO_SHOOT 301990913

#define DIKEYBOARD_ABNT_C1 2164262003

#define DIBUTTON_BBALLD_PAUSE 318784764

#define DIBUTTON_FPS_FIRE 150995969

#define DIKEYBOARD_ABNT_C2 2164262014

#define DIBUTTON_TPS_JUMP 167773189

#define DIAXIS_ANY_U_1 4278370817

#define DI8DEVTYPEKEYBOARD_PCXT 1

#define DIBUTTON_DRIVINGT_VIEW 50355204

#define DIBUTTON_TPS_INVENTORY 167789578

#define DIBUTTON_FIGHTINGH_DISPLAY 134235145

#define DIHATSWITCH_GOLF_SCROLL 402671105

#define DIPROPCALIBRATIONMODE_COOKED 0

#define DIPOV_ANY_1 4278208001

#define DIPOV_ANY_3 4278208003

#define DIPOV_ANY_2 4278208002

#define DIK_NOCONVERT 123

#define DIK_UPARROW 200

#define DIPOV_ANY_4 4278208004

#define DIK_RSHIFT 54

#define DIAXIS_STRATEGYR_LATERAL 184582657

#define DIAXIS_ANY_U_2 4278370818

#define DI8DEVCLASS_KEYBOARD 3

#define DIAXIS_HUNTING_ROTATE 218251779

#define DIK_CALCULATOR 161

#define DIK_OEM_102 86

#define DIKEYBOARD_STOP 2164262037

#define DIAXIS_BBALLO_LATERAL 302023169

#define DI8DEVTYPEDRIVING_DUALPEDALS 3

#define DIAXIS_ARCADES_MOVE 553714178

#define DIBUTTON_FLYINGM_GEAR 83911690

#define DIEP_GAIN 4

#define DIBUTTON_TPS_GLANCE_RIGHT_LINK 168281324

#define DIK_PGDN 209

#define DIEFT_ALL 0

#define DIDC_FORCEFEEDBACK 256

#define DIKEYBOARD_CONVERT 2164262009

#define DIBUTTON_CADM_DEVICE 637551870

#define DIK_DELETE 211

#define DIAXIS_DRIVINGR_STEER 16812545

#define DIBUTTON_ARCADEP_DEVICE 570443006

#define DIDFT_TGLBUTTON 8

#define DIBUTTON_FPS_STRAFE 150995975

#define DIBUTTON_CADF_SELECT 620758017

#define DIPROPRANGE_NOMIN 2147483648

#define DIBUTTON_HOCKEYO_FORWARD_LINK 419513568

#define DIBUTTON_FLYINGH_GLANCE_DOWN_LINK 101172456

#define DIAXIS_STRATEGYR_MOVE 184615426

#define DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK 50840804

#define DIERR_INPUTLOST 2147942430

#define DISFFC_SETACTUATORSOFF 32

#define DIBUTTON_HOCKEYD_STRATEGY 436225031

#define DIKEYBOARD_MYCOMPUTER 2164262123

#define DIBUTTON_DRIVINGT_BRAKE 50351110

#define DIDFT_NODATA 128

#define DIDC_ALIAS 65536

#define DIHATSWITCH_HOCKEYD_SCROLL 436225537

#define DIAXIS_FOOTBALLQ_MOVE 352387586

#define DIBUTTON_MECHA_PAUSE 687883516

#define DIBUTTON_STRATEGYR_CROUCH 184550406

#define DIBUTTON_HOCKEYG_LEFT_LINK 453035236

#define DIK_RBRACKET 27

#define DIBUTTON_RACQUET_PAUSE 536888572

#define DIBUTTON_RACQUET_SELECT 536871941

#define DI_PROPNOEFFECT 1

#define DICD_DEFAULT 0

#define DIAXIS_MECHA_STEER 687899137

#define DIHATSWITCH_SKIING_GLANCE 486557185

#define DIBUTTON_REMOTE_MENU 654312701

#define DIDOI_ASPECTVELOCITY 512

#define DIBUTTON_SOCCERD_PLAYER 520094724

#define DIPROP_FFGAIN 7

#define DIBUTTON_SPACESIM_FASTER_LINK 117687520

#define DIPROP_SCANCODE 23

#define DIBUTTON_FPS_MENU 150996221

#define DIBUTTON_REMOTE_REVIEW 654320645

#define DIK_RETURN 28

#define DIBUTTON_HOCKEYD_STEAL 436208642

#define DIBUTTON_FOOTBALLD_SWIM 385893384

#define DIAXIS_DRIVINGC_ACCEL_AND_BRAKE 33638916

#define DIBUTTON_BBALLO_LEFT_LINK 302040292

#define DIDOI_ASPECTMASK 3840

#define DI8DEVCLASS_ALL 0

#define DIBUTTON_FIGHTINGH_RIGHT_LINK 134268140

#define DIVIRTUAL_DRIVING_TANK 50331648

#define DIBUTTON_HUNTING_LEFT_LINK 218154212

#define DIKEYBOARD_SEMICOLON 2164261927

#define DIBUTTON_FOOTBALLQ_LEFT_LINK 352371940

#define DIBUTTON_FISHING_BINOCULAR 234882051

#define DIBUTTON_FISHING_ROTATE_RIGHT_LINK 235029740

#define DIAXIS_ARCADEP_MOVE 570491394

#define DIAXIS_BIKINGM_BRAKE 470041091

#define DIBUTTON_FISHING_CROUCH 234898439

#define DIBUTTON_REMOTE_SELECT 654312450

#define DIBUTTON_FLYINGC_FLAPSUP 67134468

#define DIBUTTON_TPS_BACKWARD_LINK 167855336

#define DIBUTTON_FLYINGC_DISPLAY 67118082

#define DIBUTTON_TPS_MENU 167773437

#define DIEP_ENVELOPE 128

#define DIK_UP 200

#define DIBUTTON_HUNTING_BACK_LINK 218186984

#define DIBUTTON_BBALLO_PAUSE 302007548

#define DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE 385875968

#define DIBUTTON_STRATEGYT_MAP 201344007

#define DIBUTTON_FOOTBALLQ_BACK_LINK 352404712

#define DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK 17286372

#define DIBUTTON_BASEBALLP_BACK_LINK 268518632

#define DIBUTTON_BBALLO_BACK_LINK 302073064

#define DIHATSWITCH_BBALLD_GLANCE 318785025

#define DI_NOTATTACHED 1

#define DIK_PGUP 201

#define DIBUTTON_BBALLO_PASS 301990915

#define DIBUTTON_SPACESIM_GLANCE_DOWN_LINK 117949672

#define DIBUTTON_HUNTING_SPECIAL 218104839

#define DIBUTTON_SOCCERO_FAKE 503317507

#define DIKEYBOARD_UNLABELED 2164262039

#define DIBUTTON_BASEBALLF_AIM_RIGHT_LINK 285263084

#define DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS 10

#define DIK_NUMLOCK 69

#define DIEFF_CARTESIAN 16

#define DIBUTTON_ARCADEP_VIEW_RIGHT_LINK 570934508

#define DIVIRTUAL_FIGHTING_HAND2HAND 134217728

#define DIAXIS_FLYINGC_FLAPS 67459590

#define DIBUTTON_HOCKEYD_FAKE 436208645

#define DIKEYBOARD_DIVIDE 2164262069

#define DIBUTTON_SPACESIM_FIRESECONDARY 117457929

#define DIKEYBOARD_PREVTRACK 2164262032

#define DIBUTTON_BASEBALLP_LEFT_LINK 268485860

#define DIBUTTON_FISHING_FORWARD_LINK 234964192

#define DIAXIS_3DCONTROL_ROTATEZ 604127750

#define DIAXIS_3DCONTROL_ROTATEY 604160517

#define DIAXIS_3DCONTROL_ROTATEX 604193284

#define DIBUTTON_FLYINGC_VIEW 67118081

#define DIBUTTON_BASEBALLB_LEFT_LINK 251708644

#define DIDSAM_FORCESAVE 2

#define DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK 117949676

#define DIAXIS_FLYINGM_FLAPS 84234758

#define DIDFT_BUTTON 12

#define DIEDBS_RECENTDEVICE 16

#define DIBUTTON_SPACESIM_GLANCE_UP_LINK 117949664

#define DIBUTTON_SKIING_SPECIAL1 486540292

#define DI8DEVTYPEDEVICECTRL_UNKNOWN 2

#define DIBUTTON_SKIING_SPECIAL2 486540294

#define DIAXIS_FISHING_ROTATE 235028995

#define DIBUTTON_BROWSER_HISTORY 671106057

#define DIAXIS_BIKINGM_PEDAL 469828098

#define DIDC_FFATTACK 512

#define DIK_COMMA 51

#define DIBUTTON_ARCADES_BACK_LINK 553731304

#define DIERR_EFFECTPLAYING 2147746312

#define DIDC_ATTACHED 1

#define DIKEYBOARD_MEDIASTOP 2164262052

#define DIBUTTON_ARCADES_LEFT_LINK 553698532

#define DIBUTTON_TPS_PAUSE 167789820

#define DI8DEVTYPEGAMEPAD_STANDARD 2

#define DIEFT_DEADBAND 16384

#define DIBUTTON_MECHA_WEAPONS 687866882

#define DIHATSWITCH_2DCONTROL_HATSWITCH 587220481

#define DIERR_INSUFFICIENTPRIVS 2147746304

#define DIBUTTON_BASEBALLB_BACK_LINK 251741416

#define DIAXIS_DRIVINGC_BRAKE 33821187

#define DIBUTTON_DRIVINGR_ACCELERATE_LINK 17028320

#define DIBUTTON_2DCONTROL_SPECIAL 587203587

#define DIBUTTON_BASEBALLF_THROW1 285213698

#define DIBUTTON_DRIVINGC_SHIFTUP 33573892

#define DIBUTTON_BASEBALLF_THROW2 285213699

#define DIHATSWITCH_FPS_GLANCE 151012865

#define DIK_NUMPADPLUS 78

#define DIERR_INVALIDPARAM 2147942487

#define DIK_PRIOR 201

#define DIBUTTON_FIGHTINGH_MENU 134219005

#define DIBUTTON_HOCKEYD_RIGHT_LINK 436258028

#define DIBUTTON_BROWSER_PAUSE 671106300

#define DIK_NUMPADPERIOD 83

#define DIVIRTUAL_SPORTS_HOCKEY_DEFENSE 436207616

#define DIAXIS_HOCKEYO_LATERAL 419463681

#define DIBUTTON_BASEBALLP_MENU 268436733

#define DIKEYBOARD_BACK 2164261902

#define DIAXIS_ANY_C_1 4278501889

#define DIAXIS_ANY_C_2 4278501890

#define DI8DEVTYPE_SUPPLEMENTAL 28

#define DIBUTTON_ARCADES_SPECIAL 553649156

#define DIKEYBOARD_LMENU 2164261944

#define DIBUTTON_BASEBALLF_BACK_LINK 285295848

#define DIHATSWITCH_FLYINGM_GLANCE 83904001

#define DIBUTTON_SOCCERD_MENU 520094973

#define DIKEYBOARD_DOWN 2164262096

#define DIBUTTON_GOLF_LEFT_LINK 402703588

#define DIBUTTON_BROWSER_NEXT 671106055

#define DIK_KANA 112

#define DIEDBS_MAPPEDPRI2 2

#define DIEDBS_MAPPEDPRI1 1

#define DIA_APPNOMAP 4

#define DIBUTTON_BASEBALLF_DEVICE 285230334

#define DI8DEVTYPEMOUSE_TRADITIONAL 2

#define DIKEYBOARD_CALCULATOR 2164262049

#define DIAFTS_NEWDEVICEHIGH 4294967295

#define DIBUTTON_HUNTING_CROUCH 218121225

#define DIAXIS_GOLF_MOVE 402719234

#define DIBUTTON_2DCONTROL_DISPLAY 587219973

#define DIA_APPMAPPED 2

#define DIBUTTON_SOCCERD_STEAL 520094722

#define DIBUTTON_FPS_APPLY 150995971

#define DIBUTTON_BBALLD_RIGHT_LINK 318817516

#define DIBUTTON_SOCCERO_MENU 503317757

#define DIK_NUMPADMINUS 74

#define DI8DEVTYPESUPPLEMENTAL_HEADTRACKER 4

#define DIAXIS_GOLF_LATERAL 402686465

#define DIBUTTON_FIGHTINGH_SELECT 134235144

#define DIBUTTON_FISHING_JUMP 234898440

#define DIK_WEBSEARCH 229

#define DIBUTTON_HUNTING_ROTATE_RIGHT_LINK 218252524

#define DIK_WEBREFRESH 231

#define DIBUTTON_MECHA_RIGHT_LINK 687916268

#define DIBUTTON_BASEBALLB_BOX 251675658

#define DIBUTTON_DRIVINGT_ACCELERATE_LINK 50582752

#define DIEFT_POSNEGCOEFFICIENTS 4096

#define DIPROP_CPOINTS 21

#define DIAXIS_REMOTE_SLIDER 654639617

#define DIKEYBOARD_LWIN 2164262107

#define DIDFT_COLLECTION 64

#define DIBUTTON_MECHA_CENTER 687883271

#define DIBUTTON_FIGHTINGH_JUMP 134218757

#define DIBUTTON_ARCADEP_VIEW_LEFT_LINK 570934500

#define DIBUTTON_BASEBALLB_RIGHT_LINK 251708652

#define DIKEYBOARD_YEN 2164262013

#define DIAXIS_BROWSER_MOVE 671154690

#define DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS 13

#define DIPROP_TYPENAME 26

#define DIBUTTON_HOCKEYO_STRATEGY 419447815

#define DIAFTS_UNUSEDDEVICEHIGH 0

#define DIDSAM_NOUSER 1

#define DIK_LBRACKET 26

#define DIEP_AXES 32

#define DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE 9

#define DIEGES_PLAYING 1

#define DIBUTTON_STRATEGYT_DISPLAY 201344008

#define DIBUTTON_BBALLO_RIGHT_LINK 302040300

#define DIBUTTON_BASEBALLB_MENU 251659517

#define DIBUTTON_FLYINGM_MENU 83887357

#define DIAXIS_BBALLD_LATERAL 318800385

#define DIERR_MOREDATA 2147746306

#define DIBUTTON_MECHA_ZOOM 687866885

#define DIBUTTON_BBALLD_BURST 318768134

#define DIBUTTON_FISHING_MENU 234882301

#define DIBUTTON_SOCCERO_SHOOTLOW 503333896

#define DIDFT_ANYINSTANCE 16776960

#define DIBUTTON_CADM_PAUSE 637551868

#define DIBUTTON_FLYINGC_BRAKE_LINK 67398880

#define DIBUTTON_FOOTBALLQ_AUDIBLE 352338953

#define DIBUTTON_FLYINGM_FIRE 83889153

#define DIBUTTON_REMOTE_TUNER 654334988

#define DISFFC_SETACTUATORSON 16

#define DIBUTTON_3DCONTROL_DISPLAY 603997189

#define DIBUTTON_FLYINGC_GLANCE_UP_LINK 67618016

#define DIBUTTON_CADM_MENU 637535485

#define DIAXIS_3DCONTROL_MOVE 604045826

#define DIK_VOLUMEDOWN 174

#define DIGFFS_ACTUATORSON 16

#define DIK_KANJI 148

#define DIEFT_SATURATION 2048

#define DI8DEVTYPEGAMEPAD_TILT 3

#define DIVIRTUAL_STRATEGY_TURN 201326592

#define DIPROP_PHYSICALRANGE 18

#define DIVIRTUAL_CAD_FLYBY 620756992

#define DIKEYBOARD_GRAVE 2164261929

#define DIKEYBOARD_LCONTROL 2164261917

#define DIKEYBOARD_PERIOD 2164261940

#define DIBUTTON_FOOTBALLO_LEFT_LINK 369149156

#define DIEFT_PERIODIC 3

#define DIK_SPACE 57

#define DIBUTTON_FPS_DISPLAY 151012360

#define DIBUTTON_SOCCERD_FAKE 520094723

#define DI8DEVTYPEKEYBOARD_UNKNOWN 0

#define DIK_MEDIASELECT 237

#define DIERR_NOAGGREGATION 2147746064

#define DIERR_BETADIRECTINPUTVERSION 2147943553

#define DIBUTTON_BIKINGM_SPECIAL1 469763075

#define DIAXIS_DRIVINGT_ROTATE 50463236

#define DIBUTTON_BIKINGM_SPECIAL2 469763077

#define DISFFC_CONTINUE 8

#define DIHATSWITCH_FIGHTINGH_SLIDE 134235649

#define DIBUTTON_DRIVINGT_PAUSE 50349308

#define DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK 34063588

#define DIBUTTON_FOOTBALLO_RIGHTARM 369099779

#define DIKEYBOARD_RIGHT 2164262093

#define DIK_LSHIFT 42

#define DIA_NORANGE 8

#define DIBUTTON_STRATEGYT_APPLY 201327619

#define DIBUTTON_BASEBALLF_MENU 285213949

#define DIAXIS_ANY_1 4278206977

#define DIAXIS_ANY_3 4278206979

#define DIAXIS_ANY_2 4278206978

#define DIBUTTON_STRATEGYT_FORWARD_LINK 201409760

#define DIAXIS_ANY_4 4278206980

#define DIBUTTON_SPACESIM_RAISE 117457926

#define DIHATSWITCH_SOCCERD_GLANCE 520111617

#define DIBUTTON_FOOTBALLO_DIVE 369116169

#define DIBUTTON_HOCKEYO_SUBSTITUTE 419447817

#define DIEB_NOTRIGGER 4294967295

#define DIBUTTON_FIGHTINGH_KICK 134218754

#define DIDFT_FFACTUATOR 16777216

#define DIBUTTON_SPACESIM_PAUSE 117458172

#define DIKEYBOARD_PLAYPAUSE 2164262050

#define DIVIRTUAL_FLYING_CIVILIAN 67108864

#define DIBUTTON_FLYINGM_DISPLAY 83911686

#define DIKEYBOARD_VOLUMEUP 2164262064

#define DI8DEVTYPEDRIVING_THREEPEDALS 4

#define DISFFC_RESET 1

#define DI8DEVTYPEDRIVING_COMBINEDPEDALS 2

#define DIHATSWITCH_TPS_GLANCE 167790081

#define DIBUTTON_BBALLO_BURST 301990919

#define DIAXIS_STRATEGYT_LATERAL 201359873

#define DIAXIS_FLYINGH_THROTTLE 100915717

#define DIBUTTON_CADM_SPECIAL2 637535236

#define DIBUTTON_CADM_SPECIAL1 637535234

#define DIBUTTON_STRATEGYR_ATTACK 184550404

#define DIKEYBOARD_SLASH 2164261941

#define DIDOI_ASPECTFORCE 1024

#define DIAXIS_SOCCERD_LATERAL 520126977

#define DIBUTTON_STRATEGYR_BACK_LINK 184632552

#define DI_POLLEDDEVICE 2

#define DIAXIS_SPACESIM_THROTTLE 117670403

#define DIAXIS_FLYINGC_THROTTLE 67342851

#define DIEFT_CUSTOMFORCE 5

#define DIVIRTUAL_SPORTS_BASEBALL_FIELD 285212672

#define DIBUTTON_CADM_DISPLAY 637551621

#define DIKEYBOARD_SUBTRACT 2164261962

#define DISCL_FOREGROUND 4

#define DIK_NUMPAD3 81

#define DIK_NUMPAD2 80

#define DIK_NUMPAD5 76

#define DIK_NUMPAD4 75

#define DIK_NUMPAD7 71

#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION 3

#define DIK_NUMPAD6 77

#define DIK_NUMPAD9 73

#define DIK_NUMPAD8 72

#define DIK_NUMPAD1 79

#define DIK_NUMPAD0 82

#define DIBUTTON_HUNTING_AIM 218104834

#define DIBUTTON_HOCKEYG_MENU 452986109

#define DIBUTTON_RACQUET_LEFT_LINK 536921316

#define DIKEYBOARD_RWIN 2164262108

#define DIK_COLON 146

#define DIBUTTON_STRATEGYR_FORWARD_LINK 184632544

#define DIBUTTON_STRATEGYT_TEAM 201327620

#define DIDIFT_CONFIGURATION 1

#define DIBUTTON_FLYINGC_GLANCE_DOWN_LINK 67618024

#define JOY_HWS_ISHEADTRACKER 33554432

#define DIBUTTON_SKIING_SLOWER_LINK 486622440

#define DIBUTTON_3DCONTROL_SPECIAL2 603980804

#define DIK_BACKSPACE 14

#define DIBUTTON_FOOTBALLO_TURBO 369116168

#define DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK 50480364

#define DI8DEVTYPEMOUSE_FINGERSTICK 3

#define DIBUTTON_BASEBALLF_AIM_LEFT_LINK 285263076

#define DIBUTTON_BBALLO_FORWARD_LINK 302073056

#define DIBUTTON_3DCONTROL_SPECIAL1 603980802

#define DIBUTTON_SOCCERO_FORWARD_LINK 503399648

#define DIK_WAKE 227

#define DIAXIS_ARCADEP_LATERAL 570458625

#define DIERR_OUTOFMEMORY 2147942414

#define DIDAL_TOPALIGNED 4

#define DIK_SLEEP 223

#define DIPROP_CALIBRATION 11

#define DIBUTTON_FOOTBALLP_MENU 335545597

#define DIEP_START 536870912

#define DIAXIS_TPS_STEP 167821827

#define DIK_LALT 56

#define DIBUTTON_REMOTE_CUE 654320644

#define DIBUTTON_FIGHTINGH_SPECIAL1 134218758

#define DIBUTTON_FIGHTINGH_SPECIAL2 134218759

#define DIBUTTON_BASEBALLP_WALK 268452870

#define DIEP_DURATION 1

#define DIBUTTON_FOOTBALLD_RIGHT_LINK 385926380

#define DIAXIS_2DCONTROL_MOVE 587268610

#define DIBUTTON_SOCCERO_RIGHT_LINK 503366892

#define DIERR_DEVICEFULL 2147746305

#define DIAXIS_CADM_ROTATEZ 637682182

#define DIAXIS_CADM_ROTATEX 637747716

#define DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK 470041832

#define DIAXIS_CADM_ROTATEY 637714949

#define DIFEF_INCLUDENONSTANDARD 1

#define JOY_HWS_ISGAMEPORTBUS 2147483648

#define DIBUTTON_BBALLO_DEVICE 302007550

#define DIBUTTON_FISHING_DISPLAY 234898438

#define DIHATSWITCH_ARCADEP_VIEW 570443265

#define DIBUTTON_SOCCERO_PAUSE 503334140

#define DIBUTTON_ARCADEP_SELECT 570426373

#define DIKEYBOARD_WEBREFRESH 2164262119

#define DI8DEVTYPEKEYBOARD_NOKIA9140 6

#define DIBUTTON_FPS_DODGE 151012361

#define DIDOI_GUIDISUSAGE 65536

#define DIBUTTON_SOCCERD_SELECT 520094726

#define DIEDBSFL_AVAILABLEDEVICES 4096

#define DIBUTTON_MECHA_TARGET 687866883

#define DIK_CAPITAL 58

#define DIBUTTON_ARCADES_SELECT 553649157

#define DIDC_STARTDELAY 32768

#define DIBUTTON_FPS_ROTATE_LEFT_LINK 151045348

#define DIBUTTON_2DCONTROL_DEVICE 587220222

#define DIAXIS_FOOTBALLQ_LATERAL 352354817

#define DIKEYBOARD_WEBHOME 2164262066

#define DIBUTTON_FLYINGM_BRAKE_LINK 84174048

#define DIKEYBOARD_LEFT 2164262091

#define DIBUTTON_SOCCERD_SLIDE 520094727

#define DIBUTTON_HUNTING_RIGHT_LINK 218154220

#define DIBUTTON_HOCKEYG_POKE 452985858

#define DIAXIS_DRIVINGT_BARREL 50397698

#define DIGFFS_DEVICELOST 2147483648

#define DIBUTTON_BROWSER_FAVORITES 671106054

#define DIDAL_LEFTALIGNED 1

#define DIBUTTON_SKIING_ZOOM 486556679

#define DIDOI_ASPECTACCEL 768

#define DIAXIS_SPACESIM_MOVE 117506562

#define DIAXIS_FPS_LOOKUPDOWN 151093763

#define DIBUTTON_BBALLO_JAB 302007307

#define DIDBAM_DEFAULT 0

#define DIAXIS_CADF_ROTATEZ 620904966

#define DIAXIS_CADF_ROTATEY 620937733

#define DIAXIS_CADF_ROTATEX 620970500

#define DIAXIS_SKIING_SPEED 486605314

#define DIVIRTUAL_SPORTS_BASEBALL_PITCH 268435456

#define DIERR_NOTINITIALIZED 2147942421

#define DIBUTTON_DRIVINGR_MAP 16794631

#define DIA_APPFIXED 16

#define DIBUTTON_FLYINGC_DEVICE 67126526

#define DIBUTTON_HOCKEYO_DEVICE 419448062

#define DIERR_NOTBUFFERED 2147746311

#define DI8DEVTYPE_LIMITEDGAMESUBTYPE 1

#define DIERR_INCOMPLETEEFFECT 2147746310

#define DIBUTTON_BASEBALLB_DEVICE 251675902

#define DIK_4 5

#define DIK_3 4

#define DIK_2 3

#define DIK_1 2

#define DIK_0 11

#define DIEDFL_INCLUDEALIASES 65536

#define DIK_9 10

#define DIK_8 9

#define DIK_7 8

#define DIK_6 7

#define DIK_5 6

#define DIK_D 32

#define DIK_C 46

#define DIK_B 48

#define DIK_A 30

#define DIK_L 38

#define DIK_K 37

#define DIK_J 36

#define DIK_I 23

#define DIBUTTON_FOOTBALLQ_PASS 352322565

#define DIBUTTON_STRATEGYR_MAP 184566792

#define DIK_H 35

#define DIK_G 34

#define DIK_F 33

#define DIK_E 18

#define DIK_T 20

#define DIK_S 31

#define DIK_R 19

#define DIK_Q 16

#define DIBUTTON_FLYINGH_WEAPONS 100668418

#define DIK_P 25

#define DIVIRTUAL_ARCADE_SIDE2SIDE 553648128

#define DIK_O 24

#define DIK_N 49

#define DIK_M 50

#define DIK_Z 44

#define DIK_Y 21

#define DIK_X 45

#define DIK_W 17

#define DIK_V 47

#define DIK_U 22

#define DIBUTTON_SKIING_PAUSE 486556924

#define DIBUTTON_SKIING_CROUCH 486540290

#define DIBUTTON_RACQUET_DEVICE 536888574

#define DIBUTTON_STRATEGYT_TURN 201327621

#define DIBUTTON_TPS_VIEW 167789574

#define DIERR_OLDDIRECTINPUTVERSION 2147943550

#define DIBUTTON_DRIVINGR_BOOST 16794632

#define DIAXIS_FLYINGM_RUDDER 84036100

#define DIBUTTON_FPS_PAUSE 151012604

#define DIEFF_SPHERICAL 64

#define DIAXIS_ARCADES_LATERAL 553681409

#define DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE 301989888

#define DIBUTTON_SPACESIM_SLOWER_LINK 117687528

#define DIK_RMENU 184

#define DIBUTTON_SOCCERO_SPECIAL1 503317509

#define DIVIRTUAL_DRIVING_COMBAT 33554432

#define MAXCPOINTSNUM 8

#define DIVIRTUAL_SPORTS_GOLF 402653184

#define DIBUTTON_STRATEGYR_DISPLAY 184566793

#define DIAXIS_HOCKEYD_LATERAL 436240897

#define DIBUTTON_SPACESIM_LOWER 117457927

#define DIPROPAUTOCENTER_ON 1

#define DIBUTTON_STRATEGYR_CAST 184550405

#define DIBUTTON_STRATEGYT_INSTRUCT 201327618

#define DIBUTTON_TPS_RUN 167773185

#define DIBUTTON_BROWSER_PREVIOUS 671106056

#define DI8DEVTYPEREMOTE_UNKNOWN 2

#define DIBUTTON_DRIVINGR_DASHBOARD 16794629

#define DIBUTTON_ARCADEP_LEFT_LINK 570475748

#define DI8DEVTYPEJOYSTICK_STANDARD 2

#define DIBUTTON_STRATEGYR_APPLY 184550402

#define DIBUTTON_REMOTE_MUTE 654312449

#define DIBUTTON_HOCKEYO_ZOOM 419447814

#define DIKEYBOARD_RETURN 2164261916

#define DIBUTTON_STRATEGYT_RIGHT_LINK 201377004

#define DIHATSWITCH_HUNTING_GLANCE 218121729

#define DIBUTTON_BASEBALLB_FORWARD_LINK 251741408

#define DIK_SCROLL 70

#define DIBUTTON_BBALLD_FORWARD_LINK 318850272

#define DIKEYBOARD_PAUSE 2164262085

#define DIK_EQUALS 13

#define DIEFT_RAMPFORCE 2

#define DIBUTTON_ARCADES_MENU 553649405

#define DIBUTTON_FOOTBALLD_MENU 385877245

#define DIBUTTON_HOCKEYD_TIMEOUT 436225032

#define DIBUTTON_HOCKEYG_RIGHT_LINK 453035244

#define DIBUTTON_HOCKEYD_LEFT_LINK 436258020

#define DIBUTTON_HOCKEYD_BURST 436208643

#define DIK_MULTIPLY 55

#define DIK_ESCAPE 1

#define DIHATSWITCH_DRIVINGR_GLANCE 16795137

#define DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK 50480356

#define DIPROPCALIBRATIONMODE_RAW 1

#define DIK_SYSRQ 183

#define DIBUTTON_FOOTBALLO_THROW 369099780

#define DI8DEVTYPEKEYBOARD_NOKIA1050 5

#define DIBUTTON_ARCADES_RIGHT_LINK 553698540

#define DIKEYBOARD_END 2164262095

#define DIBUTTON_FPS_GLANCE_DOWN_LINK 151110888

#define DIBUTTON_HOCKEYG_DEVICE 453002494

#define DIBUTTON_DRIVINGR_VIEW 16784387

#define DIAXIS_REMOTE_SLIDER2 654656002

#define DIBUTTON_HOCKEYG_SUBSTITUTE 453002248

#define DIBUTTON_FOOTBALLD_TACKLE 385876996

#define DIAXIS_SPACESIM_LATERAL 117473793

#define DIKEYBOARD_NUMPADCOMMA 2164262067

#define DIKEYBOARD_APOSTROPHE 2164261928

#define DIAXIS_3DCONTROL_LATERAL 604013057

#define DIFEF_DEFAULT 0

#define DIHATSWITCH_HOCKEYG_SCROLL 453002753

#define DIKEYBOARD_F11 2164261975

#define DIKEYBOARD_F10 2164261956

#define DIK_WEBHOME 178

#define DIKEYBOARD_F13 2164261988

#define DIKEYBOARD_F12 2164261976

#define DIKEYBOARD_F15 2164261990

#define DIKEYBOARD_F14 2164261989

#define DI8DEVTYPE1STPERSON_UNKNOWN 2

#define DIES_NODOWNLOAD 2147483648

#define DIBUTTON_BASEBALLB_SLIDE 251659271

#define DIBUTTON_FISHING_LEFT_LINK 234931428

#define DIAXIS_FLYINGC_BANK 67144193

#define DIBUTTON_GOLF_FLYBY 402654214

#define DIK_CIRCUMFLEX 144

#define DIBUTTON_BIKINGM_SLOWER_LINK 469845224

#define DIENUM_STOP 0

#define DIK_MUTE 160

#define DIBUTTON_DRIVINGC_ACCELERATE_LINK 33805536

#define DIPROP_RANGE 4

#define DI_TRUNCATED 8

#define DIBUTTON_TPS_DEVICE 167789822

#define DIAXIS_DRIVINGR_ACCEL_AND_BRAKE 16861700

#define DIBUTTON_FISHING_TYPE 234882050

#define DIBUTTON_STRATEGYT_PAUSE 201344252

#define DIVIRTUAL_DRIVING_RACE 16777216

#define DIBUTTON_SPACESIM_BACKWARD_LINK 117523688

#define DIVOICE_RECORDMUTE 2197816331

#define DIBUTTON_RACQUET_SPECIAL 536871940

#define DIAXIS_MECHA_ROTATE 687997443

#define DIBUTTON_REMOTE_DVD 654334989

#define DIDC_FFFADE 1024

#define DIBUTTON_FOOTBALLO_JUMP 369099777

#define DIBUTTON_FOOTBALLD_SPIN 385893383

#define DIKEYBOARD_NUMPAD3 2164261969

#define DIKEYBOARD_NUMPAD2 2164261968

#define DIKEYBOARD_NUMPAD1 2164261967

#define DIKEYBOARD_NUMPAD0 2164261970

#define DIKEYBOARD_NUMPAD7 2164261959

#define DIBUTTON_HOCKEYD_DEVICE 436225278

#define DIKEYBOARD_NUMPAD6 2164261965

#define DIKEYBOARD_NUMPAD5 2164261964

#define DIKEYBOARD_NUMPAD4 2164261963

#define DIKEYBOARD_NUMPAD9 2164261961

#define DIKEYBOARD_NUMPAD8 2164261960

#define DIBUTTON_GOLF_FORWARD_LINK 402736352

#define DIDFT_ABSAXIS 2

#define DIBUTTON_FOOTBALLD_BULLRUSH 385893385

#define DIBUTTON_BBALLO_DUNK 301990914

#define JOY_HWS_GAMEPORTBUSBUSY 1

#define DIBUTTON_BIKINGM_JUMP 469763073

#define DI_TRUNCATEDANDRESTARTED 12

#define DIBUTTON_STRATEGYT_ZOOM 201344006

#define DIBUTTON_SPACESIM_TARGET 117441539

#define DIKEYBOARD_KANA 2164262000

#define DIGFFS_PAUSED 4

#define DIAXIS_DRIVINGC_STEER 33589761

#define DIAXIS_ANY_V_2 4278403586

#define DIAXIS_ANY_V_1 4278403585

#define DIBUTTON_BROWSER_SEARCH 671106051

#define DIBUTTON_FLYINGM_SLOWER_LINK 84137192

#define DI8DEVTYPESUPPLEMENTAL_UNKNOWN 2

#define DIKEYBOARD_MINUS 2164261900

#define DIK_HOME 199

#define DIBUTTON_REMOTE_ADJUST 654334990

#define DIEFT_FFFADE 1024

#define DIBUTTON_ARCADEP_SPECIAL 570426372

#define DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK 34063596

#define DIGFFS_STOPPED 2

#define DIK_END 207

#define DIPROP_INSTANCENAME 13

#define DI8DEVTYPEKEYBOARD_NEC98 7

#define DIKEYBOARD_NEXTTRACK 2164262041

#define DIBUTTON_REMOTE_CHANGE 654320646

#define DIBUTTON_FLYINGC_FASTER_LINK 67359968

#define DIBUTTON_FOOTBALLO_JUKE 369116166

#define DIBUTTON_DRIVINGR_PAUSE 16794876

#define DIK_NUMPADEQUALS 141

#define DIBUTTON_SOCCERO_SELECT 503317510

#define DI8DEVTYPESUPPLEMENTAL_SHIFTER 7

#define DIBUTTON_GOLF_UP 402654211

#define DIBUTTON_BBALLO_CALL 301990920

#define DIK_F14 101

#define DIBUTTON_FOOTBALLQ_DEVICE 352339198

#define DIK_F15 102

#define DIK_F12 88

#define DIK_F13 100

#define DIBUTTON_FOOTBALLD_FAKE 385876997

#define DIK_F10 68

#define DIK_F11 87

#define DIEDFL_INCLUDEPHANTOMS 131072

#define DIDBAM_HWDEFAULTS 4

#define DI8DEVTYPEKEYBOARD_NEC98106 9

#define DIBUTTON_HOCKEYO_BACK_LINK 419513576

#define DIKEYBOARD_OEM_102 2164261974

#define DIBUTTON_SKIING_LEFT_LINK 486589668

#define DIEP_ALLPARAMS 1023

#define DIDC_HIDDEN 262144

#define DIBUTTON_CADF_SPECIAL2 620758020

#define DI8DEVTYPEKEYBOARD_OLIVETTI 2

#define DIAXIS_DRIVINGT_ACCEL_AND_BRAKE 50416134

#define DIHATSWITCH_FLYINGH_GLANCE 100681217

#define DIBUTTON_CADF_SPECIAL1 620758018

#define DIBUTTON_SOCCERO_CONTROL 503333900

#define DIVIRTUAL_SPORTS_SOCCER_DEFENSE 520093696

#define DIBUTTON_BIKINGM_MENU 469763325

#define DIBUTTON_GOLF_MENU 402654461

#define DIBUTTON_FOOTBALLO_MENU 369100029

#define DIBUTTON_ARCADES_VIEW_DOWN_LINK 554157288

#define DIERR_UNPLUGGED 2147746313

#define DIBUTTON_HOCKEYD_PAUSE 436225276

#define DIBUTTON_GOLF_PAUSE 402670844

#define DIK_NUMPADSLASH 181

#define DIBUTTON_BASEBALLF_JUMP 285213701

#define DIEDFL_ALLDEVICES 0

#define DIAXIS_STRATEGYT_MOVE 201392642

#define DIERR_ALREADYINITIALIZED 2147943647

#define DIBUTTON_BROWSER_DEVICE 671106302

#define DIBUTTON_BIKINGM_PAUSE 469779708

#define DIAH_HWAPP 4

#define DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK 184698084

#define DIBUTTON_STRATEGYR_PAUSE 184567036

#define DIAXIS_CADF_INOUT 620855811

#define DIBUTTON_SOCCERO_PLAYER 503317508

#define DIBUTTON_GOLF_DEVICE 402670846

#define DIKEYBOARD_CAPITAL 2164261946

#define DIBUTTON_BASEBALLP_FORWARD_LINK 268518624

#define DIBUTTON_BBALLD_SPECIAL 318768132

#define DIHATSWITCH_SPACESIM_GLANCE 117458433

#define DIERR_REPORTFULL 2147746314

#define DI8DEVTYPEKEYBOARD_JAPAN106 10

#define DIDFT_INSTANCEMASK 16776960

typedef struct _D3DCAPS8 _D3DCAPS8, *P_D3DCAPS8;

typedef struct _D3DCAPS8 D3DCAPS8;

typedef enum _D3DDEVTYPE {
    D3DDEVTYPE_HAL=1,
    D3DDEVTYPE_REF=2,
    D3DDEVTYPE_SW=3,
    D3DDEVTYPE_FORCE_DWORD=2147483647
} _D3DDEVTYPE;

typedef enum _D3DDEVTYPE D3DDEVTYPE;

struct _D3DCAPS8 {
    D3DDEVTYPE DeviceType;
    UINT AdapterOrdinal;
    DWORD Caps;
    DWORD Caps2;
    DWORD Caps3;
    DWORD PresentationIntervals;
    DWORD CursorCaps;
    DWORD DevCaps;
    DWORD PrimitiveMiscCaps;
    DWORD RasterCaps;
    DWORD ZCmpCaps;
    DWORD SrcBlendCaps;
    DWORD DestBlendCaps;
    DWORD AlphaCmpCaps;
    DWORD ShadeCaps;
    DWORD TextureCaps;
    DWORD TextureFilterCaps;
    DWORD CubeTextureFilterCaps;
    DWORD VolumeTextureFilterCaps;
    DWORD TextureAddressCaps;
    DWORD VolumeTextureAddressCaps;
    DWORD LineCaps;
    DWORD MaxTextureWidth;
    DWORD MaxTextureHeight;
    DWORD MaxVolumeExtent;
    DWORD MaxTextureRepeat;
    DWORD MaxTextureAspectRatio;
    DWORD MaxAnisotropy;
    float MaxVertexW;
    float GuardBandLeft;
    float GuardBandTop;
    float GuardBandRight;
    float GuardBandBottom;
    float ExtentsAdjust;
    DWORD StencilCaps;
    DWORD FVFCaps;
    DWORD TextureOpCaps;
    DWORD MaxTextureBlendStages;
    DWORD MaxSimultaneousTextures;
    DWORD VertexProcessingCaps;
    DWORD MaxActiveLights;
    DWORD MaxUserClipPlanes;
    DWORD MaxVertexBlendMatrices;
    DWORD MaxVertexBlendMatrixIndex;
    float MaxPointSize;
    DWORD MaxPrimitiveCount;
    DWORD MaxVertexIndex;
    DWORD MaxStreams;
    DWORD MaxStreamStride;
    DWORD VertexShaderVersion;
    DWORD MaxVertexShaderConst;
    DWORD PixelShaderVersion;
    float MaxPixelShaderValue;
};

#define D3DPTEXTURECAPS_POW2 2

#define D3DSTENCILCAPS_REPLACE 4

#define D3DPMISCCAPS_CLIPPLANESCALEDPOINTS 256

#define D3DPRESENT_INTERVAL_ONE 1

#define D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA 1048576

#define D3DCAPS2_FULLSCREENGAMMA 131072

#define D3DPRASTERCAPS_FOGVERTEX 128

#define D3DTEXOPCAPS_DOTPRODUCT3 8388608

#define D3DPCMPCAPS_ALWAYS 128

#define D3DPRASTERCAPS_FOGRANGE 65536

#define D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR 524288

#define D3DPBLENDCAPS_INVSRCCOLOR 8

#define D3DPSHADECAPS_SPECULARGOURAUDRGB 512

#define D3DDEVCAPS_NPATCHES 16777216

#define D3DPTEXTURECAPS_MIPVOLUMEMAP 32768

#define D3DLINECAPS_ZTEST 2

#define D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE 8388608

#define D3DPRESENT_INTERVAL_TWO 2

#define D3DTEXOPCAPS_BLENDTEXTUREALPHAPM 16384

#define D3DTEXOPCAPS_ADDSIGNED 128

#define D3DPMISCCAPS_CLIPTLVERTS 512

#define D3DDEVCAPS_HWTRANSFORMANDLIGHT 65536

#define D3DTEXOPCAPS_ADDSIGNED2X 256

#define D3DDEVCAPS_EXECUTESYSTEMMEMORY 16

#define D3DTEXOPCAPS_ADDSMOOTH 1024

#define D3DPCMPCAPS_EQUAL 4

#define D3DLINECAPS_TEXTURE 1

#define D3DVTXPCAPS_TEXGEN 1

#define D3DSTENCILCAPS_DECRSAT 16

#define D3DDEVCAPS_PUREDEVICE 1048576

#define D3DPBLENDCAPS_BOTHSRCALPHA 2048

#define D3DPMISCCAPS_COLORWRITEENABLE 128

#define D3DVTXPCAPS_NO_VSDT_UBYTE4 128

#define D3DDEVCAPS_TEXTURENONLOCALVIDMEM 4096

#define D3DPRASTERCAPS_ZBUFFERLESSHSR 32768

#define D3DDEVCAPS_DRAWPRIMITIVES2EX 32768

#define D3DPMISCCAPS_BLENDOP 2048

#define D3DPTADDRESSCAPS_BORDER 8

#define D3DPTFILTERCAPS_MIPFPOINT 65536

#define D3DDEVCAPS_TLVERTEXSYSTEMMEMORY 64

#define D3DDEVCAPS_TLVERTEXVIDEOMEMORY 128

#define D3DPTFILTERCAPS_MAGFAFLATCUBIC 134217728

#define D3DTEXOPCAPS_ADD 64

#define D3DPMISCCAPS_TSSARGTEMP 1024

#define D3DCURSORCAPS_LOWRES 2

#define D3DPBLENDCAPS_INVSRCALPHA 32

#define D3DTEXOPCAPS_BUMPENVMAP 2097152

#define D3DPCMPCAPS_LESSEQUAL 8

#define D3DDEVCAPS_RTPATCHHANDLEZERO 8388608

#define D3DPRASTERCAPS_WBUFFER 262144

#define D3DPMISCCAPS_CULLCW 32

#define D3DTEXOPCAPS_MODULATE2X 16

#define D3DFVFCAPS_TEXCOORDCOUNTMASK 65535

#define D3DPTEXTURECAPS_VOLUMEMAP_POW2 262144

#define D3DDEVCAPS_QUINTICRTPATCHES 2097152

#define D3DTEXOPCAPS_BLENDCURRENTALPHA 32768

#define D3DPBLENDCAPS_SRCALPHASAT 1024

#define D3DPTEXTURECAPS_PERSPECTIVE 1

#define D3DPRASTERCAPS_ZBIAS 16384

#define D3DPRASTERCAPS_ANTIALIASEDGES 4096

#define D3DLINECAPS_FOG 16

#define D3DPMISCCAPS_MASKZ 2

#define D3DPRASTERCAPS_COLORPERSPECTIVE 4194304

#define D3DPMISCCAPS_LINEPATTERNREP 4

#define D3DPRESENT_INTERVAL_IMMEDIATE 2147483648

#define D3DCAPS2_RESERVED 33554432

#define D3DCAPS2_CANRENDERWINDOWED 524288

#define D3DPTFILTERCAPS_MINFLINEAR 512

#define D3DTEXOPCAPS_SUBTRACT 512

#define D3DPRASTERCAPS_ZTEST 16

#define D3DPRESENT_INTERVAL_DEFAULT 0

#define D3DPRASTERCAPS_MIPMAPLODBIAS 8192

#define D3DPTFILTERCAPS_MAGFPOINT 16777216

#define D3DPTEXTURECAPS_NONPOW2CONDITIONAL 256

#define D3DPBLENDCAPS_DESTALPHA 64

#define D3DPBLENDCAPS_INVDESTCOLOR 512

#define D3DTEXOPCAPS_MODULATE4X 32

#define D3DPTFILTERCAPS_MIPFLINEAR 131072

#define D3DTEXOPCAPS_SELECTARG1 2

#define D3DTEXOPCAPS_SELECTARG2 4

#define D3DPBLENDCAPS_DESTCOLOR 256

#define D3DLINECAPS_ALPHACMP 8

#define D3DPRASTERCAPS_WFOG 1048576

#define D3DPBLENDCAPS_INVDESTALPHA 128

#define D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR 131072

#define D3DTEXOPCAPS_MULTIPLYADD 16777216

#define D3DPTFILTERCAPS_MINFANISOTROPIC 1024

#define D3DPRASTERCAPS_DITHER 1

#define D3DPTADDRESSCAPS_CLAMP 4

#define D3DPTEXTURECAPS_MIPCUBEMAP 65536

#define D3DSTENCILCAPS_KEEP 1

#define D3DDEVCAPS_SEPARATETEXTUREMEMORIES 16384

#define D3DPTADDRESSCAPS_WRAP 1

#define D3DPRASTERCAPS_ANISOTROPY 131072

#define D3DSTENCILCAPS_INCRSAT 8

#define D3DDEVCAPS_RTPATCHES 4194304

#define D3DFVFCAPS_DONOTSTRIPELEMENTS 524288

#define D3DPBLENDCAPS_ONE 2

#define D3DPTEXTURECAPS_MIPMAP 16384

#define D3DCURSORCAPS_COLOR 1

#define D3DDEVCAPS_CANRENDERAFTERFLIP 2048

#define D3DPTFILTERCAPS_MINFPOINT 256

#define D3DVTXPCAPS_POSITIONALLIGHTS 16

#define D3DPTEXTURECAPS_PROJECTED 1024

#define D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC 268435456

#define D3DTEXOPCAPS_LERP 33554432

#define D3DPRESENT_INTERVAL_THREE 4

#define D3DPBLENDCAPS_BOTHINVSRCALPHA 4096

#define D3DCAPS2_NO2DDURING3DSCENE 2

#define D3DPTEXTURECAPS_VOLUMEMAP 8192

#define D3DFVFCAPS_PSIZE 1048576

#define D3DPBLENDCAPS_ZERO 1

#define D3DDEVCAPS_EXECUTEVIDEOMEMORY 32

#define D3DPTADDRESSCAPS_INDEPENDENTUV 16

#define D3DCAPS_READ_SCANLINE 131072

#define D3DPCMPCAPS_LESS 2

#define D3DDEVCAPS_HWRASTERIZATION 524288

#define D3DCAPS2_CANCALIBRATEGAMMA 1048576

#define D3DPSHADECAPS_ALPHAGOURAUDBLEND 16384

#define D3DVTXPCAPS_LOCALVIEWER 32

#define D3DPCMPCAPS_GREATER 16

#define D3DTEXOPCAPS_BLENDTEXTUREALPHA 4096

#define D3DPSHADECAPS_FOGGOURAUD 524288

#define D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE 64

#define D3DPTADDRESSCAPS_MIRROR 2

#define D3DDEVCAPS_TEXTURESYSTEMMEMORY 256

#define D3DPTADDRESSCAPS_MIRRORONCE 32

#define D3DPTEXTURECAPS_ALPHA 4

#define D3DPCMPCAPS_NEVER 1

#define D3DSTENCILCAPS_INVERT 32

#define D3DPCMPCAPS_GREATEREQUAL 64

#define D3DPMISCCAPS_CULLCCW 64

#define D3DVTXPCAPS_MATERIALSOURCE7 2

#define D3DTEXOPCAPS_PREMODULATE 65536

#define D3DPTEXTURECAPS_SQUAREONLY 32

#define D3DPSHADECAPS_COLORGOURAUDRGB 8

#define D3DPMISCCAPS_CULLNONE 16

#define D3DPTEXTURECAPS_ALPHAPALETTE 128

#define D3DCAPS3_RESERVED 2147483679

#define D3DPTFILTERCAPS_MAGFLINEAR 33554432

#define D3DPRESENT_INTERVAL_FOUR 8

#define D3DSTENCILCAPS_ZERO 2

#define D3DPBLENDCAPS_SRCALPHA 16

#define D3DDEVCAPS_DRAWPRIMTLVERTEX 1024

#define D3DDEVCAPS_DRAWPRIMITIVES2 8192

#define D3DPRASTERCAPS_FOGTABLE 256

#define D3DPBLENDCAPS_SRCCOLOR 4

#define D3DVTXPCAPS_DIRECTIONALLIGHTS 8

#define D3DTEXOPCAPS_BUMPENVMAPLUMINANCE 4194304

#define D3DTEXOPCAPS_BLENDFACTORALPHA 8192

#define D3DSTENCILCAPS_INCR 64

#define D3DPRASTERCAPS_PAT 8

#define D3DDEVCAPS_CANBLTSYSTONONLOCAL 131072

#define D3DLINECAPS_BLEND 4

#define D3DPRASTERCAPS_ZFOG 2097152

#define D3DTEXOPCAPS_MODULATE 8

#define D3DTEXOPCAPS_DISABLE 1

#define D3DPCMPCAPS_NOTEQUAL 32

#define D3DDEVCAPS_TEXTUREVIDEOMEMORY 512

#define D3DSTENCILCAPS_DECR 128

#define D3DPTEXTURECAPS_CUBEMAP 2048

#define D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA 262144

#define D3DTEXOPCAPS_BLENDDIFFUSEALPHA 2048

#define D3DPTFILTERCAPS_MAGFANISOTROPIC 67108864

#define D3DVTXPCAPS_TWEENING 64

#define D3DPTEXTURECAPS_CUBEMAP_POW2 131072

typedef struct tagMCI_ANIM_WINDOW_PARMSA tagMCI_ANIM_WINDOW_PARMSA, *PtagMCI_ANIM_WINDOW_PARMSA;

typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMSA;

typedef ulong ULONG_PTR;

typedef ULONG_PTR DWORD_PTR;

struct tagMCI_ANIM_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct HDRVR__ HDRVR__, *PHDRVR__;

typedef struct HDRVR__ *HDRVR;

struct HDRVR__ {
    int unused;
};

typedef struct tagMIXERCONTROLA tagMIXERCONTROLA, *PtagMIXERCONTROLA;

typedef union _union_729 _union_729, *P_union_729;

typedef union _union_732 _union_732, *P_union_732;

typedef struct _struct_730 _struct_730, *P_struct_730;

typedef struct _struct_731 _struct_731, *P_struct_731;

union _union_732 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

struct _struct_731 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

struct _struct_730 {
    LONG lMinimum;
    LONG lMaximum;
};

union _union_729 {
    struct _struct_730 field0;
    struct _struct_731 field1;
    DWORD dwReserved[6];
};

struct tagMIXERCONTROLA {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    CHAR szShortName[16];
    CHAR szName[64];
    union _union_729 Bounds;
    union _union_732 Metrics;
};

typedef struct tagJOYCAPSW tagJOYCAPSW, *PtagJOYCAPSW;

struct tagJOYCAPSW {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
};

typedef struct tagDRVCONFIGINFO tagDRVCONFIGINFO, *PtagDRVCONFIGINFO;

typedef struct tagDRVCONFIGINFO *LPDRVCONFIGINFO;

struct tagDRVCONFIGINFO {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA tagMCI_OVLY_WINDOW_PARMSA, *PtagMCI_OVLY_WINDOW_PARMSA;

struct tagMCI_OVLY_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct tagMCI_SAVE_PARMSA tagMCI_SAVE_PARMSA, *PtagMCI_SAVE_PARMSA;

typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMSA;

struct tagMCI_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMIDIOUTCAPSW tagMIDIOUTCAPSW, *PtagMIDIOUTCAPSW;

typedef UINT MMVERSION;

struct tagMIDIOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct tagMIXERLINEA tagMIXERLINEA, *PtagMIXERLINEA;

typedef struct tagMIXERLINEA *PMIXERLINEA;

typedef struct _struct_725 _struct_725, *P_struct_725;

struct _struct_725 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

struct tagMIXERLINEA {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    CHAR szShortName[16];
    CHAR szName[64];
    struct _struct_725 Target;
};

typedef union _union_734.conflict _union_734.conflict, *P_union_734.conflict;

typedef struct _struct_735 _struct_735, *P_struct_735;

typedef struct _struct_736 _struct_736, *P_struct_736;

struct _struct_735 {
    LONG lMinimum;
    LONG lMaximum;
};

struct _struct_736 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

union _union_734.conflict {
    struct _struct_735 field0;
    struct _struct_736 field1;
    DWORD dwReserved[6];
};

typedef struct tagWAVEOUTCAPSA tagWAVEOUTCAPSA, *PtagWAVEOUTCAPSA;

struct tagWAVEOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSW tagMCI_ANIM_WINDOW_PARMSW, *PtagMCI_ANIM_WINDOW_PARMSW;

typedef struct tagMCI_ANIM_WINDOW_PARMSW MCI_ANIM_WINDOW_PARMSW;

struct tagMCI_ANIM_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMIXERCAPSW tagMIXERCAPSW, *PtagMIXERCAPSW;

struct tagMIXERCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMIDIOUTCAPSA tagMIDIOUTCAPSA, *PtagMIDIOUTCAPSA;

struct tagMIDIOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct tagMCI_SYSINFO_PARMSA tagMCI_SYSINFO_PARMSA, *PtagMCI_SYSINFO_PARMSA;

typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMSA;

typedef MCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS;

struct tagMCI_SYSINFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct midiproptempo_tag midiproptempo_tag, *Pmidiproptempo_tag;

struct midiproptempo_tag {
    DWORD cbStruct;
    DWORD dwTempo;
};

typedef struct tagAUXCAPSW tagAUXCAPSW, *PtagAUXCAPSW;

struct tagAUXCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct waveformat_tag waveformat_tag, *Pwaveformat_tag;

struct waveformat_tag {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
};

typedef struct tagMCI_SAVE_PARMSW tagMCI_SAVE_PARMSW, *PtagMCI_SAVE_PARMSW;

typedef struct tagMCI_SAVE_PARMSW *PMCI_SAVE_PARMSW;

struct tagMCI_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct HMIDISTRM__ HMIDISTRM__, *PHMIDISTRM__;

struct HMIDISTRM__ {
    int unused;
};

typedef struct tagMIXERLINEW tagMIXERLINEW, *PtagMIXERLINEW;

typedef struct tagMIXERLINEW *PMIXERLINEW;

typedef struct _struct_727.conflict _struct_727.conflict, *P_struct_727.conflict;

struct _struct_727.conflict {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

struct tagMIXERLINEW {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    WCHAR szShortName[16];
    WCHAR szName[64];
    struct _struct_727.conflict Target;
};

typedef struct _MMCKINFO *NPMMCKINFO;

typedef struct tagMCI_ANIM_PLAY_PARMS tagMCI_ANIM_PLAY_PARMS, *PtagMCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;

struct tagMCI_ANIM_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMIXERCAPSA tagMIXERCAPSA, *PtagMIXERCAPSA;

struct tagMIXERCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMCI_GENERIC_PARMS tagMCI_GENERIC_PARMS, *PtagMCI_GENERIC_PARMS;

typedef struct tagMCI_GENERIC_PARMS *PMCI_GENERIC_PARMS;

struct tagMCI_GENERIC_PARMS {
    DWORD_PTR dwCallback;
};

typedef struct tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMSA;

typedef struct tagAUXCAPSA tagAUXCAPSA, *PtagAUXCAPSA;

typedef struct tagAUXCAPSA *NPAUXCAPSA;

typedef NPAUXCAPSA NPAUXCAPS;

struct tagAUXCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_OPEN_PARMSW tagMCI_ANIM_OPEN_PARMSW, *PtagMCI_ANIM_OPEN_PARMSW;

typedef struct tagMCI_ANIM_OPEN_PARMSW *PMCI_ANIM_OPEN_PARMSW;

typedef UINT MCIDEVICEID;

struct tagMCI_ANIM_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMIDIINCAPS2A tagMIDIINCAPS2A, *PtagMIDIINCAPS2A;

struct tagMIDIINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef union _union_739.conflict _union_739.conflict, *P_union_739.conflict;

union _union_739.conflict {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef struct tMIXERCONTROLDETAILS_SIGNED tMIXERCONTROLDETAILS_SIGNED, *PtMIXERCONTROLDETAILS_SIGNED;

typedef struct tMIXERCONTROLDETAILS_SIGNED MIXERCONTROLDETAILS_SIGNED;

struct tMIXERCONTROLDETAILS_SIGNED {
    LONG lValue;
};

typedef struct HWAVEOUT__ HWAVEOUT__, *PHWAVEOUT__;

struct HWAVEOUT__ {
    int unused;
};

typedef struct tagMCI_ANIM_OPEN_PARMSA tagMCI_ANIM_OPEN_PARMSA, *PtagMCI_ANIM_OPEN_PARMSA;

typedef struct tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMSA;

struct tagMCI_ANIM_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct mmtime_tag mmtime_tag, *Pmmtime_tag;

typedef union _union_664 _union_664, *P_union_664;

typedef struct _struct_665 _struct_665, *P_struct_665;

typedef struct _struct_666 _struct_666, *P_struct_666;

struct _struct_666 {
    DWORD songptrpos;
};

struct _struct_665 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

union _union_664 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_665 smpte;
    struct _struct_666 midi;
};

struct mmtime_tag {
    UINT wType;
    union _union_664 u;
};

typedef void (DRVCALLBACK)(HDRVR, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef DRVCALLBACK *PDRVCALLBACK;

typedef struct tagWAVEOUTCAPS2A tagWAVEOUTCAPS2A, *PtagWAVEOUTCAPS2A;

struct tagWAVEOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIXERLINECONTROLSA tagMIXERLINECONTROLSA, *PtagMIXERLINECONTROLSA;

typedef struct tagMIXERCONTROLA *LPMIXERCONTROLA;

struct tagMIXERLINECONTROLSA {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_739.conflict field2_0x8;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLA pamxctrl;
};

typedef struct tagMCI_SEEK_PARMS tagMCI_SEEK_PARMS, *PtagMCI_SEEK_PARMS;

typedef struct tagMCI_SEEK_PARMS *LPMCI_SEEK_PARMS;

struct tagMCI_SEEK_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTo;
};

typedef struct tagWAVEOUTCAPS2A WAVEOUTCAPS2A;

typedef WAVEOUTCAPS2A WAVEOUTCAPS2;

typedef struct tagMCI_SYSINFO_PARMSW tagMCI_SYSINFO_PARMSW, *PtagMCI_SYSINFO_PARMSW;

struct tagMCI_SYSINFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct tagJOYCAPS2A tagJOYCAPS2A, *PtagJOYCAPS2A;

typedef struct tagJOYCAPS2A *NPJOYCAPS2A;

typedef NPJOYCAPS2A NPJOYCAPS2;

struct tagJOYCAPS2A {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct timecaps_tag timecaps_tag, *Ptimecaps_tag;

typedef struct timecaps_tag *NPTIMECAPS;

struct timecaps_tag {
    UINT wPeriodMin;
    UINT wPeriodMax;
};

typedef struct tagWAVEINCAPSA tagWAVEINCAPSA, *PtagWAVEINCAPSA;

typedef struct tagWAVEINCAPSA *PWAVEINCAPSA;

typedef PWAVEINCAPSA PWAVEINCAPS;

struct tagWAVEINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct tagAUXCAPS2W tagAUXCAPS2W, *PtagAUXCAPS2W;

struct tagAUXCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef DRVCALLBACK WAVECALLBACK;

typedef WAVECALLBACK *LPWAVECALLBACK;

typedef struct tagMCI_OVLY_LOAD_PARMSA tagMCI_OVLY_LOAD_PARMSA, *PtagMCI_OVLY_LOAD_PARMSA;

struct tagMCI_OVLY_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMIXERLINECONTROLSW tagMIXERLINECONTROLSW, *PtagMIXERLINECONTROLSW;

typedef struct tagMIXERLINECONTROLSW *PMIXERLINECONTROLSW;

typedef union _union_741 _union_741, *P_union_741;

typedef struct tagMIXERCONTROLW tagMIXERCONTROLW, *PtagMIXERCONTROLW;

typedef struct tagMIXERCONTROLW *LPMIXERCONTROLW;

typedef union _union_737 _union_737, *P_union_737;

union _union_737 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

struct tagMIXERCONTROLW {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    WCHAR szShortName[16];
    WCHAR szName[64];
    union _union_734.conflict Bounds;
    union _union_737 Metrics;
};

union _union_741 {
    DWORD dwControlID;
    DWORD dwControlType;
};

struct tagMIXERLINECONTROLSW {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_741 field2_0x8;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLW pamxctrl;
};

typedef struct tagMCI_SEQ_SET_PARMS tagMCI_SEQ_SET_PARMS, *PtagMCI_SEQ_SET_PARMS;

typedef struct tagMCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;

struct tagMCI_SEQ_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    DWORD dwTempo;
    DWORD dwPort;
    DWORD dwSlave;
    DWORD dwMaster;
    DWORD dwOffset;
};

typedef struct tagMCI_STATUS_PARMS tagMCI_STATUS_PARMS, *PtagMCI_STATUS_PARMS;

struct tagMCI_STATUS_PARMS {
    DWORD_PTR dwCallback;
    DWORD_PTR dwReturn;
    DWORD dwItem;
    DWORD dwTrack;
};

typedef struct tagAUXCAPS2W *LPAUXCAPS2W;

typedef struct tagMIXERLINEA *LPMIXERLINEA;

typedef struct tagMIDIINCAPSA tagMIDIINCAPSA, *PtagMIDIINCAPSA;

typedef struct tagMIDIINCAPSA *NPMIDIINCAPSA;

typedef NPMIDIINCAPSA NPMIDIINCAPS;

struct tagMIDIINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
};

typedef struct tagMCI_OPEN_PARMSW tagMCI_OPEN_PARMSW, *PtagMCI_OPEN_PARMSW;

typedef struct tagMCI_OPEN_PARMSW MCI_OPEN_PARMSW;

struct tagMCI_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
};

typedef struct tagMCI_OPEN_PARMSA tagMCI_OPEN_PARMSA, *PtagMCI_OPEN_PARMSA;

typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMSA;

struct tagMCI_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
};

typedef struct tagMCI_RECORD_PARMS tagMCI_RECORD_PARMS, *PtagMCI_RECORD_PARMS;

struct tagMCI_RECORD_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct HMIDI__ HMIDI__, *PHMIDI__;

typedef struct HMIDI__ *HMIDI;

typedef HMIDI *LPHMIDI;

struct HMIDI__ {
    int unused;
};

typedef struct tagMIXERLINEW *LPMIXERLINEW;

typedef struct HMIDIOUT__ HMIDIOUT__, *PHMIDIOUT__;

typedef struct HMIDIOUT__ *HMIDIOUT;

typedef HMIDIOUT *LPHMIDIOUT;

struct HMIDIOUT__ {
    int unused;
};

typedef struct tagMCI_ANIM_OPEN_PARMSW MCI_ANIM_OPEN_PARMSW;

typedef struct tagWAVEINCAPSW tagWAVEINCAPSW, *PtagWAVEINCAPSW;

struct tagWAVEINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct midihdr_tag midihdr_tag, *Pmidihdr_tag;

struct midihdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    struct midihdr_tag *lpNext;
    DWORD_PTR reserved;
    DWORD dwOffset;
    DWORD_PTR dwReserved[8];
};

typedef struct tagMCI_VD_PLAY_PARMS tagMCI_VD_PLAY_PARMS, *PtagMCI_VD_PLAY_PARMS;

struct tagMCI_VD_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMIXERLINECONTROLSA *PMIXERLINECONTROLSA;

typedef struct tagMCI_PLAY_PARMS tagMCI_PLAY_PARMS, *PtagMCI_PLAY_PARMS;

struct tagMCI_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW tagMCI_OVLY_LOAD_PARMSW, *PtagMCI_OVLY_LOAD_PARMSW;

struct tagMCI_OVLY_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMSA;

typedef struct tagMCI_INFO_PARMSW tagMCI_INFO_PARMSW, *PtagMCI_INFO_PARMSW;

struct tagMCI_INFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagMCI_INFO_PARMSA tagMCI_INFO_PARMSA, *PtagMCI_INFO_PARMSA;

struct tagMCI_INFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagAUXCAPS2A tagAUXCAPS2A, *PtagAUXCAPS2A;

typedef struct tagAUXCAPS2A *LPAUXCAPS2A;

struct tagAUXCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEOUTCAPSA *PWAVEOUTCAPSA;

typedef PWAVEOUTCAPSA PWAVEOUTCAPS;

typedef struct tagAUXCAPS2A AUXCAPS2A;

typedef struct tagDRVCONFIGINFO *NPDRVCONFIGINFO;

typedef struct _struct_738 _struct_738, *P_struct_738;

struct _struct_738 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef struct _struct_737 _struct_737, *P_struct_737;

struct _struct_737 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct _struct_732 _struct_732, *P_struct_732;

struct _struct_732 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA tagMCI_OVLY_OPEN_PARMSA, *PtagMCI_OVLY_OPEN_PARMSA;

typedef struct tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMSA;

typedef PMCI_OVLY_OPEN_PARMSA PMCI_OVLY_OPEN_PARMS;

struct tagMCI_OVLY_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct _struct_733 _struct_733, *P_struct_733;

struct _struct_733 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef struct tagWAVEOUTCAPS2A *PWAVEOUTCAPS2A;

typedef PWAVEOUTCAPS2A PWAVEOUTCAPS2;

typedef struct tagMCI_ANIM_STEP_PARMS tagMCI_ANIM_STEP_PARMS, *PtagMCI_ANIM_STEP_PARMS;

struct tagMCI_ANIM_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_SEEK_PARMS *PMCI_SEEK_PARMS;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED tMIXERCONTROLDETAILS_UNSIGNED, *PtMIXERCONTROLDETAILS_UNSIGNED;

struct tMIXERCONTROLDETAILS_UNSIGNED {
    DWORD dwValue;
};

typedef UINT *LPUINT;

typedef struct tagWAVEOUTCAPSW tagWAVEOUTCAPSW, *PtagWAVEOUTCAPSW;

typedef struct tagWAVEOUTCAPSW *PWAVEOUTCAPSW;

struct tagWAVEOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_RECT_PARMS tagMCI_ANIM_RECT_PARMS, *PtagMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;

struct tagMCI_ANIM_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef MCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMSA;

typedef MCI_INFO_PARMSA MCI_INFO_PARMS;

typedef struct _MMCKINFO *PMMCKINFO;

typedef struct midihdr_tag *NPMIDIHDR;

typedef struct tagMCI_SAVE_PARMSW MCI_SAVE_PARMSW;

typedef struct tagAUXCAPS2W AUXCAPS2W;

typedef struct joyinfoex_tag joyinfoex_tag, *Pjoyinfoex_tag;

typedef struct joyinfoex_tag *NPJOYINFOEX;

struct joyinfoex_tag {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwXpos;
    DWORD dwYpos;
    DWORD dwZpos;
    DWORD dwRpos;
    DWORD dwUpos;
    DWORD dwVpos;
    DWORD dwButtons;
    DWORD dwButtonNumber;
    DWORD dwPOV;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct _MMIOINFO *NPMMIOINFO;

typedef struct tagMCI_VD_ESCAPE_PARMSA tagMCI_VD_ESCAPE_PARMSA, *PtagMCI_VD_ESCAPE_PARMSA;

typedef struct tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMSA;

typedef PMCI_VD_ESCAPE_PARMSA PMCI_VD_ESCAPE_PARMS;

struct tagMCI_VD_ESCAPE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpstrCommand;
};

typedef struct tagMCI_WAVE_DELETE_PARMS tagMCI_WAVE_DELETE_PARMS, *PtagMCI_WAVE_DELETE_PARMS;

struct tagMCI_WAVE_DELETE_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMIDIOUTCAPSA *PMIDIOUTCAPSA;

typedef PMIDIOUTCAPSA PMIDIOUTCAPS;

typedef struct tagJOYCAPSA tagJOYCAPSA, *PtagJOYCAPSA;

typedef struct tagJOYCAPSA *NPJOYCAPSA;

typedef NPJOYCAPSA NPJOYCAPS;

struct tagJOYCAPSA {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
};

typedef struct tagMIDIINCAPSW tagMIDIINCAPSW, *PtagMIDIINCAPSW;

struct tagMIDIINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
};

typedef union _union_743.conflict _union_743.conflict, *P_union_743.conflict;

union _union_743.conflict {
    HWND hwndOwner;
    DWORD cMultipleItems;
};

typedef struct tagMIDIOUTCAPS2A tagMIDIOUTCAPS2A, *PtagMIDIOUTCAPS2A;

typedef struct tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2A;

typedef LPMIDIOUTCAPS2A LPMIDIOUTCAPS2;

struct tagMIDIOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIINCAPSA *LPMIDIINCAPSA;

typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;

typedef struct tagMIDIINCAPS2A *LPMIDIINCAPS2A;

typedef struct _struct_729 _struct_729, *P_struct_729;

struct _struct_729 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

typedef struct _struct_727 _struct_727, *P_struct_727;

struct _struct_727 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

typedef struct HMIXEROBJ__ HMIXEROBJ__, *PHMIXEROBJ__;

typedef struct HMIXEROBJ__ *HMIXEROBJ;

struct HMIXEROBJ__ {
    int unused;
};

typedef struct HMIXER__ HMIXER__, *PHMIXER__;

typedef struct HMIXER__ *HMIXER;

typedef HMIXER *LPHMIXER;

struct HMIXER__ {
    int unused;
};

typedef struct tMIXERCONTROLDETAILS tMIXERCONTROLDETAILS, *PtMIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS *PMIXERCONTROLDETAILS;

struct tMIXERCONTROLDETAILS {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD cChannels;
    union _union_743.conflict field3_0xc;
    DWORD cbDetails;
    LPVOID paDetails;
};

typedef LPMIDIINCAPS2A LPMIDIINCAPS2;

typedef struct joyinfo_tag joyinfo_tag, *Pjoyinfo_tag;

struct joyinfo_tag {
    UINT wXpos;
    UINT wYpos;
    UINT wZpos;
    UINT wButtons;
};

typedef struct tagMIDIOUTCAPSA *LPMIDIOUTCAPSA;

typedef struct tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;

typedef PMIXERLINEA PMIXERLINE;

typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMSA;

typedef struct tagMIDIOUTCAPSW *NPMIDIOUTCAPSW;

typedef struct tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMSA;

typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMSA;

typedef MCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS;

typedef struct tagMIDIINCAPSW *LPMIDIINCAPSW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW tagMIXERCONTROLDETAILS_LISTTEXTW, *PtagMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *PMIXERCONTROLDETAILS_LISTTEXTW;

struct tagMIXERCONTROLDETAILS_LISTTEXTW {
    DWORD dwParam1;
    DWORD dwParam2;
    WCHAR szName[64];
};

typedef struct tagMIXERCAPSA *LPMIXERCAPSA;

typedef LPMIXERCAPSA LPMIXERCAPS;

typedef struct tagMCI_PLAY_PARMS *LPMCI_PLAY_PARMS;

typedef struct tagWAVEINCAPSA *LPWAVEINCAPSA;

typedef LPWAVEINCAPSA LPWAVEINCAPS;

typedef struct tagWAVEOUTCAPSW WAVEOUTCAPSW;

typedef struct tagJOYCAPSW *PJOYCAPSW;

typedef struct tagWAVEOUTCAPS2W tagWAVEOUTCAPS2W, *PtagWAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPS2W *PWAVEOUTCAPS2W;

struct tagWAVEOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;

typedef struct tagMIXERLINECONTROLSW MIXERLINECONTROLSW;

typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMSA;

typedef struct wavehdr_tag wavehdr_tag, *Pwavehdr_tag;

struct wavehdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    DWORD dwLoops;
    struct wavehdr_tag *lpNext;
    DWORD_PTR reserved;
};

typedef union _union_1020 _union_1020, *P_union_1020;

typedef struct _struct_1021 _struct_1021, *P_struct_1021;

typedef struct _struct_1022 _struct_1022, *P_struct_1022;

struct _struct_1021 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

struct _struct_1022 {
    DWORD songptrpos;
};

union _union_1020 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_1021 smpte;
    struct _struct_1022 midi;
};

typedef struct tagMIDIINCAPS2A *NPMIDIINCAPS2A;

typedef struct tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2A;

typedef struct tagMCI_ANIM_OPEN_PARMSW *LPMCI_ANIM_OPEN_PARMSW;

typedef struct tagWAVEOUTCAPSA *NPWAVEOUTCAPSA;

typedef NPWAVEOUTCAPSA NPWAVEOUTCAPS;

typedef struct midihdr_tag MIDIHDR;

typedef struct tagWAVEOUTCAPSA WAVEOUTCAPSA;

typedef struct tagJOYCAPSA *PJOYCAPSA;

typedef struct tagMCI_OVLY_SAVE_PARMSA tagMCI_OVLY_SAVE_PARMSA, *PtagMCI_OVLY_SAVE_PARMSA;

struct tagMCI_OVLY_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;

typedef struct DRVCONFIGINFOEX DRVCONFIGINFOEX, *PDRVCONFIGINFOEX;

typedef struct DRVCONFIGINFOEX *LPDRVCONFIGINFOEX;

struct DRVCONFIGINFOEX {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
    DWORD dnDevNode;
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA tagMIXERCONTROLDETAILS_LISTTEXTA, *PtagMIXERCONTROLDETAILS_LISTTEXTA;

struct tagMIXERCONTROLDETAILS_LISTTEXTA {
    DWORD dwParam1;
    DWORD dwParam2;
    CHAR szName[64];
};

typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLSA;

typedef struct tagJOYCAPS2A *PJOYCAPS2A;

typedef PJOYCAPS2A PJOYCAPS2;

typedef struct tagWAVEOUTCAPS2W *NPWAVEOUTCAPS2W;

typedef struct tagMCI_WAVE_OPEN_PARMSW tagMCI_WAVE_OPEN_PARMSW, *PtagMCI_WAVE_OPEN_PARMSW;

typedef struct tagMCI_WAVE_OPEN_PARMSW *PMCI_WAVE_OPEN_PARMSW;

struct tagMCI_WAVE_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMSA;

typedef PMCI_OVLY_WINDOW_PARMSA PMCI_OVLY_WINDOW_PARMS;

typedef struct tagMIXERCONTROLA MIXERCONTROLA;

typedef struct tagWAVEINCAPS2A tagWAVEINCAPS2A, *PtagWAVEINCAPS2A;

struct tagWAVEINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMSA;

typedef PMCI_OPEN_PARMSA PMCI_OPEN_PARMS;

typedef struct tagMIDIINCAPS2W tagMIDIINCAPS2W, *PtagMIDIINCAPS2W;

typedef struct tagMIDIINCAPS2W *NPMIDIINCAPS2W;

struct tagMIDIINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_INFO_PARMSA *LPMCI_INFO_PARMSA;

typedef struct midihdr_tag *PMIDIHDR;

typedef struct tagMCI_WAVE_OPEN_PARMSA tagMCI_WAVE_OPEN_PARMSA, *PtagMCI_WAVE_OPEN_PARMSA;

typedef struct tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMSA;

struct tagMCI_WAVE_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagWAVEINCAPS2W tagWAVEINCAPS2W, *PtagWAVEINCAPS2W;

struct tagWAVEINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef union _union_666 _union_666, *P_union_666;

typedef struct _struct_667 _struct_667, *P_struct_667;

typedef struct _struct_668 _struct_668, *P_struct_668;

struct _struct_668 {
    DWORD songptrpos;
};

struct _struct_667 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

union _union_666 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_667 smpte;
    struct _struct_668 midi;
};

typedef struct tagMCI_LOAD_PARMSW tagMCI_LOAD_PARMSW, *PtagMCI_LOAD_PARMSW;

struct tagMCI_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct tagMIXERCONTROLW MIXERCONTROLW;

typedef struct tagMCI_VD_ESCAPE_PARMSW tagMCI_VD_ESCAPE_PARMSW, *PtagMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_VD_ESCAPE_PARMSW MCI_VD_ESCAPE_PARMSW;

struct tagMCI_VD_ESCAPE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpstrCommand;
};

typedef struct tagJOYCAPS2W tagJOYCAPS2W, *PtagJOYCAPS2W;

typedef struct tagJOYCAPS2W JOYCAPS2W;

struct tagJOYCAPS2W {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_VD_STEP_PARMS tagMCI_VD_STEP_PARMS, *PtagMCI_VD_STEP_PARMS;

struct tagMCI_VD_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_VD_ESCAPE_PARMSW *PMCI_VD_ESCAPE_PARMSW;

typedef struct waveformat_tag *PWAVEFORMAT;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN tMIXERCONTROLDETAILS_BOOLEAN, *PtMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN *LPMIXERCONTROLDETAILS_BOOLEAN;

struct tMIXERCONTROLDETAILS_BOOLEAN {
    LONG fValue;
};

typedef struct _MMCKINFO *LPMMCKINFO;

typedef struct tagJOYCAPS2A JOYCAPS2A;

typedef struct tagMCI_STATUS_PARMS *PMCI_STATUS_PARMS;

typedef struct tagMCI_INFO_PARMSW *LPMCI_INFO_PARMSW;

typedef struct tagMCI_ANIM_UPDATE_PARMS tagMCI_ANIM_UPDATE_PARMS, *PtagMCI_ANIM_UPDATE_PARMS;

typedef struct HDC__ HDC__, *PHDC__;

typedef struct HDC__ *HDC;

struct HDC__ {
    int unused;
};

struct tagMCI_ANIM_UPDATE_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
    HDC hDC;
};

typedef struct HMIDIIN__ HMIDIIN__, *PHMIDIIN__;

typedef struct HMIDIIN__ *HMIDIIN;

struct HMIDIIN__ {
    int unused;
};

typedef struct joyinfoex_tag *PJOYINFOEX;

typedef struct tagMCI_LOAD_PARMSA tagMCI_LOAD_PARMSA, *PtagMCI_LOAD_PARMSA;

typedef struct tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMSA;

typedef PMCI_LOAD_PARMSA PMCI_LOAD_PARMS;

struct tagMCI_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMCI_RECORD_PARMS *LPMCI_RECORD_PARMS;

typedef struct tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMSA;

typedef WORD PATCHARRAY[128];

typedef struct tagMCI_OVLY_OPEN_PARMSW tagMCI_OVLY_OPEN_PARMSW, *PtagMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_OPEN_PARMSW *LPMCI_OVLY_OPEN_PARMSW;

struct tagMCI_OVLY_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMSA;

typedef struct tagMCI_OVLY_WINDOW_PARMSW tagMCI_OVLY_WINDOW_PARMSW, *PtagMCI_OVLY_WINDOW_PARMSW;

struct tagMCI_OVLY_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMCI_BREAK_PARMS tagMCI_BREAK_PARMS, *PtagMCI_BREAK_PARMS;

typedef struct tagMCI_BREAK_PARMS *LPMCI_BREAK_PARMS;

struct tagMCI_BREAK_PARMS {
    DWORD_PTR dwCallback;
    int nVirtKey;
    HWND hwndBreak;
};

typedef struct tagMIDIINCAPSW *PMIDIINCAPSW;

typedef struct midistrmbuffver_tag midistrmbuffver_tag, *Pmidistrmbuffver_tag;

typedef struct midistrmbuffver_tag MIDISTRMBUFFVER;

struct midistrmbuffver_tag {
    DWORD dwVersion;
    DWORD dwMid;
    DWORD dwOEMVersion;
};

typedef struct tagWAVEINCAPS2A *LPWAVEINCAPS2A;

typedef LPWAVEINCAPS2A LPWAVEINCAPS2;

typedef struct tagMCI_SEQ_SET_PARMS *PMCI_SEQ_SET_PARMS;

typedef struct tagMIDIOUTCAPS2W tagMIDIOUTCAPS2W, *PtagMIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPS2W *NPMIDIOUTCAPS2W;

struct tagMIDIOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEINCAPS2A *NPWAVEINCAPS2A;

typedef NPWAVEINCAPS2A NPWAVEINCAPS2;

typedef struct tagMCI_WAVE_SET_PARMS tagMCI_WAVE_SET_PARMS, *PtagMCI_WAVE_SET_PARMS;

typedef struct tagMCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;

struct tagMCI_WAVE_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    UINT wInput;
    UINT wOutput;
    WORD wFormatTag;
    WORD wReserved2;
    WORD nChannels;
    WORD wReserved3;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wReserved4;
    WORD wBitsPerSample;
    WORD wReserved5;
};

typedef struct tagMCI_WAVE_SET_PARMS *PMCI_WAVE_SET_PARMS;

typedef UINT MMRESULT;

typedef struct tagWAVEINCAPSA *NPWAVEINCAPSA;

typedef struct tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMSA;

typedef LPMCI_OPEN_PARMSA LPMCI_OPEN_PARMS;

typedef struct tagMIXERCONTROLA *PMIXERCONTROLA;

typedef PMIXERCONTROLA PMIXERCONTROL;

typedef struct midihdr_tag *LPMIDIHDR;

typedef struct tagWAVEINCAPSW *LPWAVEINCAPSW;

typedef struct tagMCI_STATUS_PARMS *LPMCI_STATUS_PARMS;

typedef struct tagMCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;

typedef struct HWAVEIN__ HWAVEIN__, *PHWAVEIN__;

struct HWAVEIN__ {
    int unused;
};

typedef struct tagWAVEINCAPSW *NPWAVEINCAPSW;

typedef struct tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2A;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN MIXERCONTROLDETAILS_BOOLEAN;

typedef struct waveformat_tag *LPWAVEFORMAT;

typedef struct tagMCI_OPEN_PARMSW *LPMCI_OPEN_PARMSW;

typedef struct tagMCI_PLAY_PARMS *PMCI_PLAY_PARMS;

typedef struct tagMIDIOUTCAPS2W MIDIOUTCAPS2W;

typedef LPMIDIOUTCAPSA LPMIDIOUTCAPS;

typedef struct tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMSA;

typedef struct tagMIDIOUTCAPS2A MIDIOUTCAPS2A;

typedef struct midiproptimediv_tag midiproptimediv_tag, *Pmidiproptimediv_tag;

typedef struct midiproptimediv_tag MIDIPROPTIMEDIV;

struct midiproptimediv_tag {
    DWORD cbStruct;
    DWORD dwTimeDiv;
};

typedef struct tagMIDIOUTCAPSA *NPMIDIOUTCAPSA;

typedef NPMIDIOUTCAPSA NPMIDIOUTCAPS;

typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMSA;

typedef struct tagMIXERCAPS2A tagMIXERCAPS2A, *PtagMIXERCAPS2A;

typedef struct tagMIXERCAPS2A *LPMIXERCAPS2A;

typedef LPMIXERCAPS2A LPMIXERCAPS2;

struct tagMIXERCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct _MMIOINFO *PMMIOINFO;

typedef struct tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMSA;

typedef PMCI_OVLY_LOAD_PARMSA PMCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_SET_PARMS tagMCI_SET_PARMS, *PtagMCI_SET_PARMS;

typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;

struct tagMCI_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
};

typedef struct timecaps_tag *LPTIMECAPS;

typedef struct HWAVEOUT__ *HWAVEOUT;

typedef struct tagMIXERCAPSW *LPMIXERCAPSW;

typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;

typedef struct waveformat_tag *NPWAVEFORMAT;

typedef struct tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMSA;

typedef LPMCI_ANIM_WINDOW_PARMSA LPMCI_ANIM_WINDOW_PARMS;

typedef struct tagMCI_VD_ESCAPE_PARMSW *LPMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_OVLY_RECT_PARMS tagMCI_OVLY_RECT_PARMS, *PtagMCI_OVLY_RECT_PARMS;

struct tagMCI_OVLY_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef MCI_OPEN_PARMSA MCI_OPEN_PARMS;

typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMSA;

typedef MCI_LOAD_PARMSA MCI_LOAD_PARMS;

typedef struct mmtime_tag *NPMMTIME;

typedef PJOYCAPSA PJOYCAPS;

typedef struct tagMCI_SAVE_PARMSW *LPMCI_SAVE_PARMSW;

typedef struct tagMCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;

typedef struct tagMIXERCAPS2W tagMIXERCAPS2W, *PtagMIXERCAPS2W;

struct tagMIXERCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef WORD *LPKEYARRAY;

typedef LPAUXCAPS2A LPAUXCAPS2;

typedef struct tagMIXERCAPSA MIXERCAPSA;

typedef MIXERCAPSA MIXERCAPS;

typedef LRESULT (*DRIVERPROC)(DWORD_PTR, HDRVR, UINT, LPARAM, LPARAM);

typedef struct tagMCI_OVLY_WINDOW_PARMSW *PMCI_OVLY_WINDOW_PARMSW;

typedef struct tagMIDIOUTCAPS2W *LPMIDIOUTCAPS2W;

typedef struct tagAUXCAPSA *LPAUXCAPSA;

typedef struct tagAUXCAPSW *LPAUXCAPSW;

typedef struct tagMCI_SET_PARMS *PMCI_SET_PARMS;

typedef NPMIDIINCAPS2A NPMIDIINCAPS2;

typedef struct wavehdr_tag WAVEHDR;

typedef struct tagMCI_SET_PARMS *LPMCI_SET_PARMS;

typedef struct tagMIXERCAPS2A *PMIXERCAPS2A;

typedef PMIXERCAPS2A PMIXERCAPS2;

typedef struct tagMCI_OVLY_SAVE_PARMSW tagMCI_OVLY_SAVE_PARMSW, *PtagMCI_OVLY_SAVE_PARMSW;

struct tagMCI_OVLY_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW *LPMCI_OVLY_LOAD_PARMSW;

typedef struct tagMIDIINCAPSW *NPMIDIINCAPSW;

typedef struct tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMSA;

typedef LPMCI_LOAD_PARMSA LPMCI_LOAD_PARMS;

typedef struct HWAVEIN__ *HWAVEIN;

typedef struct tagMCI_ANIM_WINDOW_PARMSW *LPMCI_ANIM_WINDOW_PARMSW;

typedef struct tWAVEFORMATEX *PWAVEFORMATEX;

typedef struct HWAVE__ HWAVE__, *PHWAVE__;

typedef struct HWAVE__ *HWAVE;

struct HWAVE__ {
    int unused;
};

typedef DRVCALLBACK MIDICALLBACK;

typedef MCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS;

typedef MCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMSA;

typedef LPMCI_OVLY_LOAD_PARMSA LPMCI_OVLY_LOAD_PARMS;

typedef struct midiproptempo_tag *LPMIDIPROPTEMPO;

typedef struct tagJOYCAPSA *LPJOYCAPSA;

typedef LPJOYCAPSA LPJOYCAPS;

typedef PMCI_ANIM_OPEN_PARMSA PMCI_ANIM_OPEN_PARMS;

typedef struct tagMIXERLINECONTROLSA *LPMIXERLINECONTROLSA;

typedef struct tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMSA;

typedef struct tagMIXERCAPS2W *PMIXERCAPS2W;

typedef struct tagMCI_VD_STEP_PARMS *PMCI_VD_STEP_PARMS;

typedef struct mmtime_tag MMTIME;

typedef LPMIXERLINECONTROLSA LPMIXERLINECONTROLS;

typedef struct tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;

typedef struct tagJOYCAPSW *NPJOYCAPSW;

typedef struct tagMIDIINCAPSA *PMIDIINCAPSA;

typedef PMIDIINCAPSA PMIDIINCAPS;

typedef struct tagMIXERCAPSA *PMIXERCAPSA;

typedef PMIXERCAPSA PMIXERCAPS;

typedef struct tagWAVEOUTCAPSA *LPWAVEOUTCAPSA;

typedef LPWAVEOUTCAPSA LPWAVEOUTCAPS;

typedef struct tagMCI_GETDEVCAPS_PARMS tagMCI_GETDEVCAPS_PARMS, *PtagMCI_GETDEVCAPS_PARMS;

struct tagMCI_GETDEVCAPS_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwReturn;
    DWORD dwItem;
};

typedef struct tagMIDIOUTCAPS2A *PMIDIOUTCAPS2A;

typedef struct HMIDISTRM__ *HMIDISTRM;

typedef WORD KEYARRAY[128];

typedef struct tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMSA;

typedef DRVCALLBACK *LPDRVCALLBACK;

typedef struct tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;

typedef void (TIMECALLBACK)(UINT, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef struct tagAUXCAPSA AUXCAPSA;

typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;

typedef MIXERCONTROLA MIXERCONTROL;

typedef LPMCI_OVLY_WINDOW_PARMSA LPMCI_OVLY_WINDOW_PARMS;

typedef struct tagMIXERCAPSW *PMIXERCAPSW;

typedef AUXCAPS2A AUXCAPS2;

typedef struct midiproptempo_tag MIDIPROPTEMPO;

typedef struct tagAUXCAPSW AUXCAPSW;

typedef struct tagMIDIINCAPS2A *PMIDIINCAPS2A;

typedef PMIDIINCAPS2A PMIDIINCAPS2;

typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;

typedef struct tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2A;

typedef LPWAVEOUTCAPS2A LPWAVEOUTCAPS2;

typedef struct tagMIDIOUTCAPS2W *PMIDIOUTCAPS2W;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN *PMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tagMCI_SYSINFO_PARMSW *PMCI_SYSINFO_PARMSW;

typedef struct tagMCI_INFO_PARMSW MCI_INFO_PARMSW;

typedef struct joyinfo_tag *NPJOYINFO;

typedef AUXCAPSA AUXCAPS;

typedef MCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS;

typedef struct wavehdr_tag *NPWAVEHDR;

typedef struct joyinfo_tag JOYINFO;

typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMSA;

typedef MCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS;

typedef LPMIDIINCAPSA LPMIDIINCAPS;

typedef struct tagMCI_SYSINFO_PARMSW *LPMCI_SYSINFO_PARMSW;

typedef struct tagMCI_GETDEVCAPS_PARMS *PMCI_GETDEVCAPS_PARMS;

typedef struct tagJOYCAPS2W *PJOYCAPS2W;

typedef struct tagMCI_LOAD_PARMSW MCI_LOAD_PARMSW;

typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;

typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;

typedef PMCI_SYSINFO_PARMSA PMCI_SYSINFO_PARMS;

typedef struct tWAVEFORMATEX *NPWAVEFORMATEX;

typedef struct tagMIDIINCAPS2A MIDIINCAPS2A;

typedef struct mmtime_tag *LPMMTIME;

typedef struct tagMCI_BREAK_PARMS *PMCI_BREAK_PARMS;

typedef LPMCI_OVLY_OPEN_PARMSA LPMCI_OVLY_OPEN_PARMS;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED *PMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMCI_OVLY_RECT_PARMS *PMCI_OVLY_RECT_PARMS;

typedef MIDIINCAPS2A MIDIINCAPS2;

typedef struct tagMCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;

typedef struct tagMIDIINCAPSA MIDIINCAPSA;

typedef NPWAVEOUTCAPS2A NPWAVEOUTCAPS2;

typedef struct tagMIDIINCAPS2W MIDIINCAPS2W;

typedef LPMCI_SAVE_PARMSA LPMCI_SAVE_PARMS;

typedef LPMCI_ANIM_OPEN_PARMSA LPMCI_ANIM_OPEN_PARMS;

typedef MCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXTA;

typedef MIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT;

typedef struct pcmwaveformat_tag pcmwaveformat_tag, *Ppcmwaveformat_tag;

typedef struct pcmwaveformat_tag *NPPCMWAVEFORMAT;

typedef struct waveformat_tag WAVEFORMAT;

struct pcmwaveformat_tag {
    WAVEFORMAT wf;
    WORD wBitsPerSample;
};

typedef struct tagWAVEOUTCAPSW *NPWAVEOUTCAPSW;

typedef struct DRVCONFIGINFOEX *NPDRVCONFIGINFOEX;

typedef struct pcmwaveformat_tag *LPPCMWAVEFORMAT;

typedef struct joyinfo_tag *PJOYINFO;

typedef HMIDISTRM *LPHMIDISTRM;

typedef struct tMIXERCONTROLDETAILS MIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;

typedef struct tagMCI_LOAD_PARMSW *PMCI_LOAD_PARMSW;

typedef MCI_SAVE_PARMSA MCI_SAVE_PARMS;

typedef struct tagMIDIINCAPSW MIDIINCAPSW;

typedef struct tagMIXERCAPS2W *LPMIXERCAPS2W;

typedef struct tagWAVEINCAPSW *PWAVEINCAPSW;

typedef LPMCI_SYSINFO_PARMSA LPMCI_SYSINFO_PARMS;

typedef struct tagAUXCAPS2A *PAUXCAPS2A;

typedef struct tagAUXCAPS2W *PAUXCAPS2W;

typedef struct tagWAVEINCAPS2A *PWAVEINCAPS2A;

typedef PWAVEINCAPS2A PWAVEINCAPS2;

typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW MIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED MIXERCONTROLDETAILS_UNSIGNED;

typedef struct joyinfo_tag *LPJOYINFO;

typedef struct tagMCI_ANIM_PLAY_PARMS *PMCI_ANIM_PLAY_PARMS;

typedef union _union_745 _union_745, *P_union_745;

union _union_745 {
    HWND hwndOwner;
    DWORD cMultipleItems;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW MCI_OVLY_LOAD_PARMSW;

typedef HWAVEOUT *LPHWAVEOUT;

typedef union _union_743 _union_743, *P_union_743;

union _union_743 {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef struct tagMCI_SYSINFO_PARMSW MCI_SYSINFO_PARMSW;

typedef struct tagWAVEOUTCAPS2W WAVEOUTCAPS2W;

typedef struct midievent_tag midievent_tag, *Pmidievent_tag;

struct midievent_tag {
    DWORD dwDeltaTime;
    DWORD dwStreamID;
    DWORD dwEvent;
    DWORD dwParms[1];
};

typedef struct tagMCI_OVLY_LOAD_PARMSW *PMCI_OVLY_LOAD_PARMSW;

typedef MMIOINFO *LPCMMIOINFO;

typedef LPMIXERCONTROLA LPMIXERCONTROL;

typedef HWAVEIN *LPHWAVEIN;

typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;

typedef struct tagWAVEINCAPS2W WAVEINCAPS2W;

typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;

typedef MMCKINFO *LPCMMCKINFO;

typedef struct tagWAVEINCAPS2A WAVEINCAPS2A;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXTA;

typedef struct tMIXERCONTROLDETAILS_SIGNED *PMIXERCONTROLDETAILS_SIGNED;

typedef struct tagMIXERLINEA MIXERLINEA;

typedef struct _MMIOINFO *LPMMIOINFO;

typedef struct tagAUXCAPS2W *NPAUXCAPS2W;

typedef struct tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMSA;

typedef struct tagMIXERLINEW MIXERLINEW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *LPMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct joyinfoex_tag JOYINFOEX;

typedef struct tagMCI_WAVE_OPEN_PARMSW MCI_WAVE_OPEN_PARMSW;

typedef struct tagMIDIINCAPS2W *PMIDIINCAPS2W;

typedef PMCI_SAVE_PARMSA PMCI_SAVE_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMSA;

typedef struct tagWAVEOUTCAPS2W *LPWAVEOUTCAPS2W;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED *LPMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMCI_ANIM_WINDOW_PARMSW *PMCI_ANIM_WINDOW_PARMSW;

typedef struct tagAUXCAPS2A *NPAUXCAPS2A;

typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;

typedef struct timecaps_tag TIMECAPS;

typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMSA;

typedef MCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS;

typedef MIXERLINEA MIXERLINE;

typedef WAVEOUTCAPSA WAVEOUTCAPS;

typedef struct tagMCI_OVLY_OPEN_PARMSW MCI_OVLY_OPEN_PARMSW;

typedef PMCI_WAVE_OPEN_PARMSA PMCI_WAVE_OPEN_PARMS;

typedef MCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS;

typedef LPMCI_VD_ESCAPE_PARMSA LPMCI_VD_ESCAPE_PARMS;

typedef struct tagMIDIOUTCAPSW *PMIDIOUTCAPSW;

typedef struct tagAUXCAPSW *PAUXCAPSW;

typedef MIDICALLBACK *LPMIDICALLBACK;

typedef struct tagMCI_LOAD_PARMSW *LPMCI_LOAD_PARMSW;

typedef struct tagAUXCAPSA *PAUXCAPSA;

typedef struct _struct_1083 _struct_1083, *P_struct_1083;

struct _struct_1083 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

typedef struct _struct_1081 _struct_1081, *P_struct_1081;

struct _struct_1081 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

typedef struct tagWAVEINCAPS2W *PWAVEINCAPS2W;

typedef PAUXCAPS2A PAUXCAPS2;

typedef MIXERLINECONTROLSA MIXERLINECONTROLS;

typedef struct tagDRVCONFIGINFO *PDRVCONFIGINFO;

typedef LPMIXERLINEA LPMIXERLINE;

typedef struct tagMCI_OVLY_OPEN_PARMSW *PMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMSA;

typedef LPMCI_OVLY_SAVE_PARMSA LPMCI_OVLY_SAVE_PARMS;

typedef struct midievent_tag MIDIEVENT;

typedef struct tagMCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS *PMCI_ANIM_STEP_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSW MCI_OVLY_SAVE_PARMSW;

typedef struct wavehdr_tag *PWAVEHDR;

typedef struct tagMIXERCAPS2W MIXERCAPS2W;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXTA;

typedef LPMCI_INFO_PARMSA LPMCI_INFO_PARMS;

typedef struct pcmwaveformat_tag *PPCMWAVEFORMAT;

typedef TIMECALLBACK *LPTIMECALLBACK;

typedef NPMIDIOUTCAPS2A NPMIDIOUTCAPS2;

typedef LPAUXCAPSA LPAUXCAPS;

typedef struct tagMIXERCAPS2A MIXERCAPS2A;

typedef union _union_736 _union_736, *P_union_736;

union _union_736 {
    struct _struct_737 field0;
    struct _struct_738 field1;
    DWORD dwReserved[6];
};

typedef union _union_734 _union_734, *P_union_734;

union _union_734 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef HMIDIIN *LPHMIDIIN;

typedef union _union_739 _union_739, *P_union_739;

union _union_739 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef struct tagWAVEINCAPSA WAVEINCAPSA;

typedef WAVEINCAPSA WAVEINCAPS;

typedef union _union_731 _union_731, *P_union_731;

union _union_731 {
    struct _struct_732 field0;
    struct _struct_733 field1;
    DWORD dwReserved[6];
};

typedef struct tagJOYCAPS2A *LPJOYCAPS2A;

typedef LPJOYCAPS2A LPJOYCAPS2;

typedef PMIDIOUTCAPS2A PMIDIOUTCAPS2;

typedef MCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS;

typedef struct tagJOYCAPS2W *NPJOYCAPS2W;

typedef struct tagMCI_OVLY_WINDOW_PARMSW MCI_OVLY_WINDOW_PARMSW;

typedef struct tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMSA;

typedef LPMCI_WAVE_OPEN_PARMSA LPMCI_WAVE_OPEN_PARMS;

typedef struct tagMIDIINCAPS2W *LPMIDIINCAPS2W;

typedef WORD *LPPATCHARRAY;

typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS *PMCI_WAVE_DELETE_PARMS;

typedef struct tagMIXERCONTROLW *PMIXERCONTROLW;

typedef struct tagMCI_WAVE_OPEN_PARMSW *LPMCI_WAVE_OPEN_PARMSW;

typedef UINT (*YIELDPROC)(MCIDEVICEID, DWORD);

typedef struct tagJOYCAPSW *LPJOYCAPSW;

typedef PMCI_ANIM_WINDOW_PARMSA PMCI_ANIM_WINDOW_PARMS;

typedef struct tagJOYCAPSA JOYCAPSA;

typedef JOYCAPSA JOYCAPS;

typedef struct mmtime_tag *PMMTIME;

typedef struct tagMCI_ANIM_UPDATE_PARMS *PMCI_ANIM_UPDATE_PARMS;

typedef HMIXEROBJ *LPHMIXEROBJ;

typedef LPMIXERCONTROLDETAILS_LISTTEXTA LPMIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMCI_OVLY_SAVE_PARMSW *PMCI_OVLY_SAVE_PARMSW;

typedef PMIXERCONTROLDETAILS_LISTTEXTA PMIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMSA;

typedef PMCI_OVLY_SAVE_PARMSA PMCI_OVLY_SAVE_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;

typedef struct tagWAVEINCAPS2W *LPWAVEINCAPS2W;

typedef struct tMIXERCONTROLDETAILS_SIGNED *LPMIXERCONTROLDETAILS_SIGNED;

typedef struct tagMIDIOUTCAPSA MIDIOUTCAPSA;

typedef MIDIOUTCAPSA MIDIOUTCAPS;

typedef struct timecaps_tag *PTIMECAPS;

typedef struct tagMCI_OVLY_WINDOW_PARMSW *LPMCI_OVLY_WINDOW_PARMSW;

typedef NPAUXCAPS2A NPAUXCAPS2;

typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;

typedef struct midiproptimediv_tag *LPMIDIPROPTIMEDIV;

typedef struct tagWAVEINCAPS2W *NPWAVEINCAPS2W;

typedef struct pcmwaveformat_tag PCMWAVEFORMAT;

typedef struct tagAUXCAPSW *NPAUXCAPSW;

typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;

typedef struct tagJOYCAPS2W *LPJOYCAPS2W;

typedef struct tagMIXERCAPSW MIXERCAPSW;

typedef struct wavehdr_tag *LPWAVEHDR;

typedef struct tagMCI_OVLY_SAVE_PARMSW *LPMCI_OVLY_SAVE_PARMSW;

typedef MIDIOUTCAPS2A MIDIOUTCAPS2;

typedef NPWAVEINCAPSA NPWAVEINCAPS;

typedef struct tagMCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;

typedef struct tagJOYCAPSW JOYCAPSW;

typedef struct joyinfoex_tag *LPJOYINFOEX;

typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;

typedef WAVEINCAPS2A WAVEINCAPS2;

typedef DWORD MCIERROR;

typedef PMIXERLINECONTROLSA PMIXERLINECONTROLS;

typedef struct tagMCI_VD_PLAY_PARMS *PMCI_VD_PLAY_PARMS;

typedef struct tagMCI_OPEN_PARMSW *PMCI_OPEN_PARMSW;

typedef PAUXCAPSA PAUXCAPS;

typedef struct tagWAVEINCAPSW WAVEINCAPSW;

typedef MIXERCAPS2A MIXERCAPS2;

typedef MIDIINCAPSA MIDIINCAPS;

typedef JOYCAPS2A JOYCAPS2;

typedef struct tagMIDIOUTCAPSW MIDIOUTCAPSW;

typedef struct tagMCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;

#define MMIOM_OPEN 3

#define MIXER_GETLINEINFOF_QUERYMASK 15

#define CALLBACK_WINDOW 65536

#define MCI_SEEK 2055

#define MIM_MOREDATA 972

#define MCI_OVLY_GETDEVCAPS_MAX_WINDOWS 16387

#define MCI_GETDEVCAPS_CAN_RECORD 1

#define MCI_ANIM_WINDOW_ENABLE_STRETCH 1048576

#define MIDI_MAPPER -1

#define MCI_VD_STEP_REVERSE 131072

#define MIXERCONTROL_CT_UNITS_DECIBELS 262144

#define MCI_VD_GETDEVCAPS_FAST_RATE 16387

#define MCIERR_BASE 256

#define MM_JOY1BUTTONUP 951

#define DRV_QUERYCONFIGURE 8

#define MCI_OPEN_TYPE_ID 4096

#define DRV_RESERVED 2048

#define MOM_OPEN 967

#define MEVT_COMMENT 130

#define MIXERCONTROL_CONTROLTYPE_TREBLE 1342373891

#define MCI_RESUME 2133

#define DRVCNF_CANCEL 0

#define TIME_CALLBACK_EVENT_SET 16

#define MIXERLINE_COMPONENTTYPE_SRC_LAST 4106

#define MCI_STATUS_CURRENT_TRACK 8

#define MMIO_INSTALLPROC 65536

#define MM_DRVM_ERROR 979

#define MM_MIM_LONGERROR 966

#define MIXERLINE_TARGETTYPE_WAVEOUT 1

#define MCIERR_DRIVER_INTERNAL 272

#define MCI_SEQ_STATUS_MASTER 16392

#define DRV_EXITSESSION 11

#define MMSYSERR_BADERRNUM 9

#define MCIERR_PARSER_INTERNAL 271

#define MCIERR_SEQ_NOMIDIPRESENT 343

#define MIXER_OBJECTF_HWAVEIN 2684354560

#define MCI_OVLY_RECT 65536

#define MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE 4099

#define WAVERR_SYNC 35

#define MCI_VD_MEDIA_CLV 1026

#define WAVE_FORMAT_48M08 4096

#define MIXER_GETCONTROLDETAILSF_QUERYMASK 15

#define MMSYSERR_LASTERROR 21

#define MIXERLINE_COMPONENTTYPE_DST_TELEPHONE 6

#define MCI_OVLY_INFO_TEXT 65536

#define MEVT_F_LONG 2147483648

#define MCI_ANIM_GETDEVCAPS_CAN_STRETCH 16391

#define MCI_GETDEVCAPS_COMPOUND_DEVICE 6

#define MCI_ALL_DEVICE_ID -1

#define WAVE_FORMAT_48M16 16384

#define MCI_CDA_STATUS_TYPE_TRACK 16385

#define DRV_REMOVE 10

#define MCIERR_WAVE_SETINPUTUNSUITABLE 329

#define MCI_DEVTYPE_CD_AUDIO 516

#define TIME_SMPTE 8

#define MIXERCONTROL_CT_CLASS_LIST 1879048192

#define MCI_SEEK_TO_START 256

#define MCIERR_PARAM_OVERFLOW 268

#define DRV_CANCEL 0

#define MIXERCONTROL_CONTROLTYPE_BUTTON 553713664

#define MIXERLINE_LINEF_DISCONNECTED 32768

#define JOY_BUTTON2CHG 512

#define MCI_ANIM_GETDEVCAPS_MAX_WINDOWS 16392

#define MIXER_GETLINEINFOF_TARGETTYPE 4

#define JOYERR_NOCANDO 166

#define MIXER_OBJECTF_HMIDIOUT 2952790016

#define WAVE_MAPPED 4

#define MCIERR_WAVE_SETINPUTINUSE 323

#define MCIERR_NONAPPLICABLE_FUNCTION 302

#define MCI_GETDEVCAPS_DEVICE_TYPE 4

#define DRV_INSTALL 9

#define MM_MIM_CLOSE 962

#define MMSYSERR_BASE 0

#define MCI_LOAD_FILE 256

#define JOY_CAL_READ6 8388608

#define MMIOERR_CANNOTWRITE 262

#define MIXER_LONG_NAME_CHARS 64

#define JOY_POVCENTERED -1

#define WAVE_FORMAT_44M08 256

#define JOY_CAL_READ3 262144

#define JOY_CAL_READ4 524288

#define JOY_CAL_READ5 4194304

#define MIXERCONTROL_CONTROLTYPE_SINGLESELECT 1879113728

#define MCI_SEQ_STATUS_PORT 16387

#define MCI_ANIM_STEP_REVERSE 65536

#define MCIERR_FLAGS_NOT_COMPATIBLE 284

#define WAVE_MAPPER -1

#define WAVE_INVALIDFORMAT 0

#define MIXER_OBJECTF_HANDLE 2147483648

#define MIXERCONTROL_CONTROLTYPE_DECIBELS 805568512

#define MCI_DEVTYPE_VCR 513

#define WAVE_FORMAT_44M16 1024

#define MCI_STATUS_LENGTH 1

#define MMIO_TOUPPER 16

#define SEEK_END 2

#define MIXER_OBJECTF_MIXER 0

#define MIXERLINE_COMPONENTTYPE_DST_SPEAKERS 4

#define MM_MOM_OPEN 967

#define MIXERLINE_COMPONENTTYPE_DST_LAST 8

#define MIXER_OBJECTF_HMIXER 2147483648

#define MIDIERR_STILLPLAYING 65

#define MCI_DEVTYPE_FIRST 513

#define WOM_OPEN 955

#define MIDIPROP_TIMEDIV 1

#define JOY_CAL_READZONLY 16777216

#define MM_WOM_OPEN 955

#define MM_JOY1MOVE 928

#define MEVT_F_SHORT 0

#define MCI_VD_SPIN_DOWN 131072

#define MIXERCONTROL_CONTROLTYPE_QSOUNDPAN 1073872898

#define MCI_WAVE_SET_CHANNELS 131072

#define MCI_MODE_SEEK 528

#define DRV_MCI_LAST 6143

#define DRV_DISABLE 5

#define MCIERR_SET_DRIVE 309

#define MCI_ANIM_GETDEVCAPS_PALETTES 16390

#define SND_NODEFAULT 2

#define MIDIPROP_TEMPO 2

#define WAVERR_BADFORMAT 32

#define MCI_ANIM_PLAY_SLOW 524288

#define MCI_ANIM_PLAY_SPEED 65536

#define MEVT_TEMPO 1

#define MCI_VD_SPIN_UP 65536

#define MCI_FIRST 2048

#define MCI_SET_DOOR_CLOSED 512

#define MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER 4103

#define MCIERR_ILLEGAL_FOR_AUTO_OPEN 303

#define SELECTDIB 41

#define MIXERCONTROL_CT_UNITS_MASK 16711680

#define MCI_OVLY_WHERE_SOURCE 131072

#define MMSYSERR_WRITEERROR 17

#define MM_JOY2ZMOVE 931

#define MIXERR_INVALVALUE 1026

#define MAXPNAMELEN 32

#define MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT 4104

#define WAVECAPS_SAMPLEACCURATE 32

#define MIDIERR_DONT_CONTINUE 71

#define MHDR_INQUEUE 4

#define MIXERLINE_COMPONENTTYPE_DST_DIGITAL 1

#define MCIERR_BAD_INTEGER 270

#define JOY_BUTTON32 2147483648

#define TIMERR_NOERROR 0

#define MMSYSERR_INVALPARAM 11

#define JOY_BUTTON30 536870912

#define JOY_BUTTON31 1073741824

#define MCI_DEVTYPE_SEQUENCER 523

#define MOD_SQSYNTH 3

#define MCIERR_DEVICE_LENGTH 310

#define JOY_BUTTON29 268435456

#define MCI_GETDEVCAPS_CAN_EJECT 7

#define JOY_BUTTON25 16777216

#define MEVT_VERSION 132

#define JOY_BUTTON26 33554432

#define JOY_BUTTON27 67108864

#define MMIO_FINDRIFF 32

#define JOY_BUTTON28 134217728

#define JOY_BUTTON21 1048576

#define JOY_BUTTON22 2097152

#define MCI_WAVE_OPEN_BUFFER 65536

#define JOY_BUTTON23 4194304

#define MCI_TRACK 16

#define JOY_BUTTON24 8388608

#define MCIERR_FILE_NOT_FOUND 275

#define JOY_BUTTON7 64

#define JOY_CAL_READXONLY 1048576

#define JOY_BUTTON8 128

#define JOY_BUTTON5 16

#define JOY_BUTTON6 32

#define JOY_BUTTON20 524288

#define JOY_BUTTON3 4

#define JOY_BUTTON4 8

#define JOY_BUTTON1 1

#define JOY_POVFORWARD 0

#define JOY_BUTTON2 2

#define MCI_VD_MEDIA_CAV 1027

#define TIME_ONESHOT 0

#define JOY_BUTTON9 256

#define MCI_ESCAPE 2053

#define MMSYSERR_KEYNOTFOUND 15

#define JOY_BUTTON18 131072

#define JOY_BUTTON19 262144

#define MIXERR_INVALCONTROL 1025

#define MMSYSERR_INVALIDALIAS 13

#define JOY_BUTTON14 8192

#define JOY_BUTTON15 16384

#define JOY_BUTTON16 32768

#define JOY_BUTTON17 65536

#define JOY_BUTTON10 512

#define JOY_BUTTON11 1024

#define JOY_BUTTON12 2048

#define JOY_BUTTON13 4096

#define MCIERR_NO_ELEMENT_ALLOWED 301

#define MCI_ANIM_STEP_FRAMES 131072

#define MCI_STATUS_MODE 4

#define MCI_OPEN_TYPE 8192

#define MCI_SEQ_DIV_SMPTE_30 1220

#define MIXERLINE_COMPONENTTYPE_SRC_DIGITAL 4097

#define MCIERR_EXTENSION_NOT_FOUND 281

#define MCI_ANIM_OPEN_PARENT 131072

#define MCI_FORMAT_TMSF 10

#define MCI_MODE_RECORD 527

#define MIXERLINE_TARGETTYPE_AUX 5

#define MEVT_F_CALLBACK 1073741824

#define MOM_CLOSE 968

#define MCI_DEVTYPE_OTHER 521

#define MIXERLINE_COMPONENTTYPE_SRC_FIRST 4096

#define WAVE_FORMAT_QUERY 1

#define MCI_SET_OFF 16384

#define MIXERLINE_COMPONENTTYPE_DST_FIRST 0

#define MIXERLINE_TARGETTYPE_MIDIIN 4

#define MIXERLINE_COMPONENTTYPE_SRC_LINE 4098

#define MM_WOM_DONE 957

#define TIME_SAMPLES 2

#define MCI_CDA_TRACK_AUDIO 1088

#define MMIO_DENYNONE 64

#define MIM_DATA 963

#define MCI_SEQ_DIV_SMPTE_24 1217

#define MCI_SEQ_DIV_SMPTE_25 1218

#define SEEK_SET 0

#define MCI_ANIM_REALIZE_BKGD 131072

#define MIXER_OBJECTF_WAVEOUT 268435456

#define MIXERCONTROL_CT_CLASS_FADER 1342177280

#define MIXERCONTROL_CT_CLASS_TIME 1610612736

#define MCI_MODE_PAUSE 529

#define MIXERLINE_COMPONENTTYPE_DST_LINE 2

#define MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE 4102

#define MIXERCONTROL_CONTROLTYPE_BASS 1342373890

#define MIXERLINE_COMPONENTTYPE_SRC_ANALOG 4106

#define MMIOERR_CANNOTREAD 261

#define MCI_INFO_NAME 4096

#define MIXER_GETCONTROLDETAILSF_LISTTEXT 1

#define MCI_SAVE_FILE 256

#define MCIERR_WAVE_INPUTUNSPECIFIED 325

#define MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT 1895890944

#define MCI_PLAY 2054

#define JOY_CAL_READVONLY 134217728

#define MCI_WAVE_SET_AVGBYTESPERSEC 524288

#define MCI_WAVE_STATUS_LEVEL 16391

#define MCIERR_MUST_USE_SHAREABLE 291

#define WOM_CLOSE 956

#define MCI_SEQ_STATUS_NAME 16395

#define MIXERCONTROL_CONTROLTYPE_VOLUME 1342373889

#define MIXERCONTROL_CT_UNITS_PERCENT 327680

#define WAVECAPS_PITCH 1

#define SND_APPLICATION 128

#define WAVE_FORMAT_1S08 2

#define MMIO_DELETE 512

#define MMIO_REMOVEPROC 131072

#define MCI_GETDEVCAPS_CAN_SAVE 9

#define MIXER_SETCONTROLDETAILSF_CUSTOM 1

#define MCI_VD_STEP_FRAMES 65536

#define WAVECAPS_PLAYBACKRATE 2

#define MIXER_GETLINEINFOF_DESTINATION 0

#define WAVE_FORMAT_1S16 8

#define MCIERR_SEQ_PORT_MAPNODEVICE 339

#define WAVECAPS_SYNC 16

#define MIDI_UNCACHE 4

#define MCI_REALIZE 2112

#define DRV_LOAD 1

#define WAVE_FORMAT_DIRECT_QUERY 9

#define MCIERR_WAVE_OUTPUTSINUSE 320

#define MCI_WAVE_STATUS_BLOCKALIGN 16389

#define MCI_VD_GETDEVCAPS_SLOW_RATE 16388

#define MCI_FORMAT_HMS 1

#define CALLBACK_EVENT 327680

#define MCI_NOTIFY_FAILURE 8

#define MCI_STATUS_ITEM 256

#define MCI_ANIM_GETDEVCAPS_SLOW_RATE 16387

#define MEVT_NOP 2

#define MCI_FORMAT_SMPTE_30DROP 7

#define JOY_RETURNALL 255

#define MCI_FORMAT_BYTES 8

#define MIXERCONTROL_CONTROLTYPE_PERCENT 805634048

#define MCI_DEVTYPE_ANIMATION 519

#define MCI_OVLY_WINDOW_TEXT 524288

#define MIXER_OBJECTF_MIDIOUT 805306368

#define MIXERCONTROL_CONTROLTYPE_MIXER 1895890945

#define MCI_VD_GETDEVCAPS_CAV 131072

#define MMIOERR_CHUNKNOTFOUND 265

#define DRV_OPEN 3

#define MCI_SET_VIDEO 4096

#define MCI_WAVE_MAPPER 1153

#define MMIO_RWMODE 3

#define MMIOERR_BASE 256

#define DRV_FREE 6

#define WAVE_FORMAT_96S08 131072

#define MMIOERR_OUTOFMEMORY 258

#define MIDICAPS_STREAM 8

#define WAVERR_LASTERROR 35

#define MCIERR_INVALID_DEVICE_NAME 263

#define MOD_SYNTH 2

#define WAVE_FORMAT_96S16 524288

#define MCI_MODE_PLAY 526

#define MCI_WAVE_SET_FORMATTAG 65536

#define MM_DRVM_CLOSE 977

#define MM_STREAM_DONE 982

#define MCI_TO 8

#define WAVERR_STILLPLAYING 33

#define JOY_RETURNBUTTONS 128

#define DRV_RESTART 2

#define MCI_RECORD 2063

#define MCI_VD_STATUS_MEDIA_TYPE 16388

#define MMIOERR_TOOMANYOPENFILES 271

#define MCI_ANIM_INFO_TEXT 65536

#define MIDIERR_NOMAP 66

#define MMSYSERR_ERROR 1

#define MIXER_GETLINECONTROLSF_ONEBYTYPE 2

#define JOYSTICKID1 0

#define JOYSTICKID2 1

#define MCI_OVLY_GETDEVCAPS_CAN_FREEZE 16386

#define MMIOERR_CANNOTOPEN 259

#define AUXCAPS_LRVOLUME 2

#define MCI_ANIM_PUT_SOURCE 131072

#define MIDIERR_BASE 64

#define MCI_UPDATE 2132

#define MIXERCONTROL_CONTROLTYPE_PAN 1073872897

#define MIXERCONTROL_CT_UNITS_CUSTOM 0

#define MIDIERR_LASTERROR 71

#define MIXERCONTROL_CONTROLTYPE_BOOLEANMETER 268500992

#define WAVERR_UNPREPARED 34

#define MCI_ANIM_STATUS_HPAL 16388

#define MCI_CDA_TRACK_OTHER 1089

#define JOYERR_BASE 160

#define MCI_ANIM_WINDOW_DEFAULT 0

#define MIXERLINE_LINEF_SOURCE 2147483648

#define MCI_SET_AUDIO_LEFT 1

#define MCIERR_DEVICE_NOT_INSTALLED 306

#define MMIO_DEFAULTBUFFER 8192

#define MCI_INFO_COPYRIGHT 8192

#define MCI_WAVE_STATUS_BITSPERSAMPLE 16390

#define MCI_OVLY_WHERE_DESTINATION 262144

#define MCI_SEQ_SET_MASTER 524288

#define MCI_SEQ_SET_TEMPO 65536

#define MIDIERR_NODEVICE 68

#define MCI_SYSINFO_QUANTITY 256

#define MCI_STATUS_POSITION 2

#define MIXERCONTROL_CT_SC_LIST_SINGLE 0

#define MMSYSERR_MOREDATA 21

#define MCIERR_GET_CD 307

#define MCIERR_MISSING_PARAMETER 273

#define MCI_OVLY_PUT_DESTINATION 262144

#define MCI_SET 2061

#define MCI_SEQ_STATUS_SLAVE 16391

#define MCI_ANIM_PUT_DESTINATION 262144

#define MCI_FORMAT_MILLISECONDS 0

#define WAVE_FORMAT_4S16 2048

#define WAVE_FORMAT_PCM 1

#define MCIERR_UNSUPPORTED_FUNCTION 274

#define MIXERCONTROL_CONTROLTYPE_LOUDNESS 536936452

#define MCI_OVLY_WINDOW_DEFAULT 0

#define MMIO_READWRITE 2

#define JOY_POVLEFT 27000

#define MCI_UNFREEZE 2117

#define WIM_DATA 960

#define MM_MOM_CLOSE 968

#define MCI_VD_STATUS_FORWARD 16387

#define MCI_STATUS_START 512

#define MCI_OVLY_PUT_VIDEO 1048576

#define JOY_RETURNX 1

#define MMIOM_WRITE 1

#define JOY_RETURNZ 4

#define JOY_RETURNY 2

#define MIXERCONTROL_CONTROLTYPE_MICROTIME 1610809344

#define JOY_RETURNV 32

#define JOY_RETURNU 16

#define JOY_RETURNR 8

#define WAVE_FORMAT_2M16 64

#define MM_JOY2BUTTONUP 952

#define MIDICAPS_LRVOLUME 2

#define MCI_DEVTYPE_DAT 517

#define MIDIERR_NOTREADY 67

#define SND_SYNC 0

#define MMIO_FINDLIST 64

#define MIDIERR_BADOPENMODE 70

#define MCI_PAUSE 2057

#define MIXER_GETLINECONTROLSF_QUERYMASK 15

#define MCI_SEQ_STATUS_DIVTYPE 16394

#define MCI_STATUS_NUMBER_OF_TRACKS 3

#define JOY_POVRIGHT 9000

#define WAVE_FORMAT_2M08 16

#define JOY_BUTTON1CHG 256

#define MMSYSERR_DELETEERROR 18

#define MM_JOY1ZMOVE 930

#define MCI_WAVE_SET_SAMPLESPERSEC 262144

#define MCI_GETDEVCAPS_HAS_VIDEO 3

#define DRV_OK 1

#define MIDICAPS_CACHE 4

#define DRV_ENABLE 2

#define MCI_SET_AUDIO_ALL 0

#define WAVECAPS_VOLUME 4

#define MCI_NOTIFY_SUPERSEDED 2

#define MIXERCONTROL_CONTROLTYPE_UNSIGNED 805502976

#define MIXERR_BASE 1024

#define MCIERR_NEW_REQUIRES_ALIAS 299

#define MCI_SPIN 2060

#define MCI_ANIM_GETDEVCAPS_FAST_RATE 16386

#define MCIERR_DRIVER 278

#define WAVE_ALLOWSYNC 2

#define MIXERCONTROL_CT_SUBCLASS_MASK 251658240

#define MIXERCONTROL_CT_SC_SWITCH_BUTTON 16777216

#define MIDISTRM_ERROR -2

#define MCI_SEQ_SET_OFFSET 16777216

#define MM_MCISIGNAL 971

#define MCI_OVLY_WINDOW_HWND 65536

#define WHDR_ENDLOOP 8

#define MCI_SET_ON 8192

#define MMIO_DIRTY 268435456

#define MCI_STOP 2056

#define MCI_WAVE_OUTPUT 8388608

#define MCI_VD_GETDEVCAPS_CLV 65536

#define WAVECAPS_LRVOLUME 8

#define WAVE_FORMAT_4S08 512

#define MCIERR_SEQ_PORT_NONEXISTENT 338

#define MIXERCONTROL_CONTROLTYPE_CUSTOM 0

#define MCIERR_INVALID_FILE 296

#define AUXCAPS_CDAUDIO 1

#define JOY_RETURNPOVCTS 512

#define JOY_POVBACKWARD 18000

#define MOM_POSITIONCB 970

#define MMIO_CREATERIFF 32

#define MM_MCINOTIFY 953

#define MIXERCONTROL_CT_CLASS_METER 268435456

#define MIXERCONTROL_CONTROLTYPE_SIGNED 805437440

#define MMIOM_WRITEFLUSH 5

#define MIXERCONTROL_CONTROLTYPE_ONOFF 536936449

#define MMSYSERR_ALLOCATED 4

#define MIXERCONTROL_CT_SC_TIME_MILLISECS 16777216

#define MIXERCONTROL_CT_CLASS_SWITCH 536870912

#define MIDIMAPPER -1

#define MIXER_GETLINEINFOF_COMPONENTTYPE 3

#define MIXERCONTROL_CT_CLASS_MASK 4026531840

#define DRV_POWER 15

#define MCI_FROM 4

#define MIXER_SETCONTROLDETAILSF_QUERYMASK 15

#define MIXERCONTROL_CT_CLASS_SLIDER 1073741824

#define MMSYSERR_INVALHANDLE 5

#define MCIERR_DUPLICATE_ALIAS 289

#define MIXERCONTROL_CT_UNITS_SIGNED 131072

#define MM_MOM_POSITIONCB 970

#define SND_NOWAIT 8192

#define MMSYSERR_VALNOTFOUND 19

#define MM_JOY1BUTTONDOWN 949

#define MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC 4101

#define MCIERR_WAVE_OUTPUTSUNSUITABLE 326

#define MIXERCONTROL_CONTROLF_UNIFORM 1

#define TIME_CALLBACK_FUNCTION 0

#define MOD_FMSYNTH 4

#define MCI_FORMAT_FRAMES 3

#define JOY_RETURNRAWDATA 256

#define MCIERR_MISSING_DEVICE_NAME 292

#define TIME_PERIODIC 1

#define MCI_OPEN_ELEMENT 512

#define TIME_MIDI 16

#define SND_ALIAS_START 0

#define MCI_OVLY_GETDEVCAPS_CAN_STRETCH 16385

#define MCI_STEP 2062

#define MM_MIXM_LINE_CHANGE 976

#define MCI_OPEN_ALIAS 1024

#define MCI_DELETE 2134

#define WAVE_FORMAT_44S08 512

#define MCI_WAVE_STATUS_AVGBYTESPERSEC 16388

#define MIXERLINE_COMPONENTTYPE_DST_UNDEFINED 0

#define MCI_RECORD_INSERT 256

#define MIXER_OBJECTF_WAVEIN 536870912

#define MIXERLINE_COMPONENTTYPE_DST_HEADPHONES 5

#define MCIERR_UNRECOGNIZED_KEYWORD 259

#define DRVCNF_RESTART 2

#define MIXERLINE_COMPONENTTYPE_DST_WAVEIN 7

#define WAVE_FORMAT_44S16 2048

#define MCI_VD_ESCAPE_STRING 256

#define MMSYSERR_INVALFLAG 10

#define MCI_WAVE_SET_ANYINPUT 67108864

#define MCI_SEQ_STATUS_COPYRIGHT 16396

#define MHDR_ISSTRM 8

#define MCI_ANIM_GETDEVCAPS_NORMAL_RATE 16388

#define SND_ASYNC 1

#define MCI_ANIM_STATUS_HWND 16387

#define MMIOM_SEEK 2

#define MIXERCONTROL_CT_UNITS_BOOLEAN 65536

#define MCIERR_SEQ_TIMER 341

#define MCI_OPEN 2051

#define MM_DRVM_OPEN 976

#define MCIERR_CANNOT_USE_ALL 279

#define MMIO_DENYWRITE 32

#define MIXERCONTROL_CONTROLTYPE_MILLITIME 1627586560

#define MCI_MODE_STOP 525

#define MCI_SEQ_MAPPER 65535

#define MCI_SEQ_SET_SLAVE 262144

#define MIXERCONTROL_CONTROLTYPE_SIGNEDMETER 268566528

#define MEVT_SHORTMSG 0

#define MCI_ANIM_STATUS_STRETCH 16389

#define SND_MEMORY 4

#define MCI_VD_MEDIA_OTHER 1028

#define MMIOERR_PATHNOTFOUND 267

#define MCI_INFO_FILE 512

#define MIXERCONTROL_CT_SC_METER_POLLED 0

#define MMIO_FINDPROC 262144

#define MCI_OPEN_ELEMENT_ID 2048

#define MCIERR_OUTOFRANGE 282

#define MCI_VD_GETDEVCAPS_NORMAL_RATE 16389

#define MCI_SEQ_FILE 16386

#define MIXERLINE_TARGETTYPE_WAVEIN 2

#define MCIERR_NO_INTEGER 312

#define WHDR_PREPARED 2

#define MCI_DEVTYPE_WAVEFORM_AUDIO 522

#define MCI_OVLY_WINDOW_DISABLE_STRETCH 2097152

#define MCIERR_FILE_READ 348

#define MMIO_DENYREAD 48

#define MCI_BREAK_HWND 512

#define MM_MIM_OPEN 961

#define MIXERCONTROL_CONTROLTYPE_BOOLEAN 536936448

#define MCIERR_INVALID_DEVICE_ID 257

#define MIXER_OBJECTF_HMIDIIN 3221225472

#define MCI_BREAK_KEY 256

#define JOYERR_NOERROR 0

#define MMIO_PARSE 256

#define MCI_VD_STATUS_SPEED 16386

#define MMIO_EXCLUSIVE 16

#define MCIERR_HARDWARE 262

#define MCI_SEQ_STATUS_OFFSET 16393

#define DRV_CLOSE 4

#define MCIERR_FILE_WRITE 349

#define SEEK_CUR 1

#define MM_WOM_CLOSE 956

#define MCI_DEVTYPE_VIDEODISC 514

#define MCI_ANIM_WHERE_DESTINATION 262144

#define MCIERR_MULTIPLE 280

#define TIMERR_NOCANDO 97

#define MCIERR_SEQ_DIV_INCOMPATIBLE 336

#define MCIERR_CANNOT_LOAD_DRIVER 266

#define MCIERR_CREATEWINDOW 347

#define MIXERCONTROL_CONTROLTYPE_MUTE 536936450

#define MCI_SEQ_STATUS_TEMPO 16386

#define MHDR_PREPARED 2

#define WAVE_FORMAT_1M08 1

#define WAVE_FORMAT_1M16 4

#define MIM_LONGERROR 966

#define MCI_OVLY_WHERE_FRAME 524288

#define TIMERR_BASE 96

#define MM_JOY2MOVE 929

#define MIM_ERROR 965

#define CALLBACK_THREAD 131072

#define WAVE_FORMAT_48S08 8192

#define MCI_MODE_OPEN 530

#define WAVE_FORMAT_48S16 32768

#define MCI_OPEN_SHAREABLE 256

#define MCI_VD_PLAY_FAST 131072

#define MCIERR_DEVICE_TYPE_REQUIRED 287

#define MIM_OPEN 961

#define MCIERR_WAVE_INPUTSINUSE 322

#define MCI_INFO_MEDIA_UPC 1024

#define SND_LOOP 8

#define MIXER_GETLINEINFOF_SOURCE 1

#define MMIO_GETTEMP 131072

#define MCI_BREAK_OFF 1024

#define SND_ALIAS_ID 1114112

#define MHDR_DONE 1

#define SND_RESOURCE 262148

#define MCI_DEVTYPE_LAST 523

#define MIXERCONTROL_CONTROLF_DISABLED 2147483648

#define MCI_ANIM_OPEN_WS 65536

#define MCI_LOAD 2128

#define MM_STREAM_OPEN 980

#define JOY_CAL_READYONLY 2097152

#define DRV_CONFIGURE 7

#define MCI_ANIM_UPDATE_HDC 131072

#define MCI_ANIM_OPEN_NOSTATIC 262144

#define MMIOERR_CANNOTEXPAND 264

#define TIME_KILL_SYNCHRONOUS 256

#define MCIERR_WAVE_SETOUTPUTINUSE 321

#define QUERYROPSUPPORT 40

#define MCIERR_WAVE_INPUTSUNSUITABLE 328

#define MMIOERR_ACCESSDENIED 268

#define MCIERR_BAD_CONSTANT 290

#define CALLBACK_FUNCTION 196608

#define MCI_INFO 2058

#define MCIERR_DEVICE_LOCKED 288

#define MIXERCONTROL_CT_SC_TIME_MICROSECS 0

#define MCI_SEQ_MIDI 16387

#define MCIERR_OUT_OF_MEMORY 264

#define MIDIPROP_GET 1073741824

#define MCI_PUT 2114

#define MCI_NOTIFY 1

#define MCI_ANIM_GETDEVCAPS_CAN_REVERSE 16385

#define MIXERCONTROL_CT_CLASS_NUMBER 805306368

#define MCI_WAVE_SET_BLOCKALIGN 1048576

#define MCI_ANIM_WINDOW_TEXT 524288

#define MCI_GETDEVCAPS_HAS_AUDIO 2

#define MCI_SEQ_DIV_PPQN 1216

#define MIXER_OBJECTF_MIDIIN 1073741824

#define MCI_VD_SEEK_REVERSE 65536

#define MCI_WAVE_PCM 1152

#define MCI_NOTIFY_SUCCESSFUL 1

#define MIDI_CACHE_ALL 1

#define AUXCAPS_VOLUME 1

#define DRV_USER 16384

#define MMSYSERR_NODRIVER 6

#define WHDR_INQUEUE 16

#define MCI_SET_DOOR_OPEN 256

#define MM_WIM_OPEN 958

#define MCIERR_NO_CLOSING_QUOTE 294

#define MCI_OVLY_WINDOW_ENABLE_STRETCH 1048576

#define MCI_STATUS 2068

#define JOY_BUTTON4CHG 2048

#define MCI_ANIM_STATUS_SPEED 16385

#define MIXERCONTROL_CT_SC_LIST_MULTIPLE 16777216

#define MCI_VD_OFFSET 1024

#define JOY_USEDEADZONE 2048

#define TIMERR_STRUCT 129

#define MOD_WAVETABLE 6

#define MCI_GETDEVCAPS 2059

#define MIDICAPS_VOLUME 1

#define MM_STREAM_CLOSE 981

#define MCI_BREAK 2065

#define MCI_DEVTYPE_OVERLAY 515

#define MCI_CUE 2096

#define MCIERR_SEQ_PORT_MISCERROR 340

#define MCI_CUT 2129

#define MCI_OVLY_PUT_SOURCE 131072

#define MCI_OVLY_STATUS_STRETCH 16386

#define MCI_SYSINFO_NAME 1024

#define MCI_WAVE_INPUT 4194304

#define MCI_WAVE_OFFSET 1152

#define MIXERCONTROL_CONTROLF_MULTIPLE 2

#define MCI_WAVE_GETDEVCAPS_OUTPUTS 16386

#define MCI_INFO_MEDIA_IDENTITY 2048

#define MMSYSERR_BADDB 14

#define NEWTRANSPARENT 3

#define MAX_JOYSTICKOEMVXDNAME 260

#define JOYERR_PARMS 165

#define MCIERR_MISSING_COMMAND_STRING 267

#define MMIO_GLOBALPROC 268435456

#define MCI_WAVE_SET_ANYOUTPUT 134217728

#define JOY_CAL_READXYONLY 131072

#define MMSYSERR_NOTENABLED 3

#define SND_PURGE 64

#define JOYCAPS_POVCTS 64

#define MCI_VD_PLAY_SCAN 524288

#define MCI_GETDEVCAPS_ITEM 256

#define MIXERLINE_COMPONENTTYPE_DST_MONITOR 3

#define MIDIPATCHSIZE 128

#define JOY_RETURNCENTERED 1024

#define MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED 4096

#define MMIO_FHOPEN 16

#define MCI_WAVE_STATUS_CHANNELS 16386

#define JOY_CAL_READUONLY 67108864

#define MMIOERR_FILENOTFOUND 257

#define MCI_ANIM_STATUS_FORWARD 16386

#define CALLBACK_TASK 131072

#define MIXER_GETCONTROLDETAILSF_VALUE 0

#define CALLBACK_NULL 0

#define MIXERR_LASTERROR 1026

#define MIXERLINE_COMPONENTTYPE_DST_VOICEIN 8

#define JOYCAPS_HASR 2

#define JOYCAPS_HASV 8

#define SND_ALIAS 65536

#define MCI_OVLY_OPEN_WS 65536

#define JOYCAPS_HASU 4

#define JOYCAPS_HASZ 1

#define MCI_CLOSE 2052

#define MIXERR_INVALLINE 1024

#define WAVE_FORMAT_4M08 256

#define MMIOERR_UNBUFFERED 266

#define MCI_SET_AUDIO_RIGHT 2

#define MMIO_FINDCHUNK 16

#define MCI_LAST 4095

#define MCIERR_WAVE_SETOUTPUTUNSUITABLE 327

#define MMIOERR_INVALIDFILE 272

#define MM_MOM_DONE 969

#define MIDI_IO_STATUS 32

#define MMIOM_CLOSE 4

#define MCIERR_FILE_NOT_SAVED 286

#define SND_FILENAME 131072

#define MIXER_OBJECTF_HWAVEOUT 2415919104

#define MM_MIM_MOREDATA 972

#define MIXERCONTROL_CONTROLTYPE_PEAKMETER 268566529

#define WHDR_DONE 1

#define MCI_PASTE 2131

#define MCI_ANIM_PLAY_SCAN 1048576

#define MCI_STATUS_TIME_FORMAT 6

#define MIXER_SHORT_NAME_CHARS 16

#define MCIERR_NO_IDENTITY 350

#define MIDI_CACHE_BESTFIT 2

#define WIM_OPEN 958

#define MCI_WINDOW 2113

#define MCI_ANIM_RECT 65536

#define MIXERCONTROL_CT_UNITS_UNSIGNED 196608

#define WAVE_FORMAT_DIRECT 8

#define JOY_RETURNPOV 64

#define MCI_ANIM_WINDOW_HWND 65536

#define MCI_WAVE_STATUS_SAMPLESPERSEC 16387

#define MCI_MODE_NOT_READY 524

#define TIME_TICKS 32

#define MMIO_COMPAT 0

#define WAVE_FORMAT_4M16 1024

#define WAVERR_BASE 32

#define MCI_OVLY_OPEN_PARENT 131072

#define MIDIERR_UNPREPARED 64

#define MCIERR_EXTRA_CHARACTERS 305

#define MCI_SEQ_FORMAT_SONGPTR 16385

#define MMIOERR_CANNOTSEEK 263

#define MCI_ANIM_PLAY_REVERSE 131072

#define MIXER_GETLINECONTROLSF_ONEBYID 1

#define JOYCAPS_HASPOV 16

#define MCI_USER_MESSAGES 3072

#define MIXERCONTROL_CONTROLTYPE_SLIDER 1073872896

#define MIXER_SETCONTROLDETAILSF_VALUE 0

#define MIXER_OBJECTF_AUX 1342177280

#define JOY_CAL_READRONLY 33554432

#define MCI_SAVE 2067

#define MCI_WAIT 2

#define MIDI_CACHE_QUERY 3

#define MCI_OVLY_WHERE_VIDEO 1048576

#define MCIERR_SEQ_PORT_INUSE 337

#define MCI_OVLY_WINDOW_STATE 262144

#define MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY 4105

#define MOD_SWSYNTH 7

#define MMSYSERR_NOMEM 7

#define MCI_SEQ_SMPTE 16388

#define MCIERR_FILENAME_REQUIRED 304

#define MCI_WAVE_STATUS_FORMATTAG 16385

#define MIXER_GETLINEINFOF_LINEID 2

#define MIXERCONTROL_CONTROLTYPE_BASS_BOOST 536945271

#define MCIERR_UNRECOGNIZED_COMMAND 261

#define MCI_SEQ_DIV_SMPTE_30DROP 1219

#define MMIOM_USER 32768

#define MMSYSERR_READERROR 16

#define MIXERLINE_TARGETTYPE_MIDIOUT 3

#define MCI_SET_TIME_FORMAT 1024

#define DRV_MCI_FIRST 2048

#define MCI_VD_PLAY_SPEED 262144

#define MIXERCONTROL_CONTROLTYPE_MUX 1879113729

#define MIM_CLOSE 962

#define MCI_RECORD_OVERWRITE 512

#define MCI_SEQ_SET_PORT 131072

#define MM_WIM_DATA 960

#define MCI_GETDEVCAPS_CAN_PLAY 8

#define MCI_DEVTYPE_DIGITAL_VIDEO 520

#define MCI_SYSINFO 2064

#define MCI_STATUS_MEDIA_PRESENT 5

#define MMSYSERR_HANDLEBUSY 12

#define MM_MIM_ERROR 965

#define MMSYSERR_NOTSUPPORTED 8

#define SND_NOSTOP 16

#define WHDR_BEGINLOOP 4

#define MMIO_EMPTYBUF 16

#define MCI_DEVTYPE_FIRST_USER 4096

#define WAVE_FORMAT_2S16 128

#define AUXCAPS_AUXIN 2

#define MCI_STATUS_READY 7

#define MMIO_SHAREMODE 112

#define MCI_GETDEVCAPS_USES_FILES 5

#define MCIERR_SET_CD 308

#define MIXERCONTROL_CONTROLTYPE_STEREOENH 536936453

#define MMIOERR_CANNOTCLOSE 260

#define MIXERCONTROL_CT_SC_SWITCH_BOOLEAN 0

#define MCI_ANIM_PLAY_FAST 262144

#define MMIO_CREATELIST 64

#define MIXERCONTROL_CONTROLTYPE_FADER 1342373888

#define MMIOERR_SHARINGVIOLATION 269

#define MMIO_CREATE 4096

#define MIM_LONGDATA 964

#define MCI_VD_GETDEVCAPS_CAN_REVERSE 16386

#define JOYCAPS_POV4DIR 32

#define MCI_FORMAT_SAMPLES 9

#define MM_MIM_DATA 963

#define MM_WIM_CLOSE 959

#define MMSYSERR_BADDEVICEID 2

#define MMIO_ALLOCBUF 65536

#define MCI_SEQ_OFFSET 1216

#define MM_MIM_LONGDATA 964

#define MCI_INFO_PRODUCT 256

#define WAVE_FORMAT_2S08 32

#define MCI_OVLY_STATUS_HWND 16385

#define MMIO_READ 0

#define TIME_CALLBACK_EVENT_PULSE 32

#define MMIOERR_NETWORKERROR 270

#define MCI_OVLY_PUT_FRAME 524288

#define MCI_SEEK_TO_END 512

#define MMIO_WRITE 1

#define MCI_ANIM_WHERE_SOURCE 131072

#define MCI_VD_PLAY_REVERSE 65536

#define AUX_MAPPER -1

#define MCIERR_NULL_PARAMETER_BLOCK 297

#define JOY_BUTTON3CHG 1024

#define MCI_FREEZE 2116

#define MMIO_EXIST 16384

#define MIDIERR_INVALIDSETUP 69

#define MCIERR_DEVICE_NOT_READY 276

#define MCIERR_SEQ_PORTUNSPECIFIED 342

#define MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER 268632064

#define MCIERR_WAVE_OUTPUTUNSPECIFIED 324

#define CALLBACK_TYPEMASK 458752

#define MCI_SEQ_NONE 65533

#define MCIERR_NO_WINDOW 346

#define MIXER_GETLINECONTROLSF_ALL 0

#define WIM_CLOSE 959

#define MIXERLINE_TARGETTYPE_UNDEFINED 0

#define MCI_WHERE 2115

#define MCI_FORMAT_SMPTE_30 6

#define MCI_FORMAT_SMPTE_24 4

#define MCI_FORMAT_SMPTE_25 5

#define MCIERR_CUSTOM_DRIVER_BASE 512

#define MM_DRVM_DATA 978

#define MCI_CD_OFFSET 1088

#define MCIERR_INTERNAL 277

#define MCIERR_UNNAMED_RESOURCE 298

#define MCI_COPY 2130

#define MM_STREAM_ERROR 983

#define MMSYSERR_NOERROR 0

#define MMIO_UNICODEPROC 16777216

#define MCI_VD_PLAY_SLOW 1048576

#define MOM_DONE 969

#define MIXERCONTROL_CONTROLTYPE_MONO 536936451

#define WOM_DONE 957

#define MCIERR_DUPLICATE_FLAGS 295

#define MCI_SET_AUDIO 2048

#define MAXERRORLENGTH 256

#define TIME_MS 1

#define MIXERCONTROL_CONTROLTYPE_EQUALIZER 1342373892

#define JOY_CAL_READALWAYS 65536

#define MOD_MAPPER 5

#define MCI_VD_FORMAT_TRACK 16385

#define MOD_MIDIPORT 1

#define MCI_SYSINFO_INSTALLNAME 2048

#define MIXERLINE_LINEF_ACTIVE 1

#define MMIOM_RENAME 6

#define MCI_FORMAT_MSF 2

#define MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER 4100

#define MCI_VD_MODE_PARK 1025

#define TIME_BYTES 4

#define MM_JOY2BUTTONDOWN 950

#define MIXERCONTROL_CT_CLASS_CUSTOM 0

#define MCI_STRING_OFFSET 512

#define MCI_WAVE_SET_BITSPERSAMPLE 2097152

#define MCI_ANIM_REALIZE_NORM 65536

#define MMSYSERR_NODRIVERCB 20

#define MCI_VD_STATUS_DISC_SIZE 16390

#define MCI_ANIM_WINDOW_STATE 262144

#define MCI_DEVTYPE_SCANNER 518

#define MCI_VD_STATUS_SIDE 16389

#define MIDIPROP_SET 2147483648

#define MCIERR_BAD_TIME_FORMAT 293

#define DRVCNF_OK 1

#define MCIERR_DEVICE_ORD_LENGTH 311

#define JOYERR_UNPLUGGED 167

#define MCI_WAVE_GETDEVCAPS_INPUTS 16385

#define MCI_NOTIFY_ABORTED 4

#define MCIERR_DEVICE_OPEN 265

#define MMIOM_READ 0

#define MCIERR_MISSING_STRING_ARGUMENT 269

#define WAVE_FORMAT_96M08 65536

#define MEVT_LONGMSG 128

#define WAVE_FORMAT_96M16 262144

#define MCI_SYSINFO_OPEN 512

#define MCIERR_NOTIFY_ON_AUTO_OPEN 300

#define MM_MIXM_CONTROL_CHANGE 977

#define MCI_ANIM_WINDOW_DISABLE_STRETCH 2097152

#define UNUSED32 4294967295

#define UNUSED16 65535

typedef struct _DATATYPES_INFO_1W _DATATYPES_INFO_1W, *P_DATATYPES_INFO_1W;

typedef struct _DATATYPES_INFO_1W *LPDATATYPES_INFO_1W;

struct _DATATYPES_INFO_1W {
    LPWSTR pName;
};

typedef struct _PRINTER_NOTIFY_INFO_DATA _PRINTER_NOTIFY_INFO_DATA, *P_PRINTER_NOTIFY_INFO_DATA;

typedef struct _PRINTER_NOTIFY_INFO_DATA PRINTER_NOTIFY_INFO_DATA;

typedef union _union_1480 _union_1480, *P_union_1480;

typedef struct _struct_1481 _struct_1481, *P_struct_1481;

struct _struct_1481 {
    DWORD cbBuf;
    LPVOID pBuf;
};

union _union_1480 {
    DWORD adwData[2];
    struct _struct_1481 Data;
};

struct _PRINTER_NOTIFY_INFO_DATA {
    WORD Type;
    WORD Field;
    DWORD Reserved;
    DWORD Id;
    union _union_1480 NotifyData;
};

typedef struct _DRIVER_INFO_3A _DRIVER_INFO_3A, *P_DRIVER_INFO_3A;

struct _DRIVER_INFO_3A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
};

typedef struct _DATATYPES_INFO_1A _DATATYPES_INFO_1A, *P_DATATYPES_INFO_1A;

typedef struct _DATATYPES_INFO_1A *LPDATATYPES_INFO_1A;

struct _DATATYPES_INFO_1A {
    LPSTR pName;
};

typedef struct _BINARY_CONTAINER _BINARY_CONTAINER, *P_BINARY_CONTAINER;

typedef BYTE *LPBYTE;

struct _BINARY_CONTAINER {
    DWORD cbBuf;
    LPBYTE pData;
};

typedef struct _PRINTER_DEFAULTSA _PRINTER_DEFAULTSA, *P_PRINTER_DEFAULTSA;

typedef struct _PRINTER_DEFAULTSA *PPRINTER_DEFAULTSA;

typedef PPRINTER_DEFAULTSA PPRINTER_DEFAULTS;

typedef struct _devicemodeA _devicemodeA, *P_devicemodeA;

typedef struct _devicemodeA *LPDEVMODEA;

typedef DWORD ACCESS_MASK;

typedef union _union_391 _union_391, *P_union_391;

typedef union _union_393.conflict _union_393.conflict, *P_union_393.conflict;

typedef struct _struct_392 _struct_392, *P_struct_392;

typedef struct _POINTL _POINTL, *P_POINTL;

typedef struct _POINTL POINTL;

struct _struct_392 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

struct _POINTL {
    LONG x;
    LONG y;
};

union _union_391 {
    struct _struct_392 field0;
    POINTL dmPosition;
};

struct _PRINTER_DEFAULTSA {
    LPSTR pDatatype;
    LPDEVMODEA pDevMode;
    ACCESS_MASK DesiredAccess;
};

union _union_393.conflict {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeA {
    BYTE dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_391 field6_0x2c;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    BYTE dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_393.conflict field21_0x74;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct _DRIVER_INFO_6W _DRIVER_INFO_6W, *P_DRIVER_INFO_6W;

typedef double ULONGLONG;

typedef ULONGLONG DWORDLONG;

struct _DRIVER_INFO_6W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPWSTR pszMfgName;
    LPWSTR pszOEMUrl;
    LPWSTR pszHardwareID;
    LPWSTR pszProvider;
};

typedef struct _BIDI_DATA _BIDI_DATA, *P_BIDI_DATA;

typedef struct _BIDI_DATA *PBIDI_DATA;

typedef union _union_1485 _union_1485, *P_union_1485;

typedef struct _BINARY_CONTAINER BINARY_CONTAINER;

union _union_1485 {
    BOOL bData;
    LONG iData;
    LPWSTR sData;
    FLOAT fData;
    BINARY_CONTAINER biData;
};

struct _BIDI_DATA {
    DWORD dwBidiType;
    union _union_1485 u;
};

typedef struct _PRINTER_INFO_7A _PRINTER_INFO_7A, *P_PRINTER_INFO_7A;

struct _PRINTER_INFO_7A {
    LPSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PRINTER_DEFAULTSW _PRINTER_DEFAULTSW, *P_PRINTER_DEFAULTSW;

typedef struct _devicemodeW _devicemodeW, *P_devicemodeW;

typedef struct _devicemodeW *LPDEVMODEW;

typedef union _union_395.conflict _union_395.conflict, *P_union_395.conflict;

typedef union _union_397.conflict _union_397.conflict, *P_union_397.conflict;

typedef struct _struct_396 _struct_396, *P_struct_396;

struct _struct_396 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_395.conflict {
    struct _struct_396 field0;
    POINTL dmPosition;
};

struct _PRINTER_DEFAULTSW {
    LPWSTR pDatatype;
    LPDEVMODEW pDevMode;
    ACCESS_MASK DesiredAccess;
};

union _union_397.conflict {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeW {
    WCHAR dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_395.conflict field6_0x4c;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    WCHAR dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_397.conflict field21_0xb4;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct _ADDJOB_INFO_1A _ADDJOB_INFO_1A, *P_ADDJOB_INFO_1A;

typedef struct _ADDJOB_INFO_1A *PADDJOB_INFO_1A;

struct _ADDJOB_INFO_1A {
    LPSTR Path;
    DWORD JobId;
};

typedef struct _PRINTPROCESSOR_CAPS_1 _PRINTPROCESSOR_CAPS_1, *P_PRINTPROCESSOR_CAPS_1;

struct _PRINTPROCESSOR_CAPS_1 {
    DWORD dwLevel;
    DWORD dwNupOptions;
    DWORD dwPageOrderFlags;
    DWORD dwNumberOfCopies;
};

typedef struct _BIDI_REQUEST_DATA _BIDI_REQUEST_DATA, *P_BIDI_REQUEST_DATA;

typedef struct _BIDI_DATA BIDI_DATA;

struct _BIDI_REQUEST_DATA {
    DWORD dwReqNumber;
    LPWSTR pSchema;
    BIDI_DATA data;
};

typedef struct _PRINTPROCESSOR_INFO_1W _PRINTPROCESSOR_INFO_1W, *P_PRINTPROCESSOR_INFO_1W;

typedef struct _PRINTPROCESSOR_INFO_1W PRINTPROCESSOR_INFO_1W;

struct _PRINTPROCESSOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _PRINTER_DEFAULTSW *PPRINTER_DEFAULTSW;

typedef struct _PRINTER_INFO_5A _PRINTER_INFO_5A, *P_PRINTER_INFO_5A;

struct _PRINTER_INFO_5A {
    LPSTR pPrinterName;
    LPSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PORT_INFO_2W _PORT_INFO_2W, *P_PORT_INFO_2W;

struct _PORT_INFO_2W {
    LPWSTR pPortName;
    LPWSTR pMonitorName;
    LPWSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1A;

typedef struct _PRINTPROCESSOR_INFO_1A _PRINTPROCESSOR_INFO_1A, *P_PRINTPROCESSOR_INFO_1A;

typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1A;

struct _PRINTPROCESSOR_INFO_1A {
    LPSTR pName;
};

typedef struct _MONITOR_INFO_1W _MONITOR_INFO_1W, *P_MONITOR_INFO_1W;

struct _MONITOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _DATATYPES_INFO_1A *PDATATYPES_INFO_1A;

typedef PDATATYPES_INFO_1A PDATATYPES_INFO_1;

typedef struct _ADDJOB_INFO_1W _ADDJOB_INFO_1W, *P_ADDJOB_INFO_1W;

typedef struct _ADDJOB_INFO_1W ADDJOB_INFO_1W;

struct _ADDJOB_INFO_1W {
    LPWSTR Path;
    DWORD JobId;
};

typedef struct _BIDI_RESPONSE_DATA _BIDI_RESPONSE_DATA, *P_BIDI_RESPONSE_DATA;

struct _BIDI_RESPONSE_DATA {
    DWORD dwResult;
    DWORD dwReqNumber;
    LPWSTR pSchema;
    BIDI_DATA data;
};

typedef struct _ADDJOB_INFO_1A *LPADDJOB_INFO_1A;

typedef struct _DRIVER_INFO_1A _DRIVER_INFO_1A, *P_DRIVER_INFO_1A;

struct _DRIVER_INFO_1A {
    LPSTR pName;
};

typedef struct _ADDJOB_INFO_1W *LPADDJOB_INFO_1W;

typedef struct _BIDI_REQUEST_DATA BIDI_REQUEST_DATA;

typedef struct _PROVIDOR_INFO_2A _PROVIDOR_INFO_2A, *P_PROVIDOR_INFO_2A;

typedef struct _PROVIDOR_INFO_2A PROVIDOR_INFO_2A;

typedef PROVIDOR_INFO_2A PROVIDOR_INFO_2;

struct _PROVIDOR_INFO_2A {
    LPSTR pOrder;
};

typedef struct _PROVIDOR_INFO_1A _PROVIDOR_INFO_1A, *P_PROVIDOR_INFO_1A;

typedef struct _PROVIDOR_INFO_1A PROVIDOR_INFO_1A;

typedef PROVIDOR_INFO_1A PROVIDOR_INFO_1;

struct _PROVIDOR_INFO_1A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _FORM_INFO_1A _FORM_INFO_1A, *P_FORM_INFO_1A;

typedef struct _FORM_INFO_1A FORM_INFO_1A;

typedef FORM_INFO_1A FORM_INFO_1;

typedef struct tagSIZE tagSIZE, *PtagSIZE;

typedef struct tagSIZE SIZE;

typedef SIZE SIZEL;

typedef struct _RECTL _RECTL, *P_RECTL;

typedef struct _RECTL RECTL;

struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagSIZE {
    LONG cx;
    LONG cy;
};

struct _FORM_INFO_1A {
    DWORD Flags;
    LPSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef struct _JOB_INFO_2A _JOB_INFO_2A, *P_JOB_INFO_2A;

typedef void *PVOID;

typedef PVOID PSECURITY_DESCRIPTOR;

typedef struct _SYSTEMTIME _SYSTEMTIME, *P_SYSTEMTIME;

typedef struct _SYSTEMTIME SYSTEMTIME;

struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
};

struct _JOB_INFO_2A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pNotifyName;
    LPSTR pDatatype;
    LPSTR pPrintProcessor;
    LPSTR pParameters;
    LPSTR pDriverName;
    LPDEVMODEA pDevMode;
    LPSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _JOB_INFO_1A _JOB_INFO_1A, *P_JOB_INFO_1A;

typedef struct _JOB_INFO_1A JOB_INFO_1A;

struct _JOB_INFO_1A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pDatatype;
    LPSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1A;

typedef struct _PRINTER_INFO_9A _PRINTER_INFO_9A, *P_PRINTER_INFO_9A;

struct _PRINTER_INFO_9A {
    LPDEVMODEA pDevMode;
};

typedef struct _BIDI_RESPONSE_CONTAINER _BIDI_RESPONSE_CONTAINER, *P_BIDI_RESPONSE_CONTAINER;

typedef struct _BIDI_RESPONSE_CONTAINER BIDI_RESPONSE_CONTAINER;

typedef struct _BIDI_RESPONSE_DATA BIDI_RESPONSE_DATA;

struct _BIDI_RESPONSE_CONTAINER {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    BIDI_RESPONSE_DATA aData[1];
};

typedef struct _DRIVER_INFO_5A _DRIVER_INFO_5A, *P_DRIVER_INFO_5A;

struct _DRIVER_INFO_5A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DATATYPES_INFO_1W *PDATATYPES_INFO_1W;

typedef struct _JOB_INFO_2W _JOB_INFO_2W, *P_JOB_INFO_2W;

typedef struct _JOB_INFO_2W JOB_INFO_2W;

struct _JOB_INFO_2W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pNotifyName;
    LPWSTR pDatatype;
    LPWSTR pPrintProcessor;
    LPWSTR pParameters;
    LPWSTR pDriverName;
    LPDEVMODEW pDevMode;
    LPWSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _PORT_INFO_3A _PORT_INFO_3A, *P_PORT_INFO_3A;

struct _PORT_INFO_3A {
    DWORD dwStatus;
    LPSTR pszStatus;
    DWORD dwSeverity;
};

typedef union _union_1482 _union_1482, *P_union_1482;

typedef struct _struct_1483 _struct_1483, *P_struct_1483;

struct _struct_1483 {
    DWORD cbBuf;
    LPVOID pBuf;
};

union _union_1482 {
    DWORD adwData[2];
    struct _struct_1483 Data;
};

typedef struct _DRIVER_INFO_1A *PDRIVER_INFO_1A;

typedef PDRIVER_INFO_1A PDRIVER_INFO_1;

typedef struct _JOB_INFO_2A JOB_INFO_2A;

typedef struct _DRIVER_INFO_6A _DRIVER_INFO_6A, *P_DRIVER_INFO_6A;

typedef struct _DRIVER_INFO_6A *PDRIVER_INFO_6A;

typedef PDRIVER_INFO_6A PDRIVER_INFO_6;

struct _DRIVER_INFO_6A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPSTR pszMfgName;
    LPSTR pszOEMUrl;
    LPSTR pszHardwareID;
    LPSTR pszProvider;
};

typedef struct _DRIVER_INFO_4A _DRIVER_INFO_4A, *P_DRIVER_INFO_4A;

typedef struct _DRIVER_INFO_4A *PDRIVER_INFO_4A;

typedef PDRIVER_INFO_4A PDRIVER_INFO_4;

struct _DRIVER_INFO_4A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_5A *PDRIVER_INFO_5A;

typedef PDRIVER_INFO_5A PDRIVER_INFO_5;

typedef struct _DRIVER_INFO_2A _DRIVER_INFO_2A, *P_DRIVER_INFO_2A;

typedef struct _DRIVER_INFO_2A *PDRIVER_INFO_2A;

typedef PDRIVER_INFO_2A PDRIVER_INFO_2;

struct _DRIVER_INFO_2A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
};

typedef struct _JOB_INFO_1W _JOB_INFO_1W, *P_JOB_INFO_1W;

typedef struct _JOB_INFO_1W JOB_INFO_1W;

struct _JOB_INFO_1W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pDatatype;
    LPWSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _DRIVER_INFO_3A *PDRIVER_INFO_3A;

typedef PDRIVER_INFO_3A PDRIVER_INFO_3;

typedef struct _PRINTER_INFO_3 _PRINTER_INFO_3, *P_PRINTER_INFO_3;

typedef struct _PRINTER_INFO_3 PRINTER_INFO_3;

struct _PRINTER_INFO_3 {
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
};

typedef struct _PRINTER_INFO_2A _PRINTER_INFO_2A, *P_PRINTER_INFO_2A;

typedef struct _PRINTER_INFO_2A PRINTER_INFO_2A;

typedef PRINTER_INFO_2A PRINTER_INFO_2;

struct _PRINTER_INFO_2A {
    LPSTR pServerName;
    LPSTR pPrinterName;
    LPSTR pShareName;
    LPSTR pPortName;
    LPSTR pDriverName;
    LPSTR pComment;
    LPSTR pLocation;
    LPDEVMODEA pDevMode;
    LPSTR pSepFile;
    LPSTR pPrintProcessor;
    LPSTR pDatatype;
    LPSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _PRINTER_INFO_1A _PRINTER_INFO_1A, *P_PRINTER_INFO_1A;

typedef struct _PRINTER_INFO_1A PRINTER_INFO_1A;

typedef PRINTER_INFO_1A PRINTER_INFO_1;

struct _PRINTER_INFO_1A {
    DWORD Flags;
    LPSTR pDescription;
    LPSTR pName;
    LPSTR pComment;
};

typedef struct _PRINTPROCESSOR_INFO_1W *LPPRINTPROCESSOR_INFO_1W;

typedef struct _PRINTER_INFO_9A PRINTER_INFO_9A;

typedef PRINTER_INFO_9A PRINTER_INFO_9;

typedef struct _PRINTER_INFO_8A _PRINTER_INFO_8A, *P_PRINTER_INFO_8A;

typedef struct _PRINTER_INFO_8A PRINTER_INFO_8A;

typedef PRINTER_INFO_8A PRINTER_INFO_8;

struct _PRINTER_INFO_8A {
    LPDEVMODEA pDevMode;
};

typedef struct _PRINTER_INFO_7A PRINTER_INFO_7A;

typedef PRINTER_INFO_7A PRINTER_INFO_7;

typedef struct _PRINTER_INFO_6 _PRINTER_INFO_6, *P_PRINTER_INFO_6;

typedef struct _PRINTER_INFO_6 PRINTER_INFO_6;

struct _PRINTER_INFO_6 {
    DWORD dwStatus;
};

typedef union _union_1487 _union_1487, *P_union_1487;

union _union_1487 {
    BOOL bData;
    LONG iData;
    LPWSTR sData;
    FLOAT fData;
    BINARY_CONTAINER biData;
};

typedef struct _PRINTER_INFO_5A PRINTER_INFO_5A;

typedef PRINTER_INFO_5A PRINTER_INFO_5;

typedef struct _PRINTER_INFO_4A _PRINTER_INFO_4A, *P_PRINTER_INFO_4A;

typedef struct _PRINTER_INFO_4A PRINTER_INFO_4A;

typedef PRINTER_INFO_4A PRINTER_INFO_4;

struct _PRINTER_INFO_4A {
    LPSTR pPrinterName;
    LPSTR pServerName;
    DWORD Attributes;
};

typedef struct _PORT_INFO_1A _PORT_INFO_1A, *P_PORT_INFO_1A;

struct _PORT_INFO_1A {
    LPSTR pName;
};

typedef LPADDJOB_INFO_1A LPADDJOB_INFO_1;

typedef struct _PRINTER_NOTIFY_INFO _PRINTER_NOTIFY_INFO, *P_PRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_INFO *PPRINTER_NOTIFY_INFO;

struct _PRINTER_NOTIFY_INFO {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PRINTER_NOTIFY_INFO_DATA aData[1];
};

typedef struct _DOC_INFO_2W _DOC_INFO_2W, *P_DOC_INFO_2W;

struct _DOC_INFO_2W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _PRINTER_INFO_1W _PRINTER_INFO_1W, *P_PRINTER_INFO_1W;

struct _PRINTER_INFO_1W {
    DWORD Flags;
    LPWSTR pDescription;
    LPWSTR pName;
    LPWSTR pComment;
};

typedef struct _PORT_INFO_1W _PORT_INFO_1W, *P_PORT_INFO_1W;

struct _PORT_INFO_1W {
    LPWSTR pName;
};

typedef struct _PORT_INFO_1A *PPORT_INFO_1A;

typedef struct _PORT_INFO_2A _PORT_INFO_2A, *P_PORT_INFO_2A;

struct _PORT_INFO_2A {
    LPSTR pPortName;
    LPSTR pMonitorName;
    LPSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE _PRINTER_NOTIFY_OPTIONS_TYPE, *P_PRINTER_NOTIFY_OPTIONS_TYPE;

typedef WORD *PWORD;

struct _PRINTER_NOTIFY_OPTIONS_TYPE {
    WORD Type;
    WORD Reserved0;
    DWORD Reserved1;
    DWORD Reserved2;
    DWORD Count;
    PWORD pFields;
};

typedef struct _FORM_INFO_1A *PFORM_INFO_1A;

typedef PFORM_INFO_1A PFORM_INFO_1;

typedef struct _PORT_INFO_3W _PORT_INFO_3W, *P_PORT_INFO_3W;

struct _PORT_INFO_3W {
    DWORD dwStatus;
    LPWSTR pszStatus;
    DWORD dwSeverity;
};

typedef struct _MONITOR_INFO_2A _MONITOR_INFO_2A, *P_MONITOR_INFO_2A;

typedef struct _MONITOR_INFO_2A *PMONITOR_INFO_2A;

typedef PMONITOR_INFO_2A PMONITOR_INFO_2;

struct _MONITOR_INFO_2A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _FORM_INFO_1A *LPFORM_INFO_1A;

typedef LPFORM_INFO_1A LPFORM_INFO_1;

typedef struct _MONITOR_INFO_1A _MONITOR_INFO_1A, *P_MONITOR_INFO_1A;

typedef struct _MONITOR_INFO_1A *PMONITOR_INFO_1A;

typedef PMONITOR_INFO_1A PMONITOR_INFO_1;

struct _MONITOR_INFO_1A {
    LPSTR pName;
};

typedef struct _PRINTER_INFO_9W _PRINTER_INFO_9W, *P_PRINTER_INFO_9W;

typedef struct _PRINTER_INFO_9W *LPPRINTER_INFO_9W;

struct _PRINTER_INFO_9W {
    LPDEVMODEW pDevMode;
};

typedef struct _PORT_INFO_3W *PPORT_INFO_3W;

typedef struct _PROVIDOR_INFO_1W _PROVIDOR_INFO_1W, *P_PROVIDOR_INFO_1W;

struct _PROVIDOR_INFO_1W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PRINTER_INFO_5W _PRINTER_INFO_5W, *P_PRINTER_INFO_5W;

struct _PRINTER_INFO_5W {
    LPWSTR pPrinterName;
    LPWSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_8W _PRINTER_INFO_8W, *P_PRINTER_INFO_8W;

typedef struct _PRINTER_INFO_8W *LPPRINTER_INFO_8W;

struct _PRINTER_INFO_8W {
    LPDEVMODEW pDevMode;
};

typedef struct _PRINTER_NOTIFY_INFO_DATA *LPPRINTER_NOTIFY_INFO_DATA;

typedef struct _struct_2039 _struct_2039, *P_struct_2039;

struct _struct_2039 {
    DWORD cbBuf;
    LPVOID pBuf;
};

typedef LPDATATYPES_INFO_1A LPDATATYPES_INFO_1;

typedef struct _PRINTER_INFO_9A *LPPRINTER_INFO_9A;

typedef struct _PORT_INFO_2A *PPORT_INFO_2A;

typedef struct _PORT_INFO_1W *PPORT_INFO_1W;

typedef struct _PORT_INFO_3A *PPORT_INFO_3A;

typedef struct _PROVIDOR_INFO_2W _PROVIDOR_INFO_2W, *P_PROVIDOR_INFO_2W;

struct _PROVIDOR_INFO_2W {
    LPWSTR pOrder;
};

typedef struct _PORT_INFO_2W *PPORT_INFO_2W;

typedef enum enum_1490 {
    BIDI_NULL=0,
    BIDI_INT=1,
    BIDI_FLOAT=2,
    BIDI_BOOL=3,
    BIDI_STRING=4,
    BIDI_TEXT=5,
    BIDI_ENUM=6,
    BIDI_BLOB=7
} enum_1490;

typedef enum enum_1492 {
    BIDI_NULL=0,
    BIDI_INT=1,
    BIDI_FLOAT=2,
    BIDI_BOOL=3,
    BIDI_STRING=4,
    BIDI_TEXT=5,
    BIDI_ENUM=6,
    BIDI_BLOB=7
} enum_1492;

typedef struct _MONITOR_INFO_1A MONITOR_INFO_1A;

typedef MONITOR_INFO_1A MONITOR_INFO_1;

typedef struct _MONITOR_INFO_2A MONITOR_INFO_2A;

typedef MONITOR_INFO_2A MONITOR_INFO_2;

typedef struct _PRINTER_ENUM_VALUESW _PRINTER_ENUM_VALUESW, *P_PRINTER_ENUM_VALUESW;

struct _PRINTER_ENUM_VALUESW {
    LPWSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _PRINTER_NOTIFY_OPTIONS _PRINTER_NOTIFY_OPTIONS, *P_PRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS *PPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE *PPRINTER_NOTIFY_OPTIONS_TYPE;

struct _PRINTER_NOTIFY_OPTIONS {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PPRINTER_NOTIFY_OPTIONS_TYPE pTypes;
};

typedef struct _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1A;

typedef PPRINTPROCESSOR_INFO_1A PPRINTPROCESSOR_INFO_1;

typedef LPPRINTPROCESSOR_INFO_1A LPPRINTPROCESSOR_INFO_1;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE *LPPRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _DOC_INFO_1A _DOC_INFO_1A, *P_DOC_INFO_1A;

struct _DOC_INFO_1A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
};

typedef struct _BIDI_REQUEST_CONTAINER _BIDI_REQUEST_CONTAINER, *P_BIDI_REQUEST_CONTAINER;

typedef struct _BIDI_REQUEST_CONTAINER *LPBIDI_REQUEST_CONTAINER;

struct _BIDI_REQUEST_CONTAINER {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    BIDI_REQUEST_DATA aData[1];
};

typedef struct _PRINTER_INFO_1W *LPPRINTER_INFO_1W;

typedef struct _DRIVER_INFO_4W _DRIVER_INFO_4W, *P_DRIVER_INFO_4W;

struct _DRIVER_INFO_4W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
};

typedef struct _PORT_INFO_1A *LPPORT_INFO_1A;

typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1A;

typedef DATATYPES_INFO_1A DATATYPES_INFO_1;

typedef struct _DOC_INFO_2A _DOC_INFO_2A, *P_DOC_INFO_2A;

typedef struct _DOC_INFO_2A DOC_INFO_2A;

typedef DOC_INFO_2A DOC_INFO_2;

struct _DOC_INFO_2A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _DOC_INFO_3A _DOC_INFO_3A, *P_DOC_INFO_3A;

typedef struct _DOC_INFO_3A DOC_INFO_3A;

typedef DOC_INFO_3A DOC_INFO_3;

struct _DOC_INFO_3A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _PORT_INFO_1W *LPPORT_INFO_1W;

typedef struct _PRINTER_INFO_2A *LPPRINTER_INFO_2A;

typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTSA;

typedef PRINTER_DEFAULTSA PRINTER_DEFAULTS;

typedef struct _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2A;

typedef PPROVIDOR_INFO_2A PPROVIDOR_INFO_2;

typedef struct _DOC_INFO_1A DOC_INFO_1A;

typedef DOC_INFO_1A DOC_INFO_1;

typedef struct _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1A;

typedef PPROVIDOR_INFO_1A PPROVIDOR_INFO_1;

typedef struct _MONITOR_INFO_1A *LPMONITOR_INFO_1A;

typedef LPMONITOR_INFO_1A LPMONITOR_INFO_1;

typedef struct _MONITOR_INFO_2A *LPMONITOR_INFO_2A;

typedef LPMONITOR_INFO_2A LPMONITOR_INFO_2;

typedef struct _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;

typedef struct _PRINTER_INFO_1A *LPPRINTER_INFO_1A;

typedef struct _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;

typedef struct _PORT_INFO_3A *LPPORT_INFO_3A;

typedef struct _PRINTER_INFO_4A *PPRINTER_INFO_4A;

typedef PPRINTER_INFO_4A PPRINTER_INFO_4;

typedef struct _PORT_INFO_3W *LPPORT_INFO_3W;

typedef struct _PRINTER_INFO_5A *PPRINTER_INFO_5A;

typedef PPRINTER_INFO_5A PPRINTER_INFO_5;

typedef struct _PRINTER_INFO_6 *PPRINTER_INFO_6;

typedef struct _PRINTER_INFO_7A *PPRINTER_INFO_7A;

typedef PPRINTER_INFO_7A PPRINTER_INFO_7;

typedef struct _PRINTER_INFO_8A *PPRINTER_INFO_8A;

typedef PPRINTER_INFO_8A PPRINTER_INFO_8;

typedef struct _PRINTER_INFO_9A *PPRINTER_INFO_9A;

typedef PPRINTER_INFO_9A PPRINTER_INFO_9;

typedef struct _PRINTER_INFO_4A *LPPRINTER_INFO_4A;

typedef struct _PRINTER_INFO_1A *PPRINTER_INFO_1A;

typedef PPRINTER_INFO_1A PPRINTER_INFO_1;

typedef struct _PRINTER_INFO_2A *PPRINTER_INFO_2A;

typedef PPRINTER_INFO_2A PPRINTER_INFO_2;

typedef struct _PRINTER_INFO_3 *PPRINTER_INFO_3;

typedef struct _PRINTER_INFO_2W _PRINTER_INFO_2W, *P_PRINTER_INFO_2W;

typedef struct _PRINTER_INFO_2W *LPPRINTER_INFO_2W;

struct _PRINTER_INFO_2W {
    LPWSTR pServerName;
    LPWSTR pPrinterName;
    LPWSTR pShareName;
    LPWSTR pPortName;
    LPWSTR pDriverName;
    LPWSTR pComment;
    LPWSTR pLocation;
    LPDEVMODEW pDevMode;
    LPWSTR pSepFile;
    LPWSTR pPrintProcessor;
    LPWSTR pDatatype;
    LPWSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _MONITOR_INFO_2W _MONITOR_INFO_2W, *P_MONITOR_INFO_2W;

typedef struct _MONITOR_INFO_2W MONITOR_INFO_2W;

struct _MONITOR_INFO_2W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PORT_INFO_2A *LPPORT_INFO_2A;

typedef struct _PORT_INFO_2W *LPPORT_INFO_2W;

typedef enum enum_1490 BIDI_TYPE;

typedef struct _PRINTER_INFO_5W *LPPRINTER_INFO_5W;

typedef struct _MONITOR_INFO_1W MONITOR_INFO_1W;

typedef struct _ADDJOB_INFO_1W *PADDJOB_INFO_1W;

typedef struct _PRINTER_INFO_4W _PRINTER_INFO_4W, *P_PRINTER_INFO_4W;

typedef struct _PRINTER_INFO_4W *LPPRINTER_INFO_4W;

struct _PRINTER_INFO_4W {
    LPWSTR pPrinterName;
    LPWSTR pServerName;
    DWORD Attributes;
};

typedef struct _PRINTER_INFO_5A *LPPRINTER_INFO_5A;

typedef struct _DRIVER_INFO_2W _DRIVER_INFO_2W, *P_DRIVER_INFO_2W;

struct _DRIVER_INFO_2W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
};

typedef struct _PRINTER_INFO_7W _PRINTER_INFO_7W, *P_PRINTER_INFO_7W;

typedef struct _PRINTER_INFO_7W *LPPRINTER_INFO_7W;

struct _PRINTER_INFO_7W {
    LPWSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1A;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE PRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _PRINTPROCESSOR_CAPS_1 PRINTPROCESSOR_CAPS_1;

typedef struct _PRINTER_INFO_8A *LPPRINTER_INFO_8A;

typedef struct _PROVIDOR_INFO_1W *LPPROVIDOR_INFO_1W;

typedef struct _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2A;

typedef struct _FORM_INFO_1W _FORM_INFO_1W, *P_FORM_INFO_1W;

struct _FORM_INFO_1W {
    DWORD Flags;
    LPWSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef PPORT_INFO_2A PPORT_INFO_2;

typedef PPORT_INFO_1A PPORT_INFO_1;

typedef PPORT_INFO_3A PPORT_INFO_3;

typedef struct _PRINTER_INFO_7A *LPPRINTER_INFO_7A;

typedef struct _PRINTER_INFO_9W PRINTER_INFO_9W;

typedef struct _PRINTER_ENUM_VALUESW *PPRINTER_ENUM_VALUESW;

typedef struct _PROVIDOR_INFO_2W *LPPROVIDOR_INFO_2W;

typedef struct _PRINTER_NOTIFY_OPTIONS *LPPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_INFO_9W *PPRINTER_INFO_9W;

typedef struct _PRINTER_INFO_8W PRINTER_INFO_8W;

typedef struct _DRIVER_INFO_5W _DRIVER_INFO_5W, *P_DRIVER_INFO_5W;

struct _DRIVER_INFO_5W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DOC_INFO_1A *LPDOC_INFO_1A;

typedef struct _PRINTER_ENUM_VALUESA _PRINTER_ENUM_VALUESA, *P_PRINTER_ENUM_VALUESA;

typedef struct _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUESA;

struct _PRINTER_ENUM_VALUESA {
    LPSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _DOC_INFO_1W _DOC_INFO_1W, *P_DOC_INFO_1W;

typedef struct _DOC_INFO_1W *LPDOC_INFO_1W;

struct _DOC_INFO_1W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
};

typedef struct _DOC_INFO_1A *PDOC_INFO_1A;

typedef PDOC_INFO_1A PDOC_INFO_1;

typedef struct _DOC_INFO_2A *PDOC_INFO_2A;

typedef PDOC_INFO_2A PDOC_INFO_2;

typedef struct _DOC_INFO_3A *PDOC_INFO_3A;

typedef PDOC_INFO_3A PDOC_INFO_3;

typedef struct _JOB_INFO_3 _JOB_INFO_3, *P_JOB_INFO_3;

typedef struct _JOB_INFO_3 *PJOB_INFO_3;

struct _JOB_INFO_3 {
    DWORD JobId;
    DWORD NextJobId;
    DWORD Reserved;
};

typedef struct _DOC_INFO_2A *LPDOC_INFO_2A;

typedef struct _PRINTER_INFO_7W *PPRINTER_INFO_7W;

typedef struct _JOB_INFO_1A *PJOB_INFO_1A;

typedef PJOB_INFO_1A PJOB_INFO_1;

typedef struct _JOB_INFO_2A *PJOB_INFO_2A;

typedef PJOB_INFO_2A PJOB_INFO_2;

typedef struct _BIDI_RESPONSE_CONTAINER *LPBIDI_RESPONSE_CONTAINER;

typedef struct _DOC_INFO_2W *LPDOC_INFO_2W;

typedef struct _DRIVER_INFO_3W _DRIVER_INFO_3W, *P_DRIVER_INFO_3W;

struct _DRIVER_INFO_3W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
};

typedef struct _DOC_INFO_3A *LPDOC_INFO_3A;

typedef struct _BIDI_REQUEST_CONTAINER BIDI_REQUEST_CONTAINER;

typedef struct _PRINTER_INFO_8W *PPRINTER_INFO_8W;

typedef struct _PRINTER_ENUM_VALUESW PRINTER_ENUM_VALUESW;

typedef struct _DOC_INFO_3W _DOC_INFO_3W, *P_DOC_INFO_3W;

typedef struct _DOC_INFO_3W *LPDOC_INFO_3W;

struct _DOC_INFO_3W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _DRIVER_INFO_1A *LPDRIVER_INFO_1A;

typedef LPPORT_INFO_3A LPPORT_INFO_3;

typedef struct _PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUESA;

typedef LPPORT_INFO_2A LPPORT_INFO_2;

typedef LPPORT_INFO_1A LPPORT_INFO_1;

typedef struct _PRINTER_INFO_5W *PPRINTER_INFO_5W;

typedef struct _JOB_INFO_1A *LPJOB_INFO_1A;

typedef struct _DRIVER_INFO_1W _DRIVER_INFO_1W, *P_DRIVER_INFO_1W;

typedef struct _DRIVER_INFO_1W *LPDRIVER_INFO_1W;

struct _DRIVER_INFO_1W {
    LPWSTR pName;
};

typedef struct _DRIVER_INFO_2A *LPDRIVER_INFO_2A;

typedef struct _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUESA;

typedef LPPRINTER_ENUM_VALUESA LPPRINTER_ENUM_VALUES;

typedef PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUES;

typedef struct _PRINTER_INFO_2W *PPRINTER_INFO_2W;

typedef struct _DRIVER_INFO_6A *LPDRIVER_INFO_6A;

typedef LPDRIVER_INFO_6A LPDRIVER_INFO_6;

typedef struct _JOB_INFO_2W *LPJOB_INFO_2W;

typedef LPDRIVER_INFO_1A LPDRIVER_INFO_1;

typedef struct _DRIVER_INFO_4A *LPDRIVER_INFO_4A;

typedef LPDRIVER_INFO_4A LPDRIVER_INFO_4;

typedef struct _DRIVER_INFO_5A *LPDRIVER_INFO_5A;

typedef LPDRIVER_INFO_5A LPDRIVER_INFO_5;

typedef LPDRIVER_INFO_2A LPDRIVER_INFO_2;

typedef struct _DRIVER_INFO_3A *LPDRIVER_INFO_3A;

typedef LPDRIVER_INFO_3A LPDRIVER_INFO_3;

typedef struct _JOB_INFO_1W *LPJOB_INFO_1W;

typedef struct _JOB_INFO_2A *LPJOB_INFO_2A;

typedef struct _PRINTER_INFO_4W *PPRINTER_INFO_4W;

typedef struct _DRIVER_INFO_4W *LPDRIVER_INFO_4W;

typedef struct _DOC_INFO_3W *PDOC_INFO_3W;

typedef struct _PRINTER_INFO_1W PRINTER_INFO_1W;

typedef struct _DRIVER_INFO_5W *LPDRIVER_INFO_5W;

typedef struct _DOC_INFO_1W *PDOC_INFO_1W;

typedef struct _DOC_INFO_2W *PDOC_INFO_2W;

typedef struct _DRIVER_INFO_6W *LPDRIVER_INFO_6W;

typedef struct _BIDI_DATA *LPBIDI_DATA;

typedef struct _JOB_INFO_3 *LPJOB_INFO_3;

typedef struct _DRIVER_INFO_2W *LPDRIVER_INFO_2W;

typedef LPJOB_INFO_2A LPJOB_INFO_2;

typedef LPJOB_INFO_1A LPJOB_INFO_1;

typedef LPDOC_INFO_1A LPDOC_INFO_1;

typedef LPDOC_INFO_3A LPDOC_INFO_3;

typedef LPDOC_INFO_2A LPDOC_INFO_2;

typedef struct _DRIVER_INFO_3W *LPDRIVER_INFO_3W;

typedef struct _PRINTER_INFO_2W PRINTER_INFO_2W;

typedef struct _MONITOR_INFO_2W *LPMONITOR_INFO_2W;

typedef struct _PRINTER_INFO_5W PRINTER_INFO_5W;

typedef struct _MONITOR_INFO_1W *LPMONITOR_INFO_1W;

typedef struct _PRINTER_INFO_4W PRINTER_INFO_4W;

typedef struct _PRINTER_NOTIFY_INFO PRINTER_NOTIFY_INFO;

typedef struct _BINARY_CONTAINER *PBINARY_CONTAINER;

typedef struct _PRINTER_NOTIFY_INFO *LPPRINTER_NOTIFY_INFO;

typedef struct _PRINTER_INFO_7W PRINTER_INFO_7W;

typedef struct _BIDI_REQUEST_DATA *PBIDI_REQUEST_DATA;

typedef struct _FORM_INFO_1W *LPFORM_INFO_1W;

typedef struct _PROVIDOR_INFO_2W PROVIDOR_INFO_2W;

typedef PADDJOB_INFO_1A PADDJOB_INFO_1;

typedef struct _BIDI_REQUEST_DATA *LPBIDI_REQUEST_DATA;

typedef struct _PROVIDOR_INFO_1W PROVIDOR_INFO_1W;

typedef struct _PORT_INFO_2A PORT_INFO_2A;

typedef PORT_INFO_2A PORT_INFO_2;

typedef struct _PORT_INFO_1A PORT_INFO_1A;

typedef PORT_INFO_1A PORT_INFO_1;

typedef struct _DRIVER_INFO_1W DRIVER_INFO_1W;

typedef struct _DRIVER_INFO_2A DRIVER_INFO_2A;

typedef struct _DRIVER_INFO_3W *PDRIVER_INFO_3W;

typedef struct _DRIVER_INFO_2W DRIVER_INFO_2W;

typedef struct _PROVIDOR_INFO_1W *PPROVIDOR_INFO_1W;

typedef LPPRINTER_DEFAULTSA LPPRINTER_DEFAULTS;

typedef struct _DRIVER_INFO_1A DRIVER_INFO_1A;

typedef struct _DRIVER_INFO_2W *PDRIVER_INFO_2W;

typedef struct _PORT_INFO_3A PORT_INFO_3A;

typedef PORT_INFO_3A PORT_INFO_3;

typedef union _union_2038 _union_2038, *P_union_2038;

union _union_2038 {
    DWORD adwData[2];
    struct _struct_2039 Data;
};

typedef DRIVER_INFO_1A DRIVER_INFO_1;

typedef struct _DRIVER_INFO_1W *PDRIVER_INFO_1W;

typedef struct _DRIVER_INFO_6A DRIVER_INFO_6A;

typedef DRIVER_INFO_6A DRIVER_INFO_6;

typedef struct _DRIVER_INFO_5A DRIVER_INFO_5A;

typedef DRIVER_INFO_5A DRIVER_INFO_5;

typedef struct _DRIVER_INFO_4A DRIVER_INFO_4A;

typedef DRIVER_INFO_4A DRIVER_INFO_4;

typedef struct _DRIVER_INFO_3A DRIVER_INFO_3A;

typedef DRIVER_INFO_3A DRIVER_INFO_3;

typedef DRIVER_INFO_2A DRIVER_INFO_2;

typedef PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1;

typedef struct _FORM_INFO_1W FORM_INFO_1W;

typedef struct _PROVIDOR_INFO_2W *PPROVIDOR_INFO_2W;

typedef struct _PRINTER_NOTIFY_OPTIONS PRINTER_NOTIFY_OPTIONS;

typedef struct _PORT_INFO_3W PORT_INFO_3W;

typedef struct _BIDI_RESPONSE_CONTAINER *PBIDI_RESPONSE_CONTAINER;

typedef struct _PRINTPROCESSOR_CAPS_1 *PPRINTPROCESSOR_CAPS_1;

typedef struct _DRIVER_INFO_6W DRIVER_INFO_6W;

typedef struct _PRINTPROCESSOR_INFO_1W *PPRINTPROCESSOR_INFO_1W;

typedef struct _DRIVER_INFO_5W DRIVER_INFO_5W;

typedef struct _PORT_INFO_2W PORT_INFO_2W;

typedef LPPRINTER_INFO_8A LPPRINTER_INFO_8;

typedef LPPRINTER_INFO_9A LPPRINTER_INFO_9;

typedef struct _PRINTER_NOTIFY_INFO_DATA *PPRINTER_NOTIFY_INFO_DATA;

typedef struct _FORM_INFO_1W *PFORM_INFO_1W;

typedef LPPROVIDOR_INFO_2A LPPROVIDOR_INFO_2;

typedef LPPROVIDOR_INFO_1A LPPROVIDOR_INFO_1;

typedef struct _PRINTER_INFO_6 *LPPRINTER_INFO_6;

typedef struct _DRIVER_INFO_4W DRIVER_INFO_4W;

typedef struct _PORT_INFO_1W PORT_INFO_1W;

typedef LPPRINTER_INFO_7A LPPRINTER_INFO_7;

typedef LPPRINTER_INFO_4A LPPRINTER_INFO_4;

typedef LPPRINTER_INFO_5A LPPRINTER_INFO_5;

typedef LPPRINTER_INFO_2A LPPRINTER_INFO_2;

typedef struct _DATATYPES_INFO_1W DATATYPES_INFO_1W;

typedef struct _PRINTER_INFO_3 *LPPRINTER_INFO_3;

typedef LPPRINTER_INFO_1A LPPRINTER_INFO_1;

typedef struct _DRIVER_INFO_3W DRIVER_INFO_3W;

typedef ADDJOB_INFO_1A ADDJOB_INFO_1;

typedef struct _JOB_INFO_3 JOB_INFO_3;

typedef struct _BIDI_RESPONSE_DATA *PBIDI_RESPONSE_DATA;

typedef JOB_INFO_1A JOB_INFO_1;

typedef JOB_INFO_2A JOB_INFO_2;

typedef struct _PRINTER_INFO_1W *PPRINTER_INFO_1W;

typedef struct _BIDI_RESPONSE_DATA *LPBIDI_RESPONSE_DATA;

typedef struct _DOC_INFO_3W DOC_INFO_3W;

typedef PPRINTER_ENUM_VALUESA PPRINTER_ENUM_VALUES;

typedef struct _BIDI_REQUEST_CONTAINER *PBIDI_REQUEST_CONTAINER;

typedef struct _JOB_INFO_2W *PJOB_INFO_2W;

typedef struct _PRINTER_DEFAULTSW PRINTER_DEFAULTSW;

typedef struct _MONITOR_INFO_1W *PMONITOR_INFO_1W;

typedef struct _JOB_INFO_1W *PJOB_INFO_1W;

typedef struct _DRIVER_INFO_6W *PDRIVER_INFO_6W;

typedef struct _PRINTER_ENUM_VALUESW *LPPRINTER_ENUM_VALUESW;

typedef struct _MONITOR_INFO_2W *PMONITOR_INFO_2W;

typedef struct _DOC_INFO_2W DOC_INFO_2W;

typedef struct _DRIVER_INFO_5W *PDRIVER_INFO_5W;

typedef struct _DOC_INFO_1W DOC_INFO_1W;

typedef struct _DRIVER_INFO_4W *PDRIVER_INFO_4W;

#define JOB_EXECUTE 131088

#define JOB_NOTIFY_FIELD_START_TIME 17

#define PORT_STATUS_NO_TONER 6

#define PORT_STATUS_OFFLINE 1

#define PORT_STATUS_PAPER_JAM 2

#define PRINTER_ATTRIBUTE_DEFAULT 4

#define MAX_PRIORITY 99

#define PRINTER_ATTRIBUTE_DIRECT 2

#define JOB_NOTIFY_FIELD_STATUS 10

#define PRINTER_ENUM_NAME 8

#define JOB_STATUS_DELETING 4

#define JOB_WRITE 131088

#define PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS 256

#define PORT_TYPE_READ 2

#define PRINTER_ENUM_FAVORITE 4

#define PRINTER_ENUM_CONTAINER 32768

#define PRINTER_ACCESS_ADMINISTER 4

#define JOB_STATUS_OFFLINE 32

#define SERVER_ACCESS_ENUMERATE 2

#define PRINTER_NOTIFY_FIELD_SEPFILE 8

#define SERVER_WRITE 131075

#define JOB_NOTIFY_FIELD_TIME 19

#define ERROR_BIDI_STATUS_OK 0

#define PRINTER_NOTIFY_FIELD_PRIORITY 14

#define PRINTER_WRITE 131080

#define PRINTER_ENUM_ICONMASK 16711680

#define PRINTER_NOTIFY_FIELD_PARAMETERS 10

#define PRINTER_STATUS_USER_INTERVENTION 1048576

#define PRINTER_CONTROL_RESUME 2

#define PRINTER_ERROR_JAM 2

#define PRINTER_STATUS_NO_TONER 262144

#define PRINTER_NOTIFY_FIELD_TOTAL_PAGES 22

#define PRINTER_NOTIFY_FIELD_CJOBS 20

#define PRINTER_CHANGE_ALL 2004353023

#define PRINTER_CHANGE_DELETE_PRINTER_DRIVER 1073741824

#define PRINTER_CONTROL_SET_STATUS 4

#define PRINTER_NOTIFY_FIELD_STATUS_STRING 19

#define JOB_NOTIFY_FIELD_TOTAL_PAGES 20

#define PRINTER_ATTRIBUTE_WORK_OFFLINE 1024

#define JOB_STATUS_ERROR 2

#define PORT_STATUS_TYPE_INFO 3

#define PRINTER_STATUS_INITIALIZING 32768

#define PRINTER_NOTIFY_FIELD_DATATYPE 11

#define JOB_NOTIFY_FIELD_POSITION 15

#define PRINTER_CHANGE_FAILED_CONNECTION_PRINTER 8

#define PORT_STATUS_WARMING_UP 11

#define DSPRINT_UPDATE 2

#define ERROR_BIDI_NOT_SUPPORTED 50

#define PORT_TYPE_REDIRECTED 4

#define PRINTER_ATTRIBUTE_HIDDEN 32

#define DPD_DELETE_SPECIFIC_VERSION 2

#define PRINTER_NOTIFY_FIELD_ATTRIBUTES 13

#define PRINTER_CHANGE_SET_PRINTER 2

#define DRIVER_USERMODE 2

#define PRINTER_STATUS_NOT_AVAILABLE 4096

#define PRINTER_NOTIFY_FIELD_DEVMODE 7

#define JOB_NOTIFY_FIELD_MACHINE_NAME 1

#define DI_READ_SPOOL_JOB 3

#define PRINTER_STATUS_WARMING_UP 65536

#define ERROR_BIDI_SERVER_OFFLINE 13003

#define PRINTER_CHANGE_ADD_PRINTER_DRIVER 268435456

#define JOB_NOTIFY_FIELD_PRINTER_NAME 0

#define PRINTER_CHANGE_ADD_JOB 256

#define PRINTER_CHANGE_ADD_PRINTER 1

#define PRINTER_ENUM_DEFAULT 1

#define PORT_STATUS_TYPE_ERROR 1

#define PRINTER_ATTRIBUTE_QUEUED 1

#define JOB_STATUS_RESTART 2048

#define PORT_STATUS_PAPER_PROBLEM 5

#define JOB_NOTIFY_FIELD_BYTES_PRINTED 23

#define PRINTER_NOTIFY_FIELD_SERVER_NAME 0

#define SERVER_READ 131074

#define PRINTER_READ 131080

#define PRINTER_NOTIFY_FIELD_BYTES_PRINTED 25

#define JOB_NOTIFY_FIELD_PRIORITY 14

#define PRINTER_NOTIFY_FIELD_PRINTER_NAME 1

#define JOB_NOTIFY_FIELD_DATATYPE 5

#define PORT_STATUS_OUT_OF_MEMORY 9

#define PRINTER_CHANGE_TIMEOUT 2147483648

#define SPOOL_FILE_TEMPORARY 2

#define SERVER_ALL_ACCESS 983043

#define PRINTER_CHANGE_SET_FORM 131072

#define PRINTER_CHANGE_DELETE_FORM 262144

#define PRINTER_ENUM_HIDE 16777216

#define DSPRINT_PENDING 2147483648

#define APD_STRICT_DOWNGRADE 2

#define PRINTER_NOTIFY_TYPE 0

#define DPD_DELETE_UNUSED_FILES 1

#define PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR 9

#define PRINTER_NOTIFY_FIELD_SHARE_NAME 2

#define REVERSE_PRINT 1

#define PRINTER_NOTIFY_INFO_DISCARDED 1

#define JOB_ALL_ACCESS 983056

#define PRINTER_STATUS_PRINTING 1024

#define PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY 15

#define DPD_DELETE_ALL_FILES 4

#define PRINTER_ENUM_EXPAND 16384

#define JOB_CONTROL_DELETE 5

#define APD_COPY_NEW_FILES 8

#define JOB_CONTROL_RESTART 4

#define PRINTER_STATUS_PROCESSING 16384

#define JOB_NOTIFY_FIELD_DRIVER_NAME 8

#define JOB_NOTIFY_FIELD_UNTIL_TIME 18

#define PORT_STATUS_TYPE_WARNING 2

#define FORM_BUILTIN 1

#define PRINTER_ERROR_SEVERE 536870912

#define SERVER_ACCESS_ADMINISTER 1

#define JOB_READ 131088

#define JOB_NOTIFY_FIELD_PORT_NAME 2

#define SPOOL_FILE_PERSISTENT 1

#define PRINTER_STATUS_PENDING_DELETION 4

#define PORT_STATUS_OUTPUT_BIN_FULL 4

#define ERROR_BIDI_DEVICE_OFFLINE 13004

#define BIDI_ACCESS_ADMINISTRATOR 1

#define PRINTER_STATUS_SERVER_UNKNOWN 8388608

#define JOB_NOTIFY_FIELD_DOCUMENT 13

#define PRINTER_ATTRIBUTE_FAX 16384

#define JOB_NOTIFY_FIELD_TOTAL_BYTES 22

#define PRINTER_CHANGE_PRINT_PROCESSOR 117440512

#define BIDI_ACCESS_USER 2

#define NO_PRIORITY 0

#define JOB_NOTIFY_FIELD_USER_NAME 3

#define PRINTER_NOTIFY_FIELD_UNTIL_TIME 17

#define PRINTER_CHANGE_DELETE_PRINT_PROCESSOR 67108864

#define PRINTER_CONTROL_PAUSE 1

#define PRINTER_CHANGE_ADD_PRINT_PROCESSOR 16777216

#define JOB_STATUS_COMPLETE 4096

#define PRINTER_CHANGE_DELETE_PORT 4194304

#define PRINTER_ERROR_OUTOFPAPER 1

#define PRINTER_CHANGE_WRITE_JOB 2048

#define PRINTER_STATUS_OUT_OF_MEMORY 2097152

#define JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define PRINTER_ATTRIBUTE_NETWORK 16

#define PRINTER_STATUS_PAGE_PUNT 524288

#define APD_STRICT_UPGRADE 1

#define FORM_PRINTER 2

#define PRINTER_NOTIFY_FIELD_AVERAGE_PPM 21

#define PRINTER_ALL_ACCESS 983052

#define JOB_STATUS_DELETED 256

#define PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define PRINTER_STATUS_POWER_SAVE 16777216

#define JOB_POSITION_UNSPECIFIED 0

#define PRINTER_ERROR_OUTOFTONER 4

#define PRINTER_CHANGE_ADD_PORT 1048576

#define PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST 512

#define JOB_CONTROL_CANCEL 3

#define PRINTER_ENUM_ICON7 4194304

#define PRINTER_ENUM_ICON6 2097152

#define JOB_NOTIFY_FIELD_PAGES_PRINTED 21

#define PRINTER_ENUM_ICON8 8388608

#define PRINTER_ENUM_ICON3 262144

#define PRINTER_STATUS_MANUAL_FEED 32

#define PRINTER_ENUM_ICON2 131072

#define PRINTER_ENUM_ICON5 1048576

#define PRINTER_ENUM_ICON4 524288

#define PRINTER_STATUS_PAUSED 1

#define PORT_STATUS_TONER_LOW 10

#define PRINTER_ENUM_ICON1 65536

#define DI_MEMORYMAP_WRITE 1

#define ERROR_BIDI_SCHEMA_NOT_SUPPORTED 13005

#define PORT_STATUS_DOOR_OPEN 7

#define PRINTER_NOTIFY_FIELD_START_TIME 16

#define PRINTER_ENUM_LOCAL 2

#define PRINTER_STATUS_OUTPUT_BIN_FULL 2048

#define PRINTER_CHANGE_SET_JOB 512

#define PRINTER_CHANGE_ADD_FORM 65536

#define APD_COPY_ALL_FILES 4

#define PRINTER_STATUS_WAITING 8192

#define PRINTER_STATUS_PAPER_JAM 8

#define JOB_ACCESS_ADMINISTER 16

#define FORM_USER 0

#define PORT_STATUS_POWER_SAVE 12

#define PRINTER_ERROR_INFORMATION 2147483648

#define DI_CHANNEL 1

#define JOB_NOTIFY_TYPE 1

#define PRINTER_CHANGE_SET_PRINTER_DRIVER 536870912

#define PRINTER_EXECUTE 131080

#define PRINTER_STATUS_IO_ACTIVE 256

#define PRINTER_CHANGE_JOB 65280

#define PRINTER_ENUM_NETWORK 64

#define PRINTER_ENUM_CONNECTIONS 4

#define PRINTER_ENUM_REMOTE 16

#define PRINTER_ATTRIBUTE_PUBLISHED 8192

#define JOB_NOTIFY_FIELD_PARAMETERS 7

#define PRINTER_ENUM_SHARED 32

#define PRINTER_CHANGE_PRINTER_DRIVER 1879048192

#define PRINTER_STATUS_ERROR 2

#define JOB_STATUS_USER_INTERVENTION 1024

#define PRINTER_CHANGE_FORM 458752

#define PRINTER_STATUS_PAPER_PROBLEM 64

#define PRINTER_CHANGE_CONFIGURE_PORT 2097152

#define JOB_STATUS_PAPEROUT 64

#define JOB_STATUS_PAUSED 1

#define PRINTER_CHANGE_DELETE_PRINTER 4

#define JOB_STATUS_PRINTING 16

#define PRINTER_ATTRIBUTE_SHARED 8

#define JOB_STATUS_SPOOLING 8

#define JOB_NOTIFY_FIELD_NOTIFY_NAME 4

#define PORT_TYPE_WRITE 1

#define DRIVER_KERNELMODE 1

#define JOB_NOTIFY_FIELD_STATUS_STRING 11

#define PRINTER_NOTIFY_FIELD_PORT_NAME 3

#define NORMAL_PRINT 0

#define PRINTER_ATTRIBUTE_RAW_ONLY 4096

#define JOB_STATUS_PRINTED 128

#define DEF_PRIORITY 1

#define PORT_STATUS_PAPER_OUT 3

#define ERROR_BIDI_SCHEMA_READ_ONLY 13002

#define PRINTER_NOTIFY_OPTIONS_REFRESH 1

#define PRINTER_NOTIFY_FIELD_TOTAL_BYTES 24

#define JOB_STATUS_BLOCKED_DEVQ 512

#define JOB_CONTROL_LAST_PAGE_EJECTED 7

#define ERROR_BIDI_ERROR_BASE 13000

#define PRINTER_ACCESS_USE 8

#define PRINTER_STATUS_OFFLINE 128

#define DSPRINT_REPUBLISH 8

#define ERROR_BIDI_STATUS_WARNING 13001

#define PRINTER_NOTIFY_FIELD_STATUS 18

#define PRINTER_NOTIFY_FIELD_COMMENT 5

#define PRINTER_NOTIFY_FIELD_LOCATION 6

#define PRINTER_ATTRIBUTE_ENABLE_DEVQ 128

#define PRINTER_CONTROL_PURGE 3

#define PORT_STATUS_USER_INTERVENTION 8

#define PRINTER_STATUS_PAPER_OUT 16

#define JOB_NOTIFY_FIELD_SUBMITTED 16

#define PRINTER_NOTIFY_FIELD_PAGES_PRINTED 23

#define PRINTER_NOTIFY_FIELD_OBJECT_GUID 26

#define PRINTER_ATTRIBUTE_ENABLE_BIDI 2048

#define JOB_NOTIFY_FIELD_DEVMODE 9

#define PRINTER_CHANGE_PORT 7340032

#define APD_COPY_FROM_DIRECTORY 16

#define JOB_CONTROL_RESUME 2

#define PRINTER_NOTIFY_FIELD_DRIVER_NAME 4

#define MIN_PRIORITY 1

#define PRINTER_STATUS_TONER_LOW 131072

#define PRINTER_ERROR_WARNING 1073741824

#define DSPRINT_PUBLISH 1

#define PRINTER_ATTRIBUTE_LOCAL 64

#define PRINTER_STATUS_DOOR_OPEN 4194304

#define PRINTER_CHANGE_DELETE_JOB 1024

#define JOB_CONTROL_SENT_TO_PRINTER 6

#define PRINTER_STATUS_BUSY 512

#define PORT_TYPE_NET_ATTACHED 8

#define DSPRINT_UNPUBLISH 4

#define JOB_CONTROL_PAUSE 1

#define PRINTER_CHANGE_PRINTER 255

#define SERVER_EXECUTE 131074

#define JOB_NOTIFY_FIELD_PRINT_PROCESSOR 6

typedef struct tagMULTI_QI tagMULTI_QI, *PtagMULTI_QI;

struct tagMULTI_QI {
    IID *pIID;
    struct IUnknown *pItf;
    HRESULT hr;
};

typedef struct IClientSecurityVtbl IClientSecurityVtbl, *PIClientSecurityVtbl;

typedef struct IClientSecurity IClientSecurity, *PIClientSecurity;

typedef WCHAR OLECHAR;

struct IClientSecurityVtbl {
    HRESULT (*QueryInterface)(struct IClientSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IClientSecurity *);
    ULONG (*Release)(struct IClientSecurity *);
    HRESULT (*QueryBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD *, DWORD *, OLECHAR **, DWORD *, DWORD *, void **, DWORD *);
    HRESULT (*SetBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD, DWORD, OLECHAR *, DWORD, DWORD, void *, DWORD);
    HRESULT (*CopyProxy)(struct IClientSecurity *, struct IUnknown *, struct IUnknown **);
};

struct IClientSecurity {
    struct IClientSecurityVtbl *lpVtbl;
};

typedef struct _COSERVERINFO _COSERVERINFO, *P_COSERVERINFO;

typedef struct _COSERVERINFO COSERVERINFO;

typedef struct _COAUTHINFO _COAUTHINFO, *P_COAUTHINFO;

typedef struct _COAUTHINFO COAUTHINFO;

typedef struct _COAUTHIDENTITY _COAUTHIDENTITY, *P_COAUTHIDENTITY;

typedef struct _COAUTHIDENTITY COAUTHIDENTITY;

typedef ushort USHORT;

struct _COAUTHINFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    LPWSTR pwszServerPrincName;
    DWORD dwAuthnLevel;
    DWORD dwImpersonationLevel;
    COAUTHIDENTITY *pAuthIdentityData;
    DWORD dwCapabilities;
};

struct _COAUTHIDENTITY {
    USHORT *User;
    ULONG UserLength;
    USHORT *Domain;
    ULONG DomainLength;
    USHORT *Password;
    ULONG PasswordLength;
    ULONG Flags;
};

struct _COSERVERINFO {
    DWORD dwReserved1;
    LPWSTR pwszName;
    COAUTHINFO *pAuthInfo;
    DWORD dwReserved2;
};

typedef struct tagFORMATETC tagFORMATETC, *PtagFORMATETC;

typedef struct tagFORMATETC FORMATETC;

typedef WORD CLIPFORMAT;

typedef struct tagDVTARGETDEVICE tagDVTARGETDEVICE, *PtagDVTARGETDEVICE;

typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;

struct tagFORMATETC {
    CLIPFORMAT cfFormat;
    DVTARGETDEVICE *ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

struct tagDVTARGETDEVICE {
    DWORD tdSize;
    WORD tdDriverNameOffset;
    WORD tdDeviceNameOffset;
    WORD tdPortNameOffset;
    WORD tdExtDevmodeOffset;
    BYTE tdData[1];
};

typedef struct IStdMarshalInfoVtbl IStdMarshalInfoVtbl, *PIStdMarshalInfoVtbl;

typedef struct IStdMarshalInfo IStdMarshalInfo, *PIStdMarshalInfo;

typedef GUID CLSID;

struct IStdMarshalInfo {
    struct IStdMarshalInfoVtbl *lpVtbl;
};

struct IStdMarshalInfoVtbl {
    HRESULT (*QueryInterface)(struct IStdMarshalInfo *, IID *, void **);
    ULONG (*AddRef)(struct IStdMarshalInfo *);
    ULONG (*Release)(struct IStdMarshalInfo *);
    HRESULT (*GetClassForHandler)(struct IStdMarshalInfo *, DWORD, void *, CLSID *);
};

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES {
    EOAC_NONE=0,
    EOAC_MUTUAL_AUTH=1,
    EOAC_SECURE_REFS=2,
    EOAC_ACCESS_CONTROL=4,
    EOAC_APPID=8,
    EOAC_DYNAMIC=16,
    EOAC_STATIC_CLOAKING=32,
    EOAC_DYNAMIC_CLOAKING=64,
    EOAC_ANY_AUTHORITY=128,
    EOAC_MAKE_FULLSIC=256,
    EOAC_REQUIRE_FULLSIC=512,
    EOAC_AUTO_IMPERSONATE=1024,
    EOAC_DEFAULT=2048,
    EOAC_DISABLE_AAA=4096,
    EOAC_NO_CUSTOM_MARSHAL=8192
} tagEOLE_AUTHENTICATION_CAPABILITIES;

typedef struct IMessageFilter IMessageFilter, *PIMessageFilter;

typedef struct IMessageFilter *LPMESSAGEFILTER;

typedef struct IMessageFilterVtbl IMessageFilterVtbl, *PIMessageFilterVtbl;

typedef struct tagINTERFACEINFO tagINTERFACEINFO, *PtagINTERFACEINFO;

typedef struct tagINTERFACEINFO *LPINTERFACEINFO;

struct tagINTERFACEINFO {
    struct IUnknown *pUnk;
    IID iid;
    WORD wMethod;
};

struct IMessageFilter {
    struct IMessageFilterVtbl *lpVtbl;
};

struct IMessageFilterVtbl {
    HRESULT (*QueryInterface)(struct IMessageFilter *, IID *, void **);
    ULONG (*AddRef)(struct IMessageFilter *);
    ULONG (*Release)(struct IMessageFilter *);
    DWORD (*HandleInComingCall)(struct IMessageFilter *, DWORD, HTASK, DWORD, LPINTERFACEINFO);
    DWORD (*RetryRejectedCall)(struct IMessageFilter *, HTASK, DWORD, DWORD);
    DWORD (*MessagePending)(struct IMessageFilter *, HTASK, DWORD, DWORD);
};

typedef struct tagSTATSTG tagSTATSTG, *PtagSTATSTG;

typedef struct tagSTATSTG STATSTG;

typedef OLECHAR *LPOLESTR;

typedef union _ULARGE_INTEGER _ULARGE_INTEGER, *P_ULARGE_INTEGER;

typedef union _ULARGE_INTEGER ULARGE_INTEGER;

typedef struct _struct_10.conflict _struct_10.conflict, *P_struct_10.conflict;

typedef struct _struct_11 _struct_11, *P_struct_11;

struct _struct_11 {
    DWORD LowPart;
    DWORD HighPart;
};

struct _struct_10.conflict {
    DWORD LowPart;
    DWORD HighPart;
};

union _ULARGE_INTEGER {
    struct _struct_10.conflict field0;
    struct _struct_11 u;
    ULONGLONG QuadPart;
};

struct tagSTATSTG {
    LPOLESTR pwcsName;
    DWORD type;
    ULARGE_INTEGER cbSize;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD grfMode;
    DWORD grfLocksSupported;
    CLSID clsid;
    DWORD grfStateBits;
    DWORD reserved;
};

typedef struct IAddrExclusionControl IAddrExclusionControl, *PIAddrExclusionControl;

typedef struct IAddrExclusionControlVtbl IAddrExclusionControlVtbl, *PIAddrExclusionControlVtbl;

struct IAddrExclusionControlVtbl {
    HRESULT (*QueryInterface)(struct IAddrExclusionControl *, IID *, void **);
    ULONG (*AddRef)(struct IAddrExclusionControl *);
    ULONG (*Release)(struct IAddrExclusionControl *);
    HRESULT (*GetCurrentAddrExclusionList)(struct IAddrExclusionControl *, IID *, void **);
    HRESULT (*UpdateAddrExclusionList)(struct IAddrExclusionControl *, struct IUnknown *);
};

struct IAddrExclusionControl {
    struct IAddrExclusionControlVtbl *lpVtbl;
};

typedef struct IRpcChannelBufferVtbl IRpcChannelBufferVtbl, *PIRpcChannelBufferVtbl;

typedef struct IRpcChannelBuffer IRpcChannelBuffer, *PIRpcChannelBuffer;

typedef struct tagRPCOLEMESSAGE tagRPCOLEMESSAGE, *PtagRPCOLEMESSAGE;

typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;

typedef ulong RPCOLEDATAREP;

struct IRpcChannelBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer *);
    ULONG (*Release)(struct IRpcChannelBuffer *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer *);
};

struct tagRPCOLEMESSAGE {
    void *reserved1;
    RPCOLEDATAREP dataRepresentation;
    void *Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    void *reserved2[5];
    ULONG rpcFlags;
};

struct IRpcChannelBuffer {
    struct IRpcChannelBufferVtbl *lpVtbl;
};

typedef enum tagMKSYS {
    MKSYS_NONE=0,
    MKSYS_GENERICCOMPOSITE=1,
    MKSYS_FILEMONIKER=2,
    MKSYS_ANTIMONIKER=3,
    MKSYS_ITEMMONIKER=4,
    MKSYS_POINTERMONIKER=5,
    MKSYS_CLASSMONIKER=7,
    MKSYS_OBJREFMONIKER=8,
    MKSYS_SESSIONMONIKER=9
} tagMKSYS;

typedef enum tagMKSYS MKSYS;

typedef struct IClassActivatorVtbl IClassActivatorVtbl, *PIClassActivatorVtbl;

typedef struct IClassActivator IClassActivator, *PIClassActivator;

typedef DWORD LCID;

struct IClassActivator {
    struct IClassActivatorVtbl *lpVtbl;
};

struct IClassActivatorVtbl {
    HRESULT (*QueryInterface)(struct IClassActivator *, IID *, void **);
    ULONG (*AddRef)(struct IClassActivator *);
    ULONG (*Release)(struct IClassActivator *);
    HRESULT (*GetClassObject)(struct IClassActivator *, IID *, DWORD, LCID, IID *, void **);
};

typedef struct _userFLAG_STGMEDIUM _userFLAG_STGMEDIUM, *P_userFLAG_STGMEDIUM;

typedef struct _userFLAG_STGMEDIUM userFLAG_STGMEDIUM;

typedef userFLAG_STGMEDIUM *wireFLAG_STGMEDIUM;

typedef struct _userSTGMEDIUM _userSTGMEDIUM, *P_userSTGMEDIUM;

typedef struct _userSTGMEDIUM userSTGMEDIUM;

typedef struct _STGMEDIUM_UNION _STGMEDIUM_UNION, *P_STGMEDIUM_UNION;

typedef union __MIDL_IAdviseSink_0003 __MIDL_IAdviseSink_0003, *P__MIDL_IAdviseSink_0003;

typedef struct _userHMETAFILEPICT _userHMETAFILEPICT, *P_userHMETAFILEPICT;

typedef struct _userHMETAFILEPICT userHMETAFILEPICT;

typedef userHMETAFILEPICT *wireHMETAFILEPICT;

typedef struct _userHENHMETAFILE _userHENHMETAFILE, *P_userHENHMETAFILE;

typedef struct _userHENHMETAFILE userHENHMETAFILE;

typedef userHENHMETAFILE *wireHENHMETAFILE;

typedef struct _GDI_OBJECT _GDI_OBJECT, *P_GDI_OBJECT;

typedef struct _GDI_OBJECT GDI_OBJECT;

typedef struct _userHGLOBAL _userHGLOBAL, *P_userHGLOBAL;

typedef struct _userHGLOBAL userHGLOBAL;

typedef userHGLOBAL *wireHGLOBAL;

typedef struct _BYTE_BLOB _BYTE_BLOB, *P_BYTE_BLOB;

typedef struct _BYTE_BLOB BYTE_BLOB;

typedef union __MIDL_IWinTypes_0005 __MIDL_IWinTypes_0005, *P__MIDL_IWinTypes_0005;

typedef union __MIDL_IWinTypes_0006 __MIDL_IWinTypes_0006, *P__MIDL_IWinTypes_0006;

typedef union __MIDL_IAdviseSink_0002 __MIDL_IAdviseSink_0002, *P__MIDL_IAdviseSink_0002;

typedef union __MIDL_IWinTypes_0003 __MIDL_IWinTypes_0003, *P__MIDL_IWinTypes_0003;


/* WARNING! conflicting data type names: /deps/rpcndr.h/byte - /byte */

typedef struct _remoteMETAFILEPICT _remoteMETAFILEPICT, *P_remoteMETAFILEPICT;

typedef struct _remoteMETAFILEPICT remoteMETAFILEPICT;

typedef struct _userHBITMAP _userHBITMAP, *P_userHBITMAP;

typedef struct _userHBITMAP userHBITMAP;

typedef userHBITMAP *wireHBITMAP;

typedef struct _userHPALETTE _userHPALETTE, *P_userHPALETTE;

typedef struct _userHPALETTE userHPALETTE;

typedef userHPALETTE *wireHPALETTE;

typedef struct _FLAGGED_BYTE_BLOB _FLAGGED_BYTE_BLOB, *P_FLAGGED_BYTE_BLOB;

typedef struct _FLAGGED_BYTE_BLOB FLAGGED_BYTE_BLOB;

typedef struct _userHMETAFILE _userHMETAFILE, *P_userHMETAFILE;

typedef struct _userHMETAFILE userHMETAFILE;

typedef union __MIDL_IWinTypes_0007 __MIDL_IWinTypes_0007, *P__MIDL_IWinTypes_0007;

typedef union __MIDL_IWinTypes_0008 __MIDL_IWinTypes_0008, *P__MIDL_IWinTypes_0008;

typedef union __MIDL_IWinTypes_0004 __MIDL_IWinTypes_0004, *P__MIDL_IWinTypes_0004;

typedef struct _userBITMAP _userBITMAP, *P_userBITMAP;

typedef struct _userBITMAP userBITMAP;

typedef struct tagLOGPALETTE tagLOGPALETTE, *PtagLOGPALETTE;

typedef struct tagLOGPALETTE LOGPALETTE;

typedef struct tagPALETTEENTRY tagPALETTEENTRY, *PtagPALETTEENTRY;

typedef struct tagPALETTEENTRY PALETTEENTRY;

union __MIDL_IAdviseSink_0003 {
    wireHMETAFILEPICT hMetaFilePict;
    wireHENHMETAFILE hHEnhMetaFile;
    GDI_OBJECT *hGdiHandle;
    wireHGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    BYTE_BLOB *pstm;
    BYTE_BLOB *pstg;
};

struct _STGMEDIUM_UNION {
    DWORD tymed;
    union __MIDL_IAdviseSink_0003 u;
};

union __MIDL_IWinTypes_0004 {
    long hInproc;
    BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0004 u;
};

struct _BYTE_BLOB {
    ulong clSize;
    byte abData[1];
};

union __MIDL_IWinTypes_0005 {
    long hInproc;
    remoteMETAFILEPICT *hRemote;
    longlong hInproc64;
};

struct _userHMETAFILEPICT {
    long fContext;
    union __MIDL_IWinTypes_0005 u;
};

union __MIDL_IAdviseSink_0002 {
    wireHBITMAP hBitmap;
    wireHPALETTE hPalette;
    wireHGLOBAL hGeneric;
};

struct _userBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    ULONG cbSize;
    byte pBuffer[1];
};

union __MIDL_IWinTypes_0006 {
    long hInproc;
    BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHENHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0006 u;
};

struct tagPALETTEENTRY {
    BYTE peRed;
    BYTE peGreen;
    BYTE peBlue;
    BYTE peFlags;
};

union __MIDL_IWinTypes_0007 {
    long hInproc;
    userBITMAP *hRemote;
    longlong hInproc64;
};

struct _userHBITMAP {
    long fContext;
    union __MIDL_IWinTypes_0007 u;
};

struct tagLOGPALETTE {
    WORD palVersion;
    WORD palNumEntries;
    PALETTEENTRY palPalEntry[1];
};

struct _GDI_OBJECT {
    DWORD ObjectType;
    union __MIDL_IAdviseSink_0002 u;
};

union __MIDL_IWinTypes_0003 {
    long hInproc;
    FLAGGED_BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHGLOBAL {
    long fContext;
    union __MIDL_IWinTypes_0003 u;
};

struct _FLAGGED_BYTE_BLOB {
    ulong fFlags;
    ulong clSize;
    byte abData[1];
};

struct _userSTGMEDIUM {
    struct _STGMEDIUM_UNION field0_0x0;
    struct IUnknown *pUnkForRelease;
};

struct _userFLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    userSTGMEDIUM Stgmed;
};

union __MIDL_IWinTypes_0008 {
    long hInproc;
    LOGPALETTE *hRemote;
    longlong hInproc64;
};

struct _remoteMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    userHMETAFILE *hMF;
};

struct _userHPALETTE {
    long fContext;
    union __MIDL_IWinTypes_0008 u;
};

typedef struct ILockBytesVtbl ILockBytesVtbl, *PILockBytesVtbl;

typedef struct ILockBytes ILockBytes, *PILockBytes;

struct ILockBytes {
    struct ILockBytesVtbl *lpVtbl;
};

struct ILockBytesVtbl {
    HRESULT (*QueryInterface)(struct ILockBytes *, IID *, void **);
    ULONG (*AddRef)(struct ILockBytes *);
    ULONG (*Release)(struct ILockBytes *);
    HRESULT (*ReadAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*WriteAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*Flush)(struct ILockBytes *);
    HRESULT (*SetSize)(struct ILockBytes *, ULARGE_INTEGER);
    HRESULT (*LockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*UnlockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*Stat)(struct ILockBytes *, STATSTG *, DWORD);
};

typedef struct IRpcChannelBuffer2Vtbl IRpcChannelBuffer2Vtbl, *PIRpcChannelBuffer2Vtbl;

typedef struct IRpcChannelBuffer2 IRpcChannelBuffer2, *PIRpcChannelBuffer2;

struct IRpcChannelBuffer2 {
    struct IRpcChannelBuffer2Vtbl *lpVtbl;
};

struct IRpcChannelBuffer2Vtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer2 *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer2 *);
    ULONG (*Release)(struct IRpcChannelBuffer2 *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer2 *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer2 *);
    HRESULT (*GetProtocolVersion)(struct IRpcChannelBuffer2 *, DWORD *);
};

typedef struct IAsyncRpcChannelBufferVtbl IAsyncRpcChannelBufferVtbl, *PIAsyncRpcChannelBufferVtbl;

typedef struct IAsyncRpcChannelBuffer IAsyncRpcChannelBuffer, *PIAsyncRpcChannelBuffer;

typedef struct ISynchronize ISynchronize, *PISynchronize;

typedef struct ISynchronizeVtbl ISynchronizeVtbl, *PISynchronizeVtbl;

struct ISynchronizeVtbl {
    HRESULT (*QueryInterface)(struct ISynchronize *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronize *);
    ULONG (*Release)(struct ISynchronize *);
    HRESULT (*Wait)(struct ISynchronize *, DWORD, DWORD);
    HRESULT (*Signal)(struct ISynchronize *);
    HRESULT (*Reset)(struct ISynchronize *);
};

struct ISynchronize {
    struct ISynchronizeVtbl *lpVtbl;
};

struct IAsyncRpcChannelBuffer {
    struct IAsyncRpcChannelBufferVtbl *lpVtbl;
};

struct IAsyncRpcChannelBufferVtbl {
    HRESULT (*QueryInterface)(struct IAsyncRpcChannelBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IAsyncRpcChannelBuffer *);
    ULONG (*Release)(struct IAsyncRpcChannelBuffer *);
    HRESULT (*GetBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IAsyncRpcChannelBuffer *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IAsyncRpcChannelBuffer *);
    HRESULT (*GetProtocolVersion)(struct IAsyncRpcChannelBuffer *, DWORD *);
    HRESULT (*Send)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, struct ISynchronize *, ULONG *);
    HRESULT (*Receive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*GetDestCtxEx)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, DWORD *, void **);
};

typedef enum tagDATADIR {
    DATADIR_GET=1,
    DATADIR_SET=2
} tagDATADIR;

typedef enum tagDATADIR DATADIR;

typedef struct IROTDataVtbl IROTDataVtbl, *PIROTDataVtbl;

typedef struct IROTData IROTData, *PIROTData;

struct IROTDataVtbl {
    HRESULT (*QueryInterface)(struct IROTData *, IID *, void **);
    ULONG (*AddRef)(struct IROTData *);
    ULONG (*Release)(struct IROTData *);
    HRESULT (*GetComparisonData)(struct IROTData *, byte *, ULONG, ULONG *);
};

struct IROTData {
    struct IROTDataVtbl *lpVtbl;
};

typedef struct IMallocSpyVtbl IMallocSpyVtbl, *PIMallocSpyVtbl;

typedef struct IMallocSpy IMallocSpy, *PIMallocSpy;

typedef ULONG_PTR SIZE_T;

struct IMallocSpy {
    struct IMallocSpyVtbl *lpVtbl;
};

struct IMallocSpyVtbl {
    HRESULT (*QueryInterface)(struct IMallocSpy *, IID *, void **);
    ULONG (*AddRef)(struct IMallocSpy *);
    ULONG (*Release)(struct IMallocSpy *);
    SIZE_T (*PreAlloc)(struct IMallocSpy *, SIZE_T);
    void * (*PostAlloc)(struct IMallocSpy *, void *);
    void * (*PreFree)(struct IMallocSpy *, void *, BOOL);
    void (*PostFree)(struct IMallocSpy *, BOOL);
    SIZE_T (*PreRealloc)(struct IMallocSpy *, void *, SIZE_T, void **, BOOL);
    void * (*PostRealloc)(struct IMallocSpy *, void *, BOOL);
    void * (*PreGetSize)(struct IMallocSpy *, void *, BOOL);
    SIZE_T (*PostGetSize)(struct IMallocSpy *, SIZE_T, BOOL);
    void * (*PreDidAlloc)(struct IMallocSpy *, void *, BOOL);
    int (*PostDidAlloc)(struct IMallocSpy *, void *, BOOL, int);
    void (*PreHeapMinimize)(struct IMallocSpy *);
    void (*PostHeapMinimize)(struct IMallocSpy *);
};

typedef enum tagEXTCONN {
    EXTCONN_STRONG=1,
    EXTCONN_WEAK=2,
    EXTCONN_CALLABLE=4
} tagEXTCONN;

typedef enum tagEXTCONN EXTCONN;

typedef struct IUrlMonVtbl IUrlMonVtbl, *PIUrlMonVtbl;

typedef struct IUrlMon IUrlMon, *PIUrlMon;

typedef struct IBindCtx IBindCtx, *PIBindCtx;

typedef struct IBindCtxVtbl IBindCtxVtbl, *PIBindCtxVtbl;

typedef struct tagBIND_OPTS tagBIND_OPTS, *PtagBIND_OPTS;

typedef struct tagBIND_OPTS BIND_OPTS;

typedef struct IRunningObjectTable IRunningObjectTable, *PIRunningObjectTable;

typedef struct IEnumString IEnumString, *PIEnumString;

typedef struct IRunningObjectTableVtbl IRunningObjectTableVtbl, *PIRunningObjectTableVtbl;

typedef struct IMoniker IMoniker, *PIMoniker;

typedef struct IEnumMoniker IEnumMoniker, *PIEnumMoniker;

typedef struct IEnumStringVtbl IEnumStringVtbl, *PIEnumStringVtbl;

typedef struct IMonikerVtbl IMonikerVtbl, *PIMonikerVtbl;

typedef struct IStream IStream, *PIStream;

typedef struct IEnumMonikerVtbl IEnumMonikerVtbl, *PIEnumMonikerVtbl;

typedef struct IStreamVtbl IStreamVtbl, *PIStreamVtbl;

typedef union _LARGE_INTEGER _LARGE_INTEGER, *P_LARGE_INTEGER;

typedef union _LARGE_INTEGER LARGE_INTEGER;

typedef struct _struct_7 _struct_7, *P_struct_7;

typedef struct _struct_8 _struct_8, *P_struct_8;

typedef double LONGLONG;

struct IStreamVtbl {
    HRESULT (*QueryInterface)(struct IStream *, IID *, void **);
    ULONG (*AddRef)(struct IStream *);
    ULONG (*Release)(struct IStream *);
    HRESULT (*Read)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Write)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Seek)(struct IStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (*SetSize)(struct IStream *, ULARGE_INTEGER);
    HRESULT (*CopyTo)(struct IStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (*Commit)(struct IStream *, DWORD);
    HRESULT (*Revert)(struct IStream *);
    HRESULT (*LockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*UnlockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*Stat)(struct IStream *, STATSTG *, DWORD);
    HRESULT (*Clone)(struct IStream *, struct IStream **);
};

struct IEnumStringVtbl {
    HRESULT (*QueryInterface)(struct IEnumString *, IID *, void **);
    ULONG (*AddRef)(struct IEnumString *);
    ULONG (*Release)(struct IEnumString *);
    HRESULT (*Next)(struct IEnumString *, ULONG, LPOLESTR *, ULONG *);
    HRESULT (*Skip)(struct IEnumString *, ULONG);
    HRESULT (*Reset)(struct IEnumString *);
    HRESULT (*Clone)(struct IEnumString *, struct IEnumString **);
};

struct IStream {
    struct IStreamVtbl *lpVtbl;
};

struct IMonikerVtbl {
    HRESULT (*QueryInterface)(struct IMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IMoniker *);
    ULONG (*Release)(struct IMoniker *);
    HRESULT (*GetClassID)(struct IMoniker *, CLSID *);
    HRESULT (*IsDirty)(struct IMoniker *);
    HRESULT (*Load)(struct IMoniker *, struct IStream *);
    HRESULT (*Save)(struct IMoniker *, struct IStream *, BOOL);
    HRESULT (*GetSizeMax)(struct IMoniker *, ULARGE_INTEGER *);
    HRESULT (*BindToObject)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void **);
    HRESULT (*BindToStorage)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void **);
    HRESULT (*Reduce)(struct IMoniker *, struct IBindCtx *, DWORD, struct IMoniker **, struct IMoniker **);
    HRESULT (*ComposeWith)(struct IMoniker *, struct IMoniker *, BOOL, struct IMoniker **);
    HRESULT (*Enum)(struct IMoniker *, BOOL, struct IEnumMoniker **);
    HRESULT (*IsEqual)(struct IMoniker *, struct IMoniker *);
    HRESULT (*Hash)(struct IMoniker *, DWORD *);
    HRESULT (*IsRunning)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, struct IMoniker *);
    HRESULT (*GetTimeOfLastChange)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, FILETIME *);
    HRESULT (*Inverse)(struct IMoniker *, struct IMoniker **);
    HRESULT (*CommonPrefixWith)(struct IMoniker *, struct IMoniker *, struct IMoniker **);
    HRESULT (*RelativePathTo)(struct IMoniker *, struct IMoniker *, struct IMoniker **);
    HRESULT (*GetDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR *);
    HRESULT (*ParseDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*IsSystemMoniker)(struct IMoniker *, DWORD *);
};

struct _struct_8 {
    DWORD LowPart;
    LONG HighPart;
};

struct _struct_7 {
    DWORD LowPart;
    LONG HighPart;
};

union _LARGE_INTEGER {
    struct _struct_7 field0;
    struct _struct_8 u;
    LONGLONG QuadPart;
};

struct IMoniker {
    struct IMonikerVtbl *lpVtbl;
};

struct IUrlMon {
    struct IUrlMonVtbl *lpVtbl;
};

struct IEnumString {
    struct IEnumStringVtbl *lpVtbl;
};

struct IEnumMonikerVtbl {
    HRESULT (*QueryInterface)(struct IEnumMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IEnumMoniker *);
    ULONG (*Release)(struct IEnumMoniker *);
    HRESULT (*Next)(struct IEnumMoniker *, ULONG, struct IMoniker **, ULONG *);
    HRESULT (*Skip)(struct IEnumMoniker *, ULONG);
    HRESULT (*Reset)(struct IEnumMoniker *);
    HRESULT (*Clone)(struct IEnumMoniker *, struct IEnumMoniker **);
};

struct IRunningObjectTable {
    struct IRunningObjectTableVtbl *lpVtbl;
};

struct tagBIND_OPTS {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
};

struct IBindCtx {
    struct IBindCtxVtbl *lpVtbl;
};

struct IBindCtxVtbl {
    HRESULT (*QueryInterface)(struct IBindCtx *, IID *, void **);
    ULONG (*AddRef)(struct IBindCtx *);
    ULONG (*Release)(struct IBindCtx *);
    HRESULT (*RegisterObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (*RevokeObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (*ReleaseBoundObjects)(struct IBindCtx *);
    HRESULT (*SetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (*GetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (*GetRunningObjectTable)(struct IBindCtx *, struct IRunningObjectTable **);
    HRESULT (*RegisterObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown *);
    HRESULT (*GetObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown **);
    HRESULT (*EnumObjectParam)(struct IBindCtx *, struct IEnumString **);
    HRESULT (*RevokeObjectParam)(struct IBindCtx *, LPOLESTR);
};

struct IEnumMoniker {
    struct IEnumMonikerVtbl *lpVtbl;
};

struct IUrlMonVtbl {
    HRESULT (*QueryInterface)(struct IUrlMon *, IID *, void **);
    ULONG (*AddRef)(struct IUrlMon *);
    ULONG (*Release)(struct IUrlMon *);
    HRESULT (*AsyncGetClassBits)(struct IUrlMon *, IID *, LPCWSTR, LPCWSTR, DWORD, DWORD, LPCWSTR, struct IBindCtx *, DWORD, IID *, DWORD);
};

struct IRunningObjectTableVtbl {
    HRESULT (*QueryInterface)(struct IRunningObjectTable *, IID *, void **);
    ULONG (*AddRef)(struct IRunningObjectTable *);
    ULONG (*Release)(struct IRunningObjectTable *);
    HRESULT (*Register)(struct IRunningObjectTable *, DWORD, struct IUnknown *, struct IMoniker *, DWORD *);
    HRESULT (*Revoke)(struct IRunningObjectTable *, DWORD);
    HRESULT (*IsRunning)(struct IRunningObjectTable *, struct IMoniker *);
    HRESULT (*GetObjectA)(struct IRunningObjectTable *, struct IMoniker *, struct IUnknown **);
    HRESULT (*NoteChangeTime)(struct IRunningObjectTable *, DWORD, FILETIME *);
    HRESULT (*GetTimeOfLastChange)(struct IRunningObjectTable *, struct IMoniker *, FILETIME *);
    HRESULT (*EnumRunning)(struct IRunningObjectTable *, struct IEnumMoniker **);
};

typedef struct ISynchronizeHandleVtbl ISynchronizeHandleVtbl, *PISynchronizeHandleVtbl;

typedef struct ISynchronizeHandle ISynchronizeHandle, *PISynchronizeHandle;

struct ISynchronizeHandle {
    struct ISynchronizeHandleVtbl *lpVtbl;
};

struct ISynchronizeHandleVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeHandle *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeHandle *);
    ULONG (*Release)(struct ISynchronizeHandle *);
    HRESULT (*GetHandle)(struct ISynchronizeHandle *, HANDLE *);
};

typedef struct ISurrogateVtbl ISurrogateVtbl, *PISurrogateVtbl;

typedef struct ISurrogate ISurrogate, *PISurrogate;

struct ISurrogate {
    struct ISurrogateVtbl *lpVtbl;
};

struct ISurrogateVtbl {
    HRESULT (*QueryInterface)(struct ISurrogate *, IID *, void **);
    ULONG (*AddRef)(struct ISurrogate *);
    ULONG (*Release)(struct ISurrogate *);
    HRESULT (*LoadDllServer)(struct ISurrogate *, IID *);
    HRESULT (*FreeSurrogate)(struct ISurrogate *);
};

typedef struct AsyncIAdviseSink2 AsyncIAdviseSink2, *PAsyncIAdviseSink2;

typedef struct AsyncIAdviseSink2Vtbl AsyncIAdviseSink2Vtbl, *PAsyncIAdviseSink2Vtbl;

typedef struct tagSTGMEDIUM tagSTGMEDIUM, *PtagSTGMEDIUM;

typedef struct tagSTGMEDIUM uSTGMEDIUM;

typedef uSTGMEDIUM STGMEDIUM;

typedef union _union_1695 _union_1695, *P_union_1695;

typedef struct HBITMAP__ HBITMAP__, *PHBITMAP__;

typedef struct HBITMAP__ *HBITMAP;

typedef void *HMETAFILEPICT;

typedef struct HENHMETAFILE__ HENHMETAFILE__, *PHENHMETAFILE__;

typedef struct HENHMETAFILE__ *HENHMETAFILE;

typedef HANDLE HGLOBAL;

typedef struct IStorage IStorage, *PIStorage;

typedef struct IStorageVtbl IStorageVtbl, *PIStorageVtbl;

typedef OLECHAR **SNB;

typedef struct IEnumSTATSTG IEnumSTATSTG, *PIEnumSTATSTG;

typedef struct IEnumSTATSTGVtbl IEnumSTATSTGVtbl, *PIEnumSTATSTGVtbl;

struct AsyncIAdviseSink2Vtbl {
    HRESULT (*QueryInterface)(struct AsyncIAdviseSink2 *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIAdviseSink2 *);
    ULONG (*Release)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnDataChange)(struct AsyncIAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (*Finish_OnDataChange)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnViewChange)(struct AsyncIAdviseSink2 *, DWORD, LONG);
    void (*Finish_OnViewChange)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnRename)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (*Finish_OnRename)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnSave)(struct AsyncIAdviseSink2 *);
    void (*Finish_OnSave)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnClose)(struct AsyncIAdviseSink2 *);
    void (*Finish_OnClose)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnLinkSrcChange)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (*Finish_OnLinkSrcChange)(struct AsyncIAdviseSink2 *);
};

struct AsyncIAdviseSink2 {
    struct AsyncIAdviseSink2Vtbl *lpVtbl;
};

struct IStorageVtbl {
    HRESULT (*QueryInterface)(struct IStorage *, IID *, void **);
    ULONG (*AddRef)(struct IStorage *);
    ULONG (*Release)(struct IStorage *);
    HRESULT (*CreateStream)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStream **);
    HRESULT (*OpenStream)(struct IStorage *, OLECHAR *, void *, DWORD, DWORD, struct IStream **);
    HRESULT (*CreateStorage)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStorage **);
    HRESULT (*OpenStorage)(struct IStorage *, OLECHAR *, struct IStorage *, DWORD, SNB, DWORD, struct IStorage **);
    HRESULT (*CopyTo)(struct IStorage *, DWORD, IID *, SNB, struct IStorage *);
    HRESULT (*MoveElementTo)(struct IStorage *, OLECHAR *, struct IStorage *, OLECHAR *, DWORD);
    HRESULT (*Commit)(struct IStorage *, DWORD);
    HRESULT (*Revert)(struct IStorage *);
    HRESULT (*EnumElements)(struct IStorage *, DWORD, void *, DWORD, struct IEnumSTATSTG **);
    HRESULT (*DestroyElement)(struct IStorage *, OLECHAR *);
    HRESULT (*RenameElement)(struct IStorage *, OLECHAR *, OLECHAR *);
    HRESULT (*SetElementTimes)(struct IStorage *, OLECHAR *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (*SetClass)(struct IStorage *, IID *);
    HRESULT (*SetStateBits)(struct IStorage *, DWORD, DWORD);
    HRESULT (*Stat)(struct IStorage *, STATSTG *, DWORD);
};

struct IStorage {
    struct IStorageVtbl *lpVtbl;
};

struct IEnumSTATSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATSTG *);
    ULONG (*Release)(struct IEnumSTATSTG *);
    HRESULT (*Next)(struct IEnumSTATSTG *, ULONG, STATSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATSTG *);
    HRESULT (*Clone)(struct IEnumSTATSTG *, struct IEnumSTATSTG **);
};

union _union_1695 {
    HBITMAP hBitmap;
    HMETAFILEPICT hMetaFilePict;
    HENHMETAFILE hEnhMetaFile;
    HGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    struct IStream *pstm;
    struct IStorage *pstg;
};

struct tagSTGMEDIUM {
    DWORD tymed;
    union _union_1695 field1_0x4;
    struct IUnknown *pUnkForRelease;
};

struct HBITMAP__ {
    int unused;
};

struct IEnumSTATSTG {
    struct IEnumSTATSTGVtbl *lpVtbl;
};

struct HENHMETAFILE__ {
    int unused;
};

typedef struct IThumbnailExtractor IThumbnailExtractor, *PIThumbnailExtractor;

typedef struct IThumbnailExtractorVtbl IThumbnailExtractorVtbl, *PIThumbnailExtractorVtbl;

struct IThumbnailExtractor {
    struct IThumbnailExtractorVtbl *lpVtbl;
};

struct IThumbnailExtractorVtbl {
    HRESULT (*QueryInterface)(struct IThumbnailExtractor *, IID *, void **);
    ULONG (*AddRef)(struct IThumbnailExtractor *);
    ULONG (*Release)(struct IThumbnailExtractor *);
    HRESULT (*ExtractThumbnail)(struct IThumbnailExtractor *, struct IStorage *, ULONG, ULONG, ULONG *, ULONG *, HBITMAP *);
    HRESULT (*OnFileUpdated)(struct IThumbnailExtractor *, struct IStorage *);
};

typedef struct _FLAG_STGMEDIUM _FLAG_STGMEDIUM, *P_FLAG_STGMEDIUM;

typedef struct _FLAG_STGMEDIUM FLAG_STGMEDIUM;

struct _FLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    STGMEDIUM Stgmed;
};

typedef struct IPersist IPersist, *PIPersist;

typedef struct IPersistVtbl IPersistVtbl, *PIPersistVtbl;

struct IPersistVtbl {
    HRESULT (*QueryInterface)(struct IPersist *, IID *, void **);
    ULONG (*AddRef)(struct IPersist *);
    ULONG (*Release)(struct IPersist *);
    HRESULT (*GetClassID)(struct IPersist *, CLSID *);
};

struct IPersist {
    struct IPersistVtbl *lpVtbl;
};

typedef struct AsyncIPipeDouble AsyncIPipeDouble, *PAsyncIPipeDouble;

typedef struct AsyncIPipeDoubleVtbl AsyncIPipeDoubleVtbl, *PAsyncIPipeDoubleVtbl;

typedef double DOUBLE;

struct AsyncIPipeDouble {
    struct AsyncIPipeDoubleVtbl *lpVtbl;
};

struct AsyncIPipeDoubleVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeDouble *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeDouble *);
    ULONG (*Release)(struct AsyncIPipeDouble *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeDouble *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeDouble *, DOUBLE *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeDouble *, DOUBLE *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeDouble *);
};

typedef struct IFillLockBytes IFillLockBytes, *PIFillLockBytes;

typedef struct IFillLockBytesVtbl IFillLockBytesVtbl, *PIFillLockBytesVtbl;

struct IFillLockBytes {
    struct IFillLockBytesVtbl *lpVtbl;
};

struct IFillLockBytesVtbl {
    HRESULT (*QueryInterface)(struct IFillLockBytes *, IID *, void **);
    ULONG (*AddRef)(struct IFillLockBytes *);
    ULONG (*Release)(struct IFillLockBytes *);
    HRESULT (*FillAppend)(struct IFillLockBytes *, void *, ULONG, ULONG *);
    HRESULT (*FillAt)(struct IFillLockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*SetFillSize)(struct IFillLockBytes *, ULARGE_INTEGER);
    HRESULT (*Terminate)(struct IFillLockBytes *, BOOL);
};

typedef struct IEnumFORMATETCVtbl IEnumFORMATETCVtbl, *PIEnumFORMATETCVtbl;

typedef struct IEnumFORMATETC IEnumFORMATETC, *PIEnumFORMATETC;

struct IEnumFORMATETC {
    struct IEnumFORMATETCVtbl *lpVtbl;
};

struct IEnumFORMATETCVtbl {
    HRESULT (*QueryInterface)(struct IEnumFORMATETC *, IID *, void **);
    ULONG (*AddRef)(struct IEnumFORMATETC *);
    ULONG (*Release)(struct IEnumFORMATETC *);
    HRESULT (*Next)(struct IEnumFORMATETC *, ULONG, FORMATETC *, ULONG *);
    HRESULT (*Skip)(struct IEnumFORMATETC *, ULONG);
    HRESULT (*Reset)(struct IEnumFORMATETC *);
    HRESULT (*Clone)(struct IEnumFORMATETC *, struct IEnumFORMATETC **);
};

typedef struct AsyncIPipeByte AsyncIPipeByte, *PAsyncIPipeByte;

typedef struct AsyncIPipeByteVtbl AsyncIPipeByteVtbl, *PAsyncIPipeByteVtbl;

struct AsyncIPipeByte {
    struct AsyncIPipeByteVtbl *lpVtbl;
};

struct AsyncIPipeByteVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeByte *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeByte *);
    ULONG (*Release)(struct AsyncIPipeByte *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeByte *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeByte *, BYTE *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeByte *, BYTE *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeByte *);
};

typedef struct IInternalUnknownVtbl IInternalUnknownVtbl, *PIInternalUnknownVtbl;

typedef struct IInternalUnknown IInternalUnknown, *PIInternalUnknown;

struct IInternalUnknownVtbl {
    HRESULT (*QueryInterface)(struct IInternalUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IInternalUnknown *);
    ULONG (*Release)(struct IInternalUnknown *);
    HRESULT (*QueryInternalInterface)(struct IInternalUnknown *, IID *, void **);
};

struct IInternalUnknown {
    struct IInternalUnknownVtbl *lpVtbl;
};

typedef struct IAsyncManager IAsyncManager, *PIAsyncManager;

typedef struct IAsyncManagerVtbl IAsyncManagerVtbl, *PIAsyncManagerVtbl;

struct IAsyncManagerVtbl {
    HRESULT (*QueryInterface)(struct IAsyncManager *, IID *, void **);
    ULONG (*AddRef)(struct IAsyncManager *);
    ULONG (*Release)(struct IAsyncManager *);
    HRESULT (*CompleteCall)(struct IAsyncManager *, HRESULT);
    HRESULT (*GetCallContext)(struct IAsyncManager *, IID *, void **);
    HRESULT (*GetState)(struct IAsyncManager *, ULONG *);
};

struct IAsyncManager {
    struct IAsyncManagerVtbl *lpVtbl;
};

typedef struct IDataAdviseHolder IDataAdviseHolder, *PIDataAdviseHolder;

typedef struct IDataAdviseHolder *LPDATAADVISEHOLDER;

typedef struct IDataAdviseHolderVtbl IDataAdviseHolderVtbl, *PIDataAdviseHolderVtbl;

typedef struct IDataObject IDataObject, *PIDataObject;

typedef struct IAdviseSink IAdviseSink, *PIAdviseSink;

typedef struct IEnumSTATDATA IEnumSTATDATA, *PIEnumSTATDATA;

typedef struct IDataObjectVtbl IDataObjectVtbl, *PIDataObjectVtbl;

typedef struct IAdviseSinkVtbl IAdviseSinkVtbl, *PIAdviseSinkVtbl;

typedef struct IEnumSTATDATAVtbl IEnumSTATDATAVtbl, *PIEnumSTATDATAVtbl;

typedef struct tagSTATDATA tagSTATDATA, *PtagSTATDATA;

typedef struct tagSTATDATA STATDATA;

struct IAdviseSink {
    struct IAdviseSinkVtbl *lpVtbl;
};

struct IAdviseSinkVtbl {
    HRESULT (*QueryInterface)(struct IAdviseSink *, IID *, void **);
    ULONG (*AddRef)(struct IAdviseSink *);
    ULONG (*Release)(struct IAdviseSink *);
    void (*OnDataChange)(struct IAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (*OnViewChange)(struct IAdviseSink *, DWORD, LONG);
    void (*OnRename)(struct IAdviseSink *, struct IMoniker *);
    void (*OnSave)(struct IAdviseSink *);
    void (*OnClose)(struct IAdviseSink *);
};

struct IDataObject {
    struct IDataObjectVtbl *lpVtbl;
};

struct IDataAdviseHolderVtbl {
    HRESULT (*QueryInterface)(struct IDataAdviseHolder *, IID *, void **);
    ULONG (*AddRef)(struct IDataAdviseHolder *);
    ULONG (*Release)(struct IDataAdviseHolder *);
    HRESULT (*Advise)(struct IDataAdviseHolder *, struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IDataAdviseHolder *, DWORD);
    HRESULT (*EnumAdvise)(struct IDataAdviseHolder *, struct IEnumSTATDATA **);
    HRESULT (*SendOnDataChange)(struct IDataAdviseHolder *, struct IDataObject *, DWORD, DWORD);
};

struct IEnumSTATDATA {
    struct IEnumSTATDATAVtbl *lpVtbl;
};

struct IDataObjectVtbl {
    HRESULT (*QueryInterface)(struct IDataObject *, IID *, void **);
    ULONG (*AddRef)(struct IDataObject *);
    ULONG (*Release)(struct IDataObject *);
    HRESULT (*GetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (*GetDataHere)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (*QueryGetData)(struct IDataObject *, FORMATETC *);
    HRESULT (*GetCanonicalFormatEtc)(struct IDataObject *, FORMATETC *, FORMATETC *);
    HRESULT (*SetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (*EnumFormatEtc)(struct IDataObject *, DWORD, struct IEnumFORMATETC **);
    HRESULT (*DAdvise)(struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (*DUnadvise)(struct IDataObject *, DWORD);
    HRESULT (*EnumDAdvise)(struct IDataObject *, struct IEnumSTATDATA **);
};

struct tagSTATDATA {
    FORMATETC formatetc;
    DWORD advf;
    struct IAdviseSink *pAdvSink;
    DWORD dwConnection;
};

struct IEnumSTATDATAVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATDATA *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATDATA *);
    ULONG (*Release)(struct IEnumSTATDATA *);
    HRESULT (*Next)(struct IEnumSTATDATA *, ULONG, STATDATA *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATDATA *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATDATA *);
    HRESULT (*Clone)(struct IEnumSTATDATA *, struct IEnumSTATDATA **);
};

struct IDataAdviseHolder {
    struct IDataAdviseHolderVtbl *lpVtbl;
};

typedef struct ICancelMethodCallsVtbl ICancelMethodCallsVtbl, *PICancelMethodCallsVtbl;

typedef struct ICancelMethodCalls ICancelMethodCalls, *PICancelMethodCalls;

struct ICancelMethodCalls {
    struct ICancelMethodCallsVtbl *lpVtbl;
};

struct ICancelMethodCallsVtbl {
    HRESULT (*QueryInterface)(struct ICancelMethodCalls *, IID *, void **);
    ULONG (*AddRef)(struct ICancelMethodCalls *);
    ULONG (*Release)(struct ICancelMethodCalls *);
    HRESULT (*Cancel)(struct ICancelMethodCalls *, ULONG);
    HRESULT (*TestCancel)(struct ICancelMethodCalls *);
};

typedef struct IDirectWriterLockVtbl IDirectWriterLockVtbl, *PIDirectWriterLockVtbl;

typedef struct IDirectWriterLock IDirectWriterLock, *PIDirectWriterLock;

struct IDirectWriterLock {
    struct IDirectWriterLockVtbl *lpVtbl;
};

struct IDirectWriterLockVtbl {
    HRESULT (*QueryInterface)(struct IDirectWriterLock *, IID *, void **);
    ULONG (*AddRef)(struct IDirectWriterLock *);
    ULONG (*Release)(struct IDirectWriterLock *);
    HRESULT (*WaitForWriteAccess)(struct IDirectWriterLock *, DWORD);
    HRESULT (*ReleaseWriteAccess)(struct IDirectWriterLock *);
    HRESULT (*HaveWriteAccess)(struct IDirectWriterLock *);
};

typedef struct IPipeLongVtbl IPipeLongVtbl, *PIPipeLongVtbl;

typedef struct IPipeLong IPipeLong, *PIPipeLong;

struct IPipeLong {
    struct IPipeLongVtbl *lpVtbl;
};

struct IPipeLongVtbl {
    HRESULT (*QueryInterface)(struct IPipeLong *, IID *, void **);
    ULONG (*AddRef)(struct IPipeLong *);
    ULONG (*Release)(struct IPipeLong *);
    HRESULT (*Pull)(struct IPipeLong *, LONG *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeLong *, LONG *, ULONG);
};

typedef struct IRpcHelper IRpcHelper, *PIRpcHelper;

typedef struct IRpcHelperVtbl IRpcHelperVtbl, *PIRpcHelperVtbl;

struct IRpcHelper {
    struct IRpcHelperVtbl *lpVtbl;
};

struct IRpcHelperVtbl {
    HRESULT (*QueryInterface)(struct IRpcHelper *, IID *, void **);
    ULONG (*AddRef)(struct IRpcHelper *);
    ULONG (*Release)(struct IRpcHelper *);
    HRESULT (*GetDCOMProtocolVersion)(struct IRpcHelper *, DWORD *);
    HRESULT (*GetIIDFromOBJREF)(struct IRpcHelper *, void *, IID **);
};

typedef enum _APTTYPE {
    APTTYPE_CURRENT=-1,
    APTTYPE_STA=0,
    APTTYPE_MTA=1,
    APTTYPE_NA=2,
    APTTYPE_MAINSTA=3
} _APTTYPE;

typedef enum _APTTYPE APTTYPE;

typedef struct IDummyHICONIncluder IDummyHICONIncluder, *PIDummyHICONIncluder;

typedef struct IDummyHICONIncluderVtbl IDummyHICONIncluderVtbl, *PIDummyHICONIncluderVtbl;

typedef struct HICON__ HICON__, *PHICON__;

typedef struct HICON__ *HICON;

struct IDummyHICONIncluderVtbl {
    HRESULT (*QueryInterface)(struct IDummyHICONIncluder *, IID *, void **);
    ULONG (*AddRef)(struct IDummyHICONIncluder *);
    ULONG (*Release)(struct IDummyHICONIncluder *);
    HRESULT (*Dummy)(struct IDummyHICONIncluder *, HICON, HDC);
};

struct HICON__ {
    int unused;
};

struct IDummyHICONIncluder {
    struct IDummyHICONIncluderVtbl *lpVtbl;
};

typedef enum tagSTREAM_SEEK {
    STREAM_SEEK_SET=0,
    STREAM_SEEK_CUR=1,
    STREAM_SEEK_END=2
} tagSTREAM_SEEK;

typedef enum tagSTREAM_SEEK STREAM_SEEK;

typedef struct tagSOLE_AUTHENTICATION_LIST tagSOLE_AUTHENTICATION_LIST, *PtagSOLE_AUTHENTICATION_LIST;

typedef struct tagSOLE_AUTHENTICATION_INFO tagSOLE_AUTHENTICATION_INFO, *PtagSOLE_AUTHENTICATION_INFO;

typedef struct tagSOLE_AUTHENTICATION_INFO SOLE_AUTHENTICATION_INFO;

struct tagSOLE_AUTHENTICATION_LIST {
    DWORD cAuthInfo;
    SOLE_AUTHENTICATION_INFO *aAuthInfo;
};

struct tagSOLE_AUTHENTICATION_INFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    void *pAuthInfo;
};

typedef DWORD APARTMENTID;

typedef struct ISynchronizeContainer ISynchronizeContainer, *PISynchronizeContainer;

typedef struct ISynchronizeContainerVtbl ISynchronizeContainerVtbl, *PISynchronizeContainerVtbl;

struct ISynchronizeContainer {
    struct ISynchronizeContainerVtbl *lpVtbl;
};

struct ISynchronizeContainerVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeContainer *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeContainer *);
    ULONG (*Release)(struct ISynchronizeContainer *);
    HRESULT (*AddSynchronize)(struct ISynchronizeContainer *, struct ISynchronize *);
    HRESULT (*WaitMultiple)(struct ISynchronizeContainer *, DWORD, DWORD, struct ISynchronize **);
};

typedef struct IBindCtx *LPBC;

typedef struct IBlockingLock IBlockingLock, *PIBlockingLock;

typedef struct IBlockingLockVtbl IBlockingLockVtbl, *PIBlockingLockVtbl;

struct IBlockingLock {
    struct IBlockingLockVtbl *lpVtbl;
};

struct IBlockingLockVtbl {
    HRESULT (*QueryInterface)(struct IBlockingLock *, IID *, void **);
    ULONG (*AddRef)(struct IBlockingLock *);
    ULONG (*Release)(struct IBlockingLock *);
    HRESULT (*Lock)(struct IBlockingLock *, DWORD);
    HRESULT (*Unlock)(struct IBlockingLock *);
};

typedef struct IMarshal2 IMarshal2, *PIMarshal2;

typedef struct IMarshal2 *LPMARSHAL2;

typedef struct IMarshal2Vtbl IMarshal2Vtbl, *PIMarshal2Vtbl;

struct IMarshal2Vtbl {
    HRESULT (*QueryInterface)(struct IMarshal2 *, IID *, void **);
    ULONG (*AddRef)(struct IMarshal2 *);
    ULONG (*Release)(struct IMarshal2 *);
    HRESULT (*GetUnmarshalClass)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (*GetMarshalSizeMax)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (*MarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (*UnmarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void **);
    HRESULT (*ReleaseMarshalData)(struct IMarshal2 *, struct IStream *);
    HRESULT (*DisconnectObject)(struct IMarshal2 *, DWORD);
};

struct IMarshal2 {
    struct IMarshal2Vtbl *lpVtbl;
};

typedef struct tagRemSNB tagRemSNB, *PtagRemSNB;

typedef struct tagRemSNB RemSNB;

struct tagRemSNB {
    ulong ulCntStr;
    ulong ulCntChar;
    OLECHAR rgString[1];
};

typedef enum tagBIND_FLAGS {
    BIND_MAYBOTHERUSER=1,
    BIND_JUSTTESTEXISTENCE=2
} tagBIND_FLAGS;

typedef struct ISynchronizeMutexVtbl ISynchronizeMutexVtbl, *PISynchronizeMutexVtbl;

typedef struct ISynchronizeMutex ISynchronizeMutex, *PISynchronizeMutex;

struct ISynchronizeMutexVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeMutex *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeMutex *);
    ULONG (*Release)(struct ISynchronizeMutex *);
    HRESULT (*Wait)(struct ISynchronizeMutex *, DWORD, DWORD);
    HRESULT (*Signal)(struct ISynchronizeMutex *);
    HRESULT (*Reset)(struct ISynchronizeMutex *);
    HRESULT (*ReleaseMutex)(struct ISynchronizeMutex *);
};

struct ISynchronizeMutex {
    struct ISynchronizeMutexVtbl *lpVtbl;
};

typedef struct tagStorageLayout tagStorageLayout, *PtagStorageLayout;

typedef struct tagStorageLayout StorageLayout;

struct tagStorageLayout {
    DWORD LayoutType;
    OLECHAR *pwcsElementName;
    LARGE_INTEGER cOffset;
    LARGE_INTEGER cBytes;
};

typedef CLIPFORMAT *LPCLIPFORMAT;

typedef struct AsyncIPipeLong AsyncIPipeLong, *PAsyncIPipeLong;

typedef struct AsyncIPipeLongVtbl AsyncIPipeLongVtbl, *PAsyncIPipeLongVtbl;

struct AsyncIPipeLongVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeLong *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeLong *);
    ULONG (*Release)(struct AsyncIPipeLong *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeLong *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeLong *, LONG *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeLong *, LONG *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeLong *);
};

struct AsyncIPipeLong {
    struct AsyncIPipeLongVtbl *lpVtbl;
};

typedef struct IGlobalInterfaceTable IGlobalInterfaceTable, *PIGlobalInterfaceTable;

typedef struct IGlobalInterfaceTable *LPGLOBALINTERFACETABLE;

typedef struct IGlobalInterfaceTableVtbl IGlobalInterfaceTableVtbl, *PIGlobalInterfaceTableVtbl;

struct IGlobalInterfaceTableVtbl {
    HRESULT (*QueryInterface)(struct IGlobalInterfaceTable *, IID *, void **);
    ULONG (*AddRef)(struct IGlobalInterfaceTable *);
    ULONG (*Release)(struct IGlobalInterfaceTable *);
    HRESULT (*RegisterInterfaceInGlobal)(struct IGlobalInterfaceTable *, struct IUnknown *, IID *, DWORD *);
    HRESULT (*RevokeInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD);
    HRESULT (*GetInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD, IID *, void **);
};

struct IGlobalInterfaceTable {
    struct IGlobalInterfaceTableVtbl *lpVtbl;
};

typedef struct IPersistFileVtbl IPersistFileVtbl, *PIPersistFileVtbl;

typedef struct IPersistFile IPersistFile, *PIPersistFile;

typedef OLECHAR *LPCOLESTR;

struct IPersistFile {
    struct IPersistFileVtbl *lpVtbl;
};

struct IPersistFileVtbl {
    HRESULT (*QueryInterface)(struct IPersistFile *, IID *, void **);
    ULONG (*AddRef)(struct IPersistFile *);
    ULONG (*Release)(struct IPersistFile *);
    HRESULT (*GetClassID)(struct IPersistFile *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistFile *);
    HRESULT (*Load)(struct IPersistFile *, LPCOLESTR, DWORD);
    HRESULT (*Save)(struct IPersistFile *, LPCOLESTR, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistFile *, LPCOLESTR);
    HRESULT (*GetCurFile)(struct IPersistFile *, LPOLESTR *);
};

typedef struct IOplockStorageVtbl IOplockStorageVtbl, *PIOplockStorageVtbl;

typedef struct IOplockStorage IOplockStorage, *PIOplockStorage;

struct IOplockStorage {
    struct IOplockStorageVtbl *lpVtbl;
};

struct IOplockStorageVtbl {
    HRESULT (*QueryInterface)(struct IOplockStorage *, IID *, void **);
    ULONG (*AddRef)(struct IOplockStorage *);
    ULONG (*Release)(struct IOplockStorage *);
    HRESULT (*CreateStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void **);
    HRESULT (*OpenStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void **);
};

typedef struct IDataObject *LPDATAOBJECT;

typedef struct IRpcChannelBuffer3Vtbl IRpcChannelBuffer3Vtbl, *PIRpcChannelBuffer3Vtbl;

typedef struct IRpcChannelBuffer3 IRpcChannelBuffer3, *PIRpcChannelBuffer3;

struct IRpcChannelBuffer3Vtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer3 *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer3 *);
    ULONG (*Release)(struct IRpcChannelBuffer3 *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer3 *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer3 *);
    HRESULT (*GetProtocolVersion)(struct IRpcChannelBuffer3 *, DWORD *);
    HRESULT (*Send)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*Receive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG, ULONG *);
    HRESULT (*Cancel)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (*GetCallContext)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *, void **);
    HRESULT (*GetDestCtxEx)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *, void **);
    HRESULT (*GetState)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *);
    HRESULT (*RegisterAsync)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, struct IAsyncManager *);
};

struct IRpcChannelBuffer3 {
    struct IRpcChannelBuffer3Vtbl *lpVtbl;
};

typedef struct ILockBytes *LPLOCKBYTES;

typedef struct IAdviseSink2 IAdviseSink2, *PIAdviseSink2;

typedef struct IAdviseSink2 *LPADVISESINK2;

typedef struct IAdviseSink2Vtbl IAdviseSink2Vtbl, *PIAdviseSink2Vtbl;

struct IAdviseSink2 {
    struct IAdviseSink2Vtbl *lpVtbl;
};

struct IAdviseSink2Vtbl {
    HRESULT (*QueryInterface)(struct IAdviseSink2 *, IID *, void **);
    ULONG (*AddRef)(struct IAdviseSink2 *);
    ULONG (*Release)(struct IAdviseSink2 *);
    void (*OnDataChange)(struct IAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (*OnViewChange)(struct IAdviseSink2 *, DWORD, LONG);
    void (*OnRename)(struct IAdviseSink2 *, struct IMoniker *);
    void (*OnSave)(struct IAdviseSink2 *);
    void (*OnClose)(struct IAdviseSink2 *);
    void (*OnLinkSrcChange)(struct IAdviseSink2 *, struct IMoniker *);
};

typedef STGMEDIUM ASYNC_STGMEDIUM;

typedef struct IReleaseMarshalBuffers IReleaseMarshalBuffers, *PIReleaseMarshalBuffers;

typedef struct IReleaseMarshalBuffersVtbl IReleaseMarshalBuffersVtbl, *PIReleaseMarshalBuffersVtbl;

struct IReleaseMarshalBuffersVtbl {
    HRESULT (*QueryInterface)(struct IReleaseMarshalBuffers *, IID *, void **);
    ULONG (*AddRef)(struct IReleaseMarshalBuffers *);
    ULONG (*Release)(struct IReleaseMarshalBuffers *);
    HRESULT (*ReleaseMarshalBuffer)(struct IReleaseMarshalBuffers *, RPCOLEMESSAGE *, DWORD, struct IUnknown *);
};

struct IReleaseMarshalBuffers {
    struct IReleaseMarshalBuffersVtbl *lpVtbl;
};

typedef struct IPersistStorageVtbl IPersistStorageVtbl, *PIPersistStorageVtbl;

typedef struct IPersistStorage IPersistStorage, *PIPersistStorage;

struct IPersistStorage {
    struct IPersistStorageVtbl *lpVtbl;
};

struct IPersistStorageVtbl {
    HRESULT (*QueryInterface)(struct IPersistStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPersistStorage *);
    ULONG (*Release)(struct IPersistStorage *);
    HRESULT (*GetClassID)(struct IPersistStorage *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistStorage *);
    HRESULT (*InitNew)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*Load)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*Save)(struct IPersistStorage *, struct IStorage *, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*HandsOffStorage)(struct IPersistStorage *);
};

typedef struct IProgressNotify IProgressNotify, *PIProgressNotify;

typedef struct IProgressNotifyVtbl IProgressNotifyVtbl, *PIProgressNotifyVtbl;

struct IProgressNotify {
    struct IProgressNotifyVtbl *lpVtbl;
};

struct IProgressNotifyVtbl {
    HRESULT (*QueryInterface)(struct IProgressNotify *, IID *, void **);
    ULONG (*AddRef)(struct IProgressNotify *);
    ULONG (*Release)(struct IProgressNotify *);
    HRESULT (*OnProgress)(struct IProgressNotify *, DWORD, DWORD, BOOL, BOOL);
};

typedef struct IStream *LPSTREAM;

typedef struct IBindCtx *LPBINDCTX;

typedef struct IRpcOptions IRpcOptions, *PIRpcOptions;

typedef struct IRpcOptionsVtbl IRpcOptionsVtbl, *PIRpcOptionsVtbl;

struct IRpcOptions {
    struct IRpcOptionsVtbl *lpVtbl;
};

struct IRpcOptionsVtbl {
    HRESULT (*QueryInterface)(struct IRpcOptions *, IID *, void **);
    ULONG (*AddRef)(struct IRpcOptions *);
    ULONG (*Release)(struct IRpcOptions *);
    HRESULT (*Set)(struct IRpcOptions *, struct IUnknown *, DWORD, ULONG_PTR);
    HRESULT (*Query)(struct IRpcOptions *, struct IUnknown *, DWORD, ULONG_PTR *);
};

typedef enum _THDTYPE {
    THDTYPE_BLOCKMESSAGES=0,
    THDTYPE_PROCESSMESSAGES=1
} _THDTYPE;

typedef enum _THDTYPE THDTYPE;

typedef struct tagSOLE_AUTHENTICATION_SERVICE tagSOLE_AUTHENTICATION_SERVICE, *PtagSOLE_AUTHENTICATION_SERVICE;

struct tagSOLE_AUTHENTICATION_SERVICE {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    OLECHAR *pPrincipalName;
    HRESULT hr;
};

typedef enum tagTYMED {
    TYMED_NULL=0,
    TYMED_HGLOBAL=1,
    TYMED_FILE=2,
    TYMED_ISTREAM=4,
    TYMED_ISTORAGE=8,
    TYMED_GDI=16,
    TYMED_MFPICT=32,
    TYMED_ENHMF=64
} tagTYMED;

typedef enum tagTYMED TYMED;

typedef struct IChannelHook IChannelHook, *PIChannelHook;

typedef struct IChannelHookVtbl IChannelHookVtbl, *PIChannelHookVtbl;

struct IChannelHookVtbl {
    HRESULT (*QueryInterface)(struct IChannelHook *, IID *, void **);
    ULONG (*AddRef)(struct IChannelHook *);
    ULONG (*Release)(struct IChannelHook *);
    void (*ClientGetSize)(struct IChannelHook *, GUID *, IID *, ULONG *);
    void (*ClientFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *);
    void (*ClientNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD, HRESULT);
    void (*ServerNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD);
    void (*ServerGetSize)(struct IChannelHook *, GUID *, IID *, HRESULT, ULONG *);
    void (*ServerFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *, HRESULT);
};

struct IChannelHook {
    struct IChannelHookVtbl *lpVtbl;
};

typedef struct IExternalConnectionVtbl IExternalConnectionVtbl, *PIExternalConnectionVtbl;

typedef struct IExternalConnection IExternalConnection, *PIExternalConnection;

struct IExternalConnectionVtbl {
    HRESULT (*QueryInterface)(struct IExternalConnection *, IID *, void **);
    ULONG (*AddRef)(struct IExternalConnection *);
    ULONG (*Release)(struct IExternalConnection *);
    DWORD (*AddConnection)(struct IExternalConnection *, DWORD, DWORD);
    DWORD (*ReleaseConnection)(struct IExternalConnection *, DWORD, DWORD, BOOL);
};

struct IExternalConnection {
    struct IExternalConnectionVtbl *lpVtbl;
};

typedef STATDATA *LPSTATDATA;

typedef struct IMalloc IMalloc, *PIMalloc;

typedef struct IMallocVtbl IMallocVtbl, *PIMallocVtbl;

struct IMalloc {
    struct IMallocVtbl *lpVtbl;
};

struct IMallocVtbl {
    HRESULT (*QueryInterface)(struct IMalloc *, IID *, void **);
    ULONG (*AddRef)(struct IMalloc *);
    ULONG (*Release)(struct IMalloc *);
    void * (*Alloc)(struct IMalloc *, SIZE_T);
    void * (*Realloc)(struct IMalloc *, void *, SIZE_T);
    void (*Free)(struct IMalloc *, void *);
    SIZE_T (*GetSize)(struct IMalloc *, void *);
    int (*DidAlloc)(struct IMalloc *, void *);
    void (*HeapMinimize)(struct IMalloc *);
};

typedef struct tagFORMATETC *LPFORMATETC;

typedef struct IPersistStream IPersistStream, *PIPersistStream;

typedef struct IPersistStream *LPPERSISTSTREAM;

typedef struct IPersistStreamVtbl IPersistStreamVtbl, *PIPersistStreamVtbl;

struct IPersistStreamVtbl {
    HRESULT (*QueryInterface)(struct IPersistStream *, IID *, void **);
    ULONG (*AddRef)(struct IPersistStream *);
    ULONG (*Release)(struct IPersistStream *);
    HRESULT (*GetClassID)(struct IPersistStream *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistStream *);
    HRESULT (*Load)(struct IPersistStream *, struct IStream *);
    HRESULT (*Save)(struct IPersistStream *, struct IStream *, BOOL);
    HRESULT (*GetSizeMax)(struct IPersistStream *, ULARGE_INTEGER *);
};

struct IPersistStream {
    struct IPersistStreamVtbl *lpVtbl;
};

typedef struct IEnumFORMATETC *LPENUMFORMATETC;

typedef struct IEnumSTATDATA *LPENUMSTATDATA;

typedef struct tagBIND_OPTS2 tagBIND_OPTS2, *PtagBIND_OPTS2;

struct tagBIND_OPTS2 {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
    DWORD dwTrackFlags;
    DWORD dwClassContext;
    LCID locale;
    COSERVERINFO *pServerInfo;
};

typedef struct IRunnableObject IRunnableObject, *PIRunnableObject;

typedef struct IRunnableObjectVtbl IRunnableObjectVtbl, *PIRunnableObjectVtbl;

typedef CLSID *LPCLSID;

struct IRunnableObjectVtbl {
    HRESULT (*QueryInterface)(struct IRunnableObject *, IID *, void **);
    ULONG (*AddRef)(struct IRunnableObject *);
    ULONG (*Release)(struct IRunnableObject *);
    HRESULT (*GetRunningClass)(struct IRunnableObject *, LPCLSID);
    HRESULT (*Run)(struct IRunnableObject *, LPBINDCTX);
    BOOL (*IsRunning)(struct IRunnableObject *);
    HRESULT (*LockRunning)(struct IRunnableObject *, BOOL, BOOL);
    HRESULT (*SetContainedObject)(struct IRunnableObject *, BOOL);
};

struct IRunnableObject {
    struct IRunnableObjectVtbl *lpVtbl;
};

typedef struct IProcessInitControlVtbl IProcessInitControlVtbl, *PIProcessInitControlVtbl;

typedef struct IProcessInitControl IProcessInitControl, *PIProcessInitControl;

struct IProcessInitControl {
    struct IProcessInitControlVtbl *lpVtbl;
};

struct IProcessInitControlVtbl {
    HRESULT (*QueryInterface)(struct IProcessInitControl *, IID *, void **);
    ULONG (*AddRef)(struct IProcessInitControl *);
    ULONG (*Release)(struct IProcessInitControl *);
    HRESULT (*ResetInitializerTimeout)(struct IProcessInitControl *, DWORD);
};

typedef userSTGMEDIUM *wireASYNC_STGMEDIUM;

typedef struct ICancelMethodCalls *LPCANCELMETHODCALLS;

typedef struct IRpcProxyBuffer IRpcProxyBuffer, *PIRpcProxyBuffer;

typedef struct IRpcProxyBufferVtbl IRpcProxyBufferVtbl, *PIRpcProxyBufferVtbl;

struct IRpcProxyBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcProxyBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcProxyBuffer *);
    ULONG (*Release)(struct IRpcProxyBuffer *);
    HRESULT (*Connect)(struct IRpcProxyBuffer *, struct IRpcChannelBuffer *);
    void (*Disconnect)(struct IRpcProxyBuffer *);
};

struct IRpcProxyBuffer {
    struct IRpcProxyBufferVtbl *lpVtbl;
};

typedef struct IMoniker *LPMONIKER;

typedef struct tagRemSTGMEDIUM tagRemSTGMEDIUM, *PtagRemSTGMEDIUM;

typedef struct tagRemSTGMEDIUM RemSTGMEDIUM;

struct tagRemSTGMEDIUM {
    DWORD tymed;
    DWORD dwHandleType;
    ulong pData;
    ulong pUnkForRelease;
    ulong cbData;
    byte data[1];
};

typedef struct IForegroundTransferVtbl IForegroundTransferVtbl, *PIForegroundTransferVtbl;

typedef struct IForegroundTransfer IForegroundTransfer, *PIForegroundTransfer;

struct IForegroundTransferVtbl {
    HRESULT (*QueryInterface)(struct IForegroundTransfer *, IID *, void **);
    ULONG (*AddRef)(struct IForegroundTransfer *);
    ULONG (*Release)(struct IForegroundTransfer *);
    HRESULT (*AllowForegroundTransfer)(struct IForegroundTransfer *, void *);
};

struct IForegroundTransfer {
    struct IForegroundTransferVtbl *lpVtbl;
};

typedef struct IRootStorage IRootStorage, *PIRootStorage;

typedef struct IRootStorageVtbl IRootStorageVtbl, *PIRootStorageVtbl;

struct IRootStorageVtbl {
    HRESULT (*QueryInterface)(struct IRootStorage *, IID *, void **);
    ULONG (*AddRef)(struct IRootStorage *);
    ULONG (*Release)(struct IRootStorage *);
    HRESULT (*SwitchToFile)(struct IRootStorage *, LPOLESTR);
};

struct IRootStorage {
    struct IRootStorageVtbl *lpVtbl;
};

typedef enum tagSTGTY {
    STGTY_STORAGE=1,
    STGTY_STREAM=2,
    STGTY_LOCKBYTES=3,
    STGTY_PROPERTY=4
} tagSTGTY;

typedef struct AsyncIAdviseSinkVtbl AsyncIAdviseSinkVtbl, *PAsyncIAdviseSinkVtbl;

typedef struct AsyncIAdviseSink AsyncIAdviseSink, *PAsyncIAdviseSink;

struct AsyncIAdviseSinkVtbl {
    HRESULT (*QueryInterface)(struct AsyncIAdviseSink *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIAdviseSink *);
    ULONG (*Release)(struct AsyncIAdviseSink *);
    void (*Begin_OnDataChange)(struct AsyncIAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (*Finish_OnDataChange)(struct AsyncIAdviseSink *);
    void (*Begin_OnViewChange)(struct AsyncIAdviseSink *, DWORD, LONG);
    void (*Finish_OnViewChange)(struct AsyncIAdviseSink *);
    void (*Begin_OnRename)(struct AsyncIAdviseSink *, struct IMoniker *);
    void (*Finish_OnRename)(struct AsyncIAdviseSink *);
    void (*Begin_OnSave)(struct AsyncIAdviseSink *);
    void (*Finish_OnSave)(struct AsyncIAdviseSink *);
    void (*Begin_OnClose)(struct AsyncIAdviseSink *);
    void (*Finish_OnClose)(struct AsyncIAdviseSink *);
};

struct AsyncIAdviseSink {
    struct AsyncIAdviseSinkVtbl *lpVtbl;
};

typedef enum tagPENDINGMSG {
    PENDINGMSG_CANCELCALL=0,
    PENDINGMSG_WAITNOPROCESS=1,
    PENDINGMSG_WAITDEFPROCESS=2
} tagPENDINGMSG;

typedef struct IRpcSyntaxNegotiate IRpcSyntaxNegotiate, *PIRpcSyntaxNegotiate;

typedef struct IRpcSyntaxNegotiateVtbl IRpcSyntaxNegotiateVtbl, *PIRpcSyntaxNegotiateVtbl;

struct IRpcSyntaxNegotiate {
    struct IRpcSyntaxNegotiateVtbl *lpVtbl;
};

struct IRpcSyntaxNegotiateVtbl {
    HRESULT (*QueryInterface)(struct IRpcSyntaxNegotiate *, IID *, void **);
    ULONG (*AddRef)(struct IRpcSyntaxNegotiate *);
    ULONG (*Release)(struct IRpcSyntaxNegotiate *);
    HRESULT (*NegotiateSyntax)(struct IRpcSyntaxNegotiate *, RPCOLEMESSAGE *);
};

typedef struct tagMULTI_QI MULTI_QI;

typedef struct IPersist *LPPERSIST;

typedef struct ISequentialStream ISequentialStream, *PISequentialStream;

typedef struct ISequentialStreamVtbl ISequentialStreamVtbl, *PISequentialStreamVtbl;

struct ISequentialStream {
    struct ISequentialStreamVtbl *lpVtbl;
};

struct ISequentialStreamVtbl {
    HRESULT (*QueryInterface)(struct ISequentialStream *, IID *, void **);
    ULONG (*AddRef)(struct ISequentialStream *);
    ULONG (*Release)(struct ISequentialStream *);
    HRESULT (*Read)(struct ISequentialStream *, void *, ULONG, ULONG *);
    HRESULT (*Write)(struct ISequentialStream *, void *, ULONG, ULONG *);
};

typedef struct tagSOLE_AUTHENTICATION_LIST SOLE_AUTHENTICATION_LIST;

typedef struct IWaitMultiple IWaitMultiple, *PIWaitMultiple;

typedef struct IWaitMultipleVtbl IWaitMultipleVtbl, *PIWaitMultipleVtbl;

struct IWaitMultipleVtbl {
    HRESULT (*QueryInterface)(struct IWaitMultiple *, IID *, void **);
    ULONG (*AddRef)(struct IWaitMultiple *);
    ULONG (*Release)(struct IWaitMultiple *);
    HRESULT (*WaitMultiple)(struct IWaitMultiple *, DWORD, struct ISynchronize **);
    HRESULT (*AddSynchronize)(struct IWaitMultiple *, struct ISynchronize *);
};

struct IWaitMultiple {
    struct IWaitMultipleVtbl *lpVtbl;
};

typedef struct IMultiQI IMultiQI, *PIMultiQI;

typedef struct IMultiQIVtbl IMultiQIVtbl, *PIMultiQIVtbl;

struct IMultiQI {
    struct IMultiQIVtbl *lpVtbl;
};

struct IMultiQIVtbl {
    HRESULT (*QueryInterface)(struct IMultiQI *, IID *, void **);
    ULONG (*AddRef)(struct IMultiQI *);
    ULONG (*Release)(struct IMultiQI *);
    HRESULT (*QueryMultipleInterfaces)(struct IMultiQI *, ULONG, MULTI_QI *);
};

typedef struct IEnumUnknownVtbl IEnumUnknownVtbl, *PIEnumUnknownVtbl;

typedef struct IEnumUnknown IEnumUnknown, *PIEnumUnknown;

struct IEnumUnknown {
    struct IEnumUnknownVtbl *lpVtbl;
};

struct IEnumUnknownVtbl {
    HRESULT (*QueryInterface)(struct IEnumUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IEnumUnknown *);
    ULONG (*Release)(struct IEnumUnknown *);
    HRESULT (*Next)(struct IEnumUnknown *, ULONG, struct IUnknown **, ULONG *);
    HRESULT (*Skip)(struct IEnumUnknown *, ULONG);
    HRESULT (*Reset)(struct IEnumUnknown *);
    HRESULT (*Clone)(struct IEnumUnknown *, struct IEnumUnknown **);
};

typedef struct ISynchronizeEvent ISynchronizeEvent, *PISynchronizeEvent;

typedef struct ISynchronizeEventVtbl ISynchronizeEventVtbl, *PISynchronizeEventVtbl;

struct ISynchronizeEvent {
    struct ISynchronizeEventVtbl *lpVtbl;
};

struct ISynchronizeEventVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeEvent *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeEvent *);
    ULONG (*Release)(struct ISynchronizeEvent *);
    HRESULT (*GetHandle)(struct ISynchronizeEvent *, HANDLE *);
    HRESULT (*SetEventHandle)(struct ISynchronizeEvent *, HANDLE *);
};

typedef struct IComThreadingInfo IComThreadingInfo, *PIComThreadingInfo;

typedef struct IComThreadingInfoVtbl IComThreadingInfoVtbl, *PIComThreadingInfoVtbl;

struct IComThreadingInfoVtbl {
    HRESULT (*QueryInterface)(struct IComThreadingInfo *, IID *, void **);
    ULONG (*AddRef)(struct IComThreadingInfo *);
    ULONG (*Release)(struct IComThreadingInfo *);
    HRESULT (*GetCurrentApartmentType)(struct IComThreadingInfo *, APTTYPE *);
    HRESULT (*GetCurrentThreadType)(struct IComThreadingInfo *, THDTYPE *);
    HRESULT (*GetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
    HRESULT (*SetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
};

struct IComThreadingInfo {
    struct IComThreadingInfoVtbl *lpVtbl;
};

typedef struct IMarshal IMarshal, *PIMarshal;

typedef struct IMarshal *LPMARSHAL;

typedef struct IMarshalVtbl IMarshalVtbl, *PIMarshalVtbl;

struct IMarshal {
    struct IMarshalVtbl *lpVtbl;
};

struct IMarshalVtbl {
    HRESULT (*QueryInterface)(struct IMarshal *, IID *, void **);
    ULONG (*AddRef)(struct IMarshal *);
    ULONG (*Release)(struct IMarshal *);
    HRESULT (*GetUnmarshalClass)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (*GetMarshalSizeMax)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (*MarshalInterface)(struct IMarshal *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (*UnmarshalInterface)(struct IMarshal *, struct IStream *, IID *, void **);
    HRESULT (*ReleaseMarshalData)(struct IMarshal *, struct IStream *);
    HRESULT (*DisconnectObject)(struct IMarshal *, DWORD);
};

typedef enum tagADVF {
    ADVF_NODATA=1,
    ADVF_PRIMEFIRST=2,
    ADVF_ONLYONCE=4,
    ADVFCACHE_NOHANDLER=8,
    ADVFCACHE_FORCEBUILTIN=16,
    ADVFCACHE_ONSAVE=32,
    ADVF_DATAONSTOP=64
} tagADVF;

typedef struct tagBIND_OPTS2 *LPBIND_OPTS2;

typedef RPCOLEMESSAGE *PRPCOLEMESSAGE;

typedef struct tagSOLE_AUTHENTICATION_SERVICE SOLE_AUTHENTICATION_SERVICE;

typedef SOLE_AUTHENTICATION_SERVICE *PSOLE_AUTHENTICATION_SERVICE;

typedef struct SChannelHookCallInfo SChannelHookCallInfo, *PSChannelHookCallInfo;

struct SChannelHookCallInfo {
    IID iid;
    DWORD cbSize;
    GUID uCausality;
    DWORD dwServerPid;
    DWORD iMethod;
    void *pObject;
};

typedef struct IPipeByteVtbl IPipeByteVtbl, *PIPipeByteVtbl;

typedef struct IPipeByte IPipeByte, *PIPipeByte;

struct IPipeByte {
    struct IPipeByteVtbl *lpVtbl;
};

struct IPipeByteVtbl {
    HRESULT (*QueryInterface)(struct IPipeByte *, IID *, void **);
    ULONG (*AddRef)(struct IPipeByte *);
    ULONG (*Release)(struct IPipeByte *);
    HRESULT (*Pull)(struct IPipeByte *, BYTE *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeByte *, BYTE *, ULONG);
};

typedef enum tagCALLTYPE {
    CALLTYPE_TOPLEVEL=1,
    CALLTYPE_NESTED=2,
    CALLTYPE_ASYNC=3,
    CALLTYPE_TOPLEVEL_CALLPENDING=4,
    CALLTYPE_ASYNC_CALLPENDING=5
} tagCALLTYPE;

typedef enum tagDCOM_CALL_STATE {
    DCOM_NONE=0,
    DCOM_CALL_COMPLETE=1,
    DCOM_CALL_CANCELED=2
} tagDCOM_CALL_STATE;

typedef enum tagDCOM_CALL_STATE DCOM_CALL_STATE;

typedef struct tagSOLE_AUTHENTICATION_LIST *PSOLE_AUTHENTICATION_LIST;

typedef enum tagPENDINGTYPE {
    PENDINGTYPE_TOPLEVEL=1,
    PENDINGTYPE_NESTED=2
} tagPENDINGTYPE;

typedef enum tagPENDINGTYPE PENDINGTYPE;

typedef struct ICallFactory ICallFactory, *PICallFactory;

typedef struct ICallFactoryVtbl ICallFactoryVtbl, *PICallFactoryVtbl;

struct ICallFactoryVtbl {
    HRESULT (*QueryInterface)(struct ICallFactory *, IID *, void **);
    ULONG (*AddRef)(struct ICallFactory *);
    ULONG (*Release)(struct ICallFactory *);
    HRESULT (*CreateCall)(struct ICallFactory *, IID *, struct IUnknown *, IID *, struct IUnknown **);
};

struct ICallFactory {
    struct ICallFactoryVtbl *lpVtbl;
};

typedef struct IPersistStorage *LPPERSISTSTORAGE;

typedef struct IPipeDouble IPipeDouble, *PIPipeDouble;

typedef struct IPipeDoubleVtbl IPipeDoubleVtbl, *PIPipeDoubleVtbl;

struct IPipeDouble {
    struct IPipeDoubleVtbl *lpVtbl;
};

struct IPipeDoubleVtbl {
    HRESULT (*QueryInterface)(struct IPipeDouble *, IID *, void **);
    ULONG (*AddRef)(struct IPipeDouble *);
    ULONG (*Release)(struct IPipeDouble *);
    HRESULT (*Pull)(struct IPipeDouble *, DOUBLE *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeDouble *, DOUBLE *, ULONG);
};

typedef struct IExternalConnection *LPEXTERNALCONNECTION;

typedef enum tagLOCKTYPE {
    LOCK_WRITE=1,
    LOCK_EXCLUSIVE=2,
    LOCK_ONLYONCE=4
} tagLOCKTYPE;

typedef struct ILayoutStorageVtbl ILayoutStorageVtbl, *PILayoutStorageVtbl;

typedef struct ILayoutStorage ILayoutStorage, *PILayoutStorage;

struct ILayoutStorage {
    struct ILayoutStorageVtbl *lpVtbl;
};

struct ILayoutStorageVtbl {
    HRESULT (*QueryInterface)(struct ILayoutStorage *, IID *, void **);
    ULONG (*AddRef)(struct ILayoutStorage *);
    ULONG (*Release)(struct ILayoutStorage *);
    HRESULT (*LayoutScript)(struct ILayoutStorage *, StorageLayout *, DWORD, DWORD);
    HRESULT (*BeginMonitor)(struct ILayoutStorage *);
    HRESULT (*EndMonitor)(struct ILayoutStorage *);
    HRESULT (*ReLayoutDocfile)(struct ILayoutStorage *, OLECHAR *);
    HRESULT (*ReLayoutDocfileOnILockBytes)(struct ILayoutStorage *, struct ILockBytes *);
};

typedef struct IMalloc *LPMALLOC;

typedef struct IAdviseSink *LPADVISESINK;

typedef struct IPSFactoryBufferVtbl IPSFactoryBufferVtbl, *PIPSFactoryBufferVtbl;

typedef struct IPSFactoryBuffer IPSFactoryBuffer, *PIPSFactoryBuffer;

typedef struct IRpcStubBuffer IRpcStubBuffer, *PIRpcStubBuffer;

typedef struct IRpcStubBufferVtbl IRpcStubBufferVtbl, *PIRpcStubBufferVtbl;

struct IPSFactoryBuffer {
    struct IPSFactoryBufferVtbl *lpVtbl;
};

struct IRpcStubBuffer {
    struct IRpcStubBufferVtbl *lpVtbl;
};

struct IRpcStubBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcStubBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcStubBuffer *);
    ULONG (*Release)(struct IRpcStubBuffer *);
    HRESULT (*Connect)(struct IRpcStubBuffer *, struct IUnknown *);
    void (*Disconnect)(struct IRpcStubBuffer *);
    HRESULT (*Invoke)(struct IRpcStubBuffer *, RPCOLEMESSAGE *, struct IRpcChannelBuffer *);
    IRpcStubBuffer * (*IsIIDSupported)(struct IRpcStubBuffer *, IID *);
    ULONG (*CountRefs)(struct IRpcStubBuffer *);
    HRESULT (*DebugServerQueryInterface)(struct IRpcStubBuffer *, void **);
    void (*DebugServerRelease)(struct IRpcStubBuffer *, void *);
};

struct IPSFactoryBufferVtbl {
    HRESULT (*QueryInterface)(struct IPSFactoryBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IPSFactoryBuffer *);
    ULONG (*Release)(struct IPSFactoryBuffer *);
    HRESULT (*CreateProxy)(struct IPSFactoryBuffer *, struct IUnknown *, IID *, struct IRpcProxyBuffer **, void **);
    HRESULT (*CreateStub)(struct IPSFactoryBuffer *, IID *, struct IUnknown *, struct IRpcStubBuffer **);
};

typedef enum tagSERVERCALL {
    SERVERCALL_ISHANDLED=0,
    SERVERCALL_REJECTED=1,
    SERVERCALL_RETRYLATER=2
} tagSERVERCALL;

typedef enum tagSERVERCALL SERVERCALL;

typedef struct IPersistFile *LPPERSISTFILE;

typedef enum tagPENDINGMSG PENDINGMSG;

typedef struct IRunnableObject *LPRUNNABLEOBJECT;

typedef struct IRootStorage *LPROOTSTORAGE;

typedef struct tagBIND_OPTS2 BIND_OPTS2;

typedef struct ISurrogate *LPSURROGATE;

typedef struct IRunningObjectTable *LPRUNNINGOBJECTTABLE;

typedef struct IStorage *LPSTORAGE;

typedef struct IStdMarshalInfo *LPSTDMARSHALINFO;

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES EOLE_AUTHENTICATION_CAPABILITIES;

typedef struct IEnumUnknown *LPENUMUNKNOWN;

typedef struct tagINTERFACEINFO INTERFACEINFO;

typedef struct IAddrTrackingControl IAddrTrackingControl, *PIAddrTrackingControl;

typedef struct IAddrTrackingControlVtbl IAddrTrackingControlVtbl, *PIAddrTrackingControlVtbl;

struct IAddrTrackingControlVtbl {
    HRESULT (*QueryInterface)(struct IAddrTrackingControl *, IID *, void **);
    ULONG (*AddRef)(struct IAddrTrackingControl *);
    ULONG (*Release)(struct IAddrTrackingControl *);
    HRESULT (*EnableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
    HRESULT (*DisableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
};

struct IAddrTrackingControl {
    struct IAddrTrackingControlVtbl *lpVtbl;
};

typedef STGMEDIUM *LPSTGMEDIUM;

typedef enum tagMKREDUCE {
    MKRREDUCE_ALL=0,
    MKRREDUCE_THROUGHUSER=65536,
    MKRREDUCE_TOUSER=131072,
    MKRREDUCE_ONE=196608
} tagMKREDUCE;

typedef enum tagMKREDUCE MKRREDUCE;

typedef struct ITimeAndNoticeControl ITimeAndNoticeControl, *PITimeAndNoticeControl;

typedef struct ITimeAndNoticeControlVtbl ITimeAndNoticeControlVtbl, *PITimeAndNoticeControlVtbl;

struct ITimeAndNoticeControl {
    struct ITimeAndNoticeControlVtbl *lpVtbl;
};

struct ITimeAndNoticeControlVtbl {
    HRESULT (*QueryInterface)(struct ITimeAndNoticeControl *, IID *, void **);
    ULONG (*AddRef)(struct ITimeAndNoticeControl *);
    ULONG (*Release)(struct ITimeAndNoticeControl *);
    HRESULT (*SuppressChanges)(struct ITimeAndNoticeControl *, DWORD, DWORD);
};

typedef RemSNB *wireSNB;

typedef enum tagADVF ADVF;

typedef struct AsyncIMultiQIVtbl AsyncIMultiQIVtbl, *PAsyncIMultiQIVtbl;

typedef struct AsyncIMultiQI AsyncIMultiQI, *PAsyncIMultiQI;

struct AsyncIMultiQI {
    struct AsyncIMultiQIVtbl *lpVtbl;
};

struct AsyncIMultiQIVtbl {
    HRESULT (*QueryInterface)(struct AsyncIMultiQI *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIMultiQI *);
    ULONG (*Release)(struct AsyncIMultiQI *);
    HRESULT (*Begin_QueryMultipleInterfaces)(struct AsyncIMultiQI *, ULONG, MULTI_QI *);
    HRESULT (*Finish_QueryMultipleInterfaces)(struct AsyncIMultiQI *, MULTI_QI *);
};

typedef struct IEnumMoniker *LPENUMMONIKER;

typedef struct IServerSecurity IServerSecurity, *PIServerSecurity;

typedef struct IServerSecurityVtbl IServerSecurityVtbl, *PIServerSecurityVtbl;

struct IServerSecurityVtbl {
    HRESULT (*QueryInterface)(struct IServerSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IServerSecurity *);
    ULONG (*Release)(struct IServerSecurity *);
    HRESULT (*QueryBlanket)(struct IServerSecurity *, DWORD *, DWORD *, OLECHAR **, DWORD *, DWORD *, void **, DWORD *);
    HRESULT (*ImpersonateClient)(struct IServerSecurity *);
    HRESULT (*RevertToSelf)(struct IServerSecurity *);
    BOOL (*IsImpersonating)(struct IServerSecurity *);
};

struct IServerSecurity {
    struct IServerSecurityVtbl *lpVtbl;
};

typedef enum tagLOCKTYPE LOCKTYPE;

typedef struct IEnumString *LPENUMSTRING;

typedef struct IEnumSTATSTG *LPENUMSTATSTG;

typedef struct tagBIND_OPTS *LPBIND_OPTS;

typedef struct IMallocSpy *LPMALLOCSPY;

typedef userSTGMEDIUM *wireSTGMEDIUM;

typedef enum tagCALLTYPE CALLTYPE;

typedef struct IAddrTrackingControl *LPADDRTRACKINGCONTROL;

typedef enum __MIDL___MIDL_itf_objidl_0055_0001 {
    COMBND_RPCTIMEOUT=1
} __MIDL___MIDL_itf_objidl_0055_0001;

typedef struct IAddrExclusionControl *LPADDREXCLUSIONCONTROL;

typedef struct tagSOLE_AUTHENTICATION_INFO *PSOLE_AUTHENTICATION_INFO;

typedef enum tagSTGTY STGTY;

typedef enum tagBIND_FLAGS BIND_FLAGS;

typedef struct IMultiQI *LPMULTIQI;

#define COLE_DEFAULT_AUTHINFO -1

#define COLE_DEFAULT_PRINCIPAL -1

typedef struct _CONTEXT _CONTEXT, *P_CONTEXT;

struct _CONTEXT {
};

typedef enum _EXCEPTION_DISPOSITION {
    ExceptionContinueExecution=0,
    ExceptionContinueSearch=1,
    ExceptionNestedException=2,
    ExceptionCollidedUnwind=3
} _EXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_RECORD _EXCEPTION_RECORD, *P_EXCEPTION_RECORD;

struct _EXCEPTION_RECORD {
};

typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_POINTERS _EXCEPTION_POINTERS, *P_EXCEPTION_POINTERS;


/* WARNING! conflicting data type names: /deps/winnt.h/_EXCEPTION_RECORD - /deps/excpt.h/_EXCEPTION_RECORD */

typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;

typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;


/* WARNING! conflicting data type names: /deps/winnt.h/_CONTEXT - /deps/excpt.h/_CONTEXT */

typedef struct _CONTEXT CONTEXT;

typedef CONTEXT *PCONTEXT;

struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
};

#define EXCEPTION_EXECUTE_HANDLER 1

#define EXCEPTION_CONTINUE_SEARCH 0

#define EXCEPTION_CONTINUE_EXECUTION -1

typedef struct ID3DXRenderToEnvMap ID3DXRenderToEnvMap, *PID3DXRenderToEnvMap;

typedef struct ID3DXRenderToEnvMapVtbl ID3DXRenderToEnvMapVtbl, *PID3DXRenderToEnvMapVtbl;

typedef struct IDirect3DVolume8 IDirect3DVolume8, *PIDirect3DVolume8;

typedef struct IDirect3DDevice8 IDirect3DDevice8, *PIDirect3DDevice8;

typedef struct IDirect3DDevice8 *LPDIRECT3DDEVICE8;

typedef struct _D3DXRTE_DESC _D3DXRTE_DESC, *P_D3DXRTE_DESC;

typedef struct _D3DXRTE_DESC D3DXRTE_DESC;

typedef struct IDirect3DCubeTexture8 IDirect3DCubeTexture8, *PIDirect3DCubeTexture8;

typedef struct IDirect3DCubeTexture8 *LPDIRECT3DCUBETEXTURE8;

typedef struct IDirect3DTexture8 IDirect3DTexture8, *PIDirect3DTexture8;

typedef struct IDirect3DTexture8 *LPDIRECT3DTEXTURE8;

typedef enum _D3DCUBEMAP_FACES {
    D3DCUBEMAP_FACE_POSITIVE_X=0,
    D3DCUBEMAP_FACE_NEGATIVE_X=1,
    D3DCUBEMAP_FACE_POSITIVE_Y=2,
    D3DCUBEMAP_FACE_NEGATIVE_Y=3,
    D3DCUBEMAP_FACE_POSITIVE_Z=4,
    D3DCUBEMAP_FACE_NEGATIVE_Z=5,
    D3DCUBEMAP_FACE_FORCE_DWORD=2147483647
} _D3DCUBEMAP_FACES;

typedef enum _D3DCUBEMAP_FACES D3DCUBEMAP_FACES;

typedef struct IDirect3DVolume8Vtbl IDirect3DVolume8Vtbl, *PIDirect3DVolume8Vtbl;

typedef struct _D3DVOLUME_DESC _D3DVOLUME_DESC, *P_D3DVOLUME_DESC;

typedef struct _D3DVOLUME_DESC D3DVOLUME_DESC;

typedef struct _D3DLOCKED_BOX _D3DLOCKED_BOX, *P_D3DLOCKED_BOX;

typedef struct _D3DLOCKED_BOX D3DLOCKED_BOX;

typedef struct _D3DBOX _D3DBOX, *P_D3DBOX;

typedef struct _D3DBOX D3DBOX;

typedef struct IDirect3DDevice8Vtbl IDirect3DDevice8Vtbl, *PIDirect3DDevice8Vtbl;

typedef struct IDirect3D8 IDirect3D8, *PIDirect3D8;

typedef struct _D3DDISPLAYMODE _D3DDISPLAYMODE, *P_D3DDISPLAYMODE;

typedef struct _D3DDISPLAYMODE D3DDISPLAYMODE;

typedef struct _D3DDEVICE_CREATION_PARAMETERS _D3DDEVICE_CREATION_PARAMETERS, *P_D3DDEVICE_CREATION_PARAMETERS;

typedef struct _D3DDEVICE_CREATION_PARAMETERS D3DDEVICE_CREATION_PARAMETERS;

typedef struct IDirect3DSurface8 IDirect3DSurface8, *PIDirect3DSurface8;

typedef struct _D3DPRESENT_PARAMETERS_ _D3DPRESENT_PARAMETERS_, *P_D3DPRESENT_PARAMETERS_;

typedef struct _D3DPRESENT_PARAMETERS_ D3DPRESENT_PARAMETERS;

typedef struct IDirect3DSwapChain8 IDirect3DSwapChain8, *PIDirect3DSwapChain8;

typedef struct _RGNDATA _RGNDATA, *P_RGNDATA;

typedef struct _RGNDATA RGNDATA;

typedef enum _D3DBACKBUFFER_TYPE {
    D3DBACKBUFFER_TYPE_MONO=0,
    D3DBACKBUFFER_TYPE_LEFT=1,
    D3DBACKBUFFER_TYPE_RIGHT=2,
    D3DBACKBUFFER_TYPE_FORCE_DWORD=2147483647
} _D3DBACKBUFFER_TYPE;

typedef enum _D3DBACKBUFFER_TYPE D3DBACKBUFFER_TYPE;

typedef struct _D3DRASTER_STATUS _D3DRASTER_STATUS, *P_D3DRASTER_STATUS;

typedef struct _D3DRASTER_STATUS D3DRASTER_STATUS;

typedef struct _D3DGAMMARAMP _D3DGAMMARAMP, *P_D3DGAMMARAMP;

typedef struct _D3DGAMMARAMP D3DGAMMARAMP;

typedef enum _D3DPOOL {
    D3DPOOL_DEFAULT=0,
    D3DPOOL_MANAGED=1,
    D3DPOOL_SYSTEMMEM=2,
    D3DPOOL_FORCE_DWORD=2147483647
} _D3DPOOL;

typedef enum _D3DPOOL D3DPOOL;

typedef struct IDirect3DVolumeTexture8 IDirect3DVolumeTexture8, *PIDirect3DVolumeTexture8;

typedef struct IDirect3DVertexBuffer8 IDirect3DVertexBuffer8, *PIDirect3DVertexBuffer8;

typedef struct IDirect3DIndexBuffer8 IDirect3DIndexBuffer8, *PIDirect3DIndexBuffer8;

typedef enum _D3DMULTISAMPLE_TYPE {
    D3DMULTISAMPLE_NONE=0,
    D3DMULTISAMPLE_2_SAMPLES=2,
    D3DMULTISAMPLE_3_SAMPLES=3,
    D3DMULTISAMPLE_4_SAMPLES=4,
    D3DMULTISAMPLE_5_SAMPLES=5,
    D3DMULTISAMPLE_6_SAMPLES=6,
    D3DMULTISAMPLE_7_SAMPLES=7,
    D3DMULTISAMPLE_8_SAMPLES=8,
    D3DMULTISAMPLE_9_SAMPLES=9,
    D3DMULTISAMPLE_10_SAMPLES=10,
    D3DMULTISAMPLE_11_SAMPLES=11,
    D3DMULTISAMPLE_12_SAMPLES=12,
    D3DMULTISAMPLE_13_SAMPLES=13,
    D3DMULTISAMPLE_14_SAMPLES=14,
    D3DMULTISAMPLE_15_SAMPLES=15,
    D3DMULTISAMPLE_16_SAMPLES=16,
    D3DMULTISAMPLE_FORCE_DWORD=2147483647
} _D3DMULTISAMPLE_TYPE;

typedef enum _D3DMULTISAMPLE_TYPE D3DMULTISAMPLE_TYPE;

typedef struct IDirect3DBaseTexture8 IDirect3DBaseTexture8, *PIDirect3DBaseTexture8;

typedef struct _D3DRECT _D3DRECT, *P_D3DRECT;

typedef struct _D3DRECT D3DRECT;

typedef enum _D3DTRANSFORMSTATETYPE {
    D3DTS_VIEW=2,
    D3DTS_PROJECTION=3,
    D3DTS_TEXTURE0=16,
    D3DTS_TEXTURE1=17,
    D3DTS_TEXTURE2=18,
    D3DTS_TEXTURE3=19,
    D3DTS_TEXTURE4=20,
    D3DTS_TEXTURE5=21,
    D3DTS_TEXTURE6=22,
    D3DTS_TEXTURE7=23,
    D3DTS_FORCE_DWORD=2147483647
} _D3DTRANSFORMSTATETYPE;

typedef enum _D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATETYPE;

typedef struct _D3DVIEWPORT8 _D3DVIEWPORT8, *P_D3DVIEWPORT8;

typedef struct _D3DVIEWPORT8 D3DVIEWPORT8;

typedef struct _D3DMATERIAL8 _D3DMATERIAL8, *P_D3DMATERIAL8;

typedef struct _D3DMATERIAL8 D3DMATERIAL8;

typedef struct _D3DLIGHT8 _D3DLIGHT8, *P_D3DLIGHT8;

typedef struct _D3DLIGHT8 D3DLIGHT8;

typedef enum _D3DRENDERSTATETYPE {
    D3DRS_ZENABLE=7,
    D3DRS_FILLMODE=8,
    D3DRS_SHADEMODE=9,
    D3DRS_LINEPATTERN=10,
    D3DRS_ZWRITEENABLE=14,
    D3DRS_ALPHATESTENABLE=15,
    D3DRS_LASTPIXEL=16,
    D3DRS_SRCBLEND=19,
    D3DRS_DESTBLEND=20,
    D3DRS_CULLMODE=22,
    D3DRS_ZFUNC=23,
    D3DRS_ALPHAREF=24,
    D3DRS_ALPHAFUNC=25,
    D3DRS_DITHERENABLE=26,
    D3DRS_ALPHABLENDENABLE=27,
    D3DRS_FOGENABLE=28,
    D3DRS_SPECULARENABLE=29,
    D3DRS_ZVISIBLE=30,
    D3DRS_FOGCOLOR=34,
    D3DRS_FOGTABLEMODE=35,
    D3DRS_FOGSTART=36,
    D3DRS_FOGEND=37,
    D3DRS_FOGDENSITY=38,
    D3DRS_EDGEANTIALIAS=40,
    D3DRS_ZBIAS=47,
    D3DRS_RANGEFOGENABLE=48,
    D3DRS_STENCILENABLE=52,
    D3DRS_STENCILFAIL=53,
    D3DRS_STENCILZFAIL=54,
    D3DRS_STENCILPASS=55,
    D3DRS_STENCILFUNC=56,
    D3DRS_STENCILREF=57,
    D3DRS_STENCILMASK=58,
    D3DRS_STENCILWRITEMASK=59,
    D3DRS_TEXTUREFACTOR=60,
    D3DRS_WRAP0=128,
    D3DRS_WRAP1=129,
    D3DRS_WRAP2=130,
    D3DRS_WRAP3=131,
    D3DRS_WRAP4=132,
    D3DRS_WRAP5=133,
    D3DRS_WRAP6=134,
    D3DRS_WRAP7=135,
    D3DRS_CLIPPING=136,
    D3DRS_LIGHTING=137,
    D3DRS_AMBIENT=139,
    D3DRS_FOGVERTEXMODE=140,
    D3DRS_COLORVERTEX=141,
    D3DRS_LOCALVIEWER=142,
    D3DRS_NORMALIZENORMALS=143,
    D3DRS_DIFFUSEMATERIALSOURCE=145,
    D3DRS_SPECULARMATERIALSOURCE=146,
    D3DRS_AMBIENTMATERIALSOURCE=147,
    D3DRS_EMISSIVEMATERIALSOURCE=148,
    D3DRS_VERTEXBLEND=151,
    D3DRS_CLIPPLANEENABLE=152,
    D3DRS_SOFTWAREVERTEXPROCESSING=153,
    D3DRS_POINTSIZE=154,
    D3DRS_POINTSIZE_MIN=155,
    D3DRS_POINTSPRITEENABLE=156,
    D3DRS_POINTSCALEENABLE=157,
    D3DRS_POINTSCALE_A=158,
    D3DRS_POINTSCALE_B=159,
    D3DRS_POINTSCALE_C=160,
    D3DRS_MULTISAMPLEANTIALIAS=161,
    D3DRS_MULTISAMPLEMASK=162,
    D3DRS_PATCHEDGESTYLE=163,
    D3DRS_PATCHSEGMENTS=164,
    D3DRS_DEBUGMONITORTOKEN=165,
    D3DRS_POINTSIZE_MAX=166,
    D3DRS_INDEXEDVERTEXBLENDENABLE=167,
    D3DRS_COLORWRITEENABLE=168,
    D3DRS_TWEENFACTOR=170,
    D3DRS_BLENDOP=171,
    D3DRS_FORCE_DWORD=2147483647
} _D3DRENDERSTATETYPE;

typedef enum _D3DRENDERSTATETYPE D3DRENDERSTATETYPE;

typedef enum _D3DSTATEBLOCKTYPE {
    D3DSBT_ALL=1,
    D3DSBT_PIXELSTATE=2,
    D3DSBT_VERTEXSTATE=3,
    D3DSBT_FORCE_DWORD=2147483647
} _D3DSTATEBLOCKTYPE;

typedef enum _D3DSTATEBLOCKTYPE D3DSTATEBLOCKTYPE;

typedef struct _D3DCLIPSTATUS8 _D3DCLIPSTATUS8, *P_D3DCLIPSTATUS8;

typedef struct _D3DCLIPSTATUS8 D3DCLIPSTATUS8;

typedef enum _D3DTEXTURESTAGESTATETYPE {
    D3DTSS_COLOROP=1,
    D3DTSS_COLORARG1=2,
    D3DTSS_COLORARG2=3,
    D3DTSS_ALPHAOP=4,
    D3DTSS_ALPHAARG1=5,
    D3DTSS_ALPHAARG2=6,
    D3DTSS_BUMPENVMAT00=7,
    D3DTSS_BUMPENVMAT01=8,
    D3DTSS_BUMPENVMAT10=9,
    D3DTSS_BUMPENVMAT11=10,
    D3DTSS_TEXCOORDINDEX=11,
    D3DTSS_ADDRESSU=13,
    D3DTSS_ADDRESSV=14,
    D3DTSS_BORDERCOLOR=15,
    D3DTSS_MAGFILTER=16,
    D3DTSS_MINFILTER=17,
    D3DTSS_MIPFILTER=18,
    D3DTSS_MIPMAPLODBIAS=19,
    D3DTSS_MAXMIPLEVEL=20,
    D3DTSS_MAXANISOTROPY=21,
    D3DTSS_BUMPENVLSCALE=22,
    D3DTSS_BUMPENVLOFFSET=23,
    D3DTSS_TEXTURETRANSFORMFLAGS=24,
    D3DTSS_ADDRESSW=25,
    D3DTSS_COLORARG0=26,
    D3DTSS_ALPHAARG0=27,
    D3DTSS_RESULTARG=28,
    D3DTSS_FORCE_DWORD=2147483647
} _D3DTEXTURESTAGESTATETYPE;

typedef enum _D3DTEXTURESTAGESTATETYPE D3DTEXTURESTAGESTATETYPE;

typedef enum _D3DPRIMITIVETYPE {
    D3DPT_POINTLIST=1,
    D3DPT_LINELIST=2,
    D3DPT_LINESTRIP=3,
    D3DPT_TRIANGLELIST=4,
    D3DPT_TRIANGLESTRIP=5,
    D3DPT_TRIANGLEFAN=6,
    D3DPT_FORCE_DWORD=2147483647
} _D3DPRIMITIVETYPE;

typedef enum _D3DPRIMITIVETYPE D3DPRIMITIVETYPE;

typedef struct _D3DRECTPATCH_INFO _D3DRECTPATCH_INFO, *P_D3DRECTPATCH_INFO;

typedef struct _D3DRECTPATCH_INFO D3DRECTPATCH_INFO;

typedef struct _D3DTRIPATCH_INFO _D3DTRIPATCH_INFO, *P_D3DTRIPATCH_INFO;

typedef struct _D3DTRIPATCH_INFO D3DTRIPATCH_INFO;

typedef struct IDirect3DCubeTexture8Vtbl IDirect3DCubeTexture8Vtbl, *PIDirect3DCubeTexture8Vtbl;

typedef enum _D3DRESOURCETYPE {
    D3DRTYPE_SURFACE=1,
    D3DRTYPE_VOLUME=2,
    D3DRTYPE_TEXTURE=3,
    D3DRTYPE_VOLUMETEXTURE=4,
    D3DRTYPE_CUBETEXTURE=5,
    D3DRTYPE_VERTEXBUFFER=6,
    D3DRTYPE_INDEXBUFFER=7,
    D3DRTYPE_FORCE_DWORD=2147483647
} _D3DRESOURCETYPE;

typedef enum _D3DRESOURCETYPE D3DRESOURCETYPE;

typedef struct _D3DSURFACE_DESC _D3DSURFACE_DESC, *P_D3DSURFACE_DESC;

typedef struct _D3DSURFACE_DESC D3DSURFACE_DESC;

typedef struct _D3DLOCKED_RECT _D3DLOCKED_RECT, *P_D3DLOCKED_RECT;

typedef struct _D3DLOCKED_RECT D3DLOCKED_RECT;

typedef struct IDirect3DTexture8Vtbl IDirect3DTexture8Vtbl, *PIDirect3DTexture8Vtbl;

typedef int INT;

typedef struct IDirect3D8Vtbl IDirect3D8Vtbl, *PIDirect3D8Vtbl;

typedef struct _D3DADAPTER_IDENTIFIER8 _D3DADAPTER_IDENTIFIER8, *P_D3DADAPTER_IDENTIFIER8;

typedef struct _D3DADAPTER_IDENTIFIER8 D3DADAPTER_IDENTIFIER8;

typedef struct HMONITOR__ HMONITOR__, *PHMONITOR__;

typedef struct HMONITOR__ *HMONITOR;

typedef struct IDirect3DSurface8Vtbl IDirect3DSurface8Vtbl, *PIDirect3DSurface8Vtbl;

typedef enum _D3DSWAPEFFECT {
    D3DSWAPEFFECT_DISCARD=1,
    D3DSWAPEFFECT_FLIP=2,
    D3DSWAPEFFECT_COPY=3,
    D3DSWAPEFFECT_COPY_VSYNC=4,
    D3DSWAPEFFECT_FORCE_DWORD=2147483647
} _D3DSWAPEFFECT;

typedef enum _D3DSWAPEFFECT D3DSWAPEFFECT;

typedef struct IDirect3DSwapChain8Vtbl IDirect3DSwapChain8Vtbl, *PIDirect3DSwapChain8Vtbl;

typedef struct _RGNDATAHEADER _RGNDATAHEADER, *P_RGNDATAHEADER;

typedef struct _RGNDATAHEADER RGNDATAHEADER;

typedef struct IDirect3DVolumeTexture8Vtbl IDirect3DVolumeTexture8Vtbl, *PIDirect3DVolumeTexture8Vtbl;

typedef struct IDirect3DVertexBuffer8Vtbl IDirect3DVertexBuffer8Vtbl, *PIDirect3DVertexBuffer8Vtbl;

typedef struct _D3DVERTEXBUFFER_DESC _D3DVERTEXBUFFER_DESC, *P_D3DVERTEXBUFFER_DESC;

typedef struct _D3DVERTEXBUFFER_DESC D3DVERTEXBUFFER_DESC;

typedef struct IDirect3DIndexBuffer8Vtbl IDirect3DIndexBuffer8Vtbl, *PIDirect3DIndexBuffer8Vtbl;

typedef struct _D3DINDEXBUFFER_DESC _D3DINDEXBUFFER_DESC, *P_D3DINDEXBUFFER_DESC;

typedef struct _D3DINDEXBUFFER_DESC D3DINDEXBUFFER_DESC;

typedef struct IDirect3DBaseTexture8Vtbl IDirect3DBaseTexture8Vtbl, *PIDirect3DBaseTexture8Vtbl;

typedef struct _D3DCOLORVALUE _D3DCOLORVALUE, *P_D3DCOLORVALUE;

typedef struct _D3DCOLORVALUE D3DCOLORVALUE;

typedef enum _D3DLIGHTTYPE {
    D3DLIGHT_POINT=1,
    D3DLIGHT_SPOT=2,
    D3DLIGHT_DIRECTIONAL=3,
    D3DLIGHT_FORCE_DWORD=2147483647
} _D3DLIGHTTYPE;

typedef enum _D3DLIGHTTYPE D3DLIGHTTYPE;

typedef struct _D3DVECTOR D3DVECTOR;

typedef enum _D3DBASISTYPE {
    D3DBASIS_BEZIER=0,
    D3DBASIS_BSPLINE=1,
    D3DBASIS_INTERPOLATE=2,
    D3DBASIS_FORCE_DWORD=2147483647
} _D3DBASISTYPE;

typedef enum _D3DBASISTYPE D3DBASISTYPE;

typedef enum _D3DORDERTYPE {
    D3DORDER_LINEAR=1,
    D3DORDER_CUBIC=3,
    D3DORDER_QUINTIC=5,
    D3DORDER_FORCE_DWORD=2147483647
} _D3DORDERTYPE;

typedef enum _D3DORDERTYPE D3DORDERTYPE;

struct ID3DXRenderToEnvMap {
    struct ID3DXRenderToEnvMapVtbl *lpVtbl;
};

struct _D3DINDEXBUFFER_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
};

struct _D3DXRTE_DESC {
    UINT Size;
    D3DFORMAT Format;
    BOOL DepthStencil;
    D3DFORMAT DepthStencilFormat;
};

struct _D3DGAMMARAMP {
    WORD red[256];
    WORD green[256];
    WORD blue[256];
};

struct IDirect3DVolume8 {
    struct IDirect3DVolume8Vtbl *lpVtbl;
};

struct IDirect3DVolumeTexture8 {
    struct IDirect3DVolumeTexture8Vtbl *lpVtbl;
};

struct _RGNDATAHEADER {
    DWORD dwSize;
    DWORD iType;
    DWORD nCount;
    DWORD nRgnSize;
    RECT rcBound;
};

struct IDirect3DTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DTexture8 *);
    ULONG (*Release)(struct IDirect3DTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DTexture8 *);
    void (*PreLoad)(struct IDirect3DTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DTexture8 *, UINT, D3DSURFACE_DESC *);
    HRESULT (*GetSurfaceLevel)(struct IDirect3DTexture8 *, UINT, struct IDirect3DSurface8 **);
    HRESULT (*LockRect)(struct IDirect3DTexture8 *, UINT, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DTexture8 *, UINT);
    HRESULT (*AddDirtyRect)(struct IDirect3DTexture8 *, RECT *);
};

struct _D3DRECTPATCH_INFO {
    UINT StartVertexOffsetWidth;
    UINT StartVertexOffsetHeight;
    UINT Width;
    UINT Height;
    UINT Stride;
    D3DBASISTYPE Basis;
    D3DORDERTYPE Order;
};

struct IDirect3DDevice8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DDevice8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DDevice8 *);
    ULONG (*Release)(struct IDirect3DDevice8 *);
    HRESULT (*TestCooperativeLevel)(struct IDirect3DDevice8 *);
    UINT (*GetAvailableTextureMem)(struct IDirect3DDevice8 *);
    HRESULT (*ResourceManagerDiscardBytes)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetDirect3D)(struct IDirect3DDevice8 *, struct IDirect3D8 **);
    HRESULT (*GetDeviceCaps)(struct IDirect3DDevice8 *, D3DCAPS8 *);
    HRESULT (*GetDisplayMode)(struct IDirect3DDevice8 *, D3DDISPLAYMODE *);
    HRESULT (*GetCreationParameters)(struct IDirect3DDevice8 *, D3DDEVICE_CREATION_PARAMETERS *);
    HRESULT (*SetCursorProperties)(struct IDirect3DDevice8 *, UINT, UINT, struct IDirect3DSurface8 *);
    void (*SetCursorPosition)(struct IDirect3DDevice8 *, UINT, UINT, DWORD);
    BOOL (*ShowCursor)(struct IDirect3DDevice8 *, BOOL);
    HRESULT (*CreateAdditionalSwapChain)(struct IDirect3DDevice8 *, D3DPRESENT_PARAMETERS *, struct IDirect3DSwapChain8 **);
    HRESULT (*Reset)(struct IDirect3DDevice8 *, D3DPRESENT_PARAMETERS *);
    HRESULT (*Present)(struct IDirect3DDevice8 *, RECT *, RECT *, HWND, RGNDATA *);
    HRESULT (*GetBackBuffer)(struct IDirect3DDevice8 *, UINT, D3DBACKBUFFER_TYPE, struct IDirect3DSurface8 **);
    HRESULT (*GetRasterStatus)(struct IDirect3DDevice8 *, D3DRASTER_STATUS *);
    void (*SetGammaRamp)(struct IDirect3DDevice8 *, DWORD, D3DGAMMARAMP *);
    void (*GetGammaRamp)(struct IDirect3DDevice8 *, D3DGAMMARAMP *);
    HRESULT (*CreateTexture)(struct IDirect3DDevice8 *, UINT, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DTexture8 **);
    HRESULT (*CreateVolumeTexture)(struct IDirect3DDevice8 *, UINT, UINT, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DVolumeTexture8 **);
    HRESULT (*CreateCubeTexture)(struct IDirect3DDevice8 *, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DCubeTexture8 **);
    HRESULT (*CreateVertexBuffer)(struct IDirect3DDevice8 *, UINT, DWORD, DWORD, D3DPOOL, struct IDirect3DVertexBuffer8 **);
    HRESULT (*CreateIndexBuffer)(struct IDirect3DDevice8 *, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DIndexBuffer8 **);
    HRESULT (*CreateRenderTarget)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, D3DMULTISAMPLE_TYPE, BOOL, struct IDirect3DSurface8 **);
    HRESULT (*CreateDepthStencilSurface)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, D3DMULTISAMPLE_TYPE, struct IDirect3DSurface8 **);
    HRESULT (*CreateImageSurface)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, struct IDirect3DSurface8 **);
    HRESULT (*CopyRects)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *, RECT *, UINT, struct IDirect3DSurface8 *, POINT *);
    HRESULT (*UpdateTexture)(struct IDirect3DDevice8 *, struct IDirect3DBaseTexture8 *, struct IDirect3DBaseTexture8 *);
    HRESULT (*GetFrontBuffer)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *);
    HRESULT (*SetRenderTarget)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *, struct IDirect3DSurface8 *);
    HRESULT (*GetRenderTarget)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 **);
    HRESULT (*GetDepthStencilSurface)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 **);
    HRESULT (*BeginScene)(struct IDirect3DDevice8 *);
    HRESULT (*EndScene)(struct IDirect3DDevice8 *);
    HRESULT (*Clear)(struct IDirect3DDevice8 *, DWORD, D3DRECT *, DWORD, D3DCOLOR, float, DWORD);
    HRESULT (*SetTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*GetTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*MultiplyTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*SetViewport)(struct IDirect3DDevice8 *, D3DVIEWPORT8 *);
    HRESULT (*GetViewport)(struct IDirect3DDevice8 *, D3DVIEWPORT8 *);
    HRESULT (*SetMaterial)(struct IDirect3DDevice8 *, D3DMATERIAL8 *);
    HRESULT (*GetMaterial)(struct IDirect3DDevice8 *, D3DMATERIAL8 *);
    HRESULT (*SetLight)(struct IDirect3DDevice8 *, DWORD, D3DLIGHT8 *);
    HRESULT (*GetLight)(struct IDirect3DDevice8 *, DWORD, D3DLIGHT8 *);
    HRESULT (*LightEnable)(struct IDirect3DDevice8 *, DWORD, BOOL);
    HRESULT (*GetLightEnable)(struct IDirect3DDevice8 *, DWORD, BOOL *);
    HRESULT (*SetClipPlane)(struct IDirect3DDevice8 *, DWORD, float *);
    HRESULT (*GetClipPlane)(struct IDirect3DDevice8 *, DWORD, float *);
    HRESULT (*SetRenderState)(struct IDirect3DDevice8 *, D3DRENDERSTATETYPE, DWORD);
    HRESULT (*GetRenderState)(struct IDirect3DDevice8 *, D3DRENDERSTATETYPE, DWORD *);
    HRESULT (*BeginStateBlock)(struct IDirect3DDevice8 *);
    HRESULT (*EndStateBlock)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*ApplyStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*CaptureStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*DeleteStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*CreateStateBlock)(struct IDirect3DDevice8 *, D3DSTATEBLOCKTYPE, DWORD *);
    HRESULT (*SetClipStatus)(struct IDirect3DDevice8 *, D3DCLIPSTATUS8 *);
    HRESULT (*GetClipStatus)(struct IDirect3DDevice8 *, D3DCLIPSTATUS8 *);
    HRESULT (*GetTexture)(struct IDirect3DDevice8 *, DWORD, struct IDirect3DBaseTexture8 **);
    HRESULT (*SetTexture)(struct IDirect3DDevice8 *, DWORD, struct IDirect3DBaseTexture8 *);
    HRESULT (*GetTextureStageState)(struct IDirect3DDevice8 *, DWORD, D3DTEXTURESTAGESTATETYPE, DWORD *);
    HRESULT (*SetTextureStageState)(struct IDirect3DDevice8 *, DWORD, D3DTEXTURESTAGESTATETYPE, DWORD);
    HRESULT (*ValidateDevice)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*GetInfo)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*SetPaletteEntries)(struct IDirect3DDevice8 *, UINT, PALETTEENTRY *);
    HRESULT (*GetPaletteEntries)(struct IDirect3DDevice8 *, UINT, PALETTEENTRY *);
    HRESULT (*SetCurrentTexturePalette)(struct IDirect3DDevice8 *, UINT);
    HRESULT (*GetCurrentTexturePalette)(struct IDirect3DDevice8 *, UINT *);
    HRESULT (*DrawPrimitive)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT);
    HRESULT (*DrawIndexedPrimitive)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT, UINT, UINT);
    HRESULT (*DrawPrimitiveUP)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, void *, UINT);
    HRESULT (*DrawIndexedPrimitiveUP)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT, UINT, void *, D3DFORMAT, void *, UINT);
    HRESULT (*ProcessVertices)(struct IDirect3DDevice8 *, UINT, UINT, UINT, struct IDirect3DVertexBuffer8 *, DWORD);
    HRESULT (*CreateVertexShader)(struct IDirect3DDevice8 *, DWORD *, DWORD *, DWORD *, DWORD);
    HRESULT (*SetVertexShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetVertexShader)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*DeleteVertexShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*SetVertexShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetVertexShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetVertexShaderDeclaration)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*GetVertexShaderFunction)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*SetStreamSource)(struct IDirect3DDevice8 *, UINT, struct IDirect3DVertexBuffer8 *, UINT);
    HRESULT (*GetStreamSource)(struct IDirect3DDevice8 *, UINT, struct IDirect3DVertexBuffer8 **, UINT *);
    HRESULT (*SetIndices)(struct IDirect3DDevice8 *, struct IDirect3DIndexBuffer8 *, UINT);
    HRESULT (*GetIndices)(struct IDirect3DDevice8 *, struct IDirect3DIndexBuffer8 **, UINT *);
    HRESULT (*CreatePixelShader)(struct IDirect3DDevice8 *, DWORD *, DWORD *);
    HRESULT (*SetPixelShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetPixelShader)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*DeletePixelShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*SetPixelShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetPixelShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetPixelShaderFunction)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*DrawRectPatch)(struct IDirect3DDevice8 *, UINT, float *, D3DRECTPATCH_INFO *);
    HRESULT (*DrawTriPatch)(struct IDirect3DDevice8 *, UINT, float *, D3DTRIPATCH_INFO *);
    HRESULT (*DeletePatch)(struct IDirect3DDevice8 *, UINT);
};

struct IDirect3D8 {
    struct IDirect3D8Vtbl *lpVtbl;
};

struct IDirect3DSurface8 {
    struct IDirect3DSurface8Vtbl *lpVtbl;
};

struct _D3DBOX {
    UINT Left;
    UINT Top;
    UINT Right;
    UINT Bottom;
    UINT Front;
    UINT Back;
};

struct _D3DDISPLAYMODE {
    UINT Width;
    UINT Height;
    UINT RefreshRate;
    D3DFORMAT Format;
};

struct ID3DXRenderToEnvMapVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DXRTE_DESC *);
    HRESULT (*BeginCube)(struct IDirect3DVolume8 *, LPDIRECT3DCUBETEXTURE8);
    HRESULT (*BeginSphere)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8);
    HRESULT (*BeginHemisphere)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, LPDIRECT3DTEXTURE8);
    HRESULT (*BeginParabolic)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, LPDIRECT3DTEXTURE8);
    HRESULT (*Face)(struct IDirect3DVolume8 *, D3DCUBEMAP_FACES);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

struct _D3DRASTER_STATUS {
    BOOL InVBlank;
    UINT ScanLine;
};

struct IDirect3DVolume8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVolume8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVolume8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVolume8 *, GUID *);
    HRESULT (*GetContainer)(struct IDirect3DVolume8 *, IID *, void **);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DVOLUME_DESC *);
    HRESULT (*LockBox)(struct IDirect3DVolume8 *, D3DLOCKED_BOX *, D3DBOX *, DWORD);
    HRESULT (*UnlockBox)(struct IDirect3DVolume8 *);
};

struct IDirect3DSurface8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DSurface8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DSurface8 *);
    ULONG (*Release)(struct IDirect3DSurface8 *);
    HRESULT (*GetDevice)(struct IDirect3DSurface8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DSurface8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DSurface8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DSurface8 *, GUID *);
    HRESULT (*GetContainer)(struct IDirect3DSurface8 *, IID *, void **);
    HRESULT (*GetDesc)(struct IDirect3DSurface8 *, D3DSURFACE_DESC *);
    HRESULT (*LockRect)(struct IDirect3DSurface8 *, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DSurface8 *);
};

struct _D3DCOLORVALUE {
    float r;
    float g;
    float b;
    float a;
};

struct _D3DMATERIAL8 {
    D3DCOLORVALUE Diffuse;
    D3DCOLORVALUE Ambient;
    D3DCOLORVALUE Specular;
    D3DCOLORVALUE Emissive;
    float Power;
};

struct IDirect3DIndexBuffer8 {
    struct IDirect3DIndexBuffer8Vtbl *lpVtbl;
};

struct _D3DLIGHT8 {
    D3DLIGHTTYPE Type;
    D3DCOLORVALUE Diffuse;
    D3DCOLORVALUE Specular;
    D3DCOLORVALUE Ambient;
    D3DVECTOR Position;
    D3DVECTOR Direction;
    float Range;
    float Falloff;
    float Attenuation0;
    float Attenuation1;
    float Attenuation2;
    float Theta;
    float Phi;
};

struct _D3DVIEWPORT8 {
    DWORD X;
    DWORD Y;
    DWORD Width;
    DWORD Height;
    float MinZ;
    float MaxZ;
};

struct IDirect3DDevice8 {
    struct IDirect3DDevice8Vtbl *lpVtbl;
};

struct _D3DADAPTER_IDENTIFIER8 {
    char Driver[512];
    char Description[512];
    LARGE_INTEGER DriverVersion;
    DWORD VendorId;
    DWORD DeviceId;
    DWORD SubSysId;
    DWORD Revision;
    GUID DeviceIdentifier;
    DWORD WHQLLevel;
};

struct IDirect3DBaseTexture8 {
    struct IDirect3DBaseTexture8Vtbl *lpVtbl;
};

struct IDirect3DVolumeTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolumeTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVolumeTexture8 *);
    ULONG (*Release)(struct IDirect3DVolumeTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolumeTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVolumeTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVolumeTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVolumeTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DVolumeTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DVolumeTexture8 *);
    void (*PreLoad)(struct IDirect3DVolumeTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DVolumeTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DVolumeTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DVolumeTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DVolumeTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DVolumeTexture8 *, UINT, D3DVOLUME_DESC *);
    HRESULT (*GetVolumeLevel)(struct IDirect3DVolumeTexture8 *, UINT, struct IDirect3DVolume8 **);
    HRESULT (*LockBox)(struct IDirect3DVolumeTexture8 *, UINT, D3DLOCKED_BOX *, D3DBOX *, DWORD);
    HRESULT (*UnlockBox)(struct IDirect3DVolumeTexture8 *, UINT);
    HRESULT (*AddDirtyBox)(struct IDirect3DVolumeTexture8 *, D3DBOX *);
};

struct _RGNDATA {
    RGNDATAHEADER rdh;
    char Buffer[1];
};

struct IDirect3DSwapChain8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DSwapChain8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DSwapChain8 *);
    ULONG (*Release)(struct IDirect3DSwapChain8 *);
    HRESULT (*Present)(struct IDirect3DSwapChain8 *, RECT *, RECT *, HWND, RGNDATA *);
    HRESULT (*GetBackBuffer)(struct IDirect3DSwapChain8 *, UINT, D3DBACKBUFFER_TYPE, struct IDirect3DSurface8 **);
};

struct IDirect3DVertexBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVertexBuffer8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVertexBuffer8 *);
    ULONG (*Release)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*GetDevice)(struct IDirect3DVertexBuffer8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVertexBuffer8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVertexBuffer8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVertexBuffer8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DVertexBuffer8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DVertexBuffer8 *);
    void (*PreLoad)(struct IDirect3DVertexBuffer8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*Lock)(struct IDirect3DVertexBuffer8 *, UINT, UINT, BYTE **, DWORD);
    HRESULT (*Unlock)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*GetDesc)(struct IDirect3DVertexBuffer8 *, D3DVERTEXBUFFER_DESC *);
};

struct _D3DSURFACE_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    D3DMULTISAMPLE_TYPE MultiSampleType;
    UINT Width;
    UINT Height;
};

struct IDirect3DBaseTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DBaseTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DBaseTexture8 *);
    ULONG (*Release)(struct IDirect3DBaseTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DBaseTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DBaseTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DBaseTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DBaseTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DBaseTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DBaseTexture8 *);
    void (*PreLoad)(struct IDirect3DBaseTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DBaseTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DBaseTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DBaseTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DBaseTexture8 *);
};

struct _D3DLOCKED_RECT {
    INT Pitch;
    void *pBits;
};

struct _D3DTRIPATCH_INFO {
    UINT StartVertexOffset;
    UINT NumVertices;
    D3DBASISTYPE Basis;
    D3DORDERTYPE Order;
};

struct _D3DLOCKED_BOX {
    INT RowPitch;
    INT SlicePitch;
    void *pBits;
};

struct IDirect3DSwapChain8 {
    struct IDirect3DSwapChain8Vtbl *lpVtbl;
};

struct _D3DPRESENT_PARAMETERS_ {
    UINT BackBufferWidth;
    UINT BackBufferHeight;
    D3DFORMAT BackBufferFormat;
    UINT BackBufferCount;
    D3DMULTISAMPLE_TYPE MultiSampleType;
    D3DSWAPEFFECT SwapEffect;
    HWND hDeviceWindow;
    BOOL Windowed;
    BOOL EnableAutoDepthStencil;
    D3DFORMAT AutoDepthStencilFormat;
    DWORD Flags;
    UINT FullScreen_RefreshRateInHz;
    UINT FullScreen_PresentationInterval;
};

struct IDirect3DVertexBuffer8 {
    struct IDirect3DVertexBuffer8Vtbl *lpVtbl;
};

struct _D3DCLIPSTATUS8 {
    DWORD ClipUnion;
    DWORD ClipIntersection;
};

struct IDirect3D8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3D8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3D8 *);
    ULONG (*Release)(struct IDirect3D8 *);
    HRESULT (*RegisterSoftwareDevice)(struct IDirect3D8 *, void *);
    UINT (*GetAdapterCount)(struct IDirect3D8 *);
    HRESULT (*GetAdapterIdentifier)(struct IDirect3D8 *, UINT, DWORD, D3DADAPTER_IDENTIFIER8 *);
    UINT (*GetAdapterModeCount)(struct IDirect3D8 *, UINT);
    HRESULT (*EnumAdapterModes)(struct IDirect3D8 *, UINT, UINT, D3DDISPLAYMODE *);
    HRESULT (*GetAdapterDisplayMode)(struct IDirect3D8 *, UINT, D3DDISPLAYMODE *);
    HRESULT (*CheckDeviceType)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, D3DFORMAT, BOOL);
    HRESULT (*CheckDeviceFormat)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, DWORD, D3DRESOURCETYPE, D3DFORMAT);
    HRESULT (*CheckDeviceMultiSampleType)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, BOOL, D3DMULTISAMPLE_TYPE);
    HRESULT (*CheckDepthStencilMatch)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, D3DFORMAT, D3DFORMAT);
    HRESULT (*GetDeviceCaps)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DCAPS8 *);
    HMONITOR (*GetAdapterMonitor)(struct IDirect3D8 *, UINT);
    HRESULT (*CreateDevice)(struct IDirect3D8 *, UINT, D3DDEVTYPE, HWND, DWORD, D3DPRESENT_PARAMETERS *, struct IDirect3DDevice8 **);
};

struct HMONITOR__ {
    int unused;
};

struct _D3DVOLUME_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    UINT Width;
    UINT Height;
    UINT Depth;
};

struct _D3DDEVICE_CREATION_PARAMETERS {
    UINT AdapterOrdinal;
    D3DDEVTYPE DeviceType;
    HWND hFocusWindow;
    DWORD BehaviorFlags;
};

struct _D3DVERTEXBUFFER_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    DWORD FVF;
};

struct IDirect3DIndexBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DIndexBuffer8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DIndexBuffer8 *);
    ULONG (*Release)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*GetDevice)(struct IDirect3DIndexBuffer8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DIndexBuffer8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DIndexBuffer8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DIndexBuffer8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DIndexBuffer8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DIndexBuffer8 *);
    void (*PreLoad)(struct IDirect3DIndexBuffer8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*Lock)(struct IDirect3DIndexBuffer8 *, UINT, UINT, BYTE **, DWORD);
    HRESULT (*Unlock)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*GetDesc)(struct IDirect3DIndexBuffer8 *, D3DINDEXBUFFER_DESC *);
};

struct IDirect3DCubeTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DCubeTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DCubeTexture8 *);
    ULONG (*Release)(struct IDirect3DCubeTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DCubeTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DCubeTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DCubeTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DCubeTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DCubeTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DCubeTexture8 *);
    void (*PreLoad)(struct IDirect3DCubeTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DCubeTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DCubeTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DCubeTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DCubeTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DCubeTexture8 *, UINT, D3DSURFACE_DESC *);
    HRESULT (*GetCubeMapSurface)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT, struct IDirect3DSurface8 **);
    HRESULT (*LockRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT);
    HRESULT (*AddDirtyRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, RECT *);
};

struct IDirect3DCubeTexture8 {
    struct IDirect3DCubeTexture8Vtbl *lpVtbl;
};

struct _D3DRECT {
    LONG x1;
    LONG y1;
    LONG x2;
    LONG y2;
};

struct IDirect3DTexture8 {
    struct IDirect3DTexture8Vtbl *lpVtbl;
};

typedef struct ID3DXSpriteVtbl ID3DXSpriteVtbl, *PID3DXSpriteVtbl;

typedef struct _D3DMATRIX D3DXMATRIX;

struct ID3DXSpriteVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*Begin)(struct IDirect3DVolume8 *);
    HRESULT (*Draw)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, RECT *, struct D3DXVECTOR2 *, struct D3DXVECTOR2 *, FLOAT, struct D3DXVECTOR2 *, D3DCOLOR);
    HRESULT (*DrawTransform)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, RECT *, D3DXMATRIX *, D3DCOLOR);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXRenderToSurface ID3DXRenderToSurface, *PID3DXRenderToSurface;

typedef struct ID3DXRenderToSurface *LPD3DXRENDERTOSURFACE;

typedef struct ID3DXRenderToSurfaceVtbl ID3DXRenderToSurfaceVtbl, *PID3DXRenderToSurfaceVtbl;

typedef struct _D3DXRTS_DESC _D3DXRTS_DESC, *P_D3DXRTS_DESC;

typedef struct _D3DXRTS_DESC D3DXRTS_DESC;

typedef struct IDirect3DSurface8 *LPDIRECT3DSURFACE8;

struct ID3DXRenderToSurface {
    struct ID3DXRenderToSurfaceVtbl *lpVtbl;
};

struct _D3DXRTS_DESC {
    UINT Width;
    UINT Height;
    D3DFORMAT Format;
    BOOL DepthStencil;
    D3DFORMAT DepthStencilFormat;
};

struct ID3DXRenderToSurfaceVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DXRTS_DESC *);
    HRESULT (*BeginScene)(struct IDirect3DVolume8 *, LPDIRECT3DSURFACE8, D3DVIEWPORT8 *);
    HRESULT (*EndScene)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXFont ID3DXFont, *PID3DXFont;

typedef struct ID3DXFont *LPD3DXFONT;

typedef struct ID3DXFontVtbl ID3DXFontVtbl, *PID3DXFontVtbl;

typedef struct tagLOGFONTA tagLOGFONTA, *PtagLOGFONTA;

typedef struct tagLOGFONTA LOGFONTA;

typedef LOGFONTA LOGFONT;

typedef struct tagRECT *LPRECT;

struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[32];
};

struct ID3DXFont {
    struct ID3DXFontVtbl *lpVtbl;
};

struct ID3DXFontVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetLogFont)(struct IDirect3DVolume8 *, LOGFONT *);
    HRESULT (*Begin)(struct IDirect3DVolume8 *);
    INT (*DrawTextA)(struct IDirect3DVolume8 *, LPCSTR, INT, LPRECT, DWORD, D3DCOLOR);
    INT (*DrawTextW)(struct IDirect3DVolume8 *, LPCWSTR, INT, LPRECT, DWORD, D3DCOLOR);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXSprite ID3DXSprite, *PID3DXSprite;

struct ID3DXSprite {
    struct ID3DXSpriteVtbl *lpVtbl;
};

typedef struct ID3DXBuffer ID3DXBuffer, *PID3DXBuffer;

typedef struct ID3DXBufferVtbl ID3DXBufferVtbl, *PID3DXBufferVtbl;

struct ID3DXBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    LPVOID (*GetBufferPointer)(struct IDirect3DVolume8 *);
    DWORD (*GetBufferSize)(struct IDirect3DVolume8 *);
};

struct ID3DXBuffer {
    struct ID3DXBufferVtbl *lpVtbl;
};

typedef struct ID3DXSprite *LPD3DXSPRITE;

typedef struct ID3DXRenderToEnvMap *LPD3DXRenderToEnvMap;

typedef struct ID3DXBuffer *LPD3DXBUFFER;

#define D3DXASM_DEBUG 1

#define D3DXASM_SKIPVALIDATION 2

#define D3DX_FILTER_NONE 1

#define D3DX_FILTER_TRIANGLE 4

#define D3DX_FILTER_MIRROR 458752

#define D3DX_FILTER_MIRROR_V 131072

#define D3DX_FILTER_MIRROR_U 65536

#define D3DX_FILTER_MIRROR_W 262144

#define D3DX_FILTER_POINT 2

#define D3DX_FILTER_DITHER 524288

#define D3DX_FILTER_BOX 5

#define D3DX_FILTER_LINEAR 3

typedef struct tagEMRSTRETCHBLT tagEMRSTRETCHBLT, *PtagEMRSTRETCHBLT;

typedef struct tagEMR tagEMR, *PtagEMR;

typedef struct tagEMR EMR;

typedef struct tagXFORM tagXFORM, *PtagXFORM;

typedef struct tagXFORM XFORM;

typedef DWORD COLORREF;

struct tagXFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

struct tagEMR {
    DWORD iType;
    DWORD nSize;
};

struct tagEMRSTRETCHBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRANGLEARC tagEMRANGLEARC, *PtagEMRANGLEARC;

typedef struct tagEMRANGLEARC *PEMRANGLEARC;

struct tagEMRANGLEARC {
    EMR emr;
    POINTL ptlCenter;
    DWORD nRadius;
    FLOAT eStartAngle;
    FLOAT eSweepAngle;
};

typedef struct tagEMRSCALEVIEWPORTEXTEX tagEMRSCALEVIEWPORTEXTEX, *PtagEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;

struct tagEMRSCALEVIEWPORTEXTEX {
    EMR emr;
    LONG xNum;
    LONG xDenom;
    LONG yNum;
    LONG yDenom;
};

typedef struct tagBITMAPFILEHEADER tagBITMAPFILEHEADER, *PtagBITMAPFILEHEADER;

struct tagBITMAPFILEHEADER {
    WORD bfType;
    DWORD bfSize;
    WORD bfReserved1;
    WORD bfReserved2;
    DWORD bfOffBits;
};

typedef struct tagEXTLOGFONTW tagEXTLOGFONTW, *PtagEXTLOGFONTW;

typedef struct tagEXTLOGFONTW *PEXTLOGFONTW;

typedef struct tagLOGFONTW tagLOGFONTW, *PtagLOGFONTW;

typedef struct tagLOGFONTW LOGFONTW;

typedef struct tagPANOSE tagPANOSE, *PtagPANOSE;

typedef struct tagPANOSE PANOSE;

struct tagLOGFONTW {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[32];
};

struct tagPANOSE {
    BYTE bFamilyType;
    BYTE bSerifStyle;
    BYTE bWeight;
    BYTE bProportion;
    BYTE bContrast;
    BYTE bStrokeVariation;
    BYTE bArmStyle;
    BYTE bLetterform;
    BYTE bMidline;
    BYTE bXHeight;
};

struct tagEXTLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

typedef struct _RGNDATA *PRGNDATA;

typedef struct tagEXTLOGFONTA tagEXTLOGFONTA, *PtagEXTLOGFONTA;

typedef struct tagEXTLOGFONTA *PEXTLOGFONTA;

struct tagEXTLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

typedef struct _RASTERIZER_STATUS _RASTERIZER_STATUS, *P_RASTERIZER_STATUS;

typedef struct _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

struct _RASTERIZER_STATUS {
    short nSize;
    short wFlags;
    short nLanguageID;
};

typedef struct tagNEWTEXTMETRICW tagNEWTEXTMETRICW, *PtagNEWTEXTMETRICW;

struct tagNEWTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

typedef struct tagLOGCOLORSPACEA tagLOGCOLORSPACEA, *PtagLOGCOLORSPACEA;

typedef LONG LCSCSTYPE;

typedef LONG LCSGAMUTMATCH;

typedef struct tagICEXYZTRIPLE tagICEXYZTRIPLE, *PtagICEXYZTRIPLE;

typedef struct tagICEXYZTRIPLE CIEXYZTRIPLE;

typedef struct tagCIEXYZ tagCIEXYZ, *PtagCIEXYZ;

typedef struct tagCIEXYZ CIEXYZ;

typedef long FXPT2DOT30;

struct tagCIEXYZ {
    FXPT2DOT30 ciexyzX;
    FXPT2DOT30 ciexyzY;
    FXPT2DOT30 ciexyzZ;
};

struct tagICEXYZTRIPLE {
    CIEXYZ ciexyzRed;
    CIEXYZ ciexyzGreen;
    CIEXYZ ciexyzBlue;
};

struct tagLOGCOLORSPACEA {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    CHAR lcsFilename[260];
};

typedef struct tagCHARSETINFO tagCHARSETINFO, *PtagCHARSETINFO;

typedef struct tagCHARSETINFO *NPCHARSETINFO;

typedef struct tagFONTSIGNATURE tagFONTSIGNATURE, *PtagFONTSIGNATURE;

typedef struct tagFONTSIGNATURE FONTSIGNATURE;

struct tagFONTSIGNATURE {
    DWORD fsUsb[4];
    DWORD fsCsb[2];
};

struct tagCHARSETINFO {
    UINT ciCharset;
    UINT ciACP;
    FONTSIGNATURE fs;
};

typedef struct tagCHARSETINFO *LPCHARSETINFO;

typedef struct _MAT2 _MAT2, *P_MAT2;

typedef struct _MAT2 *LPMAT2;

typedef struct _FIXED _FIXED, *P_FIXED;

typedef struct _FIXED FIXED;

struct _FIXED {
    WORD fract;
    short value;
};

struct _MAT2 {
    FIXED eM11;
    FIXED eM12;
    FIXED eM21;
    FIXED eM22;
};

typedef struct tagEMRSETTEXTCOLOR tagEMRSETTEXTCOLOR, *PtagEMRSETTEXTCOLOR;

typedef struct tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

struct tagEMRSETTEXTCOLOR {
    EMR emr;
    COLORREF crColor;
};

typedef struct tagGCP_RESULTSW tagGCP_RESULTSW, *PtagGCP_RESULTSW;

typedef struct tagGCP_RESULTSW *LPGCP_RESULTSW;

struct tagGCP_RESULTSW {
    DWORD lStructSize;
    LPWSTR lpOutString;
    UINT *lpOrder;
    int *lpDx;
    int *lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct _DOCINFOW _DOCINFOW, *P_DOCINFOW;

typedef struct _DOCINFOW DOCINFOW;

struct _DOCINFOW {
    int cbSize;
    LPCWSTR lpszDocName;
    LPCWSTR lpszOutput;
    LPCWSTR lpszDatatype;
    DWORD fwType;
};

typedef struct tagTEXTMETRICA tagTEXTMETRICA, *PtagTEXTMETRICA;

typedef struct tagTEXTMETRICA TEXTMETRICA;

typedef int (*OLDFONTENUMPROCA)(LOGFONTA *, TEXTMETRICA *, DWORD, LPARAM);

typedef OLDFONTENUMPROCA FONTENUMPROCA;

typedef FONTENUMPROCA FONTENUMPROC;

struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagEMRPOLYPOLYLINE16 tagEMRPOLYPOLYLINE16, *PtagEMRPOLYPOLYLINE16;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;

typedef struct tagPOINTS tagPOINTS, *PtagPOINTS;

typedef struct tagPOINTS POINTS;

typedef short SHORT;

struct tagPOINTS {
    SHORT x;
    SHORT y;
};

struct tagEMRPOLYPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cpts;
    DWORD aPolyCounts[1];
    POINTS apts[1];
};

typedef struct _ABC _ABC, *P_ABC;

typedef struct _ABC *LPABC;

struct _ABC {
    int abcA;
    UINT abcB;
    int abcC;
};

typedef struct tagEMRINVERTRGN tagEMRINVERTRGN, *PtagEMRINVERTRGN;

struct tagEMRINVERTRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    BYTE RgnData[1];
};

typedef struct tagTTPOLYGONHEADER tagTTPOLYGONHEADER, *PtagTTPOLYGONHEADER;

typedef struct tagPOINTFX tagPOINTFX, *PtagPOINTFX;

typedef struct tagPOINTFX POINTFX;

struct tagPOINTFX {
    FIXED x;
    FIXED y;
};

struct tagTTPOLYGONHEADER {
    DWORD cb;
    DWORD dwType;
    POINTFX pfxStart;
};

typedef struct tagPOLYTEXTA tagPOLYTEXTA, *PtagPOLYTEXTA;

typedef struct tagPOLYTEXTA POLYTEXTA;

struct tagPOLYTEXTA {
    int x;
    int y;
    UINT n;
    LPCSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int *pdx;
};

typedef struct tagGCP_RESULTSA tagGCP_RESULTSA, *PtagGCP_RESULTSA;

typedef struct tagGCP_RESULTSA *LPGCP_RESULTSA;

struct tagGCP_RESULTSA {
    DWORD lStructSize;
    LPSTR lpOutString;
    UINT *lpOrder;
    int *lpDx;
    int *lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

typedef struct tagEMRRESIZEPALETTE tagEMRRESIZEPALETTE, *PtagEMRRESIZEPALETTE;

struct tagEMRRESIZEPALETTE {
    EMR emr;
    DWORD ihPal;
    DWORD cEntries;
};

typedef struct tagEXTLOGFONTW *LPEXTLOGFONTW;

typedef struct _GLYPHMETRICSFLOAT _GLYPHMETRICSFLOAT, *P_GLYPHMETRICSFLOAT;

typedef struct _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

typedef struct _POINTFLOAT _POINTFLOAT, *P_POINTFLOAT;

typedef struct _POINTFLOAT POINTFLOAT;

struct _POINTFLOAT {
    FLOAT x;
    FLOAT y;
};

struct _GLYPHMETRICSFLOAT {
    FLOAT gmfBlackBoxX;
    FLOAT gmfBlackBoxY;
    POINTFLOAT gmfptGlyphOrigin;
    FLOAT gmfCellIncX;
    FLOAT gmfCellIncY;
};

typedef struct tagEXTLOGFONTW *NPEXTLOGFONTW;

typedef struct tagEMRSETICMPROFILE tagEMRSETICMPROFILE, *PtagEMRSETICMPROFILE;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

struct tagEMRSETICMPROFILE {
    EMR emr;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRPOLYLINE16 tagEMRPOLYLINE16, *PtagEMRPOLYLINE16;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINE16;

struct tagEMRPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
};

typedef struct tagEMRSETVIEWPORTEXTEX tagEMRSETVIEWPORTEXTEX, *PtagEMRSETVIEWPORTEXTEX;

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;

struct tagEMRSETVIEWPORTEXTEX {
    EMR emr;
    SIZEL szlExtent;
};

typedef struct tagEMRSELECTOBJECT tagEMRSELECTOBJECT, *PtagEMRSELECTOBJECT;

typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;

struct tagEMRSELECTOBJECT {
    EMR emr;
    DWORD ihObject;
};

typedef struct tagEMRCREATECOLORSPACEW tagEMRCREATECOLORSPACEW, *PtagEMRCREATECOLORSPACEW;

typedef struct tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

typedef struct tagLOGCOLORSPACEW tagLOGCOLORSPACEW, *PtagLOGCOLORSPACEW;

typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;

struct tagLOGCOLORSPACEW {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    WCHAR lcsFilename[260];
};

struct tagEMRCREATECOLORSPACEW {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEW lcs;
    DWORD dwFlags;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER, *PtagBITMAPINFOHEADER;

struct tagBITMAPINFOHEADER {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
};

typedef struct _devicemodeW *NPDEVMODEW;

typedef struct tagEMREXCLUDECLIPRECT tagEMREXCLUDECLIPRECT, *PtagEMREXCLUDECLIPRECT;

typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;

struct tagEMREXCLUDECLIPRECT {
    EMR emr;
    RECTL rclClip;
};

typedef struct _devicemodeA DEVMODEA;

typedef DEVMODEA DEVMODE;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT tagEMRCREATEDIBPATTERNBRUSHPT, *PtagEMRCREATEDIBPATTERNBRUSHPT;

struct tagEMRCREATEDIBPATTERNBRUSHPT {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct tagEXTLOGFONTA *LPEXTLOGFONTA;

typedef struct tagRGBTRIPLE tagRGBTRIPLE, *PtagRGBTRIPLE;

typedef struct tagRGBTRIPLE RGBTRIPLE;

struct tagRGBTRIPLE {
    BYTE rgbtBlue;
    BYTE rgbtGreen;
    BYTE rgbtRed;
};

typedef struct tagEMRPOLYDRAW tagEMRPOLYDRAW, *PtagEMRPOLYDRAW;

struct tagEMRPOLYDRAW {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
    BYTE abTypes[1];
};

typedef struct tagHANDLETABLE tagHANDLETABLE, *PtagHANDLETABLE;

typedef struct tagHANDLETABLE HANDLETABLE;

typedef void *HGDIOBJ;

struct tagHANDLETABLE {
    HGDIOBJ objectHandle[1];
};

typedef struct tagEMRSETVIEWPORTORGEX tagEMRSETVIEWPORTORGEX, *PtagEMRSETVIEWPORTORGEX;

struct tagEMRSETVIEWPORTORGEX {
    EMR emr;
    POINTL ptlOrigin;
};

typedef struct tagEXTLOGFONTA *NPEXTLOGFONTA;

typedef struct _WGLSWAP _WGLSWAP, *P_WGLSWAP;

struct _WGLSWAP {
    HDC hdc;
    UINT uiFlags;
};

typedef struct tagEMREXTCREATEPEN tagEMREXTCREATEPEN, *PtagEMREXTCREATEPEN;

typedef struct tagEXTLOGPEN tagEXTLOGPEN, *PtagEXTLOGPEN;

typedef struct tagEXTLOGPEN EXTLOGPEN;

struct tagEXTLOGPEN {
    DWORD elpPenStyle;
    DWORD elpWidth;
    UINT elpBrushStyle;
    COLORREF elpColor;
    ULONG_PTR elpHatch;
    DWORD elpNumEntries;
    DWORD elpStyleEntry[1];
};

struct tagEMREXTCREATEPEN {
    EMR emr;
    DWORD ihPen;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
    EXTLOGPEN elp;
};

typedef struct tagEMRSETDIBITSTODEVICE tagEMRSETDIBITSTODEVICE, *PtagEMRSETDIBITSTODEVICE;

typedef struct tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

struct tagEMRSETDIBITSTODEVICE {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD iStartScan;
    DWORD cScans;
};

typedef struct tagEMRINVERTRGN EMRPAINTRGN;

typedef struct tagCHARSETINFO *PCHARSETINFO;

typedef struct tagEMRSTRETCHDIBITS tagEMRSTRETCHDIBITS, *PtagEMRSTRETCHDIBITS;

struct tagEMRSTRETCHDIBITS {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD dwRop;
    LONG cxDest;
    LONG cyDest;
};

typedef struct _GLYPHMETRICS _GLYPHMETRICS, *P_GLYPHMETRICS;

struct _GLYPHMETRICS {
    UINT gmBlackBoxX;
    UINT gmBlackBoxY;
    POINT gmptGlyphOrigin;
    short gmCellIncX;
    short gmCellIncY;
};

typedef struct tagEMRSELECTCLIPPATH tagEMRSELECTCLIPPATH, *PtagEMRSELECTCLIPPATH;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

struct tagEMRSELECTCLIPPATH {
    EMR emr;
    DWORD iMode;
};

typedef struct _TRIVERTEX _TRIVERTEX, *P_TRIVERTEX;

typedef USHORT COLOR16;

struct _TRIVERTEX {
    LONG x;
    LONG y;
    COLOR16 Red;
    COLOR16 Green;
    COLOR16 Blue;
    COLOR16 Alpha;
};

typedef struct tagABORTPATH tagABORTPATH, *PtagABORTPATH;

typedef struct tagABORTPATH *PEMRBEGINPATH;

struct tagABORTPATH {
    EMR emr;
};

typedef struct tagEMRPOLYTEXTOUTA tagEMRPOLYTEXTOUTA, *PtagEMRPOLYTEXTOUTA;

typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

typedef struct tagEMRTEXT tagEMRTEXT, *PtagEMRTEXT;

typedef struct tagEMRTEXT EMRTEXT;

struct tagEMRTEXT {
    POINTL ptlReference;
    DWORD nChars;
    DWORD offString;
    DWORD fOptions;
    RECTL rcl;
    DWORD offDx;
};

struct tagEMRPOLYTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    LONG cStrings;
    EMRTEXT aemrtext[1];
};

typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

typedef struct _PSFEATURE_OUTPUT _PSFEATURE_OUTPUT, *P_PSFEATURE_OUTPUT;

struct _PSFEATURE_OUTPUT {
    BOOL bPageIndependent;
    BOOL bSetPageDevice;
};

typedef struct tagABORTPATH *PEMRREALIZEPALETTE;

typedef struct tagEMRFRAMERGN tagEMRFRAMERGN, *PtagEMRFRAMERGN;

typedef struct tagEMRFRAMERGN *PEMRFRAMERGN;

struct tagEMRFRAMERGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    SIZEL szlStroke;
    BYTE RgnData[1];
};

typedef struct _PSFEATURE_CUSTPAPER _PSFEATURE_CUSTPAPER, *P_PSFEATURE_CUSTPAPER;

typedef struct _PSFEATURE_CUSTPAPER PSFEATURE_CUSTPAPER;

struct _PSFEATURE_CUSTPAPER {
    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;
};

typedef struct tagEMRSETCOLORADJUSTMENT tagEMRSETCOLORADJUSTMENT, *PtagEMRSETCOLORADJUSTMENT;

typedef struct tagCOLORADJUSTMENT tagCOLORADJUSTMENT, *PtagCOLORADJUSTMENT;

typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;

struct tagCOLORADJUSTMENT {
    WORD caSize;
    WORD caFlags;
    WORD caIlluminantIndex;
    WORD caRedGamma;
    WORD caGreenGamma;
    WORD caBlueGamma;
    WORD caReferenceBlack;
    WORD caReferenceWhite;
    SHORT caContrast;
    SHORT caBrightness;
    SHORT caColorfulness;
    SHORT caRedGreenTint;
};

struct tagEMRSETCOLORADJUSTMENT {
    EMR emr;
    COLORADJUSTMENT ColorAdjustment;
};

typedef struct tagLOCALESIGNATURE tagLOCALESIGNATURE, *PtagLOCALESIGNATURE;

struct tagLOCALESIGNATURE {
    DWORD lsUsb[4];
    DWORD lsCsbDefault[2];
    DWORD lsCsbSupported[2];
};

typedef struct tagLOCALESIGNATURE *PLOCALESIGNATURE;

typedef struct tagEMRSETWORLDTRANSFORM tagEMRSETWORLDTRANSFORM, *PtagEMRSETWORLDTRANSFORM;

typedef struct tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

struct tagEMRSETWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
};

typedef struct tagPOLYTEXTW tagPOLYTEXTW, *PtagPOLYTEXTW;

typedef struct tagPOLYTEXTW *NPPOLYTEXTW;

struct tagPOLYTEXTW {
    int x;
    int y;
    UINT n;
    LPCWSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int *pdx;
};

typedef struct tagBITMAP tagBITMAP, *PtagBITMAP;

struct tagBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    LPVOID bmBits;
};

typedef struct tagEMRCREATEPEN tagEMRCREATEPEN, *PtagEMRCREATEPEN;

typedef struct tagLOGPEN tagLOGPEN, *PtagLOGPEN;

typedef struct tagLOGPEN LOGPEN;

struct tagLOGPEN {
    UINT lopnStyle;
    POINT lopnWidth;
    COLORREF lopnColor;
};

struct tagEMRCREATEPEN {
    EMR emr;
    DWORD ihPen;
    LOGPEN lopn;
};

typedef struct tagEMRPOLYPOLYLINE tagEMRPOLYPOLYLINE, *PtagEMRPOLYPOLYLINE;

struct tagEMRPOLYPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cptl;
    DWORD aPolyCounts[1];
    POINTL aptl[1];
};

typedef struct tagEMREXTSELECTCLIPRGN tagEMREXTSELECTCLIPRGN, *PtagEMREXTSELECTCLIPRGN;

typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;

struct tagEMREXTSELECTCLIPRGN {
    EMR emr;
    DWORD cbRgnData;
    DWORD iMode;
    BYTE RgnData[1];
};

typedef struct tagPOLYTEXTA *NPPOLYTEXTA;

typedef struct tagLOGBRUSH tagLOGBRUSH, *PtagLOGBRUSH;

typedef struct tagLOGBRUSH LOGBRUSH;

typedef LOGBRUSH PATTERN;

typedef PATTERN *NPPATTERN;

struct tagLOGBRUSH {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG_PTR lbHatch;
};

typedef struct tagLOGPEN *PLOGPEN;

typedef struct _DOCINFOA _DOCINFOA, *P_DOCINFOA;

typedef struct _DOCINFOA *LPDOCINFOA;

typedef LPDOCINFOA LPDOCINFO;

struct _DOCINFOA {
    int cbSize;
    LPCSTR lpszDocName;
    LPCSTR lpszOutput;
    LPCSTR lpszDatatype;
    DWORD fwType;
};

typedef struct tagNEWTEXTMETRICA tagNEWTEXTMETRICA, *PtagNEWTEXTMETRICA;

typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;

typedef NEWTEXTMETRICA NEWTEXTMETRIC;

struct tagNEWTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

typedef struct tagRGBQUAD tagRGBQUAD, *PtagRGBQUAD;

typedef struct tagRGBQUAD RGBQUAD;

struct tagRGBQUAD {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbReserved;
};

typedef CIEXYZTRIPLE *LPCIEXYZTRIPLE;

typedef struct tagBITMAP BITMAP;

typedef struct tagPALETTEENTRY *LPPALETTEENTRY;

typedef struct tagKERNINGPAIR tagKERNINGPAIR, *PtagKERNINGPAIR;

typedef struct tagKERNINGPAIR KERNINGPAIR;

struct tagKERNINGPAIR {
    WORD wFirst;
    WORD wSecond;
    int iKernAmount;
};

typedef struct tagPELARRAY tagPELARRAY, *PtagPELARRAY;

struct tagPELARRAY {
    LONG paXCount;
    LONG paYCount;
    LONG paXExt;
    LONG paYExt;
    BYTE paRGBs;
};

typedef struct tagEMRGDICOMMENT tagEMRGDICOMMENT, *PtagEMRGDICOMMENT;

typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;

struct tagEMRGDICOMMENT {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

typedef struct tagENUMLOGFONTA tagENUMLOGFONTA, *PtagENUMLOGFONTA;

typedef struct tagENUMLOGFONTA ENUMLOGFONTA;

typedef ENUMLOGFONTA ENUMLOGFONT;

struct tagENUMLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
};

typedef struct tagTEXTMETRICW tagTEXTMETRICW, *PtagTEXTMETRICW;

struct tagTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagLOGBRUSH *LPLOGBRUSH;

typedef struct tagMETAHEADER tagMETAHEADER, *PtagMETAHEADER;

typedef struct tagMETAHEADER *PMETAHEADER;

struct tagMETAHEADER {
    WORD mtType;
    WORD mtHeaderSize;
    WORD mtVersion;
    DWORD mtSize;
    WORD mtNoObjects;
    DWORD mtMaxRecord;
    WORD mtNoParameters;
};

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;

typedef struct tagEMREOF tagEMREOF, *PtagEMREOF;

struct tagEMREOF {
    EMR emr;
    DWORD nPalEntries;
    DWORD offPalEntries;
    DWORD nSizeLast;
};

typedef struct tagEMRPLGBLT tagEMRPLGBLT, *PtagEMRPLGBLT;

struct tagEMRPLGBLT {
    EMR emr;
    RECTL rclBounds;
    POINTL aptlDest[3];
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagBITMAPINFO tagBITMAPINFO, *PtagBITMAPINFO;

typedef struct tagBITMAPINFO *PBITMAPINFO;

typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

struct tagBITMAPINFO {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[1];
};

typedef struct tagMETARECORD tagMETARECORD, *PtagMETARECORD;

typedef struct tagMETARECORD METARECORD;

struct tagMETARECORD {
    DWORD rdSize;
    WORD rdFunction;
    WORD rdParm[1];
};

typedef struct _TRIVERTEX *LPTRIVERTEX;

typedef struct tagEMRELLIPSE tagEMRELLIPSE, *PtagEMRELLIPSE;

typedef struct tagEMRELLIPSE *PEMRELLIPSE;

struct tagEMRELLIPSE {
    EMR emr;
    RECTL rclBox;
};

typedef struct tagEMRFILLRGN tagEMRFILLRGN, *PtagEMRFILLRGN;

typedef struct tagEMRFILLRGN EMRFILLRGN;

struct tagEMRFILLRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    BYTE RgnData[1];
};

typedef struct tagENHMETAHEADER tagENHMETAHEADER, *PtagENHMETAHEADER;

typedef struct tagENHMETAHEADER *PENHMETAHEADER;

struct tagENHMETAHEADER {
    DWORD iType;
    DWORD nSize;
    RECTL rclBounds;
    RECTL rclFrame;
    DWORD dSignature;
    DWORD nVersion;
    DWORD nBytes;
    DWORD nRecords;
    WORD nHandles;
    WORD sReserved;
    DWORD nDescription;
    DWORD offDescription;
    DWORD nPalEntries;
    SIZEL szlDevice;
    SIZEL szlMillimeters;
    DWORD cbPixelFormat;
    DWORD offPixelFormat;
    DWORD bOpenGL;
    SIZEL szlMicrometers;
};

typedef struct _BLENDFUNCTION _BLENDFUNCTION, *P_BLENDFUNCTION;

typedef struct _BLENDFUNCTION *PBLENDFUNCTION;

struct _BLENDFUNCTION {
    BYTE BlendOp;
    BYTE BlendFlags;
    BYTE SourceConstantAlpha;
    BYTE AlphaFormat;
};

typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;

typedef struct tagEMRPOLYLINE tagEMRPOLYLINE, *PtagEMRPOLYLINE;

typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;

struct tagEMRPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
};

typedef struct _OUTLINETEXTMETRICA _OUTLINETEXTMETRICA, *P_OUTLINETEXTMETRICA;

typedef struct _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC;

typedef CHAR *PSTR;

struct _OUTLINETEXTMETRICA {
    UINT otmSize;
    TEXTMETRICA otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct tagEMRRESTOREDC tagEMRRESTOREDC, *PtagEMRRESTOREDC;

typedef struct tagEMRRESTOREDC *PEMRRESTOREDC;

struct tagEMRRESTOREDC {
    EMR emr;
    LONG iRelative;
};

typedef struct _DRAWPATRECT _DRAWPATRECT, *P_DRAWPATRECT;

typedef struct _DRAWPATRECT *PDRAWPATRECT;

struct _DRAWPATRECT {
    POINT ptPosition;
    POINT ptSize;
    WORD wStyle;
    WORD wPattern;
};

typedef struct tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

typedef struct tagTTPOLYCURVE tagTTPOLYCURVE, *PtagTTPOLYCURVE;

struct tagTTPOLYCURVE {
    WORD wType;
    WORD cpfx;
    POINTFX apfx[1];
};

typedef struct tagMETAHEADER *LPMETAHEADER;

typedef struct tagEMRALPHABLEND tagEMRALPHABLEND, *PtagEMRALPHABLEND;

typedef struct tagEMRALPHABLEND *PEMRALPHABLEND;

struct tagEMRALPHABLEND {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct _BLENDFUNCTION BLENDFUNCTION;

typedef struct tagTEXTMETRICA *LPTEXTMETRICA;

typedef LPTEXTMETRICA LPTEXTMETRIC;

typedef struct tagEMRSETPALETTEENTRIES tagEMRSETPALETTEENTRIES, *PtagEMRSETPALETTEENTRIES;

typedef struct tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

struct tagEMRSETPALETTEENTRIES {
    EMR emr;
    DWORD ihPal;
    DWORD iStart;
    DWORD cEntries;
    PALETTEENTRY aPalEntries[1];
};

typedef struct tagPALETTEENTRY *PPALETTEENTRY;

typedef struct tagPOLYTEXTA *PPOLYTEXTA;

typedef PPOLYTEXTA PPOLYTEXT;

typedef struct tagMETAFILEPICT tagMETAFILEPICT, *PtagMETAFILEPICT;

typedef struct tagMETAFILEPICT METAFILEPICT;

typedef struct HMETAFILE__ HMETAFILE__, *PHMETAFILE__;

typedef struct HMETAFILE__ *HMETAFILE;

struct HMETAFILE__ {
    int unused;
};

struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    HMETAFILE hMF;
};

typedef struct tagEMRGRADIENTFILL tagEMRGRADIENTFILL, *PtagEMRGRADIENTFILL;

typedef struct tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

typedef struct _TRIVERTEX TRIVERTEX;

struct tagEMRGRADIENTFILL {
    EMR emr;
    RECTL rclBounds;
    DWORD nVer;
    DWORD nTri;
    ULONG ulMode;
    TRIVERTEX Ver[1];
};

typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;

typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;

typedef struct _devicemodeA *PDEVMODEA;

typedef PDEVMODEA PDEVMODE;

typedef struct tagABORTPATH EMRENDPATH;

typedef struct _GRADIENT_TRIANGLE _GRADIENT_TRIANGLE, *P_GRADIENT_TRIANGLE;

typedef struct _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;

struct _GRADIENT_TRIANGLE {
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
};

typedef struct tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

typedef struct tagLOGBRUSH *PLOGBRUSH;

typedef struct tagEMRFORMAT tagEMRFORMAT, *PtagEMRFORMAT;

typedef struct tagEMRFORMAT *PEMRFORMAT;

struct tagEMRFORMAT {
    DWORD dSignature;
    DWORD nVersion;
    DWORD cbData;
    DWORD offData;
};

typedef struct _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

typedef struct tagEMRSETCOLORSPACE tagEMRSETCOLORSPACE, *PtagEMRSETCOLORSPACE;

struct tagEMRSETCOLORSPACE {
    EMR emr;
    DWORD ihCS;
};

typedef struct tagEMRSELECTPALETTE tagEMRSELECTPALETTE, *PtagEMRSELECTPALETTE;

typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;

struct tagEMRSELECTPALETTE {
    EMR emr;
    DWORD ihPal;
};

typedef struct tagLOGFONTA *NPLOGFONTA;

typedef NPLOGFONTA NPLOGFONT;

typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;

typedef struct tagEMRCREATEPALETTE tagEMRCREATEPALETTE, *PtagEMRCREATEPALETTE;

struct tagEMRCREATEPALETTE {
    EMR emr;
    DWORD ihPal;
    LOGPALETTE lgpl;
};

typedef struct tagTEXTMETRICA *PTEXTMETRICA;

typedef PTEXTMETRICA PTEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW _OUTLINETEXTMETRICW, *P_OUTLINETEXTMETRICW;

typedef struct _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

typedef struct tagTEXTMETRICW TEXTMETRICW;

struct _OUTLINETEXTMETRICW {
    UINT otmSize;
    TEXTMETRICW otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;

typedef struct tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

typedef struct tagEMRPOLYLINE *PEMRPOLYLINE;

typedef LPDEVMODEA LPDEVMODE;

typedef struct _ABCFLOAT _ABCFLOAT, *P_ABCFLOAT;

typedef struct _ABCFLOAT *NPABCFLOAT;

struct _ABCFLOAT {
    FLOAT abcfA;
    FLOAT abcfB;
    FLOAT abcfC;
};

typedef struct tagEMRARC tagEMRARC, *PtagEMRARC;

typedef struct tagEMRARC EMRARC;

struct tagEMRARC {
    EMR emr;
    RECTL rclBox;
    POINTL ptlStart;
    POINTL ptlEnd;
};

typedef struct _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

typedef struct tagEMRFILLPATH tagEMRFILLPATH, *PtagEMRFILLPATH;

struct tagEMRFILLPATH {
    EMR emr;
    RECTL rclBounds;
};

typedef struct tagENUMLOGFONTEXA tagENUMLOGFONTEXA, *PtagENUMLOGFONTEXA;

typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;

typedef ENUMLOGFONTEXA ENUMLOGFONTEX;

struct tagENUMLOGFONTEXA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    BYTE elfScript[32];
};

typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;

typedef struct tagABORTPATH EMRBEGINPATH;

typedef struct tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

typedef struct tagABORTPATH EMRSAVEDC;

typedef struct tagENHMETARECORD tagENHMETARECORD, *PtagENHMETARECORD;

typedef struct tagENHMETARECORD ENHMETARECORD;

typedef int (*ENHMFENUMPROC)(HDC, HANDLETABLE *, ENHMETARECORD *, int, LPARAM);

struct tagENHMETARECORD {
    DWORD iType;
    DWORD nSize;
    DWORD dParm[1];
};

typedef struct tagENHMETAHEADER ENHMETAHEADER;

typedef struct _DOCINFOA DOCINFOA;

typedef struct tagXFORM *LPXFORM;

typedef struct _PSINJECTDATA _PSINJECTDATA, *P_PSINJECTDATA;

typedef struct _PSINJECTDATA *PPSINJECTDATA;

struct _PSINJECTDATA {
    DWORD DataBytes;
    WORD InjectionPoint;
    WORD PageNumber;
};

typedef struct tagABORTPATH *PEMRSETMETARGN;

typedef struct tagBITMAPINFO *LPBITMAPINFO;

typedef struct _RGNDATA *LPRGNDATA;

typedef struct BITMAPV4HEADER BITMAPV4HEADER, *PBITMAPV4HEADER;

typedef struct BITMAPV4HEADER *LPBITMAPV4HEADER;

struct BITMAPV4HEADER {
    DWORD bV4Size;
    LONG bV4Width;
    LONG bV4Height;
    WORD bV4Planes;
    WORD bV4BitCount;
    DWORD bV4V4Compression;
    DWORD bV4SizeImage;
    LONG bV4XPelsPerMeter;
    LONG bV4YPelsPerMeter;
    DWORD bV4ClrUsed;
    DWORD bV4ClrImportant;
    DWORD bV4RedMask;
    DWORD bV4GreenMask;
    DWORD bV4BlueMask;
    DWORD bV4AlphaMask;
    DWORD bV4CSType;
    CIEXYZTRIPLE bV4Endpoints;
    DWORD bV4GammaRed;
    DWORD bV4GammaGreen;
    DWORD bV4GammaBlue;
};

typedef struct tagEMRGLSBOUNDEDRECORD tagEMRGLSBOUNDEDRECORD, *PtagEMRGLSBOUNDEDRECORD;

typedef struct tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;

struct tagEMRGLSBOUNDEDRECORD {
    EMR emr;
    RECTL rclBounds;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRGLSRECORD tagEMRGLSRECORD, *PtagEMRGLSRECORD;

typedef struct tagEMRGLSRECORD EMRGLSRECORD;

struct tagEMRGLSRECORD {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;

typedef struct tagEMRFORMAT EMRFORMAT;

typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;

typedef struct tagEMRMODIFYWORLDTRANSFORM tagEMRMODIFYWORLDTRANSFORM, *PtagEMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

struct tagEMRMODIFYWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
    DWORD iMode;
};

typedef struct tagEMRSETPIXELV tagEMRSETPIXELV, *PtagEMRSETPIXELV;

struct tagEMRSETPIXELV {
    EMR emr;
    POINTL ptlPixel;
    COLORREF crColor;
};

typedef struct tagENHMETAHEADER *LPENHMETAHEADER;

typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;

typedef struct tagBITMAPCOREINFO tagBITMAPCOREINFO, *PtagBITMAPCOREINFO;

typedef struct tagBITMAPCOREHEADER tagBITMAPCOREHEADER, *PtagBITMAPCOREHEADER;

typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;

struct tagBITMAPCOREHEADER {
    DWORD bcSize;
    WORD bcWidth;
    WORD bcHeight;
    WORD bcPlanes;
    WORD bcBitCount;
};

struct tagBITMAPCOREINFO {
    BITMAPCOREHEADER bmciHeader;
    RGBTRIPLE bmciColors[1];
};

typedef struct tagPELARRAY *LPPELARRAY;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

typedef long *LPFXPT2DOT30;

typedef struct tagEMRLINETO tagEMRLINETO, *PtagEMRLINETO;

typedef struct tagEMRLINETO EMRMOVETOEX;

struct tagEMRLINETO {
    EMR emr;
    POINTL ptl;
};

typedef struct tagEMRCREATEBRUSHINDIRECT tagEMRCREATEBRUSHINDIRECT, *PtagEMRCREATEBRUSHINDIRECT;

typedef struct tagLOGBRUSH32 tagLOGBRUSH32, *PtagLOGBRUSH32;

typedef struct tagLOGBRUSH32 LOGBRUSH32;

struct tagLOGBRUSH32 {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG lbHatch;
};

struct tagEMRCREATEBRUSHINDIRECT {
    EMR emr;
    DWORD ihBrush;
    LOGBRUSH32 lb;
};

typedef NPEXTLOGFONTA NPEXTLOGFONT;

typedef struct tagTTPOLYCURVE *LPTTPOLYCURVE;

typedef struct tagLOGBRUSH32 *NPLOGBRUSH32;

typedef struct tagEMRCREATEPEN *PEMRCREATEPEN;

typedef struct tagEMREXTFLOODFILL tagEMREXTFLOODFILL, *PtagEMREXTFLOODFILL;

typedef struct tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

struct tagEMREXTFLOODFILL {
    EMR emr;
    POINTL ptlStart;
    COLORREF crColor;
    DWORD iMode;
};

typedef struct tagCOLORCORRECTPALETTE tagCOLORCORRECTPALETTE, *PtagCOLORCORRECTPALETTE;

struct tagCOLORCORRECTPALETTE {
    EMR emr;
    DWORD ihPalette;
    DWORD nFirstEntry;
    DWORD nPalEntries;
    DWORD nReserved;
};

typedef struct tagEMRCREATEMONOBRUSH tagEMRCREATEMONOBRUSH, *PtagEMRCREATEMONOBRUSH;

struct tagEMRCREATEMONOBRUSH {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

typedef struct _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

typedef struct tagTEXTMETRICW *LPTEXTMETRICW;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;

typedef struct tagLAYERPLANEDESCRIPTOR tagLAYERPLANEDESCRIPTOR, *PtagLAYERPLANEDESCRIPTOR;

typedef struct tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

struct tagLAYERPLANEDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerPlane;
    BYTE bReserved;
    COLORREF crTransparent;
};

typedef union _union_393 _union_393, *P_union_393;

typedef struct _struct_394 _struct_394, *P_struct_394;

struct _struct_394 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_393 {
    struct _struct_394 field0;
    POINTL dmPosition;
};

typedef struct tagPELARRAY *PPELARRAY;

typedef struct tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

typedef PNEWTEXTMETRICA PNEWTEXTMETRIC;

typedef struct tagEMRFILLPATH *PEMRFILLPATH;

typedef struct tagEMRSETMAPPERFLAGS tagEMRSETMAPPERFLAGS, *PtagEMRSETMAPPERFLAGS;

typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;

struct tagEMRSETMAPPERFLAGS {
    EMR emr;
    DWORD dwFlags;
};

typedef union _union_397 _union_397, *P_union_397;

typedef struct _struct_398 _struct_398, *P_struct_398;

struct _struct_398 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_397 {
    struct _struct_398 field0;
    POINTL dmPosition;
};

typedef union _union_395 _union_395, *P_union_395;

union _union_395 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;

typedef union _union_399 _union_399, *P_union_399;

union _union_399 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

typedef struct tagGCP_RESULTSA GCP_RESULTSA;

typedef struct _DISPLAY_DEVICEA _DISPLAY_DEVICEA, *P_DISPLAY_DEVICEA;

typedef struct _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;

struct _DISPLAY_DEVICEA {
    DWORD cb;
    CHAR DeviceName[32];
    CHAR DeviceString[128];
    DWORD StateFlags;
    CHAR DeviceID[128];
    CHAR DeviceKey[128];
};

typedef struct tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;

typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;

typedef struct tagEMRPOLYDRAW16 tagEMRPOLYDRAW16, *PtagEMRPOLYDRAW16;

struct tagEMRPOLYDRAW16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
    BYTE abTypes[1];
};

typedef struct tagEMRELLIPSE *PEMRRECTANGLE;

typedef struct tagEMROFFSETCLIPRGN tagEMROFFSETCLIPRGN, *PtagEMROFFSETCLIPRGN;

typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;

struct tagEMROFFSETCLIPRGN {
    EMR emr;
    POINTL ptlOffset;
};

typedef struct tagLOGPEN *LPLOGPEN;

typedef struct tagGCP_RESULTSW GCP_RESULTSW;

typedef GCP_RESULTSA GCP_RESULTS;

typedef struct tagEMRRESTOREDC EMRRESTOREDC;

typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;

typedef struct _PSINJECTDATA PSINJECTDATA;

typedef struct tagENHMETARECORD *LPENHMETARECORD;

typedef struct _RGNDATA *NPRGNDATA;

typedef struct _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

typedef struct tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC;

typedef struct BITMAPV5HEADER BITMAPV5HEADER, *PBITMAPV5HEADER;

struct BITMAPV5HEADER {
    DWORD bV5Size;
    LONG bV5Width;
    LONG bV5Height;
    WORD bV5Planes;
    WORD bV5BitCount;
    DWORD bV5Compression;
    DWORD bV5SizeImage;
    LONG bV5XPelsPerMeter;
    LONG bV5YPelsPerMeter;
    DWORD bV5ClrUsed;
    DWORD bV5ClrImportant;
    DWORD bV5RedMask;
    DWORD bV5GreenMask;
    DWORD bV5BlueMask;
    DWORD bV5AlphaMask;
    DWORD bV5CSType;
    CIEXYZTRIPLE bV5Endpoints;
    DWORD bV5GammaRed;
    DWORD bV5GammaGreen;
    DWORD bV5GammaBlue;
    DWORD bV5Intent;
    DWORD bV5ProfileData;
    DWORD bV5ProfileSize;
    DWORD bV5Reserved;
};

typedef struct tagEMRSETARCDIRECTION tagEMRSETARCDIRECTION, *PtagEMRSETARCDIRECTION;

struct tagEMRSETARCDIRECTION {
    EMR emr;
    DWORD iArcDirection;
};

typedef struct _DISPLAY_DEVICEW _DISPLAY_DEVICEW, *P_DISPLAY_DEVICEW;

struct _DISPLAY_DEVICEW {
    DWORD cb;
    WCHAR DeviceName[32];
    WCHAR DeviceString[128];
    DWORD StateFlags;
    WCHAR DeviceID[128];
    WCHAR DeviceKey[128];
};

typedef struct tagBITMAP *PBITMAP;

typedef long FXPT16DOT16;

typedef struct _GRADIENT_RECT _GRADIENT_RECT, *P_GRADIENT_RECT;

typedef struct _GRADIENT_RECT *LPGRADIENT_RECT;

struct _GRADIENT_RECT {
    ULONG UpperLeft;
    ULONG LowerRight;
};

typedef struct tagEMRCREATEPEN EMRCREATEPEN;

typedef struct _devicemodeA *NPDEVMODEA;

typedef NPDEVMODEA NPDEVMODE;

typedef struct tagFONTSIGNATURE *PFONTSIGNATURE;

typedef struct tagEMRGDICOMMENT *PEMRGDICOMMENT;

typedef struct tagCOLORMATCHTOTARGET tagCOLORMATCHTOTARGET, *PtagCOLORMATCHTOTARGET;

typedef struct tagCOLORMATCHTOTARGET EMRCOLORMATCHTOTARGET;

struct tagCOLORMATCHTOTARGET {
    EMR emr;
    DWORD dwAction;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagENUMLOGFONTW tagENUMLOGFONTW, *PtagENUMLOGFONTW;

struct tagENUMLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
};

typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

typedef struct tagBITMAP *NPBITMAP;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

typedef struct tagTEXTMETRICA *NPTEXTMETRICA;

typedef NPTEXTMETRICA NPTEXTMETRIC;

typedef struct tagBITMAPCOREINFO *PBITMAPCOREINFO;

typedef struct tagDIBSECTION tagDIBSECTION, *PtagDIBSECTION;

struct tagDIBSECTION {
    BITMAP dsBm;
    BITMAPINFOHEADER dsBmih;
    DWORD dsBitfields[3];
    HANDLE dshSection;
    DWORD dsOffset;
};

typedef struct tagEMRLINETO EMRLINETO;

typedef struct tagHANDLETABLE *LPHANDLETABLE;

typedef struct tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

typedef void (*LINEDDAPROC)(int, int, LPARAM);

typedef struct tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

typedef struct tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

typedef struct tagEMRSELECTCLIPPATH EMRSETLAYOUT;

typedef struct tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

typedef LPGCP_RESULTSA LPGCP_RESULTS;

typedef struct tagABORTPATH *PEMRENDPATH;

typedef struct tagEMRROUNDRECT tagEMRROUNDRECT, *PtagEMRROUNDRECT;

typedef struct tagEMRROUNDRECT *PEMRROUNDRECT;

struct tagEMRROUNDRECT {
    EMR emr;
    RECTL rclBox;
    SIZEL szlCorner;
};

typedef struct tagEMRARC *PEMRPIE;

typedef struct tagENUMLOGFONTEXW tagENUMLOGFONTEXW, *PtagENUMLOGFONTEXW;

struct tagENUMLOGFONTEXW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    WCHAR elfScript[32];
};

typedef POLYTEXTA POLYTEXT;

typedef struct _RGNDATAHEADER *PRGNDATAHEADER;

typedef struct tagDIBSECTION *PDIBSECTION;

typedef struct tagEMRPOLYLINE *PEMRPOLYLINETO;

typedef struct tagPOLYTEXTW POLYTEXTW;

typedef struct tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

typedef struct tagEMREXTESCAPE tagEMREXTESCAPE, *PtagEMREXTESCAPE;

struct tagEMREXTESCAPE {
    EMR emr;
    INT iEscape;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEXTLOGPEN *NPEXTLOGPEN;

typedef struct tagPOLYTEXTA *LPPOLYTEXTA;

typedef LPPOLYTEXTA LPPOLYTEXT;

typedef struct _ABC *NPABC;

typedef struct tagPIXELFORMATDESCRIPTOR tagPIXELFORMATDESCRIPTOR, *PtagPIXELFORMATDESCRIPTOR;

typedef struct tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

struct tagPIXELFORMATDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerType;
    BYTE bReserved;
    DWORD dwLayerMask;
    DWORD dwVisibleMask;
    DWORD dwDamageMask;
};

typedef PATTERN *LPPATTERN;

typedef struct tagKERNINGPAIR *LPKERNINGPAIR;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

typedef struct tagBITMAPINFO BITMAPINFO;

typedef struct _WGLSWAP *LPWGLSWAP;

typedef struct tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;

typedef struct tagABORTPATH *PEMRFLATTENPATH;

typedef struct tagENUMLOGFONTW *LPENUMLOGFONTW;

typedef struct tagEMRSETMITERLIMIT tagEMRSETMITERLIMIT, *PtagEMRSETMITERLIMIT;

struct tagEMRSETMITERLIMIT {
    EMR emr;
    FLOAT eMiterLimit;
};

typedef struct tagEMREXTESCAPE EMRDRAWESCAPE;

typedef struct tagXFORM *PXFORM;

typedef struct tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

typedef struct tagEMREXTCREATEFONTINDIRECTW tagEMREXTCREATEFONTINDIRECTW, *PtagEMREXTCREATEFONTINDIRECTW;

typedef struct tagEXTLOGFONTW EXTLOGFONTW;

struct tagEMREXTCREATEFONTINDIRECTW {
    EMR emr;
    DWORD ihFont;
    EXTLOGFONTW elfw;
};

typedef TEXTMETRICA TEXTMETRIC;

typedef struct tagDIBSECTION *LPDIBSECTION;

typedef struct tagLOGFONTW *NPLOGFONTW;

typedef struct tagEMRROUNDRECT EMRROUNDRECT;

typedef struct tagENUMLOGFONTA *LPENUMLOGFONTA;

typedef struct tagEMRLINETO *PEMRLINETO;

typedef struct tagEXTLOGPEN *LPEXTLOGPEN;

typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;

typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;

typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;

typedef struct tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

typedef struct tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;

typedef struct tagBITMAP *LPBITMAP;

typedef struct tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

typedef RGBQUAD *LPRGBQUAD;

typedef struct tagABORTPATH *PEMRCLOSEFIGURE;

typedef LPEXTLOGFONTA LPEXTLOGFONT;

typedef struct tagABORTPATH EMRCLOSEFIGURE;

typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;

typedef struct _DOCINFOW *LPDOCINFOW;

typedef int (*MFENUMPROC)(HDC, HANDLETABLE *, METARECORD *, int, LPARAM);

typedef struct tagEMREXTTEXTOUTA tagEMREXTTEXTOUTA, *PtagEMREXTTEXTOUTA;

struct tagEMREXTTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    EMRTEXT emrtext;
};

typedef struct tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEW;

typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;

typedef struct tagEMRPIXELFORMAT tagEMRPIXELFORMAT, *PtagEMRPIXELFORMAT;

typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;

struct tagEMRPIXELFORMAT {
    EMR emr;
    PIXELFORMATDESCRIPTOR pfd;
};

typedef struct tagLOGFONTA *LPLOGFONTA;

typedef struct tagABORTPATH *PEMRWIDENPATH;

typedef struct tagNEWTEXTMETRICEXA tagNEWTEXTMETRICEXA, *PtagNEWTEXTMETRICEXA;

typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;

typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;

struct tagNEWTEXTMETRICEXA {
    NEWTEXTMETRICA ntmTm;
    FONTSIGNATURE ntmFontSig;
};

typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;

typedef LOGCOLORSPACEA LOGCOLORSPACE;

typedef struct tagEMRPOLYLINE EMRPOLYGON;

typedef struct tagEMRFRAMERGN EMRFRAMERGN;

typedef struct _ABCFLOAT *PABCFLOAT;

typedef struct tagEMRNAMEDESCAPE tagEMRNAMEDESCAPE, *PtagEMRNAMEDESCAPE;

typedef struct tagEMRNAMEDESCAPE EMRNAMEDESCAPE;

struct tagEMRNAMEDESCAPE {
    EMR emr;
    INT iEscape;
    INT cbDriver;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEMRPLGBLT *PEMRPLGBLT;

typedef struct tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

typedef struct tagEMRFILLPATH EMRSTROKEPATH;

typedef struct tagLOGPALETTE *NPLOGPALETTE;

typedef struct tagABORTPATH EMRSETMETARGN;

typedef struct tagEMRCREATECOLORSPACE tagEMRCREATECOLORSPACE, *PtagEMRCREATECOLORSPACE;

struct tagEMRCREATECOLORSPACE {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEA lcs;
};

typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;

typedef struct tagLOGFONTW *LPLOGFONTW;

typedef struct tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

typedef struct tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

typedef struct tagLOGFONTA *PLOGFONTA;

typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;

typedef struct tagTTPOLYCURVE TTPOLYCURVE;

typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

typedef struct tagEMRELLIPSE EMRELLIPSE;

typedef struct tagEMRSETPIXELV EMRSETPIXELV;

typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC;

typedef BYTE BCHAR;

typedef struct tagEMRARC EMRARCTO;

typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;

typedef struct _MAT2 MAT2;

typedef struct _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

typedef struct tagEMRARC EMRCHORD;

typedef struct tagLOGBRUSH32 *LPLOGBRUSH32;

typedef struct tagEMRTRANSPARENTBLT tagEMRTRANSPARENTBLT, *PtagEMRTRANSPARENTBLT;

struct tagEMRTRANSPARENTBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct _GRADIENT_RECT GRADIENT_RECT;

typedef struct tagEMRSETCOLORSPACE EMRSETCOLORSPACE;

typedef struct tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;

typedef struct tagENHMETARECORD *PENHMETARECORD;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEA;

typedef struct tagEMRMASKBLT tagEMRMASKBLT, *PtagEMRMASKBLT;

typedef struct tagEMRMASKBLT EMRMASKBLT;

struct tagEMRMASKBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;

typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

typedef struct tagPOINTFX *LPPOINTFX;

typedef struct _ABCFLOAT *LPABCFLOAT;

typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;

typedef struct tagHANDLETABLE *PHANDLETABLE;

typedef struct tagEMRBITBLT tagEMRBITBLT, *PtagEMRBITBLT;

typedef struct tagEMRBITBLT EMRBITBLT;

struct tagEMRBITBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
};

typedef int (*GOBJENUMPROC)(LPVOID, LPARAM);

typedef struct _ABC *PABC;

typedef struct tagPOLYTEXTW *PPOLYTEXTW;

typedef struct tagABORTPATH EMRWIDENPATH;

typedef struct _DRAWPATRECT DRAWPATRECT;

typedef struct tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

typedef struct tagLOGFONTW *PLOGFONTW;

typedef struct tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX;

typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC;

typedef struct tagEMRSETPIXELV *PEMRSETPIXELV;

typedef struct tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

typedef struct tagEMRALPHABLEND EMRALPHABLEND;

typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

typedef struct tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;

typedef struct _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE;

typedef struct tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

typedef struct tagEMRANGLEARC EMRANGLEARC;

typedef struct _GLYPHMETRICS GLYPHMETRICS;

typedef struct tagEXTLOGFONTA EXTLOGFONTA;

typedef struct tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

typedef struct tagLOGBRUSH32 *PLOGBRUSH32;

typedef struct tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC;

typedef LPENUMLOGFONTA LPENUMLOGFONT;

typedef DWORD (*LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODE);

typedef struct tagPELARRAY PELARRAY;

typedef struct tagEMR *PEMR;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

typedef LPLOGFONTA LPLOGFONT;

typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;

typedef struct tagEMRARC EMRPIE;

typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICEA;

typedef DISPLAY_DEVICEA DISPLAY_DEVICE;

typedef struct tagABORTPATH *PEMRSAVEDC;

typedef struct tagEMRINVERTRGN EMRINVERTRGN;

typedef PLOGFONTA PLOGFONT;

typedef struct _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;

typedef struct tagEXTLOGPEN *PEXTLOGPEN;

typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

typedef struct tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;

typedef struct _devicemodeW *PDEVMODEW;

typedef struct tagCHARSETINFO CHARSETINFO;

typedef struct tagEMRTEXT *PEMRTEXT;

typedef struct BITMAPV5HEADER *LPBITMAPV5HEADER;

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;

typedef struct tagTEXTMETRICW *PTEXTMETRICW;

typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

typedef struct tagEMRINVERTRGN *PEMRPAINTRGN;

typedef struct tagNEWTEXTMETRICEXW tagNEWTEXTMETRICEXW, *PtagNEWTEXTMETRICEXW;

typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;

struct tagNEWTEXTMETRICEXW {
    NEWTEXTMETRICW ntmTm;
    FONTSIGNATURE ntmFontSig;
};

typedef int (*ICMENUMPROCA)(LPSTR, LPARAM);

typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;

typedef int (*ICMENUMPROCW)(LPWSTR, LPARAM);

typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;

typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;

typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;

typedef struct tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

typedef struct _GLYPHMETRICS *LPGLYPHMETRICS;

typedef struct tagEMRPLGBLT EMRPLGBLT;

typedef long *LPFXPT16DOT16;

typedef struct tagEMRFILLPATH *PEMRSTROKEPATH;

typedef struct tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETROP2;

typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;

typedef struct tagLOCALESIGNATURE *LPLOCALESIGNATURE;

typedef int (*OLDFONTENUMPROCW)(LOGFONTW *, TEXTMETRICW *, DWORD, LPARAM);

typedef CIEXYZ *LPCIEXYZ;

typedef HINSTANCE HMODULE;

typedef UINT (*LPFNDEVMODE)(HWND, HMODULE, LPDEVMODE, LPSTR, LPSTR, LPDEVMODE, LPSTR, UINT);

typedef struct tagEMRSELECTCLIPPATH EMRSETICMMODE;

typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYGON16;

typedef struct tagEMRPIXELFORMAT EMRPIXELFORMAT;

typedef struct tagEMRELLIPSE EMRRECTANGLE;

typedef struct _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;

typedef struct tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

typedef struct tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

typedef struct tagEMRARC *PEMRCHORD;

typedef EXTLOGFONTA EXTLOGFONT;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

typedef struct _ABC ABC;

typedef struct tagCOLORCORRECTPALETTE EMRCOLORCORRECTPALETTE;

typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIER;

typedef struct tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

typedef struct tagDIBSECTION DIBSECTION;

typedef struct tagEMRPOLYLINE *PEMRPOLYGON;

typedef struct tagLOGBRUSH *NPLOGBRUSH;

typedef struct tagTEXTMETRICW *NPTEXTMETRICW;

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRGLSRECORD *PEMRGLSRECORD;

typedef struct _WGLSWAP WGLSWAP;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;

typedef struct tagPANOSE *LPPANOSE;

typedef struct tagABORTPATH EMRREALIZEPALETTE;

typedef struct tagPOLYTEXTW *LPPOLYTEXTW;

typedef struct tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;

typedef struct _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

typedef struct _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

typedef struct tagMETAFILEPICT *LPMETAFILEPICT;

typedef OLDFONTENUMPROCW FONTENUMPROCW;

typedef struct _devicemodeW DEVMODEW;

typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;

typedef NPPOLYTEXTA NPPOLYTEXT;

typedef struct tagEMREXTESCAPE EMREXTESCAPE;

typedef struct tagEMREXTESCAPE *PEMREXTESCAPE;

typedef struct tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

typedef struct tagEMRFILLRGN *PEMRFILLRGN;

typedef struct _GRADIENT_RECT *PGRADIENT_RECT;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;

typedef struct tagABORTPATH EMRABORTPATH;

typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;

typedef struct tagEMRMASKBLT *PEMRMASKBLT;

typedef struct tagEMRPOLYLINE EMRPOLYLINE;

typedef struct tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

typedef struct tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

typedef struct tagEMRLINETO *PEMRMOVETOEX;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILE;

typedef struct _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

typedef struct tagENUMLOGFONTW ENUMLOGFONTW;

typedef struct tagEMREOF EMREOF;

typedef struct tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE;

typedef struct tagBITMAPCOREINFO *LPBITMAPCOREINFO;

typedef struct tagLOGPALETTE *PLOGPALETTE;

typedef struct tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;

typedef struct tagEMREXTESCAPE *PEMRDRAWESCAPE;

typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

typedef struct tagEMRINVERTRGN *PEMRINVERTRGN;

typedef DOCINFOA DOCINFO;

typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;

typedef struct tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

typedef struct tagEMRPOLYDRAW *PEMRPOLYDRAW;

typedef struct tagEMRFILLPATH EMRFILLPATH;

typedef struct tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

typedef struct tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

typedef struct tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;

typedef struct tagEMREOF *PEMREOF;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;

typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;

typedef struct tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;

typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;

typedef struct _WGLSWAP *PWGLSWAP;

typedef struct _PSFEATURE_OUTPUT PSFEATURE_OUTPUT;

typedef struct tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

typedef struct tagEMRBITBLT *PEMRBITBLT;

typedef struct tagEMRTRANSPARENTBLT EMRTRANSPARENTBLT;

typedef struct tagMETARECORD *PMETARECORD;

typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

typedef struct _ABCFLOAT ABCFLOAT;

typedef struct tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

typedef struct tagLOGPALETTE *LPLOGPALETTE;

typedef struct tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

typedef struct tagPELARRAY *NPPELARRAY;

typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;

typedef struct _DISPLAY_DEVICEW DISPLAY_DEVICEW;

typedef struct tagEMRGRADIENTFILL EMRGRADIENTFILL;

typedef PATTERN *PPATTERN;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

typedef struct _POINTFLOAT *PPOINTFLOAT;

typedef struct tagLOGPEN *NPLOGPEN;

typedef BOOL (*ABORTPROC)(HDC, int);

typedef struct tagABORTPATH *PEMRABORTPATH;

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;

typedef struct tagABORTPATH EMRFLATTENPATH;

typedef struct tagMETAHEADER METAHEADER;

typedef PEXTLOGFONTA PEXTLOGFONT;

typedef struct _TRIVERTEX *PTRIVERTEX;

typedef struct tagEMRARC *PEMRARC;

typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;

typedef struct tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

typedef struct tagEMRPOLYLINE EMRPOLYLINETO;

typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;

typedef struct tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

typedef struct tagFONTSIGNATURE *LPFONTSIGNATURE;

typedef struct tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

typedef struct tagEMRARC *PEMRARCTO;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;

typedef struct tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

typedef struct tagMETARECORD *LPMETARECORD;

typedef struct tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

typedef struct tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

#define SETICMPROFILE_EMBEDED 1

#define DMPAPER_A6_ROTATED 83

#define PAN_LETT_NORMAL_BOXED 4

#define DMPAPER_LETTER_TRANSVERSE 54

#define PATPAINT 16452105

#define HEBREW_CHARSET 177

#define SET_ARC_DIRECTION 4102

#define GETFACENAME 513

#define DEFAULT_QUALITY 0

#define EMR_EXTCREATEFONTINDIRECTW 82

#define META_DELETEOBJECT 496

#define GETSETSCREENPARAMS 3072

#define CCHDEVICENAME 32

#define TA_CENTER 6

#define LC_INTERIORS 128

#define QUERYDIBSUPPORT 3073

#define LCS_CALIBRATED_RGB 0

#define PAN_STRAIGHT_ARMS_WEDGE 3

#define DMRES_DRAFT -1

#define META_ARC 2071

#define META_EXCLUDECLIPRECT 1045

#define DC_MODEL 24

#define PT_MOVETO 6

#define META_SETVIEWPORTEXT 526

#define PAN_CONTRAST_NONE 2

#define NTM_DSIG 2097152

#define SYSTEM_FIXED_FONT 16

#define GGO_GRAY4_BITMAP 5

#define META_CREATEREGION 1791

#define DESKTOPVERTRES 117

#define PAN_SERIF_NORMAL_SANS 11

#define ICM_DONE_OUTSIDEDC 4

#define DMPAPER_JENV_CHOU4_ROTATED 87

#define PAN_SERIF_PERP_SANS 13

#define HORZRES 8

#define HALFTONE 4

#define DMDITHER_FINE 3

#define RELATIVE 2

#define EMR_POLYGON 3

#define VTA_CENTER 6

#define NUMBRUSHES 16

#define SETDIBSCALING 32

#define FEATURESETTING_OUTPUT 1

#define PRINTRATEUNIT_CPS 2

#define GCP_NUMERICSLOCAL 134217728

#define DMPAPER_10X11 45

#define DMPAPER_DBL_JAPANESE_POSTCARD 69

#define DMBIN_USER 256

#define DMPAPER_10X14 16

#define DMPAPER_A_PLUS 57

#define EMR_SETPOLYFILLMODE 19

#define PSPROTOCOL_BINARY 3

#define DT_CHARSTREAM 4

#define ENUMPAPERBINS 31

#define ENABLEPAIRKERNING 769

#define EMR_SETWINDOWORGEX 10

#define PFD_SWAP_EXCHANGE 512

#define DMORIENT_PORTRAIT 1

#define TT_PRIM_LINE 1

#define SPCLPASSTHROUGH2 4568

#define DEVICE_DEFAULT_FONT 14

#define ENABLERELATIVEWIDTHS 768

#define RC_FLOODFILL 4096

#define FS_SYMBOL 2147483648

#define GETPAIRKERNTABLE 258

#define PAN_WEIGHT_DEMI 7

#define ILLUMINANT_F2 8

#define DC_COLLATE 22

#define LPD_TYPE_COLORINDEX 1

#define PAN_FAMILYTYPE_INDEX 0

#define GDICOMMENT_MULTIFORMATS 1073741828

#define DMPAPER_A4_EXTRA 53

#define R2_MASKPENNOT 5

#define META_CREATEPATTERNBRUSH 505

#define SB_PREMULT_ALPHA 4

#define EMR_POLYPOLYGON16 91

#define PAN_FAMILY_PICTORIAL 5

#define PC_STYLED 32

#define META_SETPIXEL 1055

#define DMPAPER_A3_ROTATED 76

#define CC_NONE 0

#define R2_BLACK 1

#define GETPRINTINGOFFSET 13

#define DMCOLLATE_FALSE 0

#define DISPLAY_DEVICE_DISCONNECT 33554432

#define HANGEUL_CHARSET 129

#define SETMITERLIMIT 23

#define SYSPAL_NOSTATIC256 3

#define ILLUMINANT_FLUORESCENT 8

#define PAN_SERIF_THIN 7

#define RC_SAVEBITMAP 64

#define TA_NOUPDATECP 0

#define ENCAPSULATED_POSTSCRIPT 4116

#define META_FILLREGION 552

#define FF_SWISS 32

#define END_PATH 4098

#define GCPGLYPH_LINKAFTER 16384

#define TC_CR_ANY 16

#define LCS_GM_IMAGES 4

#define DMPAPER_P32K_ROTATED 107

#define EMR_POLYTEXTOUTA 96

#define EMR_POLYTEXTOUTW 97

#define TA_BOTTOM 8

#define PAN_MIDLINE_CONSTANT_SERIFED 10

#define DM_NUP 64

#define CC_WIDESTYLED 64

#define MM_LOENGLISH 4

#define PAN_SERIF_EXAGGERATED 9

#define TC_SA_CONTIN 256

#define RC_OP_DX_OUTPUT 16384

#define SRCINVERT 6684742

#define VTA_BASELINE 24

#define PT_BEZIERTO 4

#define BS_DIBPATTERN 5

#define PANOSE_COUNT 10

#define GCP_SYMSWAPOFF 8388608

#define PS_STYLE_MASK 15

#define DMPAPER_B5_JIS_ROTATED 80

#define GETDEVICEUNITS 42

#define PAN_XHEIGHT_INDEX 9

#define EMR_OFFSETCLIPRGN 26

#define PS_DASH 1

#define PFD_DOUBLEBUFFER_DONTCARE 1073741824

#define RC_DEVBITS 32768

#define REFERENCE_WHITE_MIN 6000

#define SET_SPREAD 4106

#define WGL_SWAPMULTIPLE_MAX 16

#define COLOR_ADJ_MIN -100

#define DMPAPER_PENV_10 105

#define DMPAPER_TABLOID 3

#define MM_ANISOTROPIC 8

#define DMPAPER_B5_TRANSVERSE 62

#define DMPAPER_LEDGER 4

#define PAN_LETT_OBLIQUE_FLATTENED 12

#define GM_LAST 2

#define PAN_SERIF_COVE 2

#define CLIP_STROKE_PRECIS 2

#define MONO_FONT 8

#define PAN_MIDLINE_STANDARD_TRIMMED 2

#define PAN_PROP_MODERN 3

#define PFD_SUPPORT_GDI 16

#define EMR_MAX 122

#define ILLUMINANT_B 2

#define ILLUMINANT_C 3

#define ILLUMINANT_A 1

#define META_POLYPOLYGON 1336

#define EMR_STROKEPATH 64

#define PC_RECTANGLE 2

#define PSINJECT_VMRESTORE 201

#define CM_DEVICE_ICM 1

#define PSINJECT_BEGINSETUP 16

#define GGO_BITMAP 1

#define TC_SF_X_YINDEP 32

#define DMPAPER_B5 13

#define DMPAPER_B4 12

#define COLOR_ADJ_MAX 100

#define GREEK_CHARSET 161

#define FS_TURKISH 16

#define PC_PATHS 512

#define GETTRACKKERNTABLE 259

#define PRINTRATEUNIT_PPM 1

#define PAN_STROKE_RAPID_VERT 6

#define EMR_CHORD 46

#define DMPAPER_JENV_KAKU3_ROTATED 85

#define SRCERASE 4457256

#define META_INTERSECTCLIPRECT 1046

#define TC_UA_ABLE 2048

#define META_EXTTEXTOUT 2610

#define DMPAPER_A6 70

#define DMPAPER_A5 11

#define RC_BITMAP64 8

#define DMPAPER_A2 66

#define DMPAPER_A4 9

#define DMPAPER_A3 8

#define NUMPENS 18

#define DMDITHER_COARSE 2

#define TA_LEFT 0

#define PAN_PROP_VERY_EXPANDED 7

#define PFD_GENERIC_FORMAT 64

#define OUT_CHARACTER_PRECIS 2

#define SETABORTPROC 9

#define EASTEUROPE_CHARSET 238

#define PAN_XHEIGHT_CONSTANT_SMALL 2

#define DMICM_ABS_COLORIMETRIC 4

#define EMR_ARCTO 55

#define BS_HOLLOW 1

#define PT_CLOSEFIGURE 1

#define EMR_CREATEDIBPATTERNBRUSHPT 94

#define LTGRAY_BRUSH 1

#define DMPAPER_USER 256

#define GET_PS_FEATURESETTING 4121

#define EMR_EXCLUDECLIPRECT 29

#define SB_NONE 0

#define PFD_GENERIC_ACCELERATED 4096

#define WGL_SWAP_UNDERLAY6 2097152

#define WGL_SWAP_UNDERLAY5 1048576

#define WGL_SWAP_UNDERLAY8 8388608

#define WGL_SWAP_UNDERLAY7 4194304

#define CS_DISABLE 2

#define WGL_SWAP_UNDERLAY2 131072

#define WGL_SWAP_UNDERLAY1 65536

#define WGL_SWAP_UNDERLAY4 524288

#define WGL_SWAP_UNDERLAY3 262144

#define RC_STRETCHDIB 8192

#define WGL_SWAP_UNDERLAY9 16777216

#define R2_XORPEN 7

#define EMR_STRETCHBLT 77

#define PSINJECT_DOCSUPPLIEDRES 6

#define DM_SPECVERSION 1025

#define DMPAPER_PENV_8_ROTATED 116

#define PC_NONE 0

#define GETPHYSPAGESIZE 12

#define DMPAPER_ENV_C65 32

#define META_SETTEXTJUSTIFICATION 522

#define PSINJECT_PAGEORDER 7

#define DCTT_BITMAP 1

#define LPD_SUPPORT_OPENGL 32

#define PSINJECT_PLATECOLOR 104

#define HORZSIZE 4

#define DMPAPER_B6_JIS 88

#define EXT_DEVICE_CAPS 4099

#define BLACK_BRUSH 4

#define EMR_POLYBEZIERTO16 88

#define META_BITBLT 2338

#define PATCOPY 15728673

#define PAN_CONTRAST_LOW 4

#define TEXTCAPS 34

#define DMBIN_AUTO 7

#define R2_MERGEPEN 15

#define EMR_GLSRECORD 102

#define TC_IA_ABLE 1024

#define CLIP_CHARACTER_PRECIS 1

#define PAN_WEIGHT_BOOK 5

#define PAN_MIDLINE_INDEX 8

#define PFD_STEREO_DONTCARE 2147483648

#define FW_BLACK 900

#define EMR_BEGINPATH 59

#define DM_ICMINTENT 16777216

#define WGL_SWAP_OVERLAY10 1024

#define ANTIALIASED_QUALITY 4

#define WGL_SWAP_OVERLAY11 2048

#define WGL_SWAP_OVERLAY12 4096

#define WGL_SWAP_OVERLAY13 8192

#define WGL_SWAP_OVERLAY14 16384

#define WGL_SWAP_OVERLAY15 32768

#define ANSI_VAR_FONT 12

#define DISPLAY_DEVICE_ACTIVE 1

#define AC_SRC_ALPHA 1

#define PSINJECT_BOUNDINGBOX 9

#define DMTT_BITMAP 1

#define DMMEDIA_TRANSPARENCY 2

#define EMR_GRADIENTFILL 118

#define SB_GRAD_RECT 16

#define BEGIN_PATH 4096

#define GCPCLASS_LOCALNUMBER 4

#define DMPAPER_TABLOID_EXTRA 52

#define PSINJECT_PAGEBBOX 106

#define META_SETTEXTCHAREXTRA 264

#define PAN_STROKE_GRADUAL_HORZ 5

#define PC_WIDE 16

#define EMR_POLYPOLYLINE16 90

#define EMR_SETCOLORADJUSTMENT 23

#define DT_RASPRINTER 2

#define DMBIN_FIRST 1

#define EMR_MIN 1

#define BI_RGB 0

#define GETEXTENDEDTEXTMETRICS 256

#define DCB_RESET 1

#define DMICMMETHOD_DEVICE 4

#define PSINJECT_ENDSETUP 17

#define CLOSECHANNEL 4112

#define DM_PANNINGHEIGHT 268435456

#define LF_FACESIZE 32

#define ETO_OPAQUE 2

#define DMORIENT_LANDSCAPE 2

#define CC_WIDE 16

#define META_SETPOLYFILLMODE 262

#define DMPAPER_EXECUTIVE 7

#define R2_MERGEPENNOT 14

#define ASPECTX 40

#define ILLUMINANT_DAYLIGHT 3

#define ASPECTY 42

#define EMR_COLORCORRECTPALETTE 111

#define GCP_CLASSIN 524288

#define DT_PLOTTER 0

#define R2_NOTMASKPEN 8

#define VTA_RIGHT 0

#define DMBIN_MANUAL 4

#define EMR_POLYLINETO 6

#define EMR_DELETECOLORSPACE 101

#define ERROR 0

#define DMDITHER_LINEART 4

#define EMR_SETMAPMODE 17

#define META_CREATEPENINDIRECT 762

#define SP_APPABORT -2

#define FW_REGULAR 400

#define MFCOMMENT 15

#define DISPLAY_DEVICE_ATTACHED 2

#define PS_ENDCAP_FLAT 512

#define PAN_STRAIGHT_ARMS_HORZ 2

#define DM_DEFAULTSOURCE 512

#define PFD_SUPPORT_OPENGL 32

#define EMR_POLYDRAW16 92

#define PAN_SERIF_FLARED 14

#define CHECKJPEGFORMAT 4119

#define MWT_IDENTITY 1

#define EMR_REALIZEPALETTE 52

#define FW_HEAVY 900

#define LPD_TYPE_RGBA 0

#define BS_PATTERN 3

#define PSINJECT_BEGINPAGESETUP 101

#define DIB_RGB_COLORS 0

#define QUERYESCSUPPORT 8

#define DM_TTOPTION 16384

#define CM_IN_GAMUT 0

#define ARABIC_CHARSET 178

#define META_POLYLINE 805

#define PAN_MIDLINE_LOW_SERIFED 13

#define EMR_HEADER 1

#define EPS_SIGNATURE 1179865157

#define SELECTPAPERSOURCE 18

#define EMR_RECTANGLE 43

#define DMBIN_TRACTOR 8

#define CHINESEBIG5_CHARSET 136

#define FF_ROMAN 16

#define STARTDOC 10

#define BALTIC_CHARSET 186

#define MERGECOPY 12583114

#define TMPF_TRUETYPE 4

#define META_FLOODFILL 1049

#define GETSCALINGFACTOR 14

#define PAN_LETT_OBLIQUE_ROUNDED 13

#define DMPAPER_LETTER_ROTATED 75

#define VREFRESH 116

#define EMR_FLATTENPATH 65

#define NOTSRCERASE 1114278

#define CC_ELLIPSES 8

#define EMR_POLYDRAW 56

#define PAN_XHEIGHT_DUCKING_LARGE 7

#define META_ELLIPSE 1048

#define PAN_XHEIGHT_DUCKING_STD 6

#define VTA_BOTTOM 2

#define QDI_STRETCHDIB 8

#define GDICOMMENT_UNICODE_STRING 64

#define TMPF_FIXED_PITCH 1

#define MWT_LEFTMULTIPLY 2

#define RGN_AND 1

#define PAN_WEIGHT_BOLD 8

#define NEXTBAND 3

#define EMR_CLOSEFIGURE 61

#define PAN_CONTRAST_VERY_LOW 3

#define DMPAPER_PENV_6_ROTATED 114

#define PR_JOBSTATUS 0

#define VTA_LEFT 8

#define DC_PRINTRATEPPM 31

#define DM_POSITION 32

#define CLIP_LH_ANGLES 16

#define DM_ORIENTATION 1

#define OUT_OUTLINE_PRECIS 8

#define TCI_SRCCHARSET 1

#define ELF_VERSION 0

#define FF_MODERN 48

#define NUMCOLORS 24

#define COLORMATCHTOTARGET_EMBEDED 1

#define OUT_DEFAULT_PRECIS 0

#define FF_DONTCARE 0

#define PAN_BENT_ARMS_SINGLE_SERIF 10

#define PAN_LETT_NORMAL_WEIGHTED 3

#define TC_RESERVED 32768

#define DISPLAY_DEVICE_VGA_COMPATIBLE 16

#define PAN_STROKE_GRADUAL_TRAN 3

#define CA_NEGATIVE 1

#define SB_GRAD_TRI 32

#define DEFAULT_PALETTE 15

#define BANDINFO 24

#define GCP_LIGATE 32

#define DM_PAPERSIZE 2

#define STRETCH_ANDSCANS 1

#define GCP_NUMERICSLATIN 67108864

#define DMBIN_CASSETTE 14

#define CC_STYLED 32

#define CREATECOLORSPACE_EMBEDED 1

#define ICM_QUERYPROFILE 3

#define PHYSICALWIDTH 110

#define PS_ENDCAP_SQUARE 256

#define TA_TOP 0

#define PAN_FAMILY_TEXT_DISPLAY 2

#define PC_NOCOLLAPSE 4

#define NULL_PEN 8

#define ICM_REGISTERICMATCHER 5

#define TC_OP_STROKE 2

#define DM_PRINTQUALITY 1024

#define MOUSETRAILS 39

#define DT_METAFILE 5

#define DMPAPER_DSHEET 25

#define EMR_TRANSPARENTBLT 116

#define CM_NONE 0

#define PAN_WEIGHT_HEAVY 9

#define CHECKPNGFORMAT 4120

#define GCPCLASS_LATINNUMERICTERMINATOR 6

#define DMDUP_SIMPLEX 1

#define LAYOUT_VBH 4

#define DC_PRINTRATE 26

#define OBJ_COLORSPACE 14

#define COLORRES 108

#define PAN_STRAIGHT_ARMS_SINGLE_SERIF 5

#define EMR_PLGBLT 79

#define MM_HIMETRIC 3

#define PAN_LETT_OBLIQUE_WEIGHTED 10

#define PFD_STEREO 2

#define NOMIRRORBITMAP 2147483648

#define FS_CHINESETRAD 1048576

#define QDI_SETDIBITS 1

#define EMR_CREATEPALETTE 49

#define OPAQUE 2

#define META_SETSTRETCHBLTMODE 263

#define R2_LAST 16

#define CC_CHORD 4

#define DMPAPER_PENV_4 99

#define PC_TRAPEZOID 4

#define DMPAPER_PENV_5 100

#define DMPAPER_PENV_2 97

#define PS_ENDCAP_MASK 3840

#define DMPAPER_PENV_3 98

#define DMPAPER_PENV_8 103

#define DMPAPER_PENV_9 104

#define DISPLAY_DEVICE_MULTI_DRIVER 2

#define DMPAPER_PENV_6 101

#define DMPAPER_PENV_7 102

#define PAN_LETT_NORMAL_OFF_CENTER 7

#define EMR_GLSBOUNDEDRECORD 103

#define DMPAPER_PENV_1 96

#define BS_DIBPATTERN8X8 8

#define DRIVERVERSION 0

#define TT_POLYGON_TYPE 24

#define PSINJECT_PAGES 4

#define TC_SA_DOUBLE 64

#define SCALINGFACTORX 114

#define EMR_POLYGON16 86

#define SCALINGFACTORY 115

#define DMPAPER_LAST 118

#define GETTECHNOLOGY 20

#define PSINJECT_DOCNEEDEDRES 5

#define CS_DELETE_TRANSFORM 3

#define GETSETPRINTORIENT 30

#define HS_HORIZONTAL 0

#define META_SETLAYOUT 329

#define DMPAPER_JENV_KAKU2_ROTATED 84

#define SB_CONST_ALPHA 1

#define SETCOPYCOUNT 17

#define BLTALIGNMENT 119

#define EMR_SETLAYOUT 115

#define SETALLJUSTVALUES 771

#define PSINJECT_ENDPAGESETUP 102

#define SP_USERABORT -3

#define TC_EA_DOUBLE 512

#define DMNUP_ONEUP 2

#define META_FRAMEREGION 1065

#define SET_POLY_MODE 4104

#define GCP_KASHIDA 1024

#define NUMFONTS 22

#define PC_POLYPOLYGON 256

#define OBJ_DC 3

#define DM_SCALE 16

#define PS_USERSTYLE 7

#define BLACKNESS 66

#define GCP_USEKERNING 8

#define CM_GAMMA_RAMP 2

#define DMRES_HIGH -4

#define PAN_PROP_EVEN_WIDTH 4

#define SP_ERROR -1

#define EMR_CREATEPEN 38

#define LC_POLYMARKER 8

#define META_STRETCHDIB 3907

#define EMR_SETCOLORSPACE 100

#define BS_HATCHED 2

#define EMR_POLYLINE 4

#define PFD_SWAP_COPY 1024

#define ELF_VENDOR_SIZE 4

#define PSINJECT_VMSAVE 200

#define DMPAPER_A4_ROTATED 77

#define EMR_SELECTCLIPPATH 67

#define GDI_ERROR 4294967295

#define GRADIENT_FILL_TRIANGLE 2

#define ETO_GLYPH_INDEX 16

#define PC_RESERVED 1

#define R2_MASKNOTPEN 3

#define GDICOMMENT_IDENTIFIER 1128875079

#define ENABLEDUPLEX 28

#define TT_PRIM_QSPLINE 2

#define EMR_RESTOREDC 34

#define THAI_CHARSET 222

#define PS_ENDCAP_ROUND 0

#define FS_GREEK 8

#define DMPAPER_ESHEET 26

#define PAN_STROKE_INSTANT_VERT 8

#define NEWFRAME 1

#define PAN_ANY 0

#define DMRES_MEDIUM -3

#define NULL_BRUSH 5

#define META_CHORD 2096

#define STRETCH_ORSCANS 2

#define DRAFT_QUALITY 1

#define OUT_SCREEN_OUTLINE_PRECIS 9

#define PAN_CONTRAST_VERY_HIGH 9

#define PAN_BENT_ARMS_HORZ 7

#define GCPCLASS_POSTBOUNDRTL 16

#define DMPAPER_PENV_9_ROTATED 117

#define EMR_PIE 47

#define PAN_BENT_ARMS_WEDGE 8

#define DISPLAY_DEVICE_REMOTE 67108864

#define ETO_NUMERICSLATIN 2048

#define DMPAPER_FANFOLD_LGL_GERMAN 41

#define BS_MONOPATTERN 9

#define ILLUMINANT_MAX_INDEX 8

#define EMR_POLYPOLYLINE 7

#define R2_NOTCOPYPEN 4

#define DMPAPER_FANFOLD_US 39

#define FLUSHOUTPUT 6

#define REFERENCE_WHITE_MAX 10000

#define LPD_SWAP_EXCHANGE 512

#define GCPCLASS_ARABIC 2

#define FS_VIETNAMESE 256

#define META_RESIZEPALETTE 313

#define DMPAPER_NOTE 18

#define EMR_BITBLT 76

#define ILLUMINANT_D55 5

#define DEVICE_FONTTYPE 2

#define EMR_EXTTEXTOUTW 84

#define META_SETBKMODE 258

#define POLYFILL_LAST 2

#define ILLUMINANT_D50 4

#define META_SETTEXTALIGN 302

#define GCP_JUSTIFY 65536

#define META_SETPALENTRIES 55

#define EMR_EXTTEXTOUTA 83

#define FW_DEMIBOLD 600

#define DM_COPIES 256

#define FW_MEDIUM 500

#define PSINJECT_ENDDEFAULTS 13

#define ICM_UNREGISTERICMATCHER 6

#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF 6

#define DC_MANUFACTURER 23

#define FIXED_PITCH 1

#define FW_ULTRABOLD 800

#define DMDITHER_RESERVED9 9

#define DMDITHER_RESERVED8 8

#define DMPAPER_LETTER_PLUS 59

#define NOTSRCCOPY 3342344

#define FEATURESETTING_NUP 0

#define DMDITHER_RESERVED7 7

#define GCPCLASS_LATIN 1

#define DMDITHER_RESERVED6 6

#define HOLLOW_BRUSH 5

#define NTM_NONNEGATIVE_AC 65536

#define PSINJECT_BEGINDEFAULTS 12

#define SB_PIXEL_ALPHA 2

#define DT_DISPFILE 6

#define EMR_POLYLINE16 87

#define RGN_DIFF 4

#define OUT_DEVICE_PRECIS 5

#define DMPAPER_PENV_5_ROTATED 113

#define PAN_WEIGHT_NORD 11

#define PRINTRATEUNIT_LPM 3

#define OBJ_MEMDC 10

#define VARIABLE_PITCH 2

#define LINECAPS 30

#define DMPAPER_ENV_ITALY 36

#define LC_POLYLINE 2

#define EMR_POLYBEZIER 2

#define SYSPAL_STATIC 1

#define PC_EXPLICIT 2

#define DCBA_FACEUPRIGHT 3

#define FW_EXTRALIGHT 200

#define DMPAPER_LETTERSMALL 2

#define DC_PRINTERMEM 28

#define FS_HEBREW 32

#define DM_PELSHEIGHT 1048576

#define GB2312_CHARSET 134

#define RC_GDI20_STATE 32

#define PSIDENT_PSCENTRIC 1

#define EXTTEXTOUT 512

#define ICM_DELETEPROFILE 2

#define EMR_SETWORLDTRANSFORM 35

#define GGO_BEZIER 3

#define DMCOLOR_MONOCHROME 1

#define PAN_PROP_CONDENSED 6

#define RC_DIBTODEV 512

#define RC_PALETTE 256

#define GCP_NEUTRALOVERRIDE 33554432

#define WGL_FONT_LINES 0

#define EMR_DELETEOBJECT 40

#define DCBA_FACEUPLEFT 2

#define CCHFORMNAME 32

#define PS_JOIN_MASK 61440

#define BS_PATTERN8X8 7

#define DMMEDIA_USER 256

#define OBJ_PEN 1

#define DSTINVERT 5570569

#define DMPAPER_LEGAL_EXTRA 51

#define NUMMARKERS 20

#define RC_BITBLT 1

#define PAN_CONTRAST_MEDIUM_LOW 5

#define SYSRGN 4

#define BLACK_PEN 7

#define PAN_LETT_NORMAL_ROUNDED 6

#define EMR_COLORMATCHTOTARGETW 121

#define TA_MASK 287

#define CP_RECTANGLE 1

#define DMICMMETHOD_USER 256

#define DMICM_CONTRAST 2

#define FW_NORMAL 400

#define DMICM_SATURATE 1

#define PFD_DEPTH_DONTCARE 536870912

#define EMR_SETVIEWPORTORGEX 12

#define COLORONCOLOR 3

#define DI_ROPS_READ_DESTINATION 2

#define DMDUP_HORIZONTAL 3

#define DCB_ENABLE 4

#define META_RECTANGLE 1051

#define FS_THAI 65536

#define CC_ROUNDRECT 256

#define META_DIBBITBLT 2368

#define DMRES_LOW -2

#define DMPAPER_B5_EXTRA 65

#define RC_BANDING 2

#define EMR_POLYLINETO16 89

#define TT_PRIM_CSPLINE 3

#define TA_BASELINE 24

#define PAN_LETT_OBLIQUE_BOXED 11

#define DC_BINADJUST 19

#define GETVECTORBRUSHSIZE 27

#define DCTT_SUBDEV 4

#define DCBA_FACEDOWNCENTER 257

#define META_ESCAPE 1574

#define META_SETRELABS 261

#define DT_RASCAMERA 3

#define GETEXTENTTABLE 257

#define OBJ_PAL 5

#define DMBIN_LARGEFMT 10

#define DCB_DIRTY 2

#define ILLUMINANT_D75 7

#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82

#define DMCOLLATE_TRUE 1

#define META_SELECTCLIPREGION 300

#define EMR_ROUNDRECT 44

#define DISPLAY_DEVICE_REMOVABLE 32

#define ILLUMINANT_D65 6

#define DMPAPER_P32KBIG_ROTATED 108

#define SP_NOTREPORTED 16384

#define DCBA_FACEUPNONE 0

#define FLI_MASK 4155

#define OEM_FIXED_FONT 10

#define PAN_WEIGHT_BLACK 10

#define EMR_SETVIEWPORTEXTEX 11

#define LF_FULLFACESIZE 64

#define DOWNLOADHEADER 4111

#define GRAY_BRUSH 2

#define PS_COSMETIC 0

#define EMR_SETMITERLIMIT 58

#define DMICMMETHOD_DRIVER 3

#define PSINJECT_PAGESATEND 3

#define PAN_WEIGHT_THIN 4

#define DCB_ACCUMULATE 2

#define DMPAPER_FOLIO 14

#define EMR_SELECTPALETTE 48

#define EMR_MASKBLT 78

#define DMPAPER_9X11 44

#define META_SCALEVIEWPORTEXT 1042

#define FEATURESETTING_PRIVATE_BEGIN 4096

#define PAN_CONTRAST_INDEX 4

#define FW_DONTCARE 0

#define COLORMGMTCAPS 121

#define EMR_FILLPATH 62

#define FW_ULTRALIGHT 200

#define PATINVERT 5898313

#define SHIFTJIS_CHARSET 128

#define ILLUMINANT_TUNGSTEN 1

#define PAN_WEIGHT_LIGHT 3

#define PSINJECT_BEGINPROLOG 14

#define LC_WIDE 16

#define SYMBOL_CHARSET 2

#define R2_NOT 6

#define R2_NOP 11

#define PS_DASHDOT 3

#define PAN_MIDLINE_LOW_TRIMMED 11

#define EMR_GDICOMMENT 70

#define SAVE_CTM 4101

#define SETCHARSET 772

#define DMPAPER_JENV_YOU4_ROTATED 92

#define SET_SCREEN_ANGLE 4105

#define DM_MEDIATYPE 33554432

#define DCB_DISABLE 8

#define RC_DI_BITMAP 128

#define WHITE_PEN 6

#define RC_GDI20_OUTPUT 16

#define CURVECAPS 28

#define LPD_DOUBLEBUFFER 1

#define PHYSICALHEIGHT 111

#define META_SELECTOBJECT 301

#define DC_DATATYPE_PRODUCED 21

#define EMR_SCALEWINDOWEXTEX 32

#define OBJ_ENHMETADC 12

#define DRAFTMODE 7

#define RGN_XOR 3

#define PAN_PROP_VERY_CONDENSED 8

#define FS_JOHAB 2097152

#define MWT_MAX 3

#define FW_BOLD 700

#define META_SETWINDOWEXT 524

#define LC_NONE 0

#define SETKERNTRACK 770

#define PAN_SERIF_ROUNDED 15

#define PFD_SUPPORT_DIRECTDRAW 8192

#define MM_HIENGLISH 5

#define GGO_GLYPH_INDEX 128

#define MM_TWIPS 6

#define ICM_OFF 1

#define DKGRAY_BRUSH 3

#define META_PAINTREGION 299

#define PAN_WEIGHT_VERY_LIGHT 2

#define EMR_SETTEXTALIGN 22

#define RC_BIGFONT 1024

#define DMPAPER_A3_EXTRA_TRANSVERSE 68

#define META_SCALEWINDOWEXT 1040

#define DMPAPER_LETTER 1

#define DMDISPLAYFLAGS_TEXTMODE 4

#define META_CREATEFONTINDIRECT 763

#define DC_PRINTRATEUNIT 27

#define OBJ_BITMAP 7

#define PSINJECT_EOF 19

#define EMR_EXTSELECTCLIPRGN 75

#define META_TEXTOUT 1313

#define PAN_PROP_OLD_STYLE 2

#define ETO_RTLREADING 128

#define DMPAPER_P32KBIG 95

#define PAN_CONTRAST_MEDIUM 6

#define RDH_RECTANGLES 1

#define ETO_IGNORELANGUAGE 4096

#define LCS_GM_GRAPHICS 2

#define ANSI_FIXED_FONT 11

#define DMPAPER_ENV_INVITE 47

#define CLR_INVALID 4294967295

#define OBJ_FONT 6

#define EMR_CREATECOLORSPACEW 122

#define PAN_MIDLINE_CONSTANT_POINTED 9

#define OBJ_EXTPEN 11

#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 1

#define DC_PERSONALITY 25

#define PS_DASHDOTDOT 4

#define PAN_STRAIGHT_ARMS_VERT 4

#define DMPAPER_LETTER_EXTRA_TRANSVERSE 56

#define DMPAPER_QUARTO 15

#define META_PIE 2074

#define ENHMETA_STOCK_OBJECT 2147483648

#define DMPAPER_A3_EXTRA 63

#define DM_BITSPERPEL 262144

#define PSPROTOCOL_TBCP 2

#define GGO_METRICS 0

#define TURKISH_CHARSET 162

#define META_CREATEPALETTE 247

#define TC_OP_CHARACTER 1

#define MM_MAX 8

#define DM_DISPLAYFREQUENCY 4194304

#define DMPAPER_B6_JIS_ROTATED 89

#define DMPAPER_LEGAL 5

#define FEATURESETTING_PROTOCOL 6

#define RESTORE_CTM 4100

#define RGB_GAMMA_MAX 65000

#define PAN_STROKE_RAPID_HORZ 7

#define MWT_MIN 1

#define RGN_ERROR 0

#define HS_VERTICAL 1

#define PAN_XHEIGHT_CONSTANT_STD 3

#define DCTT_DOWNLOAD 2

#define LAYOUT_RTL 1

#define DMPAPER_FIRST 1

#define EMR_SETROP2 20

#define DMPAPER_PENV_4_ROTATED 112

#define DMPAPER_A5_TRANSVERSE 61

#define PFD_OVERLAY_PLANE 1

#define POSTSCRIPT_INJECTION 4118

#define DMDITHER_ERRORDIFFUSION 5

#define LC_WIDESTYLED 64

#define CP_NONE 0

#define PSINJECT_PSADOBE 2

#define EMR_POLYPOLYGON 8

#define WINDING 2

#define PC_WIDESTYLED 64

#define NUMRESERVED 106

#define OUT_STRING_PRECIS 1

#define MERGEPAINT 12255782

#define EMR_WIDENPATH 66

#define EMR_STROKEANDFILLPATH 63

#define WHITEONBLACK 2

#define NONANTIALIASED_QUALITY 3

#define PAN_SERIF_SQUARE 6

#define PAN_MIDLINE_LOW_POINTED 12

#define GETCOLORTABLE 5

#define BI_RLE8 1

#define ETO_NUMERICSLOCAL 1024

#define PAN_LETT_NORMAL_FLATTENED 5

#define PLANES 14

#define DMPAPER_ENV_PERSONAL 38

#define PFD_NEED_PALETTE 128

#define WHITENESS 16711778

#define STOCK_LAST 19

#define TA_RIGHT 2

#define EMR_SETPIXELV 15

#define EMR_SCALEVIEWPORTEXTEX 31

#define EMR_PAINTRGN 74

#define DMBIN_ONLYONE 1

#define DMTT_DOWNLOAD_OUTLINE 4

#define WGL_FONT_POLYGONS 1

#define CAPTUREBLT 1073741824

#define GGO_GRAY2_BITMAP 4

#define LCS_GM_BUSINESS 1

#define VERTSIZE 6

#define MM_TEXT 1

#define BI_RLE4 2

#define GRADIENT_FILL_OP_FLAG 255

#define NTM_ITALIC 1

#define DMBIN_UPPER 1

#define PFD_TYPE_COLORINDEX 1

#define DESKTOPHORZRES 118

#define TC_SCROLLBLT 65536

#define PFD_SWAP_LAYER_BUFFERS 2048

#define PAN_STROKE_GRADUAL_VERT 4

#define PAN_LETTERFORM_INDEX 7

#define RGN_OR 2

#define DMPAPER_ENV_9 19

#define LAYOUT_ORIENTATIONMASK 7

#define OBJ_METADC 4

#define EMR_SETBKMODE 18

#define FW_EXTRABOLD 800

#define MM_MIN 1

#define GCP_DISPLAYZWG 4194304

#define OUT_STROKE_PRECIS 3

#define TC_CR_90 8

#define META_STRETCHBLT 2851

#define CC_CIRCLES 1

#define PS_TYPE_MASK 983040

#define R2_WHITE 16

#define EMR_FILLRGN 71

#define SETLINEJOIN 22

#define OBJ_METAFILE 9

#define RASTER_FONTTYPE 1

#define CLIP_MASK 15

#define POSTSCRIPT_IGNORE 38

#define PS_ALTERNATE 8

#define DMPAPER_LETTER_EXTRA 50

#define DMPAPER_ENV_14 23

#define DMPAPER_ENV_12 22

#define DMPAPER_ENV_11 21

#define DMPAPER_ENV_10 20

#define EMR_POLYBEZIER16 85

#define DMDITHER_USER 256

#define LPD_TRANSPARENT 4096

#define ASPECT_FILTERING 1

#define PAN_MIDLINE_STANDARD_SERIFED 4

#define REFERENCE_BLACK_MIN 0

#define DMICM_COLORIMETRIC 3

#define OUT_TT_ONLY_PRECIS 7

#define FLI_GLYPHS 262144

#define EMR_SETBKCOLOR 25

#define RGN_COPY 5

#define PAN_BENT_ARMS_DOUBLE_SERIF 11

#define EPSPRINTING 33

#define CC_PIE 2

#define POLYGONALCAPS 32

#define FF_DECORATIVE 80

#define META_REALIZEPALETTE 53

#define PS_DOT 2

#define DMNUP_SYSTEM 1

#define DM_YRESOLUTION 8192

#define TCI_SRCCODEPAGE 2

#define DMCOLOR_COLOR 2

#define DMPAPER_PENV_10_ROTATED 118

#define BITSPIXEL 12

#define SETCOLORTABLE 4

#define GCPCLASS_PREBOUNDLTR 128

#define DM_PANNINGWIDTH 134217728

#define MM_LOMETRIC 2

#define PAN_SERIF_OBTUSE_SANS 12

#define META_SETROP2 260

#define PAN_SERIF_OBTUSE_SQUARE_COVE 5

#define PS_JOIN_MITER 8192

#define DRAWPATTERNRECT 25

#define FEATURESETTING_CUSTPAPER 3

#define PAN_PROP_MONOSPACED 9

#define TA_RTLREADING 256

#define ICM_ON 2

#define PFD_TYPE_RGBA 0

#define DMPAPER_P16K 93

#define PC_POLYGON 1

#define HS_FDIAGONAL 2

#define OEM_CHARSET 255

#define PSPROTOCOL_ASCII 0

#define GCPGLYPH_LINKBEFORE 32768

#define DMPAPER_A5_EXTRA 64

#define TRANSPARENT 1

#define STRETCH_HALFTONE 4

#define DMPAPER_JAPANESE_POSTCARD_ROTATED 81

#define VERTRES 10

#define R2_COPYPEN 13

#define DC_MEDIATYPES 35

#define FS_ARABIC 64

#define TRUETYPE_FONTTYPE 4

#define FEATURESETTING_MIRROR 4

#define FS_WANSUNG 524288

#define PAN_WEIGHT_MEDIUM 6

#define ENHMETA_SIGNATURE 1179469088

#define PSINJECT_DOCUMENTPROCESSCOLORS 10

#define DM_DUPLEX 4096

#define FS_CYRILLIC 4

#define HS_CROSS 4

#define EMR_CREATEMONOBRUSH 93

#define REFERENCE_BLACK_MAX 4000

#define DMPAPER_JENV_CHOU3 73

#define DMPAPER_JENV_CHOU4 74

#define GDICOMMENT_ENDGROUP 3

#define RC_STRETCHBLT 2048

#define EMR_RESERVED_120 120

#define RUSSIAN_CHARSET 204

#define BS_INDEXED 4

#define GGO_NATIVE 2

#define TECHNOLOGY 2

#define NTM_BOLD 32

#define PSPROTOCOL_BCP 1

#define PAN_LETT_OBLIQUE_OFF_CENTER 14

#define CS_ENABLE 1

#define GM_COMPATIBLE 1

#define META_ROUNDRECT 1564

#define DMPAPER_JENV_KAKU3 72

#define DMPAPER_JENV_KAKU2 71

#define PFD_DOUBLEBUFFER 1

#define DMDITHER_GRAYSCALE 10

#define GCPCLASS_POSTBOUNDLTR 32

#define DMPAPER_A4_TRANSVERSE 55

#define DIB_PAL_COLORS 1

#define EMR_SELECTOBJECT 37

#define PFD_NEED_SYSTEM_PALETTE 256

#define FS_JISJAPAN 131072

#define CLIP_TO_PATH 4097

#define PAN_PROP_EXPANDED 5

#define PT_LINETO 2

#define EMR_EXTCREATEPEN 95

#define DM_PELSWIDTH 524288

#define PSINJECT_COMMENTS 11

#define GCP_REORDER 2

#define POSTSCRIPT_IDENTIFY 4117

#define DCBA_FACEDOWNRIGHT 259

#define EMR_SETPALETTEENTRIES 50

#define DMICMMETHOD_NONE 1

#define DC_EMF_COMPLIANT 20

#define META_EXTFLOODFILL 1352

#define META_INVERTREGION 298

#define DMPAPER_12X11 90

#define DM_ICMMETHOD 8388608

#define DMPAPER_PENV_1_ROTATED 109

#define BI_BITFIELDS 3

#define ELF_CULTURE_LATIN 0

#define DT_RASDISPLAY 1

#define DMPAPER_ENV_MONARCH 37

#define DM_COLLATE 32768

#define EMR_SETARCDIRECTION 57

#define DMICMMETHOD_SYSTEM 2

#define ICM_SETDEFAULTPROFILE 4

#define SP_OUTOFDISK -4

#define PAN_FAMILY_SCRIPT 3

#define DMBIN_LOWER 2

#define PAN_LETT_OBLIQUE_CONTACT 9

#define PAN_SERIF_OBTUSE_COVE 3

#define DMBIN_ENVELOPE 5

#define PAN_CULTURE_LATIN 0

#define META_DIBSTRETCHBLT 2881

#define ABORTDOC 2

#define PRINTRATEUNIT_IPM 4

#define METAFILE_DRIVER 2049

#define PAN_STROKEVARIATION_INDEX 5

#define EMR_SETDIBITSTODEVICE 80

#define META_OFFSETVIEWPORTORG 529

#define LPD_SWAP_COPY 1024

#define ABSOLUTE 1

#define PAN_MIDLINE_CONSTANT_TRIMMED 8

#define META_LINETO 531

#define PC_INTERIORS 128

#define DI_APPBANDING 1

#define PFD_MAIN_PLANE 0

#define META_OFFSETCLIPRGN 544

#define DMMEDIA_STANDARD 1

#define NTM_TT_OPENTYPE 262144

#define DM_LOGPIXELS 131072

#define DEVICEDATA 19

#define VIETNAMESE_CHARSET 163

#define FF_SCRIPT 64

#define FW_THIN 100

#define WGL_SWAP_OVERLAY1 2

#define WGL_SWAP_OVERLAY2 4

#define DMPAPER_ENV_C6 31

#define DMPAPER_ENV_C5 28

#define DMPAPER_ENV_C4 30

#define DMPAPER_ENV_C3 29

#define BI_PNG 5

#define WGL_SWAP_OVERLAY9 512

#define WGL_SWAP_OVERLAY7 128

#define WGL_SWAP_OVERLAY8 256

#define WGL_SWAP_OVERLAY5 32

#define WGL_SWAP_OVERLAY6 64

#define WGL_SWAP_OVERLAY3 8

#define WGL_SWAP_OVERLAY4 16

#define GCPCLASS_PREBOUNDRTL 64

#define DMPAPER_PENV_3_ROTATED 111

#define GDICOMMENT_BEGINGROUP 2

#define DMPAPER_A4_PLUS 60

#define CLIP_TT_ALWAYS 32

#define GETTECHNOLGY 20

#define DMPAPER_ENV_DL 27

#define OBJ_BRUSH 2

#define GCP_ERROR 32768

#define DMPAPER_JENV_YOU4 91

#define SYSTEM_FONT 13

#define LCS_GM_ABS_COLORIMETRIC 8

#define DMPAPER_A3_TRANSVERSE 67

#define MAC_CHARSET 77

#define META_CREATEBRUSHINDIRECT 764

#define GGO_GRAY8_BITMAP 6

#define DMMEDIA_GLOSSY 3

#define DM_DISPLAYFLAGS 2097152

#define PSINJECT_ORIENTATION 8

#define PAN_WEIGHT_INDEX 2

#define EMR_ALPHABLEND 114

#define EMR_CREATECOLORSPACE 99

#define PFD_UNDERLAY_PLANE -1

#define LPD_SHARE_STENCIL 128

#define DMPAPER_ENV_B6 35

#define DMPAPER_ENV_B5 34

#define DMPAPER_ENV_B4 33

#define CLIPCAPS 36

#define DMPAPER_FANFOLD_STD_GERMAN 40

#define PAN_MIDLINE_HIGH_SERIFED 7

#define NULLREGION 1

#define DEFAULT_PITCH 0

#define META_MOVETO 532

#define BLACKONWHITE 1

#define SET_MIRROR_MODE 4110

#define EMR_INVERTRGN 73

#define OPENCHANNEL 4110

#define SET_CLIP_BOX 4108

#define DMBIN_LARGECAPACITY 11

#define META_DIBCREATEPATTERNBRUSH 322

#define DMPAPER_JAPANESE_POSTCARD 43

#define GETVECTORPENSIZE 26

#define ANSI_CHARSET 0

#define LOGPIXELSX 88

#define FLOODFILLBORDER 0

#define LOGPIXELSY 90

#define PAN_STROKE_GRADUAL_DIAG 2

#define EMR_RESERVED_119 119

#define EMR_RESERVED_117 117

#define EMR_RESERVED_110 110

#define SRCCOPY 13369376

#define PAN_SERIF_BONE 8

#define PSINJECT_DOCUMENTPROCESSCOLORSATEND 21

#define EMR_EXTFLOODFILL 53

#define GCP_DIACRITIC 256

#define META_SETVIEWPORTORG 525

#define EMR_RESERVED_107 107

#define EMR_RESERVED_108 108

#define PSIDENT_GDICENTRIC 0

#define EMR_RESERVED_105 105

#define PSINJECT_BEGINSTREAM 1

#define EMR_RESERVED_106 106

#define SYSPAL_ERROR 0

#define EMR_RESERVED_109 109

#define OUT_TT_PRECIS 4

#define BS_DIBPATTERNPT 6

#define EMR_ANGLEARC 41

#define PSINJECT_ENDPAGECOMMENTS 107

#define EMR_CREATEBRUSHINDIRECT 39

#define DMPAPER_A4SMALL 10

#define SYSPAL_NOSTATIC 2

#define JOHAB_CHARSET 130

#define CM_OUT_OF_GAMUT 255

#define DEFAULT_GUI_FONT 17

#define META_SETDIBTODEV 3379

#define SET_BOUNDS 4109

#define TC_VA_ABLE 16384

#define TC_SA_INTEGER 128

#define DMPAPER_RESERVED_48 48

#define DMPAPER_RESERVED_49 49

#define ILLUMINANT_DEVICE_DEFAULT 0

#define GDICOMMENT_WINDOWS_METAFILE 2147483649

#define ICM_ADDPROFILE 1

#define PSINJECT_SHOWPAGE 105

#define FW_LIGHT 300

#define CC_INTERIORS 128

#define EMR_SAVEDC 33

#define EMR_SETSTRETCHBLTMODE 21

#define META_PATBLT 1565

#define HS_BDIAGONAL 3

#define DMPAPER_CSHEET 24

#define LC_MARKER 4

#define PAN_BENT_ARMS_VERT 9

#define POSTSCRIPT_PASSTHROUGH 4115

#define DMPAPER_A5_ROTATED 78

#define WGL_SWAP_MAIN_PLANE 1

#define LAYOUT_BITMAPORIENTATIONPRESERVED 8

#define LAYOUT_BTT 2

#define TT_AVAILABLE 1

#define OBJ_REGION 8

#define HS_DIAGCROSS 5

#define ENUMPAPERMETRICS 34

#define GCPCLASS_LATINNUMERICSEPARATOR 7

#define GM_ADVANCED 2

#define EMR_EOF 14

#define CM_CMYK_COLOR 4

#define TMPF_DEVICE 8

#define ASPECTXY 44

#define EMR_FRAMERGN 72

#define PS_INSIDEFRAME 6

#define TC_SO_ABLE 4096

#define NTM_REGULAR 64

#define GCP_JUSTIFYIN 2097152

#define LC_STYLED 32

#define LPD_STEREO 2

#define CP_REGION 2

#define GRADIENT_FILL_RECT_V 1

#define BI_JPEG 4

#define R2_MERGENOTPEN 12

#define DMTT_SUBDEV 3

#define PS_SOLID 0

#define SET_BACKGROUND_COLOR 4103

#define R2_NOTMERGEPEN 2

#define TA_UPDATECP 1

#define GCP_DBCS 1

#define META_SETWINDOWORG 523

#define GCP_MAXEXTENT 1048576

#define DMBIN_ENVMANUAL 6

#define PFD_DRAW_TO_BITMAP 8

#define DMPAPER_P32K 94

#define META_RESTOREDC 295

#define PSINJECT_PAGETRAILER 103

#define DM_PAPERLENGTH 4

#define GRADIENT_FILL_RECT_H 0

#define SIZEPALETTE 104

#define TC_RA_ABLE 8192

#define GETSETPAPERBINS 29

#define OUT_RASTER_PRECIS 6

#define POSTSCRIPT_DATA 37

#define GETSETPAPERMETRICS 35

#define ETO_CLIPPED 4

#define EMR_SETMETARGN 28

#define GCP_GLYPHSHAPE 16

#define GETPENWIDTH 16

#define META_SETBKCOLOR 513

#define BKMODE_LAST 2

#define DCTT_DOWNLOAD_OUTLINE 8

#define DEFAULT_CHARSET 1

#define HANGUL_CHARSET 129

#define FS_LATIN1 1

#define PAN_NO_FIT 1

#define TC_CP_STROKE 4

#define PC_WINDPOLYGON 4

#define FS_LATIN2 2

#define DC_MEDIAREADY 29

#define EMR_RESIZEPALETTE 51

#define PS_JOIN_ROUND 0

#define PAN_XHEIGHT_DUCKING_SMALL 5

#define EMR_LINETO 54

#define SRCAND 8913094

#define MM_MAX_FIXEDSCALE 6

#define EMR_ENDPATH 60

#define DISPLAY_DEVICE_PRIMARY_DEVICE 4

#define MM_ISOTROPIC 7

#define CBM_INIT 4

#define MAXSTRETCHBLTMODE 4

#define LPD_SHARE_ACCUM 256

#define SHADEBLENDCAPS 120

#define EMR_POLYBEZIERTO 5

#define WHITE_BRUSH 0

#define RGB_GAMMA_MIN 1344

#define EMR_INTERSECTCLIPRECT 30

#define EMR_PIXELFORMAT 104

#define STRETCH_DELETESCANS 3

#define PAN_LETT_NORMAL_SQUARE 8

#define META_ANIMATEPALETTE 1078

#define FLOODFILLSURFACE 1

#define OBJ_ENHMETAFILE 13

#define AC_SRC_OVER 0

#define DMICM_USER 256

#define DMPAPER_15X11 46

#define PAN_CONTRAST_HIGH 8

#define RGN_MIN 1

#define PSINJECT_ENDPROLOG 15

#define DISPLAY_DEVICE_MIRRORING_DRIVER 8

#define BS_NULL 1

#define EMR_SETBRUSHORGEX 13

#define META_SELECTPALETTE 564

#define EMR_SETMAPPERFLAGS 16

#define PFD_DRAW_TO_WINDOW 4

#define CLIP_DEFAULT_PRECIS 0

#define DC_STAPLE 30

#define FONTMAPPER_MAX 10

#define EMR_ABORTPATH 68

#define LPD_SHARE_DEPTH 64

#define DCB_SET 3

#define ALTERNATE 1

#define LPD_SUPPORT_GDI 16

#define PAN_MIDLINE_HIGH_POINTED 6

#define PC_SCANLINE 8

#define GCPCLASS_NEUTRAL 3

#define CA_LOG_FILTER 2

#define PAN_MIDLINE_HIGH_TRIMMED 5

#define META_SETTEXTCOLOR 521

#define DMPAPER_B_PLUS 58

#define PASSTHROUGH 19

#define PAN_SERIFSTYLE_INDEX 1

#define EMR_MOVETOEX 27

#define DOWNLOADFACE 514

#define DCBA_FACEDOWNNONE 256

#define DM_DITHERTYPE 67108864

#define PAN_ARMSTYLE_INDEX 6

#define R2_MASKPEN 9

#define EMR_STRETCHDIBITS 81

#define EMR_ARC 45

#define FEATURESETTING_NEGATIVE 5

#define DC_NUP 33

#define META_SAVEDC 30

#define NTM_MULTIPLEMASTER 524288

#define DMDITHER_NONE 1

#define NTM_TYPE1 1048576

#define ILLUMINANT_NTSC 3

#define DMPAPER_ISO_B4 42

#define PAN_LETT_NORMAL_CONTACT 2

#define DMPAPER_P16K_ROTATED 106

#define PS_GEOMETRIC 65536

#define DMPAPER_PENV_2_ROTATED 110

#define GCPCLASS_NUMERICSEPARATOR 8

#define AD_CLOCKWISE 2

#define PSINJECT_ENDSTREAM 20

#define META_SETMAPPERFLAGS 561

#define HGDI_ERROR 4294967295

#define DMPAPER_STATEMENT 6

#define DMPAPER_PENV_7_ROTATED 115

#define GCPCLASS_LATINNUMBER 5

#define PAN_PROPORTION_INDEX 3

#define PAN_LETT_OBLIQUE_SQUARE 15

#define DCBA_FACEUPCENTER 1

#define DMPAPER_B4_JIS_ROTATED 79

#define PDEVICESIZE 26

#define DMBIN_MIDDLE 3

#define META_SETMAPMODE 259

#define SIMPLEREGION 2

#define TRANSFORM_CTM 4107

#define OUT_PS_ONLY_PRECIS 10

#define PSINJECT_PAGENUMBER 100

#define PS_NULL 5

#define DMBIN_FORMSOURCE 15

#define EMR_MODIFYWORLDTRANSFORM 36

#define BS_SOLID 0

#define RGN_MAX 5

#define RC_SCALING 4

#define STRETCHBLT 2048

#define PAN_MIDLINE_STANDARD_POINTED 3

#define GCP_NUMERICOVERRIDE 16777216

#define DMBIN_SMALLFMT 9

#define AD_COUNTERCLOCKWISE 1

#define EMR_SETICMMODE 98

#define QDI_DIBTOSCREEN 4

#define GDICOMMENT_UNICODE_END 128

#define FS_BALTIC 128

#define SRCPAINT 15597702

#define PROOF_QUALITY 2

#define RASTERCAPS 38

#define PAN_SERIF_TRIANGLE 10

#define R2_NOTXORPEN 10

#define DMDUP_VERTICAL 2

#define FW_SEMIBOLD 600

#define DC_MEDIATYPENAMES 34

#define DMPAPER_JENV_CHOU3_ROTATED 86

#define QDI_GETDIBITS 2

#define COMPLEXREGION 3

#define PSINJECT_TRAILER 18

#define EMR_SETTEXTCOLOR 24

#define GCPCLASS_HEBREW 2

#define SP_OUTOFMEMORY -5

#define DMBIN_LAST 15

#define FEATURESETTING_PSLEVEL 2

#define PAN_CONTRAST_MEDIUM_HIGH 7

#define DISPLAY_DEVICE_MODESPRUNED 134217728

#define ICM_QUERY 3

#define FS_CHINESESIMP 262144

#define VTA_TOP 0

#define DMPAPER_11X17 17

#define SETLINECAP 21

#define CLIP_EMBEDDED 128

#define NTM_PS_OPENTYPE 131072

#define DM_PAPERWIDTH 8

#define MWT_RIGHTMULTIPLY 3

#define PAN_XHEIGHT_CONSTANT_LARGE 4

#define DCBA_FACEDOWNLEFT 258

#define META_POLYGON 804

#define TCI_SRCFONTSIG 3

#define ENDDOC 11

#define PAN_FAMILY_DECORATIVE 4

#define FEATURESETTING_PRIVATE_END 8191

#define WGL_SWAP_UNDERLAY12 134217728

#define WGL_SWAP_UNDERLAY13 268435456

#define WGL_SWAP_UNDERLAY10 33554432

#define TT_ENABLED 2

#define PHYSICALOFFSETY 113

#define META_OFFSETWINDOWORG 527

#define WGL_SWAP_UNDERLAY11 67108864

#define PHYSICALOFFSETX 112

#define DC_COLORDEVICE 32

#define WGL_SWAP_UNDERLAY14 536870912

#define WGL_SWAP_UNDERLAY15 1073741824

#define EMR_SETICMPROFILEA 112

#define EMR_ELLIPSE 42

#define DM_FORMNAME 65536

#define ICM_QUERYMATCH 7

#define DMTT_DOWNLOAD 2

#define PAN_SERIF_SQUARE_COVE 4

#define TMPF_VECTOR 2

#define EMR_SETWINDOWEXTEX 9

#define PS_JOIN_BEVEL 4096

#define DM_COLOR 2048

#define EMR_SETICMPROFILEW 113

typedef struct _FLOAT128 _FLOAT128, *P_FLOAT128;

struct _FLOAT128 {
    longlong LowPart;
    longlong HighPart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE _SYSTEM_AUDIT_CALLBACK_ACE, *P_SYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _ACE_HEADER _ACE_HEADER, *P_ACE_HEADER;

typedef struct _ACE_HEADER ACE_HEADER;

struct _ACE_HEADER {
    BYTE AceType;
    BYTE AceFlags;
    WORD AceSize;
};

struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct LIST_ENTRY32 LIST_ENTRY32, *PLIST_ENTRY32;

struct LIST_ENTRY32 {
    DWORD Flink;
    DWORD Blink;
};

typedef struct _TOKEN_PRIVILEGES _TOKEN_PRIVILEGES, *P_TOKEN_PRIVILEGES;

typedef struct _LUID_AND_ATTRIBUTES _LUID_AND_ATTRIBUTES, *P_LUID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;

typedef struct _LUID _LUID, *P_LUID;

typedef struct _LUID LUID;

struct _LUID {
    DWORD LowPart;
    LONG HighPart;
};

struct _LUID_AND_ATTRIBUTES {
    LUID Luid;
    DWORD Attributes;
};

struct _TOKEN_PRIVILEGES {
    DWORD PrivilegeCount;
    LUID_AND_ATTRIBUTES Privileges[1];
};

typedef struct _IMAGE_THUNK_DATA32 _IMAGE_THUNK_DATA32, *P_IMAGE_THUNK_DATA32;

typedef union _union_156.conflict _union_156.conflict, *P_union_156.conflict;

union _union_156.conflict {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

struct _IMAGE_THUNK_DATA32 {
    union _union_156.conflict u1;
};

typedef struct _MESSAGE_RESOURCE_BLOCK _MESSAGE_RESOURCE_BLOCK, *P_MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_BLOCK {
    DWORD LowId;
    DWORD HighId;
    DWORD OffsetToEntries;
};

typedef union _union_261 _union_261, *P_union_261;

union _union_261 {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

typedef struct _OBJECT_TYPE_LIST _OBJECT_TYPE_LIST, *P_OBJECT_TYPE_LIST;

struct _OBJECT_TYPE_LIST {
    WORD Level;
    WORD Sbz;
    GUID *ObjectType;
};

typedef struct _IMAGE_OPTIONAL_HEADER _IMAGE_OPTIONAL_HEADER, *P_IMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_DATA_DIRECTORY _IMAGE_DATA_DIRECTORY, *P_IMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;

struct _IMAGE_DATA_DIRECTORY {
    DWORD VirtualAddress;
    DWORD Size;
};

struct _IMAGE_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    DWORD SizeOfStackReserve;
    DWORD SizeOfStackCommit;
    DWORD SizeOfHeapReserve;
    DWORD SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef union _union_253 _union_253, *P_union_253;

union _union_253 {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef ULONG_PTR KSPIN_LOCK;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U _IMAGE_RESOURCE_DIR_STRING_U, *P_IMAGE_RESOURCE_DIR_STRING_U;

struct _IMAGE_RESOURCE_DIR_STRING_U {
    WORD Length;
    WCHAR NameString[1];
};

typedef union _union_259 _union_259, *P_union_259;

union _union_259 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

typedef struct _SECURITY_QUALITY_OF_SERVICE _SECURITY_QUALITY_OF_SERVICE, *P_SECURITY_QUALITY_OF_SERVICE;

typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous=0,
    SecurityIdentification=1,
    SecurityImpersonation=2,
    SecurityDelegation=3
} _SECURITY_IMPERSONATION_LEVEL;

typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;

typedef BYTE BOOLEAN;

typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;

struct _SECURITY_QUALITY_OF_SERVICE {
    DWORD Length;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
    BOOLEAN EffectiveOnly;
};

typedef struct _IMAGE_FUNCTION_ENTRY _IMAGE_FUNCTION_ENTRY, *P_IMAGE_FUNCTION_ENTRY;

struct _IMAGE_FUNCTION_ENTRY {
    DWORD StartingAddress;
    DWORD EndingAddress;
    DWORD EndOfPrologue;
};

typedef LPCSTR LPCTSTR;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE _SECURITY_DESCRIPTOR_RELATIVE, *P_SECURITY_DESCRIPTOR_RELATIVE;

typedef WORD SECURITY_DESCRIPTOR_CONTROL;

struct _SECURITY_DESCRIPTOR_RELATIVE {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    DWORD Owner;
    DWORD Group;
    DWORD Sacl;
    DWORD Dacl;
};

typedef struct _LIST_ENTRY _LIST_ENTRY, *P_LIST_ENTRY;

struct _LIST_ENTRY {
    struct _LIST_ENTRY *Flink;
    struct _LIST_ENTRY *Blink;
};

typedef struct _SYSTEM_ALARM_CALLBACK_ACE _SYSTEM_ALARM_CALLBACK_ACE, *P_SYSTEM_ALARM_CALLBACK_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

struct _SYSTEM_ALARM_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef union _union_228 _union_228, *P_union_228;

typedef struct _struct_229 _struct_229, *P_struct_229;

struct _struct_229 {
    DWORD Short;
    DWORD Long;
};

union _union_228 {
    BYTE ShortName[8];
    struct _struct_229 Name;
    DWORD LongName[2];
};

typedef struct SYSTEM_BATTERY_STATE SYSTEM_BATTERY_STATE, *PSYSTEM_BATTERY_STATE;

struct SYSTEM_BATTERY_STATE {
    BOOLEAN AcOnLine;
    BOOLEAN BatteryPresent;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Spare1[4];
    DWORD MaxCapacity;
    DWORD RemainingCapacity;
    DWORD Rate;
    DWORD EstimatedTime;
    DWORD DefaultAlert1;
    DWORD DefaultAlert2;
};

typedef union _union_226 _union_226, *P_union_226;

union _union_226 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

typedef struct _IMAGE_OPTIONAL_HEADER64 _IMAGE_OPTIONAL_HEADER64, *P_IMAGE_OPTIONAL_HEADER64;

struct _IMAGE_OPTIONAL_HEADER64 {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    ULONGLONG ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    ULONGLONG SizeOfStackReserve;
    ULONGLONG SizeOfStackCommit;
    ULONGLONG SizeOfHeapReserve;
    ULONGLONG SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _TAPE_GET_DRIVE_PARAMETERS _TAPE_GET_DRIVE_PARAMETERS, *P_TAPE_GET_DRIVE_PARAMETERS;

struct _TAPE_GET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD DefaultBlockSize;
    DWORD MaximumBlockSize;
    DWORD MinimumBlockSize;
    DWORD MaximumPartitionCount;
    DWORD FeaturesLow;
    DWORD FeaturesHigh;
    DWORD EOTWarningZoneSize;
};

typedef struct _IMAGE_ROM_HEADERS _IMAGE_ROM_HEADERS, *P_IMAGE_ROM_HEADERS;

typedef struct _IMAGE_FILE_HEADER _IMAGE_FILE_HEADER, *P_IMAGE_FILE_HEADER;

typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER _IMAGE_ROM_OPTIONAL_HEADER, *P_IMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;

struct _IMAGE_ROM_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD BaseOfBss;
    DWORD GprMask;
    DWORD CprMask[4];
    DWORD GpValue;
};

struct _IMAGE_FILE_HEADER {
    WORD Machine;
    WORD NumberOfSections;
    DWORD TimeDateStamp;
    DWORD PointerToSymbolTable;
    DWORD NumberOfSymbols;
    WORD SizeOfOptionalHeader;
    WORD Characteristics;
};

struct _IMAGE_ROM_HEADERS {
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

typedef struct _struct_138.conflict _struct_138.conflict, *P_struct_138.conflict;

struct _struct_138.conflict {
    WORD Linenumber;
    WORD Size;
};

typedef struct _OSVERSIONINFOW _OSVERSIONINFOW, *P_OSVERSIONINFOW;

typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;

struct _OSVERSIONINFOW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
};

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    LARGE_INTEGER TotalUserTime;
    LARGE_INTEGER TotalKernelTime;
    LARGE_INTEGER ThisPeriodTotalUserTime;
    LARGE_INTEGER ThisPeriodTotalKernelTime;
    DWORD TotalPageFaultCount;
    DWORD TotalProcesses;
    DWORD ActiveProcesses;
    DWORD TotalTerminatedProcesses;
};

typedef struct _IMAGE_SYMBOL _IMAGE_SYMBOL, *P_IMAGE_SYMBOL;

typedef union _union_133.conflict _union_133.conflict, *P_union_133.conflict;

typedef struct _struct_134 _struct_134, *P_struct_134;

struct _struct_134 {
    DWORD Short;
    DWORD Long;
};

union _union_133.conflict {
    BYTE ShortName[8];
    struct _struct_134 Name;
    DWORD LongName[2];
};

struct _IMAGE_SYMBOL {
    union _union_133.conflict N;
    DWORD Value;
    SHORT SectionNumber;
    WORD Type;
    BYTE StorageClass;
    BYTE NumberOfAuxSymbols;
};

typedef WCHAR *PUWSTR;

typedef struct _JOBOBJECT_JOBSET_INFORMATION _JOBOBJECT_JOBSET_INFORMATION, *P_JOBOBJECT_JOBSET_INFORMATION;

typedef struct _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

struct _JOBOBJECT_JOBSET_INFORMATION {
    DWORD MemberLevel;
};

typedef struct _IMAGE_FUNCTION_ENTRY64 _IMAGE_FUNCTION_ENTRY64, *P_IMAGE_FUNCTION_ENTRY64;

typedef struct _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

typedef union _union_184 _union_184, *P_union_184;

union _union_184 {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
};

struct _IMAGE_FUNCTION_ENTRY64 {
    ULONGLONG StartingAddress;
    ULONGLONG EndingAddress;
    union _union_184 field2_0x10;
};

typedef struct _EXCEPTION_RECORD32 _EXCEPTION_RECORD32, *P_EXCEPTION_RECORD32;

struct _EXCEPTION_RECORD32 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD ExceptionRecord;
    DWORD ExceptionAddress;
    DWORD NumberParameters;
    DWORD ExceptionInformation[15];
};

typedef void *PVOID64;

typedef struct _IMAGE_NT_HEADERS64 _IMAGE_NT_HEADERS64, *P_IMAGE_NT_HEADERS64;

typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;

struct _IMAGE_NT_HEADERS64 {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING _IMAGE_RESOURCE_DIRECTORY_STRING, *P_IMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;

struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    WORD Length;
    CHAR NameString[1];
};

typedef struct _ACCESS_ALLOWED_ACE _ACCESS_ALLOWED_ACE, *P_ACCESS_ALLOWED_ACE;

struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_SECTION_HEADER _IMAGE_SECTION_HEADER, *P_IMAGE_SECTION_HEADER;

typedef struct _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

typedef union _union_131 _union_131, *P_union_131;

union _union_131 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

struct _IMAGE_SECTION_HEADER {
    BYTE Name[8];
    union _union_131 Misc;
    DWORD VirtualAddress;
    DWORD SizeOfRawData;
    DWORD PointerToRawData;
    DWORD PointerToRelocations;
    DWORD PointerToLinenumbers;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD Characteristics;
};

typedef struct _SID_AND_ATTRIBUTES _SID_AND_ATTRIBUTES, *P_SID_AND_ATTRIBUTES;

typedef PVOID PSID;

struct _SID_AND_ATTRIBUTES {
    PSID Sid;
    DWORD Attributes;
};

typedef struct _SID _SID, *P_SID;

typedef struct _SID SID;

typedef struct _SID_IDENTIFIER_AUTHORITY _SID_IDENTIFIER_AUTHORITY, *P_SID_IDENTIFIER_AUTHORITY;

typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;

struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
};

struct _SID {
    BYTE Revision;
    BYTE SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
};

typedef struct BATTERY_REPORTING_SCALE BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;

struct BATTERY_REPORTING_SCALE {
    DWORD Granularity;
    DWORD Capacity;
};

typedef struct _IMAGE_THUNK_DATA64 _IMAGE_THUNK_DATA64, *P_IMAGE_THUNK_DATA64;

typedef union _union_154 _union_154, *P_union_154;

union _union_154 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

struct _IMAGE_THUNK_DATA64 {
    union _union_154 u1;
};

typedef struct _IMAGE_RELOCATION _IMAGE_RELOCATION, *P_IMAGE_RELOCATION;

typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;

typedef IMAGE_RELOCATION *PIMAGE_RELOCATION;

typedef union _union_146 _union_146, *P_union_146;

union _union_146 {
    DWORD VirtualAddress;
    DWORD RelocCount;
};

struct _IMAGE_RELOCATION {
    union _union_146 field0_0x0;
    DWORD SymbolTableIndex;
    WORD Type;
};

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR _RTL_VERIFIER_DLL_DESCRIPTOR, *P_RTL_VERIFIER_DLL_DESCRIPTOR;

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR RTL_VERIFIER_DLL_DESCRIPTOR;

typedef WCHAR *PWCHAR;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR _RTL_VERIFIER_THUNK_DESCRIPTOR, *P_RTL_VERIFIER_THUNK_DESCRIPTOR;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR *PRTL_VERIFIER_THUNK_DESCRIPTOR;

typedef CHAR *PCHAR;

struct _RTL_VERIFIER_THUNK_DESCRIPTOR {
    PCHAR ThunkName;
    PVOID ThunkOldAddress;
    PVOID ThunkNewAddress;
};

struct _RTL_VERIFIER_DLL_DESCRIPTOR {
    PWCHAR DllName;
    DWORD DllFlags;
    PVOID DllAddress;
    PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks;
};

typedef struct _EVENTSFORLOGFILE _EVENTSFORLOGFILE, *P_EVENTSFORLOGFILE;

typedef struct _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

typedef struct _EVENTLOGRECORD _EVENTLOGRECORD, *P_EVENTLOGRECORD;

typedef struct _EVENTLOGRECORD EVENTLOGRECORD;

struct _EVENTLOGRECORD {
    DWORD Length;
    DWORD Reserved;
    DWORD RecordNumber;
    DWORD TimeGenerated;
    DWORD TimeWritten;
    DWORD EventID;
    WORD EventType;
    WORD NumStrings;
    WORD EventCategory;
    WORD ReservedFlags;
    DWORD ClosingRecordNumber;
    DWORD StringOffset;
    DWORD UserSidLength;
    DWORD UserSidOffset;
    DWORD DataLength;
    DWORD DataOffset;
};

struct _EVENTSFORLOGFILE {
    DWORD ulSize;
    WCHAR szLogicalLogFile[256];
    DWORD ulNumRecords;
    EVENTLOGRECORD pEventLogRecords[0];
};

typedef CHAR *LPCH;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS _JOBOBJECT_BASIC_UI_RESTRICTIONS, *P_JOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;

struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    DWORD UIRestrictionsClass;
};

typedef struct _IMAGE_IMPORT_BY_NAME _IMAGE_IMPORT_BY_NAME, *P_IMAGE_IMPORT_BY_NAME;

struct _IMAGE_IMPORT_BY_NAME {
    WORD Hint;
    BYTE Name[1];
};

typedef enum _JOBOBJECTINFOCLASS {
    JobObjectBasicAccountingInformation=1,
    JobObjectBasicLimitInformation=2,
    JobObjectBasicProcessIdList=3,
    JobObjectBasicUIRestrictions=4,
    JobObjectSecurityLimitInformation=5,
    JobObjectEndOfJobTimeInformation=6,
    JobObjectAssociateCompletionPortInformation=7,
    JobObjectBasicAndIoAccountingInformation=8,
    JobObjectExtendedLimitInformation=9,
    JobObjectJobSetInformation=10,
    MaxJobObjectInfoClass=11
} _JOBOBJECTINFOCLASS;


/* WARNING! conflicting data type names: /deps/winnt.h/IMAGE_DOS_HEADER - /DOS/IMAGE_DOS_HEADER */

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF IMAGE_AUX_SYMBOL_TOKEN_DEF, *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    BYTE bAuxType;
    BYTE bReserved;
    DWORD SymbolTableIndex;
    BYTE rgbReserved[12];
};

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR _RTL_VERIFIER_PROVIDER_DESCRIPTOR, *P_RTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR *PRTL_VERIFIER_DLL_DESCRIPTOR;

typedef WCHAR *PWSTR;

typedef void (*RTL_VERIFIER_DLL_LOAD_CALLBACK)(PWSTR, PVOID, SIZE_T, PVOID);

typedef void (*RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(PWSTR, PVOID, SIZE_T, PVOID);

struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {
    DWORD Length;
    PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls;
    RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback;
    RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback;
    PWSTR VerifierImage;
    DWORD VerifierFlags;
    DWORD VerifierDebug;
};

typedef HANDLE *PHANDLE;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR _IMAGE_BOUND_IMPORT_DESCRIPTOR, *P_IMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD NumberOfModuleForwarderRefs;
};

typedef enum _CM_SERVICE_LOAD_TYPE {
    BootLoad=0,
    SystemLoad=1,
    AutoLoad=2,
    DemandLoad=3,
    DisableLoad=4
} _CM_SERVICE_LOAD_TYPE;

typedef struct _FLOAT128 FLOAT128;

typedef FLOAT128 *PFLOAT128;

typedef struct _OSVERSIONINFOA _OSVERSIONINFOA, *P_OSVERSIONINFOA;

typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;

typedef LPOSVERSIONINFOA LPOSVERSIONINFO;

struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef struct _TOKEN_USER _TOKEN_USER, *P_TOKEN_USER;

typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;

struct _TOKEN_USER {
    SID_AND_ATTRIBUTES User;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE _SYSTEM_ALARM_OBJECT_ACE, *P_SYSTEM_ALARM_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;

struct _SYSTEM_ALARM_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ImageArchitectureEntry _ImageArchitectureEntry, *P_ImageArchitectureEntry;

typedef struct _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

struct _ImageArchitectureEntry {
    DWORD FixupInstRVA;
    DWORD NewInst;
};

typedef struct _TAPE_WMI_OPERATIONS _TAPE_WMI_OPERATIONS, *P_TAPE_WMI_OPERATIONS;

typedef struct _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

struct _TAPE_WMI_OPERATIONS {
    DWORD Method;
    DWORD DataBufferSize;
    PVOID DataBuffer;
};

typedef union _SLIST_HEADER _SLIST_HEADER, *P_SLIST_HEADER;

typedef struct _struct_193 _struct_193, *P_struct_193;

typedef struct _SINGLE_LIST_ENTRY _SINGLE_LIST_ENTRY, *P_SINGLE_LIST_ENTRY;

typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;

struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY *Next;
};

struct _struct_193 {
    SINGLE_LIST_ENTRY Next;
    WORD Depth;
    WORD Sequence;
};

union _SLIST_HEADER {
    ULONGLONG Alignment;
    struct _struct_193 field1;
};

typedef struct _PROCESSOR_POWER_POLICY _PROCESSOR_POWER_POLICY, *P_PROCESSOR_POWER_POLICY;

typedef struct _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

typedef struct _PROCESSOR_POWER_POLICY_INFO _PROCESSOR_POWER_POLICY_INFO, *P_PROCESSOR_POWER_POLICY_INFO;

typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;

struct _PROCESSOR_POWER_POLICY_INFO {
    DWORD TimeCheck;
    DWORD DemoteLimit;
    DWORD PromoteLimit;
    BYTE DemotePercent;
    BYTE PromotePercent;
    BYTE Spare[2];
    DWORD AllowDemotion:1;
    DWORD AllowPromotion:1;
    DWORD Reserved:30;
};

struct _PROCESSOR_POWER_POLICY {
    DWORD Revision;
    BYTE DynamicThrottle;
    BYTE Spare[3];
    DWORD Reserved;
    DWORD PolicyCount;
    PROCESSOR_POWER_POLICY_INFO Policy[3];
};

typedef struct _TAPE_WRITE_MARKS _TAPE_WRITE_MARKS, *P_TAPE_WRITE_MARKS;

struct _TAPE_WRITE_MARKS {
    DWORD Type;
    DWORD Count;
    BOOLEAN Immediate;
};

typedef struct _MEMORY_BASIC_INFORMATION64 _MEMORY_BASIC_INFORMATION64, *P_MEMORY_BASIC_INFORMATION64;

struct _MEMORY_BASIC_INFORMATION64 {
    ULONGLONG BaseAddress;
    ULONGLONG AllocationBase;
    DWORD AllocationProtect;
    DWORD __alignment1;
    ULONGLONG RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
    DWORD __alignment2;
};

typedef struct _ACCESS_DENIED_ACE _ACCESS_DENIED_ACE, *P_ACCESS_DENIED_ACE;

typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;

struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _MESSAGE_RESOURCE_DATA _MESSAGE_RESOURCE_DATA, *P_MESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_DATA {
    DWORD NumberOfBlocks;
    MESSAGE_RESOURCE_BLOCK Blocks[1];
};

typedef LPSTR PTCH;

typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation=1,
    AclSizeInformation=2
} _ACL_INFORMATION_CLASS;

typedef struct _TAPE_CREATE_PARTITION _TAPE_CREATE_PARTITION, *P_TAPE_CREATE_PARTITION;

typedef struct _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

struct _TAPE_CREATE_PARTITION {
    DWORD Method;
    DWORD Count;
    DWORD Size;
};

typedef struct _struct_142.conflict _struct_142.conflict, *P_struct_142.conflict;

struct _struct_142.conflict {
    BYTE Name[18];
};

typedef enum _CM_ERROR_CONTROL_TYPE {
    IgnoreError=0,
    NormalError=1,
    SevereError=2,
    CriticalError=3
} _CM_ERROR_CONTROL_TYPE;

typedef struct _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;

typedef struct _TAPE_GET_MEDIA_PARAMETERS _TAPE_GET_MEDIA_PARAMETERS, *P_TAPE_GET_MEDIA_PARAMETERS;

typedef struct _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

struct _TAPE_GET_MEDIA_PARAMETERS {
    LARGE_INTEGER Capacity;
    LARGE_INTEGER Remaining;
    DWORD BlockSize;
    DWORD PartitionCount;
    BOOLEAN WriteProtected;
};

typedef struct _TAPE_SET_DRIVE_PARAMETERS _TAPE_SET_DRIVE_PARAMETERS, *P_TAPE_SET_DRIVE_PARAMETERS;

struct _TAPE_SET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD EOTWarningZoneSize;
};

typedef struct _IMAGE_BASE_RELOCATION _IMAGE_BASE_RELOCATION, *P_IMAGE_BASE_RELOCATION;

typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;

struct _IMAGE_BASE_RELOCATION {
    DWORD VirtualAddress;
    DWORD SizeOfBlock;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE _SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *P_SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _LIST_ENTRY LIST_ENTRY;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER _IMAGE_COFF_SYMBOLS_HEADER, *P_IMAGE_COFF_SYMBOLS_HEADER;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;

struct _IMAGE_COFF_SYMBOLS_HEADER {
    DWORD NumberOfSymbols;
    DWORD LvaToFirstSymbol;
    DWORD NumberOfLinenumbers;
    DWORD LvaToFirstLinenumber;
    DWORD RvaToFirstByteOfCode;
    DWORD RvaToLastByteOfCode;
    DWORD RvaToFirstByteOfData;
    DWORD RvaToLastByteOfData;
};

typedef struct _MEMORY_BASIC_INFORMATION32 _MEMORY_BASIC_INFORMATION32, *P_MEMORY_BASIC_INFORMATION32;

struct _MEMORY_BASIC_INFORMATION32 {
    DWORD BaseAddress;
    DWORD AllocationBase;
    DWORD AllocationProtect;
    DWORD RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef WCHAR *LPCUWSTR;

typedef CHAR *PCCH;

typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;

typedef struct _IMAGE_VXD_HEADER _IMAGE_VXD_HEADER, *P_IMAGE_VXD_HEADER;

struct _IMAGE_VXD_HEADER {
    WORD e32_magic;
    BYTE e32_border;
    BYTE e32_worder;
    DWORD e32_level;
    WORD e32_cpu;
    WORD e32_os;
    DWORD e32_ver;
    DWORD e32_mflags;
    DWORD e32_mpages;
    DWORD e32_startobj;
    DWORD e32_eip;
    DWORD e32_stackobj;
    DWORD e32_esp;
    DWORD e32_pagesize;
    DWORD e32_lastpagesize;
    DWORD e32_fixupsize;
    DWORD e32_fixupsum;
    DWORD e32_ldrsize;
    DWORD e32_ldrsum;
    DWORD e32_objtab;
    DWORD e32_objcnt;
    DWORD e32_objmap;
    DWORD e32_itermap;
    DWORD e32_rsrctab;
    DWORD e32_rsrccnt;
    DWORD e32_restab;
    DWORD e32_enttab;
    DWORD e32_dirtab;
    DWORD e32_dircnt;
    DWORD e32_fpagetab;
    DWORD e32_frectab;
    DWORD e32_impmod;
    DWORD e32_impmodcnt;
    DWORD e32_impproc;
    DWORD e32_pagesum;
    DWORD e32_datapage;
    DWORD e32_preload;
    DWORD e32_nrestab;
    DWORD e32_cbnrestab;
    DWORD e32_nressum;
    DWORD e32_autodata;
    DWORD e32_debuginfo;
    DWORD e32_debuglen;
    DWORD e32_instpreload;
    DWORD e32_instdemand;
    DWORD e32_heapsize;
    BYTE e32_res3[12];
    DWORD e32_winresoff;
    DWORD e32_winreslen;
    WORD e32_devid;
    WORD e32_ddkver;
};

typedef char CCHAR;

typedef LARGE_INTEGER *PLARGE_INTEGER;

typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY _IMAGE_RESOURCE_DIRECTORY_ENTRY, *P_IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef union _union_165 _union_165, *P_union_165;

typedef union _union_167.conflict _union_167.conflict, *P_union_167.conflict;

typedef struct _struct_166 _struct_166, *P_struct_166;

typedef struct _struct_168.conflict1 _struct_168.conflict1, *P_struct_168.conflict1;

struct _struct_168.conflict1 {
    DWORD OffsetToDirectory:31;
    DWORD DataIsDirectory:1;
};

union _union_167.conflict {
    DWORD OffsetToData;
    struct _struct_168.conflict1 field1;
};

struct _struct_166 {
    DWORD NameOffset:31;
    DWORD NameIsString:1;
};

union _union_165 {
    struct _struct_166 field0;
    DWORD Name;
    WORD Id;
};

struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union _union_165 field0_0x0;
    union _union_167.conflict field1_0x4;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE _ACCESS_ALLOWED_CALLBACK_ACE, *P_ACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct SYSTEM_POWER_LEVEL SYSTEM_POWER_LEVEL, *PSYSTEM_POWER_LEVEL;

typedef struct POWER_ACTION_POLICY POWER_ACTION_POLICY, *PPOWER_ACTION_POLICY;

typedef enum _SYSTEM_POWER_STATE {
    PowerSystemUnspecified=0,
    PowerSystemWorking=1,
    PowerSystemSleeping1=2,
    PowerSystemSleeping2=3,
    PowerSystemSleeping3=4,
    PowerSystemHibernate=5,
    PowerSystemShutdown=6,
    PowerSystemMaximum=7
} _SYSTEM_POWER_STATE;

typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;

typedef enum enum_105 {
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionSleep=2,
    PowerActionHibernate=3,
    PowerActionShutdown=4,
    PowerActionShutdownReset=5,
    PowerActionShutdownOff=6,
    PowerActionWarmEject=7
} enum_105;

typedef enum enum_105 POWER_ACTION;

struct POWER_ACTION_POLICY {
    POWER_ACTION Action;
    DWORD Flags;
    DWORD EventCode;
};

struct SYSTEM_POWER_LEVEL {
    BOOLEAN Enable;
    BYTE Spare[3];
    DWORD BatteryLevel;
    struct POWER_ACTION_POLICY PowerPolicy;
    SYSTEM_POWER_STATE MinSystemState;
};

typedef struct _MEMORY_BASIC_INFORMATION64 MEMORY_BASIC_INFORMATION64;

typedef struct _struct_56 _struct_56, *P_struct_56;

struct _struct_56 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _struct_55 _struct_55, *P_struct_55;

struct _struct_55 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _TAPE_ERASE _TAPE_ERASE, *P_TAPE_ERASE;

struct _TAPE_ERASE {
    DWORD Type;
    BOOLEAN Immediate;
};

typedef enum enum_108 {
    SystemPowerPolicyAc=0,
    SystemPowerPolicyDc=1,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    SystemPowerCapabilities=4,
    SystemBatteryState=5,
    SystemPowerStateHandler=6,
    ProcessorStateHandler=7,
    SystemPowerPolicyCurrent=8,
    AdministratorPowerPolicy=9,
    SystemReserveHiberFile=10,
    ProcessorInformation=11,
    SystemPowerInformation=12,
    ProcessorStateHandler2=13,
    LastWakeTime=14,
    LastSleepTime=15,
    SystemExecutionState=16,
    SystemPowerStateNotifyHandler=17,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyDc=19,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    ProcessorPowerPolicyCurrent=22
} enum_108;

typedef enum enum_108 POWER_INFORMATION_LEVEL;

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceUnspecified=0,
    PowerDeviceD0=1,
    PowerDeviceD1=2,
    PowerDeviceD2=3,
    PowerDeviceD3=4,
    PowerDeviceMaximum=5
} _DEVICE_POWER_STATE;

typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION _JOBOBJECT_SECURITY_LIMIT_INFORMATION, *P_JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _TOKEN_GROUPS _TOKEN_GROUPS, *P_TOKEN_GROUPS;

typedef struct _TOKEN_GROUPS *PTOKEN_GROUPS;

typedef struct _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

struct _TOKEN_GROUPS {
    DWORD GroupCount;
    SID_AND_ATTRIBUTES Groups[1];
};

struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    DWORD SecurityLimitFlags;
    HANDLE JobToken;
    PTOKEN_GROUPS SidsToDisable;
    PTOKEN_PRIVILEGES PrivilegesToDelete;
    PTOKEN_GROUPS RestrictedSids;
};

typedef struct _FPO_DATA _FPO_DATA, *P_FPO_DATA;

typedef struct _FPO_DATA *PFPO_DATA;

struct _FPO_DATA {
    DWORD ulOffStart;
    DWORD cbProcSize;
    DWORD cdwLocals;
    WORD cdwParams;
    WORD cbProlog:8;
    WORD cbRegs:3;
    WORD fHasSEH:1;
    WORD fUseBP:1;
    WORD reserved:1;
    WORD cbFrame:2;
};

typedef enum ReplacesCorHdrNumericDefines {
    COR_VERSION_MINOR=0,
    COMIMAGE_FLAGS_ILONLY=1,
    COR_VTABLE_32BIT=1,
    IMAGE_COR_MIH_METHODRVA=1,
    NATIVE_TYPE_MAX_CB=1,
    COMIMAGE_FLAGS_32BITREQUIRED=2,
    COR_VERSION_MAJOR_V2=2,
    COR_VTABLE_64BIT=2,
    IMAGE_COR_MIH_EHRVA=2,
    COR_VERSION_MAJOR=3,
    COMIMAGE_FLAGS_IL_LIBRARY=4,
    COR_VTABLE_FROM_UNMANAGED=4,
    COR_DELETED_NAME_LENGTH=8,
    COR_VTABLEGAP_NAME_LENGTH=8,
    IMAGE_COR_MIH_BASICBLOCK=8,
    COR_VTABLE_CALL_MOST_DERIVED=16,
    IMAGE_COR_EATJ_THUNK_SIZE=32,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=255,
    MAX_CLASS_NAME=1024,
    MAX_PACKAGE_NAME=1024,
    COMIMAGE_FLAGS_TRACKDEBUGDATA=65536
} ReplacesCorHdrNumericDefines;

typedef struct IMAGE_COR20_HEADER IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;

struct IMAGE_COR20_HEADER {
    DWORD cb;
    WORD MajorRuntimeVersion;
    WORD MinorRuntimeVersion;
    IMAGE_DATA_DIRECTORY MetaData;
    DWORD Flags;
    DWORD EntryPointToken;
    IMAGE_DATA_DIRECTORY Resources;
    IMAGE_DATA_DIRECTORY StrongNameSignature;
    IMAGE_DATA_DIRECTORY CodeManagerTable;
    IMAGE_DATA_DIRECTORY VTableFixups;
    IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
    IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

typedef struct _IMAGE_DEBUG_MISC _IMAGE_DEBUG_MISC, *P_IMAGE_DEBUG_MISC;

typedef struct _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

struct _IMAGE_DEBUG_MISC {
    DWORD DataType;
    DWORD Length;
    BOOLEAN Unicode;
    BYTE Reserved[3];
    BYTE Data[1];
};

typedef struct _OSVERSIONINFOW *LPOSVERSIONINFOW;

typedef LONG *PLONG;

typedef struct _struct_30 _struct_30, *P_struct_30;

struct _struct_30 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _MEMORY_BASIC_INFORMATION32 MEMORY_BASIC_INFORMATION32;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION _ASSEMBLY_FILE_DETAILED_INFORMATION, *P_ASSEMBLY_FILE_DETAILED_INFORMATION;

typedef WCHAR *PCWSTR;

struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulFilenameLength;
    DWORD ulPathLength;
    PCWSTR lpFileName;
    PCWSTR lpFilePath;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE _ACCESS_DENIED_CALLBACK_OBJECT_ACE, *P_ACCESS_DENIED_CALLBACK_OBJECT_ACE;

struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SECURITY_DESCRIPTOR _SECURITY_DESCRIPTOR, *P_SECURITY_DESCRIPTOR;

typedef struct _ACL _ACL, *P_ACL;

typedef struct _ACL ACL;

typedef ACL *PACL;

struct _ACL {
    BYTE AclRevision;
    BYTE Sbz1;
    WORD AclSize;
    WORD AceCount;
    WORD Sbz2;
};

struct _SECURITY_DESCRIPTOR {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    PSID Owner;
    PSID Group;
    PACL Sacl;
    PACL Dacl;
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _IO_COUNTERS _IO_COUNTERS, *P_IO_COUNTERS;

typedef struct _IO_COUNTERS IO_COUNTERS;

struct _IO_COUNTERS {
    ULONGLONG ReadOperationCount;
    ULONGLONG WriteOperationCount;
    ULONGLONG OtherOperationCount;
    ULONGLONG ReadTransferCount;
    ULONGLONG WriteTransferCount;
    ULONGLONG OtherTransferCount;
};

struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    IO_COUNTERS IoInfo;
};

typedef enum _CM_SERVICE_NODE_TYPE {
    DriverType=1,
    FileSystemType=2,
    AdapterType=4,
    RecognizerType=8,
    Win32ServiceOwnProcess=16,
    Win32ServiceShareProcess=32
} _CM_SERVICE_NODE_TYPE;

typedef union _IMAGE_AUX_SYMBOL _IMAGE_AUX_SYMBOL, *P_IMAGE_AUX_SYMBOL;

typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;

typedef struct _struct_136.conflict _struct_136.conflict, *P_struct_136.conflict;

typedef struct _struct_143.conflict _struct_143.conflict, *P_struct_143.conflict;

typedef union _union_137 _union_137, *P_union_137;

typedef union _union_139.conflict _union_139.conflict, *P_union_139.conflict;

typedef struct _struct_140.conflict _struct_140.conflict, *P_struct_140.conflict;

typedef struct _struct_141 _struct_141, *P_struct_141;

struct _struct_140.conflict {
    DWORD PointerToLinenumber;
    DWORD PointerToNextFunction;
};

struct _struct_141 {
    WORD Dimension[4];
};

union _union_139.conflict {
    struct _struct_140.conflict Function;
    struct _struct_141 Array;
};

union _union_137 {
    struct _struct_138.conflict LnSz;
    DWORD TotalSize;
};

struct _struct_136.conflict {
    DWORD TagIndex;
    union _union_137 Misc;
    union _union_139.conflict FcnAry;
    WORD TvIndex;
};

struct _struct_143.conflict {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
};

union _IMAGE_AUX_SYMBOL {
    struct _struct_136.conflict Sym;
    struct _struct_142.conflict File;
    struct _struct_143.conflict Section;
};

typedef struct _TOKEN_STATISTICS _TOKEN_STATISTICS, *P_TOKEN_STATISTICS;

typedef enum _TOKEN_TYPE {
    TokenPrimary=1,
    TokenImpersonation=2
} _TOKEN_TYPE;

typedef enum _TOKEN_TYPE TOKEN_TYPE;

struct _TOKEN_STATISTICS {
    LUID TokenId;
    LUID AuthenticationId;
    LARGE_INTEGER ExpirationTime;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    DWORD DynamicCharged;
    DWORD DynamicAvailable;
    DWORD GroupCount;
    DWORD PrivilegeCount;
    LUID ModifiedId;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _struct_19 _struct_19, *P_struct_19;

struct _struct_19 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _SYSTEM_NUMA_INFORMATION _SYSTEM_NUMA_INFORMATION, *P_SYSTEM_NUMA_INFORMATION;

typedef struct _SYSTEM_NUMA_INFORMATION SYSTEM_NUMA_INFORMATION;

typedef union _union_97 _union_97, *P_union_97;

union _union_97 {
    ULONGLONG ActiveProcessorsAffinityMask[16];
    ULONGLONG AvailableMemory[16];
};

struct _SYSTEM_NUMA_INFORMATION {
    DWORD HighestNodeNumber;
    DWORD Reserved;
    union _union_97 field2_0x8;
};

typedef struct _struct_13 _struct_13, *P_struct_13;

struct _struct_13 {
    DWORD LowPart;
    DWORD HighPart;
};

typedef struct _struct_12 _struct_12, *P_struct_12;

struct _struct_12 {
    DWORD LowPart;
    DWORD HighPart;
};

typedef struct _IMAGE_TLS_DIRECTORY32 _IMAGE_TLS_DIRECTORY32, *P_IMAGE_TLS_DIRECTORY32;

typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;

struct _IMAGE_TLS_DIRECTORY32 {
    DWORD StartAddressOfRawData;
    DWORD EndAddressOfRawData;
    DWORD AddressOfIndex;
    DWORD AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef struct _struct_10 _struct_10, *P_struct_10;

struct _struct_10 {
    DWORD LowPart;
    LONG HighPart;
};

typedef DWORD SECURITY_INFORMATION;

typedef struct _IMAGE_OS2_HEADER _IMAGE_OS2_HEADER, *P_IMAGE_OS2_HEADER;

typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;

struct _IMAGE_OS2_HEADER {
    WORD ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    WORD ne_enttab;
    WORD ne_cbenttab;
    LONG ne_crc;
    WORD ne_flags;
    WORD ne_autodata;
    WORD ne_heap;
    WORD ne_stack;
    LONG ne_csip;
    LONG ne_sssp;
    WORD ne_cseg;
    WORD ne_cmod;
    WORD ne_cbnrestab;
    WORD ne_segtab;
    WORD ne_rsrctab;
    WORD ne_restab;
    WORD ne_modtab;
    WORD ne_imptab;
    LONG ne_nrestab;
    WORD ne_cmovent;
    WORD ne_align;
    WORD ne_cres;
    BYTE ne_exetyp;
    BYTE ne_flagsothers;
    WORD ne_pretthunks;
    WORD ne_psegrefbytes;
    WORD ne_swaparea;
    WORD ne_expver;
};

typedef WCHAR *LPWCH;

typedef struct _struct_28 _struct_28, *P_struct_28;

struct _struct_28 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _SYSTEM_AUDIT_OBJECT_ACE _SYSTEM_AUDIT_OBJECT_ACE, *P_SYSTEM_AUDIT_OBJECT_ACE;

struct _SYSTEM_AUDIT_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _struct_27 _struct_27, *P_struct_27;

struct _struct_27 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _struct_29 _struct_29, *P_struct_29;

struct _struct_29 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;

typedef ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation=1,
    ActivationContextDetailedInformation=2,
    AssemblyDetailedInformationInActivationContext=3,
    AssemblyDetailedInformationInActivationContxt=3,
    FileInformationInAssemblyOfAssemblyInActivationContext=4,
    FileInformationInAssemblyOfAssemblyInActivationContxt=4,
    MaxActivationContextInfoClass=5
} _ACTIVATION_CONTEXT_INFO_CLASS;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _struct_20 _struct_20, *P_struct_20;

struct _struct_20 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _EXCEPTION_RECORD64 _EXCEPTION_RECORD64, *P_EXCEPTION_RECORD64;

typedef struct _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

typedef ulonglong DWORD64;

struct _EXCEPTION_RECORD64 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD64 ExceptionRecord;
    DWORD64 ExceptionAddress;
    DWORD NumberParameters;
    DWORD __unusedAlignment;
    DWORD64 ExceptionInformation[15];
};

typedef LPCSTR LPCUTSTR;

typedef struct _TAPE_SET_POSITION _TAPE_SET_POSITION, *P_TAPE_SET_POSITION;

struct _TAPE_SET_POSITION {
    DWORD Method;
    DWORD Partition;
    LARGE_INTEGER Offset;
    BOOLEAN Immediate;
};

typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser=1,
    TokenGroups=2,
    TokenPrivileges=3,
    TokenOwner=4,
    TokenPrimaryGroup=5,
    TokenDefaultDacl=6,
    TokenSource=7,
    TokenType=8,
    TokenImpersonationLevel=9,
    TokenStatistics=10,
    TokenRestrictedSids=11,
    TokenSessionId=12,
    TokenGroupsAndPrivileges=13,
    TokenSessionReference=14,
    TokenSandBoxInert=15
} _TOKEN_INFORMATION_CLASS;

typedef struct _TAPE_ERASE TAPE_ERASE;

typedef struct _TOKEN_DEFAULT_DACL _TOKEN_DEFAULT_DACL, *P_TOKEN_DEFAULT_DACL;

typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;

struct _TOKEN_DEFAULT_DACL {
    PACL DefaultDacl;
};

typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;

typedef struct _FILE_NOTIFY_INFORMATION _FILE_NOTIFY_INFORMATION, *P_FILE_NOTIFY_INFORMATION;

struct _FILE_NOTIFY_INFORMATION {
    DWORD NextEntryOffset;
    DWORD Action;
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef struct _SYSTEM_AUDIT_ACE _SYSTEM_AUDIT_ACE, *P_SYSTEM_AUDIT_ACE;

typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;

struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_TLS_DIRECTORY64 _IMAGE_TLS_DIRECTORY64, *P_IMAGE_TLS_DIRECTORY64;

typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;

struct _IMAGE_TLS_DIRECTORY64 {
    ULONGLONG StartAddressOfRawData;
    ULONGLONG EndAddressOfRawData;
    ULONGLONG AddressOfIndex;
    ULONGLONG AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef enum _AUDIT_EVENT_TYPE {
    AuditEventObjectAccess=0,
    AuditEventDirectoryServiceAccess=1
} _AUDIT_EVENT_TYPE;

typedef enum _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

typedef struct _JOB_SET_ARRAY _JOB_SET_ARRAY, *P_JOB_SET_ARRAY;

typedef struct _JOB_SET_ARRAY JOB_SET_ARRAY;

struct _JOB_SET_ARRAY {
    HANDLE JobHandle;
    DWORD MemberLevel;
    DWORD Flags;
};

typedef struct _PRIVILEGE_SET _PRIVILEGE_SET, *P_PRIVILEGE_SET;

struct _PRIVILEGE_SET {
    DWORD PrivilegeCount;
    DWORD Control;
    LUID_AND_ATTRIBUTES Privilege[1];
};

typedef struct _EVENTLOGRECORD *PEVENTLOGRECORD;

typedef struct _REPARSE_GUID_DATA_BUFFER _REPARSE_GUID_DATA_BUFFER, *P_REPARSE_GUID_DATA_BUFFER;

typedef struct _struct_104 _struct_104, *P_struct_104;

struct _struct_104 {
    BYTE DataBuffer[1];
};

struct _REPARSE_GUID_DATA_BUFFER {
    DWORD ReparseTag;
    WORD ReparseDataLength;
    WORD Reserved;
    GUID ReparseGuid;
    struct _struct_104 GenericReparseBuffer;
};

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION _JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *P_JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    DWORD EndOfJobTimeAction;
};

typedef struct _ACCESS_DENIED_OBJECT_ACE _ACCESS_DENIED_OBJECT_ACE, *P_ACCESS_DENIED_OBJECT_ACE;

struct _ACCESS_DENIED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _TEB _TEB, *P_TEB;

struct _TEB {
};

typedef struct _IMAGE_DEBUG_DIRECTORY _IMAGE_DEBUG_DIRECTORY, *P_IMAGE_DEBUG_DIRECTORY;

typedef struct _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

struct _IMAGE_DEBUG_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Type;
    DWORD SizeOfData;
    DWORD AddressOfRawData;
    DWORD PointerToRawData;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY _IMAGE_RESOURCE_DIRECTORY, *P_IMAGE_RESOURCE_DIRECTORY;

typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;

struct _IMAGE_RESOURCE_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    WORD NumberOfNamedEntries;
    WORD NumberOfIdEntries;
};

typedef struct _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT _JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *P_JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    HANDLE CompletionPort;
};

typedef SHORT *PSHORT;

typedef union _union_148.conflict _union_148.conflict, *P_union_148.conflict;

union _union_148.conflict {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef union _union_192 _union_192, *P_union_192;

union _union_192 {
    WORD Ordinal;
    WORD Hint;
};

typedef union _union_190 _union_190, *P_union_190;

union _union_190 {
    WORD Ordinal;
    WORD Hint;
};

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION _JOBOBJECT_BASIC_LIMIT_INFORMATION, *P_JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    LARGE_INTEGER PerProcessUserTimeLimit;
    LARGE_INTEGER PerJobUserTimeLimit;
    DWORD LimitFlags;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    DWORD ActiveProcessLimit;
    ULONG_PTR Affinity;
    DWORD PriorityClass;
    DWORD SchedulingClass;
};

typedef struct _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY _IMAGE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD UnwindInfoAddress;
};

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR RTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef struct _ImageArchitectureHeader _ImageArchitectureHeader, *P_ImageArchitectureHeader;

struct _ImageArchitectureHeader {
    uint AmaskValue:1;
    int field1_0x0:7;
    uint AmaskShift:8;
    int field3_0x2:16;
    DWORD FirstEntryRVA;
};

typedef struct _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

typedef struct _OSVERSIONINFOEXW _OSVERSIONINFOEXW, *P_OSVERSIONINFOEXW;

struct _OSVERSIONINFOEXW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef union _union_186 _union_186, *P_union_186;

union _union_186 {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
};

typedef struct _SE_IMPERSONATION_STATE _SE_IMPERSONATION_STATE, *P_SE_IMPERSONATION_STATE;

typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;

typedef PVOID PACCESS_TOKEN;

struct _SE_IMPERSONATION_STATE {
    PACCESS_TOKEN Token;
    BOOLEAN CopyOnOpen;
    BOOLEAN EffectiveOnly;
    SECURITY_IMPERSONATION_LEVEL Level;
};

typedef struct _OSVERSIONINFOEXA _OSVERSIONINFOEXA, *P_OSVERSIONINFOEXA;

struct _OSVERSIONINFOEXA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;

typedef union _FILE_SEGMENT_ELEMENT _FILE_SEGMENT_ELEMENT, *P_FILE_SEGMENT_ELEMENT;

typedef union _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

union _FILE_SEGMENT_ELEMENT {
    PVOID64 Buffer;
    ULONGLONG Alignment;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG _RTL_CRITICAL_SECTION_DEBUG, *P_RTL_CRITICAL_SECTION_DEBUG;

typedef struct _RTL_CRITICAL_SECTION _RTL_CRITICAL_SECTION, *P_RTL_CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;
};

struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD Type;
    WORD CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Spare[2];
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS _TAPE_SET_MEDIA_PARAMETERS, *P_TAPE_SET_MEDIA_PARAMETERS;

struct _TAPE_SET_MEDIA_PARAMETERS {
    DWORD BlockSize;
};

typedef struct _NT_TIB _NT_TIB, *P_NT_TIB;

typedef struct _NT_TIB NT_TIB;

typedef struct _EXCEPTION_REGISTRATION_RECORD _EXCEPTION_REGISTRATION_RECORD, *P_EXCEPTION_REGISTRATION_RECORD;

typedef union _union_78 _union_78, *P_union_78;

union _union_78 {
    PVOID FiberData;
    DWORD Version;
};

struct _EXCEPTION_REGISTRATION_RECORD {
};

struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;
    union _union_78 field4_0x10;
    PVOID ArbitraryUserPointer;
    struct _NT_TIB *Self;
};

typedef struct _PACKEDEVENTINFO _PACKEDEVENTINFO, *P_PACKEDEVENTINFO;

typedef struct _PACKEDEVENTINFO *PPACKEDEVENTINFO;

struct _PACKEDEVENTINFO {
    DWORD ulSize;
    DWORD ulNumEventsForLogFile;
    DWORD ulOffsets[0];
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY _ADMINISTRATOR_POWER_POLICY, *P_ADMINISTRATOR_POWER_POLICY;

typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;

struct _ADMINISTRATOR_POWER_POLICY {
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    DWORD MinVideoTimeout;
    DWORD MaxVideoTimeout;
    DWORD MinSpindownTimeout;
    DWORD MaxSpindownTimeout;
};

typedef struct SYSTEM_POWER_CAPABILITIES SYSTEM_POWER_CAPABILITIES, *PSYSTEM_POWER_CAPABILITIES;

struct SYSTEM_POWER_CAPABILITIES {
    BOOLEAN PowerButtonPresent;
    BOOLEAN SleepButtonPresent;
    BOOLEAN LidPresent;
    BOOLEAN SystemS1;
    BOOLEAN SystemS2;
    BOOLEAN SystemS3;
    BOOLEAN SystemS4;
    BOOLEAN SystemS5;
    BOOLEAN HiberFilePresent;
    BOOLEAN FullWake;
    BOOLEAN VideoDimPresent;
    BOOLEAN ApmPresent;
    BOOLEAN UpsPresent;
    BOOLEAN ThermalControl;
    BOOLEAN ProcessorThrottle;
    BYTE ProcessorMinThrottle;
    BYTE ProcessorMaxThrottle;
    BYTE spare2[4];
    BOOLEAN DiskSpinDown;
    BYTE spare3[8];
    BOOLEAN SystemBatteriesPresent;
    BOOLEAN BatteriesAreShortTerm;
    struct BATTERY_REPORTING_SCALE BatteryScale[3];
    SYSTEM_POWER_STATE AcOnLineWake;
    SYSTEM_POWER_STATE SoftLidWake;
    SYSTEM_POWER_STATE RtcWake;
    SYSTEM_POWER_STATE MinDeviceWakeState;
    SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION _JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *P_JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    IO_COUNTERS IoInfo;
    SIZE_T ProcessMemoryLimit;
    SIZE_T JobMemoryLimit;
    SIZE_T PeakProcessMemoryUsed;
    SIZE_T PeakJobMemoryUsed;
};

typedef LONG (*PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *);

typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;

typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulEncodedAssemblyIdentityLength;
    DWORD ulManifestPathType;
    DWORD ulManifestPathLength;
    LARGE_INTEGER liManifestLastWriteTime;
    DWORD ulPolicyPathType;
    DWORD ulPolicyPathLength;
    LARGE_INTEGER liPolicyLastWriteTime;
    DWORD ulMetadataSatelliteRosterIndex;
    DWORD ulManifestVersionMajor;
    DWORD ulManifestVersionMinor;
    DWORD ulPolicyVersionMajor;
    DWORD ulPolicyVersionMinor;
    DWORD ulAssemblyDirectoryNameLength;
    PCWSTR lpAssemblyEncodedAssemblyIdentity;
    PCWSTR lpAssemblyManifestPath;
    PCWSTR lpAssemblyPolicyPath;
    PCWSTR lpAssemblyDirectoryName;
    DWORD ulFileCount;
};

typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;

typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

typedef struct _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

typedef struct _ACCESS_DENIED_CALLBACK_ACE _ACCESS_DENIED_CALLBACK_ACE, *P_ACCESS_DENIED_CALLBACK_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef enum enum_105 *PPOWER_ACTION;

typedef struct _IMAGE_LINENUMBER _IMAGE_LINENUMBER, *P_IMAGE_LINENUMBER;

typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;

typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

struct _IMAGE_LINENUMBER {
    union _union_148.conflict Type;
    WORD Linenumber;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *P_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _TOKEN_PRIMARY_GROUP _TOKEN_PRIMARY_GROUP, *P_TOKEN_PRIMARY_GROUP;

struct _TOKEN_PRIMARY_GROUP {
    PSID PrimaryGroup;
};

typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;

typedef struct _SYSTEM_ALARM_ACE _SYSTEM_ALARM_ACE, *P_SYSTEM_ALARM_ACE;

typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;

struct _SYSTEM_ALARM_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD ExceptionHandler;
    DWORD HandlerData;
    DWORD PrologEndAddress;
};

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER _IMAGE_SEPARATE_DEBUG_HEADER, *P_IMAGE_SEPARATE_DEBUG_HEADER;

struct _IMAGE_SEPARATE_DEBUG_HEADER {
    WORD Signature;
    WORD Flags;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD ImageBase;
    DWORD SizeOfImage;
    DWORD NumberOfSections;
    DWORD ExportedNamesSize;
    DWORD DebugDirectorySize;
    DWORD SectionAlignment;
    DWORD Reserved[2];
};

typedef struct _TOKEN_GROUPS TOKEN_GROUPS;

typedef struct _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;

typedef struct _MESSAGE_RESOURCE_ENTRY _MESSAGE_RESOURCE_ENTRY, *P_MESSAGE_RESOURCE_ENTRY;

struct _MESSAGE_RESOURCE_ENTRY {
    WORD Length;
    WORD Flags;
    BYTE Text[1];
};

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST _JOBOBJECT_BASIC_PROCESS_ID_LIST, *P_JOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    DWORD NumberOfAssignedProcesses;
    DWORD NumberOfProcessIdsInList;
    ULONG_PTR ProcessIdList[1];
};

typedef struct _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

typedef IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;

typedef struct _QUOTA_LIMITS _QUOTA_LIMITS, *P_QUOTA_LIMITS;

typedef struct _QUOTA_LIMITS QUOTA_LIMITS;

typedef QUOTA_LIMITS *PQUOTA_LIMITS;

struct _QUOTA_LIMITS {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;
    LARGE_INTEGER TimeLimit;
};

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION _ACTIVATION_CONTEXT_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    DWORD dwFlags;
    DWORD ulFormatVersion;
    DWORD ulAssemblyCount;
    DWORD ulRootManifestPathType;
    DWORD ulRootManifestPathChars;
    DWORD ulRootConfigurationPathType;
    DWORD ulRootConfigurationPathChars;
    DWORD ulAppDirPathType;
    DWORD ulAppDirPathChars;
    PCWSTR lpRootManifestPath;
    PCWSTR lpRootConfigurationPath;
    PCWSTR lpAppDirPath;
};

typedef struct _IMAGE_IMPORT_DESCRIPTOR _IMAGE_IMPORT_DESCRIPTOR, *P_IMAGE_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;

typedef IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

typedef union _union_160 _union_160, *P_union_160;

union _union_160 {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
};

struct _IMAGE_IMPORT_DESCRIPTOR {
    union _union_160 field0_0x0;
    DWORD TimeDateStamp;
    DWORD ForwarderChain;
    DWORD Name;
    DWORD FirstThunk;
};

typedef struct _OBJECTID _OBJECTID, *P_OBJECTID;

struct _OBJECTID {
    GUID Lineage;
    DWORD Uniquifier;
};

typedef WCHAR *LPUWSTR;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY _IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    DWORD FuncStart;
    DWORD PrologLen:8;
    DWORD FuncLen:22;
    DWORD ThirtyTwoBit:1;
    DWORD ExceptionFlag:1;
};

typedef CHAR *PCH;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

typedef struct CM_Power_Data_s CM_Power_Data_s, *PCM_Power_Data_s;

typedef struct CM_Power_Data_s *PCM_POWER_DATA;

struct CM_Power_Data_s {
    DWORD PD_Size;
    DEVICE_POWER_STATE PD_MostRecentPowerState;
    DWORD PD_Capabilities;
    DWORD PD_D1Latency;
    DWORD PD_D2Latency;
    DWORD PD_D3Latency;
    DEVICE_POWER_STATE PD_PowerStateMapping[7];
    SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

typedef struct _ACL_SIZE_INFORMATION _ACL_SIZE_INFORMATION, *P_ACL_SIZE_INFORMATION;

typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;

typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

struct _ACL_SIZE_INFORMATION {
    DWORD AceCount;
    DWORD AclBytesInUse;
    DWORD AclBytesFree;
};

typedef struct _IMAGE_RESOURCE_DATA_ENTRY _IMAGE_RESOURCE_DATA_ENTRY, *P_IMAGE_RESOURCE_DATA_ENTRY;

struct _IMAGE_RESOURCE_DATA_ENTRY {
    DWORD OffsetToData;
    DWORD Size;
    DWORD CodePage;
    DWORD Reserved;
};

typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;

typedef enum enum_106 {
    LT_DONT_CARE=0,
    LT_LOWEST_LATENCY=1
} enum_106;

typedef enum enum_106 LATENCY_TIME;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX _ACTIVATION_CONTEXT_QUERY_INDEX, *P_ACTIVATION_CONTEXT_QUERY_INDEX;

struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    DWORD ulAssemblyIndex;
    DWORD ulFileIndexInAssembly;
};

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef struct _TOKEN_CONTROL _TOKEN_CONTROL, *P_TOKEN_CONTROL;

typedef struct _TOKEN_SOURCE _TOKEN_SOURCE, *P_TOKEN_SOURCE;

typedef struct _TOKEN_SOURCE TOKEN_SOURCE;

struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    LUID SourceIdentifier;
};

struct _TOKEN_CONTROL {
    LUID TokenId;
    LUID AuthenticationId;
    LUID ModifiedId;
    TOKEN_SOURCE TokenSource;
};

typedef struct _TAPE_GET_POSITION _TAPE_GET_POSITION, *P_TAPE_GET_POSITION;

struct _TAPE_GET_POSITION {
    DWORD Type;
    DWORD Partition;
    LARGE_INTEGER Offset;
};

typedef char TCHAR;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;

typedef void (*PAPCFUNC)(ULONG_PTR);

typedef struct _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
    TapeDriveProblemNone=0,
    TapeDriveReadWriteWarning=1,
    TapeDriveReadWriteError=2,
    TapeDriveReadWarning=3,
    TapeDriveWriteWarning=4,
    TapeDriveReadError=5,
    TapeDriveWriteError=6,
    TapeDriveHardwareError=7,
    TapeDriveUnsupportedMedia=8,
    TapeDriveScsiConnectionError=9,
    TapeDriveTimetoClean=10,
    TapeDriveCleanDriveNow=11,
    TapeDriveMediaLifeExpired=12,
    TapeDriveSnappedTape=13
} _TAPE_DRIVE_PROBLEM_TYPE;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;

typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;

typedef enum _SID_NAME_USE {
    SidTypeUser=1,
    SidTypeGroup=2,
    SidTypeDomain=3,
    SidTypeAlias=4,
    SidTypeWellKnownGroup=5,
    SidTypeDeletedAccount=6,
    SidTypeInvalid=7,
    SidTypeUnknown=8,
    SidTypeComputer=9
} _SID_NAME_USE;

typedef IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;

typedef struct _IMAGE_EXPORT_DIRECTORY _IMAGE_EXPORT_DIRECTORY, *P_IMAGE_EXPORT_DIRECTORY;

struct _IMAGE_EXPORT_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Name;
    DWORD Base;
    DWORD NumberOfFunctions;
    DWORD NumberOfNames;
    DWORD AddressOfFunctions;
    DWORD AddressOfNames;
    DWORD AddressOfNameOrdinals;
};

typedef struct _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;

typedef struct _IMAGE_BOUND_FORWARDER_REF _IMAGE_BOUND_FORWARDER_REF, *P_IMAGE_BOUND_FORWARDER_REF;

struct _IMAGE_BOUND_FORWARDER_REF {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD Reserved;
};

typedef IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

typedef struct _SYSTEM_POWER_POLICY _SYSTEM_POWER_POLICY, *P_SYSTEM_POWER_POLICY;

typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;

struct _SYSTEM_POWER_POLICY {
    DWORD Revision;
    struct POWER_ACTION_POLICY PowerButton;
    struct POWER_ACTION_POLICY SleepButton;
    struct POWER_ACTION_POLICY LidClose;
    SYSTEM_POWER_STATE LidOpenWake;
    DWORD Reserved;
    struct POWER_ACTION_POLICY Idle;
    DWORD IdleTimeout;
    BYTE IdleSensitivity;
    BYTE DynamicThrottle;
    BYTE Spare2[2];
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    SYSTEM_POWER_STATE ReducedLatencySleep;
    DWORD WinLogonFlags;
    DWORD Spare3;
    DWORD DozeS4Timeout;
    DWORD BroadcastCapacityResolution;
    struct SYSTEM_POWER_LEVEL DischargePolicy[4];
    DWORD VideoTimeout;
    BOOLEAN VideoDimDisplay;
    DWORD VideoReserved[3];
    DWORD SpindownTimeout;
    BOOLEAN OptimizeForPower;
    BYTE FanThrottleTolerance;
    BYTE ForcedThrottle;
    BYTE MinThrottle;
    struct POWER_ACTION_POLICY OverThrottled;
};

typedef struct _GENERIC_MAPPING _GENERIC_MAPPING, *P_GENERIC_MAPPING;

typedef struct _GENERIC_MAPPING GENERIC_MAPPING;

typedef GENERIC_MAPPING *PGENERIC_MAPPING;

struct _GENERIC_MAPPING {
    ACCESS_MASK GenericRead;
    ACCESS_MASK GenericWrite;
    ACCESS_MASK GenericExecute;
    ACCESS_MASK GenericAll;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE _ACCESS_ALLOWED_OBJECT_ACE, *P_ACCESS_ALLOWED_OBJECT_ACE;

struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF=1
} IMAGE_AUX_SYMBOL_TYPE;

typedef ACE_HEADER *PACE_HEADER;

typedef struct _IMAGE_NT_HEADERS _IMAGE_NT_HEADERS, *P_IMAGE_NT_HEADERS;

typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;

struct _IMAGE_NT_HEADERS {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef LPCSTR PCTSTR;

typedef TOKEN_TYPE *PTOKEN_TYPE;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES _TOKEN_GROUPS_AND_PRIVILEGES, *P_TOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

struct _TOKEN_GROUPS_AND_PRIVILEGES {
    DWORD SidCount;
    DWORD SidLength;
    PSID_AND_ATTRIBUTES Sids;
    DWORD RestrictedSidCount;
    DWORD RestrictedSidLength;
    PSID_AND_ATTRIBUTES RestrictedSids;
    DWORD PrivilegeCount;
    DWORD PrivilegeLength;
    PLUID_AND_ATTRIBUTES Privileges;
    LUID AuthenticationId;
};

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;

typedef struct _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _TAPE_ERASE *PTAPE_ERASE;

typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;

typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _TOKEN_CONTROL TOKEN_CONTROL;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

typedef struct _struct_195 _struct_195, *P_struct_195;

struct _struct_195 {
    SINGLE_LIST_ENTRY Next;
    WORD Depth;
    WORD Sequence;
};

typedef ACCESS_MASK *PACCESS_MASK;

typedef IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

typedef struct _TOKEN_STATISTICS *PTOKEN_STATISTICS;

typedef struct _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;

typedef struct _struct_9 _struct_9, *P_struct_9;

struct _struct_9 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _PRIVILEGE_SET PRIVILEGE_SET;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

typedef struct _NON_PAGED_DEBUG_INFO _NON_PAGED_DEBUG_INFO, *P_NON_PAGED_DEBUG_INFO;

typedef struct _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;

struct _NON_PAGED_DEBUG_INFO {
    WORD Signature;
    WORD Flags;
    DWORD Size;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD SizeOfImage;
    ULONGLONG ImageBase;
};

typedef WCHAR *NWPSTR;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;

typedef struct _struct_170 _struct_170, *P_struct_170;

struct _struct_170 {
    DWORD OffsetToDirectory:31;
    DWORD DataIsDirectory:1;
};

typedef LONGLONG *PLONGLONG;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;

typedef struct _struct_168 _struct_168, *P_struct_168;

struct _struct_168 {
    BYTE DataBuffer[1];
};

typedef struct _TOKEN_OWNER _TOKEN_OWNER, *P_TOKEN_OWNER;

struct _TOKEN_OWNER {
    PSID Owner;
};

typedef struct _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

typedef struct _NT_TIB64 _NT_TIB64, *P_NT_TIB64;

typedef union _union_83.conflict _union_83.conflict, *P_union_83.conflict;

union _union_83.conflict {
    DWORD64 FiberData;
    DWORD Version;
};

struct _NT_TIB64 {
    DWORD64 ExceptionList;
    DWORD64 StackBase;
    DWORD64 StackLimit;
    DWORD64 SubSystemTib;
    union _union_83.conflict field4_0x20;
    DWORD64 ArbitraryUserPointer;
    DWORD64 Self;
};

typedef ULONGLONG *PULONGLONG;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32;

struct IMAGE_LOAD_CONFIG_DIRECTORY32 {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    DWORD DeCommitFreeBlockThreshold;
    DWORD DeCommitTotalFreeThreshold;
    DWORD LockPrefixTable;
    DWORD MaximumAllocationSize;
    DWORD VirtualMemoryThreshold;
    DWORD ProcessHeapFlags;
    DWORD ProcessAffinityMask;
    WORD CSDVersion;
    WORD Reserved1;
    DWORD EditList;
    DWORD Reserved[1];
};

typedef struct _struct_138 _struct_138, *P_struct_138;

typedef union _union_139 _union_139, *P_union_139;

typedef union _union_141 _union_141, *P_union_141;

typedef struct _struct_140 _struct_140, *P_struct_140;

typedef struct _struct_142 _struct_142, *P_struct_142;

typedef struct _struct_143 _struct_143, *P_struct_143;

struct _struct_142 {
    DWORD PointerToLinenumber;
    DWORD PointerToNextFunction;
};

struct _struct_143 {
    WORD Dimension[4];
};

union _union_141 {
    struct _struct_142 Function;
    struct _struct_143 Array;
};

struct _struct_140 {
    WORD Linenumber;
    WORD Size;
};

union _union_139 {
    struct _struct_140 LnSz;
    DWORD TotalSize;
};

struct _struct_138 {
    DWORD TagIndex;
    union _union_139 Misc;
    union _union_141 FcnAry;
    WORD TvIndex;
};

typedef struct _struct_136 _struct_136, *P_struct_136;

struct _struct_136 {
    DWORD Short;
    DWORD Long;
};

typedef struct _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONGLONG BeginAddress;
    ULONGLONG EndAddress;
    ULONGLONG ExceptionHandler;
    ULONGLONG HandlerData;
    ULONGLONG PrologEndAddress;
};

typedef struct _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

typedef struct _struct_145 _struct_145, *P_struct_145;

struct _struct_145 {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
};

typedef struct _struct_144 _struct_144, *P_struct_144;

struct _struct_144 {
    BYTE Name[18];
};

typedef struct _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;

typedef IO_COUNTERS *PIO_COUNTERS;

typedef struct _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

typedef struct _struct_106 _struct_106, *P_struct_106;

struct _struct_106 {
    BYTE DataBuffer[1];
};

typedef DWORDLONG *PDWORDLONG;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64;

struct IMAGE_LOAD_CONFIG_DIRECTORY64 {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    ULONGLONG DeCommitFreeBlockThreshold;
    ULONGLONG DeCommitTotalFreeThreshold;
    ULONGLONG LockPrefixTable;
    ULONGLONG MaximumAllocationSize;
    ULONGLONG VirtualMemoryThreshold;
    ULONGLONG ProcessAffinityMask;
    DWORD ProcessHeapFlags;
    WORD CSDVersion;
    WORD Reserved1;
    ULONGLONG EditList;
    DWORD Reserved[2];
};

typedef struct _MEMORY_BASIC_INFORMATION _MEMORY_BASIC_INFORMATION, *P_MEMORY_BASIC_INFORMATION;

struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _LDT_ENTRY _LDT_ENTRY, *P_LDT_ENTRY;

typedef union _union_26 _union_26, *P_union_26;

union _union_26 {
    struct _struct_27 Bytes;
    struct _struct_28 Bits;
};

struct _LDT_ENTRY {
    WORD LimitLow;
    WORD BaseLow;
    union _union_26 HighWord;
};

typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;

typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;

typedef struct _FLOATING_SAVE_AREA _FLOATING_SAVE_AREA, *P_FLOATING_SAVE_AREA;

typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

struct _FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef DWORD FLONG;

typedef struct _LUID *PLUID;

typedef struct ANON_OBJECT_HEADER ANON_OBJECT_HEADER, *PANON_OBJECT_HEADER;

struct ANON_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    CLSID ClassID;
    DWORD SizeOfData;
};

typedef ULARGE_INTEGER *PULARGE_INTEGER;

typedef enum _SID_NAME_USE *PSID_NAME_USE;

typedef struct _OBJECTID OBJECTID;

typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

typedef union _SLIST_HEADER SLIST_HEADER;

typedef WCHAR *PCWCH;

typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

typedef BOOLEAN *PBOOLEAN;

typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;

typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;

typedef struct _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;

typedef struct _PACKEDEVENTINFO PACKEDEVENTINFO;

typedef struct _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;

typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;

typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;

typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;

typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;

typedef struct _LIST_ENTRY *PRLIST_ENTRY;

typedef struct _FPO_DATA FPO_DATA;

typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY;

typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;

typedef struct _TOKEN_CONTROL *PTOKEN_CONTROL;

typedef struct _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

typedef LONGLONG USN;

typedef struct _LDT_ENTRY *PLDT_ENTRY;

typedef struct _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *P_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER _IMAGE_ARCHIVE_MEMBER_HEADER, *P_IMAGE_ARCHIVE_MEMBER_HEADER;

struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    BYTE Name[16];
    BYTE Date[12];
    BYTE UserID[6];
    BYTE GroupID[6];
    BYTE Mode[8];
    BYTE Size[10];
    BYTE EndHeader[2];
};

typedef struct _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

typedef struct _LDT_ENTRY LDT_ENTRY;

typedef enum _HEAP_INFORMATION_CLASS {
    HeapCompatibilityInformation=0
} _HEAP_INFORMATION_CLASS;

typedef enum _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;

typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;

typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;

typedef LPSTR LPUTSTR;

typedef IMAGE_SYMBOL *PIMAGE_SYMBOL;

typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;

typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;

typedef struct IMPORT_OBJECT_HEADER IMPORT_OBJECT_HEADER, *PIMPORT_OBJECT_HEADER;

struct IMPORT_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    DWORD SizeOfData;
    union _union_190 field6_0x10;
    WORD Type:2;
    WORD NameType:3;
    WORD Reserved:11;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

typedef struct _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;

typedef struct _struct_168.conflict _struct_168.conflict, *P_struct_168.conflict;

struct _struct_168.conflict {
    DWORD NameOffset:31;
    DWORD NameIsString:1;
};

typedef struct _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

typedef struct _NT_TIB32 _NT_TIB32, *P_NT_TIB32;

typedef struct _NT_TIB32 *PNT_TIB32;

typedef union _union_81 _union_81, *P_union_81;

union _union_81 {
    DWORD FiberData;
    DWORD Version;
};

struct _NT_TIB32 {
    DWORD ExceptionList;
    DWORD StackBase;
    DWORD StackLimit;
    DWORD SubSystemTib;
    union _union_81 field4_0x10;
    DWORD ArbitraryUserPointer;
    DWORD Self;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;

typedef struct _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _TOKEN_SOURCE *PTOKEN_SOURCE;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;

typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;

typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;

typedef struct _TOKEN_OWNER TOKEN_OWNER;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _OSVERSIONINFOA *POSVERSIONINFOA;

typedef struct _NT_TIB32 NT_TIB32;

typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

typedef WORD LANGID;

typedef struct _NT_TIB64 *PNT_TIB64;

typedef struct _OSVERSIONINFOW *POSVERSIONINFOW;

typedef struct _TOKEN_USER *PTOKEN_USER;

typedef enum _SID_NAME_USE SID_NAME_USE;

typedef struct _OSVERSIONINFOA OSVERSIONINFOA;

typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;

typedef struct _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

typedef struct _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

typedef struct _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

typedef struct CM_Power_Data_s CM_POWER_DATA;

typedef struct _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

typedef enum IMPORT_OBJECT_TYPE {
    IMPORT_OBJECT_CODE=0,
    IMPORT_OBJECT_DATA=1,
    IMPORT_OBJECT_CONST=2
} IMPORT_OBJECT_TYPE;

typedef struct _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;

typedef struct LIST_ENTRY64 LIST_ENTRY64, *PLIST_ENTRY64;

struct LIST_ENTRY64 {
    ULONGLONG Flink;
    ULONGLONG Blink;
};

typedef BYTE FCHAR;

typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;

typedef struct _ACL_REVISION_INFORMATION _ACL_REVISION_INFORMATION, *P_ACL_REVISION_INFORMATION;

struct _ACL_REVISION_INFORMATION {
    DWORD AclRevision;
};

typedef OSVERSIONINFOA OSVERSIONINFO;

typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;

typedef struct _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;

typedef OSVERSIONINFOEXA OSVERSIONINFOEX;

typedef struct _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;

typedef struct _IMAGE_DOS_HEADER _IMAGE_DOS_HEADER, *P_IMAGE_DOS_HEADER;

typedef struct _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

struct _IMAGE_DOS_HEADER {
    WORD e_magic;
    WORD e_cblp;
    WORD e_cp;
    WORD e_crlc;
    WORD e_cparhdr;
    WORD e_minalloc;
    WORD e_maxalloc;
    WORD e_ss;
    WORD e_sp;
    WORD e_csum;
    WORD e_ip;
    WORD e_cs;
    WORD e_lfarlc;
    WORD e_ovno;
    WORD e_res[4];
    WORD e_oemid;
    WORD e_oeminfo;
    WORD e_res2[10];
    LONG e_lfanew;
};

typedef CHAR *PCSTR;

typedef struct _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;

typedef uchar TBYTE;

typedef LPCSTR PCUTSTR;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _OSVERSIONINFOW OSVERSIONINFOW;

typedef WORD FSHORT;

typedef struct _JOB_SET_ARRAY *PJOB_SET_ARRAY;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;

typedef struct _TAPE_PREPARE _TAPE_PREPARE, *P_TAPE_PREPARE;

typedef struct _TAPE_PREPARE *PTAPE_PREPARE;

struct _TAPE_PREPARE {
    DWORD Operation;
    BOOLEAN Immediate;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

typedef struct _EVENTSFORLOGFILE EVENTSFORLOGFILE;

typedef struct _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef union _union_133 _union_133, *P_union_133;

union _union_133 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

typedef union _union_135 _union_135, *P_union_135;

union _union_135 {
    BYTE ShortName[8];
    struct _struct_136 Name;
    DWORD LongName[2];
};

typedef uchar *PTBYTE;

typedef union _union_99 _union_99, *P_union_99;

union _union_99 {
    ULONGLONG ActiveProcessorsAffinityMask[16];
    ULONGLONG AvailableMemory[16];
};

typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;

typedef DWORD EXECUTION_STATE;

typedef union _union_83 _union_83, *P_union_83;

union _union_83 {
    DWORD FiberData;
    DWORD Version;
};

typedef enum enum_107 {
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionSleep=2,
    PowerActionHibernate=3,
    PowerActionShutdown=4,
    PowerActionShutdownReset=5,
    PowerActionShutdownOff=6,
    PowerActionWarmEject=7
} enum_107;

typedef union _union_85 _union_85, *P_union_85;

union _union_85 {
    DWORD64 FiberData;
    DWORD Version;
};

typedef union _union_80 _union_80, *P_union_80;

union _union_80 {
    PVOID FiberData;
    DWORD Version;
};

typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;

typedef WCHAR *PWCH;

typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;

typedef union _union_167 _union_167, *P_union_167;

union _union_167 {
    struct _struct_168.conflict field0;
    DWORD Name;
    WORD Id;
};

typedef struct _SID *PISID;

typedef union _union_169 _union_169, *P_union_169;

union _union_169 {
    DWORD OffsetToData;
    struct _struct_170 field1;
};

typedef union _union_28 _union_28, *P_union_28;

union _union_28 {
    struct _struct_29 Bytes;
    struct _struct_30 Bits;
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef union _union_150 _union_150, *P_union_150;

union _union_150 {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef union _union_54 _union_54, *P_union_54;

union _union_54 {
    struct _struct_55 Bytes;
    struct _struct_56 Bits;
};

typedef union _union_148 _union_148, *P_union_148;

union _union_148 {
    DWORD VirtualAddress;
    DWORD RelocCount;
};

typedef union _union_162 _union_162, *P_union_162;

union _union_162 {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
};

typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;

typedef struct _TAPE_PREPARE TAPE_PREPARE;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef union _union_156 _union_156, *P_union_156;

union _union_156 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

typedef void (*PIMAGE_TLS_CALLBACK)(PVOID, DWORD, PVOID);

typedef union _union_158 _union_158, *P_union_158;

union _union_158 {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

typedef IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

typedef WCHAR *PCUWSTR;

typedef enum IMPORT_OBJECT_NAME_TYPE {
    IMPORT_OBJECT_ORDINAL=0,
    IMPORT_OBJECT_NAME=1,
    IMPORT_OBJECT_NAME_NO_PREFIX=2,
    IMPORT_OBJECT_NAME_UNDECORATE=3
} IMPORT_OBJECT_NAME_TYPE;

typedef LPSTR PTSTR;

typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;

typedef DWORD *PSECURITY_INFORMATION;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef struct _NT_TIB64 NT_TIB64;

typedef struct _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

typedef enum enum_110 {
    SystemPowerPolicyAc=0,
    SystemPowerPolicyDc=1,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    SystemPowerCapabilities=4,
    SystemBatteryState=5,
    SystemPowerStateHandler=6,
    ProcessorStateHandler=7,
    SystemPowerPolicyCurrent=8,
    AdministratorPowerPolicy=9,
    SystemReserveHiberFile=10,
    ProcessorInformation=11,
    SystemPowerInformation=12,
    ProcessorStateHandler2=13,
    LastWakeTime=14,
    LastSleepTime=15,
    SystemExecutionState=16,
    SystemPowerStateNotifyHandler=17,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyDc=19,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    ProcessorPowerPolicyCurrent=22
} enum_110;

typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

typedef struct _SYSTEM_NUMA_INFORMATION *PSYSTEM_NUMA_INFORMATION;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef WCHAR *LPCWCH;

typedef POSVERSIONINFOA POSVERSIONINFO;

typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;

typedef CHAR *NPSTR;

typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;

typedef LPSTR PUTSTR;

typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;

typedef struct _LIST_ENTRY *PLIST_ENTRY;

typedef DWORD *PDWORD;

typedef PDWORD PLCID;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

typedef struct _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;

typedef struct _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

typedef char *PTCHAR;

typedef struct _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;

typedef struct _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;

typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;

typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;

typedef struct _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;

typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;

typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;

typedef struct _TAPE_GET_POSITION *PTAPE_GET_POSITION;

typedef IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;

typedef struct _TAPE_SET_POSITION *PTAPE_SET_POSITION;

typedef void (*WORKERCALLBACKFUNC)(PVOID);

typedef struct _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

typedef POSVERSIONINFOEXA POSVERSIONINFOEX;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

typedef KSPIN_LOCK *PKSPIN_LOCK;

typedef struct _TOKEN_USER TOKEN_USER;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;

typedef LPSTR LPTSTR;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

typedef NT_TIB *PNT_TIB;

typedef void (*APC_CALLBACK_FUNCTION)(DWORD, PVOID, PVOID);

typedef struct _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

typedef enum _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;

typedef FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR RTL_VERIFIER_THUNK_DESCRIPTOR;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

typedef void (*WAITORTIMERCALLBACKFUNC)(PVOID, BOOLEAN);

typedef struct _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

typedef CHAR *LPCCH;

typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

typedef union _SLIST_HEADER *PSLIST_HEADER;

typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;

typedef LPSTR LPTCH;

typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;

typedef struct _TOKEN_OWNER *PTOKEN_OWNER;

typedef struct _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

#define TAPE_ERASE_SHORT 0

#define IMAGE_FILE_EXECUTABLE_IMAGE 2

#define IMAGE_SYM_TYPE_VOID 1

#define VER_SUITE_ENTERPRISE 2

#define SEF_DEFAULT_OWNER_FROM_PARENT 32

#define IMAGE_REL_ALPHA_SECRELLO 17

#define TAPE_DRIVE_SET_ECC 2147483904

#define PROCESSOR_ARCHITECTURE_SHX 4

#define EVENTLOG_FORWARDS_READ 4

#define MUTANT_QUERY_STATE 1

#define N_BTSHFT 4

#define SUBLANG_KOREAN 1

#define IMAGE_SIZEOF_STD_OPTIONAL_HEADER 28

#define DOMAIN_GROUP_RID_ENTERPRISE_ADMINS 519

#define PROCESS_VM_WRITE 32

#define VER_SUITE_TERMINAL 16

#define JOB_OBJECT_UILIMIT_WRITECLIPBOARD 4

#define LANG_SPANISH 10

#define IMAGE_REL_AMD64_REL32 4

#define IMAGE_RESOURCE_NAME_IS_STRING 2147483648

#define VER_SERVICEPACKMINOR 16

#define FILE_ATTRIBUTE_SPARSE_FILE 512

#define IMAGE_FILE_LARGE_ADDRESS_AWARE 32

#define FILE_ADD_FILE 2

#define IMAGE_RESOURCE_DATA_IS_DIRECTORY 2147483648

#define CONTEXT_CONTROL 65537

#define ACTIVATION_CONTEXT_PATH_TYPE_URL 3

#define IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 2

#define RTL_CRITSECT_TYPE 0

#define IMAGE_REL_PPC_GPREL 21

#define IMAGE_REL_AMD64_ABSOLUTE 0

#define PROCESSOR_MOTOROLA_821 821

#define IMAGE_FILE_32BIT_MACHINE 256

#define DBG_CONTINUE 65538

#define JOB_OBJECT_LIMIT_WORKINGSET 1

#define TOKEN_IMPERSONATE 4

#define SUBLANG_ARABIC_OMAN 8

#define FILE_ATTRIBUTE_DEVICE 64

#define SORT_CHINESE_PRCP 0

#define IMAGE_SCN_ALIGN_MASK 15728640

#define IMAGE_REL_IA64_DIR32NB 16

#define PAGE_EXECUTE_READ 32

#define STATUS_SINGLE_STEP 2147483652

#define ACE_INHERITED_OBJECT_TYPE_PRESENT 2

#define PO_THROTTLE_NONE 0

#define TAPE_DRIVE_TAPE_REMAINING 512

#define KEY_CREATE_SUB_KEY 4

#define IMAGE_SUBSYSTEM_WINDOWS_CUI 3

#define KEY_EXECUTE 131097

#define DELETE 65536

#define EMARCH_ENC_I17_IMM41a_VAL_POS_X 22

#define IMAGE_SCN_MEM_16BIT 131072

#define REG_OPENED_EXISTING_KEY 2

#define JOB_OBJECT_SET_ATTRIBUTES 2

#define SECURITY_AUTHENTICATED_USER_RID 11

#define JOB_OBJECT_MSG_END_OF_JOB_TIME 1

#define IMAGE_FILE_MACHINE_UNKNOWN 0

#define APPLICATION_VERIFIER_DOUBLE_FREE 7

#define RTL_RESOURCE_TYPE 1

#define SUBLANG_ARABIC_LIBYA 4

#define POWER_ACTION_UI_ALLOWED 2

#define PAGE_EXECUTE 16

#define SECURITY_PRINCIPAL_SELF_RID 10

#define ACTIVATION_CONTEXT_PATH_TYPE_NONE 1

#define ACCESS_MAX_MS_ACE_TYPE 8

#define IMAGE_SYM_CLASS_MEMBER_OF_ENUM 16

#define IMAGE_REL_IA64_IMM14 1

#define MEM_FREE 65536

#define FILE_ADD_SUBDIRECTORY 4

#define EVENT_ALL_ACCESS 2031619

#define PF_ALPHA_BYTE_INSTRUCTIONS 5

#define FILE_NAMED_STREAMS 262144

#define REG_OPTION_VOLATILE 1

#define SUBLANG_ENGLISH_CARIBBEAN 9

#define STATUS_FLOAT_DIVIDE_BY_ZERO 3221225614

#define WT_EXECUTELONGFUNCTION 16

#define LANG_MARATHI 78

#define APPLICATION_ERROR_MASK 536870912

#define EMARCH_ENC_I17_IMM41a_INST_WORD_X 1

#define EMARCH_ENC_I17_IMM41c_INST_WORD_X 2

#define SECTION_MAP_WRITE 2

#define LANG_ASSAMESE 77

#define IMAGE_REL_I386_SECREL7 13

#define SEC_COMMIT 134217728

#define SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE 15

#define TAPE_DRIVE_COMPRESSION 131072

#define IMAGE_NT_OPTIONAL_HDR32_MAGIC 267

#define EMARCH_ENC_I17_IMM41c_SIZE_X 23

#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 256

#define STATUS_FLOAT_DENORMAL_OPERAND 3221225613

#define SECURITY_DIALUP_RID 1

#define IMAGE_DEBUG_TYPE_MISC 4

#define JOB_OBJECT_SET_SECURITY_ATTRIBUTES 16

#define SUBLANG_CHINESE_HONGKONG 3

#define REG_LEGAL_CHANGE_FILTER 15

#define LANG_VIETNAMESE 42

#define IMAGE_REL_ARM_ABSOLUTE 0

#define DBG_CONTROL_BREAK 1073807368

#define PAGE_NOCACHE 512

#define VER_SUITENAME 64

#define IMAGE_REL_IA64_IMM22 2

#define TIMER_QUERY_STATE 1

#define TAPE_DRIVE_REWIND_IMMEDIATE 2147483656

#define SORT_GEORGIAN_MODERN 1

#define IMAGE_SYM_DTYPE_FUNCTION 2

#define SUBLANG_ENGLISH_JAMAICA 8

#define IMAGE_SYM_CLASS_UNION_TAG 12

#define IMAGE_REL_M32R_ADDR24 3

#define VER_NT_DOMAIN_CONTROLLER 2

#define DOMAIN_ALIAS_RID_RAS_SERVERS 553

#define IMAGE_SYM_CLASS_EXTERNAL_DEF 5

#define TAPE_LONG_FILEMARKS 3

#define MINLONG 2147483648

#define MEM_PHYSICAL 4194304

#define IMAGE_REL_M32R_ADDR32 1

#define IMAGE_SYM_CLASS_ENUM_TAG 15

#define DISABLE_MAX_PRIVILEGE 1

#define APPLICATION_VERIFIER_NO_BREAK 536870912

#define FILE_NOTIFY_CHANGE_ATTRIBUTES 4

#define KEY_WRITE 131078

#define MEM_RESERVE 8192

#define SUBLANG_CHINESE_TRADITIONAL 1

#define IMAGE_SUBSYSTEM_WINDOWS_GUI 2

#define PROCESSOR_HITACHI_SH3 10003

#define PROCESSOR_HITACHI_SH4 10005

#define IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 1

#define IMAGE_OS2_SIGNATURE 17742

#define PF_RDTSC_INSTRUCTION_AVAILABLE 8

#define IMAGE_SYM_TYPE_BYTE 12

#define SEC_NOCACHE 268435456

#define SUBLANG_UZBEK_CYRILLIC 2

#define PROCESSOR_ARM720 1824

#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11

#define MAXIMUM_REPARSE_DATA_BUFFER_SIZE 16384

#define REG_QWORD_LITTLE_ENDIAN 11

#define THREAD_QUERY_INFORMATION 64

#define TLS_MINIMUM_AVAILABLE 64

#define IMAGE_REL_AM_SECTION 8

#define IMAGE_REL_CEE_ABSOLUTE 0

#define LANG_CATALAN 3

#define FILE_UNICODE_ON_DISK 4

#define PROCESS_QUERY_INFORMATION 1024

#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK 8

#define IMAGE_REL_ALPHA_REFLONGNB 16

#define IMAGE_REL_IA64_IMM64 3

#define EMARCH_ENC_I17_IC_SIZE_X 1

#define ACCESS_ALLOWED_COMPOUND_ACE_TYPE 4

#define HEAP_DISABLE_COALESCE_ON_FREE 128

#define POWER_USER_NOTIFY_BUTTON 8

#define JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS 524287

#define JOB_OBJECT_SECURITY_ONLY_TOKEN 4

#define IMAGE_REL_IA64_GPREL32 28

#define REG_OPTION_CREATE_LINK 2

#define PO_THROTTLE_CONSTANT 1

#define PROCESSOR_ARM_7TDMI 70001

#define KEY_QUERY_VALUE 1

#define IMAGE_SIZEOF_FILE_HEADER 20

#define STATUS_SEGMENT_NOTIFICATION 1073741829

#define TAPE_DRIVE_SEQUENTIAL_FMKS 2148007936

#define WRITE_OWNER 524288

#define IMAGE_SYM_UNDEFINED 0

#define DOMAIN_GROUP_RID_GUESTS 514

#define STATUS_FLOAT_INVALID_OPERATION 3221225616

#define IMAGE_REL_IA64_GPREL22 9

#define PDCAP_WAKE_FROM_D0_SUPPORTED 16

#define IMAGE_SCN_MEM_WRITE 2147483648

#define ERROR_SEVERITY_INFORMATIONAL 1073741824

#define DOMAIN_GROUP_RID_USERS 513

#define SID_RECOMMENDED_SUB_AUTHORITIES 1

#define IMAGE_REL_SH3_DIRECT32_NB 16

#define TAPE_TENSION 2

#define STATUS_GUARD_PAGE_VIOLATION 2147483649

#define SECURITY_NETWORK_SERVICE_RID 20

#define FILE_NOTIFY_CHANGE_LAST_ACCESS 32

#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 128

#define LANG_SANSKRIT 79

#define STANDARD_RIGHTS_READ 131072

#define SEMAPHORE_ALL_ACCESS 2031619

#define LANG_GERMAN 7

#define THREAD_IMPERSONATE 256

#define APPLICATION_VERIFIER_LOCK_OVER_RELEASED 521

#define TAPE_LOGICAL_POSITION 1

#define MEM_RESET 524288

#define SORT_DEFAULT 0

#define SUBLANG_SPANISH_PUERTO_RICO 20

#define SUBLANG_PORTUGUESE_BRAZILIAN 1

#define FILE_WRITE_DATA 2

#define TAPE_SPACE_SEQUENTIAL_SMKS 9

#define IMAGE_SUBSYSTEM_EFI_ROM 13

#define IMAGE_REL_I386_SEG12 9

#define ACCESS_ALLOWED_CALLBACK_ACE_TYPE 9

#define DLL_THREAD_DETACH 3

#define TAPE_CHECK_FOR_DRIVE_PROBLEM 2

#define JOB_OBJECT_LIMIT_PROCESS_TIME 2

#define WT_EXECUTEONLYONCE 8

#define HEAP_CREATE_ALIGN_16 65536

#define VER_SERVICEPACKMAJOR 32

#define LANG_MALAY 62

#define TAPE_FILEMARKS 1

#define SUBLANG_SPANISH_DOMINICAN_REPUBLIC 7

#define TIME_ZONE_ID_UNKNOWN 0

#define VER_SUITE_SMALLBUSINESS 1

#define PROCESSOR_ARCHITECTURE_MSIL 8

#define MEMORY_ALLOCATION_ALIGNMENT 8

#define PROCESSOR_ARCHITECTURE_AMD64 9

#define TAPE_DRIVE_ECC 65536

#define ACL_REVISION 2

#define IMAGE_REL_M32R_SECTION 12

#define IMAGE_REL_ARM_GPREL7 7

#define SECTION_ALL_ACCESS 983071

#define SACL_SECURITY_INFORMATION 8

#define SORT_CHINESE_PRC 2

#define SECURITY_LOCAL_RID 0

#define LANG_HEBREW 13

#define IMAGE_COMDAT_SELECT_SAME_SIZE 3

#define IMAGE_REL_M32R_TOKEN 14

#define SE_DACL_DEFAULTED 8

#define EMARCH_ENC_I17_IMM7B_INST_WORD_X 3

#define ACCESS_MAX_MS_V4_ACE_TYPE 8

#define SECURITY_REMOTE_LOGON_RID 14

#define VER_PRODUCT_TYPE 128

#define NO_PROPAGATE_INHERIT_ACE 4

#define IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11

#define DOMAIN_ALIAS_RID_SYSTEM_OPS 549

#define THREAD_ALL_ACCESS 2032639

#define SE_SACL_AUTO_INHERIT_REQ 512

#define SYSTEM_AUDIT_CALLBACK_ACE_TYPE 13

#define SUBLANG_CHINESE_SIMPLIFIED 2

#define IMAGE_REL_M32R_PCREL8 7

#define JOB_OBJECT_QUERY 4

#define KEY_NOTIFY 16

#define SUBLANG_PORTUGUESE 2

#define TAPE_DRIVE_WRITE_MARK_IMMED 2415919104

#define MEM_PRIVATE 131072

#define KEY_WOW64_64KEY 256

#define IMAGE_WEAK_EXTERN_SEARCH_ALIAS 3

#define EMARCH_ENC_I17_IMM41b_VAL_POS_X 32

#define IS_TEXT_UNICODE_REVERSE_MASK 240

#define IMAGE_REL_ARM_SECREL 15

#define IMAGE_REL_ARM_GPREL12 6

#define ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF 4

#define PO_THROTTLE_ADAPTIVE 3

#define SUBLANG_ARABIC_QATAR 16

#define POWER_ACTION_DISABLE_WAKES 1073741824

#define DOMAIN_ALIAS_RID_ADMINS 544

#define SE_GROUP_LOGON_ID 3221225472

#define IMAGE_REL_PPC_ABSOLUTE 0

#define PROCESSOR_HITACHI_SH3E 10004

#define TAPE_DRIVE_LOAD_UNLD_IMMED 2147483680

#define LANG_BULGARIAN 2

#define STATUS_ABANDONED_WAIT_0 128

#define TAPE_SPACE_SETMARKS 8

#define IMAGE_REL_I386_DIR32 6

#define MAXBYTE 255

#define SORT_CHINESE_BIG5 0

#define READ_CONTROL 131072

#define MAXIMUM_PROCESSORS 32

#define ACCESS_MAX_LEVEL 4

#define LANG_PUNJABI 70

#define LANG_ENGLISH 9

#define TOKEN_ADJUST_SESSIONID 256

#define SANDBOX_INERT 2

#define APPLICATION_VERIFIER_INTERNAL_ERROR 2147483648

#define IMAGE_REL_MIPS_REFWORD 2

#define TAPE_DRIVE_SELECT 2

#define IMAGE_COMDAT_SELECT_LARGEST 6

#define PROCESS_VM_READ 16

#define IS_TEXT_UNICODE_DBCS_LEADBYTE 1024

#define LANG_ORIYA 72

#define IMAGE_REL_ALPHA_REFQUAD 2

#define PAGE_EXECUTE_WRITECOPY 128

#define IMAGE_SYM_CLASS_SECTION 104

#define GENERIC_READ 2147483648

#define COMPRESSION_FORMAT_LZNT1 2

#define FRAME_TSS 2

#define ACCESS_ALLOWED_ACE_TYPE 0

#define SE_PRIVILEGE_ENABLED_BY_DEFAULT 1

#define TOKEN_ASSIGN_PRIMARY 1

#define IMAGE_SYM_DEBUG -2

#define TAPE_DRIVE_LOCK_UNLK_IMMED 2147483776

#define IMAGE_REL_I386_DIR16 1

#define TAPE_DRIVE_WRITE_SHORT_FMKS 2214592512

#define FILE_ATTRIBUTE_NORMAL 128

#define STANDARD_RIGHTS_ALL 2031616

#define DBG_EXCEPTION_HANDLED 65537

#define IMAGE_ORDINAL_FLAG 2147483648

#define TIMER_ALL_ACCESS 2031619

#define TAPE_DRIVE_ERASE_IMMEDIATE 128

#define IMAGE_REL_IA64_UREL32 20

#define DOMAIN_GROUP_RID_POLICY_ADMINS 520

#define LANG_ARABIC 1

#define FILE_ACTION_RENAMED_OLD_NAME 4

#define APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS 3

#define SE_DACL_AUTO_INHERITED 1024

#define TAPE_DRIVE_SETMARKS 2148532224

#define IMAGE_REL_SH3_DIRECT4 6

#define VALID_INHERIT_FLAGS 31

#define LANG_MACEDONIAN 47

#define LANG_FAEROESE 56

#define IMAGE_SYM_CLASS_TYPE_DEFINITION 13

#define CONTEXT_i486 65536

#define SE_SELF_RELATIVE 32768

#define MAXIMUM_SUPPORTED_EXTENSION 512

#define IMAGE_FILE_MACHINE_M32R 36929

#define NUM_DISCHARGE_POLICIES 4

#define IMAGE_REL_SH3_DIRECT8 3

#define VER_WORKSTATION_NT 1073741824

#define SERVICE_AUTO_START 2

#define IMAGE_SIZEOF_NT_OPTIONAL64_HEADER 240

#define EMARCH_ENC_I17_IMM9D_VAL_POS_X 7

#define IMAGE_SYM_TYPE_SHORT 3

#define DOMAIN_USER_RID_KRBTGT 502

#define IMAGE_SCN_ALIGN_1024BYTES 11534336

#define POWER_ACTION_CRITICAL 2147483648

#define SECURITY_STATIC_TRACKING 0

#define IMAGE_REL_M32R_ABSOLUTE 0

#define IMAGE_NT_SIGNATURE 17744

#define KEY_WOW64_32KEY 512

#define EVENTLOG_AUDIT_SUCCESS 8

#define JOB_OBJECT_LIMIT_JOB_MEMORY 512

#define IO_REPARSE_TAG_HSM 3221225476

#define SUBLANG_ARABIC_MOROCCO 6

#define FILE_TRAVERSE 32

#define SUBLANG_SPANISH_BOLIVIA 16

#define IMAGE_FILE_MACHINE_AMD64 34404

#define SUBLANG_SPANISH_URUGUAY 14

#define ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE 11

#define EVENTLOG_AUDIT_FAILURE 16

#define TAPE_QUERY_IO_ERROR_DATA 3

#define VER_CONDITION_MASK 7

#define IMAGE_REL_SH3_PCREL12_WORD 11

#define IMAGE_REL_MIPS_PAIR 37

#define LANG_POLISH 21

#define VER_SUITE_SMALLBUSINESS_RESTRICTED 32

#define TAPE_DRIVE_FIXED_BLOCK 1024

#define SERVICE_TYPE_ALL 319

#define PROCESSOR_MIPS_R4000 4000

#define IMAGE_REL_M32R_PAIR 11

#define NON_PAGED_DEBUG_SIGNATURE 18766

#define SUBLANG_CHINESE_MACAU 5

#define IMAGE_SIZEOF_ROM_OPTIONAL_HEADER 56

#define TAPE_DRIVE_SET_REPORT_SMKS 2147485696

#define SERVICE_ERROR_IGNORE 0

#define IO_REPARSE_TAG_RESERVED_ONE 1

#define SIZEOF_RFPO_DATA 16

#define RTL_VRF_FLG_HANDLE_CHECKS 4

#define REG_NOTIFY_CHANGE_SECURITY 8

#define IMAGE_SCN_SCALE_INDEX 1

#define SERVICE_WIN32_SHARE_PROCESS 32

#define IMAGE_SCN_ALIGN_8192BYTES 14680064

#define IMAGE_COMDAT_SELECT_NEWEST 7

#define IMAGE_SYM_CLASS_BIT_FIELD 18

#define DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS 555

#define FILE_ATTRIBUTE_OFFLINE 4096

#define REG_OPTION_BACKUP_RESTORE 4

#define LANG_ITALIAN 16

#define JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0

#define IMAGE_SCN_MEM_DISCARDABLE 33554432

#define UNICODE_STRING_MAX_BYTES 65534

#define VER_MAJORVERSION 2

#define TAPE_DRIVE_RESERVED_BIT 2147483648

#define SERVICE_WIN32 48

#define SE_GROUP_USE_FOR_DENY_ONLY 16

#define HEAP_CREATE_ENABLE_TRACING 131072

#define SECURITY_PROXY_RID 8

#define SE_GROUP_DEFAULTED 2

#define IMAGE_SCN_ALIGN_4096BYTES 13631488

#define SECURITY_RESTRICTED_CODE_RID 12

#define WT_EXECUTEDELETEWAIT 8

#define SUBLANG_ENGLISH_PHILIPPINES 13

#define IMAGE_REL_SH3_DIRECT4_WORD 7

#define IMAGE_SYM_TYPE_NULL 0

#define MEM_COMMIT 4096

#define EMARCH_ENC_I17_IC_VAL_POS_X 21

#define FILE_APPEND_DATA 4

#define TAPE_FORMAT 5

#define LANG_MONGOLIAN 80

#define IMAGE_REL_CEE_TOKEN 6

#define PDCAP_WAKE_FROM_D2_SUPPORTED 64

#define FILE_VOLUME_IS_COMPRESSED 32768

#define DOMAIN_ALIAS_RID_PRINT_OPS 550

#define PAGE_READWRITE 4

#define IO_REPARSE_TAG_MOUNT_POINT 2684354563

#define SUBLANG_ARABIC_ALGERIA 5

#define JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10

#define SUBLANG_ENGLISH_ZIMBABWE 12

#define IMAGE_REL_PPC_NEG 256

#define MAXIMUM_SUSPEND_COUNT 127

#define IMAGE_FILE_MACHINE_MIPS16 614

#define SERVICE_BOOT_START 0

#define DOMAIN_GROUP_RID_ADMINS 512

#define PAGE_NOACCESS 1

#define IS_TEXT_UNICODE_REVERSE_ASCII16 16

#define FILE_READ_ATTRIBUTES 128

#define TAPE_DRIVE_LOG_BLK_IMMED 2147516416

#define ERROR_SEVERITY_ERROR 3221225472

#define SUBLANG_SPANISH_MODERN 3

#define IMAGE_FILE_MACHINE_I386 332

#define IS_TEXT_UNICODE_NOT_ASCII_MASK 61440

#define IMAGE_FILE_MACHINE_POWERPC 496

#define SUBLANG_CHINESE_SINGAPORE 4

#define IMAGE_SYM_TYPE_DOUBLE 7

#define IMAGE_SCN_MEM_NOT_CACHED 67108864

#define LOCALE_NEUTRAL 0

#define LANG_CROATIAN 26

#define SUBLANG_ARABIC_LEBANON 12

#define IMAGE_SCN_LNK_REMOVE 2048

#define TAPE_DRIVE_LOCK_UNLOCK 2147483652

#define POWER_ACTION_QUERY_ALLOWED 1

#define TAPE_SHORT_FILEMARKS 2

#define FRAME_FPO 0

#define IMAGE_REL_PPC_ADDR32NB 10

#define PROCESSOR_STRONGARM 2577

#define TAPE_LOAD 0

#define SERVICE_ERROR_CRITICAL 3

#define VER_NT_WORKSTATION 1

#define ACCESS_SYSTEM_SECURITY 16777216

#define TOKEN_SOURCE_LENGTH 8

#define UNICODE_NULL 0

#define IMAGE_FILE_DLL 8192

#define APPLICATION_VERIFIER_INTERNAL_WARNING 1073741824

#define TAPE_DRIVE_PADDING 262144

#define IMAGE_REL_ALPHA_LITUSE 5

#define N_TMASK 48

#define EMARCH_ENC_I17_IMM5C_SIZE_X 5

#define TAPE_LOCK 3

#define JOB_OBJECT_UI_VALID_FLAGS 255

#define EVENTLOG_PAIRED_EVENT_INACTIVE 16

#define LANG_ESTONIAN 37

#define CONTEXT_i386 65536

#define SORT_CHINESE_UNICODE 1

#define MEM_4MB_PAGES 2147483648

#define PDCAP_WARM_EJECT_SUPPORTED 256

#define SUBLANG_ENGLISH_AUS 3

#define IMAGE_SCN_NO_DEFER_SPEC_EXC 16384

#define SEF_AVOID_PRIVILEGE_CHECK 8

#define IMAGE_SCN_ALIGN_2BYTES 2097152

#define IMAGE_FILE_MACHINE_MIPSFPU 870

#define IMAGE_SCN_ALIGN_2048BYTES 12582912

#define KEY_READ 131097

#define IMAGE_REL_PPC_SECTION 12

#define N_TMASK2 240

#define N_TMASK1 192

#define IMAGE_SIZEOF_LINENUMBER 6

#define IMAGE_FILE_MACHINE_SH3DSP 419

#define IMAGE_REL_BASED_MIPS_JMPADDR16 9

#define REG_LEGAL_OPTION 15

#define IMAGE_REL_SH3_PCREL8_LONG 10

#define SUBLANG_GERMAN_AUSTRIAN 3

#define TIMER_MODIFY_STATE 2

#define IO_REPARSE_TAG_RESERVED_RANGE 1

#define IMAGE_DEBUG_MISC_EXENAME 1

#define SYSTEM_AUDIT_OBJECT_ACE_TYPE 7

#define LANG_MANIPURI 88

#define MEM_TOP_DOWN 1048576

#define NLS_VALID_LOCALE_MASK 1048575

#define PROCESS_ALL_ACCESS 2035711

#define JOB_OBJECT_UILIMIT_DISPLAYSETTINGS 16

#define IMAGE_REL_CEE_SECREL 5

#define TAPE_DRIVE_REVERSE_POSITION 2151677952

#define IMAGE_DIRECTORY_ENTRY_BASERELOC 5

#define SECURITY_WORLD_RID 0

#define SUBLANG_SPANISH_NICARAGUA 19

#define DOMAIN_USER_RID_ADMIN 500

#define IMAGE_REL_PPC_REFHI 16

#define IO_REPARSE_TAG_RESERVED_ZERO 0

#define IMAGE_SYM_CLASS_END_OF_FUNCTION -1

#define DOMAIN_GROUP_RID_SCHEMA_ADMINS 518

#define IMAGE_DLLCHARACTERISTICS_WDM_DRIVER 8192

#define SEC_IMAGE 16777216

#define TAPE_DRIVE_REPORT_SMKS 524288

#define FRAME_TRAP 1

#define SE_SACL_AUTO_INHERITED 2048

#define IMAGE_FILE_MACHINE_ALPHA 388

#define SEF_SACL_AUTO_INHERIT 2

#define IMAGE_SUBSYSTEM_EFI_APPLICATION 10

#define IMAGE_SYM_DTYPE_POINTER 1

#define IMAGE_SYM_TYPE_PCODE 32768

#define N_BTMASK 15

#define STATUS_FLOAT_STACK_CHECK 3221225618

#define SUBLANG_FRENCH_SWISS 4

#define IS_TEXT_UNICODE_SIGNATURE 8

#define IMAGE_REL_MIPS_SECTION 10

#define IMAGE_SCN_MEM_NOT_PAGED 134217728

#define SUBLANG_SERBIAN_LATIN 2

#define REG_SZ 1

#define LANG_TAMIL 73

#define IMAGE_REL_IA64_SECTION 11

#define IMAGE_SYM_CLASS_UNDEFINED_STATIC 14

#define HEAP_TAIL_CHECKING_ENABLED 32

#define LANG_NEUTRAL 0

#define VER_SUITE_COMMUNICATIONS 8

#define IMAGE_SUBSYSTEM_UNKNOWN 0

#define IMAGE_REL_MIPS_JMPADDR 3

#define IMAGE_SCN_ALIGN_8BYTES 4194304

#define VER_LESS 4

#define SUBLANG_FRENCH 1

#define POWER_ACTION_LIGHTEST_FIRST 268435456

#define SIZE_OF_80387_REGISTERS 80

#define IMAGE_REL_PPC_TYPEMASK 255

#define SE_GROUP_RESOURCE 536870912

#define ES_USER_PRESENT 4

#define STATUS_WAIT_0 0

#define STATUS_FLOAT_MULTIPLE_FAULTS 3221226164

#define VER_GREATER 2

#define REG_MULTI_SZ 7

#define IMAGE_DIRECTORY_ENTRY_RESOURCE 2

#define TAPE_DRIVE_FIXED 1

#define ACE_OBJECT_TYPE_PRESENT 1

#define IS_TEXT_UNICODE_NOT_UNICODE_MASK 3840

#define FILE_GENERIC_EXECUTE 1179808

#define IMAGE_REL_IA64_SECREL32 14

#define OWNER_SECURITY_INFORMATION 1

#define TAPE_PSEUDO_LOGICAL_POSITION 2

#define IMAGE_DIRECTORY_ENTRY_SECURITY 4

#define IMAGE_REL_PPC_REFLO 17

#define SORT_KOREAN_KSC 0

#define SUBLANG_AZERI_LATIN 1

#define SUBLANG_ENGLISH_SOUTH_AFRICA 7

#define IMAGE_REL_I386_REL16 2

#define SUBLANG_ENGLISH_EIRE 6

#define POWER_SYSTEM_MAXIMUM 7

#define FILE_ATTRIBUTE_ARCHIVE 32

#define TAPE_SPACE_FILEMARKS 6

#define IMAGE_REL_CEF_SECTION 4

#define LANG_TELUGU 74

#define IMAGE_REL_BASED_MIPS_JMPADDR 5

#define IMAGE_REL_IA64_SECREL22 12

#define IMAGE_SYM_ABSOLUTE -1

#define IS_TEXT_UNICODE_STATISTICS 2

#define COMPRESSION_FORMAT_DEFAULT 1

#define IMAGE_SYM_TYPE_ENUM 10

#define LANG_GUJARATI 71

#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8

#define FILE_VOLUME_QUOTAS 32

#define DBG_CONTROL_C 1073807365

#define SUBLANG_FRENCH_LUXEMBOURG 5

#define SECURITY_CREATOR_OWNER_RID 0

#define ACCESS_ALLOWED_OBJECT_ACE_TYPE 5

#define IMAGE_SCN_LNK_COMDAT 4096

#define IMAGE_FILE_MACHINE_WCEMIPSV2 361

#define TAPE_DRIVE_FORMAT 2684354560

#define SUBLANG_ENGLISH_US 1

#define REG_FORCE_RESTORE 8

#define IMAGE_SCN_LNK_INFO 512

#define DOMAIN_USER_RID_GUEST 501

#define REG_DWORD_LITTLE_ENDIAN 4

#define IMAGE_REL_SH3_PCREL8_WORD 9

#define TAPE_DRIVE_WRITE_PROTECT 4096

#define IMAGE_SCN_LNK_NRELOC_OVFL 16777216

#define SUBLANG_SPANISH_PANAMA 6

#define SECTION_QUERY 1

#define SUBLANG_ENGLISH_UK 2

#define IMAGE_REL_ALPHA_ABSOLUTE 0

#define TAPE_DRIVE_SET_COMPRESSION 2147484160

#define SECURITY_LOCAL_SYSTEM_RID 18

#define LANG_AZERI 44

#define APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY 516

#define TAPE_DRIVE_INITIATOR 4

#define IMAGE_SYM_TYPE_UNION 9

#define LOCALE_SYSTEM_DEFAULT 2048

#define STATUS_PRIVILEGED_INSTRUCTION 3221225622

#define SUBLANG_SPANISH 1

#define SERVICE_INTERACTIVE_PROCESS 256

#define IMAGE_REL_I386_SECREL 11

#define MAXIMUM_WAIT_OBJECTS 64

#define TOKEN_ALL_ACCESS_P 983295

#define EVENTLOG_BACKWARDS_READ 8

#define IMAGE_SYM_CLASS_STATIC 3

#define THREAD_SET_THREAD_TOKEN 128

#define MEM_DECOMMIT 16384

#define AUDIT_ALLOW_NO_PRIVILEGE 1

#define THREAD_SUSPEND_RESUME 2

#define TAPE_DRIVE_TAPE_CAPACITY 256

#define IMAGE_REL_MIPS_REFLO 5

#define LANG_SLOVENIAN 36

#define IMAGE_REL_BASED_HIGHLOW 3

#define MESSAGE_RESOURCE_UNICODE 1

#define IMAGE_REL_PPC_TOKEN 22

#define IMAGE_REL_MIPS_SECREL 11

#define EVENTLOG_ERROR_TYPE 1

#define EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X 13

#define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE 7

#define DOMAIN_GROUP_RID_CONTROLLERS 516

#define MAXLOGICALLOGNAMESIZE 256

#define IMAGE_FILE_RELOCS_STRIPPED 1

#define SUBLANG_SPANISH_EL_SALVADOR 17

#define FILE_SUPPORTS_OBJECT_IDS 65536

#define MINCHAR 128

#define SUBLANG_SPANISH_VENEZUELA 8

#define TAPE_DRIVE_SPACE_IMMEDIATE 2155872256

#define JOB_OBJECT_UILIMIT_EXITWINDOWS 128

#define IMAGE_SYM_CLASS_ARGUMENT 9

#define IMAGE_SYM_TYPE_CHAR 2

#define EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X 0

#define PROCESS_SET_INFORMATION 512

#define IMAGE_REL_CEE_ADDR32 1

#define IMAGE_FILE_MACHINE_AM33 467

#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 32

#define WT_EXECUTEINLONGTHREAD 16

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3

#define GROUP_SECURITY_INFORMATION 2

#define LANG_RUSSIAN 25

#define SECURITY_LOGON_IDS_RID_COUNT 3

#define SUBLANG_SPANISH_COLOMBIA 9

#define PROCESSOR_ARCHITECTURE_PPC 3

#define STANDARD_RIGHTS_REQUIRED 983040

#define SUBLANG_SPANISH_MEXICAN 2

#define REG_NOTIFY_CHANGE_NAME 1

#define PF_3DNOW_INSTRUCTIONS_AVAILABLE 7

#define IS_TEXT_UNICODE_CONTROLS 4

#define SUCCESSFUL_ACCESS_ACE_FLAG 64

#define SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT 3

#define TAPE_UNLOAD 1

#define JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2

#define APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP 514

#define SECURITY_LOCAL_SERVICE_RID 19

#define IMAGE_REL_ARM_BLX24 8

#define IMAGE_REL_MIPS_REFHI 4

#define DOMAIN_GROUP_RID_CERT_ADMINS 517

#define MAXDWORD 4294967295

#define IMAGE_REL_IA64_DIR64 5

#define IMAGE_SYM_CLASS_FILE 103

#define IMAGE_SYM_CLASS_NULL 0

#define LANG_INVARIANT 127

#define IMAGE_REL_I386_ABSOLUTE 0

#define IMAGE_REL_I386_REL32 20

#define IMAGE_REL_MIPS_REFWORDNB 34

#define IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 8

#define LANG_HUNGARIAN 14

#define FILE_CASE_SENSITIVE_SEARCH 1

#define IMAGE_FILE_MACHINE_AXP64 644

#define SE_DACL_PROTECTED 4096

#define IMAGE_REL_M32R_SECREL32 13

#define IMAGE_REL_ARM_BLX11 9

#define ACCESS_MIN_MS_OBJECT_ACE_TYPE 5

#define MEM_WRITE_WATCH 2097152

#define DOMAIN_ALIAS_RID_BACKUP_OPS 551

#define VER_PLATFORMID 8

#define COMPRESSION_ENGINE_MAXIMUM 256

#define SE_SACL_DEFAULTED 32

#define TAPE_UNLOCK 4

#define SE_DACL_PRESENT 4

#define TAPE_DRIVE_WRITE_LONG_FMKS 2281701376

#define SUBLANG_FRENCH_CANADIAN 3

#define APPLICATION_VERIFIER_UNKNOWN_ERROR 1

#define IMAGE_REL_ALPHA_SECTION 14

#define IMAGE_FILE_LOCAL_SYMS_STRIPPED 8

#define IMAGE_REL_BASED_LOW 2

#define ACCESS_MIN_MS_ACE_TYPE 0

#define WT_EXECUTEINPERSISTENTTHREAD 128

#define SORT_HUNGARIAN_TECHNICAL 1

#define SUBLANG_ITALIAN 1

#define MEM_IMAGE 16777216

#define ACCESS_DENIED_CALLBACK_ACE_TYPE 10

#define FILE_CREATE_PIPE_INSTANCE 4

#define REG_FULL_RESOURCE_DESCRIPTOR 9

#define TAPE_DRIVE_SET_EOT_WZ_SIZE 4194304

#define IMAGE_FILE_MACHINE_CEE 49390

#define IMAGE_FILE_MACHINE_CEF 3311

#define IMAGE_SIZEOF_NT_OPTIONAL32_HEADER 224

#define IMAGE_REL_IA64_DIR32 4

#define PDCAP_D2_SUPPORTED 4

#define IMAGE_SIZEOF_AUX_SYMBOL 18

#define PROCESS_VM_OPERATION 8

#define IMAGE_REL_ARM_ADDR32NB 2

#define IMAGE_REL_IA64_SREL32 19

#define CONTAINER_INHERIT_ACE 2

#define IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60

#define EMARCH_ENC_I17_IMM41a_SIZE_X 10

#define SECURITY_NT_NON_UNIQUE 21

#define PAGE_READONLY 2

#define TAPE_DRIVE_CLEAN_REQUESTS 33554432

#define EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X 24

#define IMAGE_REL_PPC_ADDR64 1

#define PROCESSOR_ARCHITECTURE_UNKNOWN 65535

#define IMAGE_COMDAT_SELECT_ANY 2

#define LANG_KYRGYZ 64

#define IMAGE_REL_IA64_ADDEND 31

#define LANG_BENGALI 69

#define IS_TEXT_UNICODE_REVERSE_SIGNATURE 128

#define IMAGE_REL_IA64_SREL22 18

#define VER_SUITE_PERSONAL 512

#define IMAGE_REL_AM_ABSOLUTE 0

#define SUBLANG_NEUTRAL 0

#define DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS 556

#define REG_REFRESH_HIVE 2

#define IMAGE_REL_PPC_ADDR32 2

#define IMAGE_SCN_MEM_LOCKED 262144

#define PDCAP_D0_SUPPORTED 1

#define VER_SUITE_DATACENTER 128

#define FILE_NOTIFY_CHANGE_CREATION 64

#define FILE_ATTRIBUTE_REPARSE_POINT 1024

#define GENERIC_EXECUTE 536870912

#define IMAGE_REL_IA64_SREL14 17

#define IMAGE_SYM_DTYPE_ARRAY 3

#define PAGE_WRITECOPY 8

#define IMAGE_REL_ALPHA_INLINE_REFLONG 9

#define STATUS_CONTROL_C_EXIT 3221225786

#define IMAGE_SYM_CLASS_BLOCK 100

#define IMAGE_SCN_CNT_INITIALIZED_DATA 64

#define HEAP_REALLOC_IN_PLACE_ONLY 16

#define IMAGE_SYM_CLASS_UNDEFINED_LABEL 7

#define JOB_OBJECT_LIMIT_RESERVED3 32768

#define EXCEPTION_MAXIMUM_PARAMETERS 15

#define JOB_OBJECT_LIMIT_RESERVED2 16384

#define JOB_OBJECT_LIMIT_RESERVED5 131072

#define JOB_OBJECT_LIMIT_RESERVED4 65536

#define JOB_OBJECT_UILIMIT_NONE 0

#define STATUS_REG_NAT_CONSUMPTION 3221226185

#define IMAGE_SCN_MEM_PRELOAD 524288

#define IMAGE_SUBSYSTEM_NATIVE 1

#define ERROR_SEVERITY_SUCCESS 0

#define IMAGE_FILE_MACHINE_THUMB 450

#define JOB_OBJECT_LIMIT_RESERVED6 262144

#define IMAGE_REL_ARM_BRANCH11 4

#define VER_PLATFORM_WIN32s 0

#define IMAGE_REL_AMD64_ADDR32 2

#define IMAGE_REL_PPC_ADDR14 5

#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10

#define IMAGE_REL_SH3_TOKEN 18

#define IMAGE_REL_CEF_TOKEN 6

#define ACCESS_DENIED_ACE_TYPE 1

#define EVENTLOG_SEEK_READ 2

#define SID_REVISION 1

#define IMAGE_REL_ALPHA_PAIR 12

#define IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9

#define STATUS_ARRAY_BOUNDS_EXCEEDED 3221225612

#define PF_XMMI_INSTRUCTIONS_AVAILABLE 6

#define HEAP_MAXIMUM_TAG 4095

#define IMAGE_REL_PPC_SECREL 11

#define IMAGE_REL_ARM_BRANCH24 3

#define OBJECT_INHERIT_ACE 1

#define IMAGE_REL_AMD64_SECREL 11

#define IMAGE_REL_PPC_ADDR24 3

#define RTL_VRF_FLG_FULL_PAGE_HEAP 1

#define PF_XMMI64_INSTRUCTIONS_AVAILABLE 10

#define IMAGE_REL_BASED_DIR64 10

#define TAPE_DRIVE_EOT_WZ_SIZE 8192

#define IMAGE_SEPARATE_DEBUG_SIGNATURE 18756

#define IMAGE_SYM_SECTION_MAX 65279

#define PROCESS_SET_QUOTA 256

#define IMAGE_REL_PPC_ADDR16 4

#define CONTEXT_EXTENDED_REGISTERS 65568

#define TOKEN_QUERY_SOURCE 16

#define ACCESS_OBJECT_GUID 0

#define ACL_REVISION_DS 4

#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 1024

#define SUBLANG_URDU_INDIA 2

#define IMAGE_DEBUG_TYPE_FPO 3

#define IMAGE_COMDAT_SELECT_EXACT_MATCH 4

#define FRAME_NONFPO 3

#define THREAD_GET_CONTEXT 8

#define FILE_ACTION_REMOVED 2

#define IMAGE_REL_CEE_ADDR64 2

#define REG_EXPAND_SZ 2

#define FILE_SHARE_READ 1

#define APPLICATION_VERIFIER_LOCK_INVALID_OWNER 518

#define FILE_READ_EA 8

#define SUBLANG_SPANISH_PERU 10

#define SYSTEM_ALARM_ACE_TYPE 3

#define TIME_ZONE_ID_DAYLIGHT 2

#define SERVICE_ADAPTER 4

#define SECURITY_DESCRIPTOR_REVISION 1

#define FILE_PERSISTENT_ACLS 8

#define ERROR_SEVERITY_WARNING 2147483648

#define SUBLANG_SPANISH_CHILE 13

#define IMAGE_REL_I386_SECTION 10

#define TAPE_DRIVE_SEQUENTIAL_SMKS 2149580800

#define REG_NO_COMPRESSION 4

#define APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION 10

#define APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP 9

#define POWER_LEVEL_USER_NOTIFY_SOUND 2

#define PROCESSOR_ARM920 2336

#define FILE_ATTRIBUTE_COMPRESSED 2048

#define SE_RM_CONTROL_VALID 16384

#define SUBLANG_ARABIC_EGYPT 3

#define ACCESS_PROPERTY_GUID 2

#define SUBLANG_MALAY_MALAYSIA 1

#define MIN_ACL_REVISION 2

#define SE_DACL_AUTO_INHERIT_REQ 256

#define TAPE_DRIVE_WRITE_FILEMARKS 2181038080

#define TAPE_INITIATOR_PARTITIONS 2

#define FILE_CASE_PRESERVED_NAMES 2

#define FILE_SHARE_WRITE 2

#define EMARCH_ENC_I17_IC_INST_WORD_POS_X 12

#define EVENTLOG_WARNING_TYPE 2

#define SUBLANG_GERMAN 1

#define TAPE_DRIVE_ABSOLUTE_BLK 2147487744

#define IMAGE_REL_PPC_BRNTAKEN 1024

#define IMAGE_SEPARATE_DEBUG_MISMATCH 32768

#define EMARCH_ENC_I17_SIGN_SIZE_X 1

#define LANG_HINDI 57

#define SECURITY_ENTERPRISE_CONTROLLERS_RID 9

#define IMAGE_SIZEOF_SECTION_HEADER 40

#define PROTECTED_SACL_SECURITY_INFORMATION 1073741824

#define SUBLANG_SPANISH_PARAGUAY 15

#define SE_GROUP_ENABLED_BY_DEFAULT 2

#define IMAGE_REL_ALPHA_GPRELLO 22

#define IMAGE_DEBUG_TYPE_EXCEPTION 5

#define UNICODE_STRING_MAX_CHARS 32767

#define GENERIC_WRITE 1073741824

#define IO_REPARSE_TAG_FILTER_MANAGER 2147483659

#define FILE_ATTRIBUTE_DIRECTORY 16

#define TAPE_DRIVE_END_OF_DATA 2147549184

#define SEC_FILE 8388608

#define IMAGE_SIZEOF_BASE_RELOCATION 8

#define IMAGE_REL_SH3_DIRECT8_WORD 4

#define EMARCH_ENC_I17_IMM5C_VAL_POS_X 16

#define LANG_THAI 30

#define SERVICE_WIN32_OWN_PROCESS 16

#define STATUS_IN_PAGE_ERROR 3221225478

#define SUBLANG_SPANISH_GUATEMALA 4

#define IMAGE_REL_MIPS_ABSOLUTE 0

#define ANSI_NULL 0

#define DOMAIN_ALIAS_RID_PREW2KCOMPACCESS 554

#define PF_PPC_MOVEMEM_64BIT_OK 4

#define FILE_ATTRIBUTE_HIDDEN 2

#define IMAGE_REL_SH3_SIZEOF_SECTION 13

#define STATUS_ILLEGAL_INSTRUCTION 3221225501

#define IMAGE_SYM_CLASS_END_OF_STRUCT 102

#define IMAGE_REL_PPC_REL14 7

#define LANG_BELARUSIAN 35

#define APPLICATION_VERIFIER_ACCESS_VIOLATION 2

#define IMAGE_REL_M32R_ADDR32NB 2

#define SECURITY_TERMINAL_SERVER_RID 13

#define N_TSHIFT 2

#define IMAGE_REL_AM_REL32_2 6

#define IS_TEXT_UNICODE_ILLEGAL_CHARS 256

#define IMAGE_REL_AM_REL32_1 5

#define IMAGE_SYM_DTYPE_NULL 0

#define IMAGE_REL_PPC_REL24 6

#define IMAGE_DIRECTORY_ENTRY_IAT 12

#define IMAGE_SYM_CLASS_REGISTER_PARAM 17

#define PF_PAE_ENABLED 9

#define IMAGE_REL_CEE_SECTION 4

#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16

#define IMAGE_FILE_MACHINE_ARM 448

#define FILE_NOTIFY_CHANGE_FILE_NAME 1

#define IMAGE_REL_ALPHA_GPRELHI 23

#define SID_MAX_SUB_AUTHORITIES 15

#define PO_THROTTLE_MAXIMUM 4

#define IMAGE_REL_AMD64_ADDR64 1

#define APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST 4

#define SECURITY_DESCRIPTOR_REVISION1 1

#define PROCESSOR_ALPHA_21064 21064

#define LANG_KAZAK 63

#define SUBLANG_ARABIC_IRAQ 2

#define EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X 4

#define IMAGE_SCN_ALIGN_16BYTES 5242880

#define TAPE_DRIVE_TENSION_IMMED 2147483712

#define HEAP_NO_SERIALIZE 1

#define REG_CREATED_NEW_KEY 1

#define PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 10

#define APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED 528

#define SYSTEM_AUDIT_ACE_TYPE 2

#define LANG_SYRIAC 90

#define SUBLANG_LITHUANIAN 1

#define JOB_OBJECT_LIMIT_VALID_FLAGS 524287

#define SERVICE_RECOGNIZER_DRIVER 8

#define REG_RESOURCE_REQUIREMENTS_LIST 10

#define VER_EQUAL 1

#define DBG_TERMINATE_PROCESS 1073807364

#define IMAGE_SIZEOF_SHORT_NAME 8

#define FILE_READ_ONLY_VOLUME 524288

#define IS_TEXT_UNICODE_ODD_LENGTH 512

#define IMAGE_REL_ALPHA_SECREL 15

#define POWER_ACTION_LOCK_CONSOLE 536870912

#define IMAGE_REL_AM_CALL32 3

#define JOB_OBJECT_MSG_EXIT_PROCESS 7

#define SECURITY_BATCH_RID 3

#define SE_PRIVILEGE_ENABLED 2

#define SUBLANG_GERMAN_SWISS 2

#define DLL_PROCESS_DETACH 0

#define JOB_OBJECT_UILIMIT_GLOBALATOMS 32

#define MAXIMUM_ALLOWED 33554432

#define HEAP_ZERO_MEMORY 8

#define IMAGE_REL_AMD64_TOKEN 13

#define PAGE_GUARD 256

#define APPLICATION_VERIFIER_INVALID_HANDLE 768

#define FILE_ATTRIBUTE_READONLY 1

#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 8192

#define MEM_MAPPED 262144

#define RTL_VRF_FLG_LOCK_CHECKS 2

#define THREAD_BASE_PRIORITY_MAX 2

#define MAXSHORT 32767

#define SYSTEM_ALARM_CALLBACK_ACE_TYPE 14

#define IMAGE_REL_MIPS_LITERAL 7

#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 8

#define REG_DWORD_BIG_ENDIAN 5

#define JOB_OBJECT_UILIMIT_READCLIPBOARD 2

#define VER_PLATFORM_WIN32_NT 2

#define FILE_LIST_DIRECTORY 1

#define IMAGE_DIRECTORY_ENTRY_EXPORT 0

#define CONTEXT_DEBUG_REGISTERS 65552

#define IMAGE_SCN_ALIGN_4BYTES 3145728

#define EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X 14

#define VER_SERVER_NT 2147483648

#define DISCHARGE_POLICY_CRITICAL 0

#define WT_EXECUTEINUITHREAD 2

#define SECURITY_ANONYMOUS_LOGON_RID 7

#define IMAGE_DEBUG_TYPE_CODEVIEW 2

#define DOMAIN_ALIAS_RID_POWER_USERS 547

#define FILE_GENERIC_WRITE 1179926

#define TOKEN_DUPLICATE 2

#define IMAGE_SUBSYSTEM_NATIVE_WINDOWS 8

#define FILE_ALL_ACCESS 2032127

#define IMAGE_REL_CEF_ADDR32NB 3

#define PROCESSOR_INTEL_IA64 2200

#define IMAGE_REL_SH3_DIRECT16 1

#define IMAGE_REL_PPC_TOCREL14 9

#define IMAGE_SCN_CNT_UNINITIALIZED_DATA 128

#define IMAGE_FILE_SYSTEM 4096

#define STATUS_STACK_OVERFLOW 3221225725

#define POWER_LEVEL_USER_NOTIFY_EXEC 4

#define APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT 519

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4

#define IMAGE_SYM_CLASS_AUTOMATIC 1

#define VER_OR 7

#define PROCESSOR_ARCHITECTURE_IA64 6

#define IMAGE_SCN_ALIGN_512BYTES 10485760

#define REG_DWORD 4

#define IMAGE_REL_PPC_TOCREL16 8

#define IMAGE_REL_SH3_SECREL 15

#define SUBLANG_SWEDISH_FINLAND 2

#define PROCESSOR_INTEL_486 486

#define SYSTEM_ALARM_OBJECT_ACE_TYPE 8

#define IMAGE_REL_PPC_IMGLUE 14

#define IMAGE_COMDAT_SELECT_ASSOCIATIVE 5

#define LANG_NORWEGIAN 20

#define IMAGE_SYM_CLASS_WEAK_EXTERNAL 105

#define LANG_GALICIAN 86

#define FILE_ATTRIBUTE_TEMPORARY 256

#define IMAGE_REL_MIPS_REFHALF 1

#define TAPE_DRIVE_ABS_BLK_IMMED 2147491840

#define REG_RESOURCE_LIST 8

#define COMPRESSION_FORMAT_NONE 0

#define IMAGE_FILE_MACHINE_SH3 418

#define SE_SACL_PROTECTED 8192

#define IMAGE_FILE_MACHINE_SH4 422

#define SYNCHRONIZE 1048576

#define IMAGE_FILE_MACHINE_SH5 424

#define SECURITY_DYNAMIC_TRACKING 1

#define THREAD_SET_CONTEXT 16

#define THREAD_SET_INFORMATION 32

#define IMAGE_SCN_GPREL 32768

#define IMAGE_DIRECTORY_ENTRY_DEBUG 6

#define IMAGE_FILE_MACHINE_R4000 358

#define EMARCH_ENC_I17_IMM41b_SIZE_X 8

#define SUBLANG_AZERI_CYRILLIC 2

#define SPECIFIC_RIGHTS_ALL 65535

#define SEMAPHORE_MODIFY_STATE 2

#define LANG_LATVIAN 38

#define IMAGE_SCN_MEM_READ 1073741824

#define SUBLANG_MALAY_BRUNEI_DARUSSALAM 2

#define IMAGE_REL_ALPHA_MATCH 13

#define APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE 515

#define IMAGE_SEPARATE_DEBUG_FLAGS_MASK 32768

#define IMAGE_SCN_MEM_PURGEABLE 131072

#define STATUS_FLOAT_MULTIPLE_TRAPS 3221226165

#define PROCESS_SUSPEND_RESUME 2048

#define IMAGE_FILE_MACHINE_ALPHA64 644

#define IMAGE_REL_ALPHA_GPDISP 6

#define IMAGE_SCN_MEM_EXECUTE 536870912

#define STATUS_DATATYPE_MISALIGNMENT 2147483650

#define IMAGE_SYM_TYPE_UINT 14

#define TAPE_QUERY_DRIVE_PARAMETERS 0

#define DLL_PROCESS_VERIFIER 4

#define FILE_ACTION_ADDED 1

#define IMAGE_FILE_MACHINE_SH3E 420

#define THREAD_BASE_PRIORITY_MIN -2

#define SUBLANG_ENGLISH_CAN 4

#define VER_PLATFORM_WIN32_WINDOWS 1

#define LANG_KANNADA 75

#define IMAGE_FILE_MACHINE_TRICORE 1312

#define IMAGE_NT_OPTIONAL_HDR_MAGIC 267

#define LANG_JAPANESE 17

#define IMAGE_DEBUG_TYPE_COFF 1

#define JOB_OBJECT_UILIMIT_ALL 255

#define APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK 512

#define IMAGE_REL_SH3_DIRECT32 2

#define TAPE_DRIVE_SET_BLOCK_SIZE 2147483664

#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 64

#define IMAGE_REL_AM_TOKEN 9

#define HEAP_FREE_CHECKING_ENABLED 64

#define REG_NOTIFY_CHANGE_LAST_SET 4

#define MUTANT_ALL_ACCESS 2031617

#define VER_SUITE_SINGLEUSERTS 256

#define IMAGE_REL_PPC_SECRELLO 19

#define SUBLANG_FRENCH_BELGIAN 2

#define HEAP_GROWABLE 2

#define EMARCH_ENC_I17_IMM5C_INST_WORD_X 3

#define DACL_SECURITY_INFORMATION 4

#define SUBLANG_ARABIC_BAHRAIN 15

#define FILE_SUPPORTS_REPARSE_POINTS 128

#define FILE_GENERIC_READ 1179785

#define FILE_ATTRIBUTE_ENCRYPTED 16384

#define EVENTLOG_END_ALL_PAIRED_EVENTS 4

#define IS_TEXT_UNICODE_REVERSE_STATISTICS 32

#define IS_TEXT_UNICODE_UNICODE_MASK 15

#define PAGE_EXECUTE_READWRITE 64

#define SUBLANG_ENGLISH_NZ 5

#define SE_GROUP_OWNER 8

#define FILE_NOTIFY_CHANGE_LAST_WRITE 16

#define VER_SUITE_BACKOFFICE 4

#define IMAGE_SIZEOF_NT_OPTIONAL_HEADER 224

#define SERVICE_KERNEL_DRIVER 1

#define STATUS_NONCONTINUABLE_EXCEPTION 3221225509

#define ACCESS_MAX_MS_V3_ACE_TYPE 4

#define ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE 2

#define IS_TEXT_UNICODE_REVERSE_CONTROLS 64

#define KEY_WOW64_RES 768

#define IMAGE_SCN_TYPE_NO_PAD 8

#define IMAGE_DEBUG_TYPE_CLSID 11

#define SUBLANG_ARABIC_UAE 14

#define LANG_GEORGIAN 55

#define SUBLANG_ARABIC_KUWAIT 13

#define TAPE_DRIVE_SET_PADDING 2147484672

#define SORT_KOREAN_UNICODE 1

#define SUBLANG_SWEDISH 1

#define TAPE_SPACE_RELATIVE_BLOCKS 5

#define TOKEN_ADJUST_DEFAULT 128

#define CONTEXT_FLOATING_POINT 65544

#define EMARCH_ENC_I17_IC_INST_WORD_X 3

#define APPLICATION_VERIFIER_BAD_HEAP_HANDLE 5

#define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14

#define IMAGE_DIRECTORY_ENTRY_EXCEPTION 3

#define IMAGE_FILE_UP_SYSTEM_ONLY 16384

#define FILE_ATTRIBUTE_SYSTEM 4

#define MAILSLOT_WAIT_FOREVER -1

#define JOB_OBJECT_SECURITY_FILTER_TOKENS 8

#define STATUS_FLOAT_OVERFLOW 3221225617

#define POWER_FORCE_TRIGGER_RESET 2147483648

#define IMAGE_REL_AMD64_ADDR32NB 3

#define TAPE_DRIVE_ERASE_SHORT 16

#define SE_OWNER_DEFAULTED 1

#define SUBLANG_NORWEGIAN_BOKMAL 1

#define TAPE_ABSOLUTE_POSITION 0

#define IMAGE_REL_BASED_IA64_IMM64 9

#define IMAGE_REL_PPC_IFGLUE 13

#define REG_BINARY 3

#define LANG_USER_DEFAULT 1024

#define STATUS_FLOAT_INEXACT_RESULT 3221225615

#define FILE_WRITE_EA 16

#define IMAGE_REL_SH3_DIRECT8_LONG 5

#define IMAGE_REL_AM_SECREL 7

#define IMAGE_REL_AM_ADDR32NB 2

#define FILE_NOTIFY_CHANGE_SECURITY 256

#define JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS 8

#define IMAGE_SYM_TYPE_LONG 5

#define CONTEXT_SEGMENTS 65540

#define TAPE_ERASE_LONG 1

#define LANG_CZECH 5

#define SERVICE_ERROR_NORMAL 1

#define KEY_CREATE_LINK 32

#define SE_GROUP_MANDATORY 1

#define IMAGE_SUBSYSTEM_POSIX_CUI 7

#define IMAGE_REL_PPC_TOCDEFN 2048

#define WT_EXECUTEINPERSISTENTIOTHREAD 64

#define PROCESS_SET_SESSIONID 4

#define IMAGE_REL_AM_ADDR32 1

#define IMAGE_REL_CEF_ADDR64 2

#define SE_SACL_PRESENT 16

#define TAPE_QUERY_MEDIA_CAPACITY 1

#define SUBLANG_SYS_DEFAULT 2

#define IMAGE_REL_PPC_PAIR 18

#define STATUS_INVALID_DISPOSITION 3221225510

#define REG_OPTION_NON_VOLATILE 0

#define PF_COMPARE_EXCHANGE_DOUBLE 2

#define SUBLANG_DUTCH 1

#define IMAGE_REL_CEF_ADDR32 1

#define IMAGE_SYM_TYPE_DWORD 15

#define IMAGE_SCN_MEM_FARDATA 32768

#define PF_MMX_INSTRUCTIONS_AVAILABLE 3

#define TAPE_DRIVE_GET_ABSOLUTE_BLK 1048576

#define LANG_SWAHILI 65

#define IMAGE_REL_MIPS_SECRELLO 12

#define IO_COMPLETION_ALL_ACCESS 2031619

#define DOMAIN_ALIAS_RID_REPLICATOR 552

#define SECURITY_LOGON_IDS_RID 5

#define THREAD_BASE_PRIORITY_IDLE -15

#define REG_QWORD 11

#define IMAGE_REL_SH3_DIRECT4_LONG 8

#define FILE_NOTIFY_CHANGE_DIR_NAME 2

#define VER_NT_SERVER 3

#define PROCESS_CREATE_THREAD 2

#define REG_LINK 6

#define EMARCH_ENC_I17_IMM41c_VAL_POS_X 40

#define DOMAIN_GROUP_RID_COMPUTERS 515

#define LANG_ICELANDIC 15

#define KEY_ENUMERATE_SUB_KEYS 8

#define JOB_OBJECT_SECURITY_NO_ADMIN 1

#define IMAGE_REL_IA64_PCREL60B 22

#define REG_NONE 0

#define PROCESSOR_INTEL_PENTIUM 586

#define IMAGE_SYM_CLASS_LABEL 6

#define IMAGE_SYM_TYPE_WORD 13

#define IMAGE_REL_AMD64_REL32_1 5

#define IMAGE_COMDAT_SELECT_NODUPLICATES 1

#define PROCESSOR_SHx_SH3 103

#define IMAGE_REL_AMD64_REL32_3 7

#define IMAGE_REL_AMD64_REL32_2 6

#define IMAGE_REL_AMD64_REL32_5 9

#define PROCESSOR_SHx_SH4 104

#define IMAGE_REL_AMD64_REL32_4 8

#define IMAGE_REL_MIPS_TOKEN 14

#define APPLICATION_VERIFIER_RESERVED_BIT_28 268435456

#define IO_REPARSE_TAG_SIS 2147483655

#define IMAGE_VXD_SIGNATURE 17740

#define SEC_RESERVE 67108864

#define WRITE_WATCH_FLAG_RESET 1

#define IMAGE_REL_CEF_SECREL 5

#define IMAGE_REL_IA64_PCREL60X 21

#define IMAGE_REL_AMD64_SECREL7 12

#define IMAGE_REL_IA64_PCREL60M 25

#define WT_EXECUTEINTIMERTHREAD 32

#define IMAGE_REL_CEE_ADDR32NB 3

#define IMAGE_REL_IA64_PCREL60F 23

#define IMAGE_REL_IA64_PCREL60I 24

#define KEY_ALL_ACCESS 983103

#define EMARCH_ENC_I17_SIGN_INST_WORD_POS_X 27

#define SUBLANG_ENGLISH_TRINIDAD 11

#define PF_FLOATING_POINT_EMULATED 1

#define ANYSIZE_ARRAY 1

#define HEAP_TAG_SHIFT 18

#define IMAGE_REL_ARM_SECTION 14

#define THREAD_DIRECT_IMPERSONATION 512

#define SUBLANG_GERMAN_LIECHTENSTEIN 5

#define DOMAIN_ALIAS_RID_USERS 545

#define IMAGE_FILE_MACHINE_R10000 360

#define IMAGE_REL_AM_FUNCINFO 4

#define PROCESSOR_ARCHITECTURE_ALPHA64 7

#define IMAGE_SCN_ALIGN_32BYTES 6291456

#define IMAGE_REL_MIPS_SECRELHI 13

#define JOB_OBJECT_LIMIT_JOB_TIME 4

#define IMAGE_REL_IA64_TOKEN 27

#define JOB_OBJECT_UILIMIT_DESKTOP 64

#define SECURITY_NULL_RID 0

#define DLL_PROCESS_ATTACH 1

#define IMAGE_SUBSYSTEM_XBOX 14

#define TOKEN_READ 131080

#define STATUS_TIMEOUT 258

#define IS_TEXT_UNICODE_NULL_BYTES 4096

#define IMAGE_FILE_BYTES_REVERSED_HI 32768

#define FILE_SUPPORTS_REMOTE_STORAGE 256

#define MAXLONG 2147483647

#define SORT_HUNGARIAN_DEFAULT 0

#define JOB_OBJECT_MSG_NEW_PROCESS 6

#define SUBLANG_UZBEK_LATIN 1

#define COMPRESSION_ENGINE_HIBER 512

#define IMAGE_REL_M32R_GPREL16 4

#define SUBLANG_ARABIC_SAUDI_ARABIA 1

#define WT_EXECUTEINIOTHREAD 1

#define SUBLANG_ARABIC_SYRIA 10

#define SUBLANG_ARABIC_TUNISIA 7

#define SECURITY_CREATOR_OWNER_SERVER_RID 2

#define EVENTLOG_START_PAIRED_EVENT 1

#define PO_THROTTLE_DEGRADE 2

#define TOKEN_ADJUST_PRIVILEGES 32

#define JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 255

#define IMAGE_REL_ALPHA_HINT 8

#define ACL_REVISION4 4

#define JOB_OBJECT_SECURITY_VALID_FLAGS 15

#define MEM_RELEASE 32768

#define LANG_TATAR 68

#define LANG_SINDHI 89

#define LANG_SERBIAN 26

#define DUPLICATE_CLOSE_SOURCE 1

#define IMAGE_REL_ARM_ADDR32 1

#define IMAGE_REL_IA64_ABSOLUTE 0

#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 8192

#define ACL_REVISION3 3

#define ACL_REVISION2 2

#define ACL_REVISION1 1

#define IMAGE_REL_AMD64_SECTION 10

#define IMAGE_REL_MIPS_GPREL 6

#define IMAGE_SCN_ALIGN_1BYTES 1048576

#define SORT_JAPANESE_XJIS 0

#define EVENTLOG_PAIRED_EVENT_ACTIVE 8

#define IMAGE_REL_IA64_LTOFF22 10

#define GENERIC_ALL 268435456

#define IMAGE_SYM_CLASS_REGISTER 4

#define IMAGE_FILE_BYTES_REVERSED_LO 128

#define IMAGE_SYM_CLASS_MEMBER_OF_UNION 11

#define TOKEN_EXECUTE 131072

#define VER_SUITE_BLADE 1024

#define IMAGE_SCN_MEM_SHARED 268435456

#define IMAGE_SYM_TYPE_MOE 11

#define IMAGE_REL_IA64_PCREL21B 6

#define SECURITY_CREATOR_GROUP_SERVER_RID 3

#define IMAGE_REL_IA64_PCREL21F 8

#define IMAGE_SCN_ALIGN_128BYTES 8388608

#define RTL_VRF_FLG_STACK_CHECKS 8

#define PROCESS_TERMINATE 1

#define PROCESSOR_OPTIL 18767

#define IMAGE_REL_PPC_BRTAKEN 512

#define LANG_BASQUE 45

#define TAPE_DRIVE_FORMAT_IMMEDIATE 3221225472

#define LANG_AFRIKAANS 54

#define TAPE_QUERY_DEVICE_ERROR_DATA 4

#define PROCESS_CREATE_PROCESS 128

#define IMAGE_FILE_DEBUG_STRIPPED 512

#define DBG_TERMINATE_THREAD 1073807363

#define SEF_DEFAULT_GROUP_FROM_PARENT 64

#define IMAGE_DEBUG_TYPE_FIXUP 6

#define LANG_DUTCH 19

#define FILE_SHARE_DELETE 4

#define PROCESSOR_ARCHITECTURE_INTEL 0

#define IMAGE_REL_M32R_PCREL16 6

#define IMAGE_SUBSYSTEM_OS2_CUI 5

#define IMAGE_REL_ALPHA_BRADDR 7

#define IMAGE_REL_M32R_PCREL24 5

#define EVENTLOG_END_PAIRED_EVENT 2

#define IMAGE_DOS_SIGNATURE 23117

#define EXCEPTION_NONCONTINUABLE 1

#define TAPE_DRIVE_SET_CMP_BOP_ONLY 67108864

#define TAPE_REWIND 0

#define IMAGE_REL_BASED_HIGHADJ 4

#define SERVICE_DRIVER 11

#define EMARCH_ENC_I17_IMM7B_SIZE_X 7

#define TAPE_ABSOLUTE_BLOCK 1

#define MAXWORD 65535

#define JOB_OBJECT_ALL_ACCESS 2031647

#define EMARCH_ENC_I17_IMM9D_SIZE_X 9

#define IMAGE_REL_PPC_SECRELHI 20

#define FILE_NOTIFY_CHANGE_SIZE 8

#define MAILSLOT_NO_MESSAGE -1

#define LANG_SYSTEM_DEFAULT 2048

#define SUBLANG_SERBIAN_CYRILLIC 3

#define TAPE_DRIVE_LOGICAL_BLK 2147500032

#define SECTION_EXTEND_SIZE 16

#define TOKEN_ALL_ACCESS 983551

#define SUBLANG_ITALIAN_SWISS 2

#define SE_GROUP_ENABLED 4

#define TAPE_SPACE_SEQUENTIAL_FMKS 7

#define FILE_ACTION_RENAMED_NEW_NAME 5

#define APPLICATION_VERIFIER_STACK_OVERFLOW 11

#define IMAGE_REL_ALPHA_REFLO 11

#define SECTION_MAP_READ 4

#define SORT_GEORGIAN_TRADITIONAL 0

#define REG_OPTION_OPEN_LINK 8

#define IMAGE_REL_IA64_SECREL64I 13

#define FAILED_ACCESS_ACE_FLAG 128

#define APPLICATION_VERIFIER_TERMINATE_THREAD_CALL 256

#define CONTEXT_FULL 65543

#define PAGE_WRITECOMBINE 1024

#define POWER_ACTION_OVERRIDE_APPS 4

#define TAPE_SELECT_PARTITIONS 1

#define IMAGE_FILE_MACHINE_MIPSFPU16 1126

#define PROCESSOR_PPC_603 603

#define PROCESSOR_PPC_604 604

#define IMPORT_OBJECT_HDR_SIG2 65535

#define PROCESSOR_PPC_601 601

#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 1024

#define TAPE_DRIVE_LOAD_UNLOAD 2147483649

#define IMAGE_REL_SH3_SECTION 14

#define APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE 6

#define IMAGE_DEBUG_TYPE_UNKNOWN 0

#define IMAGE_REL_SH3_GPREL4_LONG 17

#define IMAGE_REL_ALPHA_LITERAL 4

#define FILE_DELETE_CHILD 64

#define EVENTLOG_SEQUENTIAL_READ 1

#define WT_EXECUTEDEFAULT 0

#define IMAGE_REL_IA64_PCREL21M 7

#define LANG_ROMANIAN 24

#define LANG_DIVEHI 101

#define TOKEN_QUERY 8

#define MAXIMUM_NUMA_NODES 16

#define ACCESS_MAX_MS_OBJECT_ACE_TYPE 8

#define IMAGE_SIZEOF_RELOCATION 10

#define IMAGE_REL_ALPHA_GPREL32 3

#define SORT_CHINESE_BOPOMOFO 3

#define STATUS_NO_MEMORY 3221225495

#define TAPE_LOGICAL_BLOCK 2

#define EMARCH_ENC_I17_IMM9D_INST_WORD_X 3

#define PROCESSOR_PPC_620 620

#define IMAGE_SYM_TYPE_INT 4

#define IMAGE_FILE_MACHINE_POWERPCFP 497

#define SORT_JAPANESE_UNICODE 1

#define DBG_EXCEPTION_NOT_HANDLED 2147549185

#define APPLICATION_VERIFIER_LOCK_CORRUPTED 517

#define SECURITY_CREATOR_GROUP_RID 1

#define IMAGE_REL_ALPHA_REFHI 10

#define REG_NOTIFY_CHANGE_ATTRIBUTES 2

#define TAPE_DRIVE_GET_LOGICAL_BLK 2097152

#define LANG_TURKISH 31

#define PROCESSOR_INTEL_386 386

#define IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8

#define WRITE_DAC 262144

#define IMAGE_FILE_AGGRESIVE_WS_TRIM 16

#define SERVICE_ERROR_SEVERE 2

#define IMAGE_REL_IA64_IMMGPREL64 26

#define VER_AND 6

#define SUBLANG_DUTCH_BELGIAN 2

#define TAPE_PSEUDO_LOGICAL_BLOCK 3

#define IMAGE_SYM_TYPE_STRUCT 8

#define LANG_URDU 32

#define UNPROTECTED_DACL_SECURITY_INFORMATION 536870912

#define REG_WHOLE_HIVE_VOLATILE 1

#define PROCESS_DUP_HANDLE 64

#define FILE_READ_DATA 1

#define ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE 12

#define APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL 513

#define FILE_SUPPORTS_SPARSE_FILES 64

#define SUBLANG_NORWEGIAN_NYNORSK 2

#define PRIVILEGE_SET_ALL_NECESSARY 1

#define STATUS_BREAKPOINT 2147483651

#define LANG_KONKANI 87

#define IMAGE_REL_MIPS_JMPADDR16 16

#define PROCESSOR_ARM820 2080

#define LANG_FRENCH 12

#define DUPLICATE_SAME_ACCESS 2

#define FILE_FILE_COMPRESSION 16

#define TAPE_DRIVE_VARIABLE_BLOCK 2048

#define LANG_SWEDISH 29

#define EMARCH_ENC_I17_IMM7B_VAL_POS_X 0

#define EVENTLOG_SUCCESS 0

#define SUBLANG_GERMAN_LUXEMBOURG 4

#define TAPE_DRIVE_ERASE_LONG 32

#define SEF_DACL_AUTO_INHERIT 1

#define IMAGE_DEBUG_TYPE_RESERVED10 10

#define SUBLANG_URDU_PAKISTAN 1

#define LANG_UKRAINIAN 34

#define LANG_GREEK 8

#define JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8

#define LANG_NEPALI 97

#define SUBLANG_ARABIC_YEMEN 9

#define FILE_ACTION_MODIFIED 3

#define VER_NUM_BITS_PER_CONDITION_MASK 3

#define SUBLANG_ENGLISH_BELIZE 10

#define IMAGE_REL_SH3_STARTOF_SECTION 12

#define STATUS_INVALID_HANDLE 3221225480

#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 4096

#define SERVICE_DEMAND_START 3

#define DISCHARGE_POLICY_LOW 1

#define FILE_SUPPORTS_ENCRYPTION 131072

#define IMAGE_SCN_ALIGN_256BYTES 9437184

#define IMAGE_SYM_CLASS_STRUCT_TAG 10

#define IMAGE_SCN_CNT_CODE 32

#define EMARCH_ENC_I17_SIGN_INST_WORD_X 3

#define IMAGE_FILE_NET_RUN_FROM_SWAP 2048

#define LANG_UZBEK 67

#define JOB_OBJECT_POST_AT_END_OF_JOB 1

#define LANG_KOREAN 18

#define SERVICE_SYSTEM_START 1

#define PDCAP_WAKE_FROM_D1_SUPPORTED 32

#define EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X 18

#define THREAD_BASE_PRIORITY_LOWRT 15

#define IMAGE_ROM_OPTIONAL_HDR_MAGIC 263

#define JOB_OBJECT_LIMIT_AFFINITY 16

#define TAPE_DRIVE_TENSION 2147483650

#define IMAGE_SYM_CLASS_FUNCTION 101

#define INHERIT_ONLY_ACE 8

#define SUBLANG_SPANISH_COSTA_RICA 5

#define LANG_SLOVAK 27

#define STANDARD_RIGHTS_EXECUTE 131072

#define SUBLANG_SPANISH_ECUADOR 12

#define JOB_OBJECT_SECURITY_RESTRICTED_TOKEN 2

#define COMPRESSION_ENGINE_STANDARD 0

#define JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 32767

#define IMAGE_FILE_LINE_NUMS_STRIPPED 4

#define PROCESSOR_ARCHITECTURE_ARM 5

#define IMAGE_REL_PPC_SECREL16 15

#define MINSHORT 32768

#define APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT 520

#define IMAGE_SYM_TYPE_FLOAT 6

#define IMAGE_REL_BASED_ABSOLUTE 0

#define STANDARD_RIGHTS_WRITE 131072

#define EVENTLOG_INFORMATION_TYPE 4

#define IMAGE_REL_CEF_ABSOLUTE 0

#define IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7

#define IMAGE_OS2_SIGNATURE_LE 17740

#define REG_NO_LAZY_FLUSH 4

#define SUBLANG_DEFAULT 1

#define SECURITY_NETWORK_RID 2

#define SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT 4

#define KEY_SET_VALUE 2

#define IMAGE_REL_ALPHA_REFQ2 20

#define IMAGE_REL_ALPHA_REFQ1 21

#define IMAGE_REL_ALPHA_REFQ3 19

#define TAPE_DRIVE_WRITE_SETMARKS 2164260864

#define IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE 32768

#define SECURITY_INTERACTIVE_RID 4

#define ES_CONTINUOUS 2147483648

#define IO_COMPLETION_MODIFY_STATE 2

#define IMAGE_REL_M32R_REFLO 10

#define DOMAIN_ALIAS_RID_GUESTS 546

#define IMAGE_REL_I386_DIR32NB 7

#define STATUS_INTEGER_DIVIDE_BY_ZERO 3221225620

#define LOCALE_INVARIANT 127

#define SUBLANG_KASHMIRI_INDIA 2

#define IMAGE_REL_ALPHA_REFLONG 1

#define STATUS_INTEGER_OVERFLOW 3221225621

#define IMAGE_SCN_ALIGN_64BYTES 7340032

#define JOB_OBJECT_TERMINATE 8

#define SUBLANG_FRENCH_MONACO 6

#define SECURITY_SERVICE_RID 6

#define IMAGE_ARCHIVE_START_SIZE 8

#define VER_MINORVERSION 1

#define LANG_FINNISH 11

#define IMAGE_DLLCHARACTERISTICS_NO_BIND 2048

#define IMAGE_SYM_CLASS_CLR_TOKEN 107

#define SUBLANG_SPANISH_HONDURAS 18

#define ES_SYSTEM_REQUIRED 1

#define SERVICE_FILE_SYSTEM_DRIVER 2

#define REG_LATEST_FORMAT 2

#define IMAGE_FILE_MACHINE_R3000 354

#define POWER_LEVEL_USER_NOTIFY_TEXT 1

#define IS_TEXT_UNICODE_ASCII16 1

#define TAPE_DRIVE_HIGH_FEATURES 2147483648

#define TOKEN_WRITE 131296

#define IMAGE_REL_BASED_HIGH 1

#define PDCAP_WAKE_FROM_D3_SUPPORTED 128

#define VER_LESS_EQUAL 5

#define IMAGE_REL_SH3_ABSOLUTE 0

#define IMAGE_ORDINAL_FLAG32 2147483648

#define EVENT_MODIFY_STATE 2

#define PROCESSOR_ARCHITECTURE_MIPS 1

#define FILE_WRITE_ATTRIBUTES 256

#define EMARCH_ENC_I17_SIGN_VAL_POS_X 63

#define IMAGE_SYM_CLASS_EXTERNAL 2

#define DLL_THREAD_ATTACH 2

#define LANG_LITHUANIAN 39

#define IMAGE_DIRECTORY_ENTRY_TLS 9

#define ACCESS_PROPERTY_SET_GUID 1

#define TAPE_DRIVE_EJECT_MEDIA 16777216

#define VER_BUILDNUMBER 4

#define LANG_DANISH 6

#define IMAGE_SYM_CLASS_FAR_EXTERNAL 68

#define TAPE_DRIVE_ERASE_BOP_ONLY 64

#define PDCAP_D1_SUPPORTED 2

#define TOKEN_ADJUST_GROUPS 64

#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 2048

#define IMAGE_REL_M32R_REFHI 9

#define MAXCHAR 127

#define IMAGE_NT_OPTIONAL_HDR64_MAGIC 523

#define PROCESSOR_ARCHITECTURE_ALPHA 2

#define LANG_FARSI 41

#define SUBLANG_SPANISH_ARGENTINA 11

#define SUBLANG_NEPALI_INDIA 2

#define LANG_KASHMIRI 96

#define TAPE_SETMARKS 0

#define FILE_EXECUTE 32

#define IMAGE_DIRECTORY_ENTRY_IMPORT 1

#define TIME_ZONE_ID_STANDARD 1

#define TAPE_SPACE_END_OF_DATA 4

#define SECTION_MAP_EXECUTE 8

#define LOCALE_USER_DEFAULT 1024

#define HEAP_PSEUDO_TAG_FLAG 32768

#define VER_SUITE_EMBEDDEDNT 64

#define INHERITED_ACE 16

#define IMAGE_ORDINAL_FLAG64 -9223372036854775808

#define SE_PRIVILEGE_USED_FOR_ACCESS 2147483648

#define JOB_OBJECT_UILIMIT_HANDLES 1

#define LANG_ALBANIAN 28

#define HEAP_GENERATE_EXCEPTIONS 4

#define WT_EXECUTEINWAITTHREAD 4

#define PDCAP_D3_SUPPORTED 8

#define IMAGE_DEBUG_TYPE_BORLAND 9

#define SECURITY_BUILTIN_DOMAIN_RID 32

#define IMAGE_REL_M32R_REFHALF 8

#define LANG_PORTUGUESE 22

#define LANG_CHINESE 4

#define IMAGE_REL_ALPHA_SECRELHI 18

#define STATUS_USER_APC 192

#define JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9

#define SECURITY_SERVER_LOGON_RID 9

#define IMAGE_SCN_LNK_OTHER 256

#define PROTECTED_DACL_SECURITY_INFORMATION 2147483648

#define LANG_ARMENIAN 43

#define RTL_VRF_FLG_APPCOMPAT_CHECKS 16

#define SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE 16

#define SUBLANG_ARABIC_JORDAN 11

#define VER_GREATER_EQUAL 3

#define TAPE_FIXED_PARTITIONS 0

#define IMAGE_REL_ARM_TOKEN 5

#define CONTEXT_INTEGER 65538

#define ES_DISPLAY_REQUIRED 2

#define IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12

#define ACCESS_DENIED_OBJECT_ACE_TYPE 6

#define STATUS_PENDING 259

#define TAPE_DRIVE_RELATIVE_BLKS 2147614720

#define STATUS_ACCESS_VIOLATION 3221225477

#define STATUS_FLOAT_UNDERFLOW 3221225619

#define LANG_MALAYALAM 76

#define SORT_GERMAN_PHONE_BOOK 1

#define ACCESS_MAX_MS_V2_ACE_TYPE 3

#define REG_OPTION_RESERVED 0

#define SERVICE_DISABLED 4

#define REG_STANDARD_FORMAT 1

#define IMAGE_REL_I386_TOKEN 12

#define MAX_ACL_REVISION 4

#define IMAGE_FILE_MACHINE_EBC 3772

#define TAPE_DRIVE_FILEMARKS 2147745792

#define UNPROTECTED_SACL_SECURITY_INFORMATION 268435456

#define JOB_OBJECT_ASSIGN_PROCESS 1

#define DOMAIN_ALIAS_RID_ACCOUNT_OPS 548

#define PF_FLOATING_POINT_PRECISION_ERRATA 0

#define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT 13

#define SEF_AVOID_OWNER_CHECK 16

#define IMAGE_FILE_MACHINE_IA64 512

#define LANG_INDONESIAN 33

#define POWER_USER_NOTIFY_SHUTDOWN 16

#define THREAD_TERMINATE 1

#define EMARCH_ENC_I17_IMM41b_INST_WORD_X 1

#define ACCESS_MAX_MS_V5_ACE_TYPE 17

#define IMAGE_SIZEOF_SYMBOL 18

#define ERROR_LIBRARY_FULL 4322

#define ERROR_PROFILE_NOT_FOUND 2016

#define CRYPT_E_ASN1_RULE 2148086029

#define ERROR_DEPENDENT_RESOURCE_EXISTS 5001

#define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391

#define ERROR_IPSEC_IKE_INVALID_GROUP 13865

#define DNS_ERROR_INVALID_ZONE_OPERATION 9603

#define ERROR_INVALID_DATA 13

#define CO_E_CLASS_CREATE_FAILED 2148007937

#define ERROR_SECRET_TOO_LONG 1382

#define ERROR_DS_SOURCE_DOMAIN_IN_FOREST 8534

#define STG_E_INVALIDHEADER 2147680507

#define COMADMIN_E_INVALID_PARTITION 2148599819

#define ERROR_DS_DRA_REF_ALREADY_EXISTS 8448

#define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302

#define ERROR_UNABLE_TO_INVENTORY_TRANSPORT 4327

#define RPC_X_NULL_REF_POINTER 1780

#define CO_E_SXS_CONFIG 2147500082

#define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE 8502

#define RPC_S_NO_ENDPOINT_FOUND 1708

#define CERTSRV_E_SIGNATURE_POLICY_REQUIRED 2148091913

#define ERROR_NOACCESS 998

#define ERROR_IPSEC_IKE_SECLOADFAIL 13852

#define ERROR_DS_ALIAS_DEREF_PROBLEM 8244

#define OSS_CONSTRAINT_VIOLATED 2148085777

#define ERROR_DS_CROSS_DOM_MOVE_ERROR 8216

#define WSASERVICE_NOT_FOUND 10108

#define ERROR_RESOURCE_LANG_NOT_FOUND 1815

#define CO_E_APPSINGLEUSE 2147746294

#define COMQC_E_UNTRUSTED_ENQUEUER 2148599302

#define COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER 2148598862

#define ERROR_PKINIT_FAILURE 1263

#define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227

#define RPC_E_NO_SYNC 2147549472

#define OSS_PER_DLL_NOT_LINKED 2148085803

#define SEC_E_BAD_BINDINGS 2148074310

#define CO_E_FAILEDTOOPENTHREADTOKEN 2147549477

#define DV_E_FORMATETC 2147745892

#define SEC_E_WRONG_PRINCIPAL 2148074274

#define EVENT_E_INVALID_EVENT_CLASS_PARTITION 2147746319

#define CRYPT_E_INVALID_PRINTABLE_STRING 2148081697

#define INPLACE_S_FIRST 262560

#define STG_E_INSUFFICIENTMEMORY 2147680264

#define XACT_E_UNABLE_TO_READ_DTC_CONFIG 2147799079

#define ERROR_DS_INCOMPATIBLE_CONTROLS_USED 8574

#define EVENT_E_USER_EXCEPTION 2147746312

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS 2148599835

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 1177

#define CACHE_E_NOCACHE_UPDATED 2147746160

#define WSAEREMOTE 10071

#define ERROR_INVALID_STATE 5023

#define ERROR_SIGNAL_REFUSED 156

#define ERROR_SXS_XML_E_INCOMPLETE_ENCODING 14043

#define ERROR_INTERNAL_ERROR 1359

#define ERROR_IS_SUBST_PATH 146

#define ERROR_DS_INTERNAL_FAILURE 8430

#define CO_E_LAST 2147746303

#define ERROR_INVALID_FORM_SIZE 1903

#define RPC_S_FP_DIV_ZERO 1769

#define ERROR_DS_NO_PARENT_OBJECT 8329

#define CLASSFACTORY_E_FIRST 2147746064

#define ERROR_DS_CANT_FIND_NC_IN_CACHE 8421

#define ERROR_SETCOUNT_ON_BAD_LB 1433

#define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY 7005

#define STG_S_BLOCK 197121

#define DNS_ERROR_DATABASE_BASE 9700

#define OLE_E_BLANK 2147745799

#define ERROR_RESOURCE_DATA_NOT_FOUND 1812

#define DNS_STATUS_DOTTED_NAME 9558

#define WSAEUSERS 10068

#define CO_E_FAILEDTOSETDACL 2147549481

#define RPC_S_SERVER_TOO_BUSY 1723

#define FACILITY_WIN32 7

#define ERROR_TOO_MANY_SEM_REQUESTS 103

#define RPC_S_PROFILE_NOT_ADDED 1925

#define SPAPI_E_DI_DONT_INSTALL 2148467243

#define ERROR_IPSEC_IKE_OUT_OF_MEMORY 13859

#define OR_INVALID_SET 1912

#define CRYPT_E_SECURITY_SETTINGS 2148081702

#define CRYPT_E_MISSING_PUBKEY_PARA 2148081708

#define RPC_X_BAD_STUB_DATA 1783

#define COMADMIN_E_DLLLOADFAILED 2148598813

#define VIEW_S_ALREADY_FROZEN 262464

#define OSS_LIMITED 2148085770

#define S_OK 0

#define SPAPI_E_INVALID_INF_LOGCONFIG 2148467242

#define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD 8376

#define ERROR_NOT_ENOUGH_MEMORY 8

#define REGDB_E_KEYMISSING 2147746130

#define OSS_PDU_RANGE 2148085763

#define ERROR_CLUSTER_JOIN_ABORTED 5074

#define RPC_S_INTERFACE_NOT_EXPORTED 1924

#define XACT_S_ALLNORETAIN 315399

#define ERROR_INVALID_MINALLOCSIZE 195

#define ERROR_INVALID_SERVER_STATE 1352

#define ERROR_BAD_USER_PROFILE 1253

#define NTE_BAD_LEN 2148073476

#define STG_E_INVALIDFUNCTION 2147680257

#define ERROR_CTX_SHADOW_INVALID 7050

#define ERROR_NOT_EXPORT_FORMAT 6008

#define CERT_E_PURPOSE 2148204806

#define WSAENOTSOCK 10038

#define ERROR_DS_INSTALL_SCHEMA_MISMATCH 8467

#define ERROR_DS_DRA_RPC_CANCELLED 8455

#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386

#define SCARD_W_EOF 2148532333

#define ERROR_DS_CANT_MOD_OBJ_CLASS 8215

#define SCHED_S_TASK_HAS_NOT_RUN 267011

#define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST 5082

#define OSS_MEM_MGR_DLL_NOT_LINKED 2148085798

#define ERROR_DUPLICATE_TAG 2014

#define ERROR_CANT_OPEN_ANONYMOUS 1347

#define ERROR_NO_INHERITANCE 1391

#define ERROR_NON_MDICHILD_WINDOW 1445

#define CERTSRV_E_ISSUANCE_POLICY_REQUIRED 2148091916

#define ERROR_WMI_READ_ONLY 4213

#define ERROR_RESOURCE_PROPERTIES_STORED 5024

#define ERROR_CLUSTER_NODE_PAUSED 5070

#define OSS_CANT_OPEN_TRACE_WINDOW 2148085784

#define ERROR_CONNECTION_UNAVAIL 1201

#define SEC_E_TOO_MANY_PRINCIPALS 2148074299

#define ERROR_UNRECOGNIZED_MEDIA 1785

#define RPC_E_SERVER_DIED_DNE 2147549202

#define ERROR_DS_INAPPROPRIATE_AUTH 8233

#define ERROR_DEVICE_NOT_AVAILABLE 4319

#define SPAPI_E_BAD_SECTION_NAME_LINE 2148466689

#define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD 8585

#define ERROR_CLUSTER_NODE_NOT_MEMBER 5052

#define ERROR_INC_BACKUP 4003

#define ERROR_COLORSPACE_MISMATCH 2021

#define ERROR_PROCESS_ABORTED 1067

#define XACT_E_NOTIMEOUT 2147799063

#define ERROR_IPSEC_IKE_INVALID_SITUATION 13863

#define ERROR_SPECIAL_USER 1373

#define ERROR_INVALID_BLOCK 9

#define ERROR_PRINTER_DRIVER_BLOCKED 3014

#define ERROR_POTENTIAL_FILE_FOUND 1180

#define COMADMIN_E_OBJECTERRORS 2148598785

#define ERROR_CTX_NO_OUTBUF 7008

#define ERROR_HOOK_NEEDS_HMOD 1428

#define ERROR_REQUEST_ABORTED 1235

#define SPAPI_E_DUPLICATE_FOUND 2148467202

#define STG_E_TERMINATED 2147680770

#define STG_E_WRITEFAULT 2147680285

#define SEC_E_NOT_OWNER 2148074246

#define DNS_ERROR_NON_RFC_NAME 9556

#define SEC_E_UNFINISHED_CONTEXT_DELETED 2148074291

#define NTE_BAD_KEY_STATE 2148073483

#define CRYPT_E_STREAM_MSG_NOT_READY 2148077584

#define ERROR_CHILD_NOT_COMPLETE 129

#define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS 8549

#define OSS_MORE_INPUT 2148085764

#define CRYPT_E_NO_SIGNER 2148081678

#define ERROR_SOURCE_ELEMENT_EMPTY 1160

#define ERROR_DS_INIT_FAILURE_CONSOLE 8561

#define STG_E_NOMOREFILES 2147680274

#define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES 8556

#define ERROR_DS_INVALID_SCRIPT 8600

#define CRYPT_E_ISSUER_SERIALNUMBER 2148077581

#define RPC_E_CALL_COMPLETE 2147549463

#define CRYPT_E_ASN1_BADREAL 2148086026

#define COMADMIN_E_PRIVATE_ACCESSDENIED 2148599841

#define ERROR_DS_CANT_FIND_EXPECTED_NC 8420

#define CO_E_SCM_RPC_FAILURE 2148007939

#define XACT_E_NOTRANSACTION 2147799054

#define COMADMIN_E_CAT_INVALID_PARTITION_SET_NAME 2148600065

#define INPLACE_E_LAST 2147746223

#define ERROR_HOTKEY_ALREADY_REGISTERED 1409

#define CO_E_RUNAS_LOGON_FAILURE 2147500058

#define TYPE_E_ELEMENTNOTFOUND 2147647531

#define CO_E_LAUNCH_PERMSSION_DENIED 2147500059

#define DNS_ERROR_SETUP_BASE 9850

#define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT 9710

#define CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE 2148089870

#define RPC_S_INVALID_RPC_PROTSEQ 1704

#define STG_E_FILENOTFOUND 2147680258

#define SEC_I_INCOMPLETE_CREDENTIALS 590624

#define ERROR_DS_DRA_ACCESS_DENIED 8453

#define ERROR_BAD_DEV_TYPE 66

#define SPAPI_E_NO_CATALOG_FOR_OEM_INF 2148467247

#define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER 8520

#define ERROR_MEMBER_NOT_IN_ALIAS 1377

#define SEC_E_LOGON_DENIED 2148074252

#define RPC_X_WRONG_ES_VERSION 1828

#define RPC_X_WRONG_PIPE_ORDER 1831

#define SEVERITY_SUCCESS 0

#define ERROR_PROMOTION_ACTIVE 8221

#define CO_E_NOTCONSTRUCTED 2147803181

#define ERROR_CTX_SHADOW_DISABLED 7051

#define ERROR_TOO_MANY_MUXWAITERS 152

#define XACT_E_LAST 2147799083

#define ERROR_NOT_AUTHENTICATED 1244

#define ERROR_DRIVER_BLOCKED 1275

#define EVENT_S_NOSUBSCRIBERS 262658

#define ERROR_INVALID_SUB_AUTHORITY 1335

#define CO_E_DLLNOTFOUND 2147746296

#define ERROR_DS_NO_MORE_RIDS 8209

#define ERROR_EAS_NOT_SUPPORTED 282

#define ERROR_UNABLE_TO_INVENTORY_DRIVE 4325

#define SPAPI_E_NO_ASSOCIATED_CLASS 2148467200

#define SPAPI_E_INVALID_COINSTALLER 2148467239

#define CO_E_SERVER_INIT_TIMEOUT 2147500074

#define COMADMIN_E_CAT_SERVERFAULT 2148598918

#define DISP_E_ARRAYISLOCKED 2147614733

#define ERROR_BAD_THREADID_ADDR 159

#define COMADMIN_E_REGDB_SYSTEMERR 2148598900

#define RPC_S_NO_MORE_MEMBERS 1757

#define ERROR_FLOPPY_BAD_REGISTERS 1125

#define ERROR_SXS_VERSION_CONFLICT 14008

#define DISP_E_BADPARAMCOUNT 2147614734

#define DNS_ERROR_RCODE_YXRRSET 9007

#define WSAETOOMANYREFS 10059

#define ERROR_SXS_XML_E_INVALID_VERSION 14072

#define ERROR_CONTINUE 1246

#define NTE_BAD_HASH 2148073474

#define DNS_ERROR_PACKET_FMT_BASE 9500

#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006

#define SPAPI_E_FILEQUEUE_LOCKED 2148467222

#define CO_E_RELOAD_DLL 2147500066

#define ERROR_INVALID_PRINTER_NAME 1801

#define INPLACE_S_LAST 262575

#define E_NOINTERFACE 2147500034

#define OSS_TABLE_MISMATCH 2148085789

#define CO_E_RELEASED 2147746303

#define CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL 2148089868

#define ERROR_CLUSTER_NODE_UNREACHABLE 5051

#define STG_E_CSS_SCRAMBLED_SECTOR 2147681033

#define EVENT_E_TOO_MANY_METHODS 2147746313

#define RPC_S_INVALID_ASYNC_CALL 1915

#define ERROR_STACK_OVERFLOW 1001

#define CONVERT10_E_STG_FMT 2147746244

#define COMADMIN_E_USER_IN_SET 2148599822

#define ERROR_INVALID_SERVICE_CONTROL 1052

#define SCHED_S_TASK_NO_VALID_TRIGGERS 267015

#define ERROR_CANNOT_FIND_WND_CLASS 1407

#define ERROR_NOT_JOINED 136

#define RPC_S_WAITONTIMER 2147549462

#define ERROR_MESSAGE_EXCEEDS_MAX_SIZE 4336

#define DNS_ERROR_NAME_DOES_NOT_EXIST 9714

#define ERROR_DS_DRA_OBJ_IS_REP_SOURCE 8450

#define OLE_E_FIRST 2147745792

#define COMADMIN_E_CANTRECYCLELIBRARYAPPS 2148599823

#define ERROR_INVALID_PASSWORDNAME 1216

#define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 8201

#define DISP_E_TYPEMISMATCH 2147614725

#define OLE_E_INVALIDRECT 2147745805

#define ERROR_NOT_SUPPORTED_ON_SBS 1254

#define ERROR_DS_GC_NOT_AVAILABLE 8217

#define SCHED_E_TASK_NOT_RUNNING 2147750667

#define ERROR_SET_POWER_STATE_VETOED 1140

#define TRUST_E_ACTION_UNKNOWN 2148204546

#define RPC_S_PROTSEQ_NOT_SUPPORTED 1703

#define ERROR_IPSEC_IKE_INVALID_KEY_USAGE 13818

#define ERROR_DS_CROSS_REF_EXISTS 8374

#define OR_INVALID_OXID 1910

#define SPAPI_E_LINE_NOT_FOUND 2148466946

#define CRYPT_E_OID_FORMAT 2148077571

#define ERROR_DS_ALIAS_POINTS_TO_ALIAS 8336

#define ERROR_IRQ_BUSY 1119

#define ERROR_REPARSE_TAG_MISMATCH 4394

#define FRS_ERR_INVALID_API_SEQUENCE 8001

#define ERROR_DS_BAD_NAME_SYNTAX 8335

#define RPC_S_ADDRESS_ERROR 1768

#define MSSIPOTF_E_NOT_OPENTYPE 2148102162

#define EVENT_S_SOME_SUBSCRIBERS_FAILED 262656

#define RPC_E_CALL_REJECTED 2147549185

#define RPC_S_INVALID_VERS_OPTION 1756

#define ERROR_EXE_MACHINE_TYPE_MISMATCH 216

#define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND 5078

#define ERROR_IPSEC_IKE_INVALID_SIG 13875

#define DNS_ERROR_RCODE_BADTIME 9018

#define ERROR_IPSEC_IKE_RPC_DELETE 13877

#define ERROR_KEY_HAS_CHILDREN 1020

#define ERROR_PASSWORD_EXPIRED 1330

#define SEC_E_SMARTCARD_CERT_EXPIRED 2148074325

#define CONTEXT_E_ROLENOTFOUND 2147803148

#define ERROR_INVALID_PASSWORD 86

#define ERROR_INVALID_REPARSE_DATA 4392

#define SCARD_E_INVALID_HANDLE 2148532227

#define RPC_E_INVALID_OBJREF 2147549469

#define DNS_ERROR_ZONE_ALREADY_EXISTS 9609

#define ERROR_INVALID_OPLOCK_PROTOCOL 301

#define ERROR_DS_CANT_REMOVE_ATT_CACHE 8403

#define FRS_ERR_PARENT_AUTHENTICATION 8010

#define ERROR_EOM_OVERFLOW 1129

#define ERROR_SEM_IS_SET 102

#define ERROR_DS_DRA_MAIL_PROBLEM 8447

#define ERROR_INVALID_STARTING_CODESEG 188

#define DNS_ERROR_NAME_NOT_IN_ZONE 9706

#define CO_S_MACHINENAMENOTFOUND 524307

#define ERROR_ACCESS_DENIED 5

#define NTE_BAD_UID 2148073473

#define ERROR_FILE_READ_ONLY 6009

#define ERROR_SXS_XML_E_UNCLOSEDCOMMENT 14063

#define NTE_EXISTS 2148073487

#define MEM_E_INVALID_SIZE 2148007953

#define STG_E_ACCESSDENIED 2147680261

#define WSAECONNREFUSED 10061

#define XACT_E_HEURISTICDAMAGE 2147799046

#define RPC_S_INVALID_STRING_UUID 1705

#define SCARD_E_NO_SERVICE 2148532253

#define RPC_E_INVALID_DATA 2147549199

#define RPC_E_CANTCALLOUT_INASYNCCALL 2147549188

#define ERROR_IPSEC_IKE_ENCRYPT 13866

#define STG_E_DOCFILETOOLARGE 2147680529

#define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779

#define ERROR_IPSEC_IKE_MM_DELAY_DROP 13814

#define ERROR_VOLUME_NOT_SUPPORT_EFS 6014

#define ERROR_CONTROL_ID_NOT_FOUND 1421

#define SCARD_E_UNSUPPORTED_FEATURE 2148532258

#define CRYPT_E_FILERESIZED 2148081701

#define ERROR_DS_CANT_ON_NON_LEAF 8213

#define ERROR_LABEL_TOO_LONG 154

#define XACT_E_TIP_PROTOCOL_ERROR 2147799072

#define ERROR_NESTING_NOT_ALLOWED 215

#define ERROR_CLUSTER_WRONG_OS_VERSION 5899

#define ERROR_SERVER_NOT_DISABLED 1342

#define OLE_E_ADVISENOTSUPPORTED 2147745795

#define ERROR_IPSEC_IKE_AUTH_FAIL 13801

#define RPC_X_PIPE_DISCIPLINE_ERROR 1917

#define RPC_S_CALL_FAILED 1726

#define ERROR_DS_COULDNT_UPDATE_SPNS 8525

#define ERROR_INVALID_USER_BUFFER 1784

#define CO_E_ASYNC_WORK_REJECTED 2147500073

#define ERROR_DDE_FAIL 1156

#define ERROR_DS_REMOTE_CROSSREF_OP_FAILED 8601

#define DNS_WARNING_PTR_CREATE_FAILED 9715

#define SCHED_E_INVALID_TASK 2147750670

#define FACILITY_INTERNET 12

#define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT 8544

#define ERROR_DS_NCNAME_MUST_BE_NC 8357

#define ERROR_SUCCESS_REBOOT_INITIATED 1641

#define ERROR_DS_NO_CHAINING 8327

#define COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED 2148599827

#define RPC_E_NO_GOOD_SECURITY_PACKAGES 2147549466

#define MK_E_NOINVERSE 2147746284

#define XACT_S_LAST 315408

#define DATA_S_SAMEFORMATETC 262448

#define ERROR_SHUTDOWN_CLUSTER 5008

#define TRUST_E_BASIC_CONSTRAINTS 2148098073

#define ERROR_INVALID_DLL 1154

#define ERROR_DS_SINGLE_USER_MODE_FAILED 8590

#define CO_E_OBJNOTCONNECTED 2147746301

#define ERROR_DS_NAME_UNPARSEABLE 8350

#define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352

#define ERROR_DS_ATT_SCHEMA_REQ_ID 8399

#define ERROR_IPSEC_IKE_POLICY_CHANGE 13849

#define ERROR_DEVICE_NOT_CONNECTED 1167

#define ERROR_SXS_UNKNOWN_ENCODING 14013

#define ERROR_INDEX_ABSENT 1611

#define CO_E_CLASS_DISABLED 2147500071

#define ERROR_DS_SHUTTING_DOWN 8364

#define OLE_E_NOT_INPLACEACTIVE 2147745808

#define WSA_QOS_NO_RECEIVERS 11008

#define ERROR_RESOURCE_ONLINE 5019

#define ERROR_DS_DRA_ABANDON_SYNC 8462

#define CO_E_CLSREG_INCONSISTENT 2147500063

#define RPC_X_SS_CONTEXT_DAMAGED 1777

#define ERROR_SXS_DUPLICATE_CLSID 14023

#define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN 13800

#define TYPE_E_LIBNOTREGISTERED 2147647517

#define ERROR_EFS_ALG_BLOB_TOO_BIG 6013

#define TYPE_E_QUALIFIEDNAMEDISALLOWED 2147647528

#define ERROR_SHARING_VIOLATION 32

#define ERROR_NOT_QUORUM_CLASS 5025

#define CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED 2148089866

#define RPC_E_SYS_CALL_FAILED 2147549440

#define ERROR_CTX_SHADOW_DENIED 7044

#define SEC_E_MESSAGE_ALTERED 2148074255

#define XACT_E_UNABLE_TO_LOAD_DTC_PROXY 2147799080

#define ERROR_NOT_SAFEBOOT_SERVICE 1084

#define TRUST_E_NO_SIGNER_CERT 2148098050

#define DISP_E_BADCALLEE 2147614736

#define ERROR_IPSEC_IKE_MM_LIMIT 13882

#define MEM_E_INVALID_ROOT 2148007945

#define MK_E_EXCEEDEDDEADLINE 2147746273

#define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE 9651

#define ERROR_SXS_SECTION_NOT_FOUND 14000

#define CS_E_NO_CLASSSTORE 2147746152

#define ERROR_POLICY_OBJECT_NOT_FOUND 8219

#define ERROR_DS_NO_REF_DOMAIN 8575

#define ERROR_ITERATED_DATA_EXCEEDS_64k 194

#define SCARD_E_NO_DIR 2148532261

#define OSS_PDV_DLL_NOT_LINKED 2148085799

#define CO_E_CANT_REMOTE 2147500051

#define CO_E_FAILEDTOGETTOKENINFO 2147549478

#define TRUST_E_TIME_STAMP 2148098053

#define CRYPT_E_FILE_ERROR 2148081667

#define CLIENTSITE_E_FIRST 2147746192

#define ERROR_IPSEC_IKE_INVALID_HASH 13870

#define COMADMIN_E_OBJECT_DOES_NOT_EXIST 2148599817

#define CACHE_S_SOMECACHES_NOTUPDATED 262514

#define ERROR_MEDIA_NOT_AVAILABLE 4318

#define RPC_E_INVALID_IPID 2147549459

#define WSAENETRESET 10052

#define SPAPI_E_INVALID_PROPPAGE_PROVIDER 2148467236

#define TRUST_E_CERT_SIGNATURE 2148098052

#define ERROR_SERVICE_DOES_NOT_EXIST 1060

#define COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY 2148598858

#define SEC_E_NO_AUTHENTICATING_AUTHORITY 2148074257

#define PERSIST_E_SIZEINDEFINITE 2148204554

#define ERROR_CLEANER_SLOT_NOT_SET 4332

#define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND 13017

#define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE 7058

#define ERROR_SERVICE_REQUEST_TIMEOUT 1053

#define OSS_MEM_ERROR 2148085774

#define OSS_REAL_DLL_NOT_LINKED 2148085791

#define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED 8536

#define ERROR_TOO_MANY_TCBS 155

#define ERROR_GLOBAL_ONLY_HOOK 1429

#define CRYPT_E_NO_MATCH 2148081673

#define ERROR_SUBST_TO_SUBST 139

#define SCARD_E_NO_KEY_CONTAINER 2148532272

#define SPAPI_E_NO_INF 2148467210

#define MK_S_MONIKERALREADYREGISTERED 262631

#define RPC_S_DUPLICATE_ENDPOINT 1740

#define EVENT_S_FIRST 262656

#define SCHED_S_EVENT_TRIGGER 267016

#define COMADMIN_E_COREQCOMPINSTALLED 2148598837

#define RPC_S_INVALID_TIMEOUT 1709

#define XENROLL_E_KEYSPEC_SMIME_MISMATCH 2148093957

#define ERROR_NO_IMPERSONATION_TOKEN 1309

#define COMADMIN_E_OBJECTEXISTS 2148598840

#define ERROR_DS_DRA_SCHEMA_INFO_SHIP 8542

#define DNS_ERROR_RCODE_NXRRSET 9008

#define OLE_E_ENUM_NOMORE 2147745794

#define CERTSRV_E_SIGNATURE_COUNT 2148091914

#define SCHED_E_SERVICE_NOT_INSTALLED 2147750668

#define WSAEACCES 10013

#define WSA_QOS_EFLOWSPEC 11017

#define ERROR_DS_NAME_TYPE_UNKNOWN 8351

#define COMADMIN_E_APPDIRNOTFOUND 2148598815

#define ERROR_STATIC_INIT 4002

#define ERROR_INVALID_INDEX 1413

#define CONTEXT_E_ABORTED 2147803138

#define ERROR_NO_SYSTEM_RESOURCES 1450

#define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF 8589

#define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT 14075

#define STG_E_UNIMPLEMENTEDFUNCTION 2147680510

#define ERROR_BAD_DEVICE 1200

#define ERROR_INDIGENOUS_TYPE 4338

#define ERROR_DS_NO_CHECKPOINT_WITH_PDC 8551

#define ERROR_DS_EXISTS_IN_SUB_CLS 8394

#define EVENT_E_INVALID_PER_USER_SID 2147746311

#define TYPE_E_DUPLICATEID 2147649734

#define FACILITY_SECURITY 9

#define ERROR_NOT_SAME_DEVICE 17

#define XACT_E_TRANSACTIONCLOSED 2147799171

#define ERROR_FILE_OFFLINE 4350

#define ERROR_DS_INIT_FAILURE 8532

#define ERROR_TRANSFORM_NOT_SUPPORTED 2004

#define ERROR_BEGINNING_OF_MEDIA 1102

#define ERROR_SXS_XML_E_INVALID_STANDALONE 14070

#define ERROR_DS_RANGE_CONSTRAINT 8322

#define WSAEWOULDBLOCK 10035

#define ERROR_PRIVILEGE_NOT_HELD 1314

#define ERROR_NO_SCROLLBARS 1447

#define ERROR_END_OF_MEDIA 1100

#define ERROR_NETLOGON_NOT_STARTED 1792

#define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR 8591

#define ERROR_MAGAZINE_NOT_PRESENT 1163

#define FRS_ERR_SYSVOL_POPULATE_TIMEOUT 8014

#define ERROR_INVALID_EDIT_HEIGHT 1424

#define NTE_BAD_KEYSET 2148073494

#define ERROR_QUORUM_OWNER_ALIVE 5034

#define COMADMIN_E_COMPFILE_NOTINSTALLABLE 2148598825

#define ERROR_NO_MORE_ITEMS 259

#define XACT_S_OKINFORM 315396

#define DNS_ERROR_ZONE_CONFIGURATION_ERROR 9604

#define DNS_ERROR_AUTOZONE_ALREADY_EXISTS 9610

#define ERROR_SEM_USER_LIMIT 106

#define FRS_ERR_INVALID_SERVICE_PARAMETER 8017

#define STG_E_CANTSAVE 2147680515

#define RPC_X_BYTE_COUNT_TOO_SMALL 1782

#define CO_E_ERRORINAPP 2147746295

#define ENUM_S_LAST 262591

#define ERROR_SXS_XML_E_UNCLOSEDDECL 14064

#define ERROR_REGISTRY_IO_FAILED 1016

#define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164

#define ERROR_SXS_DUPLICATE_DLL_NAME 14021

#define SEC_E_DELEGATION_REQUIRED 2148074309

#define ERROR_INVALID_EVENT_COUNT 151

#define RPC_E_CLIENT_DIED 2147549192

#define REGDB_E_FIRST 2147746128

#define ERROR_ICM_NOT_ENABLED 2018

#define STG_E_PROPSETMISMATCHED 2147680496

#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION 2147750676

#define ERROR_DS_MISSING_EXPECTED_ATT 8411

#define DNS_ERROR_RCODE_BADKEY 9017

#define SCARD_E_DUPLICATE_READER 2148532251

#define CO_E_ACNOTINITIALIZED 2147549503

#define ERROR_DS_RECALCSCHEMA_FAILED 8396

#define ERROR_SXS_XML_E_MISSING_PAREN 14044

#define MSSIPOTF_E_DSIG_STRUCTURE 2148102166

#define CRYPT_E_HASH_VALUE 2148077575

#define ERROR_RESOURCE_TYPE_NOT_FOUND 1813

#define ENUM_E_LAST 2147746239

#define ERROR_INVALID_SERVICENAME 1213

#define COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM 2148598857

#define ERROR_INVALID_EA_HANDLE 278

#define ERROR_POLICY_ONLY_IN_DS 8220

#define WSAENOBUFS 10055

#define MK_E_CANTOPENFILE 2147746282

#define ERROR_MEMBERS_PRIMARY_GROUP 1374

#define ERROR_LISTBOX_ID_NOT_FOUND 1416

#define CLIPBRD_E_CANT_CLOSE 2147746260

#define ERROR_DS_FILTER_UNKNOWN 8254

#define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE 14053

#define CRYPT_E_ASN1_EXTENDED 2148086273

#define WSAECONNRESET 10054

#define ERROR_CLASS_ALREADY_EXISTS 1410

#define ERROR_CTX_WINSTATION_BUSY 7024

#define ERROR_DS_OBJ_TOO_LARGE 8312

#define XACT_E_ABORTING 2147799081

#define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD 8491

#define NTE_FAIL 2148073504

#define ERROR_DS_CANT_REM_MISSING_ATT 8324

#define ERROR_DC_NOT_FOUND 1425

#define DNS_ERROR_RCODE_REFUSED 9005

#define RPC_S_UNKNOWN_MGR_TYPE 1716

#define ERROR_IS_JOINED 134

#define NTE_FIXEDPARAMETER 2148073509

#define ERROR_DS_COMPARE_FALSE 8229

#define MK_E_FIRST 2147746272

#define ERROR_NO_LOG_SPACE 1019

#define FACILITY_WINDOWS_CE 24

#define COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET 2148599839

#define STG_E_EXTANTMARSHALLINGS 2147680520

#define OSS_REAL_CODE_NOT_LINKED 2148085792

#define ERROR_DS_NO_CHAINED_EVAL 8328

#define CO_E_BAD_SERVER_NAME 2147500052

#define CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED 2148091918

#define WSA_QOS_BAD_OBJECT 11013

#define ERROR_DS_DRA_INTERNAL_ERROR 8442

#define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER 8578

#define DRAGDROP_S_USEDEFAULTCURSORS 262402

#define CO_E_OBJISREG 2147746300

#define ERROR_DS_CANT_RETRIEVE_INSTANCE 8407

#define ERROR_CLASS_DOES_NOT_EXIST 1411

#define CERTSRV_E_BAD_REQUESTSUBJECT 2148089857

#define ERROR_DS_ADD_REPLICA_INHIBITED 8302

#define CO_E_OBJSRV_RPC_FAILURE 2148007942

#define ERROR_CTX_WINSTATION_ALREADY_EXISTS 7023

#define ERROR_PORT_UNREACHABLE 1234

#define ERROR_DS_ROOT_REQUIRES_CLASS_TOP 8432

#define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN 8515

#define FACILITY_BACKGROUNDCOPY 32

#define ERROR_INVALID_ACCOUNT_NAME 1315

#define ERROR_SERVICE_NOT_ACTIVE 1062

#define RPC_X_PIPE_CLOSED 1916

#define WSAEADDRNOTAVAIL 10049

#define XACT_E_HEURISTICCOMMIT 2147799045

#define ERROR_DS_EXISTS_IN_RDNATTID 8598

#define CERTSRV_E_UNSUPPORTED_CERT_TYPE 2148091904

#define SPAPI_E_DI_NOFILECOPY 2148467215

#define COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED 2148598917

#define ERROR_DS_CANT_ADD_SYSTEM_ONLY 8358

#define ERROR_CONNECTION_ACTIVE 1230

#define OSS_COMPARATOR_DLL_NOT_LINKED 2148085796

#define COMADMIN_E_ALREADYINSTALLED 2148598788

#define ERROR_NOT_A_REPARSE_POINT 4390

#define ERROR_REMOTE_STORAGE_NOT_ACTIVE 4351

#define SPAPI_E_DEVINST_ALREADY_EXISTS 2148467207

#define RPC_S_NO_INTERFACES 1817

#define COMADMIN_E_AUTHENTICATIONLEVEL 2148598803

#define ERROR_DS_OBJECT_BEING_REMOVED 8339

#define ERROR_NO_SUCH_PRIVILEGE 1313

#define DNS_ERROR_RCODE_LAST 9018

#define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER 8559

#define NTE_BAD_VER 2148073479

#define NTE_PROV_DLL_NOT_FOUND 2148073502

#define CERTSRV_E_NO_CERT_TYPE 2148091905

#define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP 8498

#define ERROR_CTX_MODEM_RESPONSE_TIMEOUT 7012

#define ERROR_DS_BACKLINK_WITHOUT_LINK 8482

#define CONTEXT_E_NOJIT 2147803174

#define ERROR_IPSEC_IKE_FAILQUERYSSP 13854

#define ERROR_IPSEC_IKE_POLICY_MATCH 13868

#define COMADMIN_E_NOTDELETEABLE 2148598827

#define TYPE_E_WRONGTYPEKIND 2147647530

#define ERROR_CTX_MODEM_RESPONSE_ERROR 7011

#define ERROR_DS_DST_NC_MISMATCH 8486

#define ERROR_DS_INVALID_LDAP_DISPLAY_NAME 8479

#define STG_S_RETRYNOW 197122

#define ERROR_CANT_ACCESS_FILE 1920

#define XACT_S_SINGLEPHASE 315401

#define ERROR_NOT_QUORUM_CAPABLE 5021

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT 2148599834

#define ERROR_INVALID_SERVICE_ACCOUNT 1057

#define ERROR_CLUSTER_NETWORK_NOT_FOUND 5045

#define ERROR_IPSEC_MM_FILTER_PENDING_DELETION 13018

#define ERROR_DS_DRA_NOT_SUPPORTED 8454

#define ERROR_REC_NON_EXISTENT 4005

#define ERROR_DS_OPERATIONS_ERROR 8224

#define ERROR_CLUSTERLOG_CORRUPT 5029

#define RPC_S_ZERO_DIVIDE 1767

#define DNS_ERROR_RCODE_BADSIG 9016

#define XACT_E_NOTSUPPORTED 2147799055

#define CONTEXT_E_OLDREF 2147803143

#define SEC_E_CANNOT_INSTALL 2148074247

#define ERROR_DS_DUP_MSDS_INTID 8597

#define CRYPT_E_NO_REVOCATION_DLL 2148081681

#define DISP_E_BUFFERTOOSMALL 2147614739

#define ERROR_SXS_DUPLICATE_PROGID 14026

#define ERROR_DS_MISSING_SUPREF 8406

#define CRYPT_E_INVALID_X500_STRING 2148081699

#define DNS_ERROR_INVALID_DATAFILE_NAME 9652

#define COMADMIN_E_NOTINREGISTRY 2148598846

#define ERROR_INVALID_PIXEL_FORMAT 2000

#define DNS_ERROR_NO_CREATE_CACHE_DATA 9713

#define STG_E_INVALIDFLAG 2147680511

#define ERROR_INFLOOP_IN_RELOC_CHAIN 202

#define ERROR_CTX_WINSTATION_ACCESS_DENIED 7045

#define EVENT_E_FIRST 2147746304

#define ERROR_WMI_ALREADY_ENABLED 4206

#define SCARD_E_NO_SUCH_CERTIFICATE 2148532268

#define ERROR_CANTWRITE 1013

#define OSS_BAD_ENCRULES 2148085782

#define ERROR_PRINTER_DRIVER_IN_USE 3001

#define XACT_S_READONLY 315394

#define RPC_S_NO_BINDINGS 1718

#define CONVERT10_S_LAST 262607

#define STG_E_CSS_AUTHENTICATION_FAILURE 2147681030

#define CO_E_INIT_SCM_MUTEX_EXISTS 2147500046

#define E_ACCESSDENIED 2147942405

#define COMADMIN_E_CAT_DUPLICATE_PARTITION_SET_NAME 2148600064

#define RPC_E_FAULT 2147549444

#define RPC_E_ATTEMPTED_MULTITHREAD 2147549442

#define ERROR_CANT_ACCESS_DOMAIN_INFO 1351

#define ERROR_INVALID_EVENTNAME 1211

#define ERROR_SERVICE_ALREADY_RUNNING 1056

#define ERROR_IPSEC_IKE_TIMED_OUT 13805

#define ERROR_WINDOW_OF_OTHER_THREAD 1408

#define ERROR_TOO_MANY_SIDS 1389

#define ERROR_DS_DRA_SCHEMA_MISMATCH 8418

#define TYPE_E_AMBIGUOUSNAME 2147647532

#define MSSIPOTF_E_BAD_OFFSET_TABLE 2148102149

#define DIGSIG_E_ENCODE 2148204549

#define WSAENOPROTOOPT 10042

#define RPC_S_ENTRY_TYPE_MISMATCH 1922

#define ERROR_CTX_CONSOLE_CONNECT 7042

#define ERROR_INVALID_GW_COMMAND 1443

#define STG_E_MEDIUMFULL 2147680368

#define ERROR_REPARSE_TAG_INVALID 4393

#define ERROR_KM_DRIVER_BLOCKED 1930

#define ERROR_FILENAME_EXCED_RANGE 206

#define ERROR_DS_ILLEGAL_SUPERIOR 8345

#define CONVERT10_E_LAST 2147746255

#define ERROR_PIPE_CONNECTED 535

#define ERROR_INVALID_HOOK_FILTER 1426

#define ERROR_IPSEC_IKE_PROCESS_ERR_SIG 13838

#define SEC_E_NOT_SUPPORTED 2148074242

#define ERROR_READ_FAULT 30

#define ERROR_DS_NO_TREE_DELETE_ABOVE_NC 8501

#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808

#define ERROR_INVALID_PRINT_MONITOR 3007

#define ERROR_WAIT_NO_CHILDREN 128

#define CO_E_NOSYNCHRONIZATION 2147803182

#define SEC_E_UNSUPPORTED_FUNCTION 2148074242

#define WSAETIMEDOUT 10060

#define CERT_E_PATHLENCONST 2148204804

#define SEC_E_STRONG_CRYPTO_NOT_SUPPORTED 2148074298

#define ERROR_IPSEC_MM_AUTH_NOT_FOUND 13011

#define ERROR_SEEK 25

#define TYPE_E_UNSUPFORMAT 2147647513

#define ERROR_SXS_UNKNOWN_ENCODING_GROUP 14012

#define STG_E_NOTCURRENT 2147680513

#define CO_E_WRONG_SERVER_IDENTITY 2147500053

#define WSAEALREADY 10037

#define RPC_S_NOT_RPC_ERROR 1823

#define CRYPT_E_ASN1_CHOICE 2148086028

#define SEC_E_TIME_SKEW 2148074276

#define ERROR_USER_MAPPED_FILE 1224

#define ERROR_INVALID_SEPARATOR_FILE 1799

#define CS_E_INTERNAL_ERROR 2147746159

#define ERROR_DS_SEMANTIC_ATT_TEST 8383

#define CO_E_RUNAS_SYNTAX 2147500055

#define DIGSIG_E_CRYPTO 2148204552

#define ERROR_INVALID_MEDIA_POOL 4302

#define ERROR_IPSEC_IKE_FAILSSPINIT 13853

#define XACT_E_ABORTED 2147799065

#define ERROR_IPSEC_MM_POLICY_EXISTS 13003

#define ERROR_IPSEC_IKE_INVALID_AUTH_ALG 13874

#define ERROR_INVALID_MESSAGE 1002

#define ERROR_DS_USER_BUFFER_TO_SMALL 8309

#define ERROR_PRINTER_NOT_FOUND 3012

#define ERROR_CANTREAD 1012

#define FRS_ERR_CHILD_TO_PARENT_COMM 8011

#define ERROR_DS_ROOT_MUST_BE_NC 8301

#define FACILITY_MEDIASERVER 13

#define ERROR_DS_CANT_DELETE_DSA_OBJ 8340

#define CRYPT_E_UNEXPECTED_ENCODING 2148077573

#define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE 5890

#define ERROR_SERVICE_DEPENDENCY_DELETED 1075

#define ERROR_DS_CONFIG_PARAM_MISSING 8427

#define CERT_E_REVOKED 2148204812

#define VIEW_E_DRAW 2147746112

#define STG_E_FILEALREADYEXISTS 2147680336

#define MK_E_LAST 2147746287

#define CERTSRV_E_ALIGNMENT_FAULT 2148089872

#define WSA_QOS_GENERIC_ERROR 11015

#define RPC_S_INVALID_AUTH_IDENTITY 1749

#define WSAHOST_NOT_FOUND 11001

#define MK_S_ME 262628

#define ERROR_FILE_CORRUPT 1392

#define ERROR_DS_DSA_MUST_BE_INT_MASTER 8342

#define ERROR_PATH_BUSY 148

#define ERROR_UNKNOWN_PRINTER_DRIVER 1797

#define ERROR_METAFILE_NOT_SUPPORTED 2003

#define NTE_PROV_TYPE_ENTRY_BAD 2148073496

#define ERROR_FLOPPY_WRONG_CYLINDER 1123

#define ERROR_TOO_MANY_CMDS 56

#define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID 14076

#define ERROR_SOME_NOT_MAPPED 1301

#define EPT_S_NOT_REGISTERED 1753

#define ERROR_DEVICE_DOOR_OPEN 1166

#define DNS_ERROR_RCODE_SERVER_FAILURE 9002

#define ERROR_MEDIA_CHANGED 1110

#define ERROR_SXS_XML_E_BADXMLDECL 14056

#define ERROR_FILE_NOT_FOUND 2

#define ERROR_DS_ATT_VAL_ALREADY_EXISTS 8323

#define NTE_TOKEN_KEYSET_STORAGE_FULL 2148073507

#define ERROR_NO_RECOVERY_PROGRAM 1082

#define SEC_E_MULTIPLE_ACCOUNTS 2148074311

#define ERROR_IPSEC_MM_AUTH_EXISTS 13010

#define ERROR_SXS_UNTRANSLATABLE_HRESULT 14077

#define CO_E_FAILEDTOIMPERSONATE 2147549475

#define XACT_E_TIP_PULL_FAILED 2147799073

#define ERROR_GROUP_NOT_AVAILABLE 5012

#define ERROR_INVALID_OPERATION_ON_QUORUM 5068

#define ERROR_NO_LOGON_SERVERS 1311

#define ERROR_DS_CANT_DEREF_ALIAS 8337

#define WSAEOPNOTSUPP 10045

#define DV_E_DVASPECT 2147745899

#define ERROR_PATCH_PACKAGE_OPEN_FAILED 1635

#define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079

#define CLASSFACTORY_S_FIRST 262416

#define ERROR_NO_SUCH_GROUP 1319

#define XACT_E_CONNECTION_DOWN 2147799068

#define WSAVERNOTSUPPORTED 10092

#define ERROR_INVALID_SHOWWIN_COMMAND 1449

#define SCARD_E_NOT_TRANSACTED 2148532246

#define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC 8487

#define ERROR_OBJECT_IN_LIST 5011

#define ERROR_DS_NO_ATTRIBUTE_OR_VALUE 8202

#define FACILITY_CONTROL 10

#define CONVERT10_E_STG_DIB_TO_BITMAP 2147746246

#define ERROR_INVALID_GROUP_ATTRIBUTES 1345

#define ERROR_DS_DATABASE_ERROR 8409

#define XACT_E_TIP_DISABLED 2147799075

#define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ 8560

#define ERROR_CTX_LOGON_DISABLED 7037

#define ERROR_NO_TOKEN 1008

#define CRYPT_E_BAD_LEN 2148081665

#define ERROR_CALL_NOT_IMPLEMENTED 120

#define XACT_E_TIP_CONNECT_FAILED 2147799071

#define OLEOBJ_S_INVALIDHWND 262530

#define SPAPI_E_INVALID_FILTER_DRIVER 2148467244

#define OLE_S_MAC_CLIPFORMAT 262146

#define ERROR_NO_MATCH 1169

#define RPC_E_REMOTE_DISABLED 2147549468

#define SCARD_E_READER_UNSUPPORTED 2148532250

#define CRYPT_E_EXISTS 2148081669

#define DISP_E_MEMBERNOTFOUND 2147614723

#define ENUM_S_FIRST 262576

#define NTE_PROVIDER_DLL_FAIL 2148073501

#define DNS_ERROR_ZONE_BASE 9600

#define ERROR_IPSEC_IKE_NO_PEER_CERT 13847

#define TYPE_E_TYPEMISMATCH 2147650720

#define CONTEXT_E_TMNOTAVAILABLE 2147803151

#define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774

#define ERROR_INVALID_SERVICE_LOCK 1071

#define CRYPT_E_ASN1_BADARGS 2148086025

#define ERROR_PATCH_TARGET_NOT_FOUND 1642

#define SPAPI_E_INCORRECTLY_COPIED_INF 2148467255

#define ERROR_ACCOUNT_DISABLED 1331

#define SPAPI_E_CANT_LOAD_CLASS_ICON 2148467212

#define ERROR_INVALID_SHARENAME 1215

#define SEC_E_CRYPTO_SYSTEM_INVALID 2148074295

#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201

#define ERROR_DS_DRA_BAD_INSTANCE_TYPE 8445

#define ERROR_SXS_XML_E_COMMENTSYNTAX 14031

#define REGDB_E_LAST 2147746143

#define EVENT_E_MISSING_EVENTCLASS 2147746314

#define ERROR_DEPENDENCY_NOT_FOUND 5002

#define CRYPT_E_ASN1_UTF8 2148086030

#define ERROR_DS_STRING_SD_CONVERSION_FAILED 8522

#define EPT_S_INVALID_ENTRY 1751

#define RPC_S_PROTSEQ_NOT_FOUND 1744

#define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN 13881

#define CO_E_APPNOTFOUND 2147746293

#define ERROR_DS_DRS_EXTENSIONS_CHANGED 8594

#define RPC_S_UUID_LOCAL_ONLY 1824

#define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE 5063

#define OSS_BAD_TIME 2148085772

#define ERROR_DS_COMPARE_TRUE 8230

#define MK_S_US 262630

#define ERROR_SEM_TIMEOUT 121

#define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR 13804

#define ERROR_DS_TREE_DELETE_NOT_FINISHED 8397

#define NTE_SIGNATURE_FILE_BAD 2148073500

#define ERROR_NO_DATA 232

#define CS_E_OBJECT_NOTFOUND 2147746153

#define ERROR_NO_BROWSER_SERVERS_FOUND 6118

#define ERROR_SERVICE_DATABASE_LOCKED 1055

#define S_FALSE 1

#define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION 8236

#define EVENT_E_PER_USER_SID_NOT_LOGGED_ON 2147746320

#define ERROR_FILE_ENCRYPTED 6002

#define WSAELOOP 10062

#define DNS_ERROR_SECONDARY_DATA 9712

#define SPAPI_E_DEVINFO_DATA_LOCKED 2148467219

#define ERROR_DS_IS_LEAF 8243

#define ERROR_SXS_FILE_HASH_MISMATCH 14028

#define STG_S_CANNOTCONSOLIDATE 197126

#define ERROR_LOCK_VIOLATION 33

#define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030

#define ERROR_CLUSTER_NODE_NOT_PAUSED 5058

#define ERROR_DS_DRA_SOURCE_DISABLED 8456

#define ERROR_SXS_XML_E_UNCLOSEDENDTAG 14061

#define ERROR_IPSEC_IKE_SA_REAPED 13808

#define ERROR_DS_DRA_SOURCE_REINSTALLED 8459

#define COMADMIN_E_COMP_MOVE_DEST 2148599837

#define ERROR_DS_INCOMPATIBLE_VERSION 8567

#define ERROR_UNRECOGNIZED_VOLUME 1005

#define DNS_ERROR_TRY_AGAIN_LATER 9554

#define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP 13810

#define EVENT_E_COMPLUS_NOT_INSTALLED 2147746316

#define ERROR_CANT_EVICT_ACTIVE_NODE 5009

#define ERROR_TIMEOUT 1460

#define ERROR_DS_NAMING_MASTER_GC 8523

#define ERROR_SXS_DUPLICATE_IID 14024

#define ERROR_INVALID_WORKSTATION 1329

#define WSAEMFILE 10024

#define ERROR_SXS_XML_E_XMLDECLSYNTAX 14035

#define CRYPT_E_INVALID_INDEX 2148077576

#define FRS_ERR_PARENT_TO_CHILD_COMM 8012

#define RPC_S_ALREADY_REGISTERED 1711

#define TYPE_E_INVALIDSTATE 2147647529

#define DNS_ERROR_UNKNOWN_RECORD_TYPE 9704

#define RPC_E_RETRY 2147549449

#define WSAEINTR 10004

#define ERROR_UNKNOWN_COMPONENT 1607

#define CACHE_E_LAST 2147746175

#define DNS_ERROR_RECORD_DOES_NOT_EXIST 9701

#define ERROR_INVALID_PRINTER_COMMAND 1803

#define DIGSIG_E_DECODE 2148204550

#define ERROR_DS_DRA_EXTN_CONNECTION_FAILED 8466

#define CERT_E_WRONG_USAGE 2148204816

#define CERTSRV_E_ROLECONFLICT 2148089864

#define ERROR_CLUSTER_NETWORK_EXISTS 5044

#define OLE_S_LAST 262399

#define CLIPBRD_E_FIRST 2147746256

#define CO_E_FAILEDTOCREATEFILE 2147549495

#define REGDB_E_READREGDB 2147746128

#define REGDB_E_CLASSNOTREG 2147746132

#define ERROR_NO_SUCH_ALIAS 1376

#define ERROR_DS_AFFECTS_MULTIPLE_DSAS 8249

#define DNS_ERROR_RESPONSE_CODES_BASE 9000

#define WSA_QOS_EFILTERSTYLE 11019

#define SCARD_E_NOT_READY 2148532240

#define SCARD_F_INTERNAL_ERROR 2148532225

#define ERROR_CTX_SERVICE_NAME_COLLISION 7006

#define MSSIPOTF_E_OUTOFMEMRANGE 2148102145

#define ERROR_SXS_XML_E_BADXMLCASE 14069

#define CRYPT_E_NO_VERIFY_USAGE_CHECK 2148081704

#define CRYPT_E_NOT_IN_REVOCATION_DATABASE 2148081684

#define DNS_ERROR_NO_TCPIP 9851

#define MSSIPOTF_E_TABLE_TAGORDER 2148102150

#define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081

#define ERROR_HOST_DOWN 1256

#define ERROR_NO_NET_OR_BAD_PATH 1203

#define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758

#define ERROR_SXS_PROTECTION_RECOVERY_FAILED 14074

#define ERROR_POSSIBLE_DEADLOCK 1131

#define CRYPT_E_ASN1_INTERNAL 2148086017

#define ERROR_DS_DUP_LINK_ID 8468

#define ERROR_FILE_EXISTS 80

#define ERROR_DS_UNWILLING_TO_PERFORM 8245

#define OSS_BAD_PTR 2148085771

#define NTE_BAD_FLAGS 2148073481

#define ERROR_WRITE_PROTECT 19

#define ERROR_IPSEC_QM_POLICY_PENDING_DELETION 13023

#define TYPE_E_BADMODULEKIND 2147649725

#define ERROR_MORE_DATA 234

#define SCARD_E_NO_FILE 2148532262

#define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE 14018

#define RPC_X_SS_IN_NULL_CONTEXT 1775

#define ERROR_DRIVE_LOCKED 108

#define COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED 2148599831

#define DV_E_STGMEDIUM 2147745894

#define CONVERT10_S_NO_PRESENTATION 262592

#define ERROR_DS_CONFIDENTIALITY_REQUIRED 8237

#define RPC_S_GROUP_MEMBER_NOT_FOUND 1898

#define ERROR_UNSUPPORTED_TYPE 1630

#define ERROR_INVALID_SID 1337

#define ERROR_DISK_RECALIBRATE_FAILED 1126

#define ERROR_BAD_REM_ADAP 60

#define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED 8426

#define RPC_S_UUID_NO_ADDRESS 1739

#define CRYPT_E_VERIFY_USAGE_OFFLINE 2148081705

#define NTE_PROV_TYPE_NOT_DEF 2148073495

#define CRYPT_E_MSG_ERROR 2148077569

#define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION 8533

#define SEC_E_NO_IMPERSONATION 2148074251

#define SCARD_E_INVALID_CHV 2148532266

#define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED 13883

#define WSA_QOS_EPSFLOWSPEC 11027

#define ERROR_DS_FOREST_VERSION_TOO_LOW 8565

#define ERROR_INVALID_DATATYPE 1804

#define ERROR_CHILD_WINDOW_MENU 1436

#define ERROR_CORE_RESOURCE 5026

#define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS 13008

#define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750

#define SCARD_W_CARD_NOT_AUTHENTICATED 2148532335

#define CERT_E_INVALID_POLICY 2148204819

#define NTE_BAD_PROV_TYPE 2148073492

#define ERROR_NO_SITENAME 1919

#define ERROR_DS_RIDMGR_INIT_ERROR 8211

#define TRUST_E_FAIL 2148204811

#define ERROR_INVALID_FLAGS 1004

#define RPC_E_CLIENT_CANTUNMARSHAL_DATA 2147549196

#define COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE 2148599298

#define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 8203

#define CERT_E_VALIDITYPERIODNESTING 2148204802

#define DNS_ERROR_ZONE_LOCKED 9607

#define ERROR_SET_NOT_FOUND 1170

#define CACHE_E_FIRST 2147746160

#define ERROR_SXS_XML_E_MULTIPLEROOTS 14054

#define ERROR_NO_SUPPORTING_DRIVES 4339

#define ERROR_DS_SERVER_DOWN 8250

#define CERTSRV_E_NO_CAADMIN_DEFINED 2148089869

#define SEC_E_SECPKG_NOT_FOUND 2148074245

#define DNS_ERROR_NO_DNS_SERVERS 9852

#define SCARD_S_SUCCESS 0

#define DNS_ERROR_INVALID_PROPERTY 9553

#define ERROR_DS_DST_DOMAIN_NOT_NATIVE 8496

#define ERROR_SERIAL_NO_DEVICE 1118

#define DISP_E_NOTACOLLECTION 2147614737

#define ERROR_SERVICE_DISABLED 1058

#define ERROR_INVALID_SIGNAL_NUMBER 209

#define COMADMIN_E_INVALIDUSERIDS 2148598800

#define CO_E_CANCEL_DISABLED 2147549504

#define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122

#define ERROR_CTX_SHADOW_NOT_RUNNING 7057

#define ERROR_DS_CLIENT_LOOP 8259

#define REGDB_E_BADTHREADINGMODEL 2147746134

#define RPC_S_NO_PROTSEQS 1719

#define CRYPT_E_ASN1_BADPDU 2148086024

#define NTE_BAD_ALGID 2148073480

#define XACT_E_UNKNOWNRMGRID 2147799056

#define MK_E_SYNTAX 2147746276

#define ERROR_REQUEST_REFUSED 4320

#define ERROR_LOCAL_USER_SESSION_KEY 1303

#define ERROR_CLUSTER_NETINTERFACE_EXISTS 5046

#define COMADMIN_E_CANNOT_ALIAS_EVENTCLASS 2148599840

#define MSSIPOTF_E_BAD_MAGICNUMBER 2148102148

#define CERTSRV_E_NO_DB_SESSIONS 2148089871

#define SEC_I_NO_LSA_CONTEXT 590627

#define COMADMIN_E_CAT_UNACCEPTABLEBITNESS 2148598915

#define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY 13879

#define FRS_ERR_SYSVOL_DEMOTE 8016

#define ERROR_DS_MUST_BE_RUN_ON_DST_DC 8558

#define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS 9606

#define CO_E_INIT_ONLY_SINGLE_THREADED 2147500050

#define ERROR_BADKEY 1010

#define ERROR_INVALID_STACKSEG 189

#define ERROR_CSCSHARE_OFFLINE 1262

#define COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET 2148599830

#define TYPE_E_DLLFUNCTIONNOTFOUND 2147647535

#define XACT_E_HEURISTICABORT 2147799044

#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174

#define OLE_E_CANT_GETMONIKER 2147745801

#define ERROR_DS_OBJ_NOT_FOUND 8333

#define ERROR_DISK_CHANGE 107

#define ERROR_SEM_NOT_FOUND 187

#define ERROR_THREAD_1_INACTIVE 210

#define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED 8552

#define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC 8553

#define CS_E_CLASS_NOTFOUND 2147746150

#define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG 13873

#define COMADMIN_E_SESSION 2148598828

#define DNS_ERROR_GENERAL_API_BASE 9550

#define ERROR_UNEXP_NET_ERR 59

#define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 8205

#define RPC_E_NO_CONTEXT 2147549470

#define ERROR_RESMON_ONLINE_FAILED 5018

#define RPC_S_INVALID_BINDING 1702

#define ERROR_DS_CONTROL_NOT_FOUND 8258

#define ERROR_DS_ENCODING_ERROR 8252

#define ERROR_OBJECT_ALREADY_EXISTS 5010

#define ERROR_GROUP_EXISTS 1318

#define COMADMIN_E_BADPATH 2148598794

#define SCARD_E_NO_MEMORY 2148532230

#define COMADMIN_E_COMPFILE_CLASSNOTAVAIL 2148598823

#define RPC_S_CANNOT_SUPPORT 1764

#define DNS_ERROR_ZONE_IS_SHUTDOWN 9621

#define ERROR_CLUSTER_INVALID_NODE 5039

#define ERROR_DATABASE_DOES_NOT_EXIST 1065

#define ERROR_BAD_EXE_FORMAT 193

#define ERROR_IPSEC_IKE_INVALID_CERT_TYPE 13819

#define EPT_S_CANT_PERFORM_OP 1752

#define FRS_ERR_INSUFFICIENT_PRIV 8007

#define ERROR_DS_BUSY 8206

#define SCARD_F_UNKNOWN_ERROR 2148532244

#define CO_E_TRACKER_CONFIG 2147500080

#define RPC_E_WRONG_THREAD 2147549454

#define ERROR_CTX_CONSOLE_DISCONNECT 7041

#define ERROR_CLUSTER_NODE_ALREADY_DOWN 5062

#define CERTSRV_E_BAD_RENEWAL_SUBJECT 2148091910

#define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED 5076

#define ERROR_NO_SIGNAL_SENT 205

#define ERROR_DS_NO_CROSSREF_FOR_NC 8363

#define WSAENETDOWN 10050

#define CO_E_INIT_CLASS_CACHE 2147500041

#define RPC_S_INVALID_ASYNC_HANDLE 1914

#define ERROR_DS_DECODING_ERROR 8253

#define ERROR_INVALID_HANDLE 6

#define SCHED_E_TASK_NOT_READY 2147750666

#define MSSIPOTF_E_TABLE_PADBYTES 2148102154

#define ERROR_SXS_XML_E_UNEXPECTEDENDTAG 14051

#define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130

#define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS 8555

#define ERROR_ALIAS_EXISTS 1379

#define ERROR_TOO_MANY_CONTEXT_IDS 1384

#define ERROR_JOIN_TO_SUBST 140

#define ERROR_WMI_INVALID_REGINFO 4211

#define CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED 2148091907

#define DNS_ERROR_DP_ALREADY_ENLISTED 9904

#define WSANOTINITIALISED 10093

#define ERROR_IPSEC_IKE_KERBEROS_ERROR 13827

#define RPC_S_BINDING_INCOMPLETE 1819

#define ERROR_MAPPED_ALIGNMENT 1132

#define ERROR_EXCEPTION_IN_SERVICE 1064

#define MSSIPOTF_E_FILE 2148102163

#define CO_E_FAILEDTOGETWINDIR 2147549492

#define WSABASEERR 10000

#define CO_S_NOTALLINTERFACES 524306

#define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT 14002

#define ERROR_IPSEC_IKE_SRVACQFAIL 13855

#define ERROR_UNKNOWN_PRODUCT 1605

#define ERROR_CANT_RESOLVE_FILENAME 1921

#define ERROR_EFS_VERSION_NOT_SUPPORT 6016

#define OLE_E_NOTRUNNING 2147745797

#define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND 13015

#define OLE_E_NOSTORAGE 2147745810

#define WSA_QOS_EUNKOWNPSOBJ 11024

#define ERROR_ILL_FORMED_PASSWORD 1324

#define DNS_ERROR_INVALID_ZONE_TYPE 9611

#define COMADMIN_E_MIG_SCHEMANOTFOUND 2148598913

#define ERROR_MEDIUM_NOT_ACCESSIBLE 4323

#define DRAGDROP_S_DROP 262400

#define COMADMIN_E_CLSIDORIIDMISMATCH 2148598808

#define ERROR_LAST_ADMIN 1322

#define ERROR_WMI_DP_FAILED 4209

#define TYPE_E_SIZETOOBIG 2147649733

#define OLE_E_CLASSDIFF 2147745800

#define SCARD_E_INVALID_VALUE 2148532241

#define ERROR_SINGLE_INSTANCE_APP 1152

#define ERROR_DS_SYNTAX_MISMATCH 8384

#define ERROR_IPSEC_IKE_NO_PUBLIC_KEY 13828

#define SCARD_E_READER_UNAVAILABLE 2148532247

#define ERROR_SXS_XML_E_UNEXPECTEDEOF 14058

#define ERROR_SEEK_ON_DEVICE 132

#define ERROR_TOO_MANY_LINKS 1142

#define OLE_E_NOCACHE 2147745798

#define ERROR_FLOPPY_UNKNOWN_ERROR 1124

#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB 2147746243

#define DRAGDROP_E_INVALIDHWND 2147746050

#define CS_E_OBJECT_ALREADY_EXISTS 2147746154

#define DNS_ERROR_NEED_SECONDARY_ADDRESSES 9614

#define WSASYSNOTREADY 10091

#define MK_E_ENUMERATION_FAILED 2147746287

#define RPC_S_PROTOCOL_ERROR 1728

#define ERROR_HOST_NODE_NOT_GROUP_OWNER 5016

#define ERROR_CLUSTER_NODE_EXISTS 5040

#define ERROR_NOT_SUBSTED 137

#define FACILITY_COMPLUS 17

#define WSAEPROVIDERFAILEDINIT 10106

#define SPAPI_E_ERROR_NOT_INSTALLED 2148470784

#define ERROR_DS_BAD_INSTANCE_TYPE 8313

#define ERROR_CTX_LICENSE_NOT_AVAILABLE 7054

#define ERROR_DISK_OPERATION_FAILED 1127

#define DNS_ERROR_FILE_WRITEBACK_FAILED 9654

#define SCARD_E_INSUFFICIENT_BUFFER 2148532232

#define ERROR_DS_NO_DELETED_NAME 8355

#define STG_E_CSS_REGION_MISMATCH 2147681034

#define MK_E_NOPREFIX 2147746286

#define OLEOBJ_S_CANNOT_DOVERB_NOW 262529

#define CO_E_MALFORMED_SPN 2147500083

#define STG_E_INVALIDNAME 2147680508

#define ERROR_NOT_REGISTRY_FILE 1017

#define ERROR_DS_CANT_MOD_PRIMARYGROUPID 8506

#define XACT_E_NOASYNC 2147799049

#define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH 5895

#define ERROR_NOT_CONTAINER 1207

#define ERROR_SXS_XML_E_MISSINGSEMICOLON 14039

#define ERROR_HANDLE_DISK_FULL 39

#define DNS_ERROR_RECORD_TIMED_OUT 9705

#define ERROR_NO_SUCH_DOMAIN 1355

#define ERROR_DATATYPE_MISMATCH 1629

#define CO_E_DBERROR 2147803179

#define SPAPI_E_DEVICE_INTERFACE_ACTIVE 2148467227

#define RPC_S_UNKNOWN_IF 1717

#define WSATYPE_NOT_FOUND 10109

#define OSS_NEGATIVE_UINTEGER 2148085762

#define ERROR_MR_MID_NOT_FOUND 317

#define RPC_S_CALL_FAILED_DNE 1727

#define ERROR_DS_CANT_REM_MISSING_ATT_VAL 8325

#define STG_E_INVALIDHANDLE 2147680262

#define ERROR_IS_JOIN_TARGET 133

#define MARSHAL_S_LAST 262447

#define ERROR_SXS_XML_E_EXPECTINGTAGEND 14038

#define CO_E_OBJNOTREG 2147746299

#define ERROR_OPLOCK_NOT_GRANTED 300

#define ERROR_RING2_STACK_IN_USE 207

#define SPAPI_E_NON_WINDOWS_DRIVER 2148467246

#define WSA_QOS_POLICY_FAILURE 11011

#define ERROR_NETWORK_NOT_AVAILABLE 5035

#define ERROR_JOURNAL_DELETE_IN_PROGRESS 1178

#define OSS_UNAVAIL_ENCRULES 2148085783

#define SCHED_E_SERVICE_NOT_RUNNING 2147750677

#define CO_E_ACESINWRONGORDER 2147549498

#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435

#define ERROR_MEDIA_OFFLINE 4304

#define OSS_NULL_TBL 2148085780

#define ERROR_BAD_COMMAND 22

#define ERROR_IPSEC_IKE_PROCESS_ERR_ID 13834

#define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST 8535

#define ERROR_NETWORK_UNREACHABLE 1231

#define ERROR_UNKNOWN_REVISION 1305

#define FACILITY_NT_BIT 268435456

#define ERROR_DS_DRA_SHUTDOWN 8463

#define COMADMIN_E_PROPERTYSAVEFAILED 2148598839

#define ERROR_RESOURCE_NOT_AVAILABLE 5006

#define SEC_E_ISSUING_CA_UNTRUSTED 2148074322

#define ERROR_DS_DRA_PREEMPTED 8461

#define ERROR_RING2SEG_MUST_BE_MOVABLE 200

#define WSAECONNABORTED 10053

#define SEC_E_BAD_PKGID 2148074262

#define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME 5900

#define ERROR_EA_FILE_CORRUPT 276

#define ERROR_DS_EXISTS_IN_MUST_HAVE 8385

#define ERROR_INSTALL_PACKAGE_INVALID 1620

#define CRYPT_E_ASN1_LARGE 2148086020

#define ERROR_INVALID_COMPUTERNAME 1210

#define ERROR_CONNECTION_REFUSED 1225

#define ERROR_BAD_USERNAME 2202

#define WSAEINVALIDPROCTABLE 10104

#define EVENT_E_INTERNALERROR 2147746310

#define SCARD_E_UNEXPECTED 2148532255

#define XACT_S_ASYNC 315392

#define ERROR_DS_INVALID_NAME_FOR_SPN 8554

#define DNS_ERROR_RCODE_NAME_ERROR 9003

#define ERROR_INVALID_DOMAIN_ROLE 1354

#define MSSIPOTF_E_PCONST_CHECK 2148102167

#define FACILITY_SCARD 16

#define ERROR_INVALID_ORDINAL 182

#define DNS_ERROR_RECORD_ALREADY_EXISTS 9711

#define ERROR_IPSEC_IKE_CRL_FAILED 13817

#define SCHED_S_TASK_NOT_SCHEDULED 267013

#define SEC_E_KDC_UNKNOWN_ETYPE 2148074306

#define ERROR_NOT_CONNECTED 2250

#define DNS_ERROR_CNAME_COLLISION 9709

#define ERROR_CTX_MODEM_RESPONSE_BUSY 7015

#define RPC_E_CONNECTION_TERMINATED 2147549190

#define ERROR_REM_NOT_LIST 51

#define CRYPT_E_ASN1_EOD 2148086018

#define ERROR_BAD_ARGUMENTS 160

#define ERROR_INVALID_HANDLE_STATE 1609

#define SCARD_E_CANCELLED 2148532226

#define E_NOTIMPL 2147500033

#define NTE_NO_KEY 2148073485

#define FACILITY_SETUPAPI 15

#define WSA_QOS_TRAFFIC_CTRL_ERROR 11014

#define CERT_E_CN_NO_MATCH 2148204815

#define ERROR_JOURNAL_ENTRY_DELETED 1181

#define WSAEINPROGRESS 10036

#define SEC_I_RENEGOTIATE 590625

#define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX 8400

#define ERROR_NOT_SUPPORTED 50

#define ERROR_CLASS_HAS_WINDOWS 1412

#define ERROR_IPSEC_TUNNEL_FILTER_EXISTS 13016

#define CLIPBRD_E_BAD_DATA 2147746259

#define WSAEREFUSED 10112

#define ERROR_SUCCESS_REBOOT_REQUIRED 3010

#define ERROR_INVALID_PROFILE 2011

#define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS 8372

#define ERROR_OVERRIDE_NOCHANGES 1252

#define ERROR_SERVER_DISABLED 1341

#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807

#define CO_E_NOTPOOLED 2147803180

#define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED 1274

#define FACILITY_SSPI 9

#define ERROR_DEVICE_ALREADY_REMEMBERED 1202

#define CRYPT_E_RECIPIENT_NOT_FOUND 2148077579

#define WSAEPROCLIM 10067

#define ERROR_ENCRYPTION_FAILED 6000

#define ERROR_INVALID_ICON_HANDLE 1414

#define CACHE_S_FIRST 262512

#define WSAEINVALIDPROVIDER 10105

#define XACT_E_CLERKEXISTS 2147799169

#define ERROR_INVALID_MODULETYPE 190

#define ERROR_IPSEC_IKE_NO_CERT 13806

#define FACILITY_UMI 22

#define ERROR_NON_ACCOUNT_SID 1257

#define NO_ERROR 0

#define ERROR_IPSEC_IKE_PROCESS_ERR 13829

#define ERROR_INVALID_MEDIA 4300

#define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS 8493

#define ERROR_INVALID_FILTER_PROC 1427

#define MK_E_CONNECTMANUALLY 2147746272

#define ERROR_DS_NON_BASE_SEARCH 8480

#define STG_E_LOCKVIOLATION 2147680289

#define OSS_MORE_BUF 2148085761

#define SPAPI_E_NO_SUCH_DEVICE_INTERFACE 2148467237

#define ERROR_INVALID_WINDOW_STYLE 2002

#define NTE_BAD_KEY 2148073475

#define SCARD_E_CANT_DISPOSE 2148532238

#define ERROR_IPSEC_IKE_INVALID_SIGNATURE 13826

#define ERROR_TIME_SKEW 1398

#define ERROR_NOT_LOGON_PROCESS 1362

#define SPAPI_E_BAD_SERVICE_INSTALLSECT 2148467223

#define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED 5081

#define DNS_INFO_AXFR_COMPLETE 9751

#define XACT_S_MADECHANGESCONTENT 315397

#define COMQC_E_UNAUTHENTICATED 2148599301

#define COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED 2148598875

#define CERTSRV_E_ARCHIVED_KEY_UNEXPECTED 2148091920

#define SCHED_E_TRIGGER_NOT_FOUND 2147750665

#define ERROR_UNKNOWN_FEATURE 1606

#define RPC_S_INVALID_BOUND 1734

#define ERROR_DS_DUP_MAPI_ID 8380

#define ERROR_SXS_POLICY_PARSE_ERROR 14029

#define CS_E_LAST 2147746159

#define ERROR_DS_SIZELIMIT_EXCEEDED 8227

#define SPAPI_E_NO_DRIVER_SELECTED 2148467203

#define ERROR_DS_DRA_REF_NOT_FOUND 8449

#define ERROR_DS_ROOT_CANT_BE_SUBREF 8326

#define DNS_ERROR_WINS_INIT_FAILED 9615

#define MK_E_NOTBINDABLE 2147746280

#define MSSIPOTF_E_TABLES_OVERLAP 2148102153

#define ERROR_INVALID_DOMAIN_STATE 1353

#define ERROR_SPOOL_FILE_NOT_FOUND 3002

#define ERROR_CLUSTER_INVALID_NETWORK 5054

#define ERROR_QUORUM_RESOURCE 5020

#define DNS_ERROR_DP_BASE 9900

#define STG_E_DISKISWRITEPROTECTED 2147680275

#define ERROR_IPSEC_IKE_PROCESS_ERR_KE 13833

#define ERROR_DS_CANT_ADD_TO_GC 8550

#define ERROR_NOT_EMPTY 4307

#define DRAGDROP_S_CANCEL 262401

#define COMADMIN_E_COMPFILE_BADTLB 2148598824

#define TRUST_E_FINANCIAL_CRITERIA 2148098078

#define ERROR_IPSEC_IKE_NO_MM_POLICY 13850

#define SPAPI_E_NO_ASSOCIATED_SERVICE 2148467225

#define ERROR_INVALID_HOOK_HANDLE 1404

#define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER 5049

#define ERROR_CLUSTER_JOIN_IN_PROGRESS 5041

#define ERROR_DEV_NOT_EXIST 55

#define DNS_ERROR_SOA_DELETE_INVALID 9618

#define ERROR_DS_OBJECT_CLASS_REQUIRED 8315

#define ERROR_GRACEFUL_DISCONNECT 1226

#define ERROR_DS_DRA_NO_REPLICA 8452

#define CO_E_INIT_TLS_CHANNEL_CONTROL 2147500044

#define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED 8304

#define ERROR_ILLEGAL_ELEMENT_ADDRESS 1162

#define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015

#define ERROR_NO_SUCH_USER 1317

#define RPC_S_CALL_CANCELLED 1818

#define ERROR_DEPENDENT_SERVICES_RUNNING 1051

#define OLE_E_INVALIDHWND 2147745807

#define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD 9605

#define FACILITY_URT 19

#define ERROR_SHUTDOWN_IN_PROGRESS 1115

#define SPAPI_E_KEY_DOES_NOT_EXIST 2148467204

#define ERROR_EMPTY 4306

#define MSSIPOTF_E_STRUCTURE 2148102168

#define STG_E_DOCFILECORRUPT 2147680521

#define ERROR_OUT_OF_STRUCTURES 84

#define ERROR_DS_RESERVED_LINK_ID 8576

#define ERROR_CLUSTER_NODE_ALREADY_UP 5061

#define ERROR_INTERNAL_DB_CORRUPTION 1358

#define ERROR_DS_ATT_IS_NOT_ON_OBJ 8310

#define STG_E_SEEKERROR 2147680281

#define ERROR_DS_CLASS_MUST_BE_CONCRETE 8359

#define ERROR_OLD_WIN_VERSION 1150

#define ERROR_CLUSTER_RESNAME_NOT_FOUND 5080

#define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821

#define SEC_E_SECURITY_QOS_FAILED 2148074290

#define ERROR_INVALID_OWNER 1307

#define STG_E_STATUS_COPY_PROTECTION_FAILURE 2147681029

#define CO_E_OLE1DDE_DISABLED 2147500054

#define RPC_X_WRONG_PIPE_VERSION 1832

#define ERROR_CLIPBOARD_NOT_OPEN 1418

#define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED 14006

#define ERROR_BAD_PROFILE 1206

#define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP 5894

#define TYPE_E_REGISTRYACCESS 2147647516

#define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN 8537

#define DNS_ERROR_RCODE_NOT_IMPLEMENTED 9004

#define ERROR_DS_NO_RESULTS_RETURNED 8257

#define ERROR_IPSEC_IKE_DECRYPT 13867

#define STG_E_ABNORMALAPIEXIT 2147680506

#define ERROR_INVALID_PARAMETER 87

#define ERROR_PARTIAL_COPY 299

#define ERROR_BAD_LENGTH 24

#define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT 14020

#define ERROR_IPSEC_IKE_INVALID_POLICY 13861

#define CO_E_INIT_SHARED_ALLOCATOR 2147500039

#define MARSHAL_E_FIRST 2147746080

#define COMADMIN_E_CAT_BITNESSMISMATCH 2148598914

#define CO_E_DECODEFAILED 2147549501

#define ERROR_INVALID_PRINTER_STATE 1906

#define ERROR_ALREADY_WAITING 1904

#define ERROR_DS_UNKNOWN_OPERATION 8365

#define OSS_PDV_CODE_NOT_LINKED 2148085800

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG 8581

#define ERROR_SXS_MANIFEST_PARSE_ERROR 14005

#define CRYPT_E_BAD_ENCODE 2148081666

#define ERROR_IPSEC_IKE_PROCESS_ERR_SA 13830

#define RPC_E_INVALID_STD_NAME 2147549474

#define CO_E_INITIALIZATIONFAILED 2147803173

#define TYPE_E_IOERROR 2147650722

#define SCARD_W_CANCELLED_BY_USER 2148532334

#define ERROR_DS_CANT_START 8531

#define OLEOBJ_E_LAST 2147746191

#define COMADMIN_E_ROLE_DOES_NOT_EXIST 2148598855

#define ERROR_WMI_TRY_AGAIN 4203

#define CO_E_ERRORINDLL 2147746297

#define ERROR_DS_DS_REQUIRED 8478

#define ERROR_IPSEC_IKE_LOAD_SOFT_SA 13844

#define ERROR_DS_NO_MSDS_INTID 8596

#define MK_E_MUSTBOTHERUSER 2147746283

#define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN 8569

#define RPC_E_INVALID_PARAMETER 2147549200

#define RPC_E_NOT_REGISTERED 2147549443

#define ERROR_DS_SECURITY_ILLEGAL_MODIFY 8423

#define DNS_ERROR_DATAFILE_BASE 9650

#define STG_S_CONVERTED 197120

#define NTE_BAD_PUBLIC_KEY 2148073493

#define ERROR_IPSEC_IKE_ERROR 13816

#define COMADMIN_E_CAN_NOT_START_APP 2148598859

#define RPC_S_NO_PROTSEQS_REGISTERED 1714

#define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER 9562

#define CERT_E_UNTRUSTEDTESTROOT 2148204813

#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS 2147500047

#define STG_E_CSS_KEY_NOT_PRESENT 2147681031

#define WSAEBADF 10009

#define OLE_E_NOCONNECTION 2147745796

#define ERROR_DS_OFFSET_RANGE_ERROR 8262

#define SCARD_E_NO_READERS_AVAILABLE 2148532270

#define DNS_ERROR_DP_NOT_ENLISTED 9903

#define DISP_E_BADINDEX 2147614731

#define ERROR_DS_DRA_DN_EXISTS 8441

#define CERT_E_MALFORMED 2148204808

#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063

#define E_POINTER 2147500035

#define ERROR_SYSTEM_TRACE 150

#define WSA_QOS_REQUEST_CONFIRMED 11009

#define ERROR_DS_CROSS_NC_DN_RENAME 8368

#define COMADMIN_E_BADREGISTRYPROGID 2148598802

#define ERROR_CLUSTER_NODE_SHUTTING_DOWN 5073

#define ERROR_IPSEC_IKE_QM_DELAY_DROP 13815

#define ERROR_DELETING_ICM_XFORM 2019

#define ERROR_LB_WITHOUT_TABSTOPS 1434

#define COMADMIN_E_REGDB_ALREADYRUNNING 2148598901

#define ERROR_DS_GC_REQUIRED 8547

#define RPC_S_GRP_ELT_NOT_REMOVED 1929

#define ERROR_MACHINE_LOCKED 1271

#define CERT_E_ISSUERCHAINING 2148204807

#define CERT_E_ROLE 2148204803

#define RPC_E_CANTPOST_INSENDCALL 2147549187

#define ERROR_INVALID_CATEGORY 117

#define CLIPBRD_E_CANT_SET 2147746258

#define SCARD_E_SERVICE_STOPPED 2148532254

#define INPLACE_E_FIRST 2147746208

#define WSA_QOS_RESERVED_PETYPE 11031

#define NTE_BAD_KEYSET_PARAM 2148073503

#define ERROR_INVALID_THREAD_ID 1444

#define ERROR_CANNOT_COPY 266

#define CRYPT_E_ASN1_PDU_TYPE 2148086067

#define RPC_S_COMM_FAILURE 1820

#define ERROR_DS_PARAM_ERROR 8255

#define ERROR_SMARTCARD_SUBSYSTEM_FAILURE 1264

#define SCARD_E_DIR_NOT_FOUND 2148532259

#define NTE_KEYSET_NOT_DEF 2148073497

#define SEC_E_NO_IP_ADDRESSES 2148074293

#define ERROR_TOO_MANY_SECRETS 1381

#define ERROR_INVALID_COLORINDEX 2022

#define DNS_ERROR_NO_PACKET 9503

#define XACT_E_CONNECTION_DENIED 2147799069

#define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN 13845

#define RPC_E_UNSECURE_CALL 2147549464

#define ERROR_INVALID_TRANSFORM 2020

#define DNS_ERROR_ZONE_DOES_NOT_EXIST 9601

#define CS_E_ADMIN_LIMIT_EXCEEDED 2147746157

#define ERROR_NO_MEDIA_IN_DRIVE 1112

#define ERROR_CTX_LICENSE_EXPIRED 7056

#define SPAPI_E_NO_SUCH_DEVINST 2148467211

#define ERROR_BAD_VALIDATION_CLASS 1348

#define CRYPT_E_DELETED_PREV 2148081672

#define SPAPI_E_NOT_DISABLEABLE 2148467249

#define WSAEADDRINUSE 10048

#define ERROR_NO_SECURITY_ON_OBJECT 1350

#define INPLACE_E_NOTOOLSPACE 2147746209

#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET 2147750671

#define REGDB_E_IIDNOTREG 2147746133

#define CRYPT_E_SELF_SIGNED 2148081671

#define ERROR_SXS_XML_E_BADCHARDATA 14036

#define CO_E_ACTIVATIONFAILED_TIMEOUT 2147803172

#define ERROR_PATCH_PACKAGE_INVALID 1636

#define DATA_E_LAST 2147746111

#define SPAPI_E_NO_COMPAT_DRIVERS 2148467240

#define COMADMIN_E_SERVICENOTINSTALLED 2148598838

#define SPAPI_E_NO_CONFIGMGR_SERVICES 2148467235

#define ERROR_CONNECTION_INVALID 1229

#define ERROR_DHCP_ADDRESS_CONFLICT 4100

#define ERROR_DS_NAME_ERROR_NOT_UNIQUE 8471

#define CERTSRV_E_SUBJECT_UPN_REQUIRED 2148091917

#define ERROR_INVALID_COMMAND_LINE 1639

#define ERROR_PIPE_LISTENING 536

#define ERROR_INVALID_CMM 2010

#define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED 8557

#define ERROR_IPSEC_IKE_SRVQUERYCRED 13856

#define ERROR_DS_NONSAFE_SCHEMA_CHANGE 8508

#define COMADMIN_E_COMPONENTEXISTS 2148598841

#define ERROR_REQ_NOT_ACCEP 71

#define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER 8538

#define MK_E_NO_NORMALIZED 2148007943

#define FACILITY_NULL 0

#define WSAENOTEMPTY 10066

#define DRAGDROP_S_LAST 262415

#define SEC_E_NO_KERB_KEY 2148074312

#define SPAPI_E_NO_DEVICE_ICON 2148467241

#define ERROR_CHILD_MUST_BE_VOLATILE 1021

#define ERROR_DS_DRA_SINK_DISABLED 8457

#define ERROR_DS_WRONG_LINKED_ATT_SYNTAX 8528

#define ERROR_INVALID_ACCESS 12

#define ERROR_INVALID_LB_MESSAGE 1432

#define CO_E_ACTIVATIONFAILED_CATALOGERROR 2147803171

#define ERROR_SXS_XML_E_BADNAMECHAR 14033

#define ERROR_FILE_INVALID 1006

#define MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT 2148102152

#define ERROR_SHARING_PAUSED 70

#define ERROR_INVALID_ID_AUTHORITY 1343

#define RPC_S_NOTHING_TO_EXPORT 1754

#define ERROR_SUCCESS_RESTART_REQUIRED 3011

#define ERROR_DIRECT_ACCESS_HANDLE 130

#define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION 13020

#define ERROR_ACCOUNT_EXPIRED 1793

#define RPC_X_PIPE_EMPTY 1918

#define ERROR_RETRY 1237

#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794

#define ERROR_DS_SUB_CLS_TEST_FAIL 8391

#define CO_S_LAST 262655

#define ERROR_IPSEC_IKE_NEG_STATUS_END 13897

#define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS 5067

#define CONTEXT_E_FIRST 2147803136

#define NTE_BAD_TYPE 2148073482

#define CAT_E_NODESCRIPTION 2147746145

#define CO_E_PATHTOOLONG 2147549493

#define ERROR_OPEN_FAILED 110

#define ERROR_IS_SUBST_TARGET 149

#define SPAPI_E_INVALID_MACHINENAME 2148467232

#define SCARD_E_INVALID_TARGET 2148532229

#define CO_E_ACTIVATIONFAILED_EVENTLOGGED 2147803170

#define OSS_COPIER_DLL_NOT_LINKED 2148085794

#define ERROR_DOWNGRADE_DETECTED 1265

#define ERROR_DS_SUBREF_MUST_HAVE_PARENT 8356

#define RPC_E_INVALID_OBJECT 2147549460

#define ERROR_DYNLINK_FROM_INVALID_RING 196

#define CERTSRV_E_BAD_REQUESTSTATUS 2148089859

#define VIEW_E_FIRST 2147746112

#define ERROR_NOT_OWNER 288

#define ERROR_CTX_GRAPHICS_INVALID 7035

#define XACT_E_NOIMPORTOBJECT 2147799060

#define ERROR_CLUSTER_NETWORK_NOT_INTERNAL 5060

#define MSSIPOTF_E_TABLE_LONGWORD 2148102151

#define SEC_E_NO_SPM 2148074244

#define CRYPT_E_SIGNER_NOT_FOUND 2148077582

#define SEC_E_MUST_BE_KDC 2148074297

#define RPC_S_PRF_ELT_NOT_REMOVED 1927

#define ERROR_BAD_UNIT 20

#define ERROR_CTX_INVALID_MODEMNAME 7010

#define ERROR_IPSEC_IKE_DH_FAIL 13822

#define RPC_S_NOT_LISTENING 1715

#define ERROR_WINS_INTERNAL 4000

#define ERROR_SIGNAL_PENDING 162

#define CRYPT_E_ASN1_NOEOD 2148086274

#define CAT_E_LAST 2147746145

#define ERROR_RMODE_APP 1153

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 8586

#define ERROR_SHARING_BUFFER_EXCEEDED 36

#define EVENT_E_INTERNALEXCEPTION 2147746309

#define NTE_BAD_DATA 2148073477

#define ERROR_DISK_RESET_FAILED 1128

#define FACILITY_ACS 20

#define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER 8517

#define ERROR_DOMAIN_TRUST_INCONSISTENT 1810

#define OLE_E_WRONGCOMPOBJ 2147745806

#define WSAENAMETOOLONG 10063

#define ERROR_WRONG_TARGET_NAME 1396

#define TYPE_E_UNDEFINEDTYPE 2147647527

#define RPC_S_ENTRY_ALREADY_EXISTS 1760

#define XACT_E_ALREADYINPROGRESS 2147799064

#define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED 8204

#define FACILITY_ITF 4

#define ERROR_OBJECT_NOT_FOUND 4312

#define ERROR_ALREADY_REGISTERED 1242

#define ERROR_DS_NAME_VALUE_TOO_LONG 8349

#define NTE_NO_MEMORY 2148073486

#define TYPE_E_INVALIDID 2147649743

#define CAT_E_FIRST 2147746144

#define OLE_E_OLEVERB 2147745792

#define ERROR_INVALID_TARGET_HANDLE 114

#define SPAPI_E_NON_WINDOWS_NT_DRIVER 2148467245

#define ERROR_DS_NO_RIDS_ALLOCATED 8208

#define ERROR_DS_AUTH_UNKNOWN 8234

#define ERROR_CURRENT_DIRECTORY 16

#define SCARD_E_TIMEOUT 2148532234

#define NTE_SILENT_CONTEXT 2148073506

#define WSAEMSGSIZE 10040

#define SCARD_E_COMM_DATA_LOST 2148532271

#define XACT_E_CANTRETAIN 2147799041

#define ERROR_IPSEC_MM_AUTH_IN_USE 13012

#define FACILITY_AAF 18

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE 14017

#define CS_E_FIRST 2147746148

#define ERROR_DS_CANT_RETRIEVE_DN 8405

#define XACT_E_RECOVERYINPROGRESS 2147799170

#define FACILITY_HTTP 25

#define SEC_I_COMPLETE_NEEDED 590611

#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773

#define ERROR_QUORUMLOG_OPEN_FAILED 5028

#define TRUST_E_SUBJECT_FORM_UNKNOWN 2148204547

#define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY 8548

#define ERROR_IPSEC_IKE_PROCESS_ERR_HASH 13837

#define CERT_E_UNTRUSTEDCA 2148204818

#define STG_S_MULTIPLEOPENS 197124

#define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER 8516

#define SPAPI_E_INVALID_REFERENCE_STRING 2148467231

#define CO_E_CANTDETERMINECLASS 2147746290

#define ERROR_INVALID_LIST_FORMAT 153

#define ERROR_WMI_GUID_NOT_FOUND 4200

#define RPC_E_CHANGED_MODE 2147549446

#define ERROR_DS_SECURITY_CHECKING_ERROR 8413

#define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA 8307

#define DNS_ERROR_NUMERIC_NAME 9561

#define ERROR_CRC 23

#define CS_E_NOT_DELETABLE 2147746149

#define ERROR_SXS_INVALID_XML_NAMESPACE_URI 14014

#define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109

#define ERROR_DS_KEY_NOT_UNIQUE 8527

#define SCHED_S_TASK_READY 267008

#define ERROR_SXS_XML_E_INVALID_DECIMAL 14047

#define ERROR_INVALID_SEGDPL 198

#define ERROR_DS_NAME_ERROR_DOMAIN_ONLY 8473

#define ERROR_CTX_BAD_VIDEO_MODE 7025

#define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN 8514

#define ERROR_CALLBACK_SUPPLIED_INVALID_DATA 1273

#define ERROR_MEDIA_UNAVAILABLE 4308

#define COMADMIN_E_COMP_MOVE_PRIVATE 2148599838

#define WSA_QOS_ESERVICETYPE 11016

#define ERROR_DS_OBJ_CLASS_NOT_DEFINED 8371

#define STG_S_CONSOLIDATIONFAILED 197125

#define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND 13014

#define SCARD_E_PCI_TOO_SMALL 2148532249

#define ERROR_DS_NAME_REFERENCE_INVALID 8373

#define SPAPI_E_NO_BACKUP 2148466947

#define ERROR_INSTALL_TEMP_UNWRITABLE 1632

#define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND 5043

#define OSS_BAD_ARG 2148085766

#define ERROR_LOGIN_TIME_RESTRICTION 1239

#define ERROR_ADDRESS_NOT_ASSOCIATED 1228

#define COMADMIN_E_SAFERINVALID 2148599842

#define ERROR_INVALID_AT_INTERRUPT_TIME 104

#define ERROR_DS_EXISTS_IN_MAY_HAVE 8386

#define ERROR_IPSEC_IKE_INVALID_HASH_SIZE 13872

#define ERROR_DS_NOT_ON_BACKLINK 8362

#define OLE_S_USEREG 262144

#define ERROR_MAX_THRDS_REACHED 164

#define CO_E_ISOLEVELMISMATCH 2147803183

#define ERROR_DS_DUP_OID 8379

#define CERTSRV_E_TEMPLATE_DENIED 2148089874

#define ERROR_REG_NAT_CONSUMPTION 1261

#define COMADMIN_E_REGISTRY_ACCESSDENIED 2148599843

#define ERROR_INVALID_IMPORT_OF_NON_DLL 1276

#define ERROR_DS_CODE_INCONSISTENCY 8408

#define COMADMIN_E_APPLICATIONEXISTS 2148598795

#define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA 8465

#define OSS_DATA_ERROR 2148085765

#define COMADMIN_E_PARTITION_ACCESSDENIED 2148599832

#define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE 14071

#define SCARD_W_RESET_CARD 2148532328

#define ERROR_DLL_NOT_FOUND 1157

#define ERROR_NOT_DOS_DISK 26

#define ERROR_INVALID_MENU_HANDLE 1401

#define CERTSRV_E_SERVER_SUSPENDED 2148089862

#define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080

#define SEC_E_OUT_OF_SEQUENCE 2148074256

#define CRYPT_E_ASN1_NYI 2148086068

#define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND 5047

#define ERROR_RESOURCE_FAILED 5038

#define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION 13019

#define ERROR_BOOT_ALREADY_ACCEPTED 1076

#define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER 8518

#define COMQC_E_NO_QUEUEABLE_INTERFACES 2148599297

#define XENROLL_E_RESPONSE_KA_HASH_MISMATCH 2148093956

#define COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES 2148598874

#define ERROR_DS_SAM_INIT_FAILURE 8504

#define SPAPI_E_NO_DEVICE_SELECTED 2148467217

#define ERROR_DS_CONSTRAINT_VIOLATION 8239

#define RPC_S_NO_CALL_ACTIVE 1725

#define ERROR_INVALID_ADDRESS 487

#define DISP_E_PARAMNOTFOUND 2147614724

#define ERROR_SERVICE_EXISTS 1073

#define ERROR_DS_SCHEMA_UPDATE_DISALLOWED 8509

#define INPLACE_S_TRUNCATED 262560

#define ERROR_INVALID_NETNAME 1214

#define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX 8392

#define OR_INVALID_OID 1911

#define ERROR_INVALID_DOMAINNAME 1212

#define ERROR_DS_CANT_MIX_MASTER_AND_REPS 8331

#define RPC_S_CANT_CREATE_ENDPOINT 1720

#define CRYPT_E_ALREADY_DECRYPTED 2148077577

#define ERROR_SXS_ASSEMBLY_NOT_FOUND 14003

#define ERROR_JOIN_TO_JOIN 138

#define RPC_E_FULLSIC_REQUIRED 2147549473

#define SPAPI_E_NO_CLASS_DRIVER_LIST 2148467224

#define WSAEDESTADDRREQ 10039

#define DATA_E_FIRST 2147746096

#define SPAPI_E_INVALID_TARGET 2148467251

#define CRYPT_E_PENDING_CLOSE 2148081679

#define DNS_ERROR_INVALID_NAME_CHAR 9560

#define ERROR_DEPENDENCY_ALREADY_EXISTS 5003

#define ERROR_DS_FOREST_VERSION_TOO_HIGH 8563

#define ERROR_TOO_MANY_LUIDS_REQUESTED 1333

#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390

#define XACT_E_XA_TX_DISABLED 2147799078

#define WSA_QOS_EFILTERCOUNT 11021

#define COMADMIN_E_COMPFILE_LOADDLLFAIL 2148598821

#define COMADMIN_E_BADREGISTRYLIBID 2148598814

#define ERROR_TOO_MANY_SESS 69

#define WSAENOMORE 10102

#define OSS_INDEFINITE_NOT_SUPPORTED 2148085773

#define DNS_STATUS_CONTINUE_NEEDED 9801

#define ERROR_DS_NONEXISTENT_MAY_HAVE 8387

#define ERROR_SXS_XML_E_MISSINGQUOTE 14030

#define SEC_E_NO_PA_DATA 2148074300

#define RPC_S_CALL_IN_PROGRESS 1791

#define ERROR_DS_CANT_RETRIEVE_SD 8526

#define ERROR_WRITE_FAULT 29

#define COMADMIN_E_REGDB_NOTOPEN 2148598899

#define TRUST_E_COUNTER_SIGNER 2148098051

#define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG 14060

#define ERROR_INVALID_SCROLLBAR_RANGE 1448

#define ERROR_SPECIAL_ACCOUNT 1371

#define SCARD_F_COMM_ERROR 2148532243

#define ERROR_ACCOUNT_LOCKED_OUT 1909

#define TYPE_E_UNKNOWNLCID 2147647534

#define ERROR_USER_EXISTS 1316

#define DNS_ERROR_INVALID_TYPE 9551

#define EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT 2147746317

#define TYPE_E_CIRCULARTYPE 2147654788

#define CO_E_ALREADYINITIALIZED 2147746289

#define ERROR_INSTALL_PACKAGE_OPEN_FAILED 1619

#define SEC_E_ALGORITHM_MISMATCH 2148074289

#define ERROR_ALL_SIDS_FILTERED 3221815298

#define COMADMIN_E_DLLREGISTERSERVER 2148598810

#define ERROR_PRINTQ_FULL 61

#define ERROR_DS_SENSITIVE_GROUP_VIOLATION 8505

#define CO_E_SCM_ERROR 2148007938

#define ERROR_PAGED_SYSTEM_RESOURCES 1452

#define ERROR_CANNOT_IMPERSONATE 1368

#define ERROR_APP_WRONG_OS 1151

#define SEC_E_UNTRUSTED_ROOT 2148074277

#define VIEW_S_LAST 262479

#define ERROR_IS_JOIN_PATH 147

#define ERROR_DS_EPOCH_MISMATCH 8483

#define ERROR_DS_UNABLE_TO_SURRENDER_ROLES 8435

#define XACT_E_FIRST 2147799040

#define ERROR_CTX_CLIENT_QUERY_TIMEOUT 7040

#define RPC_S_ENTRY_NOT_FOUND 1761

#define DNS_ERROR_RCODE_FORMAT_ERROR 9001

#define FACILITY_RPC 1

#define ERROR_COMMITMENT_LIMIT 1455

#define DISP_E_UNKNOWNNAME 2147614726

#define ERROR_DS_ADMIN_LIMIT_EXCEEDED 8228

#define ERROR_DS_DRA_INVALID_PARAMETER 8437

#define ERROR_IPSEC_QM_POLICY_NOT_FOUND 13001

#define E_FAIL 2147500037

#define ENUM_E_FIRST 2147746224

#define CO_E_INIT_SCM_EXEC_FAILURE 2147500049

#define XACT_E_INVALIDCOOKIE 2147799061

#define STG_E_READFAULT 2147680286

#define ERROR_NO_NETWORK 1222

#define ERROR_INVALID_SECURITY_DESCR 1338

#define ERROR_CAN_NOT_COMPLETE 1003

#define ERROR_IPSEC_IKE_BENIGN_REINIT 13878

#define OLEOBJ_S_INVALIDVERB 262528

#define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001

#define FRS_ERR_SERVICE_COMM 8006

#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL 2147500043

#define ERROR_MOD_NOT_FOUND 126

#define ERROR_INSUFFICIENT_BUFFER 122

#define OSS_CANT_OPEN_TRACE_FILE 2148085787

#define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033

#define ERROR_DS_CANT_DEL_MASTER_CROSSREF 8375

#define ERROR_PASSWORD_RESTRICTION 1325

#define RPC_E_CANTCALLOUT_INEXTERNALCALL 2147549189

#define ERROR_MEMBER_IN_GROUP 1320

#define ERROR_VOLUME_NOT_SIS_ENABLED 4500

#define ERROR_SERVICE_START_HANG 1070

#define ERROR_ADAP_HDW_ERR 57

#define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE 14045

#define RPC_E_SERVER_CANTUNMARSHAL_DATA 2147549198

#define ERROR_TRUSTED_DOMAIN_FAILURE 1788

#define ERROR_IPSEC_MM_AUTH_PENDING_DELETION 13022

#define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER 8497

#define ERROR_WMI_INVALID_MOF 4210

#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623

#define ERROR_NOT_ENOUGH_QUOTA 1816

#define ERROR_NO_MORE_USER_HANDLES 1158

#define RPC_S_WRONG_KIND_OF_BINDING 1701

#define SPAPI_E_IN_WOW64 2148467253

#define EVENT_S_LAST 262687

#define TRUST_E_BAD_DIGEST 2148098064

#define ERROR_WORKING_SET_QUOTA 1453

#define ERROR_ALREADY_RUNNING_LKG 1074

#define STG_E_PATHNOTFOUND 2147680259

#define ERROR_SXS_XML_E_BADPEREFINSUBSET 14059

#define ERROR_VC_DISCONNECTED 240

#define DNS_ERROR_UNSECURE_PACKET 9505

#define ERROR_IPSEC_QM_POLICY_IN_USE 13002

#define ERROR_SWAPERROR 999

#define ERROR_DS_INSUFF_ACCESS_RIGHTS 8344

#define STG_E_INVALIDPARAMETER 2147680343

#define ERROR_FULL_BACKUP 4004

#define OSS_BAD_TABLE 2148085775

#define ERROR_DS_SCHEMA_NOT_LOADED 8414

#define ERROR_BAD_DRIVER_LEVEL 119

#define DNS_ERROR_NODE_CREATION_FAILED 9703

#define ERROR_CTX_WD_NOT_FOUND 7004

#define CLASS_E_NOAGGREGATION 2147746064

#define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING 14078

#define SEC_E_KDC_INVALID_REQUEST 2148074304

#define ERROR_DS_BAD_HIERARCHY_FILE 8425

#define SEC_E_NO_CREDENTIALS 2148074254

#define ERROR_WMI_SET_FAILURE 4214

#define ERROR_INSTALL_ALREADY_RUNNING 1618

#define CONTEXT_E_NOTRANSACTION 2147803175

#define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2015

#define ERROR_AUDITING_DISABLED 3221815297

#define ERROR_INSTALL_REMOTE_DISALLOWED 1640

#define CONVERT10_E_OLESTREAM_FMT 2147746242

#define SEC_E_SMARTCARD_LOGON_REQUIRED 2148074302

#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR 2147500045

#define CRYPT_E_NOT_CHAR_STRING 2148081700

#define TRUST_E_EXPLICIT_DISTRUST 2148204817

#define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED 14015

#define ERROR_WMI_ITEMID_NOT_FOUND 4202

#define ERROR_TOO_MANY_NAMES 68

#define ERROR_TLW_WITH_WSCHILD 1406

#define DISP_E_UNKNOWNLCID 2147614732

#define STG_E_RESETS_EXHAUSTED 2147681035

#define DV_E_DVTARGETDEVICE_SIZE 2147745900

#define ERROR_INSTALL_SUSPEND 1604

#define RPC_S_UNSUPPORTED_TYPE 1732

#define MARSHAL_S_FIRST 262432

#define ERROR_BUS_RESET 1111

#define MEM_E_INVALID_LINK 2148007952

#define OSS_BAD_VERSION 2148085767

#define FACILITY_CERT 11

#define ERROR_CANCEL_VIOLATION 173

#define WSAEISCONN 10056

#define EVENT_E_ALL_SUBSCRIBERS_FAILED 2147746305

#define ERROR_DS_ALIAS_PROBLEM 8241

#define ERROR_SUBST_TO_JOIN 141

#define EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT 2147746318

#define SCHED_E_NO_SECURITY_SERVICES 2147750674

#define EVENT_E_QUERYSYNTAX 2147746307

#define ERROR_POPUP_ALREADY_ACTIVE 1446

#define SPAPI_E_WRONG_INF_STYLE 2148466944

#define ERROR_PRODUCT_UNINSTALLED 1614

#define RPC_E_THREAD_NOT_INIT 2147549455

#define ERROR_CONNECTION_COUNT_LIMIT 1238

#define WSAEFAULT 10014

#define ERROR_SESSION_CREDENTIAL_CONFLICT 1219

#define ERROR_HOST_NODE_NOT_AVAILABLE 5005

#define ERROR_RESOURCE_DISABLED 4309

#define RPC_E_ACCESS_DENIED 2147549467

#define COMADMIN_E_NOREGISTRYCLSID 2148598801

#define ERROR_NO_RECOVERY_POLICY 6003

#define FACILITY_MSMQ 14

#define OLE_E_CANTCONVERT 2147745809

#define CO_E_INIT_TLS 2147500038

#define ERROR_INVALID_MSGBOX_STYLE 1438

#define ERROR_DS_DNS_LOOKUP_FAILURE 8524

#define ERROR_DUPLICATE_SERVICE_NAME 1078

#define DNS_STATUS_PACKET_UNSECURE 9505

#define ERROR_TOKEN_ALREADY_IN_USE 1375

#define ERROR_SEM_OWNER_DIED 105

#define ERROR_DS_NONEXISTENT_POSS_SUP 8390

#define TYPE_E_INVDATAREAD 2147647512

#define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS 13832

#define ERROR_CIRCULAR_DEPENDENCY 1059

#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED 2147746279

#define SEC_E_CERT_UNKNOWN 2148074279

#define ERROR_WRONG_EFS 6005

#define SPAPI_E_DRIVER_NONNATIVE 2148467252

#define XACT_S_ABORTING 315400

#define VIEW_E_LAST 2147746127

#define ERROR_DUP_NAME 52

#define SEC_E_NO_TGT_REPLY 2148074292

#define SEC_E_INTERNAL_ERROR 2148074244

#define RPC_S_MAX_CALLS_TOO_SMALL 1742

#define WSA_QOS_EFILTERTYPE 11020

#define SCARD_E_UNKNOWN_READER 2148532233

#define CO_E_NO_SECCTX_IN_ACTIVATE 2147500075

#define RPC_X_INVALID_PIPE_OBJECT 1830

#define DNS_ERROR_RCODE_NOTAUTH 9009

#define SCHED_E_CANNOT_OPEN_TASK 2147750669

#define ERROR_DS_NAME_ERROR_RESOLVING 8469

#define ERROR_DS_REPLICATOR_ONLY 8370

#define XENROLL_E_KEY_NOT_EXPORTABLE 2148093952

#define ERROR_DS_GCVERIFY_ERROR 8417

#define FRS_ERR_STARTING_SERVICE 8002

#define OSS_OID_DLL_NOT_LINKED 2148085786

#define REGDB_E_INVALIDVALUE 2147746131

#define CLIENTSITE_E_LAST 2147746207

#define CONTEXT_E_SYNCH_TIMEOUT 2147803142

#define STG_E_SHAREVIOLATION 2147680288

#define CERT_E_EXPIRED 2148204801

#define ERROR_DS_CANT_RETRIEVE_ATTS 8481

#define ERROR_DS_EXISTS_IN_POSS_SUP 8395

#define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR 8595

#define RPC_E_CANTCALLOUT_ININPUTSYNCCALL 2147549453

#define CLASSFACTORY_S_LAST 262431

#define DISP_E_DIVBYZERO 2147614738

#define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027

#define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND 13013

#define ERROR_DS_DRA_REPL_PENDING 8477

#define ERROR_DS_OBJ_STRING_NAME_EXISTS 8305

#define SCARD_E_INVALID_ATR 2148532245

#define ERROR_LOGIN_WKSTA_RESTRICTION 1240

#define ERROR_CTX_WINSTATION_NAME_INVALID 7001

#define ERROR_SXS_XML_E_INVALIDATROOTLEVEL 14055

#define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK 14050

#define ERROR_INVALID_SPI_VALUE 1439

#define SEC_E_UNKNOWN_CREDENTIALS 2148074253

#define ERROR_SXS_XML_E_RESERVEDNAMESPACE 14066

#define ERROR_VOLUME_CONTAINS_SYS_FILES 4337

#define WSA_QOS_EPOLICYOBJ 11025

#define CRYPT_E_INVALID_MSG_TYPE 2148077572

#define ERROR_REGISTRY_CORRUPT 1015

#define DNS_ERROR_NOT_UNIQUE 9555

#define OLE_E_STATIC 2147745803

#define CLIPBRD_S_LAST 262623

#define SCHED_S_TASK_TERMINATED 267014

#define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD 8529

#define ERROR_CLUSTER_GUM_NOT_LOCKER 5085

#define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE 5089

#define ERROR_DS_LOCAL_ERROR 8251

#define CS_E_INVALID_PATH 2147746155

#define SPAPI_E_DI_BAD_PATH 2148467220

#define CLIENTSITE_S_FIRST 262544

#define CO_E_INCOMPATIBLESTREAMVERSION 2147549499

#define ERROR_DS_DRA_NAME_COLLISION 8458

#define COMADMIN_E_APP_FILE_VERSION 2148598793

#define RPC_S_UNSUPPORTED_TRANS_SYN 1730

#define ERROR_WMI_DP_NOT_FOUND 4204

#define ERROR_IPSEC_IKE_DROP_NO_RESPONSE 13813

#define ERROR_INVALID_FUNCTION 1

#define ERROR_DS_NO_SUCH_OBJECT 8240

#define ERROR_NO_WILDCARD_CHARACTERS 1417

#define RPC_E_SERVERFAULT 2147549445

#define ERROR_DS_OBJECT_RESULTS_TOO_LARGE 8248

#define ERROR_LOGON_SESSION_EXISTS 1363

#define ERROR_DS_CANT_DELETE 8398

#define DNS_ERROR_NO_MEMORY 14

#define RPC_S_NO_CONTEXT_AVAILABLE 1765

#define RPC_X_WRONG_STUB_VERSION 1829

#define XACT_E_NETWORK_TX_DISABLED 2147799076

#define NOERROR 0

#define ERROR_DS_EXISTS_IN_AUX_CLS 8393

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ 13836

#define ERROR_CLUSTER_MEMBERSHIP_HALT 5892

#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459

#define ERROR_INVALID_MESSAGEDEST 1218

#define ERROR_DS_NAME_ERROR_TRUST_REFERRAL 8583

#define ERROR_INCORRECT_ADDRESS 1241

#define ERROR_IS_SUBSTED 135

#define ERROR_INVALID_ENVIRONMENT 1805

#define ERROR_IPSEC_IKE_UNSUPPORTED_ID 13869

#define CLIENTSITE_S_LAST 262559

#define DNS_ERROR_NEED_WINS_SERVERS 9616

#define CO_E_INVALIDSID 2147549485

#define WSAEAFNOSUPPORT 10047

#define SEC_I_LOCAL_LOGON 590613

#define SPAPI_E_INVALID_DEVINST_NAME 2148467205

#define STG_E_OLDFORMAT 2147680516

#define SCHED_E_ACCOUNT_NAME_NOT_FOUND 2147750672

#define CRYPT_E_UNEXPECTED_MSG_TYPE 2148081674

#define ERROR_IPSEC_IKE_NOTCBPRIV 13851

#define MK_S_FIRST 262624

#define WSATRY_AGAIN 11002

#define COMADMIN_E_APP_FILE_READFAIL 2148598792

#define ERROR_INVALID_LIBRARY 4301

#define ERROR_INSTALL_FAILURE 1603

#define XACT_E_NOISORETAIN 2147799051

#define CRYPT_E_INVALID_NUMERIC_STRING 2148081696

#define CLASSFACTORY_E_LAST 2147746079

#define ERROR_KEY_DELETED 1018

#define ERROR_MEMBER_IN_ALIAS 1378

#define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE 14019

#define CRYPT_E_BAD_MSG 2148081677

#define ERROR_IPSEC_MM_POLICY_PENDING_DELETION 13021

#define TRUST_E_SYSTEM_ERROR 2148098049

#define OLEOBJ_E_FIRST 2147746176

#define ERROR_NETWORK_ACCESS_DENIED 65

#define SCARD_E_INVALID_PARAMETER 2148532228

#define ERROR_IPSEC_QM_POLICY_EXISTS 13000

#define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC 8580

#define RPC_S_FP_OVERFLOW 1771

#define ERROR_DS_COUNTING_AB_INDICES_FAILED 8428

#define CRYPT_E_ASN1_CORRUPT 2148086019

#define COMADMIN_E_REGDB_NOTINITIALIZED 2148598898

#define ERROR_CLUSTER_DATABASE_SEQMISMATCH 5083

#define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737

#define COMADMIN_E_REGISTERTLB 2148598832

#define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP 9612

#define ERROR_EXTENDED_ERROR 1208

#define ERROR_DS_LOW_DSA_VERSION 8568

#define ERROR_LOGON_SESSION_COLLISION 1366

#define WSANO_RECOVERY 11003

#define WSAESTALE 10070

#define SPAPI_E_SECTION_NAME_TOO_LONG 2148466690

#define COMADMIN_E_COMPFILE_GETCLASSOBJ 2148598822

#define CO_E_NOMATCHINGNAMEFOUND 2147549489

#define CRYPT_E_NOT_DECRYPTED 2148077578

#define ERROR_UNABLE_TO_CLEAN 4311

#define ERROR_DS_CLASS_NOT_DSA 8343

#define DISP_E_OVERFLOW 2147614730

#define CRYPT_E_NO_KEY_PROPERTY 2148081675

#define EVENT_E_LAST 2147746335

#define XACT_E_REPLAYREQUEST 2147799173

#define ERROR_APPHELP_BLOCK 1259

#define ERROR_IPSEC_IKE_INVALID_HASH_ALG 13871

#define CO_E_APPDIDNTREG 2147746302

#define ERROR_INSTALL_SERVICE_FAILURE 1601

#define SEC_E_TARGET_UNKNOWN 2148074243

#define DNS_ERROR_ZONE_CREATION_FAILED 9608

#define XACT_S_LOCALLY_OK 315402

#define ERROR_DS_INVALID_DMD 8360

#define WSA_QOS_EPROVSPECBUF 11018

#define E_OUTOFMEMORY 2147942414

#define COMADMIN_E_START_APP_DISABLED 2148598865

#define ERROR_BAD_NET_RESP 58

#define WSAEHOSTUNREACH 10065

#define TRUST_E_SUBJECT_NOT_TRUSTED 2148204548

#define DV_E_STATDATA 2147745895

#define ERROR_DS_NAME_TOO_MANY_PARTS 8347

#define WSAEPFNOSUPPORT 10046

#define ERROR_CONNECTION_ABORTED 1236

#define ERROR_NODE_NOT_AVAILABLE 5036

#define ERROR_CLUSTER_NODE_NOT_FOUND 5042

#define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE 5064

#define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE 8512

#define ERROR_CONTEXT_EXPIRED 1931

#define DISP_E_NONAMEDARGS 2147614727

#define ERROR_DS_INCORRECT_ROLE_OWNER 8210

#define ERROR_NO_VOLUME_ID 1173

#define CO_E_FAILEDTOGETSECCTX 2147549476

#define WSA_QOS_EFLOWCOUNT 11023

#define ERROR_DS_DUP_SCHEMA_ID_GUID 8381

#define DNS_ERROR_INVALID_DATA 13

#define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT 2147500068

#define SPAPI_E_INVALID_CLASS_INSTALLER 2148467213

#define ERROR_BAD_LOGON_SESSION_STATE 1365

#define ERROR_LIBRARY_OFFLINE 4305

#define CRYPT_E_ASN1_CONSTRAINT 2148086021

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT 1176

#define ERROR_INVALID_LOGON_HOURS 1328

#define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY 13840

#define ERROR_CLUSTER_NODE_ALREADY_MEMBER 5065

#define SCHED_E_ACCOUNT_DBASE_CORRUPT 2147750673

#define SPAPI_E_REMOTE_COMM_FAILURE 2148467233

#define ERROR_SET_POWER_STATE_FAILED 1141

#define SCARD_E_FILE_NOT_FOUND 2148532260

#define ERROR_OUT_OF_PAPER 28

#define CO_E_SERVER_PAUSED 2147500069

#define ERROR_IPSEC_IKE_UNKNOWN_DOI 13862

#define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP 5896

#define COMADMIN_E_PARTITION_MSI_ONLY 2148599833

#define SCARD_E_CARD_UNSUPPORTED 2148532252

#define ERROR_NODE_CANNOT_BE_CLUSTERED 5898

#define DNS_ERROR_DS_ZONE_ALREADY_EXISTS 9718

#define COMADMIN_E_COMP_MOVE_SOURCE 2148599836

#define ERROR_IPSEC_IKE_SA_DELETED 13807

#define ERROR_NO_TRACKING_SERVICE 1172

#define ERROR_EVENTLOG_CANT_START 1501

#define ERROR_INSTALL_TRANSFORM_REJECTED 1644

#define ERROR_INVALID_EXE_SIGNATURE 191

#define CS_E_INVALID_VERSION 2147746151

#define ERROR_NO_MORE_FILES 18

#define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE 13841

#define ERROR_FUNCTION_NOT_CALLED 1626

#define ERROR_SERVICE_NEVER_STARTED 1077

#define DISP_E_PARAMNOTOPTIONAL 2147614735

#define CONTEXT_S_LAST 319535

#define XACT_E_INDOUBT 2147799062

#define ERROR_IPSEC_IKE_NEGOTIATION_PENDING 13803

#define RPC_E_CALL_CANCELED 2147549186

#define CO_E_CLASSSTRING 2147746291

#define XACT_E_HEURISTICDANGER 2147799047

#define WSA_E_NO_MORE 10110

#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795

#define CONTEXT_E_ABORTING 2147803139

#define ERROR_DS_MISSING_REQUIRED_ATT 8316

#define ERROR_DS_SRC_GUID_MISMATCH 8488

#define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND 5891

#define ERROR_INVALID_BLOCK_LENGTH 1106

#define ERROR_NO_TRUST_LSA_SECRET 1786

#define CERTSRV_E_SMIME_REQUIRED 2148091909

#define MK_S_HIM 262629

#define RPC_S_INTERFACE_NOT_FOUND 1759

#define ERROR_EVENTLOG_FILE_CHANGED 1503

#define ERROR_IPSEC_IKE_PROCESS_ERR_PROP 13831

#define XACT_S_MADECHANGESINFORM 315398

#define FRS_ERR_AUTHENTICATION 8008

#define ERROR_CLUSTER_LAST_INTERNAL_NETWORK 5066

#define ERROR_ALREADY_INITIALIZED 1247

#define ERROR_WINDOW_NOT_COMBOBOX 1423

#define STG_E_SHAREREQUIRED 2147680518

#define ERROR_COUNTER_TIMEOUT 1121

#define ERROR_DS_SEC_DESC_TOO_SHORT 8353

#define ERROR_INVALID_ACL 1336

#define DV_E_TYMED 2147745897

#define E_PENDING 2147483658

#define RPC_S_PRF_ELT_NOT_ADDED 1926

#define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA 8303

#define XACT_S_DEFECT 315393

#define XACT_E_NOTCURRENT 2147799053

#define ERROR_DISK_FULL 112

#define ERROR_ALREADY_ASSIGNED 85

#define ERROR_CLUSTER_PARAMETER_MISMATCH 5897

#define ERROR_GROUP_NOT_ONLINE 5014

#define CO_E_FAILEDTOOPENPROCESSTOKEN 2147549500

#define XACT_E_REENLISTTIMEOUT 2147799070

#define XACT_E_CLERKNOTFOUND 2147799168

#define CO_E_FAILEDTOCLOSEHANDLE 2147549496

#define ERROR_CANNOT_MAKE 82

#define DNS_INFO_NO_RECORDS 9501

#define ERROR_DS_DRA_BAD_NC 8440

#define CERT_E_CHAINING 2148204810

#define RPC_S_INVALID_NAME_SYNTAX 1736

#define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL 14048

#define FACILITY_SXS 23

#define ERROR_INSTALL_SOURCE_ABSENT 1612

#define XACT_E_TMNOTAVAILABLE 2147799067

#define COMQC_E_BAD_MESSAGE 2148599300

#define CONTEXT_E_LAST 2147803183

#define WSASYSCALLFAILURE 10107

#define ERROR_NO_ASSOCIATION 1155

#define SCARD_E_SYSTEM_CANCELLED 2148532242

#define E_INVALIDARG 2147942487

#define FRS_ERR_SYSVOL_POPULATE 8013

#define ERROR_DS_DRA_OUT_OF_MEM 8446

#define ERROR_DS_CANT_ADD_ATT_VALUES 8320

#define ERROR_DS_PROTOCOL_ERROR 8225

#define CO_E_START_SERVICE_FAILURE 2147500060

#define ERROR_DS_NONEXISTENT_MUST_HAVE 8388

#define EVENT_E_QUERYFIELD 2147746308

#define OSS_TRACE_FILE_ALREADY_OPEN 2148085788

#define RPC_S_STRING_TOO_LONG 1743

#define OLE_E_CANT_BINDTOSOURCE 2147745802

#define DNS_ERROR_NBSTAT_INIT_FAILED 9617

#define ERROR_DS_DRA_SCHEMA_CONFLICT 8543

#define CACHE_S_SAMECACHE 262513

#define SEC_E_WRONG_CREDENTIAL_HANDLE 2148074294

#define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER 8584

#define SCARD_E_NO_SMARTCARD 2148532236

#define ERROR_NO_MORE_DEVICES 1248

#define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define ERROR_INVALID_NAME 123

#define ERROR_NO_MORE_SEARCH_HANDLES 113

#define DNS_ERROR_OPERATION_BASE 9750

#define ERROR_NODE_CANT_HOST_RESOURCE 5071

#define ERROR_SAM_INIT_FAILURE 8541

#define DNS_STATUS_FQDN 9557

#define OLE_S_STATIC 262145

#define ERROR_SPL_NO_STARTDOC 3003

#define ERROR_WMI_INSTANCE_NOT_FOUND 4201

#define ERROR_BAD_NET_NAME 67

#define SPAPI_E_INVALID_HWPROFILE 2148467216

#define OSS_FATAL_ERROR 2148085778

#define CO_E_SERVER_EXEC_FAILURE 2148007941

#define ERROR_DISK_CORRUPT 1393

#define SEC_E_SMARTCARD_CERT_REVOKED 2148074321

#define ERROR_DS_THREAD_LIMIT_EXCEEDED 8587

#define SEC_E_DECRYPT_FAILURE 2148074288

#define ERROR_DS_WRONG_OM_OBJ_CLASS 8476

#define ERROR_IPSEC_MM_FILTER_NOT_FOUND 13007

#define ERROR_NONE_MAPPED 1332

#define DNS_ERROR_RCODE_YXDOMAIN 9006

#define FRS_ERR_INTERNAL 8005

#define ERROR_INVALID_COLORSPACE 2017

#define EPT_S_CANT_CREATE 1899

#define ERROR_HWNDS_HAVE_DIFF_PARENT 1441

#define ERROR_DECRYPTION_FAILED 6001

#define ERROR_CTX_CLIENT_LICENSE_IN_USE 7052

#define ERROR_NO_USER_KEYS 6006

#define RPC_S_NO_MORE_BINDINGS 1806

#define OLE_E_ADVF 2147745793

#define COMADMIN_E_USERPASSWDNOTVALID 2148598804

#define ERROR_JOURNAL_NOT_ACTIVE 1179

#define ERROR_DS_REFERRAL 8235

#define ERROR_NO_SYSTEM_MENU 1437

#define ERROR_TAG_NOT_PRESENT 2013

#define STG_E_CSS_KEY_NOT_ESTABLISHED 2147681032

#define ERROR_CTX_MODEM_RESPONSE_VOICE 7016

#define ERROR_HOOK_TYPE_NOT_ALLOWED 1458

#define RPC_X_INVALID_ES_ACTION 1827

#define SEC_E_MAX_REFERRALS_EXCEEDED 2148074296

#define ERROR_FAIL_I24 83

#define ERROR_SXS_DUPLICATE_TLBID 14025

#define VIEW_S_FIRST 262464

#define ERROR_LOG_FILE_FULL 1502

#define ERROR_IO_INCOMPLETE 996

#define OLE_E_PROMPTSAVECANCELLED 2147745804

#define ERROR_DS_DIFFERENT_REPL_EPOCHS 8593

#define ERROR_NO_SUCH_MEMBER 1387

#define ERROR_CANT_DELETE_LAST_ITEM 4335

#define ERROR_BAD_CONFIGURATION 1610

#define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION 8492

#define ERROR_NO_UNICODE_TRANSLATION 1113

#define ERROR_INSTALL_USEREXIT 1602

#define CRYPT_E_ATTRIBUTES_MISSING 2148077583

#define COMADMIN_E_BASE_PARTITION_ONLY 2148598864

#define CLIPBRD_S_FIRST 262608

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME 14080

#define DNS_ERROR_FORWARDER_ALREADY_EXISTS 9619

#define COMADMIN_E_AMBIGUOUS_PARTITION_NAME 2148598877

#define SCHED_S_TASK_NO_MORE_RUNS 267012

#define WSAESHUTDOWN 10058

#define ERROR_INVALID_DRIVE 15

#define ERROR_SERVICE_SPECIFIC_ERROR 1066

#define RPC_S_NAME_SERVICE_UNAVAILABLE 1762

#define CS_E_NETWORK_ERROR 2147746156

#define ERROR_TAG_NOT_FOUND 2012

#define OSS_NULL_FCN 2148085781

#define NTE_PROV_TYPE_NO_MATCH 2148073499

#define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781

#define COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE 2148598863

#define ERROR_DEPENDENCY_NOT_ALLOWED 5069

#define ERROR_UNKNOWN_PRINTPROCESSOR 1798

#define ERROR_IPSEC_IKE_INVALID_PAYLOAD 13843

#define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET 8464

#define ERROR_DS_DRA_BAD_DN 8439

#define WAIT_TIMEOUT 258

#define CRYPT_E_ASN1_MEMORY 2148086022

#define ERROR_SHARED_POLICY 8218

#define ERROR_DATABASE_FULL 4314

#define ERROR_DS_INVALID_GROUP_TYPE 8513

#define RPC_S_INTERNAL_ERROR 1766

#define ERROR_UNEXPECTED_OMID 4334

#define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION 8511

#define RPC_E_SERVERCALL_RETRYLATER 2147549450

#define SCARD_W_UNRESPONSIVE_CARD 2148532326

#define RPC_E_TOO_LATE 2147549465

#define DNS_STATUS_SINGLE_PART_NAME 9559

#define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789

#define ERROR_TOO_MANY_POSTS 298

#define RPC_E_UNEXPECTED 2147614719

#define ERROR_IPSEC_MM_FILTER_EXISTS 13006

#define ERROR_DS_NOT_INSTALLED 8200

#define XACT_E_ISOLATIONLEVEL 2147799048

#define ERROR_WMI_GUID_DISCONNECTED 4207

#define CO_E_IIDREG_INCONSISTENT 2147500064

#define CO_E_NOCOOKIES 2147803178

#define ERROR_BADDB 1009

#define CO_E_THREADINGMODEL_CHANGED 2147803176

#define ERROR_ONLY_IF_CONNECTED 1251

#define ERROR_LOCKED 212

#define ERROR_INSTALL_UI_FAILURE 1621

#define DNS_INFO_ADDED_LOCAL_WINS 9753

#define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE 7014

#define E_HANDLE 2147942406

#define ERROR_QUORUM_DISK_NOT_FOUND 5086

#define CO_E_BAD_PATH 2148007940

#define ERROR_UNKNOWN_PROPERTY 1608

#define CRYPT_E_NO_PROVIDER 2148081670

#define ERROR_NEGATIVE_SEEK 131

#define CERTSRV_E_SIGNATURE_REJECTED 2148091915

#define ERROR_BAD_QUERY_SYNTAX 1615

#define ERROR_DISCARDED 157

#define CONVERT10_E_STG_NO_STD_STREAM 2147746245

#define ERROR_EVENTLOG_FILE_CORRUPT 1500

#define ERROR_DS_HAVE_PRIMARY_MEMBERS 8521

#define ERROR_DS_SAM_INIT_FAILURE_CONSOLE 8562

#define ERROR_EA_TABLE_FULL 277

#define ERROR_WMI_SERVER_UNAVAILABLE 4208

#define CLIPBRD_E_LAST 2147746271

#define COMADMIN_E_MIG_VERSIONNOTSUPPORTED 2148598912

#define ERROR_GEN_FAILURE 31

#define SEC_E_BUFFER_TOO_SMALL 2148074273

#define DNS_ERROR_RECORD_FORMAT 9702

#define ERROR_WRONG_DISK 34

#define COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME 2148598871

#define COMADMIN_E_REGFILE_CORRUPT 2148598843

#define SEVERITY_ERROR 1

#define MSDTC_E_DUPLICATE_RESOURCE 2148599553

#define SCARD_E_WRITE_TOO_MANY 2148532264

#define ERROR_DS_INVALID_DN_SYNTAX 8242

#define CO_E_NOMATCHINGSIDFOUND 2147549487

#define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE 14079

#define ERROR_INVALID_KEYBOARD_HANDLE 1457

#define ERROR_DS_LINK_ID_NOT_AVAILABLE 8577

#define WSA_QOS_ADMISSION_FAILURE 11010

#define WSA_E_CANCELLED 10111

#define CERTSRV_E_ARCHIVED_KEY_REQUIRED 2148091908

#define CO_E_EXCEEDSYSACLLIMIT 2147549497

#define RPC_E_INVALID_CALLDATA 2147549452

#define ERROR_TRANSPORT_FULL 4328

#define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY 8530

#define SEC_E_QOP_NOT_SUPPORTED 2148074250

#define RPC_S_OUT_OF_RESOURCES 1721

#define NTE_KEYSET_ENTRY_BAD 2148073498

#define RPC_S_CALLPENDING 2147549461

#define ERROR_EXCL_SEM_ALREADY_OWNED 101

#define RPC_E_INVALID_DATAPACKET 2147549193

#define ERROR_WMI_ALREADY_DISABLED 4212

#define DNS_ERROR_MASK 9000

#define ERROR_BAD_PIPE 230

#define ERROR_DS_SEC_DESC_INVALID 8354

#define DATA_S_FIRST 262448

#define DNS_ERROR_DATAFILE_PARSING 9655

#define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER 7013

#define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE 13839

#define CRYPT_E_ASN1_BADTAG 2148086027

#define ERROR_BROKEN_PIPE 109

#define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME 14027

#define NTE_DOUBLE_ENCRYPT 2148073490

#define CO_E_INIT_RPC_CHANNEL 2147500042

#define CRYPT_E_NO_VERIFY_USAGE_DLL 2148081703

#define ERROR_BUFFER_OVERFLOW 111

#define COMQC_E_APPLICATION_NOT_QUEUED 2148599296

#define ERROR_DESTINATION_ELEMENT_FULL 1161

#define ERROR_DEVICE_IN_USE 2404

#define ERROR_SXS_XML_E_BADCHARINSTRING 14034

#define OSS_ACCESS_SERIALIZATION_ERROR 2148085779

#define SCHED_S_TASK_RUNNING 267009

#define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 8572

#define CO_E_SERVER_START_TIMEOUT 2147500062

#define CERTSRV_E_INVALID_CA_CERTIFICATE 2148089861

#define ERROR_NO_SUCH_PACKAGE 1364

#define TYPE_E_NAMECONFLICT 2147647533

#define SCARD_W_UNPOWERED_CARD 2148532327

#define COMADMIN_E_CAT_WRONGAPPBITNESS 2148598916

#define XENROLL_E_CANNOT_ADD_ROOT_CERT 2148093953

#define ERROR_DS_GENERIC_ERROR 8341

#define ERROR_DRIVE_MEDIA_MISMATCH 4303

#define ERROR_NETNAME_DELETED 64

#define OSS_BERDER_DLL_NOT_LINKED 2148085802

#define XACT_E_WRONGUOW 2147799058

#define ERROR_DS_NOT_SUPPORTED_SORT_ORDER 8570

#define ERROR_ACTIVE_CONNECTIONS 2402

#define DNS_ERROR_ZONE_NOT_SECONDARY 9613

#define REGDB_S_LAST 262495

#define ERROR_UNABLE_TO_REMOVE_REPLACED 1175

#define ERROR_BAD_TOKEN_TYPE 1349

#define COMADMIN_E_COMPFILE_NOREGISTRAR 2148598836

#define ERROR_HOST_UNREACHABLE 1232

#define XACT_E_COMMITPREVENTED 2147799043

#define SCARD_E_NO_ACCESS 2148532263

#define ERROR_LICENSE_QUOTA_EXCEEDED 1395

#define ERROR_NO_PROMOTION_ACTIVE 8222

#define ERROR_INVALID_GROUPNAME 1209

#define ERROR_INVALID_SEGMENT_NUMBER 180

#define ERROR_DS_UNKNOWN_ERROR 8431

#define ERROR_PIPE_NOT_CONNECTED 233

#define CRYPT_E_CONTROL_TYPE 2148077580

#define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED 14016

#define ERROR_GENERIC_NOT_MAPPED 1360

#define ERROR_HANDLE_EOF 38

#define ERROR_EA_LIST_INCONSISTENT 255

#define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE 14042

#define ERROR_DS_CANT_MOD_SYSTEM_ONLY 8369

#define ERROR_DS_SCHEMA_ALLOC_FAILED 8415

#define ERROR_EA_ACCESS_DENIED 994

#define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX 8416

#define MK_S_REDUCED_TO_SELF 262626

#define ERROR_CLUSTER_NODE_DOWN 5050

#define CRYPT_E_ASN1_OVERFLOW 2148086023

#define NTE_BAD_PROVIDER 2148073491

#define ERROR_DS_SINGLE_VALUE_CONSTRAINT 8321

#define ERROR_SERVICE_NOT_IN_EXE 1083

#define COMADMIN_E_NOUSER 2148598799

#define ERROR_DS_DRA_DB_ERROR 8451

#define CRYPT_E_OSS_ERROR 2148085760

#define CRYPT_E_INVALID_IA5_STRING 2148081698

#define COMADMIN_E_CAN_NOT_EXPORT_SYS_APP 2148598860

#define ERROR_NO_VOLUME_LABEL 125

#define SPAPI_E_DI_POSTPROCESSING_REQUIRED 2148467238

#define RPC_S_INVALID_NETWORK_OPTIONS 1724

#define ERROR_INSTALL_PACKAGE_REJECTED 1625

#define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX 8377

#define ERROR_DS_CANT_MOVE_RESOURCE_GROUP 8499

#define SCARD_E_ICC_INSTALLATION 2148532256

#define ERROR_NON_DOMAIN_SID 1258

#define ERROR_CTX_NOT_CONSOLE 7038

#define ERROR_MUTUAL_AUTH_FAILED 1397

#define ERROR_UNABLE_TO_LOCK_MEDIA 1108

#define FRS_ERR_PARENT_INSUFFICIENT_PRIV 8009

#define E_UNEXPECTED 2147549183

#define ERROR_DS_NC_STILL_HAS_DSAS 8546

#define ERROR_OPEN_FILES 2401

#define ERROR_IO_PENDING 997

#define ERROR_INVALID_OPERATION 4317

#define ERROR_DUP_DOMAINNAME 1221

#define ERROR_DS_CHILDREN_EXIST 8332

#define ERROR_PRINT_CANCELLED 63

#define RPC_S_INVALID_NET_ADDR 1707

#define ERROR_DS_NAMING_VIOLATION 8247

#define ERROR_ALREADY_EXISTS 183

#define ERROR_NONPAGED_SYSTEM_RESOURCES 1451

#define COMADMIN_E_OBJECTINVALID 2148598786

#define ERROR_CLUSTER_INSTANCE_ID_MISMATCH 5893

#define DNS_ERROR_CNAME_LOOP 9707

#define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031

#define ERROR_CLEANER_CARTRIDGE_SPENT 4333

#define ERROR_ENVVAR_NOT_FOUND 203

#define ERROR_INVALID_COMBOBOX_MESSAGE 1422

#define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP 13809

#define CERTSRV_E_PROPERTY_EMPTY 2148089860

#define WSAEPROTONOSUPPORT 10043

#define CERTSRV_E_KEY_LENGTH 2148091921

#define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND 13009

#define WSAEDISCON 10101

#define ERROR_NO_SUCH_SITE 1249

#define FRS_ERR_SYSVOL_IS_BUSY 8015

#define SEC_E_CERT_EXPIRED 2148074280

#define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED 8231

#define ERROR_SAME_DRIVE 143

#define ERROR_LOGON_FAILURE 1326

#define ERROR_CLUSTER_NODE_UP 5056

#define SPAPI_E_NO_SUCH_INTERFACE_CLASS 2148467230

#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005

#define ERROR_INSTALL_NOTUSED 1634

#define ERROR_INVALID_MESSAGENAME 1217

#define MK_E_NOOBJECT 2147746277

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE 8495

#define ERROR_NOT_READY 21

#define ERROR_PRIVATE_DIALOG_INDEX 1415

#define ERROR_CTX_WINSTATION_NOT_FOUND 7022

#define ERROR_DEVICE_REMOVED 1617

#define ERROR_DS_INVALID_ROLE_OWNER 8366

#define REGDB_E_WRITEREGDB 2147746129

#define OSS_TYPE_NOT_SUPPORTED 2148085790

#define MK_S_LAST 262639

#define XACT_E_ALREADYOTHERSINGLEPHASE 2147799040

#define ERROR_INVALID_MEMBER 1388

#define ERROR_DS_CANT_REMOVE_CLASS_CACHE 8404

#define ERROR_INVALID_TABLE 1628

#define NTE_TEMPORARY_PROFILE 2148073508

#define ERROR_SXS_THREAD_QUERIES_DISABLED 14010

#define ERROR_SXS_XML_E_INVALIDENCODING 14067

#define CO_E_THREADPOOL_CONFIG 2147500081

#define ERROR_CURRENT_DOMAIN_NOT_ALLOWED 1399

#define ERROR_DS_SRC_NAME_MISMATCH 8484

#define ERROR_LOGON_NOT_GRANTED 1380

#define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116

#define ERROR_BAD_INHERITANCE_ACL 1340

#define NTE_BAD_HASH_STATE 2148073484

#define RPC_S_UNKNOWN_AUTHN_LEVEL 1748

#define ERROR_BAD_RECOVERY_POLICY 6012

#define DNS_ERROR_RCODE 9504

#define COMADMIN_E_CAT_INVALID_PARTITION_NAME 2148598872

#define COMADMIN_E_COMP_MOVE_LOCKED 2148598829

#define CS_E_PACKAGE_NOTFOUND 2147746148

#define WSA_QOS_RECEIVERS 11005

#define ERROR_DS_CONSTRUCTED_ATT_MOD 8475

#define ERROR_UNKNOWN_PORT 1796

#define ERROR_INVALID_FLAG_NUMBER 186

#define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD 8507

#define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM 13812

#define ERROR_RESMON_CREATE_FAILED 5017

#define DNS_ERROR_AXFR 9752

#define SEC_E_INSUFFICIENT_MEMORY 2148074240

#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809

#define ERROR_SERVICE_LOGON_FAILED 1069

#define ERROR_MORE_WRITES 1120

#define ERROR_PRINT_MONITOR_IN_USE 3008

#define SEC_E_INVALID_HANDLE 2148074241

#define COMADMIN_E_SYSTEMAPP 2148598835

#define ERROR_CLEANER_SLOT_SET 4331

#define COMADMIN_E_CANTCOPYFILE 2148598797

#define CRYPT_E_NO_DECRYPT_CERT 2148081676

#define ERROR_NOT_LOGGED_ON 1245

#define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH 8540

#define ERROR_SXS_XML_E_MISSINGEQUALS 14073

#define DRAGDROP_E_NOTREGISTERED 2147746048

#define XACT_E_DEST_TMNOTAVAILABLE 2147799074

#define ERROR_INSTALL_PACKAGE_VERSION 1613

#define ERROR_RESOURCE_NOT_ONLINE 5004

#define CO_E_IIDSTRING 2147746292

#define ERROR_SXS_WRONG_SECTION_TYPE 14009

#define RPC_S_SERVER_UNAVAILABLE 1722

#define CERTSRV_E_TEMPLATE_CONFLICT 2148091906

#define OSS_TOO_LONG 2148085776

#define SPAPI_E_SECTION_NOT_FOUND 2148466945

#define CO_E_FAILEDTOQUERYCLIENTBLANKET 2147549480

#define MSSIPOTF_E_FAILED_POLICY 2148102160

#define CO_E_NOT_SUPPORTED 2147500065

#define COMQC_E_NO_IPERSISTSTREAM 2148599299

#define RPC_S_ALREADY_LISTENING 1713

#define DNS_ERROR_DATAFILE_OPEN_FAILURE 9653

#define NTE_PERM 2148073488

#define DNS_ERROR_DP_DOES_NOT_EXIST 9901

#define WSANO_DATA 11004

#define RPC_E_DISCONNECTED 2147549448

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE 8579

#define ERROR_DS_NAME_TOO_LONG 8348

#define CRYPT_E_UNKNOWN_ALGO 2148077570

#define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET 14011

#define RPC_S_FP_UNDERFLOW 1770

#define ERROR_INVALID_LEVEL 124

#define ERROR_INVALID_VERIFY_SWITCH 118

#define ERROR_DIR_NOT_EMPTY 145

#define RPC_S_UNKNOWN_AUTHN_SERVICE 1747

#define MK_E_NOSTORAGE 2147746285

#define ERROR_DS_CANT_FIND_DSA_OBJ 8419

#define RPC_X_SS_HANDLES_MISMATCH 1778

#define SPAPI_E_DI_DO_DEFAULT 2148467214

#define RPC_E_INVALIDMETHOD 2147549447

#define RPC_E_SERVERCALL_REJECTED 2147549451

#define ERROR_NULL_LM_PASSWORD 1304

#define ERROR_CLUSTER_INVALID_REQUEST 5048

#define WSAESOCKTNOSUPPORT 10044

#define TRUST_E_PROVIDER_UNKNOWN 2148204545

#define ERROR_CTX_MODEM_INF_NOT_FOUND 7009

#define SPAPI_E_MACHINE_UNAVAILABLE 2148467234

#define CONTEXT_E_NOCONTEXT 2147803140

#define CLIPBRD_E_CANT_OPEN 2147746256

#define ERROR_DS_ATT_ALREADY_EXISTS 8318

#define ERROR_DS_NC_MUST_HAVE_NC_PARENT 8494

#define CO_E_NOTINITIALIZED 2147746288

#define ERROR_DS_DRA_CONNECTION_FAILED 8444

#define ERROR_SPECIAL_GROUP 1372

#define ERROR_RXACT_INVALID_STATE 1369

#define ERROR_DEVICE_NOT_PARTITIONED 1107

#define ERROR_DS_DUP_RDN 8378

#define FRS_ERR_STOPPING_SERVICE 8003

#define ERROR_RESOURCE_NAME_NOT_FOUND 1814

#define ERROR_DS_MISSING_FSMO_SETTINGS 8434

#define SCARD_E_UNKNOWN_RES_MNG 2148532267

#define ERROR_INVALID_FORM_NAME 1902

#define OSS_OUT_MEMORY 2148085768

#define ERROR_IOPL_NOT_ENABLED 197

#define ERROR_ACCESS_DISABLED_BY_POLICY 1260

#define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT 5088

#define SEC_E_CONTEXT_EXPIRED 2148074263

#define WSA_QOS_EFLOWDESC 11026

#define NTE_SYS_ERR 2148073505

#define ERROR_CTX_CLIENT_LICENSE_NOT_SET 7053

#define RPC_S_NO_PRINC_NAME 1822

#define ERROR_DS_NTDSCRIPT_PROCESS_ERROR 8592

#define ERROR_BUSY 170

#define RPC_S_PROCNUM_OUT_OF_RANGE 1745

#define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032

#define ERROR_IPSEC_IKE_PEER_CRL_FAILED 13848

#define SPAPI_E_INVALID_REG_PROPERTY 2148467209

#define MSSIPOTF_E_TABLE_CHECKSUM 2148102156

#define ERROR_IPSEC_IKE_LOAD_FAILED 13876

#define ERROR_SXS_XML_E_INVALID_UNICODE 14049

#define SPAPI_E_DEVINFO_NOT_REGISTERED 2148467208

#define ERROR_NO_USER_SESSION_KEY 1394

#define COMADMIN_E_APPLID_MATCHES_CLSID 2148598854

#define CRYPT_E_NO_REVOCATION_CHECK 2148081682

#define SCHED_S_TASK_DISABLED 267010

#define ERROR_DS_DRA_INCONSISTENT_DIT 8443

#define ERROR_DS_REFERRAL_LIMIT_EXCEEDED 8260

#define ERROR_UNKNOWN_PRINT_MONITOR 3000

#define CAT_E_CATIDNOEXIST 2147746144

#define ERROR_PASSWORD_MUST_CHANGE 1907

#define RPC_E_CLIENT_CANTMARSHAL_DATA 2147549195

#define CLIPBRD_E_CANT_EMPTY 2147746257

#define RPC_S_INVALID_ENDPOINT_FORMAT 1706

#define SCARD_E_PROTO_MISMATCH 2148532239

#define RPC_E_CANTCALLOUT_AGAIN 2147549201

#define STG_E_REVERTED 2147680514

#define ERROR_NOT_CHILD_WINDOW 1442

#define ERROR_DS_CANT_RETRIEVE_CHILD 8422

#define ERROR_DS_NOT_CLOSEST 8588

#define CO_E_ACTIVATIONFAILED 2147803169

#define ERROR_NET_WRITE_FAULT 88

#define WSAENOTCONN 10057

#define ERROR_IPSEC_IKE_ATTRIB_FAIL 13802

#define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA 8306

#define ERROR_IPSEC_IKE_INVALID_FILTER 13858

#define SEC_E_REVOCATION_OFFLINE_C 2148074323

#define ERROR_IPSEC_IKE_NO_POLICY 13825

#define CONVERT10_E_OLESTREAM_PUT 2147746241

#define DNS_ERROR_BAD_PACKET 9502

#define ERROR_DS_GOVERNSID_MISSING 8410

#define CACHE_S_LAST 262527

#define ERROR_INVALID_ACCEL_HANDLE 1403

#define OLE_E_LAST 2147746047

#define CERT_E_INVALID_NAME 2148204820

#define CRYPT_E_REVOKED 2148081680

#define SPAPI_E_INVALID_CLASS 2148467206

#define ERROR_REDIR_PAUSED 72

#define RPC_S_NO_ENTRY_NAME 1735

#define ERROR_CONTROLLING_IEPORT 4329

#define RPC_E_OUT_OF_RESOURCES 2147549441

#define OLE_S_FIRST 262144

#define CRYPT_E_AUTH_ATTR_MISSING 2148077574

#define MK_E_UNAVAILABLE 2147746275

#define OSS_COMPARATOR_CODE_NOT_LINKED 2148085797

#define ERROR_SXS_KEY_NOT_FOUND 14007

#define ERROR_MESSAGE_SYNC_ONLY 1159

#define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR 13842

#define COMADMIN_E_CANTRECYCLESERVICEAPPS 2148599825

#define ERROR_INVALID_PRIORITY 1800

#define CRYPT_I_NEW_PROTECTION_REQUIRED 593938

#define RPC_E_CANTTRANSMIT_CALL 2147549194

#define ERROR_CTX_LICENSE_CLIENT_INVALID 7055

#define COMADMIN_E_APP_FILE_WRITEFAIL 2148598791

#define CERTSRV_E_ENCODING_LENGTH 2148089863

#define ERROR_DOMAIN_CONTROLLER_EXISTS 1250

#define ERROR_UNABLE_TO_LOAD_MEDIUM 4324

#define TYPE_E_CANTLOADLIBRARY 2147654730

#define SCARD_E_UNKNOWN_CARD 2148532237

#define SCARD_W_CHV_BLOCKED 2148532332

#define DNS_ERROR_NODE_IS_CNAME 9708

#define SPAPI_E_BAD_INTERFACE_INSTALLSECT 2148467229

#define ERROR_DS_INVALID_SEARCH_FLAG 8500

#define DNS_ERROR_DS_UNAVAILABLE 9717

#define STG_E_BADBASEADDRESS 2147680528

#define ERROR_SETMARK_DETECTED 1103

#define ERROR_DIR_NOT_ROOT 144

#define ERROR_PROTOCOL_UNREACHABLE 1233

#define OSS_API_DLL_NOT_LINKED 2148085801

#define STG_E_OLDDLL 2147680517

#define DRAGDROP_E_ALREADYREGISTERED 2147746049

#define CO_E_LOOKUPACCNAMEFAILED 2147549490

#define SPAPI_E_SET_SYSTEM_RESTORE_POINT 2148467254

#define OSS_MUTEX_NOT_CREATED 2148085805

#define STG_S_MONITORING 197123

#define ERROR_NOT_ALL_ASSIGNED 1300

#define SEC_E_PKINIT_CLIENT_FAILURE 2148074324

#define ERROR_PRODUCT_VERSION 1638

#define ERROR_FULLSCREEN_MODE 1007

#define ERROR_DS_PDC_OPERATION_IN_PROGRESS 8490

#define ERROR_LOCK_FAILED 167

#define ERROR_IPSEC_IKE_DH_FAILURE 13864

#define RPC_S_OBJECT_NOT_FOUND 1710

#define ERROR_GROUP_NOT_FOUND 5013

#define ERROR_PRINTER_ALREADY_EXISTS 1802

#define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT 8582

#define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME 14022

#define SEC_E_ENCRYPT_FAILURE 2148074281

#define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM 8346

#define ERROR_DS_DRA_OBJ_NC_MISMATCH 8545

#define CO_E_NOIISINTRINSICS 2147803177

#define REGDB_S_FIRST 262480

#define ERROR_DS_DRA_GENERIC 8436

#define ERROR_RPL_NOT_ALLOWED 4006

#define TYPE_E_FIELDNOTFOUND 2147647511

#define ERROR_SXS_XML_E_UNCLOSEDTAG 14052

#define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE 8503

#define ERROR_DS_DUP_LDAP_DISPLAY_NAME 8382

#define ERROR_SXS_XML_E_MISSINGWHITESPACE 14037

#define CRYPT_E_ASN1_ERROR 2148086016

#define ERROR_CONNECTED_OTHER_PASSWORD 2108

#define RPC_E_SERVER_CANTMARSHAL_DATA 2147549197

#define COMADMIN_E_KEYMISSING 2148598787

#define DV_E_LINDEX 2147745896

#define XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND 2148093954

#define CERTSRV_E_ENROLL_DENIED 2148089873

#define XACT_E_PARTNER_NETWORK_TX_DISABLED 2147799077

#define ERROR_SXS_XML_E_BADSTARTNAMECHAR 14032

#define ERROR_BAD_PATHNAME 161

#define ERROR_DS_AUTHORIZATION_FAILED 8599

#define ERROR_IPSEC_IKE_QUEUE_DROP_MM 13811

#define ERROR_NO_SUCH_LOGON_SESSION 1312

#define DNS_ERROR_RCODE_NO_ERROR 0

#define CRYPT_E_REVOCATION_OFFLINE 2148081683

#define WSA_QOS_SENDERS 11006

#define FRS_ERR_INTERNAL_API 8004

#define SPAPI_E_SCE_DISABLED 2148467256

#define ERROR_DS_ILLEGAL_MOD_OPERATION 8311

#define MSSIPOTF_E_FILE_CHECKSUM 2148102157

#define ERROR_BAD_DESCRIPTOR_FORMAT 1361

#define CO_E_MSI_ERROR 2147500067

#define NTE_OP_OK 0

#define CO_E_CLRNOTAVAILABLE 2147500072

#define COMADMIN_E_CANTMAKEINPROCSERVICE 2148599828

#define ERROR_RESOURCE_NOT_FOUND 5007

#define MK_E_INVALIDEXTENSION 2147746278

#define SEC_E_OK 0

#define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE 9719

#define ERROR_NOT_LOCKED 158

#define ERROR_DIR_EFS_DISALLOWED 6010

#define FACILITY_DPLAY 21

#define ERROR_WINDOW_NOT_DIALOG 1420

#define CRYPT_E_NOT_FOUND 2148081668

#define ERROR_BAD_FORMAT 11

#define ERROR_ALL_NODES_NOT_AVAILABLE 5037

#define EVENT_E_NOT_ALL_REMOVED 2147746315

#define ERROR_FUNCTION_FAILED 1627

#define COMADMIN_E_START_APP_NEEDS_COMPONENTS 2148598856

#define WSAECANCELLED 10103

#define ERROR_ACCOUNT_RESTRICTION 1327

#define ERROR_DS_REFUSING_FSMO_ROLES 8433

#define ERROR_IPSEC_IKE_GETSPIFAIL 13857

#define ERROR_MENU_ITEM_NOT_FOUND 1456

#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908

#define CONTEXT_S_FIRST 319488

#define STG_E_TOOMANYOPENFILES 2147680260

#define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS 5075

#define ERROR_DS_OUT_OF_SCOPE 8338

#define ERROR_TOO_MANY_SEMAPHORES 100

#define ERROR_PRINTER_HAS_JOBS_QUEUED 3009

#define CRYPT_E_STREAM_INSUFFICIENT_DATA 2148077585

#define ERROR_OUTOFMEMORY 14

#define DNS_ERROR_INVALID_IP_ADDRESS 9552

#define SCARD_E_CERTIFICATE_UNAVAILABLE 2148532269

#define ERROR_DS_STRONG_AUTH_REQUIRED 8232

#define STG_E_INVALIDPOINTER 2147680265

#define XACT_E_LOGFULL 2147799066

#define ERROR_SXS_XML_E_INVALIDSWITCH 14068

#define XACT_E_XTIONEXISTS 2147799059

#define WSAEDQUOT 10069

#define ERROR_DS_DOMAIN_VERSION_TOO_LOW 8566

#define SEC_E_PKINIT_NAME_MISMATCH 2148074301

#define SEC_E_INCOMPLETE_MESSAGE 2148074264

#define OLEOBJ_S_FIRST 262528

#define ERROR_TOO_MANY_OPEN_FILES 4

#define ERROR_BAD_DRIVER 2001

#define TYPE_E_BUFFERTOOSMALL 2147647510

#define CO_E_RUNAS_CREATEPROCESS_FAILURE 2147500057

#define CO_E_ACCESSCHECKFAILED 2147549482

#define CO_E_TRUSTEEDOESNTMATCHCLIENT 2147549479

#define WSA_QOS_EOBJLENGTH 11022

#define ERROR_NO_SPOOL_SPACE 62

#define COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE 2148599821

#define ERROR_DS_OBJ_CLASS_VIOLATION 8212

#define SCARD_E_BAD_SEEK 2148532265

#define WSA_QOS_EPSFILTERSPEC 11028

#define COMADMIN_E_NOSERVERSHARE 2148598811

#define ERROR_SPL_NO_ADDJOB 3004

#define ERROR_DS_LOOP_DETECT 8246

#define COMADMIN_E_REGISTRARFAILED 2148598819

#define PERSIST_E_NOTSELFSIZING 2148204555

#define ERROR_CLUSTER_NODE_NOT_READY 5072

#define RPC_E_INVALID_EXTENSION 2147549458

#define ERROR_SECTOR_NOT_FOUND 27

#define COMADMIN_E_PROCESSALREADYRECYCLED 2148599826

#define FACILITY_CONFIGURATION 33

#define TYPE_E_CANTCREATETMPFILE 2147650723

#define RPC_S_INVALID_OBJECT 1900

#define RPC_S_INVALID_TAG 1733

#define ERROR_EXE_MARKED_INVALID 192

#define RPC_E_VERSION_MISMATCH 2147549456

#define ERROR_DELETE_PENDING 303

#define SEC_E_ILLEGAL_MESSAGE 2148074278

#define CO_E_CREATEPROCESS_FAILURE 2147500056

#define ERROR_DS_CANT_MOVE_DELETED_OBJECT 8489

#define SCARD_P_SHUTDOWN 2148532248

#define ERROR_MEDIA_INCOMPATIBLE 4315

#define DNS_ERROR_DP_ALREADY_EXISTS 9902

#define ERROR_PATH_NOT_FOUND 3

#define CO_E_WRONGTRUSTEENAMESYNTAX 2147549484

#define ERROR_CLEANER_CARTRIDGE_INSTALLED 4340

#define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS 5053

#define WSAENETUNREACH 10051

#define MARSHAL_E_LAST 2147746095

#define ERROR_CANT_DISABLE_MANDATORY 1310

#define CLASS_E_NOTLICENSED 2147746066

#define CONVERT10_E_FIRST 2147746240

#define ERROR_INTERNAL_DB_ERROR 1383

#define ERROR_CLUSTER_NO_SECURITY_CONTEXT 5059

#define DRAGDROP_E_LAST 2147746063

#define OSS_PDU_MISMATCH 2148085769

#define DISP_E_UNKNOWNINTERFACE 2147614721

#define ERROR_DISK_TOO_FRAGMENTED 302

#define RPC_S_SEC_PKG_ERROR 1825

#define CO_E_LOOKUPACCSIDFAILED 2147549488

#define SEC_I_CONTINUE_NEEDED 590610

#define CRYPT_E_NO_TRUSTED_SIGNER 2148081707

#define CONVERT10_S_FIRST 262592

#define ERROR_DS_CANT_REPLACE_HIDDEN_REC 8424

#define SEC_I_COMPLETE_AND_CONTINUE 590612

#define STG_E_UNKNOWN 2147680509

#define ERROR_FILE_NOT_ENCRYPTED 6007

#define SPAPI_E_NO_CLASSINSTALL_PARAMS 2148467221

#define ERROR_IPSEC_MM_POLICY_IN_USE 13005

#define CERTSRV_E_NO_REQUEST 2148089858

#define ERROR_TOO_MANY_MODULES 214

#define ERROR_IO_DEVICE 1117

#define SPAPI_E_CANT_REMOVE_DEVINST 2148467250

#define ERROR_IPSEC_IKE_NO_PRIVATE_KEY 13820

#define STG_E_INUSE 2147680512

#define SCARD_W_REMOVED_CARD 2148532329

#define ERROR_DS_SRC_AND_DST_NC_IDENTICAL 8485

#define ERROR_SXS_XML_E_UNCLOSEDSTRING 14062

#define ERROR_NO_PROC_SLOTS 89

#define ERROR_PRINTER_DRIVER_WARNED 3013

#define CERTSRV_E_RESTRICTEDOFFICER 2148089865

#define ERROR_INVALID_FIELD 1616

#define RPC_E_INVALID_HEADER 2147549457

#define COMADMIN_E_NOTCHANGEABLE 2148598826

#define RPC_S_SEND_INCOMPLETE 1913

#define RPC_E_SERVER_DIED 2147549191

#define ERROR_POINT_NOT_FOUND 1171

#define MK_E_NOTBOUND 2147746281

#define OLEOBJ_E_NOVERBS 2147746176

#define RPC_E_TIMEOUT 2147549471

#define MSSIPOTF_E_NOHEADTABLE 2148102147

#define OSS_UNIMPLEMENTED 2148085785

#define SPAPI_E_CLASS_MISMATCH 2148467201

#define ERROR_WRONG_PASSWORD 1323

#define ERROR_AUTODATASEG_EXCEEDS_64k 199

#define TYPE_E_OUTOFBOUNDS 2147650721

#define ERROR_INVALID_TIME 1901

#define RPC_S_NOT_CANCELLED 1826

#define SEC_E_SHUTDOWN_IN_PROGRESS 2148074303

#define INPLACE_E_NOTUNDOABLE 2147746208

#define ERROR_DS_MASTERDSA_REQUIRED 8314

#define ERROR_BAD_PROVIDER 1204

#define ERROR_BAD_ENVIRONMENT 10

#define ERROR_PATCH_PACKAGE_REJECTED 1643

#define DV_E_NOIVIEWOBJECT 2147745901

#define COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT 2148598861

#define ERROR_PARTITION_FAILURE 1105

#define ERROR_DS_CANT_ON_RDN 8214

#define ERROR_OPERATION_ABORTED 995

#define COMADMIN_E_COMP_MOVE_BAD_DEST 2148598830

#define CO_E_SERVER_NOT_PAUSED 2147500070

#define SEC_I_CONTEXT_EXPIRED 590615

#define DNS_WARNING_DOMAIN_UNDELETED 9716

#define ERROR_DS_AUX_CLS_TEST_FAIL 8389

#define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED 5077

#define ERROR_RESMON_INVALID_STATE 5084

#define SCHED_E_UNKNOWN_OBJECT_VERSION 2147750675

#define SCARD_W_WRONG_CHV 2148532331

#define ERROR_SERVICE_NO_THREAD 1054

#define ERROR_RXACT_COMMIT_FAILURE 1370

#define MSSIPOTF_E_BADVERSION 2148102165

#define CO_E_CONVERSIONFAILED 2147549486

#define ERROR_BUSY_DRIVE 142

#define CERTSRV_E_SUBJECT_DNS_REQUIRED 2148091919

#define ERROR_DS_SORT_CONTROL_MISSING 8261

#define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER 8519

#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061

#define ERROR_CTX_INVALID_PD 7002

#define ERROR_INVALID_CLEANER 4310

#define CO_E_SETSERLHNDLFAILED 2147549491

#define ERROR_INVALID_PRIMARY_GROUP 1308

#define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING 8474

#define TYPE_E_INCONSISTENTPROPFUNCS 2147654787

#define ERROR_INVALID_DWP_HANDLE 1405

#define CO_E_NETACCESSAPIFAILED 2147549483

#define ERROR_PROC_NOT_FOUND 127

#define CRYPT_E_NOT_IN_CTL 2148081706

#define CO_E_INIT_MEMORY_ALLOCATOR 2147500040

#define ERROR_FILEMARK_DETECTED 1101

#define OSS_CONSTRAINT_DLL_NOT_LINKED 2148085795

#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE 2147500048

#define ERROR_DOMAIN_LIMIT_EXCEEDED 1357

#define ERROR_DS_CANT_CACHE_ATT 8401

#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220

#define CO_E_SERVER_STOPPING 2148007944

#define ERROR_MEMBER_NOT_IN_GROUP 1321

#define ERROR_SERVICE_MARKED_FOR_DELETE 1072

#define CO_E_FAILEDTOGENUUID 2147549494

#define XACT_E_WRONGSTATE 2147799057

#define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205

#define ERROR_DS_SRC_SID_EXISTS_IN_FOREST 8539

#define COMADMIN_E_ROLEEXISTS 2148598796

#define SPAPI_E_GENERAL_SYNTAX 2148466691

#define DIGSIG_E_EXTENSIBILITY 2148204551

#define ERROR_DS_INAPPROPRIATE_MATCHING 8238

#define DRAGDROP_E_FIRST 2147746048

#define ERROR_DS_NCNAME_MISSING_CR_REF 8412

#define CO_S_FIRST 262640

#define XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH 2148093955

#define ERROR_TRUST_FAILURE 1790

#define MSSIPOTF_E_CANTGETOBJECT 2148102146

#define ERROR_NETWORK_BUSY 54

#define COMADMIN_E_PROGIDINUSEBYCLSID 2148599829

#define ERROR_DS_NOT_SUPPORTED 8256

#define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED 13860

#define E_ABORT 2147500036

#define RPC_S_BINDING_HAS_NO_AUTH 1746

#define DNS_ERROR_RCODE_NOTZONE 9010

#define ERROR_DS_NAME_NOT_UNIQUE 8571

#define RPC_S_INVALID_STRING_BINDING 1700

#define ERROR_DS_OBJ_GUID_EXISTS 8361

#define ERROR_CLUSTER_SHUTTING_DOWN 5022

#define SPAPI_E_EXPECTED_SECTION_NAME 2148466688

#define ERROR_HOOK_NOT_INSTALLED 1431

#define ERROR_INVALID_WINDOW_HANDLE 1400

#define WSAEINVAL 10022

#define XACT_S_LASTRESOURCEMANAGER 315408

#define ERROR_DS_UNAVAILABLE 8207

#define ERROR_PIPE_BUSY 231

#define SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE 2148467248

#define CO_E_REMOTE_COMMUNICATION_FAILURE 2147500061

#define FACILITY_WINDOWS 8

#define ERROR_REGISTRY_RECOVERED 1014

#define SCARD_W_UNSUPPORTED_CARD 2148532325

#define ERROR_DS_DRA_MISSING_PARENT 8460

#define XACT_S_SOMENORETAIN 315395

#define ERROR_INVALID_EA_NAME 254

#define ERROR_NOTIFY_ENUM_DIR 1022

#define ERROR_NO_DATA_DETECTED 1104

#define ERROR_DS_ATT_NOT_DEF_FOR_CLASS 8317

#define ERROR_DS_NAME_ERROR_NO_MAPPING 8472

#define ERROR_CTX_CLOSE_PENDING 7007

#define ERROR_LUIDS_EXHAUSTED 1334

#define SCHED_E_SERVICE_NOT_LOCALSYSTEM 6200

#define RPC_S_TYPE_ALREADY_REGISTERED 1712

#define ERROR_DS_OUT_OF_VERSION_STORE 8573

#define RPC_S_GRP_ELT_NOT_ADDED 1928

#define ERROR_SERVICE_DEPENDENCY_FAIL 1068

#define ERROR_CLIPPING_NOT_SUPPORTED 2005

#define ERROR_DOMAIN_EXISTS 1356

#define ERROR_PRINTER_DELETED 1905

#define COMADMIN_E_REMOTEINTERFACE 2148598809

#define CO_E_WRONGOSFORAPP 2147746298

#define COMADMIN_E_CAT_PARTITION_IN_USE 2148598873

#define OSS_OPEN_TYPE_ERROR 2148085804

#define SCARD_W_SECURITY_VIOLATION 2148532330

#define CONVERT10_E_OLESTREAM_GET 2147746240

#define ERROR_SXS_XML_E_UNCLOSEDCDATA 14065

#define ERROR_BAD_IMPERSONATION_LEVEL 1346

#define FACILITY_DISPATCH 2

#define ERROR_HOTKEY_NOT_REGISTERED 1419

#define ERROR_INSTALL_TRANSFORM_FAILURE 1624

#define ERROR_DS_PARENT_IS_AN_ALIAS 8330

#define ERROR_REVISION_MISMATCH 1306

#define OLEOBJ_S_LAST 262543

#define SEC_E_INVALID_TOKEN 2148074248

#define ERROR_RESOURCE_NOT_PRESENT 4316

#define ERROR_CTX_TD_ERROR 7017

#define ERROR_PAGEFILE_QUOTA 1454

#define DS_S_SUCCESS 0

#define RPC_S_INVALID_NAF_ID 1763

#define OLEOBJ_E_INVALIDVERB 2147746177

#define OSS_OUT_OF_RANGE 2148085793

#define STG_E_NOTFILEBASEDSTORAGE 2147680519

#define ERROR_UNABLE_TO_INVENTORY_SLOT 4326

#define WSA_QOS_ESDMODEOBJ 11029

#define NTE_NOT_FOUND 2148073489

#define STG_E_NOTSIMPLEFORMAT 2147680530

#define SCARD_F_WAITED_TOO_LONG 2148532231

#define ERROR_SXS_XML_E_MULTIPLE_COLONS 14046

#define RPC_S_UNKNOWN_AUTHN_TYPE 1741

#define MSSIPOTF_E_CRYPT 2148102164

#define ERROR_DIRECTORY 267

#define CERTSRV_E_TEMPLATE_POLICY_REQUIRED 2148091912

#define ERROR_META_EXPANSION_TOO_LONG 208

#define ERROR_DS_NAME_ERROR_NOT_FOUND 8470

#define ERROR_SERVICE_NOT_FOUND 1243

#define FACILITY_STORAGE 3

#define ERROR_SERVER_HAS_OPEN_HANDLES 1811

#define SEC_E_CANNOT_PACK 2148074249

#define COMADMIN_E_PROPERTY_OVERFLOW 2148598844

#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633

#define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE 2148467226

#define ERROR_SCREEN_ALREADY_LOCKED 1440

#define MSSIPOTF_E_FAILED_HINTS_CHECK 2148102161

#define ERROR_DS_DOMAIN_VERSION_TOO_HIGH 8564

#define ERROR_INVALID_DRIVE_OBJECT 4321

#define SPAPI_E_DEVINFO_LIST_LOCKED 2148467218

#define ERROR_EFS_SERVER_NOT_TRUSTED 6011

#define ERROR_INVALID_CURSOR_HANDLE 1402

#define COMADMIN_E_APP_NOT_RUNNING 2148599818

#define ERROR_CTX_INVALID_WD 7049

#define ERROR_IPSEC_MM_POLICY_NOT_FOUND 13004

#define ERROR_DS_NO_REQUESTED_ATTS_FOUND 8308

#define PERSIST_E_SIZEDEFINITE 2148204553

#define ERROR_ARENA_TRASHED 7

#define RPC_S_NOT_ALL_OBJS_EXPORTED 1923

#define STG_E_INCOMPLETE 2147680769

#define WSA_QOS_BAD_STYLE 11012

#define DNS_ERROR_NO_ZONE_INFO 9602

#define ERROR_DATABASE_BACKUP_CORRUPT 5087

#define NTE_BAD_SIGNATURE 2148073478

#define DV_E_CLIPFORMAT 2147745898

#define ERROR_DS_TIMELIMIT_EXCEEDED 8226

#define XACT_E_COMMITFAILED 2147799042

#define WSAEHOSTDOWN 10064

#define ERROR_ALLOTTED_SPACE_EXCEEDED 1344

#define DRAGDROP_S_FIRST 262400

#define CLASS_E_CLASSNOTAVAILABLE 2147746065

#define SCARD_E_ICC_CREATEORDER 2148532257

#define DNS_ERROR_INVALID_NAME 123

#define ERROR_DEVICE_REQUIRES_CLEANING 1165

#define DISP_E_EXCEPTION 2147614729

#define MK_E_NEEDGENERIC 2147746274

#define ERROR_DS_ALIASED_OBJ_MISSING 8334

#define CS_E_SCHEMA_MISMATCH 2147746158

#define DNS_ERROR_SECURE_BASE 9800

#define SCARD_E_SHARING_VIOLATION 2148532235

#define ERROR_DS_COULDNT_CONTACT_FSMO 8367

#define ERROR_SERVER_SHUTDOWN_IN_PROGRESS 1255

#define WSAEPROTOTYPE 10041

#define ERROR_DS_CANT_CACHE_CLASS 8402

#define ERROR_BAD_NETPATH 53

#define ERROR_ARITHMETIC_OVERFLOW 534

#define ERROR_CTX_PD_NOT_FOUND 7003

#define ERROR_DS_CANT_CREATE_UNDER_SCHEMA 8510

#define CERTSRV_E_BAD_TEMPLATE_VERSION 2148091911

#define ERROR_EFS_DISABLED 6015

#define ERROR_LOGON_TYPE_NOT_GRANTED 1385

#define XACT_E_NORESOURCE 2147799052

#define ERROR_SXS_XML_E_MISSINGROOT 14057

#define ERROR_DS_DRA_BUSY 8438

#define CACHE_S_FORMATETC_NOTSUPPORTED 262512

#define ERROR_NO_EFS 6004

#define ERROR_IPSEC_IKE_INVALID_COOKIE 13846

#define RPC_S_INCOMPLETE_NAME 1755

#define ERROR_DATABASE_FAILURE 4313

#define CERTSRV_E_NO_VALID_KRA 2148089867

#define ERROR_SXS_MANIFEST_FORMAT_ERROR 14004

#define ERROR_DS_NOT_AN_OBJECT 8352

#define COMADMIN_E_COMPFILE_DOESNOTEXIST 2148598820

#define MSSIPOTF_E_FILETOOSMALL 2148102155

#define SEC_E_KDC_UNABLE_TO_REFER 2148074305

#define ERROR_SXS_XML_E_UNBALANCEDPAREN 14040

#define WSA_QOS_NO_SENDERS 11007

#define ERROR_IPSEC_IKE_INVALID_HEADER 13824

#define CERT_E_CRITICAL 2148204805

#define WSA_QOS_ESHAPERATEOBJ 11030

#define XACT_S_FIRST 315392

#define TRUST_E_NOSIGNATURE 2148204800

#define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED 8429

#define SEC_E_INCOMPLETE_CREDENTIALS 2148074272

#define COMADMIN_E_OBJECTNOTPOOLABLE 2148598847

#define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED 5079

#define DV_E_DVTARGETDEVICE 2147745893

#define ERROR_JOURNAL_HOOK_SET 1430

#define SEC_E_UNSUPPORTED_PREAUTH 2148074307

#define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA 4330

#define XACT_E_NOENLIST 2147799050

#define ERROR_EAS_DIDNT_FIT 275

#define DISP_E_BADVARTYPE 2147614728

#define ERROR_CANNOT_OPEN_PROFILE 1205

#define RPC_X_NO_MORE_ENTRIES 1772

#define ERROR_SXS_CANT_GEN_ACTCTX 14001

#define OSS_CANT_CLOSE_TRACE_FILE 2148085806

#define COMADMIN_E_OBJECT_PARENT_MISSING 2148599816

#define ERROR_PATCH_PACKAGE_UNSUPPORTED 1637

#define SPAPI_E_DEVICE_INTERFACE_REMOVED 2148467228

#define DATA_S_LAST 262463

#define ERROR_CLUSTER_IPADDR_IN_USE 5057

#define ERROR_DLL_INIT_FAILED 1114

#define ERROR_CANCELLED 1223

#define ERROR_INSTALL_LOG_FAILURE 1622

#define ERROR_SXS_XML_E_INTERNALERROR 14041

#define ERROR_CANTOPEN 1011

#define COMADMIN_E_AMBIGUOUS_APPLICATION_NAME 2148598876

#define CO_E_FIRST 2147746288

#define ERROR_INVALID_LOGON_TYPE 1367

#define CERT_E_UNTRUSTEDROOT 2148204809

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT 13835

#define ERROR_INVALID_MONITOR_HANDLE 1461

#define ERROR_NO_TRUST_SAM_ACCOUNT 1787

#define ERROR_CREATE_FAILED 1631

#define ERROR_SUCCESS 0

#define CERT_E_REVOCATION_FAILURE 2148204814

#define XACT_E_INVALIDLSN 2147799172

#define ERROR_NOT_FOUND 1168

#define DNS_ERROR_ZONE_REQUIRES_MASTER_IP 9620

typedef struct tm tm, *Ptm;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
};

typedef long clock_t;

#define CLOCKS_PER_SEC 1000

#define CLK_TCK 1000

typedef struct tagRECONVERTSTRING tagRECONVERTSTRING, *PtagRECONVERTSTRING;

typedef struct tagRECONVERTSTRING *LPRECONVERTSTRING;

struct tagRECONVERTSTRING {
    DWORD dwSize;
    DWORD dwVersion;
    DWORD dwStrLen;
    DWORD dwStrOffset;
    DWORD dwCompStrLen;
    DWORD dwCompStrOffset;
    DWORD dwTargetStrLen;
    DWORD dwTargetStrOffset;
};

typedef struct HIMCC__ HIMCC__, *PHIMCC__;

struct HIMCC__ {
    int unused;
};

typedef struct tagCANDIDATEFORM tagCANDIDATEFORM, *PtagCANDIDATEFORM;

typedef struct tagCANDIDATEFORM CANDIDATEFORM;

struct tagCANDIDATEFORM {
    DWORD dwIndex;
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct tagREGISTERWORDA tagREGISTERWORDA, *PtagREGISTERWORDA;

typedef struct tagREGISTERWORDA *NPREGISTERWORDA;

typedef NPREGISTERWORDA NPREGISTERWORD;

struct tagREGISTERWORDA {
    LPSTR lpReading;
    LPSTR lpWord;
};

typedef struct tagIMEMENUITEMINFOA tagIMEMENUITEMINFOA, *PtagIMEMENUITEMINFOA;

typedef struct tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

struct tagIMEMENUITEMINFOA {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    CHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct tagIMEMENUITEMINFOW tagIMEMENUITEMINFOW, *PtagIMEMENUITEMINFOW;

typedef struct tagIMEMENUITEMINFOW IMEMENUITEMINFOW;

struct tagIMEMENUITEMINFOW {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    WCHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct HIMC__ HIMC__, *PHIMC__;

typedef struct HIMC__ *HIMC;

typedef BOOL (*IMCENUMPROC)(HIMC, LPARAM);

struct HIMC__ {
    int unused;
};

typedef struct tagREGISTERWORDW tagREGISTERWORDW, *PtagREGISTERWORDW;

typedef struct tagREGISTERWORDW *NPREGISTERWORDW;

struct tagREGISTERWORDW {
    LPWSTR lpReading;
    LPWSTR lpWord;
};

typedef struct tagIMECHARPOSITION tagIMECHARPOSITION, *PtagIMECHARPOSITION;

typedef struct tagIMECHARPOSITION *NPIMECHARPOSITION;

struct tagIMECHARPOSITION {
    DWORD dwSize;
    DWORD dwCharPos;
    POINT pt;
    UINT cLineHeight;
    RECT rcDocument;
};

typedef struct tagREGISTERWORDA *LPREGISTERWORDA;

typedef struct tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO;

typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFOA;

typedef struct tagRECONVERTSTRING RECONVERTSTRING;

typedef struct tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

typedef struct tagCANDIDATELIST tagCANDIDATELIST, *PtagCANDIDATELIST;

typedef struct tagCANDIDATELIST CANDIDATELIST;

struct tagCANDIDATELIST {
    DWORD dwSize;
    DWORD dwStyle;
    DWORD dwCount;
    DWORD dwSelection;
    DWORD dwPageStart;
    DWORD dwPageSize;
    DWORD dwOffset[1];
};

typedef struct tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

typedef struct tagREGISTERWORDA *PREGISTERWORDA;

typedef PREGISTERWORDA PREGISTERWORD;

typedef struct tagCANDIDATELIST *NPCANDIDATELIST;

typedef struct tagSTYLEBUFA tagSTYLEBUFA, *PtagSTYLEBUFA;

struct tagSTYLEBUFA {
    DWORD dwStyle;
    CHAR szDescription[32];
};

typedef struct tagCOMPOSITIONFORM tagCOMPOSITIONFORM, *PtagCOMPOSITIONFORM;

typedef struct tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

struct tagCOMPOSITIONFORM {
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct tagCOMPOSITIONFORM COMPOSITIONFORM;

typedef struct tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO;

typedef struct tagREGISTERWORDA REGISTERWORDA;

typedef REGISTERWORDA REGISTERWORD;

typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO;

typedef struct tagSTYLEBUFA *LPSTYLEBUFA;

typedef LPSTYLEBUFA LPSTYLEBUF;

typedef struct tagRECONVERTSTRING *PRECONVERTSTRING;

typedef IMEMENUITEMINFOA IMEMENUITEMINFO;

typedef struct tagCANDIDATELIST *LPCANDIDATELIST;

typedef struct tagRECONVERTSTRING *NPRECONVERTSTRING;

typedef struct tagSTYLEBUFA *PSTYLEBUFA;

typedef PSTYLEBUFA PSTYLEBUF;

typedef struct tagREGISTERWORDW *LPREGISTERWORDW;

typedef struct tagSTYLEBUFW tagSTYLEBUFW, *PtagSTYLEBUFW;

struct tagSTYLEBUFW {
    DWORD dwStyle;
    WCHAR szDescription[32];
};

typedef struct tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

typedef struct tagSTYLEBUFA *NPSTYLEBUFA;

typedef struct tagSTYLEBUFW *PSTYLEBUFW;

typedef struct tagIMECHARPOSITION IMECHARPOSITION;

typedef struct tagIMECHARPOSITION *PIMECHARPOSITION;

typedef struct tagSTYLEBUFA STYLEBUFA;

typedef STYLEBUFA STYLEBUF;

typedef int (*REGISTERWORDENUMPROCA)(LPCSTR, DWORD, LPCSTR, LPVOID);

typedef NPSTYLEBUFA NPSTYLEBUF;

typedef LPREGISTERWORDA LPREGISTERWORD;

typedef struct tagCANDIDATEFORM *PCANDIDATEFORM;

typedef struct tagSTYLEBUFW *NPSTYLEBUFW;

typedef struct tagIMECHARPOSITION *LPIMECHARPOSITION;

typedef struct tagCANDIDATEFORM *LPCANDIDATEFORM;

typedef struct tagCANDIDATELIST *PCANDIDATELIST;

typedef struct tagSTYLEBUFW STYLEBUFW;

typedef struct HIMCC__ *HIMCC;

typedef struct tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

typedef struct tagSTYLEBUFW *LPSTYLEBUFW;

typedef struct tagCANDIDATEFORM *NPCANDIDATEFORM;

typedef struct HKL__ HKL__, *PHKL__;

typedef struct HKL__ *HKL;

typedef HKL *LPHKL;

struct HKL__ {
    int unused;
};

typedef struct tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

typedef int (*REGISTERWORDENUMPROCW)(LPCWSTR, DWORD, LPCWSTR, LPVOID);

typedef struct tagREGISTERWORDW *PREGISTERWORDW;

typedef struct tagREGISTERWORDW REGISTERWORDW;

#define IME_REGWORD_STYLE_EUDC 1

#define SCS_SETSTR 9

#define IME_HOTKEY_PRIVATE_LAST 543

#define IME_PROP_COMPLETE_ON_UNSELECT 1048576

#define IMR_RECONVERTSTRING 4

#define IMN_SETCANDIDATEPOS 9

#define IMN_SETSTATUSWINDOWPOS 12

#define IGIMII_CMODE 1

#define IMFT_SUBMENU 4

#define IME_SMODE_AUTOMATIC 4

#define IME_CHOTKEY_IME_NONIME_TOGGLE 16

#define GL_ID_CANNOTSAVE 17

#define CS_NOMOVECARET 16384

#define IME_CMODE_ALPHANUMERIC 0

#define IME_KHOTKEY_SHAPE_TOGGLE 80

#define IMN_CLOSECANDIDATE 4

#define GL_ID_INPUTSYMBOL 39

#define ATTR_FIXEDCONVERTED 5

#define IGP_PROPERTY 4

#define IME_CMODE_HANGUL 1

#define IMC_CLOSESTATUSWINDOW 33

#define GCS_DELTASTART 256

#define IMFS_GRAYED 3

#define IMN_PRIVATE 14

#define GCL_REVERSE_LENGTH 3

#define IGIMII_CONFIGURE 4

#define IME_CMODE_FULLSHAPE 8

#define GL_LEVEL_ERROR 2

#define IME_ITHOTKEY_RESEND_RESULTSTR 512

#define CFS_CANDIDATEPOS 64

#define IMC_OPENSTATUSWINDOW 34

#define SCS_CAP_SETRECONVERTSTRING 4

#define IMN_OPENSTATUSWINDOW 2

#define GCS_COMPCLAUSE 32

#define SCS_CAP_MAKEREAD 2

#define GL_ID_NOCONVERT 32

#define IGIMII_TOOLS 8

#define GL_ID_CHOOSECANDIDATE 40

#define IME_ITHOTKEY_RECONVERTSTRING 515

#define CPS_COMPLETE 1

#define MOD_IGNORE_ALL_MODIFIER 1024

#define GCS_COMPREADATTR 2

#define IME_ESC_MAX_KEY 4101

#define IMFT_RADIOCHECK 1

#define ISC_SHOWUICANDIDATEWINDOW 1

#define GGL_LEVEL 1

#define GL_ID_INPUTRADICAL 37

#define SOFTKEYBOARD_TYPE_T1 1

#define IMN_OPENCANDIDATE 5

#define NI_CLOSECANDIDATE 17

#define IMFS_DEFAULT 4096

#define IACE_IGNORENOCONTEXT 32

#define IGIMII_HELP 16

#define IME_CAND_CODE 2

#define IMN_GUIDELINE 13

#define IME_HOTKEY_PRIVATE_FIRST 512

#define IMN_SETOPENSTATUS 8

#define GL_ID_NODICTIONARY 16

#define NI_OPENCANDIDATE 16

#define IME_PROP_SPECIAL_UI 131072

#define IME_PROP_CANDLIST_START_FROM_1 262144

#define IME_ITHOTKEY_PREVIOUS_COMPOSITION 513

#define IME_ITHOTKEY_UISTYLE_TOGGLE 514

#define IME_ESC_GETHELPFILENAME 4107

#define UI_CAP_ROTANY 4

#define CPS_CONVERT 2

#define IMC_GETSTATUSWINDOWPOS 15

#define IME_CMODE_ROMAN 16

#define IMEMENUITEM_STRING_SIZE 80

#define IMN_CHANGECANDIDATE 3

#define ATTR_INPUT_ERROR 4

#define STYLE_DESCRIPTION_SIZE 32

#define MOD_ON_KEYUP 2048

#define GL_ID_PRIVATE_FIRST 32768

#define GL_LEVEL_FATAL 1

#define IMFS_DISABLED 3

#define IMC_GETCANDIDATEPOS 7

#define IME_THOTKEY_SHAPE_TOGGLE 113

#define IME_ESC_SYNC_HOTKEY 4103

#define GCS_RESULTREADSTR 512

#define IME_ESC_RESERVED_FIRST 4

#define IMC_GETCOMPOSITIONFONT 9

#define ATTR_TARGET_CONVERTED 1

#define GCL_CONVERSION 1

#define MOD_RIGHT 16384

#define IME_THOTKEY_IME_NONIME_TOGGLE 112

#define IMR_CANDIDATEWINDOW 2

#define GCL_REVERSECONVERSION 2

#define IGIMII_OTHER 32

#define IME_ESC_SET_EUDC_DICTIONARY 4100

#define GL_ID_PRIVATE_LAST 65535

#define IMN_CLOSESTATUSWINDOW 1

#define IME_ESC_AUTOMATA 4105

#define GCS_COMPREADCLAUSE 4

#define IMR_COMPOSITIONFONT 3

#define IMFS_ENABLED 0

#define IMC_SETCOMPOSITIONFONT 10

#define IME_CMODE_NOCONVERSION 256

#define IMR_CONFIRMRECONVERTSTRING 5

#define IGIMIF_RIGHTMENU 1

#define ISC_SHOWUIALL 3221225487

#define IGIMII_INPUTTOOLS 64

#define SCS_CHANGECLAUSE 36

#define CS_INSERTCHAR 8192

#define IGP_SELECT 24

#define CFS_DEFAULT 0

#define IMFS_HILITE 128

#define IGP_SETCOMPSTR 20

#define IGP_SENTENCE 12

#define IMFS_UNCHECKED 0

#define IME_KHOTKEY_HANJACONVERT 81

#define IMFS_UNHILITE 0

#define IMN_SETCOMPOSITIONWINDOW 11

#define IMC_SETSTATUSWINDOWPOS 16

#define IME_CMODE_KATAKANA 2

#define IME_HOTKEY_DSWITCH_FIRST 256

#define IMFS_CHECKED 8

#define IME_CHOTKEY_SHAPE_TOGGLE 17

#define IGP_CONVERSION 8

#define CFS_POINT 2

#define GL_ID_TOOMANYSTROKE 34

#define GL_LEVEL_WARNING 3

#define IGP_GETIMEVERSION -4

#define CFS_FORCE_POSITION 32

#define IME_REGWORD_STYLE_USER_FIRST 2147483648

#define IMFT_SEPARATOR 2

#define IME_JHOTKEY_CLOSE_OPEN 48

#define IME_ESC_PRIVATE_FIRST 2048

#define IME_CMODE_JAPANESE 1

#define IME_CAND_READ 1

#define CFS_RECT 1

#define IME_CHOTKEY_SYMBOL_TOGGLE 18

#define IME_HOTKEY_DSWITCH_LAST 287

#define IME_ESC_SEQUENCE_TO_INTERNAL 4097

#define GL_ID_READINGCONFLICT 35

#define GL_ID_REVERSECONVERSION 41

#define SCS_CHANGEATTR 18

#define IACE_DEFAULT 16

#define GCS_COMPREADSTR 1

#define SELECT_CAP_CONVERSION 1

#define IME_ESC_GET_EUDC_DICTIONARY 4099

#define GGL_PRIVATE 4

#define IGP_UI 16

#define IME_CONFIG_GENERAL 1

#define IME_CAND_UNKNOWN 0

#define SOFTKEYBOARD_TYPE_C1 2

#define ISC_SHOWUIGUIDELINE 1073741824

#define IMC_SETCANDIDATEPOS 8

#define IMR_COMPOSITIONWINDOW 1

#define IME_THOTKEY_SYMBOL_TOGGLE 114

#define CPS_CANCEL 4

#define IME_CMODE_SOFTKBD 128

#define GL_ID_NOMODULE 1

#define IME_CMODE_HANJACONVERT 64

#define IMEVER_0310 196618

#define IME_KHOTKEY_ENGLISH 82

#define IME_CAND_RADICAL 4

#define ATTR_CONVERTED 2

#define IGIMII_SMODE 2

#define IMN_SETCONVERSIONMODE 6

#define ISC_SHOWUIALLCANDIDATEWINDOW 15

#define SCS_CAP_COMPSTR 1

#define IME_SMODE_NONE 0

#define UI_CAP_ROT90 2

#define ISC_SHOWUICOMPOSITIONWINDOW 2147483648

#define GGL_INDEX 2

#define GL_ID_UNKNOWN 0

#define NI_COMPOSITIONSTR 21

#define GCS_COMPSTR 8

#define NI_FINALIZECONVERSIONRESULT 20

#define IMR_QUERYCHARPOSITION 6

#define IME_SMODE_CONVERSATION 16

#define GCS_RESULTREADCLAUSE 1024

#define IME_CMODE_FIXED 2048

#define IME_SMODE_PLAURALCLAUSE 1

#define IME_ESC_HANJA_MODE 4104

#define IME_ESC_QUERY_SUPPORT 3

#define IME_PROP_AT_CARET 65536

#define MOD_LEFT 32768

#define IME_CMODE_SYMBOL 1024

#define IME_CONFIG_REGISTERWORD 2

#define ATTR_INPUT 0

#define IME_CAND_STROKE 5

#define IME_CMODE_LANGUAGE 3

#define NI_SETCANDIDATE_PAGESIZE 23

#define IACE_CHILDREN 1

#define GL_LEVEL_NOGUIDELINE 0

#define IMM_ERROR_GENERAL -2

#define CFS_EXCLUDE 128

#define IME_ESC_IME_NAME 4102

#define GCS_COMPATTR 16

#define GL_ID_TYPINGERROR 33

#define IME_PROP_UNICODE 524288

#define SELECT_CAP_SENTENCE 2

#define IME_CMODE_CHARCODE 32

#define GL_ID_INPUTCODE 38

#define IMN_SETSENTENCEMODE 7

#define NI_CHANGECANDIDATELIST 19

#define GCS_RESULTSTR 2048

#define IME_ESC_RESERVED_LAST 2047

#define IME_CMODE_CHINESE 1

#define IME_CMODE_NATIVE 1

#define GL_LEVEL_INFORMATION 4

#define IME_CMODE_HANGEUL 1

#define IME_CAND_MEANING 3

#define UI_CAP_2700 1

#define SCS_SETRECONVERTSTRING 65536

#define CPS_REVERT 3

#define IME_CONFIG_SELECTDICTIONARY 3

#define IME_SMODE_SINGLECONVERT 2

#define GCS_CURSORPOS 128

#define NI_IMEMENUSELECTED 24

#define GL_ID_INPUTREADING 36

#define NI_SELECTCANDIDATESTR 18

#define NI_SETCANDIDATE_PAGESTART 22

#define IME_REGWORD_STYLE_USER_LAST 4294967295

#define IME_SMODE_PHRASEPREDICT 8

#define SCS_QUERYRECONVERTSTRING 131072

#define ATTR_TARGET_NOTCONVERTED 3

#define GCS_RESULTCLAUSE 4096

#define GGL_STRING 3

#define IME_ESC_PRIVATE_HOTKEY 4106

#define IMM_ERROR_NODATA -1

#define IMC_GETCOMPOSITIONWINDOW 11

#define IMEVER_0400 262144

#define IMN_SETCOMPOSITIONFONT 10

#define IMR_DOCUMENTFEED 7

#define IME_CMODE_EUDC 512

#define IME_ESC_PRIVATE_LAST 4095

#define IMC_SETCOMPOSITIONWINDOW 12

#define D3DX_DEFAULT 4294967295

typedef struct _VIDEOPARAMETERS _VIDEOPARAMETERS, *P_VIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS *PVIDEOPARAMETERS;

typedef uchar UCHAR;

struct _VIDEOPARAMETERS {
    GUID Guid;
    ULONG dwOffset;
    ULONG dwCommand;
    ULONG dwFlags;
    ULONG dwMode;
    ULONG dwTVStandard;
    ULONG dwAvailableModes;
    ULONG dwAvailableTVStandard;
    ULONG dwFlickerFilter;
    ULONG dwOverScanX;
    ULONG dwOverScanY;
    ULONG dwMaxUnscaledX;
    ULONG dwMaxUnscaledY;
    ULONG dwPositionX;
    ULONG dwPositionY;
    ULONG dwBrightness;
    ULONG dwContrast;
    ULONG dwCPType;
    ULONG dwCPCommand;
    ULONG dwCPStandard;
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;
    UCHAR bOEMCopyProtection[256];
};

typedef struct _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS VIDEOPARAMETERS;

#define VP_CP_CMD_CHANGE 4

#define VP_FLAGS_POSITION 32

#define VP_CP_CMD_ACTIVATE 1

#define VP_FLAGS_FLICKER 4

#define VP_FLAGS_MAX_UNSCALED 16

#define VP_TV_STANDARD_PAL_H 16

#define VP_TV_STANDARD_SECAM_K 4096

#define VP_TV_STANDARD_PAL_I 32

#define VP_TV_STANDARD_PAL_G 131072

#define VP_TV_STANDARD_SECAM_H 2048

#define VP_TV_STANDARD_PAL_D 8

#define VP_TV_STANDARD_PAL_B 4

#define VP_CP_TYPE_APS_TRIGGER 1

#define VP_TV_STANDARD_SECAM_L 16384

#define VP_TV_STANDARD_PAL_N 128

#define VP_TV_STANDARD_PAL_M 64

#define VP_MODE_WIN_GRAPHICS 1

#define VP_CP_TYPE_MACROVISION 2

#define VP_FLAGS_TV_MODE 1

#define VP_TV_STANDARD_NTSC_433 65536

#define VP_CP_CMD_DEACTIVATE 2

#define VP_FLAGS_CONTRAST 128

#define VP_TV_STANDARD_WIN_VGA 32768

#define VP_FLAGS_COPYPROTECT 256

#define VP_TV_STANDARD_SECAM_K1 8192

#define VP_COMMAND_GET 1

#define VP_COMMAND_SET 2

#define VP_FLAGS_BRIGHTNESS 64

#define VP_MODE_TV_PLAYBACK 2

#define VP_TV_STANDARD_SECAM_B 256

#define VP_TV_STANDARD_SECAM_G 1024

#define VP_TV_STANDARD_PAL_60 262144

#define VP_TV_STANDARD_SECAM_D 512

#define VP_TV_STANDARD_NTSC_M 1

#define VP_TV_STANDARD_SECAM_L1 524288

#define VP_TV_STANDARD_NTSC_M_J 2

#define VP_FLAGS_OVERSCAN 8

#define VP_FLAGS_TV_STANDARD 2

typedef struct tagSAFEARRAY tagSAFEARRAY, *PtagSAFEARRAY;

typedef struct tagSAFEARRAY SAFEARRAY;

typedef struct tagSAFEARRAYBOUND tagSAFEARRAYBOUND, *PtagSAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[1];
};

typedef struct ITypeInfoVtbl ITypeInfoVtbl, *PITypeInfoVtbl;

typedef struct ITypeInfo ITypeInfo, *PITypeInfo;

typedef struct tagTYPEATTR tagTYPEATTR, *PtagTYPEATTR;

typedef struct tagTYPEATTR TYPEATTR;

typedef struct ITypeComp ITypeComp, *PITypeComp;

typedef struct tagFUNCDESC tagFUNCDESC, *PtagFUNCDESC;

typedef struct tagFUNCDESC FUNCDESC;

typedef struct tagVARDESC tagVARDESC, *PtagVARDESC;

typedef struct tagVARDESC VARDESC;

typedef LONG DISPID;

typedef DISPID MEMBERID;

typedef OLECHAR *BSTR;

typedef DWORD HREFTYPE;

typedef struct tagDISPPARAMS tagDISPPARAMS, *PtagDISPPARAMS;

typedef struct tagDISPPARAMS DISPPARAMS;

typedef struct tagVARIANT tagVARIANT, *PtagVARIANT;

typedef struct tagVARIANT VARIANT;

typedef struct tagEXCEPINFO tagEXCEPINFO, *PtagEXCEPINFO;

typedef struct tagEXCEPINFO EXCEPINFO;

typedef enum tagINVOKEKIND {
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
} tagINVOKEKIND;

typedef enum tagINVOKEKIND INVOKEKIND;

typedef struct ITypeLib ITypeLib, *PITypeLib;

typedef enum tagTYPEKIND {
    TKIND_ENUM=0,
    TKIND_RECORD=1,
    TKIND_MODULE=2,
    TKIND_INTERFACE=3,
    TKIND_DISPATCH=4,
    TKIND_COCLASS=5,
    TKIND_ALIAS=6,
    TKIND_UNION=7,
    TKIND_MAX=8
} tagTYPEKIND;

typedef enum tagTYPEKIND TYPEKIND;

typedef struct tagTYPEDESC tagTYPEDESC, *PtagTYPEDESC;

typedef struct tagTYPEDESC TYPEDESC;

typedef struct tagIDLDESC tagIDLDESC, *PtagIDLDESC;

typedef struct tagIDLDESC IDLDESC;

typedef struct ITypeCompVtbl ITypeCompVtbl, *PITypeCompVtbl;

typedef enum tagDESCKIND {
    DESCKIND_NONE=0,
    DESCKIND_FUNCDESC=1,
    DESCKIND_VARDESC=2,
    DESCKIND_TYPECOMP=3,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5
} tagDESCKIND;

typedef enum tagDESCKIND DESCKIND;

typedef union tagBINDPTR tagBINDPTR, *PtagBINDPTR;

typedef union tagBINDPTR BINDPTR;

typedef LONG SCODE;

typedef struct tagELEMDESC tagELEMDESC, *PtagELEMDESC;

typedef struct tagELEMDESC ELEMDESC;

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL=0,
    FUNC_PUREVIRTUAL=1,
    FUNC_NONVIRTUAL=2,
    FUNC_STATIC=3,
    FUNC_DISPATCH=4
} tagFUNCKIND;

typedef enum tagFUNCKIND FUNCKIND;

typedef enum tagCALLCONV {
    CC_FASTCALL=0,
    CC_CDECL=1,
    CC_MSCPASCAL=2,
    CC_PASCAL=3,
    CC_MACPASCAL=4,
    CC_STDCALL=5,
    CC_FPFASTCALL=6,
    CC_SYSCALL=7,
    CC_MPWCDECL=8,
    CC_MPWPASCAL=9,
    CC_MAX=10
} tagCALLCONV;

typedef enum tagCALLCONV CALLCONV;

typedef union _union_2112 _union_2112, *P_union_2112;

typedef enum tagVARKIND {
    VAR_PERINSTANCE=0,
    VAR_STATIC=1,
    VAR_CONST=2,
    VAR_DISPATCH=3
} tagVARKIND;

typedef enum tagVARKIND VARKIND;

typedef VARIANT VARIANTARG;

typedef union _union_2084 _union_2084, *P_union_2084;

typedef struct ITypeLibVtbl ITypeLibVtbl, *PITypeLibVtbl;

typedef struct tagTLIBATTR tagTLIBATTR, *PtagTLIBATTR;

typedef struct tagTLIBATTR TLIBATTR;

typedef union _union_2092 _union_2092, *P_union_2092;

typedef ushort VARTYPE;

typedef union _union_2103 _union_2103, *P_union_2103;

typedef struct _struct_2085 _struct_2085, *P_struct_2085;

typedef struct tagDEC tagDEC, *PtagDEC;

typedef struct tagDEC DECIMAL;

typedef enum tagSYSKIND {
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_MAC=2,
    SYS_WIN64=3
} tagSYSKIND;

typedef enum tagSYSKIND SYSKIND;

typedef struct tagARRAYDESC tagARRAYDESC, *PtagARRAYDESC;

typedef struct tagPARAMDESC tagPARAMDESC, *PtagPARAMDESC;

typedef struct tagPARAMDESC PARAMDESC;

typedef union _union_2086 _union_2086, *P_union_2086;

typedef union _union_1274 _union_1274, *P_union_1274;

typedef union _union_1276.conflict _union_1276.conflict, *P_union_1276.conflict;

typedef struct tagPARAMDESCEX tagPARAMDESCEX, *PtagPARAMDESCEX;

typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

typedef short VARIANT_BOOL;

typedef union tagCY tagCY, *PtagCY;

typedef union tagCY CY;

typedef double DATE;

typedef struct IDispatch IDispatch, *PIDispatch;

typedef struct _struct_2087 _struct_2087, *P_struct_2087;

typedef struct _struct_1275 _struct_1275, *P_struct_1275;

typedef struct _struct_1277.conflict _struct_1277.conflict, *P_struct_1277.conflict;

typedef struct _struct_1272 _struct_1272, *P_struct_1272;

typedef struct IDispatchVtbl IDispatchVtbl, *PIDispatchVtbl;

typedef struct IRecordInfo IRecordInfo, *PIRecordInfo;

typedef struct IRecordInfoVtbl IRecordInfoVtbl, *PIRecordInfoVtbl;

struct _struct_1272 {
    ulong Lo;
    long Hi;
};

union tagCY {
    struct _struct_1272 field0;
    LONGLONG int64;
};

union _union_2092 {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
};

struct tagTYPEDESC {
    union _union_2092 field0_0x0;
    VARTYPE vt;
};

struct tagIDLDESC {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
};

struct tagPARAMDESC {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
};

union _union_2103 {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
};

struct tagELEMDESC {
    TYPEDESC tdesc;
    union _union_2103 field1_0x8;
};

struct tagFUNCDESC {
    MEMBERID memid;
    SCODE *lprgscode;
    ELEMDESC *lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
};

struct _struct_2087 {
    PVOID pvRecord;
    struct IRecordInfo *pRecInfo;
};

union _union_2086 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
    struct _struct_2087 field43;
};

struct _struct_2085 {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    union _union_2086 field4_0x8;
};

union _union_2112 {
    ULONG oInst;
    VARIANT *lpvarValue;
};

struct tagVARDESC {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union _union_2112 field2_0x8;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
};

struct ITypeCompVtbl {
    HRESULT (*QueryInterface)(struct ITypeComp *, IID *, void **);
    ULONG (*AddRef)(struct ITypeComp *);
    ULONG (*Release)(struct ITypeComp *);
    HRESULT (*Bind)(struct ITypeComp *, LPOLESTR, ULONG, WORD, struct ITypeInfo **, DESCKIND *, BINDPTR *);
    HRESULT (*BindType)(struct ITypeComp *, LPOLESTR, ULONG, struct ITypeInfo **, struct ITypeComp **);
};

struct tagTLIBATTR {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
};

struct tagARRAYDESC {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[1];
};

struct IRecordInfo {
    struct IRecordInfoVtbl *lpVtbl;
};

struct _struct_1277.conflict {
    ULONG Lo32;
    ULONG Mid32;
};

struct tagTYPEATTR {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
};

struct tagDISPPARAMS {
    VARIANTARG *rgvarg;
    DISPID *rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
};

union _union_1276.conflict {
    struct _struct_1277.conflict field0;
    ULONGLONG Lo64;
};

union tagBINDPTR {
    FUNCDESC *lpfuncdesc;
    VARDESC *lpvardesc;
    struct ITypeComp *lptcomp;
};

struct IDispatch {
    struct IDispatchVtbl *lpVtbl;
};

struct IDispatchVtbl {
    HRESULT (*QueryInterface)(struct IDispatch *, IID *, void **);
    ULONG (*AddRef)(struct IDispatch *);
    ULONG (*Release)(struct IDispatch *);
    HRESULT (*GetTypeInfoCount)(struct IDispatch *, UINT *);
    HRESULT (*GetTypeInfo)(struct IDispatch *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct _struct_1275 {
    BYTE scale;
    BYTE sign;
};

union _union_1274 {
    struct _struct_1275 field0;
    USHORT signscale;
};

struct tagDEC {
    USHORT wReserved;
    union _union_1274 field1_0x2;
    ULONG Hi32;
    union _union_1276.conflict field3_0x8;
};

union _union_2084 {
    struct _struct_2085 field0;
    DECIMAL decVal;
};

struct tagVARIANT {
    union _union_2084 field0_0x0;
};

struct tagPARAMDESCEX {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
};

struct ITypeInfoVtbl {
    HRESULT (*QueryInterface)(struct ITypeInfo *, IID *, void **);
    ULONG (*AddRef)(struct ITypeInfo *);
    ULONG (*Release)(struct ITypeInfo *);
    HRESULT (*GetTypeAttr)(struct ITypeInfo *, TYPEATTR **);
    HRESULT (*GetTypeComp)(struct ITypeInfo *, struct ITypeComp **);
    HRESULT (*GetFuncDesc)(struct ITypeInfo *, UINT, FUNCDESC **);
    HRESULT (*GetVarDesc)(struct ITypeInfo *, UINT, VARDESC **);
    HRESULT (*GetNames)(struct ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (*GetRefTypeOfImplType)(struct ITypeInfo *, UINT, HREFTYPE *);
    HRESULT (*GetImplTypeFlags)(struct ITypeInfo *, UINT, INT *);
    HRESULT (*GetIDsOfNames)(struct ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (*Invoke)(struct ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*GetDocumentation)(struct ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetDllEntry)(struct ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (*GetRefTypeInfo)(struct ITypeInfo *, HREFTYPE, struct ITypeInfo **);
    HRESULT (*AddressOfMember)(struct ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (*CreateInstance)(struct ITypeInfo *, struct IUnknown *, IID *, PVOID *);
    HRESULT (*GetMops)(struct ITypeInfo *, MEMBERID, BSTR *);
    HRESULT (*GetContainingTypeLib)(struct ITypeInfo *, struct ITypeLib **, UINT *);
    void (*ReleaseTypeAttr)(struct ITypeInfo *, TYPEATTR *);
    void (*ReleaseFuncDesc)(struct ITypeInfo *, FUNCDESC *);
    void (*ReleaseVarDesc)(struct ITypeInfo *, VARDESC *);
};

struct ITypeLibVtbl {
    HRESULT (*QueryInterface)(struct ITypeLib *, IID *, void **);
    ULONG (*AddRef)(struct ITypeLib *);
    ULONG (*Release)(struct ITypeLib *);
    UINT (*GetTypeInfoCount)(struct ITypeLib *);
    HRESULT (*GetTypeInfo)(struct ITypeLib *, UINT, struct ITypeInfo **);
    HRESULT (*GetTypeInfoType)(struct ITypeLib *, UINT, TYPEKIND *);
    HRESULT (*GetTypeInfoOfGuid)(struct ITypeLib *, GUID *, struct ITypeInfo **);
    HRESULT (*GetLibAttr)(struct ITypeLib *, TLIBATTR **);
    HRESULT (*GetTypeComp)(struct ITypeLib *, struct ITypeComp **);
    HRESULT (*GetDocumentation)(struct ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*IsName)(struct ITypeLib *, LPOLESTR, ULONG, BOOL *);
    HRESULT (*FindName)(struct ITypeLib *, LPOLESTR, ULONG, struct ITypeInfo **, MEMBERID *, USHORT *);
    void (*ReleaseTLibAttr)(struct ITypeLib *, TLIBATTR *);
};

struct ITypeComp {
    struct ITypeCompVtbl *lpVtbl;
};

struct IRecordInfoVtbl {
    HRESULT (*QueryInterface)(struct IRecordInfo *, IID *, void **);
    ULONG (*AddRef)(struct IRecordInfo *);
    ULONG (*Release)(struct IRecordInfo *);
    HRESULT (*RecordInit)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordClear)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordCopy)(struct IRecordInfo *, PVOID, PVOID);
    HRESULT (*GetGuid)(struct IRecordInfo *, GUID *);
    HRESULT (*GetName)(struct IRecordInfo *, BSTR *);
    HRESULT (*GetSize)(struct IRecordInfo *, ULONG *);
    HRESULT (*GetTypeInfo)(struct IRecordInfo *, struct ITypeInfo **);
    HRESULT (*GetField)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNoCopy)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *, PVOID *);
    HRESULT (*PutField)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*PutFieldNoCopy)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNames)(struct IRecordInfo *, ULONG *, BSTR *);
    BOOL (*IsMatchingType)(struct IRecordInfo *, struct IRecordInfo *);
    PVOID (*RecordCreate)(struct IRecordInfo *);
    HRESULT (*RecordCreateCopy)(struct IRecordInfo *, PVOID, PVOID *);
    HRESULT (*RecordDestroy)(struct IRecordInfo *, PVOID);
};

struct ITypeLib {
    struct ITypeLibVtbl *lpVtbl;
};

struct ITypeInfo {
    struct ITypeInfoVtbl *lpVtbl;
};

struct tagEXCEPINFO {
    WORD wCode;
    WORD wReserved;
    BSTR bstrSource;
    BSTR bstrDescription;
    BSTR bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (*pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
};

typedef struct _wireVARIANT _wireVARIANT, *P_wireVARIANT;

typedef union _union_2090 _union_2090, *P_union_2090;

typedef struct _FLAGGED_WORD_BLOB _FLAGGED_WORD_BLOB, *P_FLAGGED_WORD_BLOB;

typedef struct _FLAGGED_WORD_BLOB FLAGGED_WORD_BLOB;

typedef FLAGGED_WORD_BLOB *wireBSTR;

typedef struct _wireSAFEARRAY _wireSAFEARRAY, *P_wireSAFEARRAY;

typedef struct _wireSAFEARRAY *wireSAFEARRAY;

typedef wireSAFEARRAY *wirePSAFEARRAY;

typedef struct _wireBRECORD _wireBRECORD, *P_wireBRECORD;

typedef struct _wireBRECORD *wireBRECORD;

typedef struct _wireVARIANT *wireVARIANT;

typedef struct _wireSAFEARRAY_UNION _wireSAFEARRAY_UNION, *P_wireSAFEARRAY_UNION;

typedef struct _wireSAFEARRAY_UNION SAFEARRAYUNION;

typedef union __MIDL_IOleAutomationTypes_0001 __MIDL_IOleAutomationTypes_0001, *P__MIDL_IOleAutomationTypes_0001;

typedef struct _wireSAFEARR_BSTR _wireSAFEARR_BSTR, *P_wireSAFEARR_BSTR;

typedef struct _wireSAFEARR_BSTR SAFEARR_BSTR;

typedef struct _wireSAFEARR_UNKNOWN _wireSAFEARR_UNKNOWN, *P_wireSAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_UNKNOWN SAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_DISPATCH _wireSAFEARR_DISPATCH, *P_wireSAFEARR_DISPATCH;

typedef struct _wireSAFEARR_DISPATCH SAFEARR_DISPATCH;

typedef struct _wireSAFEARR_VARIANT _wireSAFEARR_VARIANT, *P_wireSAFEARR_VARIANT;

typedef struct _wireSAFEARR_VARIANT SAFEARR_VARIANT;

typedef struct _wireSAFEARR_BRECORD _wireSAFEARR_BRECORD, *P_wireSAFEARR_BRECORD;

typedef struct _wireSAFEARR_BRECORD SAFEARR_BRECORD;

typedef struct _wireSAFEARR_HAVEIID _wireSAFEARR_HAVEIID, *P_wireSAFEARR_HAVEIID;

typedef struct _wireSAFEARR_HAVEIID SAFEARR_HAVEIID;

typedef struct _BYTE_SIZEDARR _BYTE_SIZEDARR, *P_BYTE_SIZEDARR;

typedef struct _BYTE_SIZEDARR BYTE_SIZEDARR;

typedef struct _SHORT_SIZEDARR _SHORT_SIZEDARR, *P_SHORT_SIZEDARR;

typedef struct _SHORT_SIZEDARR WORD_SIZEDARR;

typedef struct _LONG_SIZEDARR _LONG_SIZEDARR, *P_LONG_SIZEDARR;

typedef struct _LONG_SIZEDARR DWORD_SIZEDARR;

typedef struct _HYPER_SIZEDARR _HYPER_SIZEDARR, *P_HYPER_SIZEDARR;

typedef struct _HYPER_SIZEDARR HYPER_SIZEDARR;

typedef double hyper;

struct _BYTE_SIZEDARR {
    ulong clSize;
    byte *pData;
};

struct _wireSAFEARR_UNKNOWN {
    ULONG Size;
    struct IUnknown **apUnknown;
};

struct _LONG_SIZEDARR {
    ulong clSize;
    ulong *pData;
};

struct _wireSAFEARR_VARIANT {
    ULONG Size;
    wireVARIANT *aVariant;
};

struct _wireSAFEARR_HAVEIID {
    ULONG Size;
    struct IUnknown **apUnknown;
    IID iid;
};

struct _wireSAFEARR_DISPATCH {
    ULONG Size;
    struct IDispatch **apDispatch;
};

struct _SHORT_SIZEDARR {
    ulong clSize;
    ushort *pData;
};

struct _wireSAFEARR_BRECORD {
    ULONG Size;
    wireBRECORD *aRecord;
};

struct _wireSAFEARR_BSTR {
    ULONG Size;
    wireBSTR *aBstr;
};

struct _HYPER_SIZEDARR {
    ulong clSize;
    hyper *pData;
};

union __MIDL_IOleAutomationTypes_0001 {
    SAFEARR_BSTR BstrStr;
    SAFEARR_UNKNOWN UnknownStr;
    SAFEARR_DISPATCH DispatchStr;
    SAFEARR_VARIANT VariantStr;
    SAFEARR_BRECORD RecordStr;
    SAFEARR_HAVEIID HaveIidStr;
    BYTE_SIZEDARR ByteStr;
    WORD_SIZEDARR WordStr;
    DWORD_SIZEDARR LongStr;
    HYPER_SIZEDARR HyperStr;
};

struct _wireSAFEARRAY_UNION {
    ULONG sfType;
    union __MIDL_IOleAutomationTypes_0001 u;
};

union _union_2090 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    wireBSTR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    wirePSAFEARRAY parray;
    wireBRECORD brecVal;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    wireBSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    wirePSAFEARRAY *pparray;
    wireVARIANT *pvarVal;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL decVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
};

struct _wireVARIANT {
    DWORD clSize;
    DWORD rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    union _union_2090 field6_0x10;
};

struct _wireSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    SAFEARRAYUNION uArrayStructs;
    SAFEARRAYBOUND rgsabound[1];
};

struct _FLAGGED_WORD_BLOB {
    ulong fFlags;
    ulong clSize;
    ushort asData[1];
};

struct _wireBRECORD {
    ULONG fFlags;
    ULONG clSize;
    struct IRecordInfo *pRecInfo;
    byte *pRecord;
};

typedef struct IPropertyBag IPropertyBag, *PIPropertyBag;

typedef struct IPropertyBagVtbl IPropertyBagVtbl, *PIPropertyBagVtbl;

typedef struct IErrorLog IErrorLog, *PIErrorLog;

typedef struct IErrorLogVtbl IErrorLogVtbl, *PIErrorLogVtbl;

struct IErrorLog {
    struct IErrorLogVtbl *lpVtbl;
};

struct IPropertyBag {
    struct IPropertyBagVtbl *lpVtbl;
};

struct IPropertyBagVtbl {
    HRESULT (*QueryInterface)(struct IPropertyBag *, IID *, void **);
    ULONG (*AddRef)(struct IPropertyBag *);
    ULONG (*Release)(struct IPropertyBag *);
    HRESULT (*Read)(struct IPropertyBag *, LPCOLESTR, VARIANT *, struct IErrorLog *);
    HRESULT (*Write)(struct IPropertyBag *, LPCOLESTR, VARIANT *);
};

struct IErrorLogVtbl {
    HRESULT (*QueryInterface)(struct IErrorLog *, IID *, void **);
    ULONG (*AddRef)(struct IErrorLog *);
    ULONG (*Release)(struct IErrorLog *);
    HRESULT (*AddError)(struct IErrorLog *, LPCOLESTR, EXCEPINFO *);
};

typedef struct ICreateTypeInfo2Vtbl ICreateTypeInfo2Vtbl, *PICreateTypeInfo2Vtbl;

typedef struct ICreateTypeInfo2 ICreateTypeInfo2, *PICreateTypeInfo2;

struct ICreateTypeInfo2Vtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeInfo2 *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeInfo2 *);
    ULONG (*Release)(struct ICreateTypeInfo2 *);
    HRESULT (*SetGuid)(struct ICreateTypeInfo2 *, GUID *);
    HRESULT (*SetTypeFlags)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*SetDocString)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeInfo2 *, DWORD);
    HRESULT (*SetVersion)(struct ICreateTypeInfo2 *, WORD, WORD);
    HRESULT (*AddRefTypeInfo)(struct ICreateTypeInfo2 *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (*AddFuncDesc)(struct ICreateTypeInfo2 *, UINT, FUNCDESC *);
    HRESULT (*AddImplType)(struct ICreateTypeInfo2 *, UINT, HREFTYPE);
    HRESULT (*SetImplTypeFlags)(struct ICreateTypeInfo2 *, UINT, INT);
    HRESULT (*SetAlignment)(struct ICreateTypeInfo2 *, WORD);
    HRESULT (*SetSchema)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (*AddVarDesc)(struct ICreateTypeInfo2 *, UINT, VARDESC *);
    HRESULT (*SetFuncAndParamNames)(struct ICreateTypeInfo2 *, UINT, LPOLESTR *, UINT);
    HRESULT (*SetVarName)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetTypeDescAlias)(struct ICreateTypeInfo2 *, TYPEDESC *);
    HRESULT (*DefineFuncAsDllEntry)(struct ICreateTypeInfo2 *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (*SetFuncDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetVarDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetFuncHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (*SetVarHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (*SetMops)(struct ICreateTypeInfo2 *, UINT, BSTR);
    HRESULT (*SetTypeIdldesc)(struct ICreateTypeInfo2 *, IDLDESC *);
    HRESULT (*LayOut)(struct ICreateTypeInfo2 *);
    HRESULT (*DeleteFuncDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*DeleteFuncDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID, INVOKEKIND);
    HRESULT (*DeleteVarDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*DeleteVarDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID);
    HRESULT (*DeleteImplType)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*SetCustData)(struct ICreateTypeInfo2 *, GUID *, VARIANT *);
    HRESULT (*SetFuncCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetParamCustData)(struct ICreateTypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (*SetVarCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetImplTypeCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetHelpStringContext)(struct ICreateTypeInfo2 *, ULONG);
    HRESULT (*SetFuncHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (*SetVarHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (*Invalidate)(struct ICreateTypeInfo2 *);
    HRESULT (*SetName)(struct ICreateTypeInfo2 *, LPOLESTR);
};

struct ICreateTypeInfo2 {
    struct ICreateTypeInfo2Vtbl *lpVtbl;
};

typedef struct ITypeMarshalVtbl ITypeMarshalVtbl, *PITypeMarshalVtbl;

typedef struct ITypeMarshal ITypeMarshal, *PITypeMarshal;

struct ITypeMarshal {
    struct ITypeMarshalVtbl *lpVtbl;
};

struct ITypeMarshalVtbl {
    HRESULT (*QueryInterface)(struct ITypeMarshal *, IID *, void **);
    ULONG (*AddRef)(struct ITypeMarshal *);
    ULONG (*Release)(struct ITypeMarshal *);
    HRESULT (*Size)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG *);
    HRESULT (*Marshal)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG, BYTE *, ULONG *);
    HRESULT (*Unmarshal)(struct ITypeMarshal *, PVOID, DWORD, ULONG, BYTE *, ULONG *);
    HRESULT (*Free)(struct ITypeMarshal *, PVOID);
};

typedef struct tagTYPEATTR *LPTYPEATTR;

typedef struct ISupportErrorInfoVtbl ISupportErrorInfoVtbl, *PISupportErrorInfoVtbl;

typedef struct ISupportErrorInfo ISupportErrorInfo, *PISupportErrorInfo;

struct ISupportErrorInfo {
    struct ISupportErrorInfoVtbl *lpVtbl;
};

struct ISupportErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct ISupportErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct ISupportErrorInfo *);
    ULONG (*Release)(struct ISupportErrorInfo *);
    HRESULT (*InterfaceSupportsErrorInfo)(struct ISupportErrorInfo *, IID *);
};

typedef struct ITypeChangeEvents ITypeChangeEvents, *PITypeChangeEvents;

typedef struct ITypeChangeEventsVtbl ITypeChangeEventsVtbl, *PITypeChangeEventsVtbl;

typedef enum tagCHANGEKIND {
    CHANGEKIND_ADDMEMBER=0,
    CHANGEKIND_DELETEMEMBER=1,
    CHANGEKIND_SETNAMES=2,
    CHANGEKIND_SETDOCUMENTATION=3,
    CHANGEKIND_GENERAL=4,
    CHANGEKIND_INVALIDATE=5,
    CHANGEKIND_CHANGEFAILED=6,
    CHANGEKIND_MAX=7
} tagCHANGEKIND;

typedef enum tagCHANGEKIND CHANGEKIND;

struct ITypeChangeEvents {
    struct ITypeChangeEventsVtbl *lpVtbl;
};

struct ITypeChangeEventsVtbl {
    HRESULT (*QueryInterface)(struct ITypeChangeEvents *, IID *, void **);
    ULONG (*AddRef)(struct ITypeChangeEvents *);
    ULONG (*Release)(struct ITypeChangeEvents *);
    HRESULT (*RequestTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR, INT *);
    HRESULT (*AfterTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR);
};

typedef struct ITypeLib *LPTYPELIB;

typedef SAFEARRAY *LPSAFEARRAY;

typedef union tagBINDPTR *LPBINDPTR;

typedef struct ICreateTypeLib ICreateTypeLib, *PICreateTypeLib;

typedef struct ICreateTypeLibVtbl ICreateTypeLibVtbl, *PICreateTypeLibVtbl;

typedef struct ICreateTypeInfo ICreateTypeInfo, *PICreateTypeInfo;

typedef struct ICreateTypeInfoVtbl ICreateTypeInfoVtbl, *PICreateTypeInfoVtbl;

struct ICreateTypeLibVtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeLib *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeLib *);
    ULONG (*Release)(struct ICreateTypeLib *);
    HRESULT (*CreateTypeInfo)(struct ICreateTypeLib *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo **);
    HRESULT (*SetName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetVersion)(struct ICreateTypeLib *, WORD, WORD);
    HRESULT (*SetGuid)(struct ICreateTypeLib *, GUID *);
    HRESULT (*SetDocString)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetHelpFileName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeLib *, DWORD);
    HRESULT (*SetLcid)(struct ICreateTypeLib *, LCID);
    HRESULT (*SetLibFlags)(struct ICreateTypeLib *, UINT);
    HRESULT (*SaveAllChanges)(struct ICreateTypeLib *);
};

struct ICreateTypeInfoVtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeInfo *);
    ULONG (*Release)(struct ICreateTypeInfo *);
    HRESULT (*SetGuid)(struct ICreateTypeInfo *, GUID *);
    HRESULT (*SetTypeFlags)(struct ICreateTypeInfo *, UINT);
    HRESULT (*SetDocString)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeInfo *, DWORD);
    HRESULT (*SetVersion)(struct ICreateTypeInfo *, WORD, WORD);
    HRESULT (*AddRefTypeInfo)(struct ICreateTypeInfo *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (*AddFuncDesc)(struct ICreateTypeInfo *, UINT, FUNCDESC *);
    HRESULT (*AddImplType)(struct ICreateTypeInfo *, UINT, HREFTYPE);
    HRESULT (*SetImplTypeFlags)(struct ICreateTypeInfo *, UINT, INT);
    HRESULT (*SetAlignment)(struct ICreateTypeInfo *, WORD);
    HRESULT (*SetSchema)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (*AddVarDesc)(struct ICreateTypeInfo *, UINT, VARDESC *);
    HRESULT (*SetFuncAndParamNames)(struct ICreateTypeInfo *, UINT, LPOLESTR *, UINT);
    HRESULT (*SetVarName)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetTypeDescAlias)(struct ICreateTypeInfo *, TYPEDESC *);
    HRESULT (*DefineFuncAsDllEntry)(struct ICreateTypeInfo *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (*SetFuncDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetVarDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetFuncHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (*SetVarHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (*SetMops)(struct ICreateTypeInfo *, UINT, BSTR);
    HRESULT (*SetTypeIdldesc)(struct ICreateTypeInfo *, IDLDESC *);
    HRESULT (*LayOut)(struct ICreateTypeInfo *);
};

struct ICreateTypeInfo {
    struct ICreateTypeInfoVtbl *lpVtbl;
};

struct ICreateTypeLib {
    struct ICreateTypeLibVtbl *lpVtbl;
};

typedef struct tagCUSTDATAITEM tagCUSTDATAITEM, *PtagCUSTDATAITEM;

struct tagCUSTDATAITEM {
    GUID guid;
    VARIANTARG varValue;
};

typedef struct IEnumVARIANT IEnumVARIANT, *PIEnumVARIANT;

typedef struct IEnumVARIANT *LPENUMVARIANT;

typedef struct IEnumVARIANTVtbl IEnumVARIANTVtbl, *PIEnumVARIANTVtbl;

struct IEnumVARIANT {
    struct IEnumVARIANTVtbl *lpVtbl;
};

struct IEnumVARIANTVtbl {
    HRESULT (*QueryInterface)(struct IEnumVARIANT *, IID *, void **);
    ULONG (*AddRef)(struct IEnumVARIANT *);
    ULONG (*Release)(struct IEnumVARIANT *);
    HRESULT (*Next)(struct IEnumVARIANT *, ULONG, VARIANT *, ULONG *);
    HRESULT (*Skip)(struct IEnumVARIANT *, ULONG);
    HRESULT (*Reset)(struct IEnumVARIANT *);
    HRESULT (*Clone)(struct IEnumVARIANT *, struct IEnumVARIANT **);
};

typedef struct IErrorInfo IErrorInfo, *PIErrorInfo;

typedef struct IErrorInfoVtbl IErrorInfoVtbl, *PIErrorInfoVtbl;

struct IErrorInfo {
    struct IErrorInfoVtbl *lpVtbl;
};

struct IErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct IErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct IErrorInfo *);
    ULONG (*Release)(struct IErrorInfo *);
    HRESULT (*GetGUID)(struct IErrorInfo *, GUID *);
    HRESULT (*GetSource)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetDescription)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetHelpFile)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetHelpContext)(struct IErrorInfo *, DWORD *);
};

typedef struct ICreateErrorInfo ICreateErrorInfo, *PICreateErrorInfo;

typedef struct ICreateErrorInfo *LPCREATEERRORINFO;

typedef struct ICreateErrorInfoVtbl ICreateErrorInfoVtbl, *PICreateErrorInfoVtbl;

struct ICreateErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct ICreateErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICreateErrorInfo *);
    ULONG (*Release)(struct ICreateErrorInfo *);
    HRESULT (*SetGUID)(struct ICreateErrorInfo *, GUID *);
    HRESULT (*SetSource)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetDescription)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetHelpFile)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateErrorInfo *, DWORD);
};

struct ICreateErrorInfo {
    struct ICreateErrorInfoVtbl *lpVtbl;
};

typedef struct tagCUSTDATA tagCUSTDATA, *PtagCUSTDATA;

typedef struct tagCUSTDATAITEM *LPCUSTDATAITEM;

struct tagCUSTDATA {
    DWORD cCustData;
    LPCUSTDATAITEM prgCustData;
};

typedef struct tagVARDESC *LPVARDESC;

typedef enum tagLIBFLAGS {
    LIBFLAG_FRESTRICTED=1,
    LIBFLAG_FCONTROL=2,
    LIBFLAG_FHIDDEN=4,
    LIBFLAG_FHASDISKIMAGE=8
} tagLIBFLAGS;

typedef struct tagPARAMDESCEX PARAMDESCEX;

typedef struct tagFUNCDESC *LPFUNCDESC;

typedef struct IErrorLog *LPERRORLOG;

typedef CY CURRENCY;

typedef struct ICreateTypeLib2 ICreateTypeLib2, *PICreateTypeLib2;

typedef struct ICreateTypeLib2 *LPCREATETYPELIB2;

typedef struct ICreateTypeLib2Vtbl ICreateTypeLib2Vtbl, *PICreateTypeLib2Vtbl;

struct ICreateTypeLib2Vtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeLib2 *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeLib2 *);
    ULONG (*Release)(struct ICreateTypeLib2 *);
    HRESULT (*CreateTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo **);
    HRESULT (*SetName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetVersion)(struct ICreateTypeLib2 *, WORD, WORD);
    HRESULT (*SetGuid)(struct ICreateTypeLib2 *, GUID *);
    HRESULT (*SetDocString)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetHelpFileName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeLib2 *, DWORD);
    HRESULT (*SetLcid)(struct ICreateTypeLib2 *, LCID);
    HRESULT (*SetLibFlags)(struct ICreateTypeLib2 *, UINT);
    HRESULT (*SaveAllChanges)(struct ICreateTypeLib2 *);
    HRESULT (*DeleteTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetCustData)(struct ICreateTypeLib2 *, GUID *, VARIANT *);
    HRESULT (*SetHelpStringContext)(struct ICreateTypeLib2 *, ULONG);
    HRESULT (*SetHelpStringDll)(struct ICreateTypeLib2 *, LPOLESTR);
};

struct ICreateTypeLib2 {
    struct ICreateTypeLib2Vtbl *lpVtbl;
};

typedef struct ISupportErrorInfo *LPSUPPORTERRORINFO;

typedef struct IErrorInfo *LPERRORINFO;

typedef struct ITypeChangeEvents *LPTYPECHANGEEVENTS;

typedef struct ITypeFactory ITypeFactory, *PITypeFactory;

typedef struct ITypeFactoryVtbl ITypeFactoryVtbl, *PITypeFactoryVtbl;

struct ITypeFactory {
    struct ITypeFactoryVtbl *lpVtbl;
};

struct ITypeFactoryVtbl {
    HRESULT (*QueryInterface)(struct ITypeFactory *, IID *, void **);
    ULONG (*AddRef)(struct ITypeFactory *);
    ULONG (*Release)(struct ITypeFactory *);
    HRESULT (*CreateFromTypeInfo)(struct ITypeFactory *, struct ITypeInfo *, IID *, struct IUnknown **);
};

typedef struct ITypeInfo2 ITypeInfo2, *PITypeInfo2;

typedef struct ITypeInfo2 *LPTYPEINFO2;

typedef struct ITypeInfo2Vtbl ITypeInfo2Vtbl, *PITypeInfo2Vtbl;

typedef struct tagCUSTDATA CUSTDATA;

struct ITypeInfo2Vtbl {
    HRESULT (*QueryInterface)(struct ITypeInfo2 *, IID *, void **);
    ULONG (*AddRef)(struct ITypeInfo2 *);
    ULONG (*Release)(struct ITypeInfo2 *);
    HRESULT (*GetTypeAttr)(struct ITypeInfo2 *, TYPEATTR **);
    HRESULT (*GetTypeComp)(struct ITypeInfo2 *, struct ITypeComp **);
    HRESULT (*GetFuncDesc)(struct ITypeInfo2 *, UINT, FUNCDESC **);
    HRESULT (*GetVarDesc)(struct ITypeInfo2 *, UINT, VARDESC **);
    HRESULT (*GetNames)(struct ITypeInfo2 *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (*GetRefTypeOfImplType)(struct ITypeInfo2 *, UINT, HREFTYPE *);
    HRESULT (*GetImplTypeFlags)(struct ITypeInfo2 *, UINT, INT *);
    HRESULT (*GetIDsOfNames)(struct ITypeInfo2 *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (*Invoke)(struct ITypeInfo2 *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*GetDocumentation)(struct ITypeInfo2 *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetDllEntry)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (*GetRefTypeInfo)(struct ITypeInfo2 *, HREFTYPE, struct ITypeInfo **);
    HRESULT (*AddressOfMember)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (*CreateInstance)(struct ITypeInfo2 *, struct IUnknown *, IID *, PVOID *);
    HRESULT (*GetMops)(struct ITypeInfo2 *, MEMBERID, BSTR *);
    HRESULT (*GetContainingTypeLib)(struct ITypeInfo2 *, struct ITypeLib **, UINT *);
    void (*ReleaseTypeAttr)(struct ITypeInfo2 *, TYPEATTR *);
    void (*ReleaseFuncDesc)(struct ITypeInfo2 *, FUNCDESC *);
    void (*ReleaseVarDesc)(struct ITypeInfo2 *, VARDESC *);
    HRESULT (*GetTypeKind)(struct ITypeInfo2 *, TYPEKIND *);
    HRESULT (*GetTypeFlags)(struct ITypeInfo2 *, ULONG *);
    HRESULT (*GetFuncIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, UINT *);
    HRESULT (*GetVarIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, UINT *);
    HRESULT (*GetCustData)(struct ITypeInfo2 *, GUID *, VARIANT *);
    HRESULT (*GetFuncCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetParamCustData)(struct ITypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (*GetVarCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetImplTypeCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetDocumentation2)(struct ITypeInfo2 *, MEMBERID, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetAllCustData)(struct ITypeInfo2 *, CUSTDATA *);
    HRESULT (*GetAllFuncCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (*GetAllParamCustData)(struct ITypeInfo2 *, UINT, UINT, CUSTDATA *);
    HRESULT (*GetAllVarCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (*GetAllImplTypeCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
};

struct ITypeInfo2 {
    struct ITypeInfo2Vtbl *lpVtbl;
};

typedef struct tagTLIBATTR *LPTLIBATTR;

typedef VARIANT *LPVARIANTARG;

typedef struct ITypeLib2Vtbl ITypeLib2Vtbl, *PITypeLib2Vtbl;

typedef struct ITypeLib2 ITypeLib2, *PITypeLib2;

struct ITypeLib2 {
    struct ITypeLib2Vtbl *lpVtbl;
};

struct ITypeLib2Vtbl {
    HRESULT (*QueryInterface)(struct ITypeLib2 *, IID *, void **);
    ULONG (*AddRef)(struct ITypeLib2 *);
    ULONG (*Release)(struct ITypeLib2 *);
    UINT (*GetTypeInfoCount)(struct ITypeLib2 *);
    HRESULT (*GetTypeInfo)(struct ITypeLib2 *, UINT, struct ITypeInfo **);
    HRESULT (*GetTypeInfoType)(struct ITypeLib2 *, UINT, TYPEKIND *);
    HRESULT (*GetTypeInfoOfGuid)(struct ITypeLib2 *, GUID *, struct ITypeInfo **);
    HRESULT (*GetLibAttr)(struct ITypeLib2 *, TLIBATTR **);
    HRESULT (*GetTypeComp)(struct ITypeLib2 *, struct ITypeComp **);
    HRESULT (*GetDocumentation)(struct ITypeLib2 *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*IsName)(struct ITypeLib2 *, LPOLESTR, ULONG, BOOL *);
    HRESULT (*FindName)(struct ITypeLib2 *, LPOLESTR, ULONG, struct ITypeInfo **, MEMBERID *, USHORT *);
    void (*ReleaseTLibAttr)(struct ITypeLib2 *, TLIBATTR *);
    HRESULT (*GetCustData)(struct ITypeLib2 *, GUID *, VARIANT *);
    HRESULT (*GetLibStatistics)(struct ITypeLib2 *, ULONG *, ULONG *);
    HRESULT (*GetDocumentation2)(struct ITypeLib2 *, INT, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetAllCustData)(struct ITypeLib2 *, CUSTDATA *);
};

typedef struct ICreateTypeLib *LPCREATETYPELIB;

typedef struct tagELEMDESC *LPELEMDESC;

typedef struct tagARRAYDESC ARRAYDESC;

typedef struct ICreateTypeInfo2 *LPCREATETYPEINFO2;

typedef struct ITypeInfo *LPTYPEINFO;

typedef struct IRecordInfo *LPRECORDINFO;

typedef VARIANT *LPVARIANT;

typedef struct tagEXCEPINFO *LPEXCEPINFO;

typedef enum tagTYPEFLAGS {
    TYPEFLAG_FAPPOBJECT=1,
    TYPEFLAG_FCANCREATE=2,
    TYPEFLAG_FLICENSED=4,
    TYPEFLAG_FPREDECLID=8,
    TYPEFLAG_FHIDDEN=16,
    TYPEFLAG_FCONTROL=32,
    TYPEFLAG_FDUAL=64,
    TYPEFLAG_FNONEXTENSIBLE=128,
    TYPEFLAG_FOLEAUTOMATION=256,
    TYPEFLAG_FRESTRICTED=512,
    TYPEFLAG_FAGGREGATABLE=1024,
    TYPEFLAG_FREPLACEABLE=2048,
    TYPEFLAG_FDISPATCHABLE=4096,
    TYPEFLAG_FREVERSEBIND=8192,
    TYPEFLAG_FPROXY=16384
} tagTYPEFLAGS;

typedef enum tagTYPEFLAGS TYPEFLAGS;

typedef struct tagPARAMDESC *LPPARAMDESC;

typedef struct tagCUSTDATAITEM CUSTDATAITEM;

typedef struct tagIDLDESC *LPIDLDESC;

typedef enum tagLIBFLAGS LIBFLAGS;

typedef struct IPropertyBag *LPPROPERTYBAG;

typedef enum tagVARFLAGS {
    VARFLAG_FREADONLY=1,
    VARFLAG_FSOURCE=2,
    VARFLAG_FBINDABLE=4,
    VARFLAG_FREQUESTEDIT=8,
    VARFLAG_FDISPLAYBIND=16,
    VARFLAG_FDEFAULTBIND=32,
    VARFLAG_FHIDDEN=64,
    VARFLAG_FRESTRICTED=128,
    VARFLAG_FDEFAULTCOLLELEM=256,
    VARFLAG_FUIDEFAULT=512,
    VARFLAG_FNONBROWSABLE=1024,
    VARFLAG_FREPLACEABLE=2048,
    VARFLAG_FIMMEDIATEBIND=4096
} tagVARFLAGS;

typedef enum tagFUNCFLAGS {
    FUNCFLAG_FRESTRICTED=1,
    FUNCFLAG_FSOURCE=2,
    FUNCFLAG_FBINDABLE=4,
    FUNCFLAG_FREQUESTEDIT=8,
    FUNCFLAG_FDISPLAYBIND=16,
    FUNCFLAG_FDEFAULTBIND=32,
    FUNCFLAG_FHIDDEN=64,
    FUNCFLAG_FUSESGETLASTERROR=128,
    FUNCFLAG_FDEFAULTCOLLELEM=256,
    FUNCFLAG_FUIDEFAULT=512,
    FUNCFLAG_FNONBROWSABLE=1024,
    FUNCFLAG_FREPLACEABLE=2048,
    FUNCFLAG_FIMMEDIATEBIND=4096
} tagFUNCFLAGS;

typedef enum tagSF_TYPE {
    SF_ERROR=0,
    SF_I1=1,
    SF_I2=2,
    SF_I4=3,
    SF_I8=4,
    SF_BSTR=5,
    SF_UNKNOWN=6,
    SF_DISPATCH=7,
    SF_VARIANT=8,
    SF_RECORD=9,
    SF_HAVEIID=10
} tagSF_TYPE;

typedef struct ICreateTypeInfo *LPCREATETYPEINFO;

typedef enum tagFUNCFLAGS FUNCFLAGS;

typedef struct tagCLEANLOCALSTORAGE tagCLEANLOCALSTORAGE, *PtagCLEANLOCALSTORAGE;

typedef struct tagCLEANLOCALSTORAGE CLEANLOCALSTORAGE;

struct tagCLEANLOCALSTORAGE {
    struct IUnknown *pInterface;
    PVOID pStorage;
    DWORD flags;
};

typedef enum tagSF_TYPE SF_TYPE;

typedef struct IDispatch *LPDISPATCH;

typedef struct ITypeComp *LPTYPECOMP;

typedef struct tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;

typedef struct ITypeLib2 *LPTYPELIB2;

typedef enum tagVARFLAGS VARFLAGS;

typedef struct tagCUSTDATA *LPCUSTDATA;

#define FADF_HAVEVARTYPE 128

#define FADF_HAVEIID 64

#define PARAMFLAG_FRETVAL 8

#define PARAMFLAG_FHASCUSTDATA 64

#define FADF_RECORD 32

#define IMPLTYPEFLAG_FDEFAULT 1

#define FADF_RESERVED 61448

#define IDLFLAG_FLCID 4

#define PARAMFLAG_NONE 0

#define DISPID_NEWENUM -4

#define PARAMFLAG_FLCID 4

#define PARAMFLAG_FOUT 2

#define DISPID_VALUE 0

#define FADF_UNKNOWN 512

#define FADF_STATIC 2

#define IMPLTYPEFLAG_FRESTRICTED 4

#define DISPID_UNKNOWN -1

#define DISPID_COLLECT -8

#define PARAMFLAG_FIN 1

#define FADF_BSTR 256

#define PARAMFLAG_FOPT 16

#define IDLFLAG_FRETVAL 8

#define PARAMFLAG_FHASDEFAULT 32

#define IMPLTYPEFLAG_FDEFAULTVTABLE 8

#define DISPID_CONSTRUCTOR -6

#define DISPID_PROPERTYPUT -3

#define IDLFLAG_FIN 1

#define DISPID_DESTRUCTOR -7

#define DISPID_EVALUATE -5

#define FADF_AUTO 1

#define IMPLTYPEFLAG_FSOURCE 2

#define FADF_EMBEDDED 4

#define FADF_DISPATCH 1024

#define IDLFLAG_FOUT 2

#define FADF_FIXEDSIZE 16

#define IDLFLAG_NONE 0

#define FADF_VARIANT 2048

typedef struct RPC_IMPORT_CONTEXT_P RPC_IMPORT_CONTEXT_P, *PRPC_IMPORT_CONTEXT_P;

typedef void *RPC_NS_HANDLE;

typedef void *I_RPC_HANDLE;

typedef I_RPC_HANDLE RPC_BINDING_HANDLE;

typedef struct _RPC_BINDING_VECTOR _RPC_BINDING_VECTOR, *P_RPC_BINDING_VECTOR;

typedef struct _RPC_BINDING_VECTOR RPC_BINDING_VECTOR;

struct _RPC_BINDING_VECTOR {
    ulong Count;
    RPC_BINDING_HANDLE BindingH[1];
};

struct RPC_IMPORT_CONTEXT_P {
    RPC_NS_HANDLE LookupContext;
    RPC_BINDING_HANDLE ProposedHandle;
    RPC_BINDING_VECTOR *Bindings;
};

typedef struct _exception _exception, *P_exception;

struct _exception {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
};

typedef struct _complex _complex, *P_complex;

struct _complex {
    double x;
    double y;
};

#define SING 2

#define _UNDERFLOW 4

#define _OVERFLOW 3

#define EDOM 33

#define TLOSS 5

#define PLOSS 6

#define _DOMAIN 1

#define _PLOSS 6

#define _SING 2

#define OVERFLOW 3

#define _TLOSS 5

#define ERANGE 34

#define DOMAIN 1

#define UNDERFLOW 4

typedef char *va_list;

typedef uint uintptr_t;

typedef struct _D3DMATRIX *LPD3DXMATRIX;

typedef struct ID3DXMatrixStack ID3DXMatrixStack, *PID3DXMatrixStack;

typedef struct ID3DXMatrixStack *LPD3DXMATRIXSTACK;

typedef struct ID3DXMatrixStackVtbl ID3DXMatrixStackVtbl, *PID3DXMatrixStackVtbl;

struct ID3DXMatrixStackVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*Pop)(struct IDirect3DVolume8 *);
    HRESULT (*Push)(struct IDirect3DVolume8 *);
    HRESULT (*LoadIdentity)(struct IDirect3DVolume8 *);
    HRESULT (*LoadMatrix)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*MultMatrix)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*MultMatrixLocal)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*RotateAxis)(struct IDirect3DVolume8 *, D3DXVECTOR3 *, FLOAT);
    HRESULT (*RotateAxisLocal)(struct IDirect3DVolume8 *, D3DXVECTOR3 *, FLOAT);
    HRESULT (*RotateYawPitchRoll)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*RotateYawPitchRollLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*Scale)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*ScaleLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*Translate)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*TranslateLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    D3DXMATRIX * (*GetTop)(struct IDirect3DVolume8 *);
};

struct ID3DXMatrixStack {
    struct ID3DXMatrixStackVtbl *lpVtbl;
};

typedef struct D3DXQUATERNION D3DXQUATERNION, *PD3DXQUATERNION;

struct D3DXQUATERNION {
    FLOAT x;
    FLOAT y;
    FLOAT z;
    FLOAT w;
};

typedef struct D3DXCOLOR D3DXCOLOR, *PD3DXCOLOR;

struct D3DXCOLOR {
    FLOAT r;
    FLOAT g;
    FLOAT b;
    FLOAT a;
};

typedef struct D3DXPLANE D3DXPLANE, *PD3DXPLANE;

struct D3DXPLANE {
    FLOAT a;
    FLOAT b;
    FLOAT c;
    FLOAT d;
};

typedef struct D3DXVECTOR4 D3DXVECTOR4, *PD3DXVECTOR4;

struct D3DXVECTOR4 {
    FLOAT x;
    FLOAT y;
    FLOAT z;
    FLOAT w;
};

typedef struct D3DXCOLOR *LPD3DXCOLOR;

typedef struct D3DXQUATERNION *LPD3DXQUATERNION;

typedef struct _D3DVECTOR *LPD3DXVECTOR3;

typedef struct D3DXVECTOR2 *LPD3DXVECTOR2;

typedef struct D3DXVECTOR4 *LPD3DXVECTOR4;

typedef struct D3DXPLANE *LPD3DXPLANE;

typedef struct _EFS_RPC_BLOB _EFS_RPC_BLOB, *P_EFS_RPC_BLOB;

typedef BYTE *PBYTE;

struct _EFS_RPC_BLOB {
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _ENCRYPTION_CERTIFICATE_LIST _ENCRYPTION_CERTIFICATE_LIST, *P_ENCRYPTION_CERTIFICATE_LIST;

typedef struct _ENCRYPTION_CERTIFICATE _ENCRYPTION_CERTIFICATE, *P_ENCRYPTION_CERTIFICATE;

typedef struct _ENCRYPTION_CERTIFICATE *PENCRYPTION_CERTIFICATE;

typedef struct _CERTIFICATE_BLOB _CERTIFICATE_BLOB, *P_CERTIFICATE_BLOB;

typedef struct _CERTIFICATE_BLOB *PEFS_CERTIFICATE_BLOB;

struct _ENCRYPTION_CERTIFICATE_LIST {
    DWORD nUsers;
    PENCRYPTION_CERTIFICATE *pUsers;
};

struct _ENCRYPTION_CERTIFICATE {
    DWORD cbTotalLength;
    SID *pUserSid;
    PEFS_CERTIFICATE_BLOB pCertBlob;
};

struct _CERTIFICATE_BLOB {
    DWORD dwCertEncodingType;
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _EFS_HASH_BLOB _EFS_HASH_BLOB, *P_EFS_HASH_BLOB;

typedef struct _EFS_HASH_BLOB EFS_HASH_BLOB;

struct _EFS_HASH_BLOB {
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _EFS_KEY_INFO _EFS_KEY_INFO, *P_EFS_KEY_INFO;

typedef struct _EFS_KEY_INFO *PEFS_KEY_INFO;

typedef uint ALG_ID;

struct _EFS_KEY_INFO {
    DWORD dwVersion;
    ULONG Entropy;
    ALG_ID Algorithm;
    ULONG KeyLength;
};

typedef struct _EFS_KEY_INFO EFS_KEY_INFO;

typedef struct _EFS_RPC_BLOB *PEFS_RPC_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST _ENCRYPTION_CERTIFICATE_HASH_LIST, *P_ENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _ENCRYPTION_CERTIFICATE_HASH _ENCRYPTION_CERTIFICATE_HASH, *P_ENCRYPTION_CERTIFICATE_HASH;

typedef struct _ENCRYPTION_CERTIFICATE_HASH *PENCRYPTION_CERTIFICATE_HASH;

typedef struct _EFS_HASH_BLOB *PEFS_HASH_BLOB;

struct _ENCRYPTION_CERTIFICATE_HASH {
    DWORD cbTotalLength;
    SID *pUserSid;
    PEFS_HASH_BLOB pHash;
    LPWSTR lpDisplayInformation;
};

struct _ENCRYPTION_CERTIFICATE_HASH_LIST {
    DWORD nCert_Hash;
    PENCRYPTION_CERTIFICATE_HASH *pUsers;
};

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST *PENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _EFS_RPC_BLOB EFS_RPC_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE_HASH ENCRYPTION_CERTIFICATE_HASH;

typedef struct _ENCRYPTION_CERTIFICATE_LIST *PENCRYPTION_CERTIFICATE_LIST;

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST ENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _CERTIFICATE_BLOB EFS_CERTIFICATE_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE ENCRYPTION_CERTIFICATE;

typedef struct _ENCRYPTION_CERTIFICATE_LIST ENCRYPTION_CERTIFICATE_LIST;

#define MAX_SID_SIZE 256

typedef struct tagCRGB tagCRGB, *PtagCRGB;

struct tagCRGB {
    BYTE bRed;
    BYTE bGreen;
    BYTE bBlue;
    BYTE bExtra;
};

typedef struct tagCRGB CRGB;

#define PRINTDLGEXORD 1549

#define grp2 1073

#define grp1 1072

#define grp4 1075

#define grp3 1074

#define cmb3 1138

#define cmb2 1137

#define cmb1 1136

#define rad12 1067

#define rad13 1068

#define rad10 1065

#define rad11 1066

#define rad16 1071

#define rad14 1069

#define rad15 1070

#define chx9 1048

#define chx8 1047

#define chx7 1046

#define chx6 1045

#define chx5 1044

#define chx4 1043

#define chx3 1042

#define chx2 1041

#define chx1 1040

#define edt1 1152

#define edt2 1153

#define FORMATDLGORD30 1544

#define edt3 1154

#define FORMATDLGORD31 1543

#define edt4 1155

#define edt5 1156

#define edt6 1157

#define edt7 1158

#define edt8 1159

#define edt9 1160

#define frm1 1076

#define frm2 1077

#define frm3 1078

#define frm4 1079

#define FILEOPENORD 1536

#define chx10 1049

#define chx11 1050

#define chx14 1053

#define chx15 1054

#define chx12 1051

#define chx13 1052

#define chx16 1055

#define ctl1 1184

#define RUNDLGORD 1545

#define ctlFirst 1024

#define COLORMGMTDLGORD 1551

#define MULTIFILEOPENORD 1537

#define NEWFILEOPENV2ORD 1552

#define stc10 1097

#define stc12 1099

#define stc11 1098

#define PRNSETUPDLGORD 1539

#define psh16 1039

#define psh14 1037

#define psh15 1038

#define psh12 1035

#define psh13 1036

#define psh10 1033

#define psh11 1034

#define REPLACEDLGORD 1541

#define NEWFILEOPENORD 1547

#define stc30 1117

#define stc32 1119

#define stc31 1118

#define stc25 1112

#define stc24 1111

#define stc27 1114

#define stc26 1113

#define stc29 1116

#define stc28 1115

#define rad7 1062

#define rad8 1063

#define rad5 1060

#define rad6 1061

#define rad3 1058

#define rad4 1059

#define rad1 1056

#define rad2 1057

#define stc21 1108

#define stc20 1107

#define stc23 1110

#define rad9 1064

#define stc22 1109

#define edt15 1166

#define stc14 1101

#define edt14 1165

#define stc13 1100

#define stc16 1103

#define edt16 1167

#define stc15 1102

#define edt11 1162

#define stc18 1105

#define edt10 1161

#define stc17 1104

#define edt13 1164

#define edt12 1163

#define stc19 1106

#define rct3 1082

#define rct4 1083

#define cmb15 1150

#define rct1 1080

#define PAGESETUPDLGORD 1546

#define cmb16 1151

#define rct2 1081

#define cmb11 1146

#define cmb12 1147

#define cmb13 1148

#define cmb9 1144

#define cmb14 1149

#define cmb8 1143

#define cmb7 1142

#define cmb6 1141

#define cmb5 1140

#define cmb10 1145

#define cmb4 1139

#define lst4 1123

#define lst3 1122

#define lst2 1121

#define lst1 1120

#define lst8 1127

#define lst7 1126

#define lst6 1125

#define lst5 1124

#define psh6 1029

#define psh5 1028

#define psh8 1031

#define lst9 1128

#define psh7 1030

#define psh2 1025

#define psh1 1024

#define psh4 1027

#define psh3 1026

#define psh9 1032

#define ctlLast 1279

#define FINDDLGORD 1540

#define PAGESETUPDLGORDMOTIF 1550

#define PRINTDLGORD 1538

#define lst16 1135

#define ico2 1085

#define ico1 1084

#define lst14 1133

#define ico4 1087

#define lst15 1134

#define ico3 1086

#define lst12 1131

#define lst13 1132

#define lst10 1129

#define lst11 1130

#define scr4 1171

#define stc4 1091

#define scr5 1172

#define stc5 1092

#define scr2 1169

#define stc2 1089

#define scr3 1170

#define stc3 1090

#define FONTDLGORD 1542

#define scr1 1168

#define stc1 1088

#define pshHelp 1038

#define scr8 1175

#define stc8 1095

#define stc9 1096

#define scr6 1173

#define stc6 1093

#define scr7 1174

#define stc7 1094

typedef uint *PUINT_PTR;

typedef int *PLONG32;

typedef uint UINT32;

typedef char *PINT8;

typedef longlong LONG64;

typedef short INT16;

typedef ULONG_PTR *PSIZE_T;

typedef ushort UHALF_PTR;

typedef uint DWORD32;

typedef short HALF_PTR;

typedef ulong HANDLE_PTR;

typedef ulonglong *PDWORD64;

typedef int INT32;

typedef short *PINT16;

typedef ulong *PULONG_PTR;

typedef ulonglong ULONG64;

typedef ULONG_PTR KAFFINITY;

typedef ushort *PUINT16;

typedef char INT8;

typedef ulong POINTER_64_INT;

typedef ulonglong *PULONG64;

typedef ULONG_PTR *PDWORD_PTR;

typedef LONG_PTR *PSSIZE_T;

typedef uchar *PUINT8;

typedef KAFFINITY *PKAFFINITY;

typedef uint *PDWORD32;

typedef longlong *PLONG64;

typedef long *PLONG_PTR;

typedef ulonglong UINT64;

typedef uint *PUINT32;

typedef int *PINT32;

typedef ushort UINT16;

typedef uchar UINT8;

typedef ulonglong *PUINT64;

typedef longlong *PINT64;

typedef int INT_PTR;

typedef uint *PULONG32;

typedef LONG_PTR SSIZE_T;

typedef longlong INT64;

typedef int *PINT_PTR;

typedef ushort *PUHALF_PTR;

typedef uint ULONG32;

typedef short *PHALF_PTR;

typedef int LONG32;

#define MININT_PTR 0

#define ADDRESS_TAG_BIT 2147483648

#define MAXINT_PTR -1

#define MAXUINT_PTR -1

#define MAXUHALF_PTR -1

#define MINLONG_PTR 0

#define MINHALF_PTR 0

#define MAXULONG_PTR -1

#define MAXLONG_PTR -1

#define MAXHALF_PTR -1

typedef struct _cpinfo _cpinfo, *P_cpinfo;

struct _cpinfo {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
};

typedef LONG GEOID;

typedef struct _numberfmtA _numberfmtA, *P_numberfmtA;

typedef struct _numberfmtA *LPNUMBERFMTA;

struct _numberfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef DWORD CALID;

typedef BOOL (*CALINFO_ENUMPROCEXA)(LPSTR, CALID);

typedef struct _currencyfmtW _currencyfmtW, *P_currencyfmtW;

typedef struct _currencyfmtW CURRENCYFMTW;

struct _currencyfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPWSTR lpCurrencySymbol;
};

typedef struct _currencyfmtA _currencyfmtA, *P_currencyfmtA;

typedef struct _currencyfmtA *LPCURRENCYFMTA;

typedef LPCURRENCYFMTA LPCURRENCYFMT;

struct _currencyfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPSTR lpCurrencySymbol;
};

typedef struct _numberfmtW _numberfmtW, *P_numberfmtW;

typedef struct _numberfmtW *LPNUMBERFMTW;

struct _numberfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef struct _numberfmtA NUMBERFMTA;

typedef struct _currencyfmtA CURRENCYFMTA;

typedef BOOL (*GEO_ENUMPROC)(GEOID);

typedef struct _cpinfoexA _cpinfoexA, *P_cpinfoexA;

typedef struct _cpinfoexA *LPCPINFOEXA;

typedef LPCPINFOEXA LPCPINFOEX;

struct _cpinfoexA {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    CHAR CodePageName[260];
};

typedef BOOL (*UILANGUAGE_ENUMPROCA)(LPSTR, LONG_PTR);

typedef enum SYSGEOTYPE {
    GEO_NATION=1,
    GEO_LATITUDE=2,
    GEO_LONGITUDE=3,
    GEO_ISO2=4,
    GEO_ISO3=5,
    GEO_RFC1766=6,
    GEO_LCID=7,
    GEO_FRIENDLYNAME=8,
    GEO_OFFICIALNAME=9,
    GEO_TIMEZONES=10,
    GEO_OFFICIALLANGUAGES=11
} SYSGEOTYPE;

typedef BOOL (*CALINFO_ENUMPROCEXW)(LPWSTR, CALID);

typedef struct _cpinfoexW _cpinfoexW, *P_cpinfoexW;

struct _cpinfoexW {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    WCHAR CodePageName[260];
};

typedef struct _currencyfmtW *LPCURRENCYFMTW;

typedef BOOL (*DATEFMT_ENUMPROCEXW)(LPWSTR, CALID);

typedef struct _cpinfo CPINFO;

typedef BOOL (*TIMEFMT_ENUMPROCA)(LPSTR);

typedef struct _cpinfoexA CPINFOEXA;

typedef CPINFOEXA CPINFOEX;

typedef DWORD LGRPID;

typedef BOOL (*LANGGROUPLOCALE_ENUMPROCW)(LGRPID, LCID, LPWSTR, LONG_PTR);

typedef struct _cpinfoexW *LPCPINFOEXW;

typedef BOOL (*UILANGUAGE_ENUMPROCW)(LPWSTR, LONG_PTR);

typedef BOOL (*LANGGROUPLOCALE_ENUMPROCA)(LGRPID, LCID, LPSTR, LONG_PTR);

typedef DWORD CALTYPE;

typedef BOOL (*CODEPAGE_ENUMPROCA)(LPSTR);

typedef BOOL (*CODEPAGE_ENUMPROCW)(LPWSTR);

typedef enum SYSGEOCLASS {
    GEOCLASS_REGION=14,
    GEOCLASS_NATION=16
} SYSGEOCLASS;

typedef BOOL (*TIMEFMT_ENUMPROCW)(LPWSTR);

typedef BOOL (*CALINFO_ENUMPROCA)(LPSTR);

typedef struct _cpinfoexW CPINFOEXW;

typedef struct _numberfmtW NUMBERFMTW;

typedef BOOL (*LANGUAGEGROUP_ENUMPROCW)(LGRPID, LPWSTR, LPWSTR, DWORD, LONG_PTR);

typedef BOOL (*CALINFO_ENUMPROCW)(LPWSTR);

typedef BOOL (*LANGUAGEGROUP_ENUMPROCA)(LGRPID, LPSTR, LPSTR, DWORD, LONG_PTR);

typedef struct _cpinfo *LPCPINFO;

typedef DWORD LCTYPE;

typedef BOOL (*DATEFMT_ENUMPROCEXA)(LPSTR, CALID);

typedef LPNUMBERFMTA LPNUMBERFMT;

typedef BOOL (*LOCALE_ENUMPROCA)(LPSTR);

typedef BOOL (*DATEFMT_ENUMPROCW)(LPWSTR);

typedef BOOL (*LOCALE_ENUMPROCW)(LPWSTR);

typedef DWORD GEOCLASS;

typedef BOOL (*DATEFMT_ENUMPROCA)(LPSTR);

typedef DWORD GEOTYPE;

typedef NUMBERFMTA NUMBERFMT;

typedef CURRENCYFMTA CURRENCYFMT;

#define C3_HIRAGANA 32

#define MAP_COMPOSITE 64

#define DATE_YEARMONTH 8

#define CTRY_YEMEN 967

#define CSTR_EQUAL 2

#define C2_EUROPENUMBER 3

#define NORM_IGNORECASE 1

#define CTRY_PUERTO_RICO 1

#define LCMAP_HALFWIDTH 4194304

#define LOCALE_SNATIVECURRNAME 4104

#define LOCALE_SDAYNAME7 48

#define LOCALE_SDAYNAME6 47

#define LOCALE_SDAYNAME5 46

#define LGRPID_VIETNAMESE 14

#define LCMAP_FULLWIDTH 8388608

#define CTRY_ESTONIA 372

#define CAL_IYEAROFFSETRANGE 3

#define LOCALE_SDAYNAME4 45

#define LOCALE_SDAYNAME3 44

#define LOCALE_SDAYNAME2 43

#define LOCALE_SDAYNAME1 42

#define CTRY_KAZAKSTAN 7

#define CTRY_BRAZIL 55

#define LOCALE_SNATIVELANGNAME 4

#define LOCALE_ICALENDARTYPE 4105

#define CAL_SMONTHNAME1 21

#define CAL_SMONTHNAME2 22

#define CAL_SMONTHNAME3 23

#define CAL_SMONTHNAME4 24

#define CAL_SMONTHNAME5 25

#define CAL_SMONTHNAME6 26

#define CAL_SMONTHNAME7 27

#define CAL_SMONTHNAME8 28

#define CAL_SMONTHNAME9 29

#define LOCALE_IDIGITSUBSTITUTION 4116

#define CTRY_CROATIA 385

#define MAX_DEFAULTCHAR 2

#define CTRY_MONACO 33

#define C1_ALPHA 256

#define C3_SYMBOL 8

#define CTRY_GUATEMALA 502

#define CTRY_PAKISTAN 92

#define LOCALE_INEGSYMPRECEDES 86

#define C1_CNTRL 32

#define C1_BLANK 64

#define CTRY_CARIBBEAN 1

#define LGRPID_CYRILLIC 5

#define CTRY_AUSTRALIA 61

#define CTRY_UKRAINE 380

#define LOCALE_RETURN_NUMBER 536870912

#define C1_LOWER 2

#define C2_EUROPESEPARATOR 4

#define CAL_SERASTRING 4

#define LOCALE_NOUSEROVERRIDE 2147483648

#define CTRY_MACAU 853

#define LGRPID_TURKISH 6

#define LOCALE_IPAPERSIZE 4106

#define LCMAP_TRADITIONAL_CHINESE 67108864

#define CTRY_MONGOLIA 976

#define CT_CTYPE2 2

#define CT_CTYPE1 1

#define CAL_HIJRI 6

#define LOCALE_ICURRENCY 27

#define CTRY_LIECHTENSTEIN 41

#define LGRPID_GREEK 4

#define CTRY_SPAIN 34

#define CTRY_SWEDEN 46

#define CTRY_VIET_NAM 84

#define C2_NOTAPPLICABLE 0

#define LGRPID_TRADITIONAL_CHINESE 9

#define LOCALE_SNEGATIVESIGN 81

#define CT_CTYPE3 4

#define C2_SEGMENTSEPARATOR 9

#define CTRY_UNITED_KINGDOM 44

#define WC_NO_BEST_FIT_CHARS 1024

#define LOCALE_SCOUNTRY 6

#define CTRY_LEBANON 961

#define MB_ERR_INVALID_CHARS 8

#define CTRY_RUSSIA 7

#define LOCALE_ICOUNTRY 5

#define CTRY_ARGENTINA 54

#define LOCALE_INEGSIGNPOSN 83

#define SORT_STRINGSORT 4096

#define C2_EUROPETERMINATOR 5

#define CTRY_GEORGIA 995

#define CAL_GREGORIAN_XLIT_ENGLISH 11

#define CTRY_BELIZE 501

#define CTRY_ZIMBABWE 263

#define C3_KASHIDA 512

#define LOCALE_SABBREVDAYNAME2 50

#define LOCALE_SABBREVDAYNAME1 49

#define CAL_SABBREVMONTHNAME5 38

#define LOCALE_SABBREVDAYNAME4 52

#define CTRY_ALGERIA 213

#define CAL_SABBREVMONTHNAME6 39

#define LOCALE_SABBREVDAYNAME3 51

#define LOCALE_INEGSEPBYSPACE 87

#define CAL_SABBREVMONTHNAME3 36

#define LOCALE_SABBREVDAYNAME6 54

#define CAL_SABBREVMONTHNAME4 37

#define LOCALE_SABBREVDAYNAME5 53

#define CAL_JAPAN 3

#define CAL_SABBREVMONTHNAME9 42

#define LOCALE_SABBREVDAYNAME7 55

#define CAL_SABBREVMONTHNAME7 40

#define DATE_USE_ALT_CALENDAR 4

#define CAL_SABBREVMONTHNAME8 41

#define CAL_SABBREVMONTHNAME1 34

#define CAL_SABBREVMONTHNAME2 35

#define CP_UTF8 65001

#define CP_UTF7 65000

#define LOCALE_IPOSSEPBYSPACE 85

#define C3_NOTAPPLICABLE 0

#define CTRY_UZBEKISTAN 7

#define CAL_SYEARMONTH 47

#define LOCALE_ITIMEMARKPOSN 4101

#define LOCALE_IMONLZERO 39

#define C2_OTHERNEUTRAL 11

#define CTRY_ARMENIA 374

#define CTRY_ECUADOR 593

#define CAL_SMONTHNAME10 30

#define CAL_SMONTHNAME11 31

#define CAL_SMONTHNAME12 32

#define CAL_SMONTHNAME13 33

#define LOCALE_SMONTHOUSANDSEP 23

#define CTRY_TATARSTAN 7

#define LGRPID_THAI 11

#define WC_SEPCHARS 32

#define LOCALE_IFIRSTWEEKOFYEAR 4109

#define LOCALE_SYEARMONTH 4102

#define LCID_ALTERNATE_SORTS 4

#define LCMAP_LINGUISTIC_CASING 16777216

#define LOCALE_IDATE 33

#define CTRY_ICELAND 354

#define CTRY_MOROCCO 212

#define LCMAP_UPPERCASE 512

#define TIME_NOMINUTESORSECONDS 1

#define C2_ARABICNUMBER 6

#define LCMAP_SIMPLIFIED_CHINESE 33554432

#define CTRY_KENYA 254

#define CTRY_SYRIA 963

#define CTRY_BRUNEI_DARUSSALAM 673

#define LOCALE_SMONTHNAME9 64

#define CTRY_BOLIVIA 591

#define CTRY_SWITZERLAND 41

#define CTRY_IRELAND 353

#define CTRY_HUNGARY 36

#define LOCALE_IDAYLZERO 38

#define ENUM_ALL_CALENDARS 4294967295

#define LOCALE_SLONGDATE 32

#define CAL_SCALNAME 2

#define LOCALE_SMONTHNAME2 57

#define LOCALE_SMONTHNAME1 56

#define LOCALE_SMONTHNAME4 59

#define LOCALE_SMONTHNAME3 58

#define LOCALE_SMONTHNAME6 61

#define LOCALE_SMONTHNAME5 60

#define LOCALE_SMONTHNAME8 63

#define LOCALE_SMONTHNAME7 62

#define CAL_GREGORIAN 1

#define CTRY_SLOVAK 421

#define MB_PRECOMPOSED 1

#define LOCALE_SNATIVECTRYNAME 8

#define LOCALE_SABBREVMONTHNAME13 4111

#define LOCALE_SABBREVMONTHNAME12 79

#define LOCALE_SABBREVMONTHNAME11 78

#define LOCALE_SABBREVMONTHNAME10 77

#define LOCALE_S1159 40

#define GEOID_NOT_AVAILABLE -1

#define LGRPID_ARMENIAN 17

#define CP_OEMCP 1

#define LOCALE_IDEFAULTEBCDICCODEPAGE 4114

#define LOCALE_IDEFAULTMACCODEPAGE 4113

#define CAL_SLONGDATE 6

#define WC_DEFAULTCHAR 64

#define CTRY_OMAN 968

#define CTRY_SOUTH_AFRICA 27

#define LOCALE_ILANGUAGE 1

#define CAL_ICALINTVALUE 1

#define CTRY_INDIA 91

#define CTRY_MALDIVES 960

#define CTRY_NETHERLANDS 31

#define LOCALE_SSHORTDATE 31

#define TIME_FORCE24HOURFORMAT 8

#define CTRY_KUWAIT 965

#define CAL_USE_CP_ACP 1073741824

#define LOCALE_SENGCURRNAME 4103

#define CTRY_LITHUANIA 370

#define LOCALE_SGROUPING 16

#define CTRY_TRINIDAD_Y_TOBAGO 1

#define CTRY_PRCHINA 86

#define CP_THREAD_ACP 3

#define CTRY_AZERBAIJAN 994

#define CTRY_PERU 51

#define NORM_IGNOREKANATYPE 65536

#define CTRY_HONG_KONG 852

#define CTRY_URUGUAY 598

#define CTRY_ROMANIA 40

#define CTRY_ITALY 39

#define CP_ACP 0

#define CTRY_IRAQ 964

#define CTRY_IRAN 981

#define MAX_LEADBYTES 12

#define LOCALE_IINTLCURRDIGITS 26

#define CTRY_PARAGUAY 595

#define LOCALE_SLANGUAGE 2

#define CTRY_FINLAND 358

#define CTRY_BELGIUM 32

#define CAL_TAIWAN 4

#define CAL_SSHORTDATE 5

#define LOCALE_ILZERO 18

#define C3_ALPHA 32768

#define CTRY_TURKEY 90

#define CP_INSTALLED 1

#define LGRPID_SUPPORTED 2

#define LOCALE_IDEFAULTCODEPAGE 11

#define LCMAP_SORTKEY 1024

#define CTRY_DOMINICAN_REPUBLIC 1

#define LOCALE_IPOSSYMPRECEDES 84

#define CTRY_EL_SALVADOR 503

#define LOCALE_IOPTIONALCALENDAR 4107

#define CTRY_TAIWAN 886

#define LOCALE_IDIGITS 17

#define LGRPID_INSTALLED 1

#define C3_LEXICAL 1024

#define C3_HALFWIDTH 64

#define LOCALE_FONTSIGNATURE 88

#define CTRY_GERMANY 49

#define CTRY_BELARUS 375

#define CP_SUPPORTED 2

#define LOCALE_SABBREVMONTHNAME1 68

#define LOCALE_SABBREVMONTHNAME2 69

#define LOCALE_SABBREVMONTHNAME3 70

#define CAL_KOREA 5

#define LOCALE_SABBREVMONTHNAME4 71

#define LOCALE_SABBREVMONTHNAME5 72

#define LOCALE_SABBREVMONTHNAME6 73

#define LOCALE_SABBREVMONTHNAME7 74

#define LOCALE_SABBREVMONTHNAME8 75

#define LOCALE_SABBREVMONTHNAME9 76

#define CTRY_SERBIA 381

#define C3_FULLWIDTH 128

#define CTRY_ISRAEL 972

#define C3_IDEOGRAPH 256

#define LOCALE_ICENTURY 36

#define LOCALE_ITLZERO 37

#define LOCALE_ICURRDIGITS 25

#define LOCALE_SENGCOUNTRY 4098

#define LOCALE_SNATIVEDIGITS 19

#define LCID_SUPPORTED 2

#define LOCALE_SCURRENCY 20

#define LOCALE_SISO639LANGNAME 89

#define C2_RIGHTTOLEFT 2

#define DATE_RTLREADING 32

#define C2_LEFTTORIGHT 1

#define CTRY_DENMARK 45

#define CTRY_BULGARIA 359

#define LOCALE_SISO3166CTRYNAME 90

#define LOCALE_IPOSSIGNPOSN 82

#define WC_COMPOSITECHECK 512

#define CP_MACCP 2

#define LOCALE_STIME 30

#define LCID_INSTALLED 1

#define CAL_GREGORIAN_US 2

#define TIME_NOSECONDS 2

#define DATE_LONGDATE 2

#define CTRY_MACEDONIA 389

#define C2_WHITESPACE 10

#define CTRY_QATAR 974

#define CTRY_BAHRAIN 973

#define MB_USEGLYPHCHARS 4

#define LOCALE_SSORTNAME 4115

#define CTRY_NEW_ZEALAND 64

#define CTRY_GREECE 30

#define LOCALE_ILDATE 34

#define LOCALE_INEGCURR 28

#define CTRY_PORTUGAL 351

#define NORM_IGNOREWIDTH 131072

#define LCMAP_LOWERCASE 256

#define MB_COMPOSITE 2

#define LOCALE_SPOSITIVESIGN 80

#define LOCALE_STIMEFORMAT 4099

#define C2_COMMONSEPARATOR 7

#define CTRY_POLAND 48

#define CTRY_UNITED_STATES 1

#define CSTR_LESS_THAN 1

#define CAL_GREGORIAN_ME_FRENCH 9

#define LOCALE_SENGLANGUAGE 4097

#define LOCALE_USE_CP_ACP 1073741824

#define C2_BLOCKSEPARATOR 8

#define LCMAP_HIRAGANA 1048576

#define LGRPID_ARABIC 13

#define C3_DIACRITIC 2

#define CTRY_UAE 971

#define LCMAP_BYTEREV 2048

#define LOCALE_SMONTHNAME11 66

#define LOCALE_SMONTHNAME10 65

#define CAL_GREGORIAN_XLIT_FRENCH 12

#define LOCALE_SMONTHNAME13 4110

#define LOCALE_SMONTHNAME12 67

#define CTRY_KYRGYZSTAN 996

#define C3_KATAKANA 16

#define CTRY_LUXEMBOURG 352

#define CAL_RETURN_NUMBER 536870912

#define MAP_EXPAND_LIGATURES 8192

#define CTRY_VENEZUELA 58

#define CAL_THAI 7

#define LOCALE_IDEFAULTLANGUAGE 9

#define CAL_HEBREW 8

#define C1_SPACE 8

#define CTRY_COSTA_RICA 506

#define CTRY_DEFAULT 0

#define LOCALE_SINTLSYMBOL 21

#define CAL_SABBREVDAYNAME7 20

#define LGRPID_GEORGIAN 16

#define NORM_IGNORESYMBOLS 4

#define CAL_SABBREVDAYNAME1 14

#define MAP_FOLDCZONE 16

#define CAL_SABBREVDAYNAME2 15

#define CAL_SABBREVDAYNAME3 16

#define CAL_SABBREVDAYNAME4 17

#define CAL_SABBREVDAYNAME5 18

#define LGRPID_WESTERN_EUROPE 1

#define CAL_SABBREVDAYNAME6 19

#define CTRY_LATVIA 371

#define LOCALE_STHOUSAND 15

#define LOCALE_INEGNUMBER 4112

#define CTRY_CZECH 420

#define LOCALE_IMEASURE 13

#define CAL_GREGORIAN_ARABIC 10

#define LCMAP_KATAKANA 2097152

#define LOCALE_IDEFAULTCOUNTRY 10

#define CTRY_CANADA 2

#define LOCALE_SABBREVLANGNAME 3

#define CTRY_SLOVENIA 386

#define CTRY_LIBYA 218

#define CTRY_SAUDI_ARABIA 966

#define C1_PUNCT 16

#define CTRY_HONDURAS 504

#define CAL_NOUSEROVERRIDE 2147483648

#define CTRY_FRANCE 33

#define C1_UPPER 1

#define CAL_SDAYNAME3 9

#define CAL_SDAYNAME4 10

#define CAL_SDAYNAME1 7

#define CTRY_NORWAY 47

#define CAL_SDAYNAME2 8

#define CAL_SDAYNAME7 13

#define CAL_SDAYNAME5 11

#define CAL_SDAYNAME6 12

#define CTRY_THAILAND 66

#define LOCALE_SDECIMAL 14

#define C1_XDIGIT 128

#define DATE_LTRREADING 16

#define CTRY_PANAMA 507

#define LOCALE_S2359 41

#define CTRY_JAPAN 81

#define CTRY_EGYPT 20

#define LOCALE_SMONGROUPING 24

#define CTRY_AUSTRIA 43

#define MAP_PRECOMPOSED 32

#define LGRPID_JAPANESE 7

#define LOCALE_SLIST 12

#define CTRY_JAMAICA 1

#define CP_SYMBOL 42

#define MAP_FOLDDIGITS 128

#define C1_DIGIT 4

#define CTRY_NICARAGUA 505

#define LOCALE_IDEFAULTANSICODEPAGE 4100

#define CTRY_TUNISIA 216

#define C3_VOWELMARK 4

#define CTRY_MEXICO 52

#define CTRY_CHILE 56

#define LGRPID_KOREAN 8

#define LOCALE_IFIRSTDAYOFWEEK 4108

#define LGRPID_INDIC 15

#define LGRPID_CENTRAL_EUROPE 2

#define LGRPID_SIMPLIFIED_CHINESE 10

#define CTRY_FAEROE_ISLANDS 298

#define DATE_SHORTDATE 1

#define CAL_ITWODIGITYEARMAX 48

#define CTRY_INDONESIA 62

#define CSTR_GREATER_THAN 3

#define LOCALE_SMONDECIMALSEP 22

#define CTRY_SINGAPORE 65

#define LOCALE_ITIME 35

#define CTRY_ALBANIA 355

#define LGRPID_HEBREW 12

#define TIME_NOTIMEMARKER 4

#define CTRY_PHILIPPINES 63

#define CTRY_COLOMBIA 57

#define WC_DISCARDNS 16

#define CTRY_JORDAN 962

#define C1_DEFINED 512

#define NORM_IGNORENONSPACE 2

#define CTRY_SOUTH_KOREA 82

#define CTRY_MALAYSIA 60

#define LOCALE_SDATE 29

#define CAL_SABBREVMONTHNAME13 46

#define CAL_SABBREVMONTHNAME12 45

#define CAL_SABBREVMONTHNAME11 44

#define CAL_SABBREVMONTHNAME10 43

#define LGRPID_BALTIC 3

#define C3_NONSPACING 1

#define LOCALE_SABBREVCTRYNAME 7

typedef ushort ino_t;

typedef uint _dev_t;

typedef long off_t;

typedef long _off_t;

typedef ushort _ino_t;

typedef uint dev_t;

typedef struct lconv lconv, *Plconv;

struct lconv {
    char *decimal_point;
    char *thousands_sep;
    char *grouping;
    char *int_curr_symbol;
    char *currency_symbol;
    char *mon_decimal_point;
    char *mon_thousands_sep;
    char *mon_grouping;
    char *positive_sign;
    char *negative_sign;
    char int_frac_digits;
    char frac_digits;
    char p_cs_precedes;
    char p_sep_by_space;
    char n_cs_precedes;
    char n_sep_by_space;
    char p_sign_posn;
    char n_sign_posn;
    wchar_t *_W_decimal_point;
    wchar_t *_W_thousands_sep;
    wchar_t *_W_int_curr_symbol;
    wchar_t *_W_currency_symbol;
    wchar_t *_W_mon_decimal_point;
    wchar_t *_W_mon_thousands_sep;
    wchar_t *_W_positive_sign;
    wchar_t *_W_negative_sign;
};

typedef uint size_t;

typedef ushort wint_t;

typedef struct threadlocaleinfostruct threadlocaleinfostruct, *Pthreadlocaleinfostruct;

typedef struct threadlocaleinfostruct *pthreadlocinfo;

typedef struct localerefcount localerefcount, *Plocalerefcount;

typedef struct localerefcount locrefcount;

typedef struct __lc_time_data __lc_time_data, *P__lc_time_data;

struct localerefcount {
    char *locale;
    wchar_t *wlocale;
    int *refcount;
    int *wrefcount;
};

struct threadlocaleinfostruct {
    int refcount;
    uint lc_codepage;
    uint lc_collate_cp;
    uint lc_time_cp;
    locrefcount lc_category[6];
    int lc_clike;
    int mb_cur_max;
    int *lconv_intl_refcount;
    int *lconv_num_refcount;
    int *lconv_mon_refcount;
    struct lconv *lconv;
    int *ctype1_refcount;
    ushort *ctype1;
    ushort *pctype;
    uchar *pclmap;
    uchar *pcumap;
    struct __lc_time_data *lc_time_curr;
    wchar_t *locale_name[6];
};

struct __lc_time_data {
    char *wday_abbr[7];
    char *wday[7];
    char *month_abbr[12];
    char *month[12];
    char *ampm[2];
    char *ww_sdatefmt;
    char *ww_ldatefmt;
    char *ww_timefmt;
    int ww_caltype;
    int refcount;
    wchar_t *_W_wday_abbr[7];
    wchar_t *_W_wday[7];
    wchar_t *_W_month_abbr[12];
    wchar_t *_W_month[12];
    wchar_t *_W_ampm[2];
    wchar_t *_W_ww_sdatefmt;
    wchar_t *_W_ww_ldatefmt;
    wchar_t *_W_ww_timefmt;
    wchar_t *_W_ww_locale_name;
};

typedef int errno_t;

typedef struct localeinfo_struct localeinfo_struct, *Plocaleinfo_struct;

typedef struct threadmbcinfostruct threadmbcinfostruct, *Pthreadmbcinfostruct;

typedef struct threadmbcinfostruct *pthreadmbcinfo;

struct threadmbcinfostruct {
    int refcount;
    int mbcodepage;
    int ismbcodepage;
    ushort mbulinfo[6];
    uchar mbctype[257];
    uchar mbcasemap[256];
    wchar_t *mblocalename;
};

struct localeinfo_struct {
    pthreadlocinfo locinfo;
    pthreadmbcinfo mbcinfo;
};

typedef int intptr_t;

typedef struct localeinfo_struct *_locale_t;

typedef ushort wctype_t;

typedef RPC_BINDING_HANDLE handle_t;

typedef struct RPC_STATS_VECTOR RPC_STATS_VECTOR, *PRPC_STATS_VECTOR;

struct RPC_STATS_VECTOR {
    uint Count;
    ulong Stats[1];
};

typedef struct _RPC_SECURITY_QOS _RPC_SECURITY_QOS, *P_RPC_SECURITY_QOS;

typedef struct _RPC_SECURITY_QOS RPC_SECURITY_QOS;

struct _RPC_SECURITY_QOS {
    ulong Version;
    ulong Capabilities;
    ulong IdentityTracking;
    ulong ImpersonationType;
};

typedef struct RPC_IF_ID_VECTOR RPC_IF_ID_VECTOR, *PRPC_IF_ID_VECTOR;

typedef struct _RPC_IF_ID _RPC_IF_ID, *P_RPC_IF_ID;

typedef struct _RPC_IF_ID RPC_IF_ID;

typedef GUID UUID;

struct _RPC_IF_ID {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

struct RPC_IF_ID_VECTOR {
    ulong Count;
    RPC_IF_ID *IfId[1];
};

typedef void *RPC_AUTHZ_HANDLE;

typedef struct _RPC_POLICY _RPC_POLICY, *P_RPC_POLICY;

struct _RPC_POLICY {
    uint Length;
    ulong EndpointFlags;
    ulong NICFlags;
};

typedef struct _RPC_PROTSEQ_VECTORW _RPC_PROTSEQ_VECTORW, *P_RPC_PROTSEQ_VECTORW;

typedef struct _RPC_PROTSEQ_VECTORW RPC_PROTSEQ_VECTORW;

struct _RPC_PROTSEQ_VECTORW {
    uint Count;
    ushort *Protseq[1];
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_W _SEC_WINNT_AUTH_IDENTITY_W, *P_SEC_WINNT_AUTH_IDENTITY_W;

struct _SEC_WINNT_AUTH_IDENTITY_W {
    ushort *User;
    ulong UserLength;
    ushort *Domain;
    ulong DomainLength;
    ushort *Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A _SEC_WINNT_AUTH_IDENTITY_A, *P_SEC_WINNT_AUTH_IDENTITY_A;

typedef struct _SEC_WINNT_AUTH_IDENTITY_A SEC_WINNT_AUTH_IDENTITY_A;

struct _SEC_WINNT_AUTH_IDENTITY_A {
    uchar *User;
    ulong UserLength;
    uchar *Domain;
    ulong DomainLength;
    uchar *Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef void *RPC_IF_HANDLE;

typedef struct _UUID_VECTOR _UUID_VECTOR, *P_UUID_VECTOR;

struct _UUID_VECTOR {
    ulong Count;
    UUID *Uuid[1];
};

typedef struct _RPC_PROTSEQ_VECTORA _RPC_PROTSEQ_VECTORA, *P_RPC_PROTSEQ_VECTORA;

typedef struct _RPC_PROTSEQ_VECTORA RPC_PROTSEQ_VECTORA;

struct _RPC_PROTSEQ_VECTORA {
    uint Count;
    uchar *Protseq[1];
};

typedef long RPC_STATUS;

typedef void (RPC_OBJECT_INQ_FN)(UUID *, UUID *, RPC_STATUS *);

typedef I_RPC_HANDLE *RPC_EP_INQ_HANDLE;

typedef struct RPC_CLIENT_INFORMATION1 RPC_CLIENT_INFORMATION1, *PRPC_CLIENT_INFORMATION1;

struct RPC_CLIENT_INFORMATION1 {
    uchar *UserName;
    uchar *ComputerName;
    ushort Privilege;
    ulong AuthFlags;
};

typedef struct _RPC_SECURITY_QOS *PRPC_SECURITY_QOS;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;

typedef struct _UUID_VECTOR UUID_VECTOR;

typedef void (*RPC_AUTH_KEY_RETRIEVAL_FN)(void *, ushort *, ulong, void **, RPC_STATUS *);

typedef RPC_STATUS (RPC_IF_CALLBACK_FN)(RPC_IF_HANDLE, void *);

typedef struct _RPC_POLICY RPC_POLICY;

typedef void *RPC_AUTH_IDENTITY_HANDLE;

typedef void (RPC_SECURITY_CALLBACK_FN)(void *);

typedef struct _SEC_WINNT_AUTH_IDENTITY_A *PSEC_WINNT_AUTH_IDENTITY_A;

typedef int (*RPC_MGMT_AUTHORIZATION_FN)(RPC_BINDING_HANDLE, ulong, RPC_STATUS *);

typedef struct _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;

typedef struct _RPC_POLICY *PRPC_POLICY;

#define RPC_C_PROTECT_LEVEL_DEFAULT 0

#define RPC_C_IMP_LEVEL_ANONYMOUS 1

#define RPC_C_MGMT_INQ_PRINC_NAME 1

#define RPC_C_AUTHN_GSS_SCHANNEL 14

#define RPC_C_AUTHN_LEVEL_CALL 3

#define RPC_C_OPT_MQ_AUTHN_SERVICE 5

#define RPC_C_AUTHN_DIGEST 21

#define RPC_C_AUTHN_DCE_PUBLIC 2

#define RPC_C_DONT_FAIL 4

#define RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY 16

#define RPC_C_USE_INTERNET_PORT 1

#define RPC_C_PROTECT_LEVEL_CONNECT 2

#define RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED 8

#define RPC_C_EP_MATCH_BY_IF 1

#define RPC_C_AUTHZ_NAME 1

#define RPC_C_BINDING_MAX_TIMEOUT 9

#define RPC_C_AUTHN_MQ 100

#define RPC_C_MQ_CLEAR_ON_OPEN 2

#define RPC_C_CANCEL_INFINITE_TIMEOUT -1

#define RPC_IF_ALLOW_SECURE_ONLY 8

#define RPC_C_MQ_JOURNAL_NONE 0

#define RPC_C_IMP_LEVEL_IDENTIFY 2

#define RPC_IF_ALLOW_UNKNOWN_AUTHORITY 4

#define RPC_C_AUTHN_WINNT 10

#define RPC_C_AUTHN_LEVEL_CONNECT 2

#define RPC_C_PROTECT_LEVEL_PKT_PRIVACY 6

#define RPC_C_AUTHN_DCE_PRIVATE 1

#define RPC_C_AUTHN_GSS_KERBEROS 16

#define RPC_C_AUTHN_LEVEL_PKT_PRIVACY 6

#define RPC_C_OPT_MQ_JOURNAL 3

#define RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY 4

#define SEC_WINNT_AUTH_IDENTITY_UNICODE 2

#define RPC_C_MQ_AUTHN_LEVEL_NONE 0

#define RPC_C_STATS_PKTS_OUT 3

#define RPC_C_MGMT_INQ_STATS 2

#define RPC_C_AUTHN_DPA 17

#define RPC_C_OPT_MQ_AUTHN_LEVEL 6

#define RPC_C_PROTSEQ_MAX_REQS_DEFAULT 10

#define DCE_C_ERROR_STRING_LEN 256

#define RPC_C_QOS_CAPABILITIES_DEFAULT 0

#define RPC_C_EP_MATCH_BY_OBJ 2

#define RPC_C_QOS_IDENTITY_STATIC 0

#define RPC_C_QOS_IDENTITY_DYNAMIC 1

#define RPC_C_MGMT_IS_SERVER_LISTEN 3

#define RPC_C_OPT_CALL_TIMEOUT 12

#define RPC_C_PROTECT_LEVEL_NONE 1

#define RPC_C_OPT_SECURITY_CALLBACK 10

#define RPC_C_FULL_CERT_CHAIN 1

#define RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC 2

#define RPC_C_OPT_MAX_OPTIONS 12

#define RPC_IF_AUTOLISTEN 1

#define RPC_C_EP_MATCH_BY_BOTH 3

#define RPC_C_LISTEN_MAX_CALLS_DEFAULT 1234

#define RPC_C_MGMT_INQ_IF_IDS 0

#define RPC_C_AUTHN_MSN 18

#define RPC_C_OPT_MQ_PRIORITY 2

#define RPC_C_STATS_CALLS_OUT 1

#define RPC_C_AUTHN_DEFAULT 4294967295

#define RPC_C_OPT_MQ_ACKNOWLEDGE 4

#define RPC_C_AUTHN_GSS_NEGOTIATE 9

#define RPC_C_OPT_UNIQUE_BINDING 11

#define RPC_C_MQ_TEMPORARY 0

#define RPC_C_IMP_LEVEL_IMPERSONATE 3

#define RPC_C_PROTECT_LEVEL_PKT 4

#define RPC_C_PROTECT_LEVEL_CALL 3

#define RPC_C_VERS_MAJOR_ONLY 4

#define RPC_C_MQ_PERMANENT 1

#define RPC_C_AUTHZ_DEFAULT 4294967295

#define SEC_WINNT_AUTH_IDENTITY_ANSI 1

#define RPC_C_VERS_UPTO 5

#define RPC_C_SECURITY_QOS_VERSION 1

#define RPC_C_VERS_EXACT 3

#define RPC_C_OPT_DONT_LINGER 13

#define RPC_C_BINDING_INFINITE_TIMEOUT 10

#define RPC_C_PARM_BUFFER_LENGTH 2

#define RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY 8

#define RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH 1

#define RPC_C_MQ_JOURNAL_DEADLETTER 1

#define RPC_C_EP_ALL_ELTS 0

#define RPC_C_AUTHN_LEVEL_NONE 1

#define RPC_C_MQ_RECOVERABLE 1

#define RPC_C_OPT_BINDING_NONCAUSAL 9

#define RPC_C_BINDING_MIN_TIMEOUT 0

#define RPC_C_AUTHN_LEVEL_PKT_INTEGRITY 5

#define RPC_C_BIND_TO_ALL_NICS 1

#define RPC_C_USE_INTRANET_PORT 2

#define RPC_C_NO_CREDENTIALS -1

#define RPC_C_IMP_LEVEL_DEFAULT 0

#define RPC_C_AUTHN_DEC_PUBLIC 4

#define RPC_C_VERS_COMPATIBLE 2

#define RPC_C_VERS_ALL 1

#define RPC_C_STATS_PKTS_IN 2

#define RPC_C_AUTHZ_DCE 2

#define RPC_C_PARM_MAX_PACKET_LENGTH 1

#define RPC_C_MQ_EXPRESS 0

#define RPC_IF_OLE 2

#define RPC_C_MQ_USE_EXISTING_SECURITY 4

#define RPC_C_BINDING_DEFAULT_TIMEOUT 5

#define RPC_C_AUTHN_LEVEL_DEFAULT 0

#define RPC_C_AUTHZ_NONE 0

#define RPC_C_OPT_MQ_DELIVERY 1

#define RPC_C_STATS_CALLS_IN 0

#define RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE 7

#define RPC_C_MGMT_STOP_SERVER_LISTEN 4

#define RPC_C_PROTECT_LEVEL_PKT_INTEGRITY 5

#define RPC_C_AUTHN_LEVEL_PKT 4

#define RPC_C_AUTHN_NONE 0

#define RPC_C_MQ_JOURNAL_ALWAYS 2

#define RPC_C_IMP_LEVEL_DELEGATE 4

typedef struct _BIN_COUNT _BIN_COUNT, *P_BIN_COUNT;

typedef struct _BIN_RANGE _BIN_RANGE, *P_BIN_RANGE;

typedef struct _BIN_RANGE BIN_RANGE;

struct _BIN_RANGE {
    LARGE_INTEGER StartValue;
    LARGE_INTEGER Length;
};

struct _BIN_COUNT {
    BIN_RANGE BinRange;
    DWORD BinCount;
};

typedef struct _struct_1349 _struct_1349, *P_struct_1349;

struct _struct_1349 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER _FSCTL_QUERY_FAT_BPB_BUFFER, *P_FSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER FSCTL_QUERY_FAT_BPB_BUFFER;

struct _FSCTL_QUERY_FAT_BPB_BUFFER {
    BYTE First0x24BytesOfBootSector[36];
};

typedef struct _STORAGE_PREDICT_FAILURE _STORAGE_PREDICT_FAILURE, *P_STORAGE_PREDICT_FAILURE;

struct _STORAGE_PREDICT_FAILURE {
    DWORD PredictFailure;
    BYTE VendorSpecific[512];
};

typedef struct _SENDCMDOUTPARAMS _SENDCMDOUTPARAMS, *P_SENDCMDOUTPARAMS;

typedef struct _DRIVERSTATUS _DRIVERSTATUS, *P_DRIVERSTATUS;

typedef struct _DRIVERSTATUS DRIVERSTATUS;

struct _DRIVERSTATUS {
    BYTE bDriverError;
    BYTE bIDEError;
    BYTE bReserved[2];
    DWORD dwReserved[2];
};

struct _SENDCMDOUTPARAMS {
    DWORD cBufferSize;
    DRIVERSTATUS DriverStatus;
    BYTE bBuffer[1];
};

typedef struct _STORAGE_BUS_RESET_REQUEST _STORAGE_BUS_RESET_REQUEST, *P_STORAGE_BUS_RESET_REQUEST;

typedef struct _STORAGE_BUS_RESET_REQUEST *PSTORAGE_BUS_RESET_REQUEST;

struct _STORAGE_BUS_RESET_REQUEST {
    BYTE PathId;
};

typedef struct _FILESYSTEM_STATISTICS _FILESYSTEM_STATISTICS, *P_FILESYSTEM_STATISTICS;

struct _FILESYSTEM_STATISTICS {
    WORD FileSystemType;
    WORD Version;
    DWORD SizeOfCompleteStructure;
    DWORD UserFileReads;
    DWORD UserFileReadBytes;
    DWORD UserDiskReads;
    DWORD UserFileWrites;
    DWORD UserFileWriteBytes;
    DWORD UserDiskWrites;
    DWORD MetaDataReads;
    DWORD MetaDataReadBytes;
    DWORD MetaDataDiskReads;
    DWORD MetaDataWrites;
    DWORD MetaDataWriteBytes;
    DWORD MetaDataDiskWrites;
};

typedef struct STARTING_LCN_INPUT_BUFFER STARTING_LCN_INPUT_BUFFER, *PSTARTING_LCN_INPUT_BUFFER;

struct STARTING_LCN_INPUT_BUFFER {
    LARGE_INTEGER StartingLcn;
};

typedef struct _STORAGE_PREDICT_FAILURE STORAGE_PREDICT_FAILURE;

typedef struct _CHANGER_PRODUCT_DATA _CHANGER_PRODUCT_DATA, *P_CHANGER_PRODUCT_DATA;

typedef struct _CHANGER_PRODUCT_DATA CHANGER_PRODUCT_DATA;

struct _CHANGER_PRODUCT_DATA {
    BYTE VendorId[8];
    BYTE ProductId[16];
    BYTE Revision[4];
    BYTE SerialNumber[32];
    BYTE DeviceType;
};

typedef struct _TAPE_STATISTICS _TAPE_STATISTICS, *P_TAPE_STATISTICS;

struct _TAPE_STATISTICS {
    DWORD Version;
    DWORD Flags;
    LARGE_INTEGER RecoveredWrites;
    LARGE_INTEGER UnrecoveredWrites;
    LARGE_INTEGER RecoveredReads;
    LARGE_INTEGER UnrecoveredReads;
    BYTE CompressionRatioReads;
    BYTE CompressionRatioWrites;
};

typedef struct _IDEREGS _IDEREGS, *P_IDEREGS;

struct _IDEREGS {
    BYTE bFeaturesReg;
    BYTE bSectorCountReg;
    BYTE bSectorNumberReg;
    BYTE bCylLowReg;
    BYTE bCylHighReg;
    BYTE bDriveHeadReg;
    BYTE bCommandReg;
    BYTE bReserved;
};

typedef struct _BIN_RESULTS _BIN_RESULTS, *P_BIN_RESULTS;

typedef struct _BIN_COUNT BIN_COUNT;

struct _BIN_RESULTS {
    DWORD NumberOfBins;
    BIN_COUNT BinCounts[1];
};

typedef struct _SENDCMDOUTPARAMS *PSENDCMDOUTPARAMS;

typedef struct _READ_ELEMENT_ADDRESS_INFO _READ_ELEMENT_ADDRESS_INFO, *P_READ_ELEMENT_ADDRESS_INFO;

typedef struct _CHANGER_ELEMENT_STATUS _CHANGER_ELEMENT_STATUS, *P_CHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_STATUS CHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT _CHANGER_ELEMENT, *P_CHANGER_ELEMENT;

typedef struct _CHANGER_ELEMENT CHANGER_ELEMENT;

typedef enum _ELEMENT_TYPE {
    AllElements=0,
    ChangerTransport=1,
    ChangerSlot=2,
    ChangerIEPort=3,
    ChangerDrive=4,
    ChangerDoor=5,
    ChangerKeypad=6,
    ChangerMaxElement=7
} _ELEMENT_TYPE;

typedef enum _ELEMENT_TYPE ELEMENT_TYPE;

struct _CHANGER_ELEMENT {
    ELEMENT_TYPE ElementType;
    DWORD ElementAddress;
};

struct _CHANGER_ELEMENT_STATUS {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
};

struct _READ_ELEMENT_ADDRESS_INFO {
    DWORD NumberOfElements;
    CHANGER_ELEMENT_STATUS ElementStatus[1];
};

typedef struct _DEVICE_MEDIA_INFO _DEVICE_MEDIA_INFO, *P_DEVICE_MEDIA_INFO;

typedef struct _DEVICE_MEDIA_INFO DEVICE_MEDIA_INFO;

typedef union _union_1296 _union_1296, *P_union_1296;

typedef struct _struct_1297 _struct_1297, *P_struct_1297;

typedef struct _struct_1298 _struct_1298, *P_struct_1298;

typedef struct _struct_1299.conflict _struct_1299.conflict, *P_struct_1299.conflict;

typedef enum _STORAGE_MEDIA_TYPE {
    DDS_4mm=32,
    MiniQic=33,
    Travan=34,
    QIC=35,
    MP_8mm=36,
    AME_8mm=37,
    AIT1_8mm=38,
    DLT=39,
    NCTP=40,
    IBM_3480=41,
    IBM_3490E=42,
    IBM_Magstar_3590=43,
    IBM_Magstar_MP=44,
    STK_DATA_D3=45,
    SONY_DTF=46,
    DV_6mm=47,
    DMI=48,
    SONY_D2=49,
    CLEANER_CARTRIDGE=50,
    CD_ROM=51,
    CD_R=52,
    CD_RW=53,
    DVD_ROM=54,
    DVD_R=55,
    DVD_RW=56,
    MO_3_RW=57,
    MO_5_WO=58,
    MO_5_RW=59,
    MO_5_LIMDOW=60,
    PC_5_WO=61,
    PC_5_RW=62,
    PD_5_RW=63,
    ABL_5_WO=64,
    PINNACLE_APEX_5_RW=65,
    SONY_12_WO=66,
    PHILIPS_12_WO=67,
    HITACHI_12_WO=68,
    CYGNET_12_WO=69,
    KODAK_14_WO=70,
    MO_NFR_525=71,
    NIKON_12_RW=72,
    IOMEGA_ZIP=73,
    IOMEGA_JAZ=74,
    SYQUEST_EZ135=75,
    SYQUEST_EZFLYER=76,
    SYQUEST_SYJET=77,
    AVATAR_F2=78,
    MP2_8mm=79,
    DST_S=80,
    DST_M=81,
    DST_L=82,
    VXATape_1=83,
    VXATape_2=84,
    STK_9840=85,
    LTO_Ultrium=86,
    LTO_Accelis=87,
    DVD_RAM=88,
    AIT_8mm=89,
    ADR_1=90,
    ADR_2=91
} _STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_MEDIA_TYPE STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_BUS_TYPE {
    BusTypeUnknown=0,
    BusTypeScsi=1,
    BusTypeAtapi=2,
    BusTypeAta=3,
    BusType1394=4,
    BusTypeSsa=5,
    BusTypeFibre=6,
    BusTypeUsb=7,
    BusTypeRAID=8,
    BusTypeMaxReserved=127
} _STORAGE_BUS_TYPE;

typedef enum _STORAGE_BUS_TYPE STORAGE_BUS_TYPE;

typedef union _union_1300 _union_1300, *P_union_1300;

typedef struct _struct_1301.conflict _struct_1301.conflict, *P_struct_1301.conflict;

struct _struct_1297 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

struct _struct_1301.conflict {
    BYTE MediumType;
    BYTE DensityCode;
};

union _union_1300 {
    struct _struct_1301.conflict ScsiInformation;
};

struct _struct_1299.conflict {
    STORAGE_MEDIA_TYPE MediaType;
    DWORD MediaCharacteristics;
    DWORD CurrentBlockSize;
    STORAGE_BUS_TYPE BusType;
    union _union_1300 BusSpecificData;
};

struct _struct_1298 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

union _union_1296 {
    struct _struct_1297 DiskInfo;
    struct _struct_1298 RemovableDiskInfo;
    struct _struct_1299.conflict TapeInfo;
};

struct _DEVICE_MEDIA_INFO {
    union _union_1296 DeviceSpecific;
};

typedef struct _GETVERSIONINPARAMS _GETVERSIONINPARAMS, *P_GETVERSIONINPARAMS;

struct _GETVERSIONINPARAMS {
    BYTE bVersion;
    BYTE bRevision;
    BYTE bReserved;
    BYTE bIDEDeviceMap;
    DWORD fCapabilities;
    DWORD dwReserved[4];
};

typedef struct _DISK_RECORD _DISK_RECORD, *P_DISK_RECORD;


/* WARNING! conflicting data type names: /deps/wtypes.h/BOOLEAN - /deps/winnt.h/BOOLEAN */

struct _DISK_RECORD {
    LARGE_INTEGER ByteOffset;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    PVOID VirtualAddress;
    DWORD NumberOfBytes;
    BYTE DeviceNumber;
    BOOLEAN ReadRequest;
};

typedef struct _SET_PARTITION_INFORMATION _SET_PARTITION_INFORMATION, *P_SET_PARTITION_INFORMATION;

typedef struct _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;

struct _SET_PARTITION_INFORMATION {
    BYTE PartitionType;
};

typedef struct _struct_1826 _struct_1826, *P_struct_1826;

struct _struct_1826 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _STORAGE_DEVICE_NUMBER _STORAGE_DEVICE_NUMBER, *P_STORAGE_DEVICE_NUMBER;

struct _STORAGE_DEVICE_NUMBER {
    DWORD DeviceType;
    DWORD DeviceNumber;
    DWORD PartitionNumber;
};

typedef struct NTFS_VOLUME_DATA_BUFFER NTFS_VOLUME_DATA_BUFFER, *PNTFS_VOLUME_DATA_BUFFER;

struct NTFS_VOLUME_DATA_BUFFER {
    LARGE_INTEGER VolumeSerialNumber;
    LARGE_INTEGER NumberSectors;
    LARGE_INTEGER TotalClusters;
    LARGE_INTEGER FreeClusters;
    LARGE_INTEGER TotalReserved;
    DWORD BytesPerSector;
    DWORD BytesPerCluster;
    DWORD BytesPerFileRecordSegment;
    DWORD ClustersPerFileRecordSegment;
    LARGE_INTEGER MftValidDataLength;
    LARGE_INTEGER MftStartLcn;
    LARGE_INTEGER Mft2StartLcn;
    LARGE_INTEGER MftZoneStart;
    LARGE_INTEGER MftZoneEnd;
};

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION _CHANGER_SEND_VOLUME_TAG_INFORMATION, *P_CHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION CHANGER_SEND_VOLUME_TAG_INFORMATION;

struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {
    CHANGER_ELEMENT StartingElement;
    DWORD ActionCode;
    BYTE VolumeIDTemplate[40];
};

typedef struct _FAT_STATISTICS _FAT_STATISTICS, *P_FAT_STATISTICS;

struct _FAT_STATISTICS {
    DWORD CreateHits;
    DWORD SuccessfulCreates;
    DWORD FailedCreates;
    DWORD NonCachedReads;
    DWORD NonCachedReadBytes;
    DWORD NonCachedWrites;
    DWORD NonCachedWriteBytes;
    DWORD NonCachedDiskReads;
    DWORD NonCachedDiskWrites;
};

typedef struct _CHANGER_PRODUCT_DATA *PCHANGER_PRODUCT_DATA;

typedef struct _REASSIGN_BLOCKS _REASSIGN_BLOCKS, *P_REASSIGN_BLOCKS;

struct _REASSIGN_BLOCKS {
    WORD Reserved;
    WORD Count;
    DWORD BlockNumber[1];
};

typedef enum _MEDIA_TYPE {
    Unknown=0,
    F5_1Pt2_512=1,
    F3_1Pt44_512=2,
    F3_2Pt88_512=3,
    F3_20Pt8_512=4,
    F3_720_512=5,
    F5_360_512=6,
    F5_320_512=7,
    F5_320_1024=8,
    F5_180_512=9,
    F5_160_512=10,
    RemovableMedia=11,
    FixedMedia=12,
    F3_120M_512=13,
    F3_640_512=14,
    F5_640_512=15,
    F5_720_512=16,
    F3_1Pt2_512=17,
    F3_1Pt23_1024=18,
    F5_1Pt23_1024=19,
    F3_128Mb_512=20,
    F3_230Mb_512=21,
    F8_256_128=22,
    F3_200Mb_512=23,
    F3_240M_512=24,
    F3_32M_512=25
} _MEDIA_TYPE;

typedef enum _MEDIA_TYPE MEDIA_TYPE;

typedef struct _FILE_PREFETCH _FILE_PREFETCH, *P_FILE_PREFETCH;

struct _FILE_PREFETCH {
    DWORD Type;
    DWORD Count;
    DWORDLONG Prefetch[1];
};

typedef enum _BIN_TYPES {
    RequestSize=0,
    RequestLocation=1
} _BIN_TYPES;

typedef struct _CHANGER_ELEMENT_STATUS_EX _CHANGER_ELEMENT_STATUS_EX, *P_CHANGER_ELEMENT_STATUS_EX;

typedef struct _CHANGER_ELEMENT_STATUS_EX *PCHANGER_ELEMENT_STATUS_EX;

struct _CHANGER_ELEMENT_STATUS_EX {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
    BYTE VendorIdentification[8];
    BYTE ProductIdentification[16];
    BYTE SerialNumber[32];
};

typedef struct _SENDCMDOUTPARAMS SENDCMDOUTPARAMS;

typedef struct _CHANGER_SET_ACCESS _CHANGER_SET_ACCESS, *P_CHANGER_SET_ACCESS;

struct _CHANGER_SET_ACCESS {
    CHANGER_ELEMENT Element;
    DWORD Control;
};

typedef struct _GET_CHANGER_PARAMETERS _GET_CHANGER_PARAMETERS, *P_GET_CHANGER_PARAMETERS;

struct _GET_CHANGER_PARAMETERS {
    DWORD Size;
    WORD NumberTransportElements;
    WORD NumberStorageElements;
    WORD NumberCleanerSlots;
    WORD NumberIEElements;
    WORD NumberDataTransferElements;
    WORD NumberOfDoors;
    WORD FirstSlotNumber;
    WORD FirstDriveNumber;
    WORD FirstTransportNumber;
    WORD FirstIEPortNumber;
    WORD FirstCleanerSlotAddress;
    WORD MagazineSize;
    DWORD DriveCleanTimeout;
    DWORD Features0;
    DWORD Features1;
    BYTE MoveFromTransport;
    BYTE MoveFromSlot;
    BYTE MoveFromIePort;
    BYTE MoveFromDrive;
    BYTE ExchangeFromTransport;
    BYTE ExchangeFromSlot;
    BYTE ExchangeFromIePort;
    BYTE ExchangeFromDrive;
    BYTE LockUnlockCapabilities;
    BYTE PositionCapabilities;
    BYTE Reserved1[2];
    DWORD Reserved2[2];
};

typedef struct _CHANGER_ELEMENT_LIST _CHANGER_ELEMENT_LIST, *P_CHANGER_ELEMENT_LIST;

struct _CHANGER_ELEMENT_LIST {
    CHANGER_ELEMENT Element;
    DWORD NumberOfElements;
};

typedef struct _FORMAT_EX_PARAMETERS _FORMAT_EX_PARAMETERS, *P_FORMAT_EX_PARAMETERS;

typedef struct _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;

struct _FORMAT_EX_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
    WORD FormatGapLength;
    WORD SectorsPerTrack;
    WORD SectorNumber[1];
};

typedef struct _NTFS_STATISTICS _NTFS_STATISTICS, *P_NTFS_STATISTICS;

typedef struct _NTFS_STATISTICS *PNTFS_STATISTICS;

typedef struct _struct_1357 _struct_1357, *P_struct_1357;

typedef struct _struct_1358 _struct_1358, *P_struct_1358;

typedef struct _struct_1359.conflict _struct_1359.conflict, *P_struct_1359.conflict;

typedef struct _struct_1360 _struct_1360, *P_struct_1360;

typedef struct _struct_1361.conflict _struct_1361.conflict, *P_struct_1361.conflict;

struct _struct_1359.conflict {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

struct _struct_1358 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1357 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1361.conflict {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

struct _struct_1360 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _NTFS_STATISTICS {
    DWORD LogFileFullExceptions;
    DWORD OtherExceptions;
    DWORD MftReads;
    DWORD MftReadBytes;
    DWORD MftWrites;
    DWORD MftWriteBytes;
    struct _struct_1357 MftWritesUserLevel;
    WORD MftWritesFlushForLogFileFull;
    WORD MftWritesLazyWriter;
    WORD MftWritesUserRequest;
    DWORD Mft2Writes;
    DWORD Mft2WriteBytes;
    struct _struct_1358 Mft2WritesUserLevel;
    WORD Mft2WritesFlushForLogFileFull;
    WORD Mft2WritesLazyWriter;
    WORD Mft2WritesUserRequest;
    DWORD RootIndexReads;
    DWORD RootIndexReadBytes;
    DWORD RootIndexWrites;
    DWORD RootIndexWriteBytes;
    DWORD BitmapReads;
    DWORD BitmapReadBytes;
    DWORD BitmapWrites;
    DWORD BitmapWriteBytes;
    WORD BitmapWritesFlushForLogFileFull;
    WORD BitmapWritesLazyWriter;
    WORD BitmapWritesUserRequest;
    struct _struct_1359.conflict BitmapWritesUserLevel;
    DWORD MftBitmapReads;
    DWORD MftBitmapReadBytes;
    DWORD MftBitmapWrites;
    DWORD MftBitmapWriteBytes;
    WORD MftBitmapWritesFlushForLogFileFull;
    WORD MftBitmapWritesLazyWriter;
    WORD MftBitmapWritesUserRequest;
    struct _struct_1360 MftBitmapWritesUserLevel;
    DWORD UserIndexReads;
    DWORD UserIndexReadBytes;
    DWORD UserIndexWrites;
    DWORD UserIndexWriteBytes;
    DWORD LogFileReads;
    DWORD LogFileReadBytes;
    DWORD LogFileWrites;
    DWORD LogFileWriteBytes;
    struct _struct_1361.conflict Allocate;
};

typedef struct _SENDCMDINPARAMS _SENDCMDINPARAMS, *P_SENDCMDINPARAMS;

typedef struct _SENDCMDINPARAMS *LPSENDCMDINPARAMS;

typedef struct _IDEREGS IDEREGS;

struct _SENDCMDINPARAMS {
    DWORD cBufferSize;
    IDEREGS irDriveRegs;
    BYTE bDriveNumber;
    BYTE bReserved[3];
    DWORD dwReserved[4];
    BYTE bBuffer[1];
};

typedef union _union_1302 _union_1302, *P_union_1302;

typedef struct _struct_1303 _struct_1303, *P_struct_1303;

struct _struct_1303 {
    BYTE MediumType;
    BYTE DensityCode;
};

union _union_1302 {
    struct _struct_1303 ScsiInformation;
};

typedef struct _struct_1351 _struct_1351, *P_struct_1351;

struct _struct_1351 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _CHANGER_READ_ELEMENT_STATUS _CHANGER_READ_ELEMENT_STATUS, *P_CHANGER_READ_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_LIST CHANGER_ELEMENT_LIST;

struct _CHANGER_READ_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN VolumeTagInfo;
};

typedef struct _HISTOGRAM_BUCKET _HISTOGRAM_BUCKET, *P_HISTOGRAM_BUCKET;

typedef struct _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;

struct _HISTOGRAM_BUCKET {
    DWORD Reads;
    DWORD Writes;
};

typedef struct _CHANGER_EXCHANGE_MEDIUM _CHANGER_EXCHANGE_MEDIUM, *P_CHANGER_EXCHANGE_MEDIUM;

struct _CHANGER_EXCHANGE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination1;
    CHANGER_ELEMENT Destination2;
    BOOLEAN Flip1;
    BOOLEAN Flip2;
};

typedef struct _struct_1849 _struct_1849, *P_struct_1849;

struct _struct_1849 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

typedef struct _struct_1848 _struct_1848, *P_struct_1848;

struct _struct_1848 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _struct_1847 _struct_1847, *P_struct_1847;

struct _struct_1847 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _TAPE_STATISTICS *PTAPE_STATISTICS;

typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;

typedef struct _GETVERSIONINPARAMS GETVERSIONINPARAMS;

typedef struct _CHANGER_ELEMENT_STATUS *PCHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_SET_POSITION _CHANGER_SET_POSITION, *P_CHANGER_SET_POSITION;

struct _CHANGER_SET_POSITION {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct MOVE_FILE_DATA MOVE_FILE_DATA, *PMOVE_FILE_DATA;

struct MOVE_FILE_DATA {
    HANDLE FileHandle;
    LARGE_INTEGER StartingVcn;
    LARGE_INTEGER StartingLcn;
    DWORD ClusterCount;
};

typedef struct _DISK_EXTENT _DISK_EXTENT, *P_DISK_EXTENT;

typedef struct _DISK_EXTENT DISK_EXTENT;

struct _DISK_EXTENT {
    DWORD DiskNumber;
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER ExtentLength;
};

typedef struct RETRIEVAL_POINTERS_BUFFER RETRIEVAL_POINTERS_BUFFER, *PRETRIEVAL_POINTERS_BUFFER;

struct RETRIEVAL_POINTERS_BUFFER {
    DWORD ExtentCount;
    LARGE_INTEGER StartingVcn;
    struct _struct_1349 Extents[1];
};

typedef struct _DISK_PERFORMANCE _DISK_PERFORMANCE, *P_DISK_PERFORMANCE;

typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;

struct _DISK_PERFORMANCE {
    LARGE_INTEGER BytesRead;
    LARGE_INTEGER BytesWritten;
    LARGE_INTEGER ReadTime;
    LARGE_INTEGER WriteTime;
    LARGE_INTEGER IdleTime;
    DWORD ReadCount;
    DWORD WriteCount;
    DWORD QueueDepth;
    DWORD SplitCount;
    LARGE_INTEGER QueryTime;
    DWORD StorageDeviceNumber;
    WCHAR StorageManagerName[8];
};

typedef struct _struct_1851 _struct_1851, *P_struct_1851;

struct _struct_1851 {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

typedef struct _struct_1850 _struct_1850, *P_struct_1850;

struct _struct_1850 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _GETVERSIONINPARAMS *LPGETVERSIONINPARAMS;

typedef struct _VERIFY_INFORMATION _VERIFY_INFORMATION, *P_VERIFY_INFORMATION;

struct _VERIFY_INFORMATION {
    LARGE_INTEGER StartingOffset;
    DWORD Length;
};

typedef struct _DISK_GEOMETRY _DISK_GEOMETRY, *P_DISK_GEOMETRY;

typedef struct _DISK_GEOMETRY *PDISK_GEOMETRY;

struct _DISK_GEOMETRY {
    LARGE_INTEGER Cylinders;
    MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
};

typedef struct _STORAGE_PREDICT_FAILURE *PSTORAGE_PREDICT_FAILURE;

typedef struct _GET_CHANGER_PARAMETERS GET_CHANGER_PARAMETERS;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER *PFSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _DISK_PERFORMANCE *PDISK_PERFORMANCE;

typedef struct _READ_ELEMENT_ADDRESS_INFO *PREAD_ELEMENT_ADDRESS_INFO;

typedef struct _DISK_RECORD DISK_RECORD;

typedef struct _PREVENT_MEDIA_REMOVAL _PREVENT_MEDIA_REMOVAL, *P_PREVENT_MEDIA_REMOVAL;

typedef struct _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;

struct _PREVENT_MEDIA_REMOVAL {
    BOOLEAN PreventMediaRemoval;
};

typedef struct NTFS_FILE_RECORD_OUTPUT_BUFFER NTFS_FILE_RECORD_OUTPUT_BUFFER, *PNTFS_FILE_RECORD_OUTPUT_BUFFER;

struct NTFS_FILE_RECORD_OUTPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
    DWORD FileRecordLength;
    BYTE FileRecordBuffer[1];
};

typedef struct STARTING_VCN_INPUT_BUFFER STARTING_VCN_INPUT_BUFFER, *PSTARTING_VCN_INPUT_BUFFER;

struct STARTING_VCN_INPUT_BUFFER {
    LARGE_INTEGER StartingVcn;
};

typedef struct _TAPE_STATISTICS TAPE_STATISTICS;

typedef struct _DISK_HISTOGRAM _DISK_HISTOGRAM, *P_DISK_HISTOGRAM;

typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;

struct _DISK_HISTOGRAM {
    LARGE_INTEGER DiskSize;
    LARGE_INTEGER Start;
    LARGE_INTEGER End;
    LARGE_INTEGER Average;
    LARGE_INTEGER AverageRead;
    LARGE_INTEGER AverageWrite;
    DWORD Granularity;
    DWORD Size;
    DWORD ReadCount;
    DWORD WriteCount;
    PHISTOGRAM_BUCKET Histogram;
};

typedef struct _PARTITION_INFORMATION _PARTITION_INFORMATION, *P_PARTITION_INFORMATION;

typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;

struct _PARTITION_INFORMATION {
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER PartitionLength;
    DWORD HiddenSectors;
    DWORD PartitionNumber;
    BYTE PartitionType;
    BOOLEAN BootIndicator;
    BOOLEAN RecognizedPartition;
    BOOLEAN RewritePartition;
};

typedef struct _GET_MEDIA_TYPES _GET_MEDIA_TYPES, *P_GET_MEDIA_TYPES;

typedef struct _GET_MEDIA_TYPES *PGET_MEDIA_TYPES;

struct _GET_MEDIA_TYPES {
    DWORD DeviceType;
    DWORD MediaInfoCount;
    DEVICE_MEDIA_INFO MediaInfo[1];
};

typedef struct _FILE_PREFETCH FILE_PREFETCH;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {
    DeviceProblemNone=0,
    DeviceProblemHardware=1,
    DeviceProblemCHMError=2,
    DeviceProblemDoorOpen=3,
    DeviceProblemCalibrationError=4,
    DeviceProblemTargetFailure=5,
    DeviceProblemCHMMoveError=6,
    DeviceProblemCHMZeroError=7,
    DeviceProblemCartridgeInsertError=8,
    DeviceProblemPositionError=9,
    DeviceProblemSensorError=10,
    DeviceProblemCartridgeEjectError=11,
    DeviceProblemGripperError=12,
    DeviceProblemDriveError=13
} _CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _PARTITION_INFORMATION *PPARTITION_INFORMATION;

typedef struct _DISK_RECORD *PDISK_RECORD;

typedef struct _GET_MEDIA_TYPES GET_MEDIA_TYPES;

typedef struct NTFS_FILE_RECORD_INPUT_BUFFER NTFS_FILE_RECORD_INPUT_BUFFER, *PNTFS_FILE_RECORD_INPUT_BUFFER;

struct NTFS_FILE_RECORD_INPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
};

typedef struct _VOLUME_DISK_EXTENTS _VOLUME_DISK_EXTENTS, *P_VOLUME_DISK_EXTENTS;

struct _VOLUME_DISK_EXTENTS {
    DWORD NumberOfDiskExtents;
    DISK_EXTENT Extents[1];
};

typedef struct _PATHNAME_BUFFER _PATHNAME_BUFFER, *P_PATHNAME_BUFFER;

typedef struct _PATHNAME_BUFFER PATHNAME_BUFFER;

struct _PATHNAME_BUFFER {
    DWORD PathNameLength;
    WCHAR Name[1];
};

typedef struct _STORAGE_HOTPLUG_INFO _STORAGE_HOTPLUG_INFO, *P_STORAGE_HOTPLUG_INFO;

struct _STORAGE_HOTPLUG_INFO {
    DWORD Size;
    BOOLEAN MediaRemovable;
    BOOLEAN MediaHotplug;
    BOOLEAN DeviceHotplug;
    BOOLEAN WriteCacheEnableOverride;
};

typedef struct _CHANGER_MOVE_MEDIUM _CHANGER_MOVE_MEDIUM, *P_CHANGER_MOVE_MEDIUM;

struct _CHANGER_MOVE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;

typedef struct _VERIFY_INFORMATION *PVERIFY_INFORMATION;

typedef struct _TAPE_GET_STATISTICS _TAPE_GET_STATISTICS, *P_TAPE_GET_STATISTICS;

typedef struct _TAPE_GET_STATISTICS TAPE_GET_STATISTICS;

struct _TAPE_GET_STATISTICS {
    DWORD Operation;
};

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS _CHANGER_INITIALIZE_ELEMENT_STATUS, *P_CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS *PCHANGER_INITIALIZE_ELEMENT_STATUS;

struct _CHANGER_INITIALIZE_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN BarCodeScan;
};

typedef struct _IDEREGS *PIDEREGS;

typedef struct _TAPE_GET_STATISTICS *PTAPE_GET_STATISTICS;

typedef enum _ELEMENT_TYPE *PELEMENT_TYPE;

typedef struct _CHANGER_ELEMENT_STATUS_EX CHANGER_ELEMENT_STATUS_EX;

typedef struct NTFS_EXTENDED_VOLUME_DATA NTFS_EXTENDED_VOLUME_DATA, *PNTFS_EXTENDED_VOLUME_DATA;

struct NTFS_EXTENDED_VOLUME_DATA {
    DWORD ByteCount;
    WORD MajorVersion;
    WORD MinorVersion;
};

typedef struct _IDEREGS *LPIDEREGS;

typedef struct _BIN_RANGE *PBIN_RANGE;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct VOLUME_BITMAP_BUFFER VOLUME_BITMAP_BUFFER, *PVOLUME_BITMAP_BUFFER;

struct VOLUME_BITMAP_BUFFER {
    LARGE_INTEGER StartingLcn;
    LARGE_INTEGER BitmapSize;
    BYTE Buffer[1];
};

typedef enum _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE;

typedef struct _DISK_HISTOGRAM *PDISK_HISTOGRAM;

typedef struct _CHANGER_SET_ACCESS *PCHANGER_SET_ACCESS;

typedef struct _BIN_RESULTS BIN_RESULTS;

typedef struct _CHANGER_EXCHANGE_MEDIUM *PCHANGER_EXCHANGE_MEDIUM;

typedef struct _DISK_LOGGING _DISK_LOGGING, *P_DISK_LOGGING;

struct _DISK_LOGGING {
    BYTE Function;
    PVOID BufferAddress;
    DWORD BufferSize;
};

typedef struct _DISK_CONTROLLER_NUMBER _DISK_CONTROLLER_NUMBER, *P_DISK_CONTROLLER_NUMBER;

struct _DISK_CONTROLLER_NUMBER {
    DWORD ControllerNumber;
    DWORD DiskNumber;
};

typedef union _union_1298 _union_1298, *P_union_1298;

typedef struct _struct_1299 _struct_1299, *P_struct_1299;

typedef struct _struct_1300 _struct_1300, *P_struct_1300;

typedef struct _struct_1301 _struct_1301, *P_struct_1301;

struct _struct_1299 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

struct _struct_1301 {
    STORAGE_MEDIA_TYPE MediaType;
    DWORD MediaCharacteristics;
    DWORD CurrentBlockSize;
    STORAGE_BUS_TYPE BusType;
    union _union_1302 BusSpecificData;
};

struct _struct_1300 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

union _union_1298 {
    struct _struct_1299 DiskInfo;
    struct _struct_1300 RemovableDiskInfo;
    struct _struct_1301 TapeInfo;
};

typedef struct _DISK_CONTROLLER_NUMBER DISK_CONTROLLER_NUMBER;

typedef struct _FORMAT_PARAMETERS _FORMAT_PARAMETERS, *P_FORMAT_PARAMETERS;

typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;

struct _FORMAT_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
};

typedef struct _CHANGER_MOVE_MEDIUM *PCHANGER_MOVE_MEDIUM;

typedef WORD *PBAD_TRACK_NUMBER;

typedef struct _DISK_LOGGING *PDISK_LOGGING;

typedef struct _CHANGER_READ_ELEMENT_STATUS *PCHANGER_READ_ELEMENT_STATUS;

typedef struct _PERF_BIN _PERF_BIN, *P_PERF_BIN;

struct _PERF_BIN {
    DWORD NumberOfBins;
    DWORD TypeOfBin;
    BIN_RANGE BinsRanges[1];
};

typedef struct _CHANGER_ELEMENT_LIST *PCHANGER_ELEMENT_LIST;

typedef struct _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;

typedef struct _DRIVE_LAYOUT_INFORMATION _DRIVE_LAYOUT_INFORMATION, *P_DRIVE_LAYOUT_INFORMATION;

struct _DRIVE_LAYOUT_INFORMATION {
    DWORD PartitionCount;
    DWORD Signature;
    PARTITION_INFORMATION PartitionEntry[1];
};

typedef enum _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE;

typedef struct _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;

typedef struct _STORAGE_BUS_RESET_REQUEST STORAGE_BUS_RESET_REQUEST;

typedef struct _FAT_STATISTICS FAT_STATISTICS;

typedef struct _SENDCMDINPARAMS *PSENDCMDINPARAMS;

typedef struct _GET_CHANGER_PARAMETERS *PGET_CHANGER_PARAMETERS;

typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;

typedef struct _VOLUME_DISK_EXTENTS VOLUME_DISK_EXTENTS;

typedef struct _FAT_STATISTICS *PFAT_STATISTICS;

typedef struct _DISK_LOGGING DISK_LOGGING;

typedef struct _VOLUME_DISK_EXTENTS *PVOLUME_DISK_EXTENTS;

typedef struct _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;

typedef struct _BIN_COUNT *PBIN_COUNT;

typedef struct _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;

typedef struct _CHANGER_READ_ELEMENT_STATUS CHANGER_READ_ELEMENT_STATUS;

typedef struct _FILE_PREFETCH *PFILE_PREFETCH;

typedef WORD BAD_TRACK_NUMBER;

typedef struct _SENDCMDINPARAMS SENDCMDINPARAMS;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _CHANGER_ELEMENT *PCHANGER_ELEMENT;

typedef struct _PERF_BIN PERF_BIN;

typedef struct _DEVICE_MEDIA_INFO *PDEVICE_MEDIA_INFO;

typedef struct _SENDCMDOUTPARAMS *LPSENDCMDOUTPARAMS;

typedef enum _MEDIA_TYPE *PMEDIA_TYPE;

typedef struct _DISK_GEOMETRY DISK_GEOMETRY;

typedef enum _BIN_TYPES BIN_TYPES;

typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;

typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;

typedef struct _STORAGE_DEVICE_NUMBER STORAGE_DEVICE_NUMBER;

typedef struct _CHANGER_MOVE_MEDIUM CHANGER_MOVE_MEDIUM;

typedef struct _STORAGE_DEVICE_NUMBER *PSTORAGE_DEVICE_NUMBER;

typedef struct _PERF_BIN *PPERF_BIN;

typedef struct _BIN_RESULTS *PBIN_RESULTS;

typedef struct _CHANGER_EXCHANGE_MEDIUM CHANGER_EXCHANGE_MEDIUM;

typedef struct _struct_1359 _struct_1359, *P_struct_1359;

struct _struct_1359 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _DISK_EXTENT *PDISK_EXTENT;

typedef struct _PATHNAME_BUFFER *PPATHNAME_BUFFER;

typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;

typedef struct _GETVERSIONINPARAMS *PGETVERSIONINPARAMS;

typedef struct _CHANGER_SET_POSITION *PCHANGER_SET_POSITION;

typedef struct _DRIVERSTATUS *PDRIVERSTATUS;

typedef struct _CHANGER_SET_POSITION CHANGER_SET_POSITION;

typedef struct _READ_ELEMENT_ADDRESS_INFO READ_ELEMENT_ADDRESS_INFO;

typedef struct _struct_1363 _struct_1363, *P_struct_1363;

struct _struct_1363 {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

typedef struct _struct_1362 _struct_1362, *P_struct_1362;

struct _struct_1362 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _struct_1361 _struct_1361, *P_struct_1361;

struct _struct_1361 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

typedef struct _STORAGE_HOTPLUG_INFO *PSTORAGE_HOTPLUG_INFO;

typedef struct _DRIVERSTATUS *LPDRIVERSTATUS;

typedef struct _STORAGE_HOTPLUG_INFO STORAGE_HOTPLUG_INFO;

typedef struct _CHANGER_SET_ACCESS CHANGER_SET_ACCESS;

typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION *PCHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;

typedef struct _DISK_CONTROLLER_NUMBER *PDISK_CONTROLLER_NUMBER;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _NTFS_STATISTICS NTFS_STATISTICS;

#define SERIAL_IOC_FCR_RCVR_TRIGGER_MSB 128

#define CHANGER_VOLUME_ASSERT 4194304

#define ASSERT_PRIMARY 8

#define IOCTL_CHANGER_GET_STATUS 3162116

#define SERIAL_LSRMST_LSR_DATA 1

#define SMART_CYL_HI 194

#define IOCTL_CHANGER_REINITIALIZE_TRANSPORT 3162152

#define FILE_DEVICE_DFS_VOLUME 54

#define ELEMENT_STATUS_LUN_VALID 4096

#define CHANGER_BAR_CODE_SCANNER_INSTALLED 1

#define SERIAL_LSRMST_MST 3

#define VALID_NTFT 192

#define REVISION_LENGTH 4

#define ERROR_LABEL_UNREADABLE 1

#define SMART_GET_VERSION 475264

#define CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE 2147483650

#define FILESYSTEM_STATISTICS_TYPE_NTFS 1

#define CHANGER_POSITION_TO_ELEMENT 1024

#define CHANGER_STORAGE_SLOT 16384

#define IOCTL_STORAGE_GET_MEDIA_TYPES 2952192

#define CHANGER_DRIVE_CLEANING_REQUIRED 65536

#define IOCTL_DISK_LOAD_MEDIA 477196

#define FILE_DEVICE_DISK_FILE_SYSTEM 8

#define FILE_DEVICE_DISK 7

#define EXTEND_IEPORT 2

#define FILE_DEVICE_ACPI 50

#define DISK_BINNING 3

#define FSCTL_IS_VOLUME_DIRTY 589944

#define IOCTL_DISK_PERFORMANCE_OFF 458848

#define FILE_DEVICE_MASS_STORAGE 45

#define SEARCH_ALL 0

#define FSCTL_OPBATCH_ACK_CLOSE_PENDING 589840

#define CHANGER_PREMOUNT_EJECT_REQUIRED 524288

#define CHANGER_CLEANER_AUTODISMOUNT 2147483652

#define CHANGER_CLEANER_ACCESS_NOT_VALID 262144

#define FILE_DEVICE_KS 47

#define FILE_DEVICE_NULL 21

#define FILE_DEVICE_INPORT_PORT 10

#define SMART_WRITE_LOG 214

#define CHANGER_PREDISMOUNT_ALIGN_TO_SLOT 2147483649

#define IOCTL_DISK_HISTOGRAM_STRUCTURE 458800

#define SMART_INVALID_REGISTER 8

#define IOCTL_STORAGE_RESET_BUS 2969600

#define SERIAL_IOC_FCR_FIFO_ENABLE 1

#define FILE_DEVICE_MIDI_IN 13

#define RECOVERED_READS_VALID 4

#define IOCTL_CHANGER_BASE 48

#define IOCTL_DISK_SET_PARTITION_INFO 507912

#define PRODUCT_ID_LENGTH 16

#define ASSERT_ALTERNATE 9

#define MEDIA_READ_ONLY 4

#define PARTITION_FAT32 11

#define IOCTL_STORAGE_LOAD_MEDIA2 2951180

#define WRITE_COMPRESSION_INFO_VALID 16

#define FSCTL_SET_COMPRESSION 639040

#define CAP_ATA_ID_CMD 1

#define ELEMENT_STATUS_SVALID 8388608

#define FILE_DEVICE_SCANNER 25

#define CHANGER_VOLUME_UNDEFINE 16777216

#define SMART_ERROR_NO_MEM 7

#define ERROR_TRAY_MALFUNCTION 16

#define FILE_DEVICE_TAPE 31

#define FILE_DEVICE_PHYSICAL_NETCARD 23

#define SMART_IDE_ERROR 1

#define FSCTL_MARK_VOLUME_DIRTY 589872

#define IOCTL_CHANGER_EXCHANGE_MEDIUM 3162144

#define ERROR_UNHANDLED_ERROR 4294967295

#define IOCTL_DISK_GET_DRIVE_LAYOUT 475148

#define VENDOR_ID_LENGTH 8

#define ERROR_SLOT_NOT_PRESENT 4

#define FSCTL_DISMOUNT_VOLUME 589856

#define IOCTL_CHANGER_SET_POSITION 3162140

#define SMART_INVALID_COMMAND 3

#define PARTITION_HUGE 6

#define SMART_INVALID_IOCTL 6

#define SERIAL_IOC_FCR_DMA_MODE 8

#define FILE_DEVICE_NETWORK 18

#define ELEMENT_STATUS_INENAB 32

#define FILE_DEVICE_PARALLEL_PORT 22

#define CHANGER_STATUS_NON_VOLATILE 16

#define CHANGER_MEDIUM_FLIP 512

#define IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS 3162136

#define FILE_DEVICE_CHANGER 48

#define FSCTL_OPLOCK_BREAK_ACKNOWLEDGE 589836

#define IOCTL_DISK_SET_DRIVE_LAYOUT 507920

#define FILE_DEVICE_SERIAL_MOUSE_PORT 26

#define LOCK_ELEMENT 0

#define CHANGER_CLEANER_OPS_NOT_SUPPORTED 2147483712

#define SMART_OFFLINE_ROUTINE_OFFLINE 0

#define MEDIA_WRITE_ONCE 2

#define OBSOLETE_IOCTL_STORAGE_RESET_BUS 3002368

#define CHANGER_KEYPAD_ENABLE_DISABLE 268435456

#define PARTITION_XENIX_2 3

#define PARTITION_XENIX_1 2

#define IOCTL_CHANGER_GET_ELEMENT_STATUS 3194900

#define IOCTL_STORAGE_MEDIA_REMOVAL 2967556

#define ELEMENT_STATUS_PVOLTAG 268435456

#define FILESYSTEM_STATISTICS_TYPE_FAT 2

#define UNRECOVERED_WRITES_VALID 2

#define MEDIA_ERASEABLE 1

#define CHANGER_SERIAL_NUMBER_VALID 67108864

#define FILE_DEVICE_KEYBOARD 11

#define METHOD_NEITHER 3

#define FILE_DEVICE_WAVE_IN 37

#define IOCTL_DISK_FIND_NEW_DEVICES 477208

#define SMART_NOT_SUPPORTED 9

#define READ_ATTRIBUTE_BUFFER_SIZE 512

#define FILE_PREFETCH_TYPE_FOR_CREATE 1

#define SEARCH_PRI_NO_SEQ 5

#define DISK_LOGGING_START 0

#define TAPE_RETURN_STATISTICS 0

#define IOCTL_STORAGE_SET_HOTPLUG_INFO 3001368

#define FILE_DEVICE_SERENUM 55

#define ERROR_DRIVE_NOT_INSTALLED 8

#define FSCTL_GET_COMPRESSION 589884

#define FSCTL_IS_VOLUME_MOUNTED 589864

#define FILE_DEVICE_CD_ROM_FILE_SYSTEM 3

#define SMART_INVALID_BUFFER 4

#define FSCTL_LOCK_VOLUME 589848

#define CHANGER_TO_DRIVE 8

#define RETURN_SMART_STATUS 218

#define IOCTL_DISK_HISTOGRAM_RESET 458808

#define FILE_DEVICE_DVD 51

#define CHANGER_STORAGE_TRANSPORT 32768

#define SMART_ABORT_OFFLINE_SELFTEST 127

#define MAX_VOLUME_ID_SIZE 36

#define IOCTL_DISK_FORMAT_TRACKS_EX 507948

#define SEARCH_PRIMARY 1

#define SMART_SHORT_SELFTEST_OFFLINE 1

#define FILE_DEVICE_CONTROLLER 4

#define PARTITION_EXTENDED 5

#define FSCTL_OPLOCK_BREAK_ACK_NO_2 589904

#define FILE_DEVICE_SOUND 29

#define FILE_DEVICE_UNKNOWN 34

#define FSCTL_UNLOCK_VOLUME 589852

#define FILE_DEVICE_MULTI_UNC_PROVIDER 16

#define FSCTL_FILESYSTEM_GET_STATISTICS 589920

#define FILE_ANY_ACCESS 0

#define CHANGER_STORAGE_DRIVE 4096

#define EXECUTE_OFFLINE_DIAGS 212

#define FILE_WRITE_ACCESS 2

#define ELEMENT_STATUS_NOT_BUS 32768

#define IDENTIFY_BUFFER_SIZE 512

#define FILE_DEVICE_SERIAL_PORT 27

#define CAP_ATAPI_ID_CMD 2

#define FSCTL_OPLOCK_BREAK_NOTIFY 589844

#define FILE_DEVICE_BEEP 1

#define FILE_READ_ACCESS 1

#define PARTITION_IFS 7

#define FILE_DEVICE_DATALINK 5

#define REPLACE_ALTERNATE 11

#define CHANGER_LOCK_UNLOCK 128

#define SEARCH_ALT_NO_SEQ 6

#define LOCK_UNLOCK_DOOR 2

#define SMART_NO_ERROR 0

#define FILE_DEVICE_TRANSPORT 33

#define FILE_DEVICE_KSEC 57

#define SERIAL_NUMBER_LENGTH 32

#define DISK_LOGGING_STOP 1

#define ATAPI_ID_CMD 161

#define SMART_EXTENDED_SELFTEST_CAPTIVE 130

#define FILE_DEVICE_SCREEN 28

#define ENABLE_DISABLE_AUTOSAVE 210

#define IOCTL_DISK_GET_DRIVE_GEOMETRY 458752

#define ELEMENT_STATUS_EXCEPT 4

#define PARTITION_XINT13_EXTENDED 15

#define IOCTL_DISK_GET_PARTITION_INFO 475140

#define PARTITION_UNIX 99

#define METHOD_IN_DIRECT 1

#define IOCTL_DISK_LOGGING 458792

#define IOCTL_CHANGER_GET_PRODUCT_DATA 3162120

#define FSCTL_GET_NTFS_VOLUME_DATA 589924

#define IOCTL_DISK_RELEASE 477204

#define FILE_DEVICE_BATTERY 41

#define IOCTL_DISK_PERFORMANCE 458784

#define FSCTL_GET_NTFS_FILE_RECORD 589928

#define FILE_DEVICE_TAPE_FILE_SYSTEM 32

#define OBSOLETE_IOCTL_STORAGE_RESET_DEVICE 3002372

#define FILE_DEVICE_MAILSLOT 12

#define CHANGER_CLOSE_IEPORT 4

#define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS 536870912

#define IOCTL_STORAGE_LOAD_MEDIA 2967564

#define UNRECOVERED_READS_VALID 8

#define ENABLE_DISABLE_AUTO_OFFLINE 219

#define FILE_DEVICE_VIDEO 35

#define IOCTL_DISK_IS_WRITABLE 458788

#define IOCTL_CHANGER_MOVE_MEDIUM 3162148

#define FSCTL_REQUEST_OPLOCK_LEVEL_1 589824

#define FSCTL_REQUEST_OPLOCK_LEVEL_2 589828

#define IOCTL_DISK_REASSIGN_BLOCKS 507932

#define READ_THRESHOLD_BUFFER_SIZE 512

#define UNLOCK_ELEMENT 1

#define PARTITION_XINT13 14

#define CHANGER_TO_SLOT 2

#define CAP_SMART_CMD 4

#define IOCTL_STORAGE_RESERVE 2967568

#define CHANGER_VOLUME_IDENTIFICATION 1048576

#define ID_CMD 236

#define IOCTL_SERIAL_LSRMST_INSERT 1769596

#define RECOVERED_WRITES_VALID 1

#define FSCTL_QUERY_RETRIEVAL_POINTERS 589883

#define FILE_DEVICE_WAVE_OUT 38

#define TAPE_RESET_STATISTICS 2

#define IOCTL_DISK_RESERVE 477200

#define CHANGER_TRUE_EXCHANGE_CAPABLE 2147483656

#define IOCTL_STORAGE_EJECT_MEDIA 2967560

#define IOCTL_DISK_REQUEST_DATA 458816

#define ELEMENT_STATUS_FULL 1

#define FILE_DEVICE_FULLSCREEN_VIDEO 52

#define FILE_DEVICE_SMARTCARD 49

#define IOCTL_SERENUM_REMOVE_HARDWARE 3604996

#define IOCTL_SERENUM_EXPOSE_HARDWARE 3604992

#define CHANGER_CLEANER_SLOT 64

#define CHANGER_MOVE_EXTENDS_IEPORT 2147484160

#define FILE_DEVICE_NETWORK_FILE_SYSTEM 20

#define FSCTL_INVALIDATE_VOLUMES 589908

#define LOCK_UNLOCK_IEPORT 1

#define PARTITION_NTFT 128

#define CHANGER_EXCHANGE_MEDIA 32

#define ERROR_INIT_STATUS_NEEDED 17

#define DISABLE_SMART 217

#define SMART_CMD 176

#define MEDIA_WRITE_PROTECTED 256

#define FSCTL_MARK_AS_SYSTEM_HIVE 589903

#define FSCTL_GET_VOLUME_BITMAP 589935

#define ERROR_LABEL_QUESTIONABLE 2

#define CHANGER_OPEN_IEPORT 8

#define CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR 2147483680

#define FILE_DEVICE_MOUSE 15

#define ELEMENT_STATUS_IMPEXP 2

#define IOCTL_SERENUM_PORT_DESC 3605000

#define IOCTL_DISK_REQUEST_STRUCTURE 458812

#define FSCTL_GET_RETRIEVAL_POINTERS 589939

#define IOCTL_DISK_EJECT_MEDIA 477192

#define FILE_DEVICE_VIRTUAL_DISK 36

#define SERIAL_LSRMST_ESCAPE 0

#define IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER 2952208

#define IOCTL_STORAGE_PREDICT_FAILURE 2953472

#define READ_COMPRESSION_INFO_VALID 32

#define IOCTL_STORAGE_RELEASE 2967572

#define CHANGER_VOLUME_REPLACE 8388608

#define FSCTL_REQUEST_FILTER_OPLOCK 589916

#define MAX_VOLUME_TEMPLATE_SIZE 40

#define LOCK_UNLOCK_KEYPAD 4

#define PARTITION_FAT_12 1

#define ELEMENT_STATUS_ID_VALID 8192

#define PARTITION_FAT_16 4

#define SMART_INVALID_DRIVE 5

#define IOCTL_STORAGE_CHECK_VERIFY2 2951168

#define PARTITION_LDM 66

#define SMART_INVALID_FLAG 2

#define FILE_DEVICE_SMB 46

#define SERIAL_LSRMST_LSR_NODATA 2

#define FILE_DEVICE_CD_ROM 2

#define CHANGER_PREDISMOUNT_EJECT_REQUIRED 131072

#define IOCTL_STORAGE_FIND_NEW_DEVICES 2967576

#define ELEMENT_STATUS_ACCESS 8

#define PARTITION_FAT32_XINT13 12

#define SERIAL_IOC_FCR_RES1 16

#define SERIAL_IOC_FCR_RES2 32

#define SERIAL_IOC_MCR_OUT1 4

#define IOCTL_STORAGE_MCN_CONTROL 2951492

#define IOCTL_DISK_FORMAT_TRACKS 507928

#define FILE_DEVICE_NAMED_PIPE 17

#define METHOD_BUFFERED 0

#define SERIAL_IOC_MCR_OUT2 8

#define CHANGER_SLOTS_USE_TRAYS 2147483664

#define IOCTL_DISK_VERIFY 458772

#define CHANGER_REPORT_IEPORT_STATE 2048

#define RETRACT_IEPORT 3

#define FILE_DEVICE_VDM 44

#define SERIAL_IOC_FCR_XMIT_RESET 4

#define FILE_DEVICE_PRINTER 24

#define SERIAL_IOC_MCR_LOOP 16

#define IOCTL_DISK_CHECK_VERIFY 477184

#define IOCTL_CHANGER_SET_ACCESS 3194896

#define SMART_CYL_LOW 79

#define SAVE_ATTRIBUTE_VALUES 211

#define READ_THRESHOLDS 209

#define IOCTL_DISK_HISTOGRAM_DATA 458804

#define IOCTL_STORAGE_RESET_DEVICE 2969604

#define CHANGER_INIT_ELEM_STAT_WITH_RANGE 2

#define FILE_DEVICE_DFS_FILE_SYSTEM 53

#define ELEMENT_STATUS_EXENAB 16

#define SERIAL_IOC_MCR_DTR 1

#define PARTITION_ENTRY_UNUSED 0

#define FSCTL_MOVE_FILE 589940

#define READ_ATTRIBUTES 208

#define UNDEFINE_ALTERNATE 13

#define SERIAL_IOC_FCR_RCVR_RESET 2

#define FILE_SPECIAL_ACCESS 0

#define REPLACE_PRIMARY 10

#define ELEMENT_STATUS_PRODUCT_DATA 64

#define PARTITION_PREP 65

#define ENABLE_SMART 216

#define FILE_DEVICE_MODEM 43

#define IOCTL_CHANGER_QUERY_VOLUME_TAGS 3194924

#define FSCTL_IS_PATHNAME_VALID 589868

#define FILE_DEVICE_FILE_SYSTEM 9

#define SMART_LOG_SECTOR_SIZE 512

#define SMART_RCV_DRIVE_DATA 508040

#define FILE_DEVICE_8042_PORT 39

#define CHANGER_TO_IEPORT 4

#define FSCTL_ALLOW_EXTENDED_DASD_IO 589955

#define CHANGER_VOLUME_SEARCH 2097152

#define IOCTL_STORAGE_GET_MEDIA_TYPES_EX 2952196

#define IOCTL_STORAGE_CHECK_VERIFY 2967552

#define ELEMENT_STATUS_INVERT 4194304

#define SEARCH_ALL_NO_SEQ 4

#define FILE_DEVICE_MIDI_OUT 14

#define IOCTL_DISK_GET_MEDIA_TYPES 461824

#define ELEMENT_STATUS_AVOLTAG 536870912

#define FSCTL_REQUEST_BATCH_OPLOCK 589832

#define FILE_DEVICE_STREAMS 30

#define CHANGER_IEPORT_USER_CONTROL_CLOSE 2147483904

#define FILE_DEVICE_NETWORK_BROWSER 19

#define CHANGER_DEVICE_REINITIALIZE_CAPABLE 134217728

#define FILE_DEVICE_BUS_EXTENDER 42

#define IOCTL_STORAGE_BREAK_RESERVATION 2969620

#define HIST_NO_OF_BUCKETS 24

#define CHANGER_MOVE_RETRACTS_IEPORT 2147484672

#define IOCTL_CHANGER_GET_PARAMETERS 3162112

#define SMART_EXTENDED_SELFTEST_OFFLINE 2

#define SMART_NO_IDE_DEVICE 10

#define CHANGER_TO_TRANSPORT 1

#define CHANGER_IEPORT_USER_CONTROL_OPEN 2147483776

#define IOCTL_STORAGE_EJECTION_CONTROL 2951488

#define IOCTL_STORAGE_GET_DEVICE_NUMBER 2953344

#define IOCTL_DISK_MEDIA_REMOVAL 477188

#define SMART_READ_LOG 213

#define SEARCH_ALTERNATE 2

#define CHANGER_RESERVED_BIT 2147483648

#define IOCTL_SERENUM_GET_PORT_NAME 3605004

#define IOCTL_DISK_CONTROLLER_NUMBER 458820

#define SERIAL_IOC_FCR_RCVR_TRIGGER_LSB 64

#define UNDEFINE_PRIMARY 12

#define SMART_SEND_DRIVE_COMMAND 508036

#define CHANGER_CARTRIDGE_MAGAZINE 256

#define IOCTL_STORAGE_BASE 45

#define DISK_LOGGING_DUMP 2

#define SMART_SHORT_SELFTEST_CAPTIVE 129

#define FILE_DEVICE_TERMSRV 56

#define CHANGER_STORAGE_IEPORT 8192

#define IOCTL_STORAGE_GET_HOTPLUG_INFO 2952212

#define FILE_DEVICE_NETWORK_REDIRECTOR 40

#define SERIAL_IOC_MCR_RTS 2

#define PARTITION_OS2BOOTMGR 10

#define MEDIA_CURRENTLY_MOUNTED 2147483648

#define IOCTL_DISK_BASE 7

#define MEDIA_READ_WRITE 8

#define FSCTL_QUERY_FAT_BPB 589912

#define METHOD_OUT_DIRECT 2

#define TAPE_RETURN_ENV_INFO 1

#define FILE_DEVICE_FIPS 58

#define FILE_DEVICE_DFS 6

typedef enum _D3DVERTEXBLENDFLAGS {
    D3DVBF_DISABLE=0,
    D3DVBF_1WEIGHTS=1,
    D3DVBF_2WEIGHTS=2,
    D3DVBF_3WEIGHTS=3,
    D3DVBF_TWEENING=255,
    D3DVBF_0WEIGHTS=256,
    D3DVBF_FORCE_DWORD=2147483647
} _D3DVERTEXBLENDFLAGS;

typedef enum _D3DVERTEXBLENDFLAGS D3DVERTEXBLENDFLAGS;

typedef enum _D3DBLEND {
    D3DBLEND_ZERO=1,
    D3DBLEND_ONE=2,
    D3DBLEND_SRCCOLOR=3,
    D3DBLEND_INVSRCCOLOR=4,
    D3DBLEND_SRCALPHA=5,
    D3DBLEND_INVSRCALPHA=6,
    D3DBLEND_DESTALPHA=7,
    D3DBLEND_INVDESTALPHA=8,
    D3DBLEND_DESTCOLOR=9,
    D3DBLEND_INVDESTCOLOR=10,
    D3DBLEND_SRCALPHASAT=11,
    D3DBLEND_BOTHSRCALPHA=12,
    D3DBLEND_BOTHINVSRCALPHA=13,
    D3DBLEND_FORCE_DWORD=2147483647
} _D3DBLEND;

typedef enum _D3DFOGMODE {
    D3DFOG_NONE=0,
    D3DFOG_EXP=1,
    D3DFOG_EXP2=2,
    D3DFOG_LINEAR=3,
    D3DFOG_FORCE_DWORD=2147483647
} _D3DFOGMODE;

typedef enum _D3DSHADEMODE {
    D3DSHADE_FLAT=1,
    D3DSHADE_GOURAUD=2,
    D3DSHADE_PHONG=3,
    D3DSHADE_FORCE_DWORD=2147483647
} _D3DSHADEMODE;

typedef struct _D3DRANGE _D3DRANGE, *P_D3DRANGE;

struct _D3DRANGE {
    UINT Offset;
    UINT Size;
};

typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE {
    D3DSIO_NOP=0,
    D3DSIO_MOV=1,
    D3DSIO_ADD=2,
    D3DSIO_SUB=3,
    D3DSIO_MAD=4,
    D3DSIO_MUL=5,
    D3DSIO_RCP=6,
    D3DSIO_RSQ=7,
    D3DSIO_DP3=8,
    D3DSIO_DP4=9,
    D3DSIO_MIN=10,
    D3DSIO_MAX=11,
    D3DSIO_SLT=12,
    D3DSIO_SGE=13,
    D3DSIO_EXP=14,
    D3DSIO_LOG=15,
    D3DSIO_LIT=16,
    D3DSIO_DST=17,
    D3DSIO_LRP=18,
    D3DSIO_FRC=19,
    D3DSIO_M4x4=20,
    D3DSIO_M4x3=21,
    D3DSIO_M3x4=22,
    D3DSIO_M3x3=23,
    D3DSIO_M3x2=24,
    D3DSIO_TEXCOORD=64,
    D3DSIO_TEXKILL=65,
    D3DSIO_TEX=66,
    D3DSIO_TEXBEM=67,
    D3DSIO_TEXBEML=68,
    D3DSIO_TEXREG2AR=69,
    D3DSIO_TEXREG2GB=70,
    D3DSIO_TEXM3x2PAD=71,
    D3DSIO_TEXM3x2TEX=72,
    D3DSIO_TEXM3x3PAD=73,
    D3DSIO_TEXM3x3TEX=74,
    D3DSIO_TEXM3x3DIFF=75,
    D3DSIO_TEXM3x3SPEC=76,
    D3DSIO_TEXM3x3VSPEC=77,
    D3DSIO_EXPP=78,
    D3DSIO_LOGP=79,
    D3DSIO_CND=80,
    D3DSIO_DEF=81,
    D3DSIO_COMMENT=65534,
    D3DSIO_END=65535,
    D3DSIO_FORCE_DWORD=2147483647
} _D3DSHADER_INSTRUCTION_OPCODE_TYPE;

typedef enum _D3DDEBUGMONITORTOKENS {
    D3DDMT_ENABLE=0,
    D3DDMT_DISABLE=1,
    D3DDMT_FORCE_DWORD=2147483647
} _D3DDEBUGMONITORTOKENS;

typedef enum _D3DDEBUGMONITORTOKENS D3DDEBUGMONITORTOKENS;

typedef enum _D3DVSD_TOKENTYPE {
    D3DVSD_TOKEN_NOP=0,
    D3DVSD_TOKEN_STREAM=1,
    D3DVSD_TOKEN_STREAMDATA=2,
    D3DVSD_TOKEN_TESSELLATOR=3,
    D3DVSD_TOKEN_CONSTMEM=4,
    D3DVSD_TOKEN_EXT=5,
    D3DVSD_TOKEN_END=7,
    D3DVSD_FORCE_DWORD=2147483647
} _D3DVSD_TOKENTYPE;

typedef enum _D3DVSD_TOKENTYPE D3DVSD_TOKENTYPE;

typedef enum _D3DFILLMODE {
    D3DFILL_POINT=1,
    D3DFILL_WIREFRAME=2,
    D3DFILL_SOLID=3,
    D3DFILL_FORCE_DWORD=2147483647
} _D3DFILLMODE;

typedef enum _D3DFILLMODE D3DFILLMODE;

typedef enum _D3DMATERIALCOLORSOURCE {
    D3DMCS_MATERIAL=0,
    D3DMCS_COLOR1=1,
    D3DMCS_COLOR2=2,
    D3DMCS_FORCE_DWORD=2147483647
} _D3DMATERIALCOLORSOURCE;

typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE {
    D3DSPSM_NONE=0,
    D3DSPSM_NEG=16777216,
    D3DSPSM_BIAS=33554432,
    D3DSPSM_BIASNEG=50331648,
    D3DSPSM_SIGN=67108864,
    D3DSPSM_SIGNNEG=83886080,
    D3DSPSM_COMP=100663296,
    D3DSPSM_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_SRCMOD_TYPE;

typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE D3DSHADER_PARAM_SRCMOD_TYPE;

typedef enum _D3DCULL {
    D3DCULL_NONE=1,
    D3DCULL_CW=2,
    D3DCULL_CCW=3,
    D3DCULL_FORCE_DWORD=2147483647
} _D3DCULL;

typedef enum _D3DCULL D3DCULL;

typedef enum _D3DPATCHEDGESTYLE {
    D3DPATCHEDGE_DISCRETE=0,
    D3DPATCHEDGE_CONTINUOUS=1,
    D3DPATCHEDGE_FORCE_DWORD=2147483647
} _D3DPATCHEDGESTYLE;

typedef enum _D3DPATCHEDGESTYLE D3DPATCHEDGESTYLE;

typedef enum _D3DCMPFUNC {
    D3DCMP_NEVER=1,
    D3DCMP_LESS=2,
    D3DCMP_EQUAL=3,
    D3DCMP_LESSEQUAL=4,
    D3DCMP_GREATER=5,
    D3DCMP_NOTEQUAL=6,
    D3DCMP_GREATEREQUAL=7,
    D3DCMP_ALWAYS=8,
    D3DCMP_FORCE_DWORD=2147483647
} _D3DCMPFUNC;

typedef enum _D3DCMPFUNC D3DCMPFUNC;

typedef enum _D3DSHADER_PARAM_DSTMOD_TYPE {
    D3DSPDM_NONE=0,
    D3DSPDM_SATURATE=1048576,
    D3DSPDM_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_DSTMOD_TYPE;

typedef enum _D3DTEXTURETRANSFORMFLAGS {
    D3DTTFF_DISABLE=0,
    D3DTTFF_COUNT1=1,
    D3DTTFF_COUNT2=2,
    D3DTTFF_COUNT3=3,
    D3DTTFF_COUNT4=4,
    D3DTTFF_PROJECTED=256,
    D3DTTFF_FORCE_DWORD=2147483647
} _D3DTEXTURETRANSFORMFLAGS;

typedef enum _D3DTEXTURETRANSFORMFLAGS D3DTEXTURETRANSFORMFLAGS;

typedef enum _D3DTEXTUREADDRESS {
    D3DTADDRESS_WRAP=1,
    D3DTADDRESS_MIRROR=2,
    D3DTADDRESS_CLAMP=3,
    D3DTADDRESS_BORDER=4,
    D3DTADDRESS_MIRRORONCE=5,
    D3DTADDRESS_FORCE_DWORD=2147483647
} _D3DTEXTUREADDRESS;

typedef struct _D3DRANGE D3DRANGE;

typedef enum _D3DBLENDOP {
    D3DBLENDOP_ADD=1,
    D3DBLENDOP_SUBTRACT=2,
    D3DBLENDOP_REVSUBTRACT=3,
    D3DBLENDOP_MIN=4,
    D3DBLENDOP_MAX=5,
    D3DBLENDOP_FORCE_DWORD=2147483647
} _D3DBLENDOP;

typedef enum _D3DBLEND D3DBLEND;

typedef union _union_2533 _union_2533, *P_union_2533;

typedef struct _struct_2534 _struct_2534, *P_struct_2534;

struct _struct_2534 {
    float _11;
    float _12;
    float _13;
    float _14;
    float _21;
    float _22;
    float _23;
    float _24;
    float _31;
    float _32;
    float _33;
    float _34;
    float _41;
    float _42;
    float _43;
    float _44;
};

union _union_2533 {
    struct _struct_2534 field0;
    float m[4][4];
};

typedef enum _D3DZBUFFERTYPE {
    D3DZB_FALSE=0,
    D3DZB_TRUE=1,
    D3DZB_USEW=2,
    D3DZB_FORCE_DWORD=2147483647
} _D3DZBUFFERTYPE;

typedef enum _D3DVS_RASTOUT_OFFSETS {
    D3DSRO_POSITION=0,
    D3DSRO_FOG=1,
    D3DSRO_POINT_SIZE=2,
    D3DSRO_FORCE_DWORD=2147483647
} _D3DVS_RASTOUT_OFFSETS;

typedef enum _D3DVS_RASTOUT_OFFSETS D3DVS_RASTOUT_OFFSETS;

typedef struct _D3DLINEPATTERN _D3DLINEPATTERN, *P_D3DLINEPATTERN;

typedef struct _D3DLINEPATTERN D3DLINEPATTERN;

struct _D3DLINEPATTERN {
    WORD wRepeatFactor;
    WORD wLinePattern;
};

typedef enum _D3DSTENCILOP {
    D3DSTENCILOP_KEEP=1,
    D3DSTENCILOP_ZERO=2,
    D3DSTENCILOP_REPLACE=3,
    D3DSTENCILOP_INCRSAT=4,
    D3DSTENCILOP_DECRSAT=5,
    D3DSTENCILOP_INVERT=6,
    D3DSTENCILOP_INCR=7,
    D3DSTENCILOP_DECR=8,
    D3DSTENCILOP_FORCE_DWORD=2147483647
} _D3DSTENCILOP;

typedef enum _D3DSTENCILOP D3DSTENCILOP;

typedef enum _D3DSHADEMODE D3DSHADEMODE;

typedef enum _D3DFOGMODE D3DFOGMODE;

typedef enum _D3DZBUFFERTYPE D3DZBUFFERTYPE;

typedef enum _D3DTEXTUREADDRESS D3DTEXTUREADDRESS;

typedef enum _D3DSHADER_PARAM_DSTMOD_TYPE D3DSHADER_PARAM_DSTMOD_TYPE;

typedef enum _D3DBLENDOP D3DBLENDOP;

typedef enum _D3DTEXTUREFILTERTYPE {
    D3DTEXF_NONE=0,
    D3DTEXF_POINT=1,
    D3DTEXF_LINEAR=2,
    D3DTEXF_ANISOTROPIC=3,
    D3DTEXF_FLATCUBIC=4,
    D3DTEXF_GAUSSIANCUBIC=5,
    D3DTEXF_FORCE_DWORD=2147483647
} _D3DTEXTUREFILTERTYPE;

typedef enum _D3DVS_ADDRESSMODE_TYPE {
    D3DVS_ADDRMODE_ABSOLUTE=0,
    D3DVS_ADDRMODE_RELATIVE=8192,
    D3DVS_ADDRMODE_FORCE_DWORD=2147483647
} _D3DVS_ADDRESSMODE_TYPE;

typedef enum _D3DVS_ADDRESSMODE_TYPE D3DVS_ADDRESSMODE_TYPE;

typedef enum _D3DTEXTUREOP {
    D3DTOP_DISABLE=1,
    D3DTOP_SELECTARG1=2,
    D3DTOP_SELECTARG2=3,
    D3DTOP_MODULATE=4,
    D3DTOP_MODULATE2X=5,
    D3DTOP_MODULATE4X=6,
    D3DTOP_ADD=7,
    D3DTOP_ADDSIGNED=8,
    D3DTOP_ADDSIGNED2X=9,
    D3DTOP_SUBTRACT=10,
    D3DTOP_ADDSMOOTH=11,
    D3DTOP_BLENDDIFFUSEALPHA=12,
    D3DTOP_BLENDTEXTUREALPHA=13,
    D3DTOP_BLENDFACTORALPHA=14,
    D3DTOP_BLENDTEXTUREALPHAPM=15,
    D3DTOP_BLENDCURRENTALPHA=16,
    D3DTOP_PREMODULATE=17,
    D3DTOP_MODULATEALPHA_ADDCOLOR=18,
    D3DTOP_MODULATECOLOR_ADDALPHA=19,
    D3DTOP_MODULATEINVALPHA_ADDCOLOR=20,
    D3DTOP_MODULATEINVCOLOR_ADDALPHA=21,
    D3DTOP_BUMPENVMAP=22,
    D3DTOP_BUMPENVMAPLUMINANCE=23,
    D3DTOP_DOTPRODUCT3=24,
    D3DTOP_MULTIPLYADD=25,
    D3DTOP_LERP=26,
    D3DTOP_FORCE_DWORD=2147483647
} _D3DTEXTUREOP;

typedef enum _D3DTEXTUREOP D3DTEXTUREOP;

typedef enum _D3DTEXTUREFILTERTYPE D3DTEXTUREFILTERTYPE;

typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE D3DSHADER_INSTRUCTION_OPCODE_TYPE;

typedef enum _D3DSHADER_PARAM_REGISTER_TYPE {
    D3DSPR_TEMP=0,
    D3DSPR_INPUT=268435456,
    D3DSPR_CONST=536870912,
    D3DSPR_ADDR=805306368,
    D3DSPR_TEXTURE=805306368,
    D3DSPR_RASTOUT=1073741824,
    D3DSPR_ATTROUT=1342177280,
    D3DSPR_TEXCRDOUT=1610612736,
    D3DSPR_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_REGISTER_TYPE;

typedef enum _D3DMATERIALCOLORSOURCE D3DMATERIALCOLORSOURCE;

typedef enum _D3DSHADER_PARAM_REGISTER_TYPE D3DSHADER_PARAM_REGISTER_TYPE;

#define D3DVSD_EXTINFOMASK 16777215

#define D3DCS_BOTTOM 8

#define D3DTA_TEXTURE 2

#define D3DSP_REGTYPE_MASK 1879048192

#define D3DSP_DSTSHIFT_SHIFT 24

#define D3DSP_SWIZZLE_SHIFT 16

#define D3DLOCK_READONLY 16

#define D3DCS_PLANE2 256

#define D3DCS_PLANE3 512

#define D3DCS_PLANE4 1024

#define D3DCS_PLANE5 2048

#define D3DCS_PLANE0 64

#define D3DCS_PLANE1 128

#define D3DVSDE_SPECULAR 6

#define D3DUSAGE_SOFTWAREPROCESSING 16

#define D3DVSDT_FLOAT2 1

#define D3DVSDT_FLOAT1 0

#define D3DVSD_CONSTADDRESSSHIFT 0

#define D3DFVF_PSIZE 32

#define D3DVSDT_FLOAT4 3

#define D3DVSDT_FLOAT3 2

#define D3DCLIPPLANE3 8

#define D3DCLIPPLANE4 16

#define D3DCLIPPLANE5 32

#define D3DCLIPPLANE0 1

#define D3DCLIPPLANE1 2

#define D3DCLIPPLANE2 4

#define D3DTA_COMPLEMENT 16

#define D3DVSD_STREAMTESSMASK 268435456

#define D3DUSAGE_DONOTCLIP 32

#define D3DVSD_EXTINFOSHIFT 0

#define D3DVSD_STREAMNUMBERSHIFT 0

#define D3DVSDE_PSIZE 4

#define D3DVSDE_POSITION2 15

#define D3DWRAPCOORD_0 1

#define D3DWRAPCOORD_2 4

#define D3DWRAPCOORD_1 2

#define D3DWRAPCOORD_3 8

#define D3DCS_LEFT 1

#define D3DSP_NOSWIZZLE 14942208

#define D3DVS_ADDRESSMODE_MASK 8192

#define D3DRENDERSTATE_WRAPBIAS 128

#define D3DSP_SWIZZLE_MASK 16711680

#define D3DFVF_DIFFUSE 64

#define D3DMAXUSERCLIPPLANES 32

#define D3DVS_X_X 0

#define D3DVS_X_Y 65536

#define D3DVS_X_Z 131072

#define D3DSI_COISSUE 1073741824

#define D3DVSD_TOKENTYPESHIFT 29

#define D3DVSD_CONSTRSSHIFT 16

#define D3DVSD_EXTCOUNTSHIFT 24

#define D3DVS_X_W 196608

#define D3DVSD_DATALOADTYPESHIFT 28

#define D3DVS_W_Y 4194304

#define D3DVS_W_Z 8388608

#define D3DTA_TEMP 5

#define D3DVSD_CONSTRSMASK 536805376

#define D3DSP_SRCMOD_MASK 251658240

#define D3DVSD_VERTEXREGMASK 31

#define D3DVS_W_W 12582912

#define D3DVS_W_X 0

#define D3DLOCK_NOOVERWRITE 4096

#define D3DVSD_STREAMNUMBERMASK 15

#define D3DTS_WORLD2 258

#define D3DTSS_TCI_CAMERASPACEPOSITION 131072

#define D3DTS_WORLD1 257

#define D3DPRESENT_RATE_DEFAULT 0

#define D3DVS_ADDRESSMODE_SHIFT 13

#define D3DTS_WORLD3 259

#define D3DPRESENT_RATE_UNLIMITED 2147483647

#define D3DVSDE_NORMAL2 16

#define D3DCLEAR_STENCIL 4

#define D3DFVF_NORMAL 16

#define D3DVSD_DATATYPESHIFT 16

#define D3DFVF_POSITION_MASK 14

#define D3DVSD_CONSTADDRESSMASK 127

#define D3DCLEAR_ZBUFFER 2

#define D3DCS_BACK 32

#define D3DTA_CURRENT 1

#define D3DSI_COMMENTSIZE_MASK 2147418112

#define D3DCOLORWRITEENABLE_BLUE 4

#define D3DUSAGE_POINTS 64

#define D3DLOCK_NOSYSLOCK 2048

#define D3DUSAGE_RENDERTARGET 1

#define D3DSI_COMMENTSIZE_SHIFT 16

#define D3DVSDT_D3DCOLOR 4

#define D3DCOLORWRITEENABLE_ALPHA 8

#define D3DLOCK_NO_DIRTY_UPDATE 32768

#define D3DTA_SPECULAR 4

#define D3DVSD_DATALOADTYPEMASK 268435456

#define D3DFVF_TEX3 768

#define D3DFVF_TEX4 1024

#define D3DFVF_TEX1 256

#define D3DFVF_TEX2 512

#define D3DFVF_TEX0 0

#define D3DVSD_VERTEXREGINMASK 15728640

#define D3DFVF_TEX7 1792

#define D3DFVF_TEX8 2048

#define D3DVSD_VERTEXREGINSHIFT 20

#define D3DFVF_TEX5 1280

#define D3DFVF_TEX6 1536

#define D3DVSD_TOKENTYPEMASK 3758096384

#define D3DSP_REPLICATEALPHA 16711680

#define D3DUSAGE_DYNAMIC 512

#define D3DVSD_CONSTCOUNTMASK 503316480

#define D3DPV_DONOTCOPYDATA 1

#define D3DTSS_TCI_PASSTHRU 0

#define D3DVSDE_BLENDINDICES 2

#define D3DFVF_RESERVED2 57344

#define D3DCS_RIGHT 2

#define D3DFVF_RESERVED0 1

#define D3DVSDE_NORMAL 3

#define D3DSP_WRITEMASK_0 65536

#define D3DSP_WRITEMASK_1 131072

#define D3DSP_WRITEMASK_2 262144

#define D3DSP_WRITEMASK_3 524288

#define D3DVS_Z_W 3145728

#define D3DVS_Z_X 0

#define D3DVS_Z_Y 1048576

#define D3DVS_Z_Z 2097152

#define D3DSP_WRITEMASK_ALL 983040

#define D3DTA_ALPHAREPLICATE 32

#define D3DUSAGE_NPATCHES 256

#define D3DVSDE_DIFFUSE 5

#define D3DVS_NOSWIZZLE 14942208

#define D3DSI_OPCODE_MASK 65535

#define D3DVSD_SKIPCOUNTMASK 983040

#define D3DVSDE_BLENDWEIGHT 1

#define D3DSP_SRCMOD_SHIFT 24

#define D3DVS_Y_W 786432

#define D3DVS_Y_X 0

#define D3DVS_Y_Y 262144

#define D3DVS_Y_Z 524288

#define D3DWRAP_U 1

#define D3DWRAP_W 4

#define D3DWRAP_V 2

#define D3DSP_DSTMOD_SHIFT 20

#define D3DFVF_LASTBETA_UBYTE4 4096

#define D3DUSAGE_DEPTHSTENCIL 2

#define D3DVSDE_POSITION 0

#define D3DUSAGE_WRITEONLY 8

#define D3DVS_SWIZZLE_SHIFT 16

#define D3DCS_FRONT 16

#define D3DFVF_SPECULAR 128

#define D3DVSDT_UBYTE4 5

#define D3DVSD_EXTCOUNTMASK 520093696

#define D3DPRESENTFLAG_LOCKABLE_BACKBUFFER 1

#define D3DSP_REGNUM_MASK 4095

#define D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR 196608

#define D3DVSD_CONSTCOUNTSHIFT 25

#define D3DUSAGE_RTPATCHES 128

#define D3DTA_DIFFUSE 0

#define D3DVSD_DATATYPEMASK 983040

#define D3DSP_DSTSHIFT_MASK 251658240

#define D3DFVF_TEXCOUNT_SHIFT 8

#define MAX_DEVICE_IDENTIFIER_STRING 512

#define D3DVSD_SKIPCOUNTSHIFT 16

#define D3DFVF_TEXCOUNT_MASK 3840

#define D3DCOLORWRITEENABLE_GREEN 2

#define D3DFVF_TEXTUREFORMAT4 2

#define D3DVSD_VERTEXREGSHIFT 0

#define D3DFVF_TEXTUREFORMAT2 0

#define D3DFVF_TEXTUREFORMAT3 1

#define D3DFVF_TEXTUREFORMAT1 3

#define D3DVSDE_TEXCOORD7 14

#define D3DVSDE_TEXCOORD6 13

#define D3DLOCK_DISCARD 8192

#define D3DVSDE_TEXCOORD3 10

#define D3DVSDE_TEXCOORD2 9

#define D3DVSDE_TEXCOORD5 12

#define D3DVSDE_TEXCOORD4 11

#define D3DDP_MAXTEXCOORD 8

#define D3DVSDE_TEXCOORD1 8

#define D3DVSDE_TEXCOORD0 7

#define D3DVSDT_SHORT4 7

#define D3DSP_REGTYPE_SHIFT 28

#define D3DVSDT_SHORT2 6

#define D3DCLEAR_TARGET 1

#define D3DFVF_XYZRHW 4

#define D3DTA_SELECTMASK 15

#define D3DVS_SWIZZLE_MASK 16711680

#define D3DTA_TFACTOR 3

#define D3DTSS_TCI_CAMERASPACENORMAL 65536

#define D3DVSD_STREAMTESSSHIFT 28

#define D3DTS_WORLD 256

#define D3DCOLORWRITEENABLE_RED 1

#define D3DSP_DSTMOD_MASK 15728640

#define D3DFVF_XYZ 2

#define D3DFVF_XYZB4 12

#define D3DFVF_XYZB3 10

#define D3DFVF_XYZB5 14

#define D3DCS_TOP 4

#define D3DFVF_XYZB2 8

#define D3DFVF_XYZB1 6

typedef struct tagVS_FIXEDFILEINFO tagVS_FIXEDFILEINFO, *PtagVS_FIXEDFILEINFO;

struct tagVS_FIXEDFILEINFO {
    DWORD dwSignature;
    DWORD dwStrucVersion;
    DWORD dwFileVersionMS;
    DWORD dwFileVersionLS;
    DWORD dwProductVersionMS;
    DWORD dwProductVersionLS;
    DWORD dwFileFlagsMask;
    DWORD dwFileFlags;
    DWORD dwFileOS;
    DWORD dwFileType;
    DWORD dwFileSubtype;
    DWORD dwFileDateMS;
    DWORD dwFileDateLS;
};

#define VOS_OS232_PM32 196611

#define VFT2_DRV_VERSIONED_PRINTER 12

#define VIF_DIFFLANG 8

#define VFF_BUFFTOOSMALL 4

#define VIF_CANNOTRENAME 8192

#define VOS_OS216 131072

#define VIFF_FORCEINSTALL 1

#define VOS_NT 262144

#define VFT2_FONT_VECTOR 2

#define VS_FF_DEBUG 1

#define VFT2_DRV_COMM 10

#define VOS_NT_WINDOWS32 262148

#define VIFF_DONTDELETEOLD 2

#define VIF_SHARINGVIOLATION 1024

#define VOS_UNKNOWN 0

#define VOS__WINDOWS32 4

#define VFT_FONT 4

#define VIF_FILEINUSE 128

#define VS_FF_PRIVATEBUILD 8

#define VFFF_ISSHAREDFILE 1

#define VIF_BUFFTOOSMALL 262144

#define VIF_OUTOFSPACE 256

#define VIF_WRITEPROT 64

#define VIF_DIFFCODEPG 16

#define VFT2_DRV_INSTALLABLE 8

#define VFT2_FONT_RASTER 1

#define VS_VERSION_INFO 1

#define VOS_OS232 196608

#define VIF_MISMATCH 2

#define VIF_OUTOFMEMORY 32768

#define VS_USER_DEFINED 100

#define VIF_TEMPFILE 1

#define VOS__BASE 0

#define VIF_CANNOTCREATE 2048

#define VOS__PM16 2

#define VFF_FILEINUSE 2

#define VOS_DOS 65536

#define VFT_DRV 3

#define VS_FF_INFOINFERRED 16

#define VIF_CANNOTDELETECUR 16384

#define VFT2_DRV_INPUTMETHOD 11

#define VS_FFI_FILEFLAGSMASK 63

#define VS_FFI_STRUCVERSION 65536

#define VIF_CANNOTREADSRC 65536

#define VFF_CURNEDEST 1

#define VIF_SRCOLD 4

#define VIF_ACCESSVIOLATION 512

#define VFT2_FONT_TRUETYPE 3

#define VIF_CANNOTLOADCABINET 1048576

#define VFT2_DRV_NETWORK 6

#define VFT_STATIC_LIB 7

#define VOS__PM32 3

#define VIF_CANNOTREADDST 131072

#define VOS_DOS_WINDOWS32 65540

#define VIF_CANNOTLOADLZ32 524288

#define VS_FF_PRERELEASE 2

#define VFT_DLL 2

#define VFT_VXD 5

#define VS_FF_PATCHED 4

#define VS_FF_SPECIALBUILD 32

#define VFT2_DRV_SOUND 9

#define VFT2_DRV_LANGUAGE 3

#define VOS_OS216_PM16 131074

#define VFT_UNKNOWN 0

#define VS_FFI_SIGNATURE 4277077181

#define VFT2_DRV_MOUSE 5

#define VIF_CANNOTDELETE 4096

#define VIF_DIFFTYPE 32

#define VFT2_DRV_KEYBOARD 2

#define VOS_DOS_WINDOWS16 65537

#define VOS__WINDOWS16 1

#define VFT2_UNKNOWN 0

#define VS_FILE_INFO 16

#define VFT2_DRV_DISPLAY 4

#define VFT2_DRV_SYSTEM 7

#define VFT_APP 1

#define VFT2_DRV_PRINTER 1

typedef struct _NOTIFYICONDATAW _NOTIFYICONDATAW, *P_NOTIFYICONDATAW;

struct _NOTIFYICONDATAW {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    WCHAR szTip[64];
};

typedef struct _SHFILEOPSTRUCTA _SHFILEOPSTRUCTA, *P_SHFILEOPSTRUCTA;

typedef struct _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCTA;

typedef WORD FILEOP_FLAGS;

struct _SHFILEOPSTRUCTA {
    HWND hwnd;
    UINT wFunc;
    LPCSTR pFrom;
    LPCSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCSTR lpszProgressTitle;
};

typedef struct _SHFILEINFOA _SHFILEINFOA, *P_SHFILEINFOA;

struct _SHFILEINFOA {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    CHAR szDisplayName[260];
    CHAR szTypeName[80];
};

typedef struct _DRAGINFOW _DRAGINFOW, *P_DRAGINFOW;

struct _DRAGINFOW {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPWSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _SHFILEOPSTRUCTW _SHFILEOPSTRUCTW, *P_SHFILEOPSTRUCTW;

struct _SHFILEOPSTRUCTW {
    HWND hwnd;
    UINT wFunc;
    LPCWSTR pFrom;
    LPCWSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCWSTR lpszProgressTitle;
};

typedef struct _SHNAMEMAPPINGA _SHNAMEMAPPINGA, *P_SHNAMEMAPPINGA;

typedef struct _SHNAMEMAPPINGA SHNAMEMAPPINGA;

struct _SHNAMEMAPPINGA {
    LPSTR pszOldPath;
    LPSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _NOTIFYICONDATAA _NOTIFYICONDATAA, *P_NOTIFYICONDATAA;

struct _NOTIFYICONDATAA {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    CHAR szTip[64];
};

typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCTA;

typedef struct _SHELLEXECUTEINFOA _SHELLEXECUTEINFOA, *P_SHELLEXECUTEINFOA;

typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;

typedef SHELLEXECUTEINFOA SHELLEXECUTEINFO;

typedef struct HKEY__ HKEY__, *PHKEY__;

typedef struct HKEY__ *HKEY;

typedef union _union_859 _union_859, *P_union_859;

struct HKEY__ {
    int unused;
};

union _union_859 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

struct _SHELLEXECUTEINFOA {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpFile;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    LPVOID lpIDList;
    LPCSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_859 field13_0x34;
    HANDLE hProcess;
};

typedef struct _SHCREATEPROCESSINFOW _SHCREATEPROCESSINFOW, *P_SHCREATEPROCESSINFOW;

typedef struct _SHCREATEPROCESSINFOW SHCREATEPROCESSINFOW;

typedef struct _SECURITY_ATTRIBUTES _SECURITY_ATTRIBUTES, *P_SECURITY_ATTRIBUTES;

typedef struct _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

typedef struct _STARTUPINFOW _STARTUPINFOW, *P_STARTUPINFOW;

typedef struct _STARTUPINFOW *LPSTARTUPINFOW;

typedef struct _PROCESS_INFORMATION _PROCESS_INFORMATION, *P_PROCESS_INFORMATION;

typedef struct _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

struct _SHCREATEPROCESSINFOW {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCWSTR pszFile;
    LPCWSTR pszParameters;
    LPCWSTR pszCurrentDirectory;
    HANDLE hUserToken;
    LPSECURITY_ATTRIBUTES lpProcessAttributes;
    LPSECURITY_ATTRIBUTES lpThreadAttributes;
    BOOL bInheritHandles;
    DWORD dwCreationFlags;
    LPSTARTUPINFOW lpStartupInfo;
    LPPROCESS_INFORMATION lpProcessInformation;
};

struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
};

struct _STARTUPINFOW {
    DWORD cb;
    LPWSTR lpReserved;
    LPWSTR lpDesktop;
    LPWSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

struct _PROCESS_INFORMATION {
    HANDLE hProcess;
    HANDLE hThread;
    DWORD dwProcessId;
    DWORD dwThreadId;
};

typedef struct _SHQUERYRBINFO _SHQUERYRBINFO, *P_SHQUERYRBINFO;

struct _SHQUERYRBINFO {
    DWORD cbSize;
    longlong i64Size;
    longlong i64NumItems;
};

typedef struct _SHFILEINFOW _SHFILEINFOW, *P_SHFILEINFOW;

struct _SHFILEINFOW {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    WCHAR szDisplayName[260];
    WCHAR szTypeName[80];
};

typedef struct HDROP__ HDROP__, *PHDROP__;

typedef struct HDROP__ *HDROP;

struct HDROP__ {
    int unused;
};

typedef struct _SHELLEXECUTEINFOW _SHELLEXECUTEINFOW, *P_SHELLEXECUTEINFOW;

typedef struct _SHELLEXECUTEINFOW SHELLEXECUTEINFOW;

typedef union _union_861 _union_861, *P_union_861;

union _union_861 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

struct _SHELLEXECUTEINFOW {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCWSTR lpVerb;
    LPCWSTR lpFile;
    LPCWSTR lpParameters;
    LPCWSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    LPVOID lpIDList;
    LPCWSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_861 field13_0x34;
    HANDLE hProcess;
};

typedef struct _SHFILEOPSTRUCTW SHFILEOPSTRUCTW;

typedef struct _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;

typedef struct _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFOA;

typedef LPSHELLEXECUTEINFOA LPSHELLEXECUTEINFO;

typedef struct _SHFILEINFOW SHFILEINFOW;

typedef LPSHFILEOPSTRUCTA LPSHFILEOPSTRUCT;

typedef struct _SHNAMEMAPPINGW _SHNAMEMAPPINGW, *P_SHNAMEMAPPINGW;

struct _SHNAMEMAPPINGW {
    LPWSTR pszOldPath;
    LPWSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _SHFILEINFOA SHFILEINFOA;

typedef struct _DRAGINFOW *LPDRAGINFOW;

typedef union _union_863 _union_863, *P_union_863;

union _union_863 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

typedef struct _DRAGINFOA _DRAGINFOA, *P_DRAGINFOA;

typedef struct _DRAGINFOA DRAGINFOA;

typedef DRAGINFOA DRAGINFO;

struct _DRAGINFOA {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _SHQUERYRBINFO SHQUERYRBINFO;

typedef struct _SHNAMEMAPPINGW SHNAMEMAPPINGW;

typedef struct _DRAGINFOA *LPDRAGINFOA;

typedef struct _SHNAMEMAPPINGA *LPSHNAMEMAPPINGA;

typedef LPSHNAMEMAPPINGA LPSHNAMEMAPPING;

typedef struct _AppBarData _AppBarData, *P_AppBarData;

typedef struct _AppBarData *PAPPBARDATA;

struct _AppBarData {
    DWORD cbSize;
    HWND hWnd;
    UINT uCallbackMessage;
    UINT uEdge;
    RECT rc;
    LPARAM lParam;
};

typedef struct _SHCREATEPROCESSINFOW *PSHCREATEPROCESSINFOW;

typedef struct _NOTIFYICONDATAA *PNOTIFYICONDATAA;

typedef SHNAMEMAPPINGA SHNAMEMAPPING;

typedef struct _NOTIFYICONDATAW NOTIFYICONDATAW;

typedef struct _NOTIFYICONDATAW *PNOTIFYICONDATAW;

typedef SHFILEINFOA SHFILEINFO;

typedef PNOTIFYICONDATAA PNOTIFYICONDATA;

typedef struct _DRAGINFOW DRAGINFOW;

typedef struct _AppBarData APPBARDATA;

typedef struct _NOTIFYICONDATAA NOTIFYICONDATAA;

typedef struct _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;

typedef LPDRAGINFOA LPDRAGINFO;

typedef struct _SHNAMEMAPPINGW *LPSHNAMEMAPPINGW;

typedef SHFILEOPSTRUCTA SHFILEOPSTRUCT;

typedef WORD PRINTEROP_FLAGS;

typedef NOTIFYICONDATAA NOTIFYICONDATA;

typedef struct _SHQUERYRBINFO *LPSHQUERYRBINFO;

#define SHGNLI_PREFIXNAME 2

#define SEE_MASK_HMONITOR 2097152

#define ABM_REMOVE 1

#define ABM_GETTASKBARPOS 5

#define ABE_RIGHT 2

#define SEE_MASK_FLAG_NO_UI 1024

#define SHERB_NOPROGRESSUI 2

#define SHGFI_SYSICONINDEX 16384

#define SHGFI_ICONLOCATION 4096

#define SEE_MASK_CLASSKEY 3

#define FO_MOVE 1

#define SE_ERR_PNF 3

#define FOF_SIMPLEPROGRESS 256

#define SEE_MASK_INVOKEIDLIST 12

#define SE_ERR_DDEFAIL 29

#define SEE_MASK_IDLIST 4

#define SE_ERR_SHARE 26

#define SEE_MASK_HOTKEY 32

#define SHGFI_SHELLICONSIZE 4

#define FOF_RENAMEONCOLLISION 8

#define SEE_MASK_UNICODE 16384

#define FOF_CONFIRMMOUSE 2

#define PO_RENAME 20

#define SHERB_NOCONFIRMATION 1

#define SHGFI_TYPENAME 1024

#define SE_ERR_ACCESSDENIED 5

#define SHGFI_LINKOVERLAY 32768

#define FOF_ALLOWUNDO 64

#define ABM_WINDOWPOSCHANGED 9

#define SHGNLI_NOUNIQUE 4

#define SHGNLI_PIDL 1

#define ABN_FULLSCREENAPP 2

#define SHGFI_SMALLICON 1

#define ABS_AUTOHIDE 1

#define SE_ERR_OOM 8

#define SE_ERR_ASSOCINCOMPLETE 27

#define SE_ERR_FNF 2

#define ABE_BOTTOM 3

#define ABM_QUERYPOS 2

#define ABN_STATECHANGE 0

#define SEE_MASK_ICON 16

#define ABM_SETAUTOHIDEBAR 8

#define SHGFI_LARGEICON 0

#define ABE_LEFT 0

#define ABM_SETSTATE 10

#define PO_REN_PORT 52

#define PO_PORTCHANGE 32

#define FOF_NOERRORUI 1024

#define NIM_MODIFY 1

#define PRINTACTION_NETINSTALL 2

#define ABS_ALWAYSONTOP 2

#define SEE_MASK_DOENVSUBST 512

#define SEE_MASK_CONNECTNETDRV 128

#define SE_ERR_DDEBUSY 30

#define ABM_GETAUTOHIDEBAR 7

#define SEE_MASK_CLASSNAME 1

#define PRINTACTION_OPENNETPRN 5

#define PRINTACTION_OPEN 0

#define NIM_DELETE 2

#define FO_RENAME 4

#define ABM_NEW 0

#define ABM_ACTIVATE 6

#define SEE_MASK_FLAG_DDEWAIT 256

#define SHGFI_SELECTED 65536

#define NIM_ADD 0

#define ABE_TOP 1

#define FOF_FILESONLY 128

#define SHGFI_OPENICON 2

#define SHGFI_ATTRIBUTES 2048

#define FO_DELETE 3

#define SEE_MASK_ASYNCOK 1048576

#define SHGFI_ICON 256

#define FOF_NOCOPYSECURITYATTRIBS 2048

#define SE_ERR_DDETIMEOUT 28

#define ABN_POSCHANGED 1

#define NIF_TIP 4

#define SEE_MASK_NOCLOSEPROCESS 64

#define SHGFI_USEFILEATTRIBUTES 16

#define PRINTACTION_TESTPAGE 4

#define SE_ERR_DLLNOTFOUND 32

#define FO_COPY 2

#define SHERB_NOSOUND 4

#define SHGFI_PIDL 8

#define FOF_NORECURSION 4096

#define ABM_SETPOS 3

#define FOF_NOCONFIRMATION 16

#define ABN_WINDOWARRANGE 3

#define PO_DELETE 19

#define FOF_MULTIDESTFILES 1

#define NIF_MESSAGE 1

#define NIF_ICON 2

#define SE_ERR_NOASSOC 31

#define SHGFI_DISPLAYNAME 512

#define FOF_SILENT 4

#define ABM_GETSTATE 4

#define PRINTACTION_PROPERTIES 1

#define SHGFI_EXETYPE 8192

#define SHGFI_ATTR_SPECIFIED 131072

#define SEE_MASK_NO_CONSOLE 32768

#define FOF_WANTMAPPINGHANDLE 32

#define PRINTACTION_NETINSTALLLINK 3

#define FOF_NOCONFIRMMKDIR 512

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W tagRPC_CALL_ATTRIBUTES_V1_W, *PtagRPC_CALL_ATTRIBUTES_V1_W;

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W RPC_CALL_ATTRIBUTES_V1_W;

struct tagRPC_CALL_ATTRIBUTES_V1_W {
    uint Version;
    ulong Flags;
    ulong ServerPrincipalNameBufferLength;
    ushort *ServerPrincipalName;
    ulong ClientPrincipalNameBufferLength;
    ushort *ClientPrincipalName;
    ulong AuthenticationLevel;
    ulong AuthenticationService;
    BOOL NullSession;
};

typedef enum _RPC_NOTIFICATION_TYPES {
    RpcNotificationTypeNone=0,
    RpcNotificationTypeEvent=1,
    RpcNotificationTypeApc=2,
    RpcNotificationTypeIoc=3,
    RpcNotificationTypeHwnd=4,
    RpcNotificationTypeCallback=5
} _RPC_NOTIFICATION_TYPES;

typedef enum _RPC_NOTIFICATION_TYPES RPC_NOTIFICATION_TYPES;

typedef struct _struct_839 _struct_839, *P_struct_839;

typedef struct _OVERLAPPED _OVERLAPPED, *P_OVERLAPPED;

typedef struct _OVERLAPPED *LPOVERLAPPED;

typedef union _union_290 _union_290, *P_union_290;

typedef struct _struct_291 _struct_291, *P_struct_291;

struct _struct_291 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_290 {
    struct _struct_291 field0;
    PVOID Pointer;
};

struct _struct_839 {
    HANDLE hIOPort;
    DWORD dwNumberOfBytesTransferred;
    DWORD_PTR dwCompletionKey;
    LPOVERLAPPED lpOverlapped;
};

struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union _union_290 field2_0x8;
    HANDLE hEvent;
};

typedef struct tagBinaryParam tagBinaryParam, *PtagBinaryParam;

typedef struct tagBinaryParam BinaryParam;

struct tagBinaryParam {
    void *Buffer;
    short Size;
};

typedef struct _struct_838 _struct_838, *P_struct_838;

typedef struct _RPC_ASYNC_STATE _RPC_ASYNC_STATE, *P_RPC_ASYNC_STATE;

typedef enum _RPC_ASYNC_EVENT {
    RpcCallComplete=0,
    RpcSendComplete=1,
    RpcReceiveComplete=2
} _RPC_ASYNC_EVENT;

typedef enum _RPC_ASYNC_EVENT RPC_ASYNC_EVENT;

typedef void (RPCNOTIFICATION_ROUTINE)(struct _RPC_ASYNC_STATE *, void *, RPC_ASYNC_EVENT);

typedef RPCNOTIFICATION_ROUTINE *PFN_RPCNOTIFICATION_ROUTINE;

typedef union _union_837 _union_837, *P_union_837;

typedef struct _struct_840.conflict _struct_840.conflict, *P_struct_840.conflict;

struct _struct_838 {
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
    HANDLE hThread;
};

struct _struct_840.conflict {
    HWND hWnd;
    UINT Msg;
};

union _union_837 {
    struct _struct_838 APC;
    struct _struct_839 IOC;
    struct _struct_840.conflict HWND;
    HANDLE hEvent;
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
};

struct _RPC_ASYNC_STATE {
    uint Size;
    ulong Signature;
    long Lock;
    ulong Flags;
    void *StubInfo;
    void *UserInfo;
    void *RuntimeInfo;
    RPC_ASYNC_EVENT Event;
    RPC_NOTIFICATION_TYPES NotificationType;
    union _union_837 u;
    LONG_PTR Reserved[4];
};

typedef struct tagRPC_EXTENDED_ERROR_INFO tagRPC_EXTENDED_ERROR_INFO, *PtagRPC_EXTENDED_ERROR_INFO;

typedef union _union_845.conflict _union_845.conflict, *P_union_845.conflict;

typedef struct tagRPC_EE_INFO_PARAM tagRPC_EE_INFO_PARAM, *PtagRPC_EE_INFO_PARAM;

typedef struct tagRPC_EE_INFO_PARAM RPC_EE_INFO_PARAM;

typedef enum tagExtendedErrorParamTypes {
    eeptAnsiString=1,
    eeptUnicodeString=2,
    eeptLongVal=3,
    eeptShortVal=4,
    eeptPointerVal=5,
    eeptNone=6,
    eeptBinary=7
} tagExtendedErrorParamTypes;

typedef enum tagExtendedErrorParamTypes ExtendedErrorParamTypes;

typedef union _union_843 _union_843, *P_union_843;

union _union_845.conflict {
    SYSTEMTIME SystemTime;
    FILETIME FileTime;
};

union _union_843 {
    LPSTR AnsiString;
    LPWSTR UnicodeString;
    long LVal;
    short SVal;
    ULONGLONG PVal;
    BinaryParam BVal;
};

struct tagRPC_EE_INFO_PARAM {
    ExtendedErrorParamTypes ParameterType;
    union _union_843 u;
};

struct tagRPC_EXTENDED_ERROR_INFO {
    ULONG Version;
    LPWSTR ComputerName;
    ULONG ProcessID;
    union _union_845.conflict u;
    ULONG GeneratingComponent;
    ULONG Status;
    USHORT DetectionLocation;
    USHORT Flags;
    int NumberOfParameters;
    RPC_EE_INFO_PARAM Parameters[4];
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A tagRPC_CALL_ATTRIBUTES_V1_A, *PtagRPC_CALL_ATTRIBUTES_V1_A;

struct tagRPC_CALL_ATTRIBUTES_V1_A {
    uint Version;
    ulong Flags;
    ulong ServerPrincipalNameBufferLength;
    uchar *ServerPrincipalName;
    ulong ClientPrincipalNameBufferLength;
    uchar *ClientPrincipalName;
    ulong AuthenticationLevel;
    ulong AuthenticationService;
    BOOL NullSession;
};

typedef struct tagRPC_ERROR_ENUM_HANDLE tagRPC_ERROR_ENUM_HANDLE, *PtagRPC_ERROR_ENUM_HANDLE;

typedef struct tagRPC_ERROR_ENUM_HANDLE RPC_ERROR_ENUM_HANDLE;

struct tagRPC_ERROR_ENUM_HANDLE {
    ULONG Signature;
    void *CurrentPos;
    void *Head;
};

typedef union _union_845 _union_845, *P_union_845;

union _union_845 {
    LPSTR AnsiString;
    LPWSTR UnicodeString;
    long LVal;
    short SVal;
    ULONGLONG PVal;
    BinaryParam BVal;
};

typedef struct tagRPC_EXTENDED_ERROR_INFO RPC_EXTENDED_ERROR_INFO;

typedef union _union_847 _union_847, *P_union_847;

union _union_847 {
    SYSTEMTIME SystemTime;
    FILETIME FileTime;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES_V1_A;

typedef struct _struct_842 _struct_842, *P_struct_842;

struct _struct_842 {
    HWND hWnd;
    UINT Msg;
};

typedef struct _struct_841 _struct_841, *P_struct_841;

struct _struct_841 {
    HANDLE hIOPort;
    DWORD dwNumberOfBytesTransferred;
    DWORD_PTR dwCompletionKey;
    LPOVERLAPPED lpOverlapped;
};

typedef struct _struct_840 _struct_840, *P_struct_840;

struct _struct_840 {
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
    HANDLE hThread;
};

typedef struct _RPC_ASYNC_STATE *PRPC_ASYNC_STATE;

typedef RPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES;

typedef union _union_839 _union_839, *P_union_839;

union _union_839 {
    struct _struct_840 APC;
    struct _struct_841 IOC;
    struct _struct_842 HWND;
    HANDLE hEvent;
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
};

typedef struct _RPC_ASYNC_STATE RPC_ASYNC_STATE;

#define EEInfoNextRecordsMissing 2

#define RPC_C_INFINITE_TIMEOUT 4294967295

#define EEInfoUseFileTime 4

#define RPC_QUERY_SERVER_PRINCIPAL_NAME 2

#define RPC_EEINFO_VERSION 1

#define RPC_QUERY_CLIENT_PRINCIPAL_NAME 4

#define RPC_CALL_ATTRIBUTES_VERSION 1

#define MaxNumberOfEEInfoParams 4

#define EEInfoGCCOM 11

#define RPC_C_NOTIFY_ON_SEND_COMPLETE 1

#define EEInfoPreviousRecordsMissing 1

#define FLT_ROUNDS 1

#define SW_STACKOVERFLOW 512

#define _MCW_DN 50331648

#define RC_DOWN 256

#define _FPE_DENORMAL 130

#define _FPCLASS_SNAN 1

#define _EM_INVALID 16

#define PC_64 0

#define CW_DEFAULT 589855

#define _SW_STACKOVERFLOW 512

#define FPE_UNDERFLOW 133

#define _IC_AFFINE 262144

#define _FPCLASS_PINF 512

#define FLT_MIN_EXP -125

#define _DBL_ROUNDS 1

#define _DBL_RADIX 2

#define _EM_UNDERFLOW 2

#define MCW_EM 524319

#define _PC_64 0

#define SW_STACKUNDERFLOW 1024

#define _RC_DOWN 256

#define _SW_OVERFLOW 4

#define FLT_GUARD 0

#define FPE_OVERFLOW 132

#define _MCW_EM 524319

#define DBL_MIN_10_EXP -307

#define EM_DENORMAL 524288

#define _SW_DENORMAL 524288

#define _FPE_EXPLICITGEN 140

#define DBL_MAX_EXP 1024

#define EM_ZERODIVIDE 8

#define FLT_MAX_EXP 128

#define SW_DENORMAL 524288

#define RC_CHOP 768

#define _FPCLASS_NN 8

#define _IC_PROJECTIVE 0

#define _FPCLASS_ND 16

#define _DN_SAVE_OPERANDS_FLUSH_RESULTS 50331648

#define RC_UP 512

#define _LDBL_ROUNDS 1

#define _FPCLASS_NZ 32

#define _MCW_PC 196608

#define _PC_53 65536

#define _FPE_STACKOVERFLOW 138

#define FLT_MANT_DIG 24

#define EM_UNDERFLOW 2

#define _PC_24 131072

#define _EM_INEXACT 1

#define _FPE_UNDERFLOW 133

#define _RC_NEAR 0

#define DBL_MAX_10_EXP 308

#define IC_AFFINE 262144

#define DBL_MANT_DIG 53

#define _FPCLASS_QNAN 2

#define MCW_IC 262144

#define LDBL_MIN_10_EXP -307

#define FPE_INVALID 129

#define FPE_INEXACT 134

#define _FPE_ZERODIVIDE 131

#define _SW_UNEMULATED 64

#define _MCW_RC 768

#define MCW_PC 196608

#define FPE_DENORMAL 130

#define FLT_MIN_10_EXP -37

#define _FPCLASS_NINF 4

#define DBL_ROUNDS 1

#define _SW_ZERODIVIDE 8

#define FLT_DIG 6

#define _FPE_UNEMULATED 135

#define _SW_INEXACT 1

#define _DN_FLUSH 16777216

#define _DN_FLUSH_OPERANDS_SAVE_RESULTS 33554432

#define _EM_DENORMAL 524288

#define _SW_INVALID 16

#define SW_OVERFLOW 4

#define _LDBL_RADIX 2

#define FPE_SQRTNEG 136

#define LDBL_MANT_DIG 53

#define FPE_UNEMULATED 135

#define EM_OVERFLOW 4

#define EM_INVALID 16

#define FPE_STACKUNDERFLOW 139

#define _FPCLASS_PN 256

#define _SW_STACKUNDERFLOW 1024

#define _FPCLASS_PD 128

#define _FPE_STACKUNDERFLOW 139

#define LDBL_MIN_EXP -1021

#define FPE_ZERODIVIDE 131

#define FLT_NORMALIZE 0

#define EM_INEXACT 1

#define FLT_MAX_10_EXP 38

#define _FPCLASS_PZ 64

#define FLT_RADIX 2

#define SW_ZERODIVIDE 8

#define _SW_SQRTNEG 128

#define LDBL_RADIX 2

#define _MCW_IC 262144

#define FPE_STACKOVERFLOW 138

#define DBL_DIG 15

#define LDBL_MAX_EXP 1024

#define RC_NEAR 0

#define LDBL_DIG 15

#define _FPE_INVALID 129

#define _RC_UP 512

#define _CW_DEFAULT 589855

#define LDBL_MAX_10_EXP 308

#define DBL_RADIX 2

#define PC_24 131072

#define SW_UNEMULATED 64

#define _EM_OVERFLOW 4

#define SW_UNDERFLOW 2

#define _FPE_OVERFLOW 132

#define _FPE_INEXACT 134

#define MCW_RC 768

#define _EM_ZERODIVIDE 8

#define SW_INVALID 16

#define _DN_SAVE 0

#define PC_53 65536

#define SW_SQRTNEG 128

#define DBL_MIN_EXP -1021

#define IC_PROJECTIVE 0

#define SW_INEXACT 1

#define _FPE_SQRTNEG 136

#define FPE_EXPLICITGEN 140

#define _RC_CHOP 768

#define LDBL_ROUNDS 1

#define _SW_UNDERFLOW 2

typedef struct tagBSTRBLOB tagBSTRBLOB, *PtagBSTRBLOB;

typedef struct tagBSTRBLOB BSTRBLOB;

struct tagBSTRBLOB {
    ULONG cbSize;
    BYTE *pData;
};

typedef BSTR *LPBSTR;

typedef struct tagRemHMETAFILEPICT tagRemHMETAFILEPICT, *PtagRemHMETAFILEPICT;

typedef struct tagRemHMETAFILEPICT RemHMETAFILEPICT;

struct tagRemHMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    ulong cbData;
    byte data[1];
};

typedef DECIMAL *LPDECIMAL;

typedef struct tagQUERYCONTEXT tagQUERYCONTEXT, *PtagQUERYCONTEXT;

typedef struct tagCSPLATFORM tagCSPLATFORM, *PtagCSPLATFORM;

typedef struct tagCSPLATFORM CSPLATFORM;

struct tagCSPLATFORM {
    DWORD dwPlatformId;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
    DWORD dwProcessorArch;
};

struct tagQUERYCONTEXT {
    DWORD dwContext;
    CSPLATFORM Platform;
    LCID Locale;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
};

typedef struct tagBLOB tagBLOB, *PtagBLOB;

struct tagBLOB {
    ULONG cbSize;
    BYTE *pBlobData;
};

typedef enum VARENUM {
    VT_EMPTY=0,
    VT_NULL=1,
    VT_I2=2,
    VT_I4=3,
    VT_R4=4,
    VT_R8=5,
    VT_CY=6,
    VT_DATE=7,
    VT_BSTR=8,
    VT_DISPATCH=9,
    VT_ERROR=10,
    VT_BOOL=11,
    VT_VARIANT=12,
    VT_UNKNOWN=13,
    VT_DECIMAL=14,
    VT_I1=16,
    VT_UI1=17,
    VT_UI2=18,
    VT_UI4=19,
    VT_I8=20,
    VT_UI8=21,
    VT_INT=22,
    VT_UINT=23,
    VT_VOID=24,
    VT_HRESULT=25,
    VT_PTR=26,
    VT_SAFEARRAY=27,
    VT_CARRAY=28,
    VT_USERDEFINED=29,
    VT_LPSTR=30,
    VT_LPWSTR=31,
    VT_RECORD=36,
    VT_INT_PTR=37,
    VT_UINT_PTR=38,
    VT_FILETIME=64,
    VT_BLOB=65,
    VT_STREAM=66,
    VT_STORAGE=67,
    VT_STREAMED_OBJECT=68,
    VT_STORED_OBJECT=69,
    VT_BLOB_OBJECT=70,
    VT_CF=71,
    VT_CLSID=72,
    VT_VERSIONED_STREAM=73,
    VT_BSTR_BLOB=4095,
    VT_ILLEGALMASKED=4095,
    VT_TYPEMASK=4095,
    VT_VECTOR=4096,
    VT_ARRAY=8192,
    VT_BYREF=16384,
    VT_RESERVED=32768,
    VT_ILLEGAL=65535
} VARENUM;

typedef struct _userCLIPFORMAT _userCLIPFORMAT, *P_userCLIPFORMAT;

typedef struct _userCLIPFORMAT userCLIPFORMAT;

typedef union __MIDL_IWinTypes_0001 __MIDL_IWinTypes_0001, *P__MIDL_IWinTypes_0001;

union __MIDL_IWinTypes_0001 {
    DWORD dwValue;
    wchar_t *pwszName;
};

struct _userCLIPFORMAT {
    long fContext;
    union __MIDL_IWinTypes_0001 u;
};

typedef struct tagRemHBITMAP tagRemHBITMAP, *PtagRemHBITMAP;

struct tagRemHBITMAP {
    ulong cbData;
    byte data[1];
};

typedef FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB;

typedef struct _RemotableHandle _RemotableHandle, *P_RemotableHandle;

typedef struct _RemotableHandle RemotableHandle;

typedef RemotableHandle *wireHDC;

typedef union __MIDL_IWinTypes_0009 __MIDL_IWinTypes_0009, *P__MIDL_IWinTypes_0009;

union __MIDL_IWinTypes_0009 {
    long hInproc;
    long hRemote;
};

struct _RemotableHandle {
    long fContext;
    union __MIDL_IWinTypes_0009 u;
};

typedef struct _struct_1709 _struct_1709, *P_struct_1709;

struct _struct_1709 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

typedef struct _GDI_NONREMOTE _GDI_NONREMOTE, *P_GDI_NONREMOTE;

typedef struct _GDI_NONREMOTE GDI_NONREMOTE;

typedef union __MIDL_IWinTypes_0002 __MIDL_IWinTypes_0002, *P__MIDL_IWinTypes_0002;

typedef struct _DWORD_BLOB _DWORD_BLOB, *P_DWORD_BLOB;

typedef struct _DWORD_BLOB DWORD_BLOB;

union __MIDL_IWinTypes_0002 {
    long hInproc;
    DWORD_BLOB *hRemote;
};

struct _DWORD_BLOB {
    ulong clSize;
    ulong alData[1];
};

struct _GDI_NONREMOTE {
    long fContext;
    union __MIDL_IWinTypes_0002 u;
};

typedef enum tagMSHLFLAGS {
    MSHLFLAGS_NORMAL=0,
    MSHLFLAGS_TABLESTRONG=1,
    MSHLFLAGS_TABLEWEAK=2,
    MSHLFLAGS_NOPING=4,
    MSHLFLAGS_RESERVED1=8,
    MSHLFLAGS_RESERVED2=16,
    MSHLFLAGS_RESERVED3=32,
    MSHLFLAGS_RESERVED4=64
} tagMSHLFLAGS;

typedef struct _struct_1710 _struct_1710, *P_struct_1710;

struct _struct_1710 {
    GUID ObjectId;
    GUID PolicyId;
};

typedef struct tagCLIPDATA tagCLIPDATA, *PtagCLIPDATA;

struct tagCLIPDATA {
    ULONG cbSize;
    long ulClipFmt;
    BYTE *pClipData;
};

typedef CY *LPCY;

typedef enum tagSTGMOVE {
    STGMOVE_MOVE=0,
    STGMOVE_COPY=1,
    STGMOVE_SHALLOWCOPY=2
} tagSTGMOVE;

typedef enum tagSTGMOVE STGMOVE;

typedef RemotableHandle *wireHFONT;

typedef struct tagBLOB *LPBLOB;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 __MIDL___MIDL_itf_wtypes_0000_0001_0001, *P__MIDL___MIDL_itf_wtypes_0000_0001_0001;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 uCLSSPEC;

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0005 __MIDL___MIDL_itf_wtypes_0000_0001_0005, *P__MIDL___MIDL_itf_wtypes_0000_0001_0005;

union __MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    CLSID clsid;
    LPOLESTR pFileExt;
    LPOLESTR pMimeType;
    LPOLESTR pProgId;
    LPOLESTR pFileName;
    struct _struct_1709 ByName;
    struct _struct_1710 ByObjectId;
};

struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 {
    DWORD tyspec;
    union __MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
};

typedef struct tagRemHENHMETAFILE tagRemHENHMETAFILE, *PtagRemHENHMETAFILE;

typedef struct tagRemHENHMETAFILE RemHENHMETAFILE;

struct tagRemHENHMETAFILE {
    ulong cbData;
    byte data[1];
};

typedef RemotableHandle *wireHWND;

typedef RemotableHandle *wireHBRUSH;

typedef enum tagSTATFLAG {
    STATFLAG_DEFAULT=0,
    STATFLAG_NONAME=1,
    STATFLAG_NOOPEN=2
} tagSTATFLAG;

typedef RemotableHandle *wireHICON;

typedef BYTE_BLOB *UP_BYTE_BLOB;

typedef union _union_1276 _union_1276, *P_union_1276;

typedef struct _struct_1277 _struct_1277, *P_struct_1277;

struct _struct_1277 {
    BYTE scale;
    BYTE sign;
};

union _union_1276 {
    struct _struct_1277 field0;
    USHORT signscale;
};

typedef struct tagRemBRUSH tagRemBRUSH, *PtagRemBRUSH;

struct tagRemBRUSH {
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHPALETTE tagRemHPALETTE, *PtagRemHPALETTE;

struct tagRemHPALETTE {
    ulong cbData;
    byte data[1];
};

typedef union _union_1278 _union_1278, *P_union_1278;

typedef struct _struct_1279 _struct_1279, *P_struct_1279;

struct _struct_1279 {
    ULONG Lo32;
    ULONG Mid32;
};

union _union_1278 {
    struct _struct_1279 field0;
    ULONGLONG Lo64;
};

typedef struct tagBSTRBLOB *LPBSTRBLOB;

typedef struct tagQUERYCONTEXT QUERYCONTEXT;

typedef struct _WORD_BLOB _WORD_BLOB, *P_WORD_BLOB;

struct _WORD_BLOB {
    ulong clSize;
    ushort asData[1];
};

typedef enum tagCLSCTX {
    CLSCTX_INPROC_SERVER=1,
    CLSCTX_INPROC_HANDLER=2,
    CLSCTX_LOCAL_SERVER=4,
    CLSCTX_INPROC_SERVER16=8,
    CLSCTX_REMOTE_SERVER=16,
    CLSCTX_INPROC_HANDLER16=32,
    CLSCTX_INPROC_SERVERX86=64,
    CLSCTX_INPROC_HANDLERX86=128,
    CLSCTX_ESERVER_HANDLER=256,
    CLSCTX_RESERVED=512,
    CLSCTX_NO_CODE_DOWNLOAD=1024,
    CLSCTX_NO_WX86_TRANSLATION=2048,
    CLSCTX_NO_CUSTOM_MARSHAL=4096,
    CLSCTX_ENABLE_CODE_DOWNLOAD=8192,
    CLSCTX_NO_FAILURE_LOG=16384,
    CLSCTX_DISABLE_AAA=32768,
    CLSCTX_ENABLE_AAA=65536,
    CLSCTX_FROM_DEFAULT_CONTEXT=131072
} tagCLSCTX;

typedef enum tagCLSCTX CLSCTX;

typedef union __MIDL___MIDL_itf_wtypes_0003_0005 __MIDL___MIDL_itf_wtypes_0003_0005, *P__MIDL___MIDL_itf_wtypes_0003_0005;

typedef struct _struct_1287 _struct_1287, *P_struct_1287;

typedef struct _struct_1288 _struct_1288, *P_struct_1288;

struct _struct_1287 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

struct _struct_1288 {
    GUID ObjectId;
    GUID PolicyId;
};

union __MIDL___MIDL_itf_wtypes_0003_0005 {
    CLSID clsid;
    LPOLESTR pFileExt;
    LPOLESTR pMimeType;
    LPOLESTR pProgId;
    LPOLESTR pFileName;
    struct _struct_1287 ByName;
    struct _struct_1288 ByObjectId;
};

typedef struct __MIDL___MIDL_itf_wtypes_0003_0001 __MIDL___MIDL_itf_wtypes_0003_0001, *P__MIDL___MIDL_itf_wtypes_0003_0001;

struct __MIDL___MIDL_itf_wtypes_0003_0001 {
    DWORD tyspec;
    union __MIDL___MIDL_itf_wtypes_0003_0005 tagged_union;
};

typedef struct tagRemHGLOBAL tagRemHGLOBAL, *PtagRemHGLOBAL;

struct tagRemHGLOBAL {
    long fNullHGlobal;
    ulong cbData;
    byte data[1];
};

typedef enum tagSTGC {
    STGC_DEFAULT=0,
    STGC_OVERWRITE=1,
    STGC_ONLYIFCURRENT=2,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE=4,
    STGC_CONSOLIDATE=8
} tagSTGC;

typedef struct tagRemHPALETTE RemHPALETTE;

typedef DWORD_BLOB *UP_DWORD_BLOB;

typedef userCLIPFORMAT *wireCLIPFORMAT;

typedef RemotableHandle *wireHMENU;

typedef enum tagMSHLFLAGS MSHLFLAGS;

typedef void *HCONTEXT;

typedef ULONG PROPID;

typedef struct _WORD_BLOB WORD_BLOB;

typedef WORD_BLOB *UP_WORD_BLOB;

typedef struct tagRemBRUSH RemHBRUSH;

typedef struct _struct_1274 _struct_1274, *P_struct_1274;

struct _struct_1274 {
    ulong Lo;
    long Hi;
};

typedef enum tagDVASPECT {
    DVASPECT_CONTENT=1,
    DVASPECT_THUMBNAIL=2,
    DVASPECT_ICON=4,
    DVASPECT_DOCPRINT=8
} tagDVASPECT;

typedef userHMETAFILE *wireHMETAFILE;

typedef struct _struct_1289 _struct_1289, *P_struct_1289;

struct _struct_1289 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

typedef enum tagSTGC STGC;


/* WARNING! conflicting data type names: /deps/wtypes.h/LANGID - /deps/winnt.h/LANGID */

typedef struct tagCLIPDATA CLIPDATA;

typedef enum tagSTATFLAG STATFLAG;

typedef struct _struct_1290 _struct_1290, *P_struct_1290;

struct _struct_1290 {
    GUID ObjectId;
    GUID PolicyId;
};

typedef enum tagMEMCTX {
    MEMCTX_SAME=-2,
    MEMCTX_UNKNOWN=-1,
    MEMCTX_TASK=1,
    MEMCTX_SHARED=2,
    MEMCTX_MACSYSTEM=3
} tagMEMCTX;

typedef SCODE *PSCODE;

typedef struct tagRemHBITMAP RemHBITMAP;

typedef enum tagMEMCTX MEMCTX;

typedef enum tagMSHCTX {
    MSHCTX_LOCAL=0,
    MSHCTX_NOSHAREDMEM=1,
    MSHCTX_DIFFERENTMACHINE=2,
    MSHCTX_INPROC=3,
    MSHCTX_CROSSCTX=4
} tagMSHCTX;

typedef enum tagMSHCTX MSHCTX;

typedef enum tagTYSPEC {
    TYSPEC_CLSID=0,
    TYSPEC_FILEEXT=1,
    TYSPEC_MIMETYPE=2,
    TYSPEC_FILENAME=3,
    TYSPEC_PROGID=4,
    TYSPEC_PACKAGENAME=5,
    TYSPEC_OBJECTID=6
} tagTYSPEC;

typedef struct tagBLOB BLOB;

typedef struct tagRemHGLOBAL RemHGLOBAL;

typedef enum tagDVASPECT DVASPECT;

typedef enum tagTYSPEC TYSPEC;

typedef RemotableHandle *wireHACCEL;

typedef FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB;

#define ROTFLAGS_ALLOWANYCLIENT 2

#define ROT_COMPARE_MAX 2048

#define WDT_INPROC64_CALL 1349805143

#define WDT_INPROC_CALL 1215587415

#define DECIMAL_NEG 128

#define WDT_REMOTE_CALL 1383359575

#define VARIANT_FALSE 0

#define VARIANT_TRUE -1

#define ROTFLAGS_REGISTRATIONKEEPSALIVE 1

#define __REQUIRED_RPCNDR_H_VERSION__ 500

typedef struct _OLESTREAM _OLESTREAM, *P_OLESTREAM;

typedef struct _OLESTREAM *LPOLESTREAM;

typedef struct _OLESTREAMVTBL _OLESTREAMVTBL, *P_OLESTREAMVTBL;

typedef struct _OLESTREAMVTBL OLESTREAMVTBL;

typedef OLESTREAMVTBL *LPOLESTREAMVTBL;

struct _OLESTREAM {
    LPOLESTREAMVTBL lpstbl;
};

struct _OLESTREAMVTBL {
    DWORD (*Get)(LPOLESTREAM, void *, DWORD);
    DWORD (*Put)(LPOLESTREAM, void *, DWORD);
};

typedef struct _OLESTREAM OLESTREAM;

#define OLEIVERB_SHOW -1

#define OLEIVERB_UIACTIVATE -4

#define WIN32 100

#define E_DRAW 2147746112

#define OLEIVERB_HIDE -3

#define EMBDHLP_CREATENOW 0

#define OLEIVERB_INPLACEACTIVATE -5

#define EMBDHLP_INPROC_SERVER 1

#define OLEIVERB_PRIMARY 0

#define EMBDHLP_DELAYCREATE 65536

#define EMBDHLP_INPROC_HANDLER 0

#define OLECREATE_LEAVERUNNING 1

#define OLEIVERB_OPEN -2

#define DATA_E_FORMATETC 2147745892

#define OLEIVERB_DISCARDUNDOSTATE -6

#define _PUNCT 16

#define _LOWER 2

#define _UPPER 1

#define _ALPHA 259

#define _BLANK 64

#define _SPACE 8

#define WEOF 65535

#define _LEADBYTE 32768

#define _DIGIT 4

#define _HEX 128

#define _CONTROL 32

typedef struct _SCARD_IO_REQUEST _SCARD_IO_REQUEST, *P_SCARD_IO_REQUEST;

struct _SCARD_IO_REQUEST {
    DWORD dwProtocol;
    DWORD cbPciLength;
};

typedef struct SCARD_T0_REQUEST SCARD_T0_REQUEST, *PSCARD_T0_REQUEST;

typedef struct _SCARD_IO_REQUEST SCARD_IO_REQUEST;

typedef union _union_1369 _union_1369, *P_union_1369;

typedef struct SCARD_T0_COMMAND SCARD_T0_COMMAND, *PSCARD_T0_COMMAND;

struct SCARD_T0_COMMAND {
    BYTE bCla;
    BYTE bIns;
    BYTE bP1;
    BYTE bP2;
    BYTE bP3;
};

union _union_1369 {
    struct SCARD_T0_COMMAND CmdBytes;
    BYTE rgbHeader[5];
};

struct SCARD_T0_REQUEST {
    SCARD_IO_REQUEST ioRequest;
    BYTE bSw1;
    BYTE bSw2;
    union _union_1369 field3_0xa;
};

typedef struct SCARD_T1_REQUEST SCARD_T1_REQUEST, *PSCARD_T1_REQUEST;

struct SCARD_T1_REQUEST {
    SCARD_IO_REQUEST ioRequest;
};

typedef WORD UWORD;

typedef struct SCARD_T0_COMMAND *LPSCARD_T0_COMMAND;

typedef SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;

typedef struct _SCARD_IO_REQUEST *LPSCARD_IO_REQUEST;

typedef struct _SCARD_IO_REQUEST *PSCARD_IO_REQUEST;

typedef struct SCARD_T1_REQUEST *LPSCARD_T1_REQUEST;


/* WARNING! conflicting data type names: /deps/winsmcrd.h/UCHAR - /deps/WinDef.h/UCHAR */

typedef struct SCARD_T0_REQUEST *LPSCARD_T0_REQUEST;

#define SCARD_ATTR_ESC_AUTHREQUEST 499717

#define SCARD_ATTR_CURRENT_CLK 524802

#define SCARD_CLASS_MECHANICAL 6

#define SCARD_READER_TYPE_SERIAL 1

#define SCARD_CLASS_SYSTEM 32767

#define SCARD_ATTR_CHANNEL_ID 131344

#define SCARD_WARM_RESET 2

#define SCARD_ATR_LENGTH 33

#define SCARD_T1_MAX_IFS 254

#define SCARD_PROTOCOL_T1 2

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_W 2147418117

#define SCARD_PROTOCOL_T0 1

#define IOCTL_SMARTCARD_IS_PRESENT 3211304

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_A 2147418115

#define SCARD_PERF_TRANSMISSION_TIME 2147352579

#define SCARD_CLASS_ICC_STATE 9

#define IOCTL_SMARTCARD_SET_PROTOCOL 3211312

#define IOCTL_SMARTCARD_GET_LAST_ERROR 3211324

#define SCARD_CLASS_COMMUNICATIONS 2

#define SCARD_READER_TYPE_PARALELL 2

#define IOCTL_SMARTCARD_SET_ATTRIBUTE 3211276

#define SCARD_SPECIFIC 6

#define SCARD_PRESENT 2

#define SCARD_ATTR_ICC_TYPE_PER_ATR 590596

#define SCARD_ATTR_CURRENT_PROTOCOL_TYPE 524801

#define SCARD_READER_TYPE_VENDOR 240

#define SCARD_ATTR_VENDOR_IFD_VERSION 65794

#define SCARD_PERF_BYTES_TRANSMITTED 2147352578

#define SCARD_PERF_NUM_TRANSMISSIONS 2147352577

#define SCARD_PROTOCOL_Tx 3

#define SCARD_ATTR_ICC_INTERFACE_STATUS 590593

#define SCARD_ATTR_DEFAULT_DATA_RATE 196899

#define SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE 328000

#define IOCTL_SMARTCARD_GET_STATE 3211320

#define SCARD_ATTR_MAX_CLK 196898

#define SCARD_ATTR_PROTOCOL_TYPES 196896

#define SCARD_ATTR_USER_AUTH_INPUT_DEVICE 328002

#define SCARD_SWALLOWED 3

#define SCARD_ATTR_ATR_STRING 590595

#define SCARD_CLASS_PROTOCOL 3

#define SCARD_PROTOCOL_UNDEFINED 0

#define SCARD_COLD_RESET 1

#define IOCTL_SMARTCARD_POWER 3211268

#define IOCTL_SMARTCARD_GET_PERF_CNTR 3211328

#define SCARD_POWER_DOWN 0

#define SCARD_ATTR_VENDOR_NAME 65792

#define SCARD_POWERED 4

#define SCARD_ATTR_CURRENT_CWT 524810

#define SCARD_CLASS_IFD_PROTOCOL 8

#define SCARD_UNKNOWN 0

#define SCARD_ATTR_CURRENT_EBC_ENCODING 524811

#define SCARD_ATTR_CURRENT_IFSC 524807

#define SCARD_ATTR_MAX_DATA_RATE 196900

#define SCARD_ATTR_CURRENT_IFSD 524808

#define SCARD_ATTR_ICC_PRESENCE 590592

#define SCARD_ATTR_CURRENT_D 524804

#define SCARD_ATTR_CURRENT_F 524803

#define SCARD_ATTR_CURRENT_N 524805

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME 2147418115

#define SCARD_READER_EJECTS 2

#define IOCTL_SMARTCARD_GET_ATTRIBUTE 3211272

#define SCARD_ATTR_CURRENT_BWT 524809

#define SCARD_T0_HEADER_LENGTH 7

#define SCARD_CLASS_VENDOR_INFO 1

#define IOCTL_SMARTCARD_CONFISCATE 3211280

#define SCARD_ATTR_DEVICE_IN_USE 2147418114

#define SCARD_T0_CMD_LENGTH 5

#define SCARD_READER_CONFISCATES 4

#define SCARD_CLASS_PERF 32766

#define SCARD_READER_TYPE_SCSI 8

#define SCARD_PROTOCOL_OPTIMAL 0

#define IOCTL_SMARTCARD_EJECT 3211288

#define IOCTL_SMARTCARD_SWALLOW 3211292

#define SCARD_READER_TYPE_PCMCIA 64

#define SCARD_ATTR_VENDOR_IFD_SERIAL_NO 65795

#define MAXIMUM_ATTR_STRING_LENGTH 32

#define SCARD_ATTR_MAX_IFSD 196901

#define SCARD_ATTR_CURRENT_W 524806

#define IOCTL_SMARTCARD_TRANSMIT 3211284

#define SCARD_ATTR_MAXINPUT 499719

#define SCARD_CLASS_POWER_MGMT 4

#define MAXIMUM_SMARTCARD_READERS 10

#define SCARD_PROTOCOL_DEFAULT 2147483648

#define SCARD_CLASS_SECURITY 5

#define SCARD_ATTR_SUPRESS_T1_IFS_REQUEST 2147418119

#define SCARD_READER_TYPE_USB 32

#define SCARD_READER_SWALLOWS 1

#define SCARD_ATTR_ESC_CANCEL 499715

#define SCARD_CLASS_VENDOR_DEFINED 7

#define SCARD_ATTR_DEVICE_SYSTEM_NAME 2147418116

#define SCARD_ATTR_ESC_RESET 499712

#define SCARD_PROTOCOL_RAW 65536

#define SCARD_T1_EPILOGUE_LENGTH 2

#define SCARD_ATTR_EXTENDED_BWT 524812

#define IOCTL_SMARTCARD_IS_ABSENT 3211308

#define SCARD_T1_PROLOGUE_LENGTH 3

#define SCARD_READER_TYPE_IDE 16

#define SCARD_ATTR_DEFAULT_CLK 196897

#define SCARD_ATTR_DEVICE_UNIT 2147418113

#define SCARD_NEGOTIABLE 5

#define SCARD_ATTR_VENDOR_IFD_TYPE 65793

#define SCARD_READER_TYPE_KEYBOARD 4

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_W 2147418118

#define SCARD_ABSENT 1

#define SCARD_ATTR_CURRENT_IO_STATE 590594

#define SCARD_ATTR_CHARACTERISTICS 393552

#define SCARD_ATTR_POWER_MGMT_SUPPORT 262449

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_A 2147418116

typedef double *png_doublep;

typedef long png_int_32;

typedef char ***png_charppp;

typedef char *png_charp;

typedef short png_int_16;

typedef ulong png_uint_32;

typedef png_uint_32 **png_uint_32pp;

typedef double **png_doublepp;

typedef char charf;

typedef charf *png_zcharp;

typedef struct z_stream_s z_stream_s, *Pz_stream_s;

typedef struct z_stream_s z_stream;

typedef z_stream *png_zstreamp;

typedef uchar Byte;

typedef Byte Bytef;

typedef uint uInt;

typedef ulong uLong;

typedef struct internal_state internal_state, *Pinternal_state;

typedef void *voidpf;

typedef voidpf (*alloc_func)(voidpf, uInt, uInt);

typedef void (*free_func)(voidpf, voidpf);

struct internal_state {
    int dummy;
};

struct z_stream_s {
    Bytef *next_in;
    uInt avail_in;
    uLong total_in;
    Bytef *next_out;
    uInt avail_out;
    uLong total_out;
    char *msg;
    struct internal_state *state;
    alloc_func zalloc;
    free_func zfree;
    voidpf opaque;
    int data_type;
    uLong adler;
    uLong reserved;
};

typedef uchar png_byte;

typedef ushort png_uint_16;

typedef png_uint_16 *png_uint_16p;

typedef char *png_const_charp;

typedef png_byte *png_bytep;

typedef png_int_32 **png_int_32pp;

typedef char **png_charpp;

typedef png_uint_16 **png_uint_16pp;

typedef size_t png_size_t;

typedef png_int_16 *png_int_16p;

typedef void *png_voidp;

typedef char **png_const_charpp;

typedef png_uint_32 *png_uint_32p;

typedef png_int_32 *png_int_32p;

typedef png_int_16 **png_int_16pp;

typedef png_byte **png_bytepp;

typedef charf **png_zcharpp;

#define PNG_ZBUF_SIZE 8192

typedef long time_t;

typedef struct _DSCBCAPS _DSCBCAPS, *P_DSCBCAPS;

typedef struct _DSCBCAPS DSCBCAPS;

typedef DSCBCAPS *LPCDSCBCAPS;

struct _DSCBCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
};

typedef struct _DSFXFlanger _DSFXFlanger, *P_DSFXFlanger;

struct _DSFXFlanger {
    FLOAT fWetDryMix;
    FLOAT fDepth;
    FLOAT fFeedback;
    FLOAT fFrequency;
    LONG lWaveform;
    FLOAT fDelay;
    LONG lPhase;
};

typedef struct IDirectSoundBuffer8Vtbl IDirectSoundBuffer8Vtbl, *PIDirectSoundBuffer8Vtbl;

typedef struct IDirectSoundBuffer8 IDirectSoundBuffer8, *PIDirectSoundBuffer8;

typedef struct _DSEFFECTDESC _DSEFFECTDESC, *P_DSEFFECTDESC;

typedef struct _DSEFFECTDESC *LPDSEFFECTDESC;

struct IDirectSoundBuffer8 {
    struct IDirectSoundBuffer8Vtbl *lpVtbl;
};

struct IDirectSoundBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundBuffer8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundBuffer8 *);
    ULONG (*Release)(struct IDirectSoundBuffer8 *);
    HRESULT (*GetCaps)(struct IDirectSoundBuffer8 *, LPDSBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundBuffer8 *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundBuffer8 *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetVolume)(struct IDirectSoundBuffer8 *, LPLONG);
    HRESULT (*GetPan)(struct IDirectSoundBuffer8 *, LPLONG);
    HRESULT (*GetFrequency)(struct IDirectSoundBuffer8 *, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundBuffer8 *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundBuffer8 *, LPDIRECTSOUND, LPCDSBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundBuffer8 *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Play)(struct IDirectSoundBuffer8 *, DWORD, DWORD, DWORD);
    HRESULT (*SetCurrentPosition)(struct IDirectSoundBuffer8 *, DWORD);
    HRESULT (*SetFormat)(struct IDirectSoundBuffer8 *, LPCWAVEFORMATEX);
    HRESULT (*SetVolume)(struct IDirectSoundBuffer8 *, LONG);
    HRESULT (*SetPan)(struct IDirectSoundBuffer8 *, LONG);
    HRESULT (*SetFrequency)(struct IDirectSoundBuffer8 *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundBuffer8 *);
    HRESULT (*Unlock)(struct IDirectSoundBuffer8 *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*Restore)(struct IDirectSoundBuffer8 *);
    HRESULT (*SetFX)(struct IDirectSoundBuffer8 *, DWORD, LPDSEFFECTDESC, LPDWORD);
    HRESULT (*AcquireResources)(struct IDirectSoundBuffer8 *, DWORD, DWORD, LPDWORD);
    HRESULT (*GetObjectInPath)(struct IDirectSoundBuffer8 *, GUID *, DWORD, GUID *, LPVOID *);
};

struct _DSEFFECTDESC {
    DWORD dwSize;
    DWORD dwFlags;
    GUID guidDSFXClass;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct IDirectSoundNotify IDirectSoundNotify, *PIDirectSoundNotify;

typedef struct IDirectSoundNotify *LPDIRECTSOUNDNOTIFY;

typedef struct IDirectSoundNotifyVtbl IDirectSoundNotifyVtbl, *PIDirectSoundNotifyVtbl;

typedef struct _DSBPOSITIONNOTIFY _DSBPOSITIONNOTIFY, *P_DSBPOSITIONNOTIFY;

typedef struct _DSBPOSITIONNOTIFY DSBPOSITIONNOTIFY;

typedef DSBPOSITIONNOTIFY *LPCDSBPOSITIONNOTIFY;

struct _DSBPOSITIONNOTIFY {
    DWORD dwOffset;
    HANDLE hEventNotify;
};

struct IDirectSoundNotify {
    struct IDirectSoundNotifyVtbl *lpVtbl;
};

struct IDirectSoundNotifyVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundNotify *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundNotify *);
    ULONG (*Release)(struct IDirectSoundNotify *);
    HRESULT (*SetNotificationPositions)(struct IDirectSoundNotify *, DWORD, LPCDSBPOSITIONNOTIFY);
};

typedef struct _DSFXEcho _DSFXEcho, *P_DSFXEcho;

typedef struct _DSFXEcho DSFXEcho;

typedef DSFXEcho *LPCDSFXEcho;

struct _DSFXEcho {
    FLOAT fWetDryMix;
    FLOAT fFeedback;
    FLOAT fLeftDelay;
    FLOAT fRightDelay;
    LONG lPanDelay;
};

typedef LPDIRECTSOUNDNOTIFY *LPLPDIRECTSOUNDNOTIFY;

typedef struct IDirectSoundCaptureBuffer IDirectSoundCaptureBuffer, *PIDirectSoundCaptureBuffer;

typedef struct IDirectSoundCaptureBuffer *LPDIRECTSOUNDCAPTUREBUFFER;

typedef LPDIRECTSOUNDCAPTUREBUFFER *LPLPDIRECTSOUNDCAPTUREBUFFER;

typedef struct IDirectSoundCaptureBufferVtbl IDirectSoundCaptureBufferVtbl, *PIDirectSoundCaptureBufferVtbl;

typedef struct _DSCBCAPS *LPDSCBCAPS;

typedef struct IDirectSoundCapture IDirectSoundCapture, *PIDirectSoundCapture;

typedef struct IDirectSoundCapture *LPDIRECTSOUNDCAPTURE;

typedef struct _DSCBUFFERDESC _DSCBUFFERDESC, *P_DSCBUFFERDESC;

typedef struct _DSCBUFFERDESC DSCBUFFERDESC;

typedef DSCBUFFERDESC *LPCDSCBUFFERDESC;

typedef struct IDirectSoundCaptureVtbl IDirectSoundCaptureVtbl, *PIDirectSoundCaptureVtbl;

typedef struct _DSCCAPS _DSCCAPS, *P_DSCCAPS;

typedef struct _DSCCAPS *LPDSCCAPS;

typedef struct _DSCEFFECTDESC _DSCEFFECTDESC, *P_DSCEFFECTDESC;

typedef struct _DSCEFFECTDESC *LPDSCEFFECTDESC;

struct IDirectSoundCaptureBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureBuffer *);
    ULONG (*Release)(struct IDirectSoundCaptureBuffer *);
    HRESULT (*GetCaps)(struct IDirectSoundCaptureBuffer *, LPDSCBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundCaptureBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundCaptureBuffer *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundCaptureBuffer *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundCaptureBuffer *, LPDIRECTSOUNDCAPTURE, LPCDSCBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundCaptureBuffer *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Start)(struct IDirectSoundCaptureBuffer *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundCaptureBuffer *);
    HRESULT (*Unlock)(struct IDirectSoundCaptureBuffer *, LPVOID, DWORD, LPVOID, DWORD);
};

struct _DSCCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwFormats;
    DWORD dwChannels;
};

struct IDirectSoundCaptureVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCapture *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCapture *);
    ULONG (*Release)(struct IDirectSoundCapture *);
    HRESULT (*CreateCaptureBuffer)(struct IDirectSoundCapture *, LPCDSCBUFFERDESC, LPDIRECTSOUNDCAPTUREBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSoundCapture *, LPDSCCAPS);
    HRESULT (*Initialize)(struct IDirectSoundCapture *, LPCGUID);
};

struct IDirectSoundCaptureBuffer {
    struct IDirectSoundCaptureBufferVtbl *lpVtbl;
};

struct IDirectSoundCapture {
    struct IDirectSoundCaptureVtbl *lpVtbl;
};

struct _DSCEFFECTDESC {
    DWORD dwSize;
    DWORD dwFlags;
    GUID guidDSCFXClass;
    GUID guidDSCFXInstance;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct _DSCBUFFERDESC {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
    DWORD dwFXCount;
    LPDSCEFFECTDESC lpDSCFXDesc;
};

typedef struct _DSFXI3DL2Reverb _DSFXI3DL2Reverb, *P_DSFXI3DL2Reverb;

struct _DSFXI3DL2Reverb {
    LONG lRoom;
    LONG lRoomHF;
    FLOAT flRoomRolloffFactor;
    FLOAT flDecayTime;
    FLOAT flDecayHFRatio;
    LONG lReflections;
    FLOAT flReflectionsDelay;
    LONG lReverb;
    FLOAT flReverbDelay;
    FLOAT flDiffusion;
    FLOAT flDensity;
    FLOAT flHFReference;
};

typedef struct IDirectSound3DBuffer IDirectSound3DBuffer, *PIDirectSound3DBuffer;

typedef struct IDirectSound3DBuffer *LPDIRECTSOUND3DBUFFER8;

typedef struct IDirectSound3DBufferVtbl IDirectSound3DBufferVtbl, *PIDirectSound3DBufferVtbl;

typedef struct _DS3DBUFFER _DS3DBUFFER, *P_DS3DBUFFER;

typedef struct _DS3DBUFFER *LPDS3DBUFFER;


/* WARNING! conflicting data type names: /deps/dsound.h/D3DVECTOR - /deps/d3d8types.h/D3DVECTOR */

typedef float D3DVALUE;

typedef struct _DS3DBUFFER DS3DBUFFER;

typedef DS3DBUFFER *LPCDS3DBUFFER;

struct _DS3DBUFFER {
    DWORD dwSize;
    D3DVECTOR vPosition;
    D3DVECTOR vVelocity;
    DWORD dwInsideConeAngle;
    DWORD dwOutsideConeAngle;
    D3DVECTOR vConeOrientation;
    LONG lConeOutsideVolume;
    D3DVALUE flMinDistance;
    D3DVALUE flMaxDistance;
    DWORD dwMode;
};

struct IDirectSound3DBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound3DBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound3DBuffer *);
    ULONG (*Release)(struct IDirectSound3DBuffer *);
    HRESULT (*GetAllParameters)(struct IDirectSound3DBuffer *, LPDS3DBUFFER);
    HRESULT (*GetConeAngles)(struct IDirectSound3DBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetConeOrientation)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*GetConeOutsideVolume)(struct IDirectSound3DBuffer *, LPLONG);
    HRESULT (*GetMaxDistance)(struct IDirectSound3DBuffer *, D3DVALUE *);
    HRESULT (*GetMinDistance)(struct IDirectSound3DBuffer *, D3DVALUE *);
    HRESULT (*GetMode)(struct IDirectSound3DBuffer *, LPDWORD);
    HRESULT (*GetPosition)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*GetVelocity)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*SetAllParameters)(struct IDirectSound3DBuffer *, LPCDS3DBUFFER, DWORD);
    HRESULT (*SetConeAngles)(struct IDirectSound3DBuffer *, DWORD, DWORD, DWORD);
    HRESULT (*SetConeOrientation)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetConeOutsideVolume)(struct IDirectSound3DBuffer *, LONG, DWORD);
    HRESULT (*SetMaxDistance)(struct IDirectSound3DBuffer *, D3DVALUE, DWORD);
    HRESULT (*SetMinDistance)(struct IDirectSound3DBuffer *, D3DVALUE, DWORD);
    HRESULT (*SetMode)(struct IDirectSound3DBuffer *, DWORD, DWORD);
    HRESULT (*SetPosition)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetVelocity)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
};

struct IDirectSound3DBuffer {
    struct IDirectSound3DBufferVtbl *lpVtbl;
};

typedef struct IDirectSoundFXEcho IDirectSoundFXEcho, *PIDirectSoundFXEcho;

typedef struct IDirectSoundFXEcho *LPDIRECTSOUNDFXECHO;

typedef struct IDirectSoundFXEchoVtbl IDirectSoundFXEchoVtbl, *PIDirectSoundFXEchoVtbl;

typedef struct _DSFXEcho *LPDSFXEcho;

struct IDirectSoundFXEcho {
    struct IDirectSoundFXEchoVtbl *lpVtbl;
};

struct IDirectSoundFXEchoVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXEcho *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXEcho *);
    ULONG (*Release)(struct IDirectSoundFXEcho *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXEcho *, LPCDSFXEcho);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXEcho *, LPDSFXEcho);
};

typedef struct _DSFXCompressor _DSFXCompressor, *P_DSFXCompressor;

typedef struct _DSFXCompressor DSFXCompressor;

struct _DSFXCompressor {
    FLOAT fGain;
    FLOAT fAttack;
    FLOAT fRelease;
    FLOAT fThreshold;
    FLOAT fRatio;
    FLOAT fPredelay;
};

typedef struct _DSCFXAec _DSCFXAec, *P_DSCFXAec;

typedef struct _DSCFXAec DSCFXAec;

typedef DSCFXAec *LPCDSCFXAec;

struct _DSCFXAec {
    BOOL fEnable;
    BOOL fReset;
};

typedef struct _DSFXWavesReverb _DSFXWavesReverb, *P_DSFXWavesReverb;

typedef struct _DSFXWavesReverb DSFXWavesReverb;

typedef DSFXWavesReverb *LPCDSFXWavesReverb;

struct _DSFXWavesReverb {
    FLOAT fInGain;
    FLOAT fReverbMix;
    FLOAT fReverbTime;
    FLOAT fHighFreqRTRatio;
};

typedef struct IKsPropertySet IKsPropertySet, *PIKsPropertySet;

typedef struct IKsPropertySetVtbl IKsPropertySetVtbl, *PIKsPropertySetVtbl;

typedef ULONG *PULONG;

struct IKsPropertySetVtbl {
    HRESULT (*QueryInterface)(struct IKsPropertySet *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IKsPropertySet *);
    ULONG (*Release)(struct IKsPropertySet *);
    HRESULT (*Get)(struct IKsPropertySet *, GUID *, ULONG, LPVOID, ULONG, LPVOID, ULONG, PULONG);
    HRESULT (*Set)(struct IKsPropertySet *, GUID *, ULONG, LPVOID, ULONG, LPVOID, ULONG);
    HRESULT (*QuerySupport)(struct IKsPropertySet *, GUID *, ULONG, PULONG);
};

struct IKsPropertySet {
    struct IKsPropertySetVtbl *lpVtbl;
};

typedef struct _DSCEFFECTDESC DSCEFFECTDESC;

typedef struct _DSCAPS DSCAPS;

typedef DSCAPS *LPCDSCAPS;

typedef struct IDirectSoundFXChorus IDirectSoundFXChorus, *PIDirectSoundFXChorus;

typedef struct IDirectSoundFXChorusVtbl IDirectSoundFXChorusVtbl, *PIDirectSoundFXChorusVtbl;

typedef struct _DSFXChorus _DSFXChorus, *P_DSFXChorus;

typedef struct _DSFXChorus DSFXChorus;

typedef DSFXChorus *LPCDSFXChorus;

typedef struct _DSFXChorus *LPDSFXChorus;

struct IDirectSoundFXChorus {
    struct IDirectSoundFXChorusVtbl *lpVtbl;
};

struct _DSFXChorus {
    FLOAT fWetDryMix;
    FLOAT fDepth;
    FLOAT fFeedback;
    FLOAT fFrequency;
    LONG lWaveform;
    FLOAT fDelay;
    LONG lPhase;
};

struct IDirectSoundFXChorusVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXChorus *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXChorus *);
    ULONG (*Release)(struct IDirectSoundFXChorus *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXChorus *, LPCDSFXChorus);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXChorus *, LPDSFXChorus);
};

typedef struct _DSFXGargle _DSFXGargle, *P_DSFXGargle;

typedef struct _DSFXGargle DSFXGargle;

struct _DSFXGargle {
    DWORD dwRateHz;
    DWORD dwWaveShape;
};

typedef struct IDirectSoundFXFlangerVtbl IDirectSoundFXFlangerVtbl, *PIDirectSoundFXFlangerVtbl;

typedef struct IDirectSoundFXFlanger IDirectSoundFXFlanger, *PIDirectSoundFXFlanger;

typedef struct _DSFXFlanger DSFXFlanger;

typedef DSFXFlanger *LPCDSFXFlanger;

typedef struct _DSFXFlanger *LPDSFXFlanger;

struct IDirectSoundFXFlangerVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXFlanger *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXFlanger *);
    ULONG (*Release)(struct IDirectSoundFXFlanger *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXFlanger *, LPCDSFXFlanger);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXFlanger *, LPDSFXFlanger);
};

struct IDirectSoundFXFlanger {
    struct IDirectSoundFXFlangerVtbl *lpVtbl;
};

typedef struct _DSBCAPS DSBCAPS;

typedef struct IDirectSound3DListener IDirectSound3DListener, *PIDirectSound3DListener;

typedef struct IDirectSound3DListener *LPDIRECTSOUND3DLISTENER;

typedef struct IDirectSound3DListenerVtbl IDirectSound3DListenerVtbl, *PIDirectSound3DListenerVtbl;

typedef struct _DS3DLISTENER _DS3DLISTENER, *P_DS3DLISTENER;

typedef struct _DS3DLISTENER *LPDS3DLISTENER;

typedef struct _DS3DLISTENER DS3DLISTENER;

typedef DS3DLISTENER *LPCDS3DLISTENER;

struct IDirectSound3DListenerVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound3DListener *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound3DListener *);
    ULONG (*Release)(struct IDirectSound3DListener *);
    HRESULT (*GetAllParameters)(struct IDirectSound3DListener *, LPDS3DLISTENER);
    HRESULT (*GetDistanceFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetDopplerFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetOrientation)(struct IDirectSound3DListener *, D3DVECTOR *, D3DVECTOR *);
    HRESULT (*GetPosition)(struct IDirectSound3DListener *, D3DVECTOR *);
    HRESULT (*GetRolloffFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetVelocity)(struct IDirectSound3DListener *, D3DVECTOR *);
    HRESULT (*SetAllParameters)(struct IDirectSound3DListener *, LPCDS3DLISTENER, DWORD);
    HRESULT (*SetDistanceFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetDopplerFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetOrientation)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetPosition)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetRolloffFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetVelocity)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*CommitDeferredSettings)(struct IDirectSound3DListener *);
};

struct IDirectSound3DListener {
    struct IDirectSound3DListenerVtbl *lpVtbl;
};

struct _DS3DLISTENER {
    DWORD dwSize;
    D3DVECTOR vPosition;
    D3DVECTOR vVelocity;
    D3DVECTOR vOrientFront;
    D3DVECTOR vOrientTop;
    D3DVALUE flDistanceFactor;
    D3DVALUE flRolloffFactor;
    D3DVALUE flDopplerFactor;
};

typedef struct IDirectSoundFXParamEqVtbl IDirectSoundFXParamEqVtbl, *PIDirectSoundFXParamEqVtbl;

typedef struct IDirectSoundFXParamEq IDirectSoundFXParamEq, *PIDirectSoundFXParamEq;

typedef struct _DSFXParamEq _DSFXParamEq, *P_DSFXParamEq;

typedef struct _DSFXParamEq DSFXParamEq;

typedef DSFXParamEq *LPCDSFXParamEq;

typedef struct _DSFXParamEq *LPDSFXParamEq;

struct IDirectSoundFXParamEq {
    struct IDirectSoundFXParamEqVtbl *lpVtbl;
};

struct IDirectSoundFXParamEqVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXParamEq *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXParamEq *);
    ULONG (*Release)(struct IDirectSoundFXParamEq *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXParamEq *, LPCDSFXParamEq);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXParamEq *, LPDSFXParamEq);
};

struct _DSFXParamEq {
    FLOAT fCenter;
    FLOAT fBandwidth;
    FLOAT fGain;
};

typedef struct IDirectSoundNotify *LPDIRECTSOUNDNOTIFY8;

typedef struct IDirectSoundCaptureFXNoiseSuppress IDirectSoundCaptureFXNoiseSuppress, *PIDirectSoundCaptureFXNoiseSuppress;

typedef struct IDirectSoundCaptureFXNoiseSuppressVtbl IDirectSoundCaptureFXNoiseSuppressVtbl, *PIDirectSoundCaptureFXNoiseSuppressVtbl;

typedef struct _DSCFXNoiseSuppress _DSCFXNoiseSuppress, *P_DSCFXNoiseSuppress;

typedef struct _DSCFXNoiseSuppress DSCFXNoiseSuppress;

typedef DSCFXNoiseSuppress *LPCDSCFXNoiseSuppress;

typedef struct _DSCFXNoiseSuppress *LPDSCFXNoiseSuppress;

struct IDirectSoundCaptureFXNoiseSuppress {
    struct IDirectSoundCaptureFXNoiseSuppressVtbl *lpVtbl;
};

struct IDirectSoundCaptureFXNoiseSuppressVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureFXNoiseSuppress *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureFXNoiseSuppress *);
    ULONG (*Release)(struct IDirectSoundCaptureFXNoiseSuppress *);
    HRESULT (*SetAllParameters)(struct IDirectSoundCaptureFXNoiseSuppress *, LPCDSCFXNoiseSuppress);
    HRESULT (*GetAllParameters)(struct IDirectSoundCaptureFXNoiseSuppress *, LPDSCFXNoiseSuppress);
};

struct _DSCFXNoiseSuppress {
    BOOL fEnable;
    BOOL fReset;
};

typedef struct _DSFXWavesReverb *LPDSFXWavesReverb;

typedef struct IDirectSoundFXGargleVtbl IDirectSoundFXGargleVtbl, *PIDirectSoundFXGargleVtbl;

typedef struct IDirectSoundFXGargle IDirectSoundFXGargle, *PIDirectSoundFXGargle;

typedef DSFXGargle *LPCDSFXGargle;

typedef struct _DSFXGargle *LPDSFXGargle;

struct IDirectSoundFXGargleVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXGargle *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXGargle *);
    ULONG (*Release)(struct IDirectSoundFXGargle *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXGargle *, LPCDSFXGargle);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXGargle *, LPDSFXGargle);
};

struct IDirectSoundFXGargle {
    struct IDirectSoundFXGargleVtbl *lpVtbl;
};

typedef D3DVECTOR *LPD3DVECTOR;

typedef struct IDirectSoundFXDistortion IDirectSoundFXDistortion, *PIDirectSoundFXDistortion;

typedef struct IDirectSoundFXDistortionVtbl IDirectSoundFXDistortionVtbl, *PIDirectSoundFXDistortionVtbl;

typedef struct _DSFXDistortion _DSFXDistortion, *P_DSFXDistortion;

typedef struct _DSFXDistortion DSFXDistortion;

typedef DSFXDistortion *LPCDSFXDistortion;

typedef struct _DSFXDistortion *LPDSFXDistortion;

struct IDirectSoundFXDistortion {
    struct IDirectSoundFXDistortionVtbl *lpVtbl;
};

struct _DSFXDistortion {
    FLOAT fGain;
    FLOAT fEdge;
    FLOAT fPostEQCenterFrequency;
    FLOAT fPostEQBandwidth;
    FLOAT fPreLowpassCutoff;
};

struct IDirectSoundFXDistortionVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXDistortion *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXDistortion *);
    ULONG (*Release)(struct IDirectSoundFXDistortion *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXDistortion *, LPCDSFXDistortion);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXDistortion *, LPDSFXDistortion);
};

typedef DWORD *LPD3DCOLOR;

typedef struct _DSFXI3DL2Reverb DSFXI3DL2Reverb;

typedef struct IDirectSoundFXEcho *LPDIRECTSOUNDFXECHO8;

typedef struct IDirectSoundCapture *LPDIRECTSOUNDCAPTURE8;

typedef LPDIRECTSOUNDCAPTURE8 *LPLPDIRECTSOUNDCAPTURE8;

typedef struct IDirectSoundFXGargle *LPDIRECTSOUNDFXGARGLE8;

typedef LPDIRECTSOUND3DLISTENER *LPLPDIRECTSOUND3DLISTENER;

typedef struct IDirectSoundCaptureBuffer8 IDirectSoundCaptureBuffer8, *PIDirectSoundCaptureBuffer8;

typedef struct IDirectSoundCaptureBuffer8 *LPDIRECTSOUNDCAPTUREBUFFER8;

typedef struct IDirectSoundCaptureBuffer8Vtbl IDirectSoundCaptureBuffer8Vtbl, *PIDirectSoundCaptureBuffer8Vtbl;

struct IDirectSoundCaptureBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureBuffer8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureBuffer8 *);
    ULONG (*Release)(struct IDirectSoundCaptureBuffer8 *);
    HRESULT (*GetCaps)(struct IDirectSoundCaptureBuffer8 *, LPDSCBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundCaptureBuffer8 *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundCaptureBuffer8 *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundCaptureBuffer8 *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundCaptureBuffer8 *, LPDIRECTSOUNDCAPTURE, LPCDSCBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundCaptureBuffer8 *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Start)(struct IDirectSoundCaptureBuffer8 *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundCaptureBuffer8 *);
    HRESULT (*Unlock)(struct IDirectSoundCaptureBuffer8 *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*GetObjectInPath)(struct IDirectSoundCaptureBuffer8 *, GUID *, DWORD, GUID *, LPVOID *);
    HRESULT (*GetFXStatus)(DWORD, LPDWORD);
};

struct IDirectSoundCaptureBuffer8 {
    struct IDirectSoundCaptureBuffer8Vtbl *lpVtbl;
};

typedef DSFXI3DL2Reverb *LPCDSFXI3DL2Reverb;

typedef struct IDirectSoundFullDuplex IDirectSoundFullDuplex, *PIDirectSoundFullDuplex;

typedef struct IDirectSoundFullDuplex *LPDIRECTSOUNDFULLDUPLEX;

typedef struct IDirectSoundFullDuplexVtbl IDirectSoundFullDuplexVtbl, *PIDirectSoundFullDuplexVtbl;

typedef LPDIRECTSOUNDCAPTUREBUFFER8 *LPLPDIRECTSOUNDCAPTUREBUFFER8;

typedef struct IDirectSoundBuffer8 *LPDIRECTSOUNDBUFFER8;

typedef LPDIRECTSOUNDBUFFER8 *LPLPDIRECTSOUNDBUFFER8;

struct IDirectSoundFullDuplexVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFullDuplex *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFullDuplex *);
    ULONG (*Release)(struct IDirectSoundFullDuplex *);
    HRESULT (*Initialize)(struct IDirectSoundFullDuplex *, LPCGUID, LPCGUID, LPCDSCBUFFERDESC, LPCDSBUFFERDESC, HWND, DWORD, LPLPDIRECTSOUNDCAPTUREBUFFER8, LPLPDIRECTSOUNDBUFFER8);
};

struct IDirectSoundFullDuplex {
    struct IDirectSoundFullDuplexVtbl *lpVtbl;
};

typedef struct _DSBUFFERDESC1 _DSBUFFERDESC1, *P_DSBUFFERDESC1;

typedef struct _DSBUFFERDESC1 DSBUFFERDESC1;

struct _DSBUFFERDESC1 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
};

typedef struct _DSCCAPS DSCCAPS;

typedef struct IDirectSoundFXI3DL2Reverb IDirectSoundFXI3DL2Reverb, *PIDirectSoundFXI3DL2Reverb;

typedef struct IDirectSoundFXI3DL2ReverbVtbl IDirectSoundFXI3DL2ReverbVtbl, *PIDirectSoundFXI3DL2ReverbVtbl;

typedef struct _DSFXI3DL2Reverb *LPDSFXI3DL2Reverb;

struct IDirectSoundFXI3DL2Reverb {
    struct IDirectSoundFXI3DL2ReverbVtbl *lpVtbl;
};

struct IDirectSoundFXI3DL2ReverbVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXI3DL2Reverb *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXI3DL2Reverb *);
    ULONG (*Release)(struct IDirectSoundFXI3DL2Reverb *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXI3DL2Reverb *, LPCDSFXI3DL2Reverb);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXI3DL2Reverb *, LPDSFXI3DL2Reverb);
    HRESULT (*SetPreset)(struct IDirectSoundFXI3DL2Reverb *, DWORD);
    HRESULT (*GetPreset)(struct IDirectSoundFXI3DL2Reverb *, LPDWORD);
    HRESULT (*SetQuality)(struct IDirectSoundFXI3DL2Reverb *, LONG);
    HRESULT (*GetQuality)(struct IDirectSoundFXI3DL2Reverb *, LONG *);
};

typedef struct IDirectSoundFXWavesReverb IDirectSoundFXWavesReverb, *PIDirectSoundFXWavesReverb;

typedef struct IDirectSoundFXWavesReverbVtbl IDirectSoundFXWavesReverbVtbl, *PIDirectSoundFXWavesReverbVtbl;

struct IDirectSoundFXWavesReverb {
    struct IDirectSoundFXWavesReverbVtbl *lpVtbl;
};

struct IDirectSoundFXWavesReverbVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXWavesReverb *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXWavesReverb *);
    ULONG (*Release)(struct IDirectSoundFXWavesReverb *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXWavesReverb *, LPCDSFXWavesReverb);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXWavesReverb *, LPDSFXWavesReverb);
};

typedef struct _DSCFXAec *LPDSCFXAec;

typedef struct IDirectSoundFXDistortion *LPDIRECTSOUNDFXDISTORTION8;

typedef struct IDirectSoundFXGargle *LPDIRECTSOUNDFXGARGLE;

typedef struct IReferenceClockVtbl IReferenceClockVtbl, *PIReferenceClockVtbl;

typedef struct IReferenceClock IReferenceClock, *PIReferenceClock;

typedef LONGLONG REFERENCE_TIME;

struct IReferenceClockVtbl {
    HRESULT (*QueryInterface)(struct IReferenceClock *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IReferenceClock *);
    ULONG (*Release)(struct IReferenceClock *);
    HRESULT (*GetTime)(struct IReferenceClock *, REFERENCE_TIME *);
    HRESULT (*AdviseTime)(struct IReferenceClock *, REFERENCE_TIME, REFERENCE_TIME, HANDLE, LPDWORD);
    HRESULT (*AdvisePeriodic)(struct IReferenceClock *, REFERENCE_TIME, REFERENCE_TIME, HANDLE, LPDWORD);
    HRESULT (*Unadvise)(struct IReferenceClock *, DWORD);
};

struct IReferenceClock {
    struct IReferenceClockVtbl *lpVtbl;
};

typedef struct IDirectSoundFXChorus *LPDIRECTSOUNDFXCHORUS;

typedef struct IDirectSoundFXFlanger *LPDIRECTSOUNDFXFLANGER8;

typedef struct IDirectSoundCaptureFXAec IDirectSoundCaptureFXAec, *PIDirectSoundCaptureFXAec;

typedef struct IDirectSoundCaptureFXAec *LPDIRECTSOUNDCAPTUREFXAEC8;

typedef struct IDirectSoundCaptureFXAecVtbl IDirectSoundCaptureFXAecVtbl, *PIDirectSoundCaptureFXAecVtbl;

struct IDirectSoundCaptureFXAec {
    struct IDirectSoundCaptureFXAecVtbl *lpVtbl;
};

struct IDirectSoundCaptureFXAecVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureFXAec *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureFXAec *);
    ULONG (*Release)(struct IDirectSoundCaptureFXAec *);
    HRESULT (*SetAllParameters)(struct IDirectSoundCaptureFXAec *, LPCDSCFXAec);
    HRESULT (*GetAllParameters)(struct IDirectSoundCaptureFXAec *, LPDSCFXAec);
};

typedef struct _DSCBUFFERDESC1 _DSCBUFFERDESC1, *P_DSCBUFFERDESC1;

struct _DSCBUFFERDESC1 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
};

typedef LPDIRECTSOUNDBUFFER *LPLPDIRECTSOUNDBUFFER;

typedef struct _DSEFFECTDESC DSEFFECTDESC;

typedef DSEFFECTDESC *LPCDSEFFECTDESC;

typedef struct IDirectSoundFXParamEq *LPDIRECTSOUNDFXPARAMEQ;

typedef struct IDirectSoundFXWavesReverb *LPDIRECTSOUNDFXWAVESREVERB;

typedef struct _DSCBUFFERDESC1 *LPDSCBUFFERDESC1;

typedef struct IDirectSound3DListener *LPDIRECTSOUND3DLISTENER8;

typedef BOOL (*LPDSENUMCALLBACKA)(LPGUID, LPCSTR, LPCSTR, LPVOID);

typedef struct IDirectSoundCaptureFXAec *LPDIRECTSOUNDCAPTUREFXAEC;

typedef BOOL (*LPDSENUMCALLBACKW)(LPGUID, LPCWSTR, LPCWSTR, LPVOID);

typedef struct IDirectSoundFXCompressor IDirectSoundFXCompressor, *PIDirectSoundFXCompressor;

typedef struct IDirectSoundFXCompressor *LPDIRECTSOUNDFXCOMPRESSOR;

typedef struct IDirectSoundFXCompressorVtbl IDirectSoundFXCompressorVtbl, *PIDirectSoundFXCompressorVtbl;

typedef DSFXCompressor *LPCDSFXCompressor;

typedef struct _DSFXCompressor *LPDSFXCompressor;

struct IDirectSoundFXCompressorVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXCompressor *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXCompressor *);
    ULONG (*Release)(struct IDirectSoundFXCompressor *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXCompressor *, LPCDSFXCompressor);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXCompressor *, LPDSFXCompressor);
};

struct IDirectSoundFXCompressor {
    struct IDirectSoundFXCompressorVtbl *lpVtbl;
};

typedef struct _DSCBUFFERDESC *LPDSCBUFFERDESC;

typedef DSCEFFECTDESC *LPCDSCEFFECTDESC;

typedef struct IKsPropertySet *LPKSPROPERTYSET;

typedef struct IDirectSoundFXCompressor *LPDIRECTSOUNDFXCOMPRESSOR8;

typedef struct IDirectSoundFullDuplex *LPDIRECTSOUNDFULLDUPLEX8;

typedef struct _DSBPOSITIONNOTIFY *LPDSBPOSITIONNOTIFY;

typedef struct IDirectSound3DBuffer *LPDIRECTSOUND3DBUFFER;

typedef struct _DSBUFFERDESC *LPDSBUFFERDESC;


/* WARNING! conflicting data type names: /deps/dsound.h/_D3DVECTOR - /deps/d3d8types.h/_D3DVECTOR */

typedef struct IDirectSoundFXWavesReverb *LPDIRECTSOUNDFXWAVESREVERB8;

typedef struct IDirectSoundFXI3DL2Reverb *LPDIRECTSOUNDFXI3DL2REVERB;

typedef enum enum_2679 {
    DSFX_I3DL2_MATERIAL_PRESET_SINGLEWINDOW=0,
    DSFX_I3DL2_MATERIAL_PRESET_DOUBLEWINDOW=1,
    DSFX_I3DL2_MATERIAL_PRESET_THINDOOR=2,
    DSFX_I3DL2_MATERIAL_PRESET_THICKDOOR=3,
    DSFX_I3DL2_MATERIAL_PRESET_WOODWALL=4,
    DSFX_I3DL2_MATERIAL_PRESET_BRICKWALL=5,
    DSFX_I3DL2_MATERIAL_PRESET_STONEWALL=6,
    DSFX_I3DL2_MATERIAL_PRESET_CURTAIN=7
} enum_2679;

typedef enum enum_2559 {
    DSFXR_PRESENT=0,
    DSFXR_LOCHARDWARE=1,
    DSFXR_LOCSOFTWARE=2,
    DSFXR_UNALLOCATED=3,
    DSFXR_FAILED=4,
    DSFXR_UNKNOWN=5,
    DSFXR_SENDLOOP=6
} enum_2559;

typedef struct IDirectSoundCaptureFXNoiseSuppress *LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS8;

typedef enum enum_2680 {
    DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT=0,
    DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC=1,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL=2,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM=3,
    DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM=4,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM=5,
    DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM=6,
    DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM=7,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL=8,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE=9,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA=10,
    DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR=11,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY=12,
    DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY=13,
    DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR=14,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY=15,
    DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST=16,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CITY=17,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS=18,
    DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY=19,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN=20,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT=21,
    DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE=22,
    DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER=23,
    DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM=24,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM=25,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM=26,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL=27,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL=28,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE=29
} enum_2680;

typedef struct IDirectSoundFXParamEq *LPDIRECTSOUNDFXPARAMEQ8;

typedef LPDIRECTSOUND8 *LPLPDIRECTSOUND8;

typedef LPDIRECTSOUND3DBUFFER *LPLPDIRECTSOUND3DBUFFER;

typedef LPDIRECTSOUNDCAPTURE *LPLPDIRECTSOUNDCAPTURE;

typedef struct IDirectSoundCaptureFXNoiseSuppress *LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS;

typedef struct _DSCBUFFERDESC1 DSCBUFFERDESC1;

typedef struct IDirectSoundFXDistortion *LPDIRECTSOUNDFXDISTORTION;

typedef DSBUFFERDESC1 *LPCDSBUFFERDESC1;

typedef DSBCAPS *LPCDSBCAPS;

typedef float *LPD3DVALUE;

typedef REFERENCE_TIME *LPREFERENCE_TIME;

typedef struct IDirectSoundFXFlanger *LPDIRECTSOUNDFXFLANGER;

typedef struct _DSBUFFERDESC1 *LPDSBUFFERDESC1;

typedef struct IDirectSoundFXChorus *LPDIRECTSOUNDFXCHORUS8;

typedef LPDIRECTSOUND *LPLPDIRECTSOUND;

typedef DSCCAPS *LPCDSCCAPS;

typedef struct IDirectSoundFXI3DL2Reverb *LPDIRECTSOUNDFXI3DL2REVERB8;

#define DSCCAPS_CERTIFIED 64

#define DSCAPS_CERTIFIED 64

#define DSCCAPS_EMULDRIVER 32

#define DS_SYSTEM_RESOURCES_NO_HOST_RESOURCES 0

#define DSFXFLANGER_PHASE_NEG_90 1

#define DSFXCHORUS_PHASE_NEG_180 0

#define DS_UNCERTIFIED 1

#define DS3D_DEFAULTCONEOUTSIDEVOLUME 0

#define DSBPAN_LEFT -10000

#define DSBCAPS_CTRLPAN 64

#define DSFXFLANGER_PHASE_MIN 0

#define DSFX_I3DL2REVERB_REFLECTIONS_MIN -10000

#define DSERR_INVALIDPARAM 2147942487

#define DIRECTSOUND_VERSION 2048

#define DSBSTATUS_PLAYING 1

#define DSBCAPS_STATIC 2

#define DSCAPS_PRIMARY8BIT 4

#define DSERR_UNINITIALIZED 2289565866

#define DSSPEAKER_GEOMETRY_MIN 5

#define DSBVOLUME_MIN -10000

#define DS3D_MAXCONEANGLE 360

#define DS_INCOMPLETE 142082068

#define DSFXCHORUS_WAVE_SIN 1

#define DSFX_I3DL2REVERB_ROOMHF_MAX 0

#define DSFXCHORUS_PHASE_ZERO 2

#define DSFXCHORUS_PHASE_90 3

#define DSBCAPS_LOCDEFER 262144

#define DSCAPS_SECONDARY8BIT 1024

#define DS3DMODE_DISABLE 2

#define DSBSIZE_MAX 268435455

#define DS_CERTIFIED 0

#define DS_SYSTEM_RESOURCES_UNDEFINED 2147483648

#define DSBPLAY_TERMINATEBY_TIME 8

#define DSBCAPS_PRIMARYBUFFER 1

#define KSPROPERTY_SUPPORT_GET 1

#define DSSPEAKER_GEOMETRY_WIDE 20

#define DSBSTATUS_LOCSOFTWARE 16

#define DSFXCHORUS_PHASE_MIN 0

#define DSCAPS_SECONDARYMONO 256

#define DS_OK 0

#define DSCAPS_EMULDRIVER 32

#define DS3DMODE_HEADRELATIVE 1

#define DSCFX_LOCHARDWARE 1

#define DS3D_DEFAULTCONEANGLE 360

#define DSFXGARGLE_RATEHZ_MIN 1

#define DSFX_I3DL2REVERB_ROOM_MIN -10000

#define DSERR_GENERIC 2147500037

#define DSBLOCK_FROMWRITECURSOR 1

#define DSERR_ALLOCATED 2289565706

#define DSBCAPS_STICKYFOCUS 16384

#define DS3DMODE_NORMAL 0

#define DSCAPS_SECONDARY16BIT 2048

#define DSCFXR_UNKNOWN 256

#define DSSCL_NORMAL 1

#define DS_SYSTEM_RESOURCES_ALL_HOST_RESOURCES 2147483647

#define DSCBCAPS_WAVEMAPPED 2147483648

#define DSFX_I3DL2REVERB_REVERB_DEFAULT 200

#define DSFX_LOCSOFTWARE 2

#define DSERR_BUFFERTOOSMALL 2289565876

#define DSSPEAKER_5POINT1 6

#define DSFX_LOCHARDWARE 1

#define DSCAPS_PRIMARY16BIT 8

#define DSFXFLANGER_PHASE_NEG_180 0

#define DSBCAPS_CTRLFX 512

#define DSERR_ALREADYINITIALIZED 2289565826

#define DSBPLAY_TERMINATEBY_DISTANCE 16

#define DSFX_I3DL2REVERB_REVERB_MAX 2000

#define DSERR_BUFFERLOST 2289565846

#define DSFXGARGLE_WAVE_SQUARE 1

#define DSBCAPS_GLOBALFOCUS 32768

#define DSERR_NODRIVER 2289565816

#define DSCFXR_LOCHARDWARE 16

#define DSERR_UNSUPPORTED 2147500033

#define DSFXECHO_PANDELAY_MIN 0

#define DSBSIZE_FX_MIN 150

#define DSFXGARGLE_WAVE_TRIANGLE 0

#define DSFX_I3DL2REVERB_QUALITY_MAX 3

#define DSSCL_EXCLUSIVE 3

#define DSCFXR_FAILED 128

#define DSBPLAY_LOOPING 1

#define DSBFREQUENCY_MAX 100000

#define DSCAPS_PRIMARYMONO 1

#define DSBCAPS_LOCSOFTWARE 8

#define DSCBSTATUS_CAPTURING 1

#define DSFX_I3DL2REVERB_QUALITY_DEFAULT 2

#define DSERR_NOAGGREGATION 2147746064

#define DSSCL_PRIORITY 2

#define DSERR_OUTOFMEMORY 2147942414

#define DSERR_DS8_REQUIRED 2289565886

#define DSFX_I3DL2REVERB_REFLECTIONS_MAX 1000

#define DSBCAPS_CTRL3D 16

#define DSBSTATUS_TERMINATED 32

#define DSBCAPS_CTRLPOSITIONNOTIFY 256

#define DSBPN_OFFSETSTOP 4294967295

#define DSFX_I3DL2REVERB_ROOM_DEFAULT -1000

#define DSBPLAY_TERMINATEBY_PRIORITY 32

#define DSBPLAY_LOCSOFTWARE 4

#define DSFXCHORUS_WAVE_TRIANGLE 0

#define DSBPLAY_LOCHARDWARE 2

#define DSFXFLANGER_PHASE_MAX 4

#define DSFX_I3DL2REVERB_REFLECTIONS_DEFAULT -2602

#define _FACDS 2168

#define DSERR_SENDLOOP 2289565896

#define DSFXFLANGER_PHASE_ZERO 2

#define DSBPAN_RIGHT 10000

#define DSFXCHORUS_PHASE_180 4

#define DSBSTATUS_BUFFERLOST 2

#define DSBLOCK_ENTIREBUFFER 2

#define DSCBSTATUS_LOOPING 2

#define DS3D_MINCONEANGLE 0

#define DSCBCAPS_CTRLFX 512

#define DSFX_I3DL2REVERB_ROOMHF_MIN -10000

#define KSPROPERTY_SUPPORT_SET 2

#define DSFXFLANGER_PHASE_180 4

#define DSCAPS_CONTINUOUSRATE 16

#define DSBCAPS_LOCHARDWARE 4

#define DSSPEAKER_MONO 2

#define DSBFREQUENCY_ORIGINAL 0

#define DSBPAN_CENTER 0

#define DSERR_ACCESSDENIED 2147942405

#define DSSPEAKER_STEREO 4

#define DSBCAPS_CTRLFREQUENCY 32

#define DSERR_NOINTERFACE 2147500034

#define DSERR_BADFORMAT 2289565796

#define DSBSIZE_MIN 4

#define DSSPEAKER_GEOMETRY_MAX 180

#define DSSPEAKER_SURROUND 5

#define DSBVOLUME_MAX 0

#define DS3D_IMMEDIATE 0

#define DSCFXR_LOCSOFTWARE 32

#define DSSPEAKER_QUAD 3

#define DSCAPS_PRIMARYSTEREO 2

#define DSCBSTART_LOOPING 1

#define DSCAPS_SECONDARYSTEREO 512

#define DS3D_DEFERRED 1

#define DSBSTATUS_LOCHARDWARE 8

#define DSBCAPS_GETCURRENTPOSITION2 65536

#define DSFXFLANGER_WAVE_TRIANGLE 0

#define DSCFXR_UNALLOCATED 64

#define DS_NO_VIRTUALIZATION 142082058

#define DSSCL_WRITEPRIMARY 4

#define DSFX_I3DL2REVERB_ROOM_MAX 0

#define DSERR_CONTROLUNAVAIL 2289565726

#define DSCFX_LOCSOFTWARE 2

#define DSFXCHORUS_PHASE_NEG_90 1

#define DSBCAPS_CTRLVOLUME 128

#define DSFX_I3DL2REVERB_ROOMHF_DEFAULT -100

#define DSFXCHORUS_PHASE_MAX 4

#define DSERR_PRIOLEVELNEEDED 2289565766

#define DSSPEAKER_GEOMETRY_NARROW 10

#define DSFXECHO_PANDELAY_MAX 1

#define DSERR_OBJECTNOTFOUND 2289570145

#define DSCBLOCK_ENTIREBUFFER 1

#define DSBSTATUS_LOOPING 4

#define DSFXFLANGER_PHASE_90 3

#define DSBCAPS_MUTE3DATMAXDISTANCE 131072

#define DSERR_BADSENDBUFFERGUID 2289565906

#define DSERR_INVALIDCALL 2289565746

#define DSFXFLANGER_WAVE_SIN 1

#define DSFX_I3DL2REVERB_REVERB_MIN -10000

#define DSBFREQUENCY_MIN 100

#define DSSPEAKER_HEADPHONE 1

#define DSFXGARGLE_RATEHZ_MAX 1000

#define DSERR_OTHERAPPHASPRIO 2289565856

#define DSFX_I3DL2REVERB_QUALITY_MIN 0

typedef struct IInternetBindInfo IInternetBindInfo, *PIInternetBindInfo;

typedef struct IInternetBindInfoVtbl IInternetBindInfoVtbl, *PIInternetBindInfoVtbl;

typedef struct _tagBINDINFO _tagBINDINFO, *P_tagBINDINFO;

typedef struct _tagBINDINFO BINDINFO;

typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;

struct _tagBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    STGMEDIUM stgmedData;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    SECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown *pUnk;
    DWORD dwReserved;
};

struct IInternetBindInfo {
    struct IInternetBindInfoVtbl *lpVtbl;
};

struct IInternetBindInfoVtbl {
    HRESULT (*QueryInterface)(struct IInternetBindInfo *, IID *, void **);
    ULONG (*AddRef)(struct IInternetBindInfo *);
    ULONG (*Release)(struct IInternetBindInfo *);
    HRESULT (*GetBindInfo)(struct IInternetBindInfo *, DWORD *, BINDINFO *);
    HRESULT (*GetBindString)(struct IInternetBindInfo *, ULONG, LPOLESTR *, ULONG, ULONG *);
};

typedef struct IInternetSessionVtbl IInternetSessionVtbl, *PIInternetSessionVtbl;

typedef struct IInternetSession IInternetSession, *PIInternetSession;

typedef struct IClassFactory IClassFactory, *PIClassFactory;

typedef struct IInternetProtocol IInternetProtocol, *PIInternetProtocol;

typedef struct IClassFactoryVtbl IClassFactoryVtbl, *PIClassFactoryVtbl;

typedef struct IInternetProtocolVtbl IInternetProtocolVtbl, *PIInternetProtocolVtbl;

typedef struct IInternetProtocolSink IInternetProtocolSink, *PIInternetProtocolSink;

typedef struct _tagPROTOCOLDATA _tagPROTOCOLDATA, *P_tagPROTOCOLDATA;

typedef struct _tagPROTOCOLDATA PROTOCOLDATA;

typedef struct IInternetProtocolSinkVtbl IInternetProtocolSinkVtbl, *PIInternetProtocolSinkVtbl;

struct IInternetSessionVtbl {
    HRESULT (*QueryInterface)(struct IInternetSession *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSession *);
    ULONG (*Release)(struct IInternetSession *);
    HRESULT (*RegisterNameSpace)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR, ULONG, LPCWSTR *, DWORD);
    HRESULT (*UnregisterNameSpace)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (*RegisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR);
    HRESULT (*UnregisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (*CreateBinding)(struct IInternetSession *, LPBC, LPCWSTR, struct IUnknown *, struct IUnknown **, struct IInternetProtocol **, DWORD);
    HRESULT (*SetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD, DWORD);
    HRESULT (*GetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD *, DWORD);
};

struct IInternetProtocolSink {
    struct IInternetProtocolSinkVtbl *lpVtbl;
};

struct _tagPROTOCOLDATA {
    DWORD grfFlags;
    DWORD dwState;
    LPVOID pData;
    ULONG cbData;
};

struct IInternetProtocolVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocol *);
    ULONG (*Release)(struct IInternetProtocol *);
    HRESULT (*Start)(struct IInternetProtocol *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (*Continue)(struct IInternetProtocol *, PROTOCOLDATA *);
    HRESULT (*Abort)(struct IInternetProtocol *, HRESULT, DWORD);
    HRESULT (*Terminate)(struct IInternetProtocol *, DWORD);
    HRESULT (*Suspend)(struct IInternetProtocol *);
    HRESULT (*Resume)(struct IInternetProtocol *);
    HRESULT (*Read)(struct IInternetProtocol *, void *, ULONG, ULONG *);
    HRESULT (*Seek)(struct IInternetProtocol *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (*LockRequest)(struct IInternetProtocol *, DWORD);
    HRESULT (*UnlockRequest)(struct IInternetProtocol *);
};

struct IInternetProtocol {
    struct IInternetProtocolVtbl *lpVtbl;
};

struct IInternetProtocolSinkVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolSink *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolSink *);
    ULONG (*Release)(struct IInternetProtocolSink *);
    HRESULT (*Switch)(struct IInternetProtocolSink *, PROTOCOLDATA *);
    HRESULT (*ReportProgress)(struct IInternetProtocolSink *, ULONG, LPCWSTR);
    HRESULT (*ReportData)(struct IInternetProtocolSink *, DWORD, ULONG, ULONG);
    HRESULT (*ReportResult)(struct IInternetProtocolSink *, HRESULT, DWORD, LPCWSTR);
};

struct IClassFactory {
    struct IClassFactoryVtbl *lpVtbl;
};

struct IClassFactoryVtbl {
    HRESULT (*QueryInterface)(struct IClassFactory *, IID *, void **);
    ULONG (*AddRef)(struct IClassFactory *);
    ULONG (*Release)(struct IClassFactory *);
    HRESULT (*CreateInstance)(struct IClassFactory *, struct IUnknown *, IID *, void **);
    HRESULT (*LockServer)(struct IClassFactory *, BOOL);
};

struct IInternetSession {
    struct IInternetSessionVtbl *lpVtbl;
};

typedef struct _tagSOFTDISTINFO _tagSOFTDISTINFO, *P_tagSOFTDISTINFO;

struct _tagSOFTDISTINFO {
    ULONG cbSize;
    DWORD dwFlags;
    DWORD dwAdState;
    LPWSTR szTitle;
    LPWSTR szAbstract;
    LPWSTR szHREF;
    DWORD dwInstalledVersionMS;
    DWORD dwInstalledVersionLS;
    DWORD dwUpdateVersionMS;
    DWORD dwUpdateVersionLS;
    DWORD dwAdvertisedVersionMS;
    DWORD dwAdvertisedVersionLS;
    DWORD dwReserved;
};

typedef enum __MIDL_IBindStatusCallback_0002 {
    BINDINFOF_URLENCODESTGMEDDATA=1,
    BINDINFOF_URLENCODEDEXTRAINFO=2
} __MIDL_IBindStatusCallback_0002;

typedef enum __MIDL_IBindStatusCallback_0002 BINDINFOF;

typedef struct IEncodingFilterFactory IEncodingFilterFactory, *PIEncodingFilterFactory;

typedef struct IEncodingFilterFactoryVtbl IEncodingFilterFactoryVtbl, *PIEncodingFilterFactoryVtbl;

typedef struct _tagDATAINFO _tagDATAINFO, *P_tagDATAINFO;

typedef struct _tagDATAINFO DATAINFO;

typedef struct IDataFilter IDataFilter, *PIDataFilter;

typedef struct IDataFilterVtbl IDataFilterVtbl, *PIDataFilterVtbl;

struct IEncodingFilterFactory {
    struct IEncodingFilterFactoryVtbl *lpVtbl;
};

struct _tagDATAINFO {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
};

struct IDataFilterVtbl {
    HRESULT (*QueryInterface)(struct IDataFilter *, IID *, void **);
    ULONG (*AddRef)(struct IDataFilter *);
    ULONG (*Release)(struct IDataFilter *);
    HRESULT (*DoEncode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (*DoDecode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (*SetEncodingLevel)(struct IDataFilter *, DWORD);
};

struct IDataFilter {
    struct IDataFilterVtbl *lpVtbl;
};

struct IEncodingFilterFactoryVtbl {
    HRESULT (*QueryInterface)(struct IEncodingFilterFactory *, IID *, void **);
    ULONG (*AddRef)(struct IEncodingFilterFactory *);
    ULONG (*Release)(struct IEncodingFilterFactory *);
    HRESULT (*FindBestFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, DATAINFO, struct IDataFilter **);
    HRESULT (*GetDefaultFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, struct IDataFilter **);
};

typedef struct _tagRemBINDINFO _tagRemBINDINFO, *P_tagRemBINDINFO;

typedef struct _tagRemBINDINFO RemBINDINFO;

typedef struct _REMSECURITY_ATTRIBUTES _REMSECURITY_ATTRIBUTES, *P_REMSECURITY_ATTRIBUTES;

typedef struct _REMSECURITY_ATTRIBUTES REMSECURITY_ATTRIBUTES;

struct _REMSECURITY_ATTRIBUTES {
    DWORD nLength;
    DWORD lpSecurityDescriptor;
    BOOL bInheritHandle;
};

struct _tagRemBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    REMSECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown *pUnk;
    DWORD dwReserved;
};

typedef enum __MIDL_IMonikerProp_0001 {
    MIMETYPEPROP=0
} __MIDL_IMonikerProp_0001;

typedef struct IInternetThreadSwitch IInternetThreadSwitch, *PIInternetThreadSwitch;

typedef struct IInternetThreadSwitchVtbl IInternetThreadSwitchVtbl, *PIInternetThreadSwitchVtbl;

struct IInternetThreadSwitch {
    struct IInternetThreadSwitchVtbl *lpVtbl;
};

struct IInternetThreadSwitchVtbl {
    HRESULT (*QueryInterface)(struct IInternetThreadSwitch *, IID *, void **);
    ULONG (*AddRef)(struct IInternetThreadSwitch *);
    ULONG (*Release)(struct IInternetThreadSwitch *);
    HRESULT (*Prepare)(struct IInternetThreadSwitch *);
    HRESULT (*Continue)(struct IInternetThreadSwitch *);
};

typedef struct IHttpSecurity IHttpSecurity, *PIHttpSecurity;

typedef struct IHttpSecurityVtbl IHttpSecurityVtbl, *PIHttpSecurityVtbl;

struct IHttpSecurity {
    struct IHttpSecurityVtbl *lpVtbl;
};

struct IHttpSecurityVtbl {
    HRESULT (*QueryInterface)(struct IHttpSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IHttpSecurity *);
    ULONG (*Release)(struct IHttpSecurity *);
    HRESULT (*GetWindow)(struct IHttpSecurity *, GUID *, HWND *);
    HRESULT (*OnSecurityProblem)(struct IHttpSecurity *, DWORD);
};

typedef struct ICatalogFileInfo ICatalogFileInfo, *PICatalogFileInfo;

typedef struct ICatalogFileInfo *LPCATALOGFILEINFO;

typedef struct ICatalogFileInfoVtbl ICatalogFileInfoVtbl, *PICatalogFileInfoVtbl;

struct ICatalogFileInfoVtbl {
    HRESULT (*QueryInterface)(struct ICatalogFileInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICatalogFileInfo *);
    ULONG (*Release)(struct ICatalogFileInfo *);
    HRESULT (*GetCatalogFile)(struct ICatalogFileInfo *, LPSTR *);
    HRESULT (*GetJavaTrust)(struct ICatalogFileInfo *, void **);
};

struct ICatalogFileInfo {
    struct ICatalogFileInfoVtbl *lpVtbl;
};

typedef struct IWinInetInfo IWinInetInfo, *PIWinInetInfo;

typedef struct IWinInetInfoVtbl IWinInetInfoVtbl, *PIWinInetInfoVtbl;

struct IWinInetInfoVtbl {
    HRESULT (*QueryInterface)(struct IWinInetInfo *, IID *, void **);
    ULONG (*AddRef)(struct IWinInetInfo *);
    ULONG (*Release)(struct IWinInetInfo *);
    HRESULT (*QueryOption)(struct IWinInetInfo *, DWORD, LPVOID, DWORD *);
};

struct IWinInetInfo {
    struct IWinInetInfoVtbl *lpVtbl;
};

typedef struct IBindStatusCallback IBindStatusCallback, *PIBindStatusCallback;

typedef struct IBindStatusCallback *LPBINDSTATUSCALLBACK;

typedef struct IBindStatusCallbackVtbl IBindStatusCallbackVtbl, *PIBindStatusCallbackVtbl;

typedef struct IBinding IBinding, *PIBinding;

typedef struct IBindingVtbl IBindingVtbl, *PIBindingVtbl;

struct IBinding {
    struct IBindingVtbl *lpVtbl;
};

struct IBindingVtbl {
    HRESULT (*QueryInterface)(struct IBinding *, IID *, void **);
    ULONG (*AddRef)(struct IBinding *);
    ULONG (*Release)(struct IBinding *);
    HRESULT (*Abort)(struct IBinding *);
    HRESULT (*Suspend)(struct IBinding *);
    HRESULT (*Resume)(struct IBinding *);
    HRESULT (*SetPriority)(struct IBinding *, LONG);
    HRESULT (*GetPriority)(struct IBinding *, LONG *);
    HRESULT (*GetBindResult)(struct IBinding *, CLSID *, DWORD *, LPOLESTR *, DWORD *);
};

struct IBindStatusCallback {
    struct IBindStatusCallbackVtbl *lpVtbl;
};

struct IBindStatusCallbackVtbl {
    HRESULT (*QueryInterface)(struct IBindStatusCallback *, IID *, void **);
    ULONG (*AddRef)(struct IBindStatusCallback *);
    ULONG (*Release)(struct IBindStatusCallback *);
    HRESULT (*OnStartBinding)(struct IBindStatusCallback *, DWORD, struct IBinding *);
    HRESULT (*GetPriority)(struct IBindStatusCallback *, LONG *);
    HRESULT (*OnLowResource)(struct IBindStatusCallback *, DWORD);
    HRESULT (*OnProgress)(struct IBindStatusCallback *, ULONG, ULONG, ULONG, LPCWSTR);
    HRESULT (*OnStopBinding)(struct IBindStatusCallback *, HRESULT, LPCWSTR);
    HRESULT (*GetBindInfo)(struct IBindStatusCallback *, DWORD *, BINDINFO *);
    HRESULT (*OnDataAvailable)(struct IBindStatusCallback *, DWORD, DWORD, FORMATETC *, STGMEDIUM *);
    HRESULT (*OnObjectAvailable)(struct IBindStatusCallback *, IID *, struct IUnknown *);
};

typedef struct IInternetZoneManagerVtbl IInternetZoneManagerVtbl, *PIInternetZoneManagerVtbl;

typedef struct IInternetZoneManager IInternetZoneManager, *PIInternetZoneManager;

typedef struct _ZONEATTRIBUTES _ZONEATTRIBUTES, *P_ZONEATTRIBUTES;

typedef struct _ZONEATTRIBUTES ZONEATTRIBUTES;

typedef enum _URLZONEREG {
    URLZONEREG_DEFAULT=0,
    URLZONEREG_HKLM=1,
    URLZONEREG_HKCU=2
} _URLZONEREG;

typedef enum _URLZONEREG URLZONEREG;

struct _ZONEATTRIBUTES {
    ULONG cbSize;
    WCHAR szDisplayName[260];
    WCHAR szDescription[200];
    WCHAR szIconPath[260];
    DWORD dwTemplateMinLevel;
    DWORD dwTemplateRecommended;
    DWORD dwTemplateCurrentLevel;
    DWORD dwFlags;
};

struct IInternetZoneManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetZoneManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetZoneManager *);
    ULONG (*Release)(struct IInternetZoneManager *);
    HRESULT (*GetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (*SetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (*GetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE **, DWORD *, URLZONEREG);
    HRESULT (*SetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE *, DWORD, URLZONEREG);
    HRESULT (*GetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (*SetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (*PromptAction)(struct IInternetZoneManager *, DWORD, HWND, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*LogAction)(struct IInternetZoneManager *, DWORD, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*CreateZoneEnumerator)(struct IInternetZoneManager *, DWORD *, DWORD *, DWORD);
    HRESULT (*GetZoneAt)(struct IInternetZoneManager *, DWORD, DWORD, DWORD *);
    HRESULT (*DestroyZoneEnumerator)(struct IInternetZoneManager *, DWORD);
    HRESULT (*CopyTemplatePoliciesToZone)(struct IInternetZoneManager *, DWORD, DWORD, DWORD);
};

struct IInternetZoneManager {
    struct IInternetZoneManagerVtbl *lpVtbl;
};

typedef struct IHttpNegotiate2Vtbl IHttpNegotiate2Vtbl, *PIHttpNegotiate2Vtbl;

typedef struct IHttpNegotiate2 IHttpNegotiate2, *PIHttpNegotiate2;

struct IHttpNegotiate2Vtbl {
    HRESULT (*QueryInterface)(struct IHttpNegotiate2 *, IID *, void **);
    ULONG (*AddRef)(struct IHttpNegotiate2 *);
    ULONG (*Release)(struct IHttpNegotiate2 *);
    HRESULT (*BeginningTransaction)(struct IHttpNegotiate2 *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (*OnResponse)(struct IHttpNegotiate2 *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
    HRESULT (*GetRootSecurityId)(struct IHttpNegotiate2 *, BYTE *, DWORD *, DWORD_PTR);
};

struct IHttpNegotiate2 {
    struct IHttpNegotiate2Vtbl *lpVtbl;
};

typedef struct IHttpNegotiateVtbl IHttpNegotiateVtbl, *PIHttpNegotiateVtbl;

typedef struct IHttpNegotiate IHttpNegotiate, *PIHttpNegotiate;

struct IHttpNegotiate {
    struct IHttpNegotiateVtbl *lpVtbl;
};

struct IHttpNegotiateVtbl {
    HRESULT (*QueryInterface)(struct IHttpNegotiate *, IID *, void **);
    ULONG (*AddRef)(struct IHttpNegotiate *);
    ULONG (*Release)(struct IHttpNegotiate *);
    HRESULT (*BeginningTransaction)(struct IHttpNegotiate *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (*OnResponse)(struct IHttpNegotiate *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
};

typedef struct IInternetProtocolRootVtbl IInternetProtocolRootVtbl, *PIInternetProtocolRootVtbl;

typedef struct IInternetProtocolRoot IInternetProtocolRoot, *PIInternetProtocolRoot;

struct IInternetProtocolRootVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolRoot *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolRoot *);
    ULONG (*Release)(struct IInternetProtocolRoot *);
    HRESULT (*Start)(struct IInternetProtocolRoot *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (*Continue)(struct IInternetProtocolRoot *, PROTOCOLDATA *);
    HRESULT (*Abort)(struct IInternetProtocolRoot *, HRESULT, DWORD);
    HRESULT (*Terminate)(struct IInternetProtocolRoot *, DWORD);
    HRESULT (*Suspend)(struct IInternetProtocolRoot *);
    HRESULT (*Resume)(struct IInternetProtocolRoot *);
};

struct IInternetProtocolRoot {
    struct IInternetProtocolRootVtbl *lpVtbl;
};

typedef struct IWinInetHttpInfo IWinInetHttpInfo, *PIWinInetHttpInfo;

typedef struct IWinInetHttpInfoVtbl IWinInetHttpInfoVtbl, *PIWinInetHttpInfoVtbl;

struct IWinInetHttpInfo {
    struct IWinInetHttpInfoVtbl *lpVtbl;
};

struct IWinInetHttpInfoVtbl {
    HRESULT (*QueryInterface)(struct IWinInetHttpInfo *, IID *, void **);
    ULONG (*AddRef)(struct IWinInetHttpInfo *);
    ULONG (*Release)(struct IWinInetHttpInfo *);
    HRESULT (*QueryOption)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *);
    HRESULT (*QueryInfo)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *, DWORD *, DWORD *);
};

typedef struct IWindowForBindingUI IWindowForBindingUI, *PIWindowForBindingUI;

typedef struct IWindowForBindingUI *LPWINDOWFORBINDINGUI;

typedef struct IWindowForBindingUIVtbl IWindowForBindingUIVtbl, *PIWindowForBindingUIVtbl;

struct IWindowForBindingUI {
    struct IWindowForBindingUIVtbl *lpVtbl;
};

struct IWindowForBindingUIVtbl {
    HRESULT (*QueryInterface)(struct IWindowForBindingUI *, IID *, void **);
    ULONG (*AddRef)(struct IWindowForBindingUI *);
    ULONG (*Release)(struct IWindowForBindingUI *);
    HRESULT (*GetWindow)(struct IWindowForBindingUI *, GUID *, HWND *);
};

typedef struct IInternetHostSecurityManagerVtbl IInternetHostSecurityManagerVtbl, *PIInternetHostSecurityManagerVtbl;

typedef struct IInternetHostSecurityManager IInternetHostSecurityManager, *PIInternetHostSecurityManager;

struct IInternetHostSecurityManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetHostSecurityManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetHostSecurityManager *);
    ULONG (*Release)(struct IInternetHostSecurityManager *);
    HRESULT (*GetSecurityId)(struct IInternetHostSecurityManager *, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (*ProcessUrlAction)(struct IInternetHostSecurityManager *, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (*QueryCustomPolicy)(struct IInternetHostSecurityManager *, GUID *, BYTE **, DWORD *, BYTE *, DWORD, DWORD);
};

struct IInternetHostSecurityManager {
    struct IInternetHostSecurityManagerVtbl *lpVtbl;
};

typedef struct IInternetProtocolSink *LPIINTERNETPROTOCOLSINK;

typedef struct IWrappedProtocol IWrappedProtocol, *PIWrappedProtocol;

typedef struct IWrappedProtocolVtbl IWrappedProtocolVtbl, *PIWrappedProtocolVtbl;

struct IWrappedProtocolVtbl {
    HRESULT (*QueryInterface)(struct IWrappedProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IWrappedProtocol *);
    ULONG (*Release)(struct IWrappedProtocol *);
    HRESULT (*GetWrapperCode)(struct IWrappedProtocol *, LONG *, DWORD_PTR);
};

struct IWrappedProtocol {
    struct IWrappedProtocolVtbl *lpVtbl;
};

typedef enum _tagPARSEACTION {
    PARSE_CANONICALIZE=1,
    PARSE_FRIENDLY=2,
    PARSE_SECURITY_URL=3,
    PARSE_ROOTDOCUMENT=4,
    PARSE_DOCUMENT=5,
    PARSE_ANCHOR=6,
    PARSE_ENCODE=7,
    PARSE_DECODE=8,
    PARSE_PATH_FROM_URL=9,
    PARSE_URL_FROM_PATH=10,
    PARSE_MIME=11,
    PARSE_SERVER=12,
    PARSE_SCHEMA=13,
    PARSE_SITE=14,
    PARSE_DOMAIN=15,
    PARSE_LOCATION=16,
    PARSE_SECURITY_DOMAIN=17,
    PARSE_ESCAPE=18,
    PARSE_UNESCAPE=19
} _tagPARSEACTION;

typedef enum _tagPARSEACTION PARSEACTION;

typedef enum __MIDL_IBindStatusCallback_0005 {
    BINDINFO_OPTIONS_WININETFLAG=65536,
    BINDINFO_OPTIONS_ENABLE_UTF8=131072,
    BINDINFO_OPTIONS_DISABLE_UTF8=262144,
    BINDINFO_OPTIONS_USE_IE_ENCODING=524288,
    BINDINFO_OPTIONS_BINDTOOBJECT=1048576
} __MIDL_IBindStatusCallback_0005;

typedef enum __MIDL_IBindStatusCallback_0005 BINDINFO_OPTIONS;

typedef struct IHttpNegotiate *LPHTTPNEGOTIATE;

typedef enum _tagOIBDG_FLAGS {
    OIBDG_APARTMENTTHREADED=256,
    OIBDG_DATAONLY=4096
} _tagOIBDG_FLAGS;

typedef enum __MIDL_IBindStatusCallback_0001 {
    BINDVERB_GET=0,
    BINDVERB_POST=1,
    BINDVERB_PUT=2,
    BINDVERB_CUSTOM=3
} __MIDL_IBindStatusCallback_0001;

typedef enum __MIDL_IBindStatusCallback_0001 BINDVERB;

typedef enum __MIDL_IBindStatusCallback_0006 {
    BSCF_FIRSTDATANOTIFICATION=1,
    BSCF_INTERMEDIATEDATANOTIFICATION=2,
    BSCF_LASTDATANOTIFICATION=4,
    BSCF_DATAFULLYAVAILABLE=8,
    BSCF_AVAILABLEDATASIZEUNKNOWN=16
} __MIDL_IBindStatusCallback_0006;

typedef enum __MIDL_IBindStatusCallback_0006 BSCF;

typedef enum __MIDL_IBindStatusCallback_0003 {
    BINDF_ASYNCHRONOUS=1,
    BINDF_ASYNCSTORAGE=2,
    BINDF_NOPROGRESSIVERENDERING=4,
    BINDF_OFFLINEOPERATION=8,
    BINDF_GETNEWESTVERSION=16,
    BINDF_NOWRITECACHE=32,
    BINDF_NEEDFILE=64,
    BINDF_PULLDATA=128,
    BINDF_IGNORESECURITYPROBLEM=256,
    BINDF_RESYNCHRONIZE=512,
    BINDF_HYPERLINK=1024,
    BINDF_NO_UI=2048,
    BINDF_SILENTOPERATION=4096,
    BINDF_PRAGMA_NO_CACHE=8192,
    BINDF_GETCLASSOBJECT=16384,
    BINDF_RESERVED_1=32768,
    BINDF_FREE_THREADED=65536,
    BINDF_DIRECT_READ=131072,
    BINDF_FORMS_SUBMIT=262144,
    BINDF_GETFROMCACHE_IF_NET_FAIL=524288,
    BINDF_FROMURLMON=1048576,
    BINDF_FWD_BACK=2097152,
    BINDF_PREFERDEFAULTHANDLER=4194304,
    BINDF_ENFORCERESTRICTED=8388608
} __MIDL_IBindStatusCallback_0003;

typedef enum __MIDL_IBindStatusCallback_0003 BINDF;

typedef struct _tagPROTOCOLFILTERDATA _tagPROTOCOLFILTERDATA, *P_tagPROTOCOLFILTERDATA;

typedef struct _tagPROTOCOLFILTERDATA PROTOCOLFILTERDATA;

struct _tagPROTOCOLFILTERDATA {
    DWORD cbSize;
    struct IInternetProtocolSink *pProtocolSink;
    struct IInternetProtocol *pProtocol;
    struct IUnknown *pUnk;
    DWORD dwFilterFlags;
};

typedef enum _tagPI_FLAGS {
    PI_PARSE_URL=1,
    PI_FILTER_MODE=2,
    PI_FORCE_ASYNC=4,
    PI_USE_WORKERTHREAD=8,
    PI_MIMEVERIFICATION=16,
    PI_CLSIDLOOKUP=32,
    PI_DATAPROGRESS=64,
    PI_SYNCHRONOUS=128,
    PI_APARTMENTTHREADED=256,
    PI_CLASSINSTALL=512,
    PI_PASSONBINDCTX=8192,
    PI_LOADAPPDIRECT=16384,
    PI_NOMIMEHANDLER=32768,
    PD_FORCE_SWITCH=65536,
    PI_PREFERDEFAULTHANDLER=131072
} _tagPI_FLAGS;

typedef enum __MIDL_IInternetZoneManager_0002 {
    ZAFLAGS_CUSTOM_EDIT=1,
    ZAFLAGS_ADD_SITES=2,
    ZAFLAGS_REQUIRE_VERIFICATION=4,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE=8,
    ZAFLAGS_INCLUDE_INTRANET_SITES=16,
    ZAFLAGS_NO_UI=32,
    ZAFLAGS_SUPPORTS_VERIFICATION=64,
    ZAFLAGS_UNC_AS_INTRANET=128
} __MIDL_IInternetZoneManager_0002;

typedef enum __MIDL_IInternetZoneManager_0002 ZAFLAGS;

typedef struct _tagHIT_LOGGING_INFO _tagHIT_LOGGING_INFO, *P_tagHIT_LOGGING_INFO;

typedef struct _tagHIT_LOGGING_INFO HIT_LOGGING_INFO;

struct _tagHIT_LOGGING_INFO {
    DWORD dwStructSize;
    LPSTR lpszLoggedUrlName;
    SYSTEMTIME StartTime;
    SYSTEMTIME EndTime;
    LPSTR lpszExtendedInfo;
};

typedef struct IInternetSecurityManager IInternetSecurityManager, *PIInternetSecurityManager;

typedef struct IInternetSecurityManagerVtbl IInternetSecurityManagerVtbl, *PIInternetSecurityManagerVtbl;

typedef struct IInternetSecurityMgrSite IInternetSecurityMgrSite, *PIInternetSecurityMgrSite;

typedef struct IInternetSecurityMgrSiteVtbl IInternetSecurityMgrSiteVtbl, *PIInternetSecurityMgrSiteVtbl;

struct IInternetSecurityManager {
    struct IInternetSecurityManagerVtbl *lpVtbl;
};

struct IInternetSecurityManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetSecurityManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSecurityManager *);
    ULONG (*Release)(struct IInternetSecurityManager *);
    HRESULT (*SetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite *);
    HRESULT (*GetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite **);
    HRESULT (*MapUrlToZone)(struct IInternetSecurityManager *, LPCWSTR, DWORD *, DWORD);
    HRESULT (*GetSecurityId)(struct IInternetSecurityManager *, LPCWSTR, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (*ProcessUrlAction)(struct IInternetSecurityManager *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (*QueryCustomPolicy)(struct IInternetSecurityManager *, LPCWSTR, GUID *, BYTE **, DWORD *, BYTE *, DWORD, DWORD);
    HRESULT (*SetZoneMapping)(struct IInternetSecurityManager *, DWORD, LPCWSTR, DWORD);
    HRESULT (*GetZoneMappings)(struct IInternetSecurityManager *, DWORD, struct IEnumString **, DWORD);
};

struct IInternetSecurityMgrSite {
    struct IInternetSecurityMgrSiteVtbl *lpVtbl;
};

struct IInternetSecurityMgrSiteVtbl {
    HRESULT (*QueryInterface)(struct IInternetSecurityMgrSite *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSecurityMgrSite *);
    ULONG (*Release)(struct IInternetSecurityMgrSite *);
    HRESULT (*GetWindow)(struct IInternetSecurityMgrSite *, HWND *);
    HRESULT (*EnableModeless)(struct IInternetSecurityMgrSite *, BOOL);
};

typedef struct tagRemFORMATETC tagRemFORMATETC, *PtagRemFORMATETC;

typedef struct tagRemFORMATETC RemFORMATETC;

struct tagRemFORMATETC {
    DWORD cfFormat;
    DWORD ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

typedef struct IInternetProtocolInfo IInternetProtocolInfo, *PIInternetProtocolInfo;

typedef struct IInternetProtocolInfoVtbl IInternetProtocolInfoVtbl, *PIInternetProtocolInfoVtbl;

typedef enum _tagQUERYOPTION {
    QUERY_EXPIRATION_DATE=1,
    QUERY_TIME_OF_LAST_CHANGE=2,
    QUERY_CONTENT_ENCODING=3,
    QUERY_CONTENT_TYPE=4,
    QUERY_REFRESH=5,
    QUERY_RECOMBINE=6,
    QUERY_CAN_NAVIGATE=7,
    QUERY_USES_NETWORK=8,
    QUERY_IS_CACHED=9,
    QUERY_IS_INSTALLEDENTRY=10,
    QUERY_IS_CACHED_OR_MAPPED=11,
    QUERY_USES_CACHE=12,
    QUERY_IS_SECURE=13,
    QUERY_IS_SAFE=14
} _tagQUERYOPTION;

typedef enum _tagQUERYOPTION QUERYOPTION;

struct IInternetProtocolInfoVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolInfo *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolInfo *);
    ULONG (*Release)(struct IInternetProtocolInfo *);
    HRESULT (*ParseUrl)(struct IInternetProtocolInfo *, LPCWSTR, PARSEACTION, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (*CombineUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (*CompareUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*QueryInfo)(struct IInternetProtocolInfo *, LPCWSTR, QUERYOPTION, DWORD, LPVOID, DWORD, DWORD *, DWORD);
};

struct IInternetProtocolInfo {
    struct IInternetProtocolInfoVtbl *lpVtbl;
};

typedef enum __MIDL_IInternetZoneManager_0001 {
    MAX_ZONE_DESCRIPTION=200,
    MAX_ZONE_PATH=260
} __MIDL_IInternetZoneManager_0001;

typedef struct IPersistMoniker IPersistMoniker, *PIPersistMoniker;

typedef struct IPersistMonikerVtbl IPersistMonikerVtbl, *PIPersistMonikerVtbl;

struct IPersistMoniker {
    struct IPersistMonikerVtbl *lpVtbl;
};

struct IPersistMonikerVtbl {
    HRESULT (*QueryInterface)(struct IPersistMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IPersistMoniker *);
    ULONG (*Release)(struct IPersistMoniker *);
    HRESULT (*GetClassID)(struct IPersistMoniker *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistMoniker *);
    HRESULT (*Load)(struct IPersistMoniker *, BOOL, struct IMoniker *, LPBC, DWORD);
    HRESULT (*Save)(struct IPersistMoniker *, struct IMoniker *, LPBC, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistMoniker *, struct IMoniker *, LPBC);
    HRESULT (*GetCurMoniker)(struct IPersistMoniker *, struct IMoniker **);
};

typedef struct ICodeInstall ICodeInstall, *PICodeInstall;

typedef struct ICodeInstall *LPCODEINSTALL;

typedef struct ICodeInstallVtbl ICodeInstallVtbl, *PICodeInstallVtbl;

struct ICodeInstallVtbl {
    HRESULT (*QueryInterface)(struct ICodeInstall *, IID *, void **);
    ULONG (*AddRef)(struct ICodeInstall *);
    ULONG (*Release)(struct ICodeInstall *);
    HRESULT (*GetWindow)(struct ICodeInstall *, GUID *, HWND *);
    HRESULT (*OnCodeInstallProblem)(struct ICodeInstall *, ULONG, LPCWSTR, LPCWSTR, DWORD);
};

struct ICodeInstall {
    struct ICodeInstallVtbl *lpVtbl;
};

typedef struct IInternetProtocolSinkStackable IInternetProtocolSinkStackable, *PIInternetProtocolSinkStackable;

typedef struct IInternetProtocolSinkStackableVtbl IInternetProtocolSinkStackableVtbl, *PIInternetProtocolSinkStackableVtbl;

struct IInternetProtocolSinkStackableVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolSinkStackable *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolSinkStackable *);
    ULONG (*Release)(struct IInternetProtocolSinkStackable *);
    HRESULT (*SwitchSink)(struct IInternetProtocolSinkStackable *, struct IInternetProtocolSink *);
    HRESULT (*CommitSwitch)(struct IInternetProtocolSinkStackable *);
    HRESULT (*RollbackSwitch)(struct IInternetProtocolSinkStackable *);
};

struct IInternetProtocolSinkStackable {
    struct IInternetProtocolSinkStackableVtbl *lpVtbl;
};

typedef enum __MIDL_IInternetSecurityManager_0001 {
    PUAF_DEFAULT=0,
    PUAF_NOUI=1,
    PUAF_ISFILE=2,
    PUAF_WARN_IF_DENIED=4,
    PUAF_FORCEUI_FOREGROUND=8,
    PUAF_CHECK_TIFS=16,
    PUAF_DONTCHECKBOXINDIALOG=32,
    PUAF_TRUSTED=64,
    PUAF_ACCEPT_WILDCARD_SCHEME=128,
    PUAF_ENFORCERESTRICTED=256
} __MIDL_IInternetSecurityManager_0001;

typedef enum __MIDL_IInternetSecurityManager_0001 PUAF;

typedef struct ISoftDistExt ISoftDistExt, *PISoftDistExt;

typedef struct ISoftDistExtVtbl ISoftDistExtVtbl, *PISoftDistExtVtbl;

typedef struct IXMLElement IXMLElement, *PIXMLElement;

typedef struct _tagSOFTDISTINFO *LPSOFTDISTINFO;

typedef struct _tagCODEBASEHOLD _tagCODEBASEHOLD, *P_tagCODEBASEHOLD;

typedef struct _tagCODEBASEHOLD *LPCODEBASEHOLD;

typedef struct IXMLElementVtbl IXMLElementVtbl, *PIXMLElementVtbl;

typedef struct IXMLElementCollection IXMLElementCollection, *PIXMLElementCollection;

typedef struct IXMLElementCollectionVtbl IXMLElementCollectionVtbl, *PIXMLElementCollectionVtbl;

struct IXMLElementCollection {
    struct IXMLElementCollectionVtbl *lpVtbl;
};

struct IXMLElement {
    struct IXMLElementVtbl *lpVtbl;
};

struct ISoftDistExtVtbl {
    HRESULT (*QueryInterface)(struct ISoftDistExt *, IID *, void **);
    ULONG (*AddRef)(struct ISoftDistExt *);
    ULONG (*Release)(struct ISoftDistExt *);
    HRESULT (*ProcessSoftDist)(struct ISoftDistExt *, LPCWSTR, struct IXMLElement *, LPSOFTDISTINFO);
    HRESULT (*GetFirstCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (*GetNextCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (*AsyncInstallDistributionUnit)(struct ISoftDistExt *, struct IBindCtx *, LPVOID, DWORD, LPCODEBASEHOLD);
};

struct IXMLElementVtbl {
    HRESULT (*QueryInterface)(struct IXMLElement *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElement *);
    ULONG (*Release)(struct IXMLElement *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElement *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElement *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_tagName)(struct IXMLElement *, BSTR *);
    HRESULT (*put_tagName)(struct IXMLElement *, BSTR);
    HRESULT (*get_parent)(struct IXMLElement *, struct IXMLElement **);
    HRESULT (*setAttribute)(struct IXMLElement *, BSTR, VARIANT);
    HRESULT (*getAttribute)(struct IXMLElement *, BSTR, VARIANT *);
    HRESULT (*removeAttribute)(struct IXMLElement *, BSTR);
    HRESULT (*get_children)(struct IXMLElement *, struct IXMLElementCollection **);
    HRESULT (*get_type)(struct IXMLElement *, long *);
    HRESULT (*get_text)(struct IXMLElement *, BSTR *);
    HRESULT (*put_text)(struct IXMLElement *, BSTR);
    HRESULT (*addChild)(struct IXMLElement *, struct IXMLElement *, long, long);
    HRESULT (*removeChild)(struct IXMLElement *, struct IXMLElement *);
};

struct _tagCODEBASEHOLD {
    ULONG cbSize;
    LPWSTR szDistUnit;
    LPWSTR szCodeBase;
    DWORD dwVersionMS;
    DWORD dwVersionLS;
    DWORD dwStyle;
};

struct IXMLElementCollectionVtbl {
    HRESULT (*QueryInterface)(struct IXMLElementCollection *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElementCollection *);
    ULONG (*Release)(struct IXMLElementCollection *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElementCollection *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElementCollection *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElementCollection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElementCollection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*put_length)(struct IXMLElementCollection *, long);
    HRESULT (*get_length)(struct IXMLElementCollection *, long *);
    HRESULT (*get__newEnum)(struct IXMLElementCollection *, struct IUnknown **);
    HRESULT (*item)(struct IXMLElementCollection *, VARIANT, VARIANT, struct IDispatch **);
};

struct ISoftDistExt {
    struct ISoftDistExtVtbl *lpVtbl;
};

typedef struct IInternetThreadSwitch *LPIINTERNETTHREADSWITCH;

typedef struct IBindProtocol IBindProtocol, *PIBindProtocol;

typedef struct IBindProtocolVtbl IBindProtocolVtbl, *PIBindProtocolVtbl;

struct IBindProtocolVtbl {
    HRESULT (*QueryInterface)(struct IBindProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IBindProtocol *);
    ULONG (*Release)(struct IBindProtocol *);
    HRESULT (*CreateBinding)(struct IBindProtocol *, LPCWSTR, struct IBindCtx *, struct IBinding **);
};

struct IBindProtocol {
    struct IBindProtocolVtbl *lpVtbl;
};

typedef struct IInternet IInternet, *PIInternet;

typedef struct IInternetVtbl IInternetVtbl, *PIInternetVtbl;

struct IInternet {
    struct IInternetVtbl *lpVtbl;
};

struct IInternetVtbl {
    HRESULT (*QueryInterface)(struct IInternet *, IID *, void **);
    ULONG (*AddRef)(struct IInternet *);
    ULONG (*Release)(struct IInternet *);
};

typedef struct IMonikerProp IMonikerProp, *PIMonikerProp;

typedef struct IMonikerPropVtbl IMonikerPropVtbl, *PIMonikerPropVtbl;

typedef enum __MIDL_IMonikerProp_0001 MONIKERPROPERTY;

struct IMonikerProp {
    struct IMonikerPropVtbl *lpVtbl;
};

struct IMonikerPropVtbl {
    HRESULT (*QueryInterface)(struct IMonikerProp *, IID *, void **);
    ULONG (*AddRef)(struct IMonikerProp *);
    ULONG (*Release)(struct IMonikerProp *);
    HRESULT (*PutProperty)(struct IMonikerProp *, MONIKERPROPERTY, LPCWSTR);
};

typedef struct tagRemFORMATETC *LPREMFORMATETC;

typedef struct IInternetProtocolSinkStackable *LPIINTERNETPROTOCOLSINKStackable;

typedef enum __MIDL_IInternetSecurityManager_0002 {
    SZM_CREATE=0,
    SZM_DELETE=1
} __MIDL_IInternetSecurityManager_0002;

typedef enum __MIDL_IInternetSecurityManager_0002 SZM_FLAGS;

typedef struct IInternetSession *LPIINTERNETSESSION;

typedef struct IDataFilter *LPDATAFILTER;

typedef struct IInternetPriority IInternetPriority, *PIInternetPriority;

typedef struct IInternetPriorityVtbl IInternetPriorityVtbl, *PIInternetPriorityVtbl;

struct IInternetPriority {
    struct IInternetPriorityVtbl *lpVtbl;
};

struct IInternetPriorityVtbl {
    HRESULT (*QueryInterface)(struct IInternetPriority *, IID *, void **);
    ULONG (*AddRef)(struct IInternetPriority *);
    ULONG (*Release)(struct IInternetPriority *);
    HRESULT (*SetPriority)(struct IInternetPriority *, LONG);
    HRESULT (*GetPriority)(struct IInternetPriority *, LONG *);
};

typedef struct IBindHost IBindHost, *PIBindHost;

typedef struct IBindHost *LPBINDHOST;

typedef struct IBindHostVtbl IBindHostVtbl, *PIBindHostVtbl;

struct IBindHostVtbl {
    HRESULT (*QueryInterface)(struct IBindHost *, IID *, void **);
    ULONG (*AddRef)(struct IBindHost *);
    ULONG (*Release)(struct IBindHost *);
    HRESULT (*CreateMoniker)(struct IBindHost *, LPOLESTR, struct IBindCtx *, struct IMoniker **, DWORD);
    HRESULT (*MonikerBindToStorage)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void **);
    HRESULT (*MonikerBindToObject)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void **);
};

struct IBindHost {
    struct IBindHostVtbl *lpVtbl;
};

typedef enum __MIDL_ICodeInstall_0001 {
    CIP_DISK_FULL=0,
    CIP_ACCESS_DENIED=1,
    CIP_NEWER_VERSION_EXISTS=2,
    CIP_OLDER_VERSION_EXISTS=3,
    CIP_NAME_CONFLICT=4,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING=5,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT=6,
    CIP_UNSAFE_TO_ABORT=7,
    CIP_NEED_REBOOT=8
} __MIDL_ICodeInstall_0001;

typedef struct IBindProtocol *LPBINDPROTOCOL;

typedef enum __MIDL_IBindStatusCallback_0004 {
    URL_ENCODING_NONE=0,
    URL_ENCODING_ENABLE_UTF8=268435456,
    URL_ENCODING_DISABLE_UTF8=536870912
} __MIDL_IBindStatusCallback_0004;

typedef enum __MIDL_IBindStatusCallback_0004 URL_ENCODING;

typedef struct _tagStartParam _tagStartParam, *P_tagStartParam;

typedef struct _tagStartParam StartParam;

struct _tagStartParam {
    IID iid;
    struct IBindCtx *pIBindCtx;
    struct IUnknown *pItf;
};

typedef struct IInternetZoneManager *LPURLZONEMANAGER;

typedef enum tagURLTEMPLATE {
    URLTEMPLATE_CUSTOM=0,
    URLTEMPLATE_LOW=65536,
    URLTEMPLATE_PREDEFINED_MIN=65536,
    URLTEMPLATE_MEDLOW=66816,
    URLTEMPLATE_MEDIUM=69632,
    URLTEMPLATE_HIGH=73728,
    URLTEMPLATE_PREDEFINED_MAX=131072
} tagURLTEMPLATE;

typedef enum tagURLTEMPLATE URLTEMPLATE;

typedef struct IPersistMoniker *LPPERSISTMONIKER;

typedef struct IWrappedProtocol *LPIWRAPPEDPROTOCOL;

typedef struct _REMSECURITY_ATTRIBUTES *PREMSECURITY_ATTRIBUTES;

typedef struct _ZONEATTRIBUTES *LPZONEATTRIBUTES;

typedef enum tagURLZONE {
    URLZONE_LOCAL_MACHINE=0,
    URLZONE_PREDEFINED_MIN=0,
    URLZONE_INTRANET=1,
    URLZONE_TRUSTED=2,
    URLZONE_INTERNET=3,
    URLZONE_UNTRUSTED=4,
    URLZONE_PREDEFINED_MAX=999,
    URLZONE_USER_MIN=1000,
    URLZONE_USER_MAX=10000
} tagURLZONE;

typedef enum tagURLZONE URLZONE;

typedef enum __MIDL_ICodeInstall_0001 CIP_STATUS;

typedef enum _tagPSUACTION {
    PSU_DEFAULT=1,
    PSU_SECURITY_URL_ONLY=2
} _tagPSUACTION;

typedef enum _tagPSUACTION PSUACTION;

typedef struct IInternetProtocolRoot *LPIINTERNETPROTOCOLROOT;

typedef struct IAuthenticate IAuthenticate, *PIAuthenticate;

typedef struct IAuthenticateVtbl IAuthenticateVtbl, *PIAuthenticateVtbl;

struct IAuthenticate {
    struct IAuthenticateVtbl *lpVtbl;
};

struct IAuthenticateVtbl {
    HRESULT (*QueryInterface)(struct IAuthenticate *, IID *, void **);
    ULONG (*AddRef)(struct IAuthenticate *);
    ULONG (*Release)(struct IAuthenticate *);
    HRESULT (*Authenticate)(struct IAuthenticate *, HWND *, LPWSTR *, LPWSTR *);
};

typedef enum tagBINDSTRING {
    BINDSTRING_HEADERS=1,
    BINDSTRING_ACCEPT_MIMES=2,
    BINDSTRING_EXTRA_URL=3,
    BINDSTRING_LANGUAGE=4,
    BINDSTRING_USERNAME=5,
    BINDSTRING_PASSWORD=6,
    BINDSTRING_UA_PIXELS=7,
    BINDSTRING_UA_COLOR=8,
    BINDSTRING_OS=9,
    BINDSTRING_USER_AGENT=10,
    BINDSTRING_ACCEPT_ENCODINGS=11,
    BINDSTRING_POST_COOKIE=12,
    BINDSTRING_POST_DATA_MIME=13,
    BINDSTRING_URL=14,
    BINDSTRING_IID=15,
    BINDSTRING_FLAG_BIND_TO_OBJECT=16,
    BINDSTRING_PTR_BIND_CONTEXT=17
} tagBINDSTRING;

typedef enum tagBINDSTRING BINDSTRING;

typedef struct IInternetProtocolInfo *LPIINTERNETPROTOCOLINFO;

typedef struct IInternetBindInfo *LPIINTERNETBINDINFO;

typedef struct IEncodingFilterFactory *LPENCODINGFILTERFACTORY;

typedef struct IInternet *LPIINTERNET;

typedef struct _tagHIT_LOGGING_INFO *LPHIT_LOGGING_INFO;

typedef struct IInternetProtocol *LPIINTERNETPROTOCOL;

typedef enum _tagPI_FLAGS PI_FLAGS;

typedef struct _REMSECURITY_ATTRIBUTES *LPREMSECURITY_ATTRIBUTES;

typedef struct _tagSOFTDISTINFO SOFTDISTINFO;

typedef enum tagBINDSTATUS {
    BINDSTATUS_FINDINGRESOURCE=1,
    BINDSTATUS_CONNECTING=2,
    BINDSTATUS_REDIRECTING=3,
    BINDSTATUS_BEGINDOWNLOADDATA=4,
    BINDSTATUS_DOWNLOADINGDATA=5,
    BINDSTATUS_ENDDOWNLOADDATA=6,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS=7,
    BINDSTATUS_INSTALLINGCOMPONENTS=8,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS=9,
    BINDSTATUS_USINGCACHEDCOPY=10,
    BINDSTATUS_SENDINGREQUEST=11,
    BINDSTATUS_CLASSIDAVAILABLE=12,
    BINDSTATUS_MIMETYPEAVAILABLE=13,
    BINDSTATUS_CACHEFILENAMEAVAILABLE=14,
    BINDSTATUS_BEGINSYNCOPERATION=15,
    BINDSTATUS_ENDSYNCOPERATION=16,
    BINDSTATUS_BEGINUPLOADDATA=17,
    BINDSTATUS_UPLOADINGDATA=18,
    BINDSTATUS_ENDUPLOADDATA=19,
    BINDSTATUS_PROTOCOLCLASSID=20,
    BINDSTATUS_ENCODING=21,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE=22,
    BINDSTATUS_CLASSINSTALLLOCATION=23,
    BINDSTATUS_DECODING=24,
    BINDSTATUS_LOADINGMIMEHANDLER=25,
    BINDSTATUS_CONTENTDISPOSITIONATTACH=26,
    BINDSTATUS_FILTERREPORTMIMETYPE=27,
    BINDSTATUS_CLSIDCANINSTANTIATE=28,
    BINDSTATUS_IUNKNOWNAVAILABLE=29,
    BINDSTATUS_DIRECTBIND=30,
    BINDSTATUS_RAWMIMETYPE=31,
    BINDSTATUS_PROXYDETECTING=32,
    BINDSTATUS_ACCEPTRANGES=33,
    BINDSTATUS_COOKIE_SENT=34,
    BINDSTATUS_COMPACT_POLICY_RECEIVED=35,
    BINDSTATUS_COOKIE_SUPPRESSED=36,
    BINDSTATUS_COOKIE_STATE_UNKNOWN=37,
    BINDSTATUS_COOKIE_STATE_ACCEPT=38,
    BINDSTATUS_COOKIE_STATE_REJECT=39,
    BINDSTATUS_COOKIE_STATE_PROMPT=40,
    BINDSTATUS_COOKIE_STATE_LEASH=41,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE=42,
    BINDSTATUS_POLICY_HREF=43,
    BINDSTATUS_P3P_HEADER=44,
    BINDSTATUS_SESSION_COOKIE_RECEIVED=45,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED=46,
    BINDSTATUS_SESSION_COOKIES_ALLOWED=47
} tagBINDSTATUS;

typedef enum tagBINDSTATUS BINDSTATUS;

typedef struct IInternetPriority *LPIINTERNETPRIORITY;

typedef struct IWinInetInfo *LPWININETINFO;

typedef struct IHttpSecurity *LPHTTPSECURITY;

typedef struct IBinding *LPBINDING;

typedef struct CONFIRMSAFETY CONFIRMSAFETY, *PCONFIRMSAFETY;

struct CONFIRMSAFETY {
    CLSID clsid;
    struct IUnknown *pUnk;
    DWORD dwFlags;
};

typedef struct IHttpNegotiate2 *LPHTTPNEGOTIATE2;

typedef struct IAuthenticate *LPAUTHENTICATION;

typedef struct IWinInetHttpInfo *LPWININETHTTPINFO;

typedef enum _tagOIBDG_FLAGS OIBDG_FLAGS;

typedef struct IMonikerProp *LPMONIKERPROP;

typedef struct _tagCODEBASEHOLD CODEBASEHOLD;

#define URLACTION_HTML_MAX 6143

#define FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK 4

#define URLACTION_NETWORK_MIN 6656

#define URLACTION_CREDENTIALS_USE 6656

#define URLACTION_COOKIES_THIRD_PARTY 6661

#define INET_E_DEFAULT_ACTION 2148270097

#define SOFTDIST_FLAG_USAGE_AUTOINSTALL 4

#define URLACTION_SCRIPT_JAVA_USE 5122

#define URLACTION_ACTIVEX_RUN 4608

#define URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS 7426

#define URLACTION_NETWORK_CURR_MAX 6672

#define S_ASYNCHRONOUS 262632

#define INET_E_CANNOT_CONNECT 2148270084

#define URLACTION_HTML_FONT_DOWNLOAD 5636

#define CF_NULL 0

#define URLPOLICY_JAVA_HIGH 65536

#define URLPOLICY_LOG_ON_DISALLOW 128

#define PROTOCOLFLAG_NO_PICS_CHECK 1

#define URLPOLICY_DONTCHECKDLGBOX 256

#define URLACTION_COOKIES_ENABLED 6672

#define SOFTDIST_ADSTATE_INSTALLED 3

#define INET_E_QUERYOPTION_UNKNOWN 2148270099

#define INET_E_RESULT_DISPATCHED 2148270592

#define SOFTDIST_FLAG_DELETE_SUBSCRIPTION 8

#define URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY 4610

#define SOFTDIST_FLAG_USAGE_PRECACHE 2

#define INET_E_USE_DEFAULT_SETTING 2148270098

#define URLACTION_ACTIVEX_MIN 4608

#define URLACTION_ACTIVEX_CURR_MAX 4619

#define URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS 7428

#define URL_MK_NO_CANONICALIZE 2

#define URLPOLICY_CREDENTIALS_MUST_PROMPT_USER 65536

#define URLACTION_SHELL_FILE_DOWNLOAD 6147

#define URLACTION_HTML_SUBFRAME_NAVIGATE 5639

#define URLACTION_SCRIPT_MIN 5120

#define INET_E_SECURITY_PROBLEM 2148270094

#define URLACTION_SHELL_INSTALL_DTITEMS 6144

#define URLACTION_HTML_SUBMIT_FORMS 5633

#define URLACTION_ACTIVEX_TREATASUNTRUSTED 4613

#define URLACTION_SCRIPT_MAX 5631

#define FIEF_FLAG_FORCE_JITUI 1

#define URLPOLICY_DISALLOW 3

#define SOFTDIST_FLAG_USAGE_EMAIL 1

#define INET_E_OBJECT_NOT_FOUND 2148270086

#define INET_E_CANNOT_LOCK_REQUEST 2148270102

#define URLPOLICY_NOTIFY_ON_DISALLOW 32

#define INET_E_CANNOT_LOAD_DATA 2148270095

#define URLMON_OPTION_USERAGENT_REFRESH 268435458

#define URLPOLICY_JAVA_PROHIBIT 0

#define URLACTION_DOWNLOAD_MAX 4607

#define INET_E_ERROR_FIRST 2148270082

#define URLACTION_INFODELIVERY_NO_EDITING_CHANNELS 7425

#define URLACTION_INFODELIVERY_NO_ADDING_CHANNELS 7424

#define URLACTION_CHANNEL_SOFTDIST_MAX 7935

#define URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT 131072

#define URLPOLICY_ACTIVEX_CHECK_LIST 65536

#define URLPOLICY_NOTIFY_ON_ALLOW 16

#define URLACTION_SHELL_WEBVIEW_VERB 6149

#define MUTZ_ENFORCERESTRICTED 256

#define CFSTR_MIME_NULL 0

#define INET_E_DOWNLOAD_FAILURE 2148270088

#define URLACTION_JAVA_MAX 7423

#define FMFD_DEFAULT 0

#define URLACTION_HTML_SUBMIT_FORMS_FROM 5634

#define URLACTION_INFODELIVERY_MAX 7679

#define URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY 4609

#define URLACTION_JAVA_PERMISSIONS 7168

#define URLPOLICY_CREDENTIALS_SILENT_LOGON_OK 0

#define URLACTION_HTML_MIXED_CONTENT 5641

#define URLOSTRM_USECACHEDCOPY 2

#define SOFTDIST_ADSTATE_DOWNLOADED 2

#define URLACTION_COOKIES_SESSION 6659

#define URLACTION_CLIENT_CERT_PROMPT 6660

#define INET_E_CANNOT_INSTANTIATE_OBJECT 2148270096

#define URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL 196608

#define FIEF_FLAG_PEEK 2

#define WININETINFO_OPTION_LOCK_HANDLE 65534

#define URLACTION_SHELL_MIN 6144

#define INET_E_INVALID_REQUEST 2148270092

#define URL_MK_UNIFORM 1

#define URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS 7427

#define URLPOLICY_QUERY 1

#define URLACTION_JAVA_CURR_MAX 7168

#define URLACTION_CHANNEL_SOFTDIST_PERMISSIONS 7685

#define MUTZ_NOSAVEDFILECHECK 1

#define URLACTION_CROSS_DOMAIN_DATA 5126

#define URLACTION_HTML_SUBMIT_FORMS_TO 5635

#define URLPOLICY_CHANNEL_SOFTDIST_PRECACHE 131072

#define INET_E_NO_SESSION 2148270083

#define URLACTION_NETWORK_MAX 7167

#define INVALID_P_ROOT_SECURITY_ID -1

#define URLACTION_INFODELIVERY_CURR_MAX 7430

#define INET_E_CODE_DOWNLOAD_DECLINED 2148270336

#define URLOSTRM_USECACHEDCOPY_ONLY 1

#define SOFTDIST_ADSTATE_NONE 0

#define URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT 65536

#define URLACTION_HTML_MIN 5632

#define URLMON_OPTION_USERAGENT 268435457

#define INET_E_INVALID_URL 2148270082

#define INET_E_REDIRECT_FAILED 2148270100

#define URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS 7429

#define URLACTION_DOWNLOAD_SIGNED_ACTIVEX 4097

#define INET_E_RESOURCE_NOT_FOUND 2148270085

#define SOFTDIST_ADSTATE_AVAILABLE 1

#define INET_E_DATA_NOT_AVAILABLE 2148270087

#define INET_E_UNKNOWN_PROTOCOL 2148270093

#define URLACTION_SCRIPT_OVERRIDE_SAFETY 5121

#define INET_E_TERMINATED_BIND 2148270104

#define INET_E_REDIRECT_TO_DIR 2148270101

#define URLOSTRM_GETNEWESTVERSION 3

#define URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING 7430

#define URLPOLICY_AUTHENTICATE_MUTUAL_ONLY 196608

#define URLACTION_SCRIPT_CURR_MAX 5129

#define URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE 65536

#define URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX 4100

#define URLACTION_HTML_META_REFRESH 5640

#define MK_S_ASYNCHRONOUS 262632

#define INET_E_CANNOT_REPLACE_SFP_FILE 2148270848

#define URLACTION_SCRIPT_SAFE_ACTIVEX 5125

#define URLACTION_AUTHENTICATE_CLIENT 6657

#define URLACTION_HTML_JAVA_RUN 5637

#define URLACTION_ACTIVEX_MAX 5119

#define INET_E_ERROR_LAST 2148271361

#define FMFD_URLASFILENAME 1

#define URLACTION_SHELL_MOVE_OR_COPY 6146

#define INET_E_AUTHENTICATION_REQUIRED 2148270089

#define URLACTION_JAVA_MIN 7168

#define URLACTION_COOKIES_SESSION_THIRD_PARTY 6662

#define URLPOLICY_LOG_ON_ALLOW 64

#define URLACTION_CHANNEL_SOFTDIST_MIN 7680

#define URLPOLICY_JAVA_MEDIUM 131072

#define URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY 4611

#define URLACTION_DOWNLOAD_CURR_MAX 4100

#define CONFIRMSAFETYACTION_LOADOBJECT 1

#define URLPOLICY_JAVA_CUSTOM 8388608

#define URLACTION_SHELL_CURR_MAX 6159

#define URLPOLICY_JAVA_LOW 196608

#define URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY 196608

#define URLACTION_SCRIPT_PASTE 5127

#define INET_E_USE_DEFAULT_PROTOCOLHANDLER 2148270097

#define INET_E_CONNECTION_TIMEOUT 2148270091

#define URLACTION_SCRIPT_RUN 5120

#define URLACTION_MIN 4096

#define URLACTION_SHELL_VERB 6148

#define URLACTION_HTML_USERDATA_SAVE 5638

#define INET_E_NO_VALID_MEDIA 2148270090

#define MAX_SIZE_SECURITY_ID 512

#define URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY 4612

#define INET_E_REDIRECTING 2148270100

#define INET_E_USE_EXTEND_BINDING 2148270103

#define URL_MK_LEGACY 0

#define URLACTION_INFODELIVERY_MIN 7424

#define URLACTION_COOKIES 6658

#define URLACTION_DOWNLOAD_MIN 4096

#define URLPOLICY_MASK_PERMISSIONS 15

#define URLACTION_SHELL_MAX 6655

#define URLPOLICY_ALLOW 0

#define URLPOLICY_AUTHENTICATE_CLEARTEXT_OK 0

#define MKSYS_URLMONIKER 6

#define URLMON_OPTION_URL_ENCODING 268435460

typedef struct HGLRC__ HGLRC__, *PHGLRC__;

typedef struct HGLRC__ *HGLRC;

struct HGLRC__ {
    int unused;
};

typedef struct HFONT__ HFONT__, *PHFONT__;

struct HFONT__ {
    int unused;
};

typedef struct HUMPD__ HUMPD__, *PHUMPD__;

struct HUMPD__ {
    int unused;
};

typedef struct HBRUSH__ HBRUSH__, *PHBRUSH__;

struct HBRUSH__ {
    int unused;
};

typedef struct tagPOINT *PPOINT;

typedef struct HSTR__ HSTR__, *PHSTR__;

struct HSTR__ {
    int unused;
};

typedef struct HPEN__ HPEN__, *PHPEN__;

struct HPEN__ {
    int unused;
};

typedef struct HCOLORSPACE__ HCOLORSPACE__, *PHCOLORSPACE__;

struct HCOLORSPACE__ {
    int unused;
};

typedef struct HDESK__ HDESK__, *PHDESK__;

struct HDESK__ {
    int unused;
};

typedef struct HWINSTA__ HWINSTA__, *PHWINSTA__;

typedef struct HWINSTA__ *HWINSTA;

struct HWINSTA__ {
    int unused;
};

typedef struct HWINEVENTHOOK__ HWINEVENTHOOK__, *PHWINEVENTHOOK__;

struct HWINEVENTHOOK__ {
    int unused;
};

typedef struct _RECTL *LPRECTL;

typedef struct HACCEL__ HACCEL__, *PHACCEL__;

typedef struct HACCEL__ *HACCEL;

struct HACCEL__ {
    int unused;
};

typedef struct HRSRC__ HRSRC__, *PHRSRC__;

typedef struct HRSRC__ *HRSRC;

struct HRSRC__ {
    int unused;
};

typedef struct HRGN__ HRGN__, *PHRGN__;

struct HRGN__ {
    int unused;
};

typedef HICON HCURSOR;

typedef struct HFONT__ *HFONT;

typedef struct HHOOK__ HHOOK__, *PHHOOK__;

struct HHOOK__ {
    int unused;
};

typedef struct tagPOINTS *LPPOINTS;

typedef struct tagRECT *PRECT;

typedef struct HUMPD__ *HUMPD;

typedef struct tagSIZE *PSIZE;

typedef struct HSTR__ *HSTR;

typedef struct HDESK__ *HDESK;

typedef struct HCOLORSPACE__ *HCOLORSPACE;

typedef struct tagRECT *NPRECT;

typedef struct tagPOINT *LPPOINT;

typedef struct HPALETTE__ HPALETTE__, *PHPALETTE__;

struct HPALETTE__ {
    int unused;
};

typedef struct HRGN__ *HRGN;

typedef struct HHOOK__ *HHOOK;

typedef struct HBRUSH__ *HBRUSH;

typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;

typedef struct HPEN__ *HPEN;

typedef struct HPALETTE__ *HPALETTE;

typedef struct tagSIZE *LPSIZE;

typedef struct HMENU__ HMENU__, *PHMENU__;

typedef struct HMENU__ *HMENU;

struct HMENU__ {
    int unused;
};

typedef struct _RECTL *PRECTL;

typedef struct tagPOINTS *PPOINTS;

typedef HKEY *PHKEY;

typedef struct tagPOINT *NPPOINT;

typedef struct _POINTL *PPOINTL;

#define DM_MODIFY 8

#define DC_TRUETYPE 15

#define DM_COPY 2

#define TRUE 1

#define DC_PAPERSIZE 3

#define DC_ENUMRESOLUTIONS 13

#define DC_ORIENTATION 17

#define DC_DUPLEX 7

#define NULL 0

#define DC_MINEXTENT 4

#define DM_PROMPT 4

#define DC_VERSION 10

#define DC_EXTRA 9

#define DM_OUT_DEFAULT 1

#define HFILE_ERROR -1

#define DC_BINNAMES 12

#define DC_MAXEXTENT 5

#define DC_BINS 6

#define DM_IN_BUFFER 8

#define DC_DRIVER 11

#define STRICT 1

#define DC_SIZE 8

#define DM_UPDATE 1

#define DC_COPIES 18

#define FALSE 0

#define MAX_PATH 260

#define DC_FILEDEPENDENCIES 14

#define DC_PAPERS 2

#define DM_OUT_BUFFER 2

#define DC_FIELDS 1

#define DM_IN_PROMPT 4

#define DC_PAPERNAMES 16

#define PDERR_DEFAULTDIFFERENT 4108

#define CDERR_NOTEMPLATE 3

#define CDERR_NOHINSTANCE 4

#define PDERR_NODEFAULTPRN 4104

#define CDERR_GENERALCODES 0

#define CDERR_REGISTERMSGFAIL 12

#define CDERR_STRUCTSIZE 1

#define PDERR_DNDMMISMATCH 4105

#define PDERR_PRINTERNOTFOUND 4107

#define PDERR_CREATEICFAILURE 4106

#define FRERR_FINDREPLACECODES 16384

#define CFERR_NOFONTS 8193

#define CDERR_FINDRESFAILURE 6

#define FNERR_INVALIDFILENAME 12290

#define CDERR_MEMALLOCFAILURE 9

#define CDERR_DIALOGFAILURE 65535

#define PDERR_PARSEFAILURE 4098

#define PDERR_GETDEVMODEFAIL 4101

#define PDERR_SETUPFAILURE 4097

#define CDERR_LOCKRESFAILURE 8

#define CDERR_LOADSTRFAILURE 5

#define CFERR_MAXLESSTHANMIN 8194

#define FNERR_BUFFERTOOSMALL 12291

#define PDERR_PRINTERCODES 4096

#define CDERR_NOHOOK 11

#define CDERR_MEMLOCKFAILURE 10

#define CDERR_INITIALIZATION 2

#define FNERR_SUBCLASSFAILURE 12289

#define PDERR_LOADDRVFAILURE 4100

#define PDERR_INITFAILURE 4102

#define CDERR_LOADRESFAILURE 7

#define FNERR_FILENAMECODES 12288

#define CCERR_CHOOSECOLORCODES 20480

#define CFERR_CHOOSEFONTCODES 8192

#define PDERR_RETDEFFAILURE 4099

#define PDERR_NODEVICES 4103

#define FRERR_BUFFERLENGTHZERO 16385

typedef struct DDEACK DDEACK, *PDDEACK;

struct DDEACK {
    ushort bAppReturnCode:8;
    ushort reserved:6;
    ushort fBusy:1;
    ushort fAck:1;
};

typedef struct DDEADVISE DDEADVISE, *PDDEADVISE;

struct DDEADVISE {
    ushort reserved:14;
    ushort fDeferUpd:1;
    ushort fAckReq:1;
    short cfFormat;
};

typedef struct DDEDATA DDEDATA, *PDDEDATA;

struct DDEDATA {
    ushort unused:12;
    ushort fResponse:1;
    ushort fRelease:1;
    ushort reserved:1;
    ushort fAckReq:1;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDELN DDELN, *PDDELN;

struct DDELN {
    ushort unused:13;
    ushort fRelease:1;
    ushort fDeferUpd:1;
    ushort fAckReq:1;
    short cfFormat;
};

typedef struct DDEPOKE DDEPOKE, *PDDEPOKE;

struct DDEPOKE {
    ushort unused:13;
    ushort fRelease:1;
    ushort fReserved:2;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDEUP DDEUP, *PDDEUP;

struct DDEUP {
    ushort unused:12;
    ushort fAck:1;
    ushort fRelease:1;
    ushort fReserved:1;
    ushort fAckReq:1;
    short cfFormat;
    BYTE rgb[1];
};

#define WM_DDE_LAST 1000

#define WM_DDE_FIRST 992

#define WM_DDE_INITIATE 992

#define WM_DDE_DATA 997

#define WM_DDE_UNADVISE 995

#define WM_DDE_REQUEST 998

#define WM_DDE_POKE 999

#define WM_DDE_EXECUTE 1000

#define WM_DDE_TERMINATE 993

#define WM_DDE_ADVISE 994

#define WM_DDE_ACK 996

typedef struct _MODEMSETTINGS _MODEMSETTINGS, *P_MODEMSETTINGS;

struct _MODEMSETTINGS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwPreferredModemOptions;
    DWORD dwNegotiatedModemOptions;
    DWORD dwNegotiatedDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMSETTINGS MODEMSETTINGS;

typedef struct _MODEMDEVCAPS _MODEMDEVCAPS, *P_MODEMDEVCAPS;

typedef struct _MODEMDEVCAPS *LPMODEMDEVCAPS;

struct _MODEMDEVCAPS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwModemProviderVersion;
    DWORD dwModemManufacturerOffset;
    DWORD dwModemManufacturerSize;
    DWORD dwModemModelOffset;
    DWORD dwModemModelSize;
    DWORD dwModemVersionOffset;
    DWORD dwModemVersionSize;
    DWORD dwDialOptions;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwModemOptions;
    DWORD dwMaxDTERate;
    DWORD dwMaxDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMSETTINGS *PMODEMSETTINGS;

typedef struct _MODEMDEVCAPS MODEMDEVCAPS;

typedef struct _MODEMDEVCAPS *PMODEMDEVCAPS;

typedef struct _MODEMSETTINGS *LPMODEMSETTINGS;

#define MDM_PROTOCOL_X75_T_70 3342336

#define MDM_V110_SPEED_57DOT6K 10

#define MDMSPKRFLAG_OFF 1

#define MDM_PROTOCOL_ANALOG_RLP 458752

#define MDM_PROTOCOL_AUTO_1CH 67502080

#define MDMVOLFLAG_MEDIUM 2

#define MDM_PROTOCOL_V110_12DOT0K 5505024

#define MDM_PROTOCOL_GPRS 524288

#define MDM_V110_SPEED_19DOT2K 7

#define MDM_MASK_PROTOCOLINFO 268369920

#define MDM_PROTOCOLID_V128 2

#define DIALOPTION_QUIET 128

#define MDM_PROTOCOL_X75_BTX 4390912

#define MDM_SHIFT_PROTOCOLDATA 20

#define MDM_MASK_V110_SPEED 15

#define MDM_V120_SPEED_56K 2

#define MDM_V110_SPEED_28DOT8K 8

#define MDM_V110_SPEED_4DOT8K 3

#define MDM_PROTOCOL_ANALOG_V34 2555904

#define MDM_V110_SPEED_DEFAULT 0

#define MDM_FORCED_EC 4

#define MDM_PROTOCOLID_X75 3

#define MDM_HDLCPPP_ML_DEFAULT 0

#define MDM_HDLCPPP_SPEED_DEFAULT 0

#define MDM_SHIFT_X75_DATA 0

#define MDM_V110_SPEED_9DOT6K 4

#define MDM_PIAFS_INCOMING 0

#define MDMVOL_LOW 0

#define MDM_V23_OVERRIDE 1024

#define MDM_PROTOCOL_HDLCPPP_112K_CHAP 161546240

#define MDM_PROTOCOL_V120_128K 135593984

#define MDM_HDLCPPP_SPEED_56K 2

#define MDM_PROTOCOL_V110_14DOT4K 6553600

#define MDMSPKRFLAG_CALLSETUP 8

#define MDM_SHIFT_AUTO_SPEED 0

#define MDM_X75_DATA_DEFAULT 0

#define MDM_MASK_EXTENDEDINFO 268431360

#define DIALOPTION_BILLING 64

#define MDM_V120_ML_NONE 1

#define MDM_PROTOCOL_HDLCPPP_128K_CHAP 160497664

#define MDMVOL_MEDIUM 1

#define MDM_PROTOCOL_V110_19DOT2K 7602176

#define MDM_MASK_PROTOCOLID 983040

#define MDM_PROTOCOL_ANALOG_NRLP 1507328

#define MDM_PROTOCOL_HDLCPPP_64K 1114112

#define MDM_PROTOCOL_V110_4DOT8K 3407872

#define MDM_PROTOCOL_V110_38DOT4K 9699328

#define MDM_V120_SPEED_DEFAULT 0

#define MDMSPKRFLAG_DIAL 2

#define MDM_HDLCPPP_AUTH_DEFAULT 0

#define MDM_PROTOCOL_V110_57DOT6K 10747904

#define MDM_PROTOCOL_HDLCPPP_112K_MSCHAP 169934848

#define MDM_TONE_DIAL 256

#define MDM_SPEED_ADJUST 128

#define MDMSPKR_OFF 0

#define MDM_AUTO_ML_NONE 1

#define MDMVOLFLAG_LOW 1

#define MDM_FLOWCONTROL_SOFT 32

#define MDM_V120_SPEED_64K 1

#define MDM_PROTOCOLID_PIAFS 9

#define MDM_AUTO_SPEED_DEFAULT 0

#define MDM_V110_SPEED_12DOT0K 5

#define MDM_HDLCPPP_AUTH_CHAP 3

#define MDM_X75_DATA_BTX 4

#define MDMSPKR_ON 2

#define MDM_HDLCPPP_AUTH_NONE 1

#define MDM_HDLCPPP_ML_NONE 1

#define MDM_PROTOCOL_AUTO_2CH 134610944

#define MDM_X75_DATA_T_70 3

#define MDM_PROTOCOL_V120_112K 136642560

#define MDM_DIAGNOSTICS 2048

#define MDMSPKRFLAG_ON 4

#define MDM_ANALOG_RLP_ON 0

#define MDM_PROTOCOLID_GPRS 8

#define MDM_SHIFT_V120_ML 6

#define MDM_PROTOCOLID_ANALOG 7

#define MDM_PROTOCOL_V110_1DOT2K 1310720

#define MDM_SHIFT_PROTOCOLID 16

#define MDM_HDLCPPP_ML_2 2

#define MDM_SHIFT_HDLCPPP_SPEED 0

#define MDM_PIAFS_OUTGOING 1

#define MDM_PROTOCOL_HDLCPPP_56K 2162688

#define MDM_MASK_AUTO_ML 192

#define MDM_CCITT_OVERRIDE 64

#define MDM_PROTOCOL_HDLCPPP_128K_PAP 152109056

#define MDM_PROTOCOL_V120_64K 68485120

#define MDM_X75_DATA_128K 2

#define MDM_HDLCPPP_AUTH_PAP 2

#define MDM_PROTOCOL_HDLCPPP_128K_MSCHAP 168886272

#define MDM_ERROR_CONTROL 2

#define MDM_SHIFT_PROTOCOLINFO 16

#define MDM_MASK_PROTOCOLDATA 267386880

#define MDM_COMPRESSION 1

#define MDM_PROTOCOL_X75_64K 1245184

#define MDM_AUTO_ML_DEFAULT 0

#define MDM_SHIFT_V110_SPEED 0

#define MDM_CELLULAR 8

#define MDM_MASK_V120_ML 192

#define MDM_MASK_AUTO_SPEED 7

#define MDM_PROTOCOLID_DEFAULT 0

#define MDM_HDLCPPP_AUTH_MSCHAP 4

#define MDM_PROTOCOL_HDLCPPP_128K 135331840

#define MDM_SHIFT_EXTENDEDINFO 12

#define MDM_PROTOCOL_V110_28DOT8K 8650752

#define MDM_PROTOCOLID_HDLCPPP 1

#define MDM_PROTOCOL_V120_56K 69533696

#define MDMVOL_HIGH 2

#define MDM_PROTOCOL_V110_2DOT4K 2359296

#define MDM_BEARERMODE_ANALOG 0

#define MDM_FLOWCONTROL_HARD 16

#define MDMSPKR_CALLSETUP 3

#define MDM_AUTO_ML_2 2

#define MDM_V110_SPEED_1DOT2K 1

#define MDM_V110_SPEED_14DOT4K 6

#define MDM_PROTOCOL_PIAFS_OUTGOING 1638400

#define MDM_MASK_HDLCPPP_AUTH 56

#define MDM_MASK_HDLCPPP_ML 192

#define MDM_SHIFT_HDLCPPP_ML 6

#define MDM_BLIND_DIAL 512

#define MDM_SHIFT_AUTO_ML 6

#define MDM_MASK_HDLCPPP_SPEED 7

#define MDM_PROTOCOLID_AUTO 6

#define DIALOPTION_DIALTONE 256

#define MDM_ANALOG_V34 2

#define MDM_PROTOCOL_PIAFS_INCOMING 589824

#define MDM_ANALOG_RLP_OFF 1

#define MDM_X75_DATA_64K 1

#define MDM_V120_ML_2 2

#define MDM_PROTOCOL_HDLCPPP_112K 136380416

#define MDM_PROTOCOL_X75_128K 2293760

#define MDM_PROTOCOLID_V120 5

#define MDM_PROTOCOL_V110_9DOT6K 4456448

#define MDM_MASK_X75_DATA 7

#define MDM_V110_SPEED_2DOT4K 2

#define MDMVOLFLAG_HIGH 4

#define MDM_SHIFT_BEARERMODE 12

#define MDM_BEARERMODE_ISDN 1

#define MDM_HDLCPPP_SPEED_64K 1

#define MDM_MASK_BEARERMODE 61440

#define MDMSPKR_DIAL 1

#define MDM_V110_SPEED_38DOT4K 9

#define MDM_PROTOCOLID_V110 4

#define MDM_MASK_V120_SPEED 7

#define MDM_SHIFT_HDLCPPP_AUTH 3

#define MDM_PROTOCOL_HDLCPPP_112K_PAP 153157632

#define MDM_V120_ML_DEFAULT 0

#define MDM_BEARERMODE_GSM 2

#define MDM_SHIFT_V120_SPEED 0

#define _NLSCMPERROR 2147483647

typedef struct setloc_struct setloc_struct, *Psetloc_struct;

typedef struct _is_ctype_compatible _is_ctype_compatible, *P_is_ctype_compatible;

struct _is_ctype_compatible {
    ulong id;
    int is_clike;
};

struct setloc_struct {
    wchar_t *pchLanguage;
    wchar_t *pchCountry;
    int iLocState;
    int iPrimaryLen;
    BOOL bAbbrevLanguage;
    BOOL bAbbrevCountry;
    UINT _cachecp;
    wchar_t _cachein[131];
    wchar_t _cacheout[131];
    struct _is_ctype_compatible _Loc_c[5];
    wchar_t _cacheLocaleName[85];
};

typedef struct _tiddata _tiddata, *P_tiddata;

typedef struct setloc_struct _setloc_struct;

struct _tiddata {
    ulong _tid;
    uintptr_t _thandle;
    int _terrno;
    ulong _tdoserrno;
    uint _fpds;
    ulong _holdrand;
    char *_token;
    wchar_t *_wtoken;
    uchar *_mtoken;
    char *_errmsg;
    wchar_t *_werrmsg;
    char *_namebuf0;
    wchar_t *_wnamebuf0;
    char *_namebuf1;
    wchar_t *_wnamebuf1;
    char *_asctimebuf;
    wchar_t *_wasctimebuf;
    void *_gmtimebuf;
    char *_cvtbuf;
    uchar _con_ch_buf[5];
    ushort _ch_buf_used;
    void *_initaddr;
    void *_initarg;
    void *_pxcptacttab;
    void *_tpxcptinfoptrs;
    int _tfpecode;
    pthreadmbcinfo ptmbcinfo;
    pthreadlocinfo ptlocinfo;
    int _ownlocale;
    ulong _NLG_dwCode;
    void *_terminate;
    void *_unexpected;
    void *_translator;
    void *_purecall;
    void *_curexception;
    void *_curcontext;
    int _ProcessingThrow;
    void *_curexcspec;
    void *_pFrameInfoChain;
    _setloc_struct _setloc_data;
    void *_reserved1;
    void *_reserved2;
    void *_reserved3;
    void *_reserved4;
    void *_reserved5;
    int _cxxReThrow;
    ulong __initDomain;
    int _initapartment;
};

typedef struct _tiddata *_ptiddata;

typedef struct sockaddr sockaddr, *Psockaddr;

typedef struct sockaddr *PSOCKADDR;

typedef ushort u_short;

struct sockaddr {
    u_short sa_family;
    char sa_data[14];
};

typedef struct linger linger, *Plinger;

typedef struct linger *LPLINGER;

struct linger {
    u_short l_onoff;
    u_short l_linger;
};

typedef struct in_addr in_addr, *Pin_addr;

typedef struct in_addr *PIN_ADDR;

typedef union _union_880 _union_880, *P_union_880;

typedef struct _struct_881 _struct_881, *P_struct_881;

typedef struct _struct_882 _struct_882, *P_struct_882;

typedef ulong u_long;

typedef uchar u_char;

struct _struct_881 {
    u_char s_b1;
    u_char s_b2;
    u_char s_b3;
    u_char s_b4;
};

struct _struct_882 {
    u_short s_w1;
    u_short s_w2;
};

union _union_880 {
    struct _struct_881 S_un_b;
    struct _struct_882 S_un_w;
    u_long S_addr;
};

struct in_addr {
    union _union_880 S_un;
};

typedef struct sockaddr_in sockaddr_in, *Psockaddr_in;

typedef struct sockaddr_in *PSOCKADDR_IN;

struct sockaddr_in {
    short sin_family;
    u_short sin_port;
    struct in_addr sin_addr;
    char sin_zero[8];
};

typedef struct protoent protoent, *Pprotoent;

struct protoent {
    char *p_name;
    char **p_aliases;
    short p_proto;
};

typedef struct in_addr *LPIN_ADDR;

typedef struct sockaddr SOCKADDR;

typedef union _union_882 _union_882, *P_union_882;

typedef struct _struct_883 _struct_883, *P_struct_883;

typedef struct _struct_884 _struct_884, *P_struct_884;

struct _struct_883 {
    u_char s_b1;
    u_char s_b2;
    u_char s_b3;
    u_char s_b4;
};

struct _struct_884 {
    u_short s_w1;
    u_short s_w2;
};

union _union_882 {
    struct _struct_883 S_un_b;
    struct _struct_884 S_un_w;
    u_long S_addr;
};

typedef struct fd_set fd_set, *Pfd_set;

typedef struct fd_set FD_SET;

typedef uint u_int;

typedef UINT_PTR SOCKET;

struct fd_set {
    u_int fd_count;
    SOCKET fd_array[64];
};

typedef struct timeval timeval, *Ptimeval;

typedef struct timeval *PTIMEVAL;

struct timeval {
    long tv_sec;
    long tv_usec;
};

typedef struct hostent hostent, *Phostent;

struct hostent {
    char *h_name;
    char **h_aliases;
    short h_addrtype;
    short h_length;
    char **h_addr_list;
};

typedef struct WSAData WSAData, *PWSAData;

typedef struct WSAData WSADATA;

struct WSAData {
    WORD wVersion;
    WORD wHighVersion;
    char szDescription[257];
    char szSystemStatus[129];
    ushort iMaxSockets;
    ushort iMaxUdpDg;
    char *lpVendorInfo;
};

typedef struct timeval *LPTIMEVAL;

typedef struct protoent *PPROTOENT;

typedef struct _TRANSMIT_FILE_BUFFERS _TRANSMIT_FILE_BUFFERS, *P_TRANSMIT_FILE_BUFFERS;

typedef struct _TRANSMIT_FILE_BUFFERS *PTRANSMIT_FILE_BUFFERS;

struct _TRANSMIT_FILE_BUFFERS {
    PVOID Head;
    DWORD HeadLength;
    PVOID Tail;
    DWORD TailLength;
};

typedef WSADATA *LPWSADATA;

typedef struct servent servent, *Pservent;

typedef struct servent *LPSERVENT;

struct servent {
    char *s_name;
    char **s_aliases;
    short s_port;
    char *s_proto;
};

typedef struct netent netent, *Pnetent;

struct netent {
    char *n_name;
    char **n_aliases;
    short n_addrtype;
    u_long n_net;
};

typedef struct _TRANSMIT_FILE_BUFFERS *LPTRANSMIT_FILE_BUFFERS;

typedef struct protoent *LPPROTOENT;

typedef struct hostent HOSTENT;

typedef struct timeval TIMEVAL;

typedef struct hostent *PHOSTENT;

typedef struct sockaddr_in *LPSOCKADDR_IN;

typedef struct protoent PROTOENT;

typedef struct linger *PLINGER;

typedef struct fd_set *PFD_SET;

typedef struct servent *PSERVENT;

typedef struct in_addr IN_ADDR;

typedef struct ip_mreq ip_mreq, *Pip_mreq;

struct ip_mreq {
    struct in_addr imr_multiaddr;
    struct in_addr imr_interface;
};

typedef struct _TRANSMIT_FILE_BUFFERS TRANSMIT_FILE_BUFFERS;

typedef struct hostent *LPHOSTENT;

typedef struct sockaddr *LPSOCKADDR;

typedef struct fd_set *LPFD_SET;

typedef struct linger LINGER;

typedef struct servent SERVENT;

typedef struct sockaddr_in SOCKADDR_IN;

typedef struct sockproto sockproto, *Psockproto;

struct sockproto {
    u_short sp_family;
    u_short sp_protocol;
};

#define IN_CLASSC_NET 4294967040

#define IPPORT_SMTP 25

#define NO_RECOVERY 11003

#define PF_NS 6

#define PF_LAT 14

#define SO_UPDATE_ACCEPT_CONTEXT 28683

#define SO_DISCOPTLEN 28679

#define AF_MAX 22

#define AF_SNA 11

#define IPPORT_SUPDUP 95

#define WSANO_ADDRESS 11004

#define IPPORT_EXECSERVER 512

#define MSG_DONTROUTE 4

#define PF_ECMA 8

#define TF_WRITE_BEHIND 4

#define SO_REUSEADDR 4

#define IPPROTO_ND 77

#define IPPORT_TFTP 69

#define IPPORT_RESERVED 1024

#define IPPORT_CMDSERVER 514

#define PF_SNA 11

#define SO_ERROR 4103

#define IPPORT_TELNET 23

#define AF_LAT 14

#define IP_MAX_MEMBERSHIPS 20

#define IPPROTO_IDP 22

#define SO_KEEPALIVE 8

#define IN_CLASSB_NSHIFT 16

#define SO_CONNDATALEN 28676

#define SO_DONTROUTE 16

#define IOC_VOID 536870912

#define AF_CCITT 10

#define SO_TYPE 4104

#define MAXGETHOSTSTRUCT 1024

#define SO_USELOOPBACK 64

#define AF_APPLETALK 16

#define IP_TOS 8

#define PF_INET 2

#define AF_VOICEVIEW 18

#define IPPORT_LOGINSERVER 513

#define IPPORT_TIMESERVER 37

#define IP_MULTICAST_IF 2

#define IPPORT_RJE 77

#define IN_CLASSA_HOST 16777215

#define AF_DECnet 12

#define IPPROTO_ICMP 1

#define SO_CONNOPTLEN 28677

#define SO_SYNCHRONOUS_ALERT 16

#define SO_DISCOPT 28675

#define SO_SNDBUF 4097

#define SO_LINGER 128

#define PF_CCITT 10

#define FD_CLOSE 32

#define SO_BROADCAST 32

#define SO_DISCDATA 28674

#define PF_PUP 4

#define IPPORT_WHOSERVER 513

#define IMPLINK_HIGHEXPER 158

#define PF_FIREFOX 19

#define PF_OSI 7

#define AF_IMPLINK 3

#define AF_HYLINK 15

#define NO_ADDRESS 11004

#define IN_CLASSC_HOST 255

#define AF_INET 2

#define SO_DONTLINGER -129

#define IPPORT_FTP 21

#define IMPLINK_IP 155

#define NO_DATA 11004

#define IPPROTO_IP 0

#define TF_DISCONNECT 1

#define PF_UNKNOWN1 20

#define AF_NS 6

#define PF_MAX 22

#define IN_CLASSB_HOST 65535

#define IP_MULTICAST_LOOP 4

#define AF_IPX 6

#define IPPROTO_RAW 255

#define IPPORT_EFSSERVER 520

#define IPPORT_ECHO 7

#define SO_RCVTIMEO 4102

#define PF_UNSPEC 0

#define IPPORT_BIFFUDP 512

#define IPPORT_ROUTESERVER 520

#define TCP_BSDURGENT 28672

#define IP_TTL 7

#define IPPORT_DISCARD 9

#define TRY_AGAIN 11002

#define IP_DROP_MEMBERSHIP 6

#define IPPORT_MTP 57

#define IOC_IN 2147483648

#define INADDR_NONE 4294967295

#define HOST_NOT_FOUND 11001

#define AF_BAN 21

#define MSG_OOB 1

#define AF_DATAKIT 9

#define INVALID_SOCKET -1

#define AF_FIREFOX 19

#define FD_ACCEPT 8

#define IPPORT_DAYTIME 13

#define PF_VOICEVIEW 18

#define PF_DATAKIT 9

#define IOC_OUT 1073741824

#define SO_MAXPATHDG 28682

#define MSG_MAXIOVLEN 16

#define PF_ISO 7

#define IN_CLASSA_NET 4278190080

#define IPPROTO_MAX 256

#define WSASYS_STATUS_LEN 128

#define INADDR_BROADCAST 4294967295

#define IN_CLASSA_MAX 128

#define IPPROTO_GGP 3

#define AF_CHAOS 5

#define IP_DEFAULT_MULTICAST_LOOP 1

#define SO_OOBINLINE 256

#define PF_IMPLINK 3

#define PF_DLI 13

#define IPPROTO_UDP 17

#define AF_ECMA 8

#define SOCK_STREAM 1

#define IPPORT_TTYLINK 87

#define SO_SNDTIMEO 4101

#define AF_NETBIOS 17

#define PF_APPLETALK 16

#define MSG_PARTIAL 32768

#define FD_SETSIZE 64

#define TCP_NODELAY 1

#define SO_CONNECT_TIME 28684

#define IP_ADD_MEMBERSHIP 5

#define SOMAXCONN 5

#define SO_MAXDG 28681

#define IN_CLASSC_NSHIFT 8

#define SO_DISCDATALEN 28678

#define IP_DONTFRAGMENT 9

#define SO_OPENTYPE 28680

#define IPPROTO_TCP 6

#define PF_UNIX 1

#define SO_DEBUG 1

#define SO_CONNDATA 28672

#define AF_ISO 7

#define AF_UNKNOWN1 20

#define IP_DEFAULT_MULTICAST_TTL 1

#define IPPORT_FINGER 79

#define IOC_INOUT 3221225472

#define SO_SNDLOWAT 4099

#define SOCK_SEQPACKET 5

#define TF_REUSE_SOCKET 2

#define SO_CONNOPT 28673

#define AF_DLI 13

#define SOCK_RAW 3

#define AF_UNIX 1

#define IN_CLASSB_NET 4294901760

#define WSADESCRIPTION_LEN 256

#define FD_CONNECT 16

#define FD_READ 1

#define IPPORT_SYSTAT 11

#define PF_BAN 21

#define IPPORT_WHOIS 43

#define IP_MULTICAST_TTL 3

#define IP_OPTIONS 1

#define IN_CLASSB_MAX 65536

#define IOCPARM_MASK 127

#define IMPLINK_LOWEXPER 156

#define MSG_PEEK 2

#define SO_ACCEPTCONN 2

#define FD_WRITE 2

#define PF_DECnet 12

#define PF_HYLINK 15

#define IPPROTO_PUP 12

#define SOCK_DGRAM 2

#define INADDR_ANY 0

#define IN_CLASSA_NSHIFT 24

#define INADDR_LOOPBACK 2130706433

#define SO_SYNCHRONOUS_NONALERT 32

#define IPPORT_NAMESERVER 42

#define SOCKET_ERROR -1

#define FD_OOB 4

#define AF_OSI 7

#define PF_IPX 6

#define PF_CHAOS 5

#define AF_UNSPEC 0

#define SO_RCVLOWAT 4100

#define AF_PUP 4

#define SO_RCVBUF 4098

#define SOL_SOCKET 65535

#define IPPROTO_IGMP 2

#define IPPORT_NETSTAT 15

#define SOCK_RDM 4

typedef struct _SCARD_ATRMASK _SCARD_ATRMASK, *P_SCARD_ATRMASK;

struct _SCARD_ATRMASK {
    DWORD cbAtr;
    BYTE rgbAtr[36];
    BYTE rgbMask[36];
};

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIAA, *POPENCARD_SEARCH_CRITERIAA;

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIA;

typedef ULONG_PTR SCARDCONTEXT;

typedef ULONG_PTR SCARDHANDLE;

typedef BOOL (*LPOCNCHKPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

typedef SCARDHANDLE (*LPOCNCONNPROCA)(SCARDCONTEXT, LPSTR, LPSTR, PVOID);

typedef void (*LPOCNDSCPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

struct OPENCARD_SEARCH_CRITERIAA {
    DWORD dwStructSize;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

typedef struct OPENCARDNAMEA OPENCARDNAMEA, *POPENCARDNAMEA;

typedef POPENCARDNAMEA POPENCARDNAME;

struct OPENCARDNAMEA {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    LPCSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAMEW OPENCARDNAMEW, *POPENCARDNAMEW;

typedef SCARDHANDLE (*LPOCNCONNPROCW)(SCARDCONTEXT, LPWSTR, LPWSTR, PVOID);

struct OPENCARDNAMEW {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    LPCWSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct _SCARD_ATRMASK *PSCARD_ATRMASK;

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EXA, *POPENCARDNAME_EXA;

typedef struct OPENCARDNAME_EXA *LPOPENCARDNAME_EXA;

struct OPENCARDNAME_EXA {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCSTR lpstrTitle;
    LPCSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria;
    LPOCNCONNPROCA lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAMEA *LPOPENCARDNAMEA;

typedef struct SCARD_READERSTATEA SCARD_READERSTATEA, *PSCARD_READERSTATEA;

struct SCARD_READERSTATEA {
    LPCSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef POPENCARDNAME_EXA POPENCARDNAME_EX;

typedef struct _SCARD_ATRMASK SCARD_ATRMASK;

typedef struct OPENCARDNAME_EXW OPENCARDNAME_EXW, *POPENCARDNAME_EXW;

typedef struct OPENCARD_SEARCH_CRITERIAW OPENCARD_SEARCH_CRITERIAW, *POPENCARD_SEARCH_CRITERIAW;

struct OPENCARD_SEARCH_CRITERIAW {
    DWORD dwStructSize;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

struct OPENCARDNAME_EXW {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCWSTR lpstrTitle;
    LPCWSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
    LPOCNCONNPROCW lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIAA;

typedef LPOPENCARD_SEARCH_CRITERIAA LPOPENCARD_SEARCH_CRITERIA;

typedef SCARDHANDLE *PSCARDHANDLE;

typedef BYTE *LPCBYTE;

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EX;

typedef LPOPENCARDNAME_EXA LPOPENCARDNAME_EX;

typedef struct OPENCARDNAME_EXW *LPOPENCARDNAME_EXW;

typedef LPOPENCARDNAMEA LPOPENCARDNAME;

typedef struct SCARD_READERSTATEA SCARD_READERSTATE;

typedef PSCARD_READERSTATEA PSCARD_READERSTATE;

typedef struct SCARD_READERSTATEW SCARD_READERSTATEW, *PSCARD_READERSTATEW;

struct SCARD_READERSTATEW {
    LPCWSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef struct _SCARD_ATRMASK *LPSCARD_ATRMASK;

typedef struct OPENCARDNAMEW *LPOPENCARDNAMEW;

typedef SCARDHANDLE *LPSCARDHANDLE;

typedef struct SCARD_READERSTATEA *LPSCARD_READERSTATEA;

typedef struct OPENCARDNAMEA OPENCARDNAME;

typedef POPENCARD_SEARCH_CRITERIAA POPENCARD_SEARCH_CRITERIA;

typedef SCARDCONTEXT *PSCARDCONTEXT;

typedef SCARDCONTEXT *LPSCARDCONTEXT;

typedef LPSCARD_READERSTATEA LPSCARD_READERSTATE;

typedef struct OPENCARD_SEARCH_CRITERIAW *LPOPENCARD_SEARCH_CRITERIAW;

typedef struct SCARD_READERSTATEW *LPSCARD_READERSTATEW;

#define SCARD_STATE_PRESENT 32

#define SCARD_RESET_CARD 1

#define SCARD_STATE_CHANGED 2

#define SC_DLG_NO_UI 2

#define SCARD_STATE_EMPTY 16

#define SCARD_SHARE_SHARED 2

#define SCERR_NOGUIDS 32768

#define SCARD_STATE_UNKNOWN 4

#define SCARD_SHARE_DIRECT 3

#define SCARD_STATE_UNPOWERED 1024

#define SCARD_SCOPE_SYSTEM 2

#define SCARD_PROVIDER_PRIMARY 1

#define SCARD_LEAVE_CARD 0

#define SCARD_EJECT_CARD 3

#define SCARD_SCOPE_TERMINAL 1

#define SCARD_AUTOALLOCATE -1

#define SCARD_STATE_IGNORE 1

#define SCARD_STATE_EXCLUSIVE 128

#define SCARD_STATE_UNAWARE 0

#define SCARD_PROVIDER_CSP 2

#define SCARD_SCOPE_USER 0

#define SCARD_SHARE_EXCLUSIVE 1

#define SCERR_NOCARDNAME 16384

#define SCARD_STATE_INUSE 256

#define SC_DLG_FORCE_UI 4

#define SC_DLG_MINIMAL_UI 1

#define SCARD_STATE_MUTE 512

#define SCARD_STATE_ATRMATCH 64

#define SCARD_UNPOWER_CARD 2

#define SCARD_STATE_UNAVAILABLE 8

typedef struct RPC_DISPATCH_TABLE RPC_DISPATCH_TABLE, *PRPC_DISPATCH_TABLE;

typedef struct _RPC_MESSAGE _RPC_MESSAGE, *P_RPC_MESSAGE;

typedef struct _RPC_MESSAGE *PRPC_MESSAGE;

typedef void (*RPC_DISPATCH_FUNCTION)(PRPC_MESSAGE);

typedef struct _RPC_SYNTAX_IDENTIFIER _RPC_SYNTAX_IDENTIFIER, *P_RPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_SYNTAX_IDENTIFIER *PRPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_VERSION _RPC_VERSION, *P_RPC_VERSION;

typedef struct _RPC_VERSION RPC_VERSION;

struct RPC_DISPATCH_TABLE {
    uint DispatchTableCount;
    RPC_DISPATCH_FUNCTION *DispatchTable;
    LONG_PTR Reserved;
};

struct _RPC_VERSION {
    ushort MajorVersion;
    ushort MinorVersion;
};

struct _RPC_SYNTAX_IDENTIFIER {
    GUID SyntaxGUID;
    RPC_VERSION SyntaxVersion;
};

struct _RPC_MESSAGE {
    RPC_BINDING_HANDLE Handle;
    ulong DataRepresentation;
    void *Buffer;
    uint BufferLength;
    uint ProcNum;
    PRPC_SYNTAX_IDENTIFIER TransferSyntax;
    void *RpcInterfaceInformation;
    void *ReservedForRuntime;
    void *ManagerEpv;
    void *ImportContext;
    ulong RpcFlags;
};

typedef RPC_STATUS (*RPC_BLOCKING_FN)(void *, void *, void *);

typedef enum RPC_ADDRESS_CHANGE_TYPE {
    PROTOCOL_NOT_LOADED=1,
    PROTOCOL_LOADED=2,
    PROTOCOL_ADDRESS_CHANGE=3
} RPC_ADDRESS_CHANGE_TYPE;

typedef struct _RPC_TRANSFER_SYNTAX _RPC_TRANSFER_SYNTAX, *P_RPC_TRANSFER_SYNTAX;

typedef struct _RPC_TRANSFER_SYNTAX RPC_TRANSFER_SYNTAX;

struct _RPC_TRANSFER_SYNTAX {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

typedef struct _RPC_MESSAGE RPC_MESSAGE;

typedef struct _RPC_PROTSEQ_ENDPOINT _RPC_PROTSEQ_ENDPOINT, *P_RPC_PROTSEQ_ENDPOINT;

struct _RPC_PROTSEQ_ENDPOINT {
    uchar *RpcProtocolSequence;
    uchar *Endpoint;
};

typedef void (*RPCLT_PDU_FILTER_FUNC)(void *, uint, int);

typedef void (*RPC_SETFILTER_FUNC)(RPCLT_PDU_FILTER_FUNC);

typedef void (RPC_ADDRESS_CHANGE_FN)(void *);

typedef struct _RPC_CLIENT_INTERFACE _RPC_CLIENT_INTERFACE, *P_RPC_CLIENT_INTERFACE;

typedef struct _RPC_CLIENT_INTERFACE RPC_CLIENT_INTERFACE;

typedef struct _RPC_SYNTAX_IDENTIFIER RPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_PROTSEQ_ENDPOINT *PRPC_PROTSEQ_ENDPOINT;

struct _RPC_CLIENT_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    ULONG_PTR Reserved;
    void *InterpreterInfo;
    uint Flags;
};

typedef void (*PRPC_RUNDOWN)(void *);

typedef RPC_STATUS (RPC_FORWARD_FUNCTION)(UUID *, RPC_VERSION *, UUID *, uchar *, void **);

typedef struct _RPC_SERVER_INTERFACE _RPC_SERVER_INTERFACE, *P_RPC_SERVER_INTERFACE;

typedef struct _RPC_SERVER_INTERFACE RPC_SERVER_INTERFACE;

struct _RPC_SERVER_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    void *DefaultManagerEpv;
    void *InterpreterInfo;
    uint Flags;
};

typedef struct _RPC_SERVER_INTERFACE *PRPC_SERVER_INTERFACE;

typedef void *I_RPC_MUTEX;

typedef struct _RPC_PROTSEQ_ENDPOINT RPC_PROTSEQ_ENDPOINT;

typedef struct _RPC_CLIENT_INTERFACE *PRPC_CLIENT_INTERFACE;

#define TRANSPORT_TYPE_DG 2

#define RPCFLG_ASYNCHRONOUS 1073741824

#define RPCFLG_HAS_MULTI_SYNTAXES 33554432

#define RPC_NCA_FLAGS_IDEMPOTENT 1

#define RPC_INTERFACE_HAS_PIPES 1

#define RPCFLG_LOCAL_CALL 268435456

#define RPC_BUFFER_NONOTIFY 65536

#define RPC_CONTEXT_HANDLE_DONT_SERIALIZE 536870912

#define NT351_INTERFACE_SIZE 64

#define RPC_BUFFER_EXTRA 16384

#define TRANSPORT_TYPE_CN 1

#define TRANSPORT_TYPE_WMSG 8

#define RPC_NCA_FLAGS_MAYBE 4

#define RPCFLG_AUTO_COMPLETE 134217728

#define RPC_NCA_FLAGS_DEFAULT 0

#define RPC_NCA_FLAGS_BROADCAST 2

#define RPC_BUFFER_COMPLETE 4096

#define RPC_CONTEXT_HANDLE_FLAGS 805306368

#define RPCFLG_HAS_CALLBACK 67108864

#define RPC_BUFFER_PARTIAL 8192

#define RPC_CONTEXT_HANDLE_DEFAULT_GUARD 4294963213

#define RPCFLG_MESSAGE 16777216

#define TRANSPORT_TYPE_LPC 4

#define RPC_BUFFER_ASYNC 32768

#define RPC_P_ADDR_FORMAT_TCP_IPV6 2

#define RPC_CONTEXT_HANDLE_SERIALIZE 268435456

#define RPC_P_ADDR_FORMAT_TCP_IPV4 1

#define RPCFLG_INPUT_SYNCHRONOUS 536870912

#define RPC_FLAGS_VALID_BIT 32768

#define RPCFLG_NON_NDR 2147483648

#define RPC_CONTEXT_HANDLE_DEFAULT_FLAGS 0

typedef struct IServiceProvider IServiceProvider, *PIServiceProvider;

typedef struct IServiceProviderVtbl IServiceProviderVtbl, *PIServiceProviderVtbl;

struct IServiceProvider {
    struct IServiceProviderVtbl *lpVtbl;
};

struct IServiceProviderVtbl {
    HRESULT (*QueryInterface)(struct IServiceProvider *, IID *, void **);
    ULONG (*AddRef)(struct IServiceProvider *);
    ULONG (*Release)(struct IServiceProvider *);
    HRESULT (*QueryService)(struct IServiceProvider *, GUID *, IID *, void **);
};

typedef struct IServiceProvider *LPSERVICEPROVIDER;

#define RPC_C_PROFILE_ALL_ELTS 1

#define RPC_C_PROFILE_ALL_ELT 1

#define RPC_C_PROFILE_MATCH_BY_BOTH 4

#define RPC_C_NS_DEFAULT_EXP_AGE -1

#define RPC_C_PROFILE_DEFAULT_ELT 0

#define RPC_C_PROFILE_MATCH_BY_MBR 3

#define RPC_C_NS_SYNTAX_DEFAULT 0

#define RPC_C_NS_SYNTAX_DCE 3

#define RPC_C_PROFILE_MATCH_BY_IF 2

typedef struct IViewObject2 IViewObject2, *PIViewObject2;

typedef struct IViewObject2Vtbl IViewObject2Vtbl, *PIViewObject2Vtbl;

typedef RECTL *LPCRECTL;

typedef SIZE *LPSIZEL;

struct IViewObject2Vtbl {
    HRESULT (*QueryInterface)(struct IViewObject2 *, IID *, void **);
    ULONG (*AddRef)(struct IViewObject2 *);
    ULONG (*Release)(struct IViewObject2 *);
    HRESULT (*Draw)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (*)(ULONG_PTR), ULONG_PTR);
    HRESULT (*GetColorSet)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE **);
    HRESULT (*Freeze)(struct IViewObject2 *, DWORD, LONG, void *, DWORD *);
    HRESULT (*Unfreeze)(struct IViewObject2 *, DWORD);
    HRESULT (*SetAdvise)(struct IViewObject2 *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (*GetAdvise)(struct IViewObject2 *, DWORD *, DWORD *, struct IAdviseSink **);
    HRESULT (*GetExtent)(struct IViewObject2 *, DWORD, LONG, DVTARGETDEVICE *, LPSIZEL);
};

struct IViewObject2 {
    struct IViewObject2Vtbl *lpVtbl;
};

typedef struct IOleLink IOleLink, *PIOleLink;

typedef struct IOleLinkVtbl IOleLinkVtbl, *PIOleLinkVtbl;

struct IOleLinkVtbl {
    HRESULT (*QueryInterface)(struct IOleLink *, IID *, void **);
    ULONG (*AddRef)(struct IOleLink *);
    ULONG (*Release)(struct IOleLink *);
    HRESULT (*SetUpdateOptions)(struct IOleLink *, DWORD);
    HRESULT (*GetUpdateOptions)(struct IOleLink *, DWORD *);
    HRESULT (*SetSourceMoniker)(struct IOleLink *, struct IMoniker *, IID *);
    HRESULT (*GetSourceMoniker)(struct IOleLink *, struct IMoniker **);
    HRESULT (*SetSourceDisplayName)(struct IOleLink *, LPCOLESTR);
    HRESULT (*GetSourceDisplayName)(struct IOleLink *, LPOLESTR *);
    HRESULT (*BindToSource)(struct IOleLink *, DWORD, struct IBindCtx *);
    HRESULT (*BindIfRunning)(struct IOleLink *);
    HRESULT (*GetBoundSource)(struct IOleLink *, struct IUnknown **);
    HRESULT (*UnbindSource)(struct IOleLink *);
    HRESULT (*Update)(struct IOleLink *, struct IBindCtx *);
};

struct IOleLink {
    struct IOleLinkVtbl *lpVtbl;
};

typedef enum tagOLEUPDATE {
    OLEUPDATE_ALWAYS=1,
    OLEUPDATE_ONCALL=3
} tagOLEUPDATE;

typedef enum tagOLEUPDATE OLEUPDATE;

typedef OLEUPDATE *POLEUPDATE;

typedef struct IOleInPlaceSite IOleInPlaceSite, *PIOleInPlaceSite;

typedef struct IOleInPlaceSiteVtbl IOleInPlaceSiteVtbl, *PIOleInPlaceSiteVtbl;

typedef struct IOleInPlaceFrame IOleInPlaceFrame, *PIOleInPlaceFrame;

typedef struct IOleInPlaceUIWindow IOleInPlaceUIWindow, *PIOleInPlaceUIWindow;

typedef struct tagOIFI tagOIFI, *PtagOIFI;

typedef struct tagOIFI *LPOLEINPLACEFRAMEINFO;

typedef RECT *LPCRECT;

typedef struct IOleInPlaceFrameVtbl IOleInPlaceFrameVtbl, *PIOleInPlaceFrameVtbl;

typedef LPCRECT LPCBORDERWIDTHS;

typedef struct IOleInPlaceActiveObject IOleInPlaceActiveObject, *PIOleInPlaceActiveObject;

typedef struct tagOleMenuGroupWidths tagOleMenuGroupWidths, *PtagOleMenuGroupWidths;

typedef struct tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;

typedef HGLOBAL HOLEMENU;

typedef struct tagMSG tagMSG, *PtagMSG;

typedef struct tagMSG *LPMSG;

typedef struct IOleInPlaceUIWindowVtbl IOleInPlaceUIWindowVtbl, *PIOleInPlaceUIWindowVtbl;

typedef struct IOleInPlaceActiveObjectVtbl IOleInPlaceActiveObjectVtbl, *PIOleInPlaceActiveObjectVtbl;

typedef UINT_PTR WPARAM;

struct IOleInPlaceActiveObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceActiveObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceActiveObject *);
    ULONG (*Release)(struct IOleInPlaceActiveObject *);
    HRESULT (*GetWindow)(struct IOleInPlaceActiveObject *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*TranslateAcceleratorA)(struct IOleInPlaceActiveObject *, LPMSG);
    HRESULT (*OnFrameWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*OnDocWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*ResizeBorder)(struct IOleInPlaceActiveObject *, LPCRECT, struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (*EnableModeless)(struct IOleInPlaceActiveObject *, BOOL);
};

struct IOleInPlaceUIWindow {
    struct IOleInPlaceUIWindowVtbl *lpVtbl;
};

struct tagOleMenuGroupWidths {
    LONG width[6];
};

struct tagOIFI {
    UINT cb;
    BOOL fMDIApp;
    HWND hwndFrame;
    HACCEL haccel;
    UINT cAccelEntries;
};

struct IOleInPlaceSite {
    struct IOleInPlaceSiteVtbl *lpVtbl;
};

struct IOleInPlaceUIWindowVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceUIWindow *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceUIWindow *);
    ULONG (*Release)(struct IOleInPlaceUIWindow *);
    HRESULT (*GetWindow)(struct IOleInPlaceUIWindow *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (*GetBorder)(struct IOleInPlaceUIWindow *, LPRECT);
    HRESULT (*RequestBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (*SetBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (*SetActiveObject)(struct IOleInPlaceUIWindow *, struct IOleInPlaceActiveObject *, LPCOLESTR);
};

struct IOleInPlaceSiteVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceSite *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceSite *);
    ULONG (*Release)(struct IOleInPlaceSite *);
    HRESULT (*GetWindow)(struct IOleInPlaceSite *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceSite *, BOOL);
    HRESULT (*CanInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (*OnInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (*OnUIActivate)(struct IOleInPlaceSite *);
    HRESULT (*GetWindowContext)(struct IOleInPlaceSite *, struct IOleInPlaceFrame **, struct IOleInPlaceUIWindow **, LPRECT, LPRECT, LPOLEINPLACEFRAMEINFO);
    HRESULT (*Scroll)(struct IOleInPlaceSite *, SIZE);
    HRESULT (*OnUIDeactivate)(struct IOleInPlaceSite *, BOOL);
    HRESULT (*OnInPlaceDeactivate)(struct IOleInPlaceSite *);
    HRESULT (*DiscardUndoState)(struct IOleInPlaceSite *);
    HRESULT (*DeactivateAndUndo)(struct IOleInPlaceSite *);
    HRESULT (*OnPosRectChange)(struct IOleInPlaceSite *, LPCRECT);
};

struct IOleInPlaceFrame {
    struct IOleInPlaceFrameVtbl *lpVtbl;
};

struct IOleInPlaceFrameVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceFrame *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceFrame *);
    ULONG (*Release)(struct IOleInPlaceFrame *);
    HRESULT (*GetWindow)(struct IOleInPlaceFrame *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (*GetBorder)(struct IOleInPlaceFrame *, LPRECT);
    HRESULT (*RequestBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (*SetBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (*SetActiveObject)(struct IOleInPlaceFrame *, struct IOleInPlaceActiveObject *, LPCOLESTR);
    HRESULT (*InsertMenus)(struct IOleInPlaceFrame *, HMENU, LPOLEMENUGROUPWIDTHS);
    HRESULT (*SetMenu)(struct IOleInPlaceFrame *, HMENU, HOLEMENU, HWND);
    HRESULT (*RemoveMenus)(struct IOleInPlaceFrame *, HMENU);
    HRESULT (*SetStatusText)(struct IOleInPlaceFrame *, LPCOLESTR);
    HRESULT (*EnableModeless)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (*TranslateAcceleratorA)(struct IOleInPlaceFrame *, LPMSG, WORD);
};

struct IOleInPlaceActiveObject {
    struct IOleInPlaceActiveObjectVtbl *lpVtbl;
};

struct tagMSG {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
};

typedef struct IOleInPlaceObject IOleInPlaceObject, *PIOleInPlaceObject;

typedef struct IOleInPlaceObject *LPOLEINPLACEOBJECT;

typedef struct IOleInPlaceObjectVtbl IOleInPlaceObjectVtbl, *PIOleInPlaceObjectVtbl;

struct IOleInPlaceObject {
    struct IOleInPlaceObjectVtbl *lpVtbl;
};

struct IOleInPlaceObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceObject *);
    ULONG (*Release)(struct IOleInPlaceObject *);
    HRESULT (*GetWindow)(struct IOleInPlaceObject *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceObject *, BOOL);
    HRESULT (*InPlaceDeactivate)(struct IOleInPlaceObject *);
    HRESULT (*UIDeactivate)(struct IOleInPlaceObject *);
    HRESULT (*SetObjectRects)(struct IOleInPlaceObject *, LPCRECT, LPCRECT);
    HRESULT (*ReactivateAndUndo)(struct IOleInPlaceObject *);
};

typedef struct IOleItemContainer IOleItemContainer, *PIOleItemContainer;

typedef struct IOleItemContainerVtbl IOleItemContainerVtbl, *PIOleItemContainerVtbl;

struct IOleItemContainerVtbl {
    HRESULT (*QueryInterface)(struct IOleItemContainer *, IID *, void **);
    ULONG (*AddRef)(struct IOleItemContainer *);
    ULONG (*Release)(struct IOleItemContainer *);
    HRESULT (*ParseDisplayName)(struct IOleItemContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*EnumObjects)(struct IOleItemContainer *, DWORD, struct IEnumUnknown **);
    HRESULT (*LockContainer)(struct IOleItemContainer *, BOOL);
    HRESULT (*GetObjectA)(struct IOleItemContainer *, LPOLESTR, DWORD, struct IBindCtx *, IID *, void **);
    HRESULT (*GetObjectStorage)(struct IOleItemContainer *, LPOLESTR, struct IBindCtx *, IID *, void **);
    HRESULT (*IsRunning)(struct IOleItemContainer *, LPOLESTR);
};

struct IOleItemContainer {
    struct IOleItemContainerVtbl *lpVtbl;
};

typedef struct tagOBJECTDESCRIPTOR tagOBJECTDESCRIPTOR, *PtagOBJECTDESCRIPTOR;

struct tagOBJECTDESCRIPTOR {
    ULONG cbSize;
    CLSID clsid;
    DWORD dwDrawAspect;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwStatus;
    DWORD dwFullUserTypeName;
    DWORD dwSrcOfCopy;
};

typedef enum tagOLERENDER {
    OLERENDER_NONE=0,
    OLERENDER_DRAW=1,
    OLERENDER_FORMAT=2,
    OLERENDER_ASIS=3
} tagOLERENDER;

typedef enum tagOLERENDER OLERENDER;

typedef OLERENDER *LPOLERENDER;

typedef enum tagOLECONTF {
    OLECONTF_EMBEDDINGS=1,
    OLECONTF_LINKS=2,
    OLECONTF_OTHERS=4,
    OLECONTF_ONLYUSER=8,
    OLECONTF_ONLYIFRUNNING=16
} tagOLECONTF;

typedef enum tagOLECONTF OLECONTF;

typedef enum tagOLELINKBIND {
    OLELINKBIND_EVENIFCLASSDIFF=1
} tagOLELINKBIND;

typedef struct IEnumOLEVERB IEnumOLEVERB, *PIEnumOLEVERB;

typedef struct IEnumOLEVERB *LPENUMOLEVERB;

typedef struct IEnumOLEVERBVtbl IEnumOLEVERBVtbl, *PIEnumOLEVERBVtbl;

typedef struct tagOLEVERB tagOLEVERB, *PtagOLEVERB;

typedef struct tagOLEVERB *LPOLEVERB;

struct tagOLEVERB {
    LONG lVerb;
    LPOLESTR lpszVerbName;
    DWORD fuFlags;
    DWORD grfAttribs;
};

struct IEnumOLEVERB {
    struct IEnumOLEVERBVtbl *lpVtbl;
};

struct IEnumOLEVERBVtbl {
    HRESULT (*QueryInterface)(struct IEnumOLEVERB *, IID *, void **);
    ULONG (*AddRef)(struct IEnumOLEVERB *);
    ULONG (*Release)(struct IEnumOLEVERB *);
    HRESULT (*Next)(struct IEnumOLEVERB *, ULONG, LPOLEVERB, ULONG *);
    HRESULT (*Skip)(struct IEnumOLEVERB *, ULONG);
    HRESULT (*Reset)(struct IEnumOLEVERB *);
    HRESULT (*Clone)(struct IEnumOLEVERB *, struct IEnumOLEVERB **);
};

typedef struct IOleCacheVtbl IOleCacheVtbl, *PIOleCacheVtbl;

typedef struct IOleCache IOleCache, *PIOleCache;

struct IOleCacheVtbl {
    HRESULT (*QueryInterface)(struct IOleCache *, IID *, void **);
    ULONG (*AddRef)(struct IOleCache *);
    ULONG (*Release)(struct IOleCache *);
    HRESULT (*Cache)(struct IOleCache *, FORMATETC *, DWORD, DWORD *);
    HRESULT (*Uncache)(struct IOleCache *, DWORD);
    HRESULT (*EnumCache)(struct IOleCache *, struct IEnumSTATDATA **);
    HRESULT (*InitCache)(struct IOleCache *, struct IDataObject *);
    HRESULT (*SetData)(struct IOleCache *, FORMATETC *, STGMEDIUM *, BOOL);
};

struct IOleCache {
    struct IOleCacheVtbl *lpVtbl;
};

typedef struct IOleCacheControlVtbl IOleCacheControlVtbl, *PIOleCacheControlVtbl;

typedef struct IOleCacheControl IOleCacheControl, *PIOleCacheControl;

struct IOleCacheControl {
    struct IOleCacheControlVtbl *lpVtbl;
};

struct IOleCacheControlVtbl {
    HRESULT (*QueryInterface)(struct IOleCacheControl *, IID *, void **);
    ULONG (*AddRef)(struct IOleCacheControl *);
    ULONG (*Release)(struct IOleCacheControl *);
    HRESULT (*OnRun)(struct IOleCacheControl *, LPDATAOBJECT);
    HRESULT (*OnStop)(struct IOleCacheControl *);
};

typedef struct IDropSource IDropSource, *PIDropSource;

typedef struct IDropSourceVtbl IDropSourceVtbl, *PIDropSourceVtbl;

struct IDropSource {
    struct IDropSourceVtbl *lpVtbl;
};

struct IDropSourceVtbl {
    HRESULT (*QueryInterface)(struct IDropSource *, IID *, void **);
    ULONG (*AddRef)(struct IDropSource *);
    ULONG (*Release)(struct IDropSource *);
    HRESULT (*QueryContinueDrag)(struct IDropSource *, BOOL, DWORD);
    HRESULT (*GiveFeedback)(struct IDropSource *, DWORD);
};

typedef struct IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;

typedef enum tagDISCARDCACHE {
    DISCARDCACHE_SAVEIFDIRTY=0,
    DISCARDCACHE_NOSAVE=1
} tagDISCARDCACHE;

typedef enum tagDISCARDCACHE DISCARDCACHE;

typedef struct tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;

typedef struct IOleCache *LPOLECACHE;

typedef struct IViewObject IViewObject, *PIViewObject;

typedef struct IViewObject *LPVIEWOBJECT;

typedef struct IViewObjectVtbl IViewObjectVtbl, *PIViewObjectVtbl;

struct IViewObjectVtbl {
    HRESULT (*QueryInterface)(struct IViewObject *, IID *, void **);
    ULONG (*AddRef)(struct IViewObject *);
    ULONG (*Release)(struct IViewObject *);
    HRESULT (*Draw)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (*)(ULONG_PTR), ULONG_PTR);
    HRESULT (*GetColorSet)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE **);
    HRESULT (*Freeze)(struct IViewObject *, DWORD, LONG, void *, DWORD *);
    HRESULT (*Unfreeze)(struct IViewObject *, DWORD);
    HRESULT (*SetAdvise)(struct IViewObject *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (*GetAdvise)(struct IViewObject *, DWORD *, DWORD *, struct IAdviseSink **);
};

struct IViewObject {
    struct IViewObjectVtbl *lpVtbl;
};

typedef struct IOleClientSite IOleClientSite, *PIOleClientSite;

typedef struct IOleClientSiteVtbl IOleClientSiteVtbl, *PIOleClientSiteVtbl;

typedef struct IOleContainer IOleContainer, *PIOleContainer;

typedef struct IOleContainerVtbl IOleContainerVtbl, *PIOleContainerVtbl;

struct IOleContainerVtbl {
    HRESULT (*QueryInterface)(struct IOleContainer *, IID *, void **);
    ULONG (*AddRef)(struct IOleContainer *);
    ULONG (*Release)(struct IOleContainer *);
    HRESULT (*ParseDisplayName)(struct IOleContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*EnumObjects)(struct IOleContainer *, DWORD, struct IEnumUnknown **);
    HRESULT (*LockContainer)(struct IOleContainer *, BOOL);
};

struct IOleContainer {
    struct IOleContainerVtbl *lpVtbl;
};

struct IOleClientSite {
    struct IOleClientSiteVtbl *lpVtbl;
};

struct IOleClientSiteVtbl {
    HRESULT (*QueryInterface)(struct IOleClientSite *, IID *, void **);
    ULONG (*AddRef)(struct IOleClientSite *);
    ULONG (*Release)(struct IOleClientSite *);
    HRESULT (*SaveObject)(struct IOleClientSite *);
    HRESULT (*GetMoniker)(struct IOleClientSite *, DWORD, DWORD, struct IMoniker **);
    HRESULT (*GetContainer)(struct IOleClientSite *, struct IOleContainer **);
    HRESULT (*ShowObject)(struct IOleClientSite *);
    HRESULT (*OnShowWindow)(struct IOleClientSite *, BOOL);
    HRESULT (*RequestNewObjectLayout)(struct IOleClientSite *);
};

typedef struct tagOIFI OLEINPLACEFRAMEINFO;

typedef struct IParseDisplayName IParseDisplayName, *PIParseDisplayName;

typedef struct IParseDisplayNameVtbl IParseDisplayNameVtbl, *PIParseDisplayNameVtbl;

struct IParseDisplayNameVtbl {
    HRESULT (*QueryInterface)(struct IParseDisplayName *, IID *, void **);
    ULONG (*AddRef)(struct IParseDisplayName *);
    ULONG (*Release)(struct IParseDisplayName *);
    HRESULT (*ParseDisplayName)(struct IParseDisplayName *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
};

struct IParseDisplayName {
    struct IParseDisplayNameVtbl *lpVtbl;
};

typedef enum tagOLEMISC {
    OLEMISC_RECOMPOSEONRESIZE=1,
    OLEMISC_ONLYICONIC=2,
    OLEMISC_INSERTNOTREPLACE=4,
    OLEMISC_STATIC=8,
    OLEMISC_CANTLINKINSIDE=16,
    OLEMISC_CANLINKBYOLE1=32,
    OLEMISC_ISLINKOBJECT=64,
    OLEMISC_INSIDEOUT=128,
    OLEMISC_ACTIVATEWHENVISIBLE=256,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT=512,
    OLEMISC_INVISIBLEATRUNTIME=1024,
    OLEMISC_ALWAYSRUN=2048,
    OLEMISC_ACTSLIKEBUTTON=4096,
    OLEMISC_ACTSLIKELABEL=8192,
    OLEMISC_NOUIACTIVATE=16384,
    OLEMISC_ALIGNABLE=32768,
    OLEMISC_SIMPLEFRAME=65536,
    OLEMISC_SETCLIENTSITEFIRST=131072,
    OLEMISC_IMEMODE=262144,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE=524288,
    OLEMISC_WANTSTOMENUMERGE=1048576,
    OLEMISC_SUPPORTSMULTILEVELUNDO=2097152
} tagOLEMISC;

typedef enum tagOLEMISC OLEMISC;

typedef struct IOleItemContainer *LPOLEITEMCONTAINER;

typedef struct IOleCache2Vtbl IOleCache2Vtbl, *PIOleCache2Vtbl;

typedef struct IOleCache2 IOleCache2, *PIOleCache2;

struct IOleCache2Vtbl {
    HRESULT (*QueryInterface)(struct IOleCache2 *, IID *, void **);
    ULONG (*AddRef)(struct IOleCache2 *);
    ULONG (*Release)(struct IOleCache2 *);
    HRESULT (*Cache)(struct IOleCache2 *, FORMATETC *, DWORD, DWORD *);
    HRESULT (*Uncache)(struct IOleCache2 *, DWORD);
    HRESULT (*EnumCache)(struct IOleCache2 *, struct IEnumSTATDATA **);
    HRESULT (*InitCache)(struct IOleCache2 *, struct IDataObject *);
    HRESULT (*SetData)(struct IOleCache2 *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (*UpdateCache)(struct IOleCache2 *, LPDATAOBJECT, DWORD, LPVOID);
    HRESULT (*DiscardCache)(struct IOleCache2 *, DWORD);
};

struct IOleCache2 {
    struct IOleCache2Vtbl *lpVtbl;
};

typedef struct IDropSource *LPDROPSOURCE;

typedef struct IOleCacheControl *LPOLECACHECONTROL;

typedef enum tagUSERCLASSTYPE {
    USERCLASSTYPE_FULL=1,
    USERCLASSTYPE_SHORT=2,
    USERCLASSTYPE_APPNAME=3
} tagUSERCLASSTYPE;

typedef enum tagOLEGETMONIKER {
    OLEGETMONIKER_ONLYIFTHERE=1,
    OLEGETMONIKER_FORCEASSIGN=2,
    OLEGETMONIKER_UNASSIGN=3,
    OLEGETMONIKER_TEMPFORUSER=4
} tagOLEGETMONIKER;

typedef RECT BORDERWIDTHS;

typedef struct IViewObject2 *LPVIEWOBJECT2;

typedef struct IParseDisplayName *LPPARSEDISPLAYNAME;

typedef struct IOleLink *LPOLELINK;

typedef struct IOleAdviseHolderVtbl IOleAdviseHolderVtbl, *PIOleAdviseHolderVtbl;

typedef struct IOleAdviseHolder IOleAdviseHolder, *PIOleAdviseHolder;

struct IOleAdviseHolderVtbl {
    HRESULT (*QueryInterface)(struct IOleAdviseHolder *, IID *, void **);
    ULONG (*AddRef)(struct IOleAdviseHolder *);
    ULONG (*Release)(struct IOleAdviseHolder *);
    HRESULT (*Advise)(struct IOleAdviseHolder *, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IOleAdviseHolder *, DWORD);
    HRESULT (*EnumAdvise)(struct IOleAdviseHolder *, struct IEnumSTATDATA **);
    HRESULT (*SendOnRename)(struct IOleAdviseHolder *, struct IMoniker *);
    HRESULT (*SendOnSave)(struct IOleAdviseHolder *);
    HRESULT (*SendOnClose)(struct IOleAdviseHolder *);
};

struct IOleAdviseHolder {
    struct IOleAdviseHolderVtbl *lpVtbl;
};

typedef enum tagOLEWHICHMK {
    OLEWHICHMK_CONTAINER=1,
    OLEWHICHMK_OBJREL=2,
    OLEWHICHMK_OBJFULL=3
} tagOLEWHICHMK;

typedef enum tagOLEWHICHMK OLEWHICHMK;

typedef enum tagOLECLOSE {
    OLECLOSE_SAVEIFDIRTY=0,
    OLECLOSE_NOSAVE=1,
    OLECLOSE_PROMPTSAVE=2
} tagOLECLOSE;

typedef enum tagOLECLOSE OLECLOSE;

typedef struct IContinue IContinue, *PIContinue;

typedef struct IContinueVtbl IContinueVtbl, *PIContinueVtbl;

struct IContinueVtbl {
    HRESULT (*QueryInterface)(struct IContinue *, IID *, void **);
    ULONG (*AddRef)(struct IContinue *);
    ULONG (*Release)(struct IContinue *);
    HRESULT (*FContinue)(struct IContinue *);
};

struct IContinue {
    struct IContinueVtbl *lpVtbl;
};

typedef struct IOleObject IOleObject, *PIOleObject;

typedef struct IOleObjectVtbl IOleObjectVtbl, *PIOleObjectVtbl;

struct IOleObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleObject *);
    ULONG (*Release)(struct IOleObject *);
    HRESULT (*SetClientSite)(struct IOleObject *, struct IOleClientSite *);
    HRESULT (*GetClientSite)(struct IOleObject *, struct IOleClientSite **);
    HRESULT (*SetHostNames)(struct IOleObject *, LPCOLESTR, LPCOLESTR);
    HRESULT (*Close)(struct IOleObject *, DWORD);
    HRESULT (*SetMoniker)(struct IOleObject *, DWORD, struct IMoniker *);
    HRESULT (*GetMoniker)(struct IOleObject *, DWORD, DWORD, struct IMoniker **);
    HRESULT (*InitFromData)(struct IOleObject *, struct IDataObject *, BOOL, DWORD);
    HRESULT (*GetClipboardData)(struct IOleObject *, DWORD, struct IDataObject **);
    HRESULT (*DoVerb)(struct IOleObject *, LONG, LPMSG, struct IOleClientSite *, LONG, HWND, LPCRECT);
    HRESULT (*EnumVerbs)(struct IOleObject *, struct IEnumOLEVERB **);
    HRESULT (*Update)(struct IOleObject *);
    HRESULT (*IsUpToDate)(struct IOleObject *);
    HRESULT (*GetUserClassID)(struct IOleObject *, CLSID *);
    HRESULT (*GetUserType)(struct IOleObject *, DWORD, LPOLESTR *);
    HRESULT (*SetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (*GetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (*Advise)(struct IOleObject *, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IOleObject *, DWORD);
    HRESULT (*EnumAdvise)(struct IOleObject *, struct IEnumSTATDATA **);
    HRESULT (*GetMiscStatus)(struct IOleObject *, DWORD, DWORD *);
    HRESULT (*SetColorScheme)(struct IOleObject *, LOGPALETTE *);
};

struct IOleObject {
    struct IOleObjectVtbl *lpVtbl;
};

typedef enum tagOLEVERBATTRIB {
    OLEVERBATTRIB_NEVERDIRTIES=1,
    OLEVERBATTRIB_ONCONTAINERMENU=2
} tagOLEVERBATTRIB;

typedef struct IOleAdviseHolder *LPOLEADVISEHOLDER;

typedef struct tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;

typedef struct IDropTarget IDropTarget, *PIDropTarget;

typedef struct IDropTarget *LPDROPTARGET;

typedef struct IDropTargetVtbl IDropTargetVtbl, *PIDropTargetVtbl;

struct IDropTargetVtbl {
    HRESULT (*QueryInterface)(struct IDropTarget *, IID *, void **);
    ULONG (*AddRef)(struct IDropTarget *);
    ULONG (*Release)(struct IDropTarget *);
    HRESULT (*DragEnter)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
    HRESULT (*DragOver)(struct IDropTarget *, DWORD, POINTL, DWORD *);
    HRESULT (*DragLeave)(struct IDropTarget *);
    HRESULT (*Drop)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
};

struct IDropTarget {
    struct IDropTargetVtbl *lpVtbl;
};

typedef struct IOleCache2 *LPOLECACHE2;

typedef LPRECT LPBORDERWIDTHS;

typedef struct IOleInPlaceFrame *LPOLEINPLACEFRAME;

typedef struct IOleInPlaceSite *LPOLEINPLACESITE;

typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;

typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;

typedef struct IOleObject *LPOLEOBJECT;

typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;

typedef struct IOleContainer *LPOLECONTAINER;

typedef struct IOleWindowVtbl IOleWindowVtbl, *PIOleWindowVtbl;

typedef struct IOleWindow IOleWindow, *PIOleWindow;

struct IOleWindowVtbl {
    HRESULT (*QueryInterface)(struct IOleWindow *, IID *, void **);
    ULONG (*AddRef)(struct IOleWindow *);
    ULONG (*Release)(struct IOleWindow *);
    HRESULT (*GetWindow)(struct IOleWindow *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleWindow *, BOOL);
};

struct IOleWindow {
    struct IOleWindowVtbl *lpVtbl;
};

typedef struct IOleClientSite *LPOLECLIENTSITE;

typedef struct IOleWindow *LPOLEWINDOW;

typedef enum tagOLELINKBIND OLELINKBIND;

typedef struct tagOLEVERB OLEVERB;

typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;

typedef enum tagOLEGETMONIKER OLEGETMONIKER;

typedef struct IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;

typedef OLEUPDATE *LPOLEUPDATE;

typedef enum tagBINDSPEED {
    BINDSPEED_INDEFINITE=1,
    BINDSPEED_MODERATE=2,
    BINDSPEED_IMMEDIATE=3
} tagBINDSPEED;

typedef enum tagBINDSPEED BINDSPEED;

typedef struct tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;

typedef enum tagUSERCLASSTYPE USERCLASSTYPE;

#define MK_ALT 32

#define DD_DEFDRAGDELAY 200

#define DROPEFFECT_MOVE 2

#define DROPEFFECT_SCROLL 2147483648

#define DD_DEFSCROLLINSET 11

#define UPDFCACHE_ONSAVECACHE 2

#define UPDFCACHE_NODATACACHE 1

#define DD_DEFSCROLLDELAY 50

#define UPDFCACHE_IFBLANK 16

#define UPDFCACHE_ONSTOPCACHE 4

#define UPDFCACHE_NORMALCACHE 8

#define DD_DEFSCROLLINTERVAL 50

#define UPDFCACHE_ALLBUTNODATACACHE -2147483650

#define UPDFCACHE_ALL -2147483649

#define DROPEFFECT_LINK 4

#define DROPEFFECT_COPY 1

#define UPDFCACHE_ONLYIFBLANK 2147483648

#define DROPEFFECT_NONE 0

#define UPDFCACHE_IFBLANKORONSAVECACHE 18

#define DD_DEFDRAGMINDIST 2

typedef struct fpos_t fpos_t, *Pfpos_t;

struct fpos_t {
    uint lopart;
    int hipart;
};

#define _IOWRT 2

#define FOPEN_MAX 20

#define _IORW 128

#define _IONBF 4

#define _IOEOF 16

#define _IOMYBUF 8

#define _IOERR 32

#define _IOLBF 64

#define SYS_OPEN 20

#define _SYS_OPEN 20

#define EOF -1

#define _IOSTRG 64

#define _IOFBF 0

#define _IOREAD 1

#define _IOB_ENTRIES 20

#define FILENAME_MAX 260

#define TMP_MAX 32767

#define BUFSIZ 512

#define _NSTREAM_ 512

#define _NFILE 512

typedef z_stream *z_streamp;

typedef void *voidp;

typedef voidp gzFile;

#define Z_DEFLATED 8

#define Z_DEFAULT_STRATEGY 0

#define Z_FILTERED 1

#define Z_BEST_SPEED 1

#define Z_PARTIAL_FLUSH 1

#define Z_ERRNO -1

#define Z_STREAM_END 1

#define Z_VERSION_ERROR -6

#define Z_SYNC_FLUSH 2

#define Z_UNKNOWN 2

#define Z_NO_FLUSH 0

#define Z_DEFAULT_COMPRESSION -1

#define Z_NEED_DICT 2

#define Z_FINISH 4

#define Z_DATA_ERROR -3

#define Z_BEST_COMPRESSION 9

#define Z_NO_COMPRESSION 0

#define Z_STREAM_ERROR -2

#define Z_BINARY 0

#define Z_ASCII 1

#define Z_FULL_FLUSH 3

#define Z_BUF_ERROR -5

#define Z_HUFFMAN_ONLY 2

#define Z_MEM_ERROR -4

#define Z_NULL 0

#define Z_OK 0

typedef struct _UNIVERSAL_NAME_INFOA _UNIVERSAL_NAME_INFOA, *P_UNIVERSAL_NAME_INFOA;

typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;

typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;

struct _UNIVERSAL_NAME_INFOA {
    LPSTR lpUniversalName;
};

typedef struct _CONNECTDLGSTRUCTW _CONNECTDLGSTRUCTW, *P_CONNECTDLGSTRUCTW;

typedef struct _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

typedef struct _NETRESOURCEW _NETRESOURCEW, *P_NETRESOURCEW;

typedef struct _NETRESOURCEW *LPNETRESOURCEW;

struct _CONNECTDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEW lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

struct _NETRESOURCEW {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    LPWSTR lpComment;
    LPWSTR lpProvider;
};

typedef UINT (*PFNGETPROFILEPATHW)(LPCWSTR, LPWSTR, UINT);

typedef UINT (*PFNRECONCILEPROFILEA)(LPCSTR, LPCSTR, DWORD);

typedef struct _NETRESOURCEA _NETRESOURCEA, *P_NETRESOURCEA;

typedef struct _NETRESOURCEA *LPNETRESOURCEA;

struct _NETRESOURCEA {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    LPSTR lpComment;
    LPSTR lpProvider;
};

typedef struct _REMOTE_NAME_INFOW _REMOTE_NAME_INFOW, *P_REMOTE_NAME_INFOW;

struct _REMOTE_NAME_INFOW {
    LPWSTR lpUniversalName;
    LPWSTR lpConnectionName;
    LPWSTR lpRemainingPath;
};

typedef struct _CONNECTDLGSTRUCTA _CONNECTDLGSTRUCTA, *P_CONNECTDLGSTRUCTA;

typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;

struct _CONNECTDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEA lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

typedef struct _DISCDLGSTRUCTA _DISCDLGSTRUCTA, *P_DISCDLGSTRUCTA;

struct _DISCDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _NETINFOSTRUCT _NETINFOSTRUCT, *P_NETINFOSTRUCT;

typedef struct _NETINFOSTRUCT *LPNETINFOSTRUCT;

struct _NETINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwProviderVersion;
    DWORD dwStatus;
    DWORD dwCharacteristics;
    ULONG_PTR dwHandle;
    WORD wNetType;
    DWORD dwPrinters;
    DWORD dwDrives;
};

typedef struct _NETCONNECTINFOSTRUCT _NETCONNECTINFOSTRUCT, *P_NETCONNECTINFOSTRUCT;

struct _NETCONNECTINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwFlags;
    DWORD dwSpeed;
    DWORD dwDelay;
    DWORD dwOptDataSize;
};

typedef LPNETRESOURCEA LPNETRESOURCE;

typedef struct _UNIVERSAL_NAME_INFOW _UNIVERSAL_NAME_INFOW, *P_UNIVERSAL_NAME_INFOW;

struct _UNIVERSAL_NAME_INFOW {
    LPWSTR lpUniversalName;
};

typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCTA;

typedef DISCDLGSTRUCTA DISCDLGSTRUCT;

typedef BOOL (*PFNPROCESSPOLICIESW)(HWND, LPCWSTR, LPCWSTR, LPCWSTR, DWORD);

typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;

typedef struct _REMOTE_NAME_INFOA _REMOTE_NAME_INFOA, *P_REMOTE_NAME_INFOA;

typedef struct _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO;

struct _REMOTE_NAME_INFOA {
    LPSTR lpUniversalName;
    LPSTR lpConnectionName;
    LPSTR lpRemainingPath;
};

typedef struct _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;

typedef struct _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

typedef BOOL (*PFNPROCESSPOLICIESA)(HWND, LPCSTR, LPCSTR, LPCSTR, DWORD);

typedef struct _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO;

typedef struct _DISCDLGSTRUCTW _DISCDLGSTRUCTW, *P_DISCDLGSTRUCTW;

typedef struct _DISCDLGSTRUCTW DISCDLGSTRUCTW;

struct _DISCDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;

typedef struct _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT;

typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;

typedef struct _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

typedef struct _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;

typedef struct _NETRESOURCEA NETRESOURCEA;

typedef NETRESOURCEA NETRESOURCE;

typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT;

typedef struct _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

typedef struct _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

typedef struct _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

typedef struct _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;

typedef UINT (*PFNGETPROFILEPATHA)(LPCSTR, LPSTR, UINT);

typedef struct _NETINFOSTRUCT NETINFOSTRUCT;

typedef struct _NETRESOURCEW NETRESOURCEW;

typedef struct _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;

typedef UINT (*PFNRECONCILEPROFILEW)(LPCWSTR, LPCWSTR, DWORD);

#define RESOURCE_CONNECTED 1

#define RESOURCEUSAGE_CONTAINER 2

#define RESOURCEDISPLAYTYPE_FILE 4

#define WNNC_CRED_MANAGER 4294901760

#define CONNECT_UPDATE_RECENT 2

#define RESOURCEDISPLAYTYPE_TREE 10

#define WN_OUT_OF_MEMORY 8

#define WN_WINDOWS_ERROR 59

#define WNNC_NET_KNOWARE 3080192

#define CONNDLG_PERSIST 16

#define WNNC_NET_SYMFONET 1376256

#define WNNC_NET_LOCK 3473408

#define RESOURCEUSAGE_CONNECTABLE 1

#define CONNDLG_CONN_POINT 2

#define WN_NOT_AUTHENTICATED 1244

#define WN_BAD_LOCALNAME 1200

#define WN_CONNECTION_CLOSED 1201

#define WNNC_NET_MSNET 65536

#define WN_FUNCTION_BUSY 170

#define WNNC_NET_COGENT 1114112

#define WN_BAD_NETNAME 67

#define WNNC_NET_MASFAX 3211264

#define WNNC_NET_RIVERFRONT1 1966080

#define WNNC_NET_RIVERFRONT2 2031616

#define WN_NOT_CONNECTED 2250

#define NETINFO_PRINTERRED 8

#define WNNC_NET_AS400 720896

#define NETINFO_DISKRED 4

#define WNNC_NET_NETWARE 196608

#define WN_ACCESS_DENIED 5

#define WN_DEVICE_ALREADY_REMEMBERED 1202

#define RESOURCEDISPLAYTYPE_GENERIC 0

#define WN_RETRY 1237

#define UNIVERSAL_NAME_INFO_LEVEL 1

#define RESOURCETYPE_UNKNOWN 4294967295

#define RESOURCEUSAGE_RESERVED 2147483648

#define CONNECT_UPDATE_PROFILE 1

#define WNNC_NET_PATHWORKS 851968

#define WN_CANCEL 1223

#define RESOURCETYPE_DISK 1

#define WNNC_NET_LIFENET 917504

#define CONNDLG_RO_PATH 1

#define RESOURCETYPE_ANY 0

#define CONNECT_DEFERRED 1024

#define WN_BAD_LEVEL 124

#define CONNECT_RESERVED 4278190080

#define PP_DISPLAYERRORS 1

#define CONNDLG_HIDE_BOX 8

#define WNNC_NET_EXIFS 2949120

#define CONNECT_NEED_DRIVE 32

#define WNNC_NET_TWINS 2359296

#define WNNC_NET_CLEARCASE 1441792

#define WN_NO_MORE_DEVICES 1248

#define CONNECT_PROMPT 16

#define WNNC_NET_LANSTEP 524288

#define WNNC_NET_FTP_NFS 786432

#define WN_NOT_INITIALIZING 1247

#define WNNC_NET_PROTSTOR 2162688

#define CONNDLG_NOT_PERSIST 32

#define WN_MORE_DATA 234

#define WN_NOT_CONTAINER 1207

#define WNNC_NET_TERMSRV 3538944

#define WN_BAD_HANDLE 6

#define WN_NO_NET_OR_BAD_PATH 1203

#define WNNC_NET_SERNET 1900544

#define RESOURCEDISPLAYTYPE_SHAREADMIN 8

#define DISC_UPDATE_PROFILE 1

#define WNNC_NET_FOXBAT 2818048

#define RESOURCEDISPLAYTYPE_SERVER 2

#define RESOURCEUSAGE_ATTACHED 16

#define WNNC_NET_SHIVA 3342336

#define WNNC_NET_BWNFS 1048576

#define WN_BAD_PROFILE 1206

#define WNCON_FORNETCARD 1

#define WNNC_NET_9TILES 589824

#define WNNC_NET_FRONTIER 1507328

#define WNNC_NET_INTERGRAPH 1310720

#define WN_NOT_VALIDATED 1311

#define WN_NOT_LOGGED_ON 1245

#define WN_BAD_DEV_TYPE 66

#define RESOURCE_CONTEXT 5

#define WN_SUCCESS 0

#define WN_BAD_PASSWORD 86

#define WNNC_NET_VINES 262144

#define CONNDLG_USE_MRU 4

#define WNFMT_CONNECTION 32

#define WN_CANNOT_OPEN_PROFILE 1205

#define WNNC_NET_YAHOO 2883584

#define RESOURCEDISPLAYTYPE_NDSCONTAINER 11

#define WNNC_NET_LANMAN 131072

#define RESOURCEUSAGE_ALL 19

#define WNNC_NET_AVID 1703936

#define WN_NET_ERROR 59

#define WNNC_NET_DECORB 2097152

#define WN_DEVICE_ERROR 31

#define WNNC_NET_CSC 2490368

#define RESOURCEDISPLAYTYPE_NETWORK 6

#define WNNC_NET_LANTASTIC 655360

#define WNCON_DYNAMIC 8

#define WNNC_NET_STAC 2752512

#define WNNC_NET_MANGOSOFT 1835008

#define WN_ALREADY_CONNECTED 85

#define WN_OPEN_FILES 2401

#define RESOURCEDISPLAYTYPE_ROOT 7

#define RESOURCE_RECENT 4

#define WN_BAD_VALUE 87

#define WNNC_NET_FJ_REDIR 2228224

#define WN_NO_MORE_ENTRIES 259

#define WNCON_NOTROUTED 2

#define CONNECT_REFCOUNT 64

#define WNNC_NET_DISTINCT 2293760

#define WN_NOT_SUPPORTED 50

#define WNNC_NET_SUN_PC_NFS 458752

#define RESOURCEDISPLAYTYPE_DOMAIN 1

#define CONNECT_LOCALDRIVE 256

#define WN_CONNECTED_OTHER_PASSWORD 2108

#define DISC_NO_FORCE 64

#define WN_DEVICE_IN_USE 2404

#define WNNC_NET_DOCUSPACE 1769472

#define WN_NO_NETWORK 1222

#define RESOURCEDISPLAYTYPE_DIRECTORY 9

#define RESOURCEDISPLAYTYPE_SHARE 3

#define CONNECT_CMD_SAVECRED 4096

#define WNNC_NET_HOB_NFS 3276800

#define WNCON_SLOWLINK 4

#define WN_BAD_POINTER 487

#define NETPROPERTY_PERSISTENT 1

#define WNNC_NET_LOCUS 393216

#define WN_EXTENDED_ERROR 1208

#define WNNC_NET_APPLETALK 1245184

#define WNNC_NET_FARALLON 1179648

#define RESOURCE_REMEMBERED 3

#define CONNECT_INTERACTIVE 8

#define WNNC_NET_IBMAL 3407872

#define RP_LOGON 1

#define RP_INIFILE 2

#define RESOURCE_GLOBALNET 2

#define RESOURCEUSAGE_SIBLING 8

#define RESOURCEUSAGE_NOLOCALDEVICE 4

#define CONNECT_CURRENT_MEDIA 512

#define WNNC_NET_3IN1 2555904

#define WNNC_NET_BMC 1572864

#define WN_BAD_USER 2202

#define WNNC_NET_EXTENDNET 2686976

#define WNNC_NET_10NET 327680

#define RESOURCEDISPLAYTYPE_GROUP 5

#define WNNC_NET_OBJECT_DIRE 3145728

#define WN_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define CONNECT_COMMANDLINE 2048

#define WNNC_NET_DAV 3014656

#define NETINFO_DLL16 1

#define WNNC_NET_POWERLAN 983040

#define WNFMT_INENUM 16

#define WNNC_NET_RDR2SAMPLE 2424832

#define WNNC_NET_DCE 1638400

#define WNFMT_MULTILINE 1

#define WN_NO_ERROR 0

#define REMOTE_NAME_INFO_LEVEL 2

#define WN_BAD_PROVIDER 1204

#define WNFMT_ABBREVIATED 2

#define CONNECT_REDIRECT 128

#define CONNECT_TEMPORARY 4

#define RESOURCETYPE_PRINT 2

#define RESOURCETYPE_RESERVED 8

typedef struct tagPDEXW tagPDEXW, *PtagPDEXW;

typedef struct tagPRINTPAGERANGE tagPRINTPAGERANGE, *PtagPRINTPAGERANGE;

typedef struct tagPRINTPAGERANGE *LPPRINTPAGERANGE;

typedef struct _PSP _PSP, *P_PSP;

typedef struct _PSP *HPROPSHEETPAGE;

struct tagPRINTPAGERANGE {
    DWORD nFromPage;
    DWORD nToPage;
};

struct tagPDEXW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCWSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE *lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

struct _PSP {
};

typedef struct _OFNOTIFYA _OFNOTIFYA, *P_OFNOTIFYA;

typedef struct _OFNOTIFYA OFNOTIFYA;

typedef struct tagNMHDR tagNMHDR, *PtagNMHDR;

typedef struct tagNMHDR NMHDR;

typedef struct tagOFNA tagOFNA, *PtagOFNA;

typedef struct tagOFNA *LPOPENFILENAMEA;

typedef UINT_PTR (*LPOFNHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagNMHDR {
    HWND hwndFrom;
    UINT_PTR idFrom;
    UINT code;
};

struct _OFNOTIFYA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPSTR pszFile;
};

struct tagOFNA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagCHOOSEFONTA tagCHOOSEFONTA, *PtagCHOOSEFONTA;

typedef UINT_PTR (*LPCFHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagCHOOSEFONTA {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTA lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
    HINSTANCE hInstance;
    LPSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

typedef struct tagDEVNAMES tagDEVNAMES, *PtagDEVNAMES;

struct tagDEVNAMES {
    WORD wDriverOffset;
    WORD wDeviceOffset;
    WORD wOutputOffset;
    WORD wDefault;
};

typedef struct _OFNOTIFYW _OFNOTIFYW, *P_OFNOTIFYW;

typedef struct tagOFNW tagOFNW, *PtagOFNW;

typedef struct tagOFNW *LPOPENFILENAMEW;

struct _OFNOTIFYW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPWSTR pszFile;
};

struct tagOFNW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct _OFNOTIFYW OFNOTIFYW;

typedef struct _OFNOTIFYEXA _OFNOTIFYEXA, *P_OFNOTIFYEXA;

typedef struct _OFNOTIFYEXA OFNOTIFYEXA;

struct _OFNOTIFYEXA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

typedef OFNOTIFYEXA OFNOTIFYEX;

typedef struct tagFINDREPLACEA tagFINDREPLACEA, *PtagFINDREPLACEA;

typedef struct tagFINDREPLACEA *LPFINDREPLACEA;

typedef LPFINDREPLACEA LPFINDREPLACE;

typedef UINT_PTR (*LPFRHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagFINDREPLACEA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPSTR lpstrFindWhat;
    LPSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagCHOOSECOLORW tagCHOOSECOLORW, *PtagCHOOSECOLORW;

typedef struct tagCHOOSECOLORW CHOOSECOLORW;

typedef UINT_PTR (*LPCCHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagCHOOSECOLORW {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF *lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct tagPDA tagPDA, *PtagPDA;

typedef struct tagPDA PRINTDLGA;

typedef PRINTDLGA PRINTDLG;

typedef UINT_PTR (*LPPRINTHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

typedef UINT_PTR (*LPSETUPHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagPDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCSTR lpPrintTemplateName;
    LPCSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct _OFNOTIFYEXW _OFNOTIFYEXW, *P_OFNOTIFYEXW;

struct _OFNOTIFYEXW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

typedef struct tagPDEXA tagPDEXA, *PtagPDEXA;

typedef struct tagPDEXA PRINTDLGEXA;

typedef PRINTDLGEXA PRINTDLGEX;

struct tagPDEXA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE *lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

typedef struct _OFNOTIFYEXW OFNOTIFYEXW;

typedef struct tagOFNW OPENFILENAMEW;

typedef LPOPENFILENAMEA LPOPENFILENAME;

typedef struct tagOFN_NT4A tagOFN_NT4A, *PtagOFN_NT4A;

typedef struct tagOFN_NT4A OPENFILENAME_NT4A;

struct tagOFN_NT4A {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct _OFNOTIFYW *LPOFNOTIFYW;

typedef struct tagCHOOSECOLORA tagCHOOSECOLORA, *PtagCHOOSECOLORA;

typedef struct tagCHOOSECOLORA CHOOSECOLORA;

struct tagCHOOSECOLORA {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF *lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagPSDA tagPSDA, *PtagPSDA;

typedef struct tagPSDA PAGESETUPDLGA;

typedef PAGESETUPDLGA PAGESETUPDLG;

typedef UINT_PTR (*LPPAGESETUPHOOK)(HWND, UINT, WPARAM, LPARAM);

typedef UINT_PTR (*LPPAGEPAINTHOOK)(HWND, UINT, WPARAM, LPARAM);

struct tagPSDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef struct tagOFN_NT4W tagOFN_NT4W, *PtagOFN_NT4W;

typedef struct tagOFN_NT4W OPENFILENAME_NT4W;

struct tagOFN_NT4W {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct tagPDEXA *LPPRINTDLGEXA;

typedef LPPRINTDLGEXA LPPRINTDLGEX;

typedef struct _OFNOTIFYA *LPOFNOTIFYA;

typedef struct tagPDW tagPDW, *PtagPDW;

struct tagPDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCWSTR lpPrintTemplateName;
    LPCWSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct tagOFNA OPENFILENAMEA;

typedef struct IPrintDialogServicesVtbl IPrintDialogServicesVtbl, *PIPrintDialogServicesVtbl;

typedef struct IPrintDialogServices IPrintDialogServices, *PIPrintDialogServices;

struct IPrintDialogServicesVtbl {
    HRESULT (*QueryInterface)(struct IPrintDialogServices *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IPrintDialogServices *);
    ULONG (*Release)(struct IPrintDialogServices *);
    HRESULT (*GetCurrentDevMode)(struct IPrintDialogServices *, LPDEVMODE, UINT *);
    HRESULT (*GetCurrentPrinterName)(struct IPrintDialogServices *, LPTSTR, UINT *);
    HRESULT (*GetCurrentPortName)(struct IPrintDialogServices *, LPTSTR, UINT *);
};

struct IPrintDialogServices {
    struct IPrintDialogServicesVtbl *lpVtbl;
};

typedef struct tagPRINTPAGERANGE PRINTPAGERANGE;

typedef struct _OFNOTIFYEXA *LPOFNOTIFYEXA;

typedef struct tagPDW PRINTDLGW;

typedef struct tagCHOOSECOLORW *LPCHOOSECOLORW;

typedef struct tagOFN_NT4A *LPOPENFILENAME_NT4A;

typedef struct tagFINDREPLACEA FINDREPLACEA;

typedef FINDREPLACEA FINDREPLACE;

typedef OPENFILENAMEA OPENFILENAME;

typedef struct tagCHOOSEFONTA CHOOSEFONTA;

typedef struct tagFINDREPLACEW tagFINDREPLACEW, *PtagFINDREPLACEW;

typedef struct tagFINDREPLACEW *LPFINDREPLACEW;

struct tagFINDREPLACEW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPWSTR lpstrFindWhat;
    LPWSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct _OFNOTIFYEXW *LPOFNOTIFYEXW;

typedef struct tagCHOOSEFONTW tagCHOOSEFONTW, *PtagCHOOSEFONTW;

struct tagCHOOSEFONTW {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTW lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
    HINSTANCE hInstance;
    LPWSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

typedef struct tagCHOOSEFONTA *LPCHOOSEFONTA;

typedef LPCHOOSEFONTA LPCHOOSEFONT;

typedef struct tagPDEXW PRINTDLGEXW;

typedef struct tagCHOOSEFONTW CHOOSEFONTW;

typedef struct tagPDEXW *LPPRINTDLGEXW;

typedef struct tagCHOOSEFONTW *LPCHOOSEFONTW;

typedef struct tagPDA *LPPRINTDLGA;

typedef LPPRINTDLGA LPPRINTDLG;

typedef struct IPrintDialogCallback IPrintDialogCallback, *PIPrintDialogCallback;

typedef struct IPrintDialogCallbackVtbl IPrintDialogCallbackVtbl, *PIPrintDialogCallbackVtbl;

struct IPrintDialogCallback {
    struct IPrintDialogCallbackVtbl *lpVtbl;
};

struct IPrintDialogCallbackVtbl {
    HRESULT (*QueryInterface)(struct IPrintDialogCallback *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IPrintDialogCallback *);
    ULONG (*Release)(struct IPrintDialogCallback *);
    HRESULT (*InitDone)(struct IPrintDialogCallback *);
    HRESULT (*SelectionChange)(struct IPrintDialogCallback *);
    HRESULT (*HandleMessage)(struct IPrintDialogCallback *, HWND, UINT, WPARAM, LPARAM, LRESULT *);
};

typedef struct tagPSDW tagPSDW, *PtagPSDW;

typedef struct tagPSDW PAGESETUPDLGW;

struct tagPSDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCWSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef OFNOTIFYA OFNOTIFY;

typedef struct tagCHOOSECOLORA *LPCHOOSECOLORA;

typedef struct tagPSDW *LPPAGESETUPDLGW;

typedef struct tagPSDA *LPPAGESETUPDLGA;

typedef LPPAGESETUPDLGA LPPAGESETUPDLG;

typedef LPCHOOSECOLORA LPCHOOSECOLOR;

typedef struct tagDEVNAMES DEVNAMES;

typedef struct tagPDW *LPPRINTDLGW;

typedef LPOFNOTIFYA LPOFNOTIFY;

typedef struct tagOFN_NT4W *LPOPENFILENAME_NT4W;

typedef CHOOSEFONTA CHOOSEFONT;

typedef OPENFILENAME_NT4A OPENFILENAME_NT4;

typedef struct tagFINDREPLACEW FINDREPLACEW;

typedef LPOFNOTIFYEXA LPOFNOTIFYEX;

typedef CHOOSECOLORA CHOOSECOLOR;

typedef LPOPENFILENAME_NT4A LPOPENFILENAME_NT4;

typedef struct tagDEVNAMES *LPDEVNAMES;

#define FR_REPLACE 16

#define CF_NOSIMULATIONS 4096

#define SIMULATED_FONTTYPE 32768

#define OFN_FILEMUSTEXIST 4096

#define PD_ALLPAGES 0

#define WM_PSD_PAGESETUPDLG 1024

#define CF_NOSIZESEL 2097152

#define PSD_ENABLEPAGESETUPTEMPLATEHANDLE 131072

#define CF_ENABLETEMPLATE 16

#define PD_NOPAGENUMS 8

#define CF_SCREENFONTS 1

#define PD_ENABLESETUPTEMPLATE 32768

#define CF_NOSTYLESEL 1048576

#define FR_MATCHKASHIDA 1073741824

#define PD_COLLATE 16

#define CDM_LAST 1224

#define CF_LIMITSIZE 8192

#define OFN_SHARENOWARN 1

#define CDN_FIRST -601

#define REGULAR_FONTTYPE 1024

#define WM_CHOOSEFONT_SETFLAGS 1126

#define OFN_SHAREFALLTHROUGH 2

#define PSD_DISABLEPRINTER 32

#define CDN_TYPECHANGE -607

#define CDN_INITDONE -601

#define OFN_ENABLEHOOK 32

#define WM_PSD_FULLPAGERECT 1025

#define CDN_HELP -605

#define CF_BOTH 3

#define OFN_NONETWORKBUTTON 131072

#define OFN_OVERWRITEPROMPT 2

#define CF_SCALABLEONLY 131072

#define CF_NOOEMFONTS 2048

#define CDN_FILEOK -606

#define PSD_INTHOUSANDTHSOFINCHES 4

#define FR_ENABLETEMPLATEHANDLE 8192

#define CDM_GETFILEPATH 1125

#define CC_FULLOPEN 2

#define CDN_INCLUDEITEM -608

#define PD_ENABLEPRINTTEMPLATEHANDLE 65536

#define START_PAGE_GENERAL 4294967295

#define CF_ENABLETEMPLATEHANDLE 32

#define PD_RETURNIC 512

#define CDN_FOLDERCHANGE -603

#define PSD_MINMARGINS 1

#define PSD_ENABLEPAGESETUPTEMPLATE 32768

#define CF_FORCEFONTEXIST 65536

#define CF_FIXEDPITCHONLY 16384

#define OFN_LONGNAMES 2097152

#define PD_EXCL_COPIESANDCOLLATE 33024

#define PSD_ENABLEPAGEPAINTHOOK 262144

#define PD_USEDEVMODECOPIESANDCOLLATE 262144

#define CF_EFFECTS 256

#define CDM_FIRST 1124

#define CF_NOVECTORFONTS 2048

#define OFN_NOCHANGEDIR 8

#define WM_PSD_MARGINRECT 1027

#define CDM_HIDECONTROL 1129

#define PD_RESULT_APPLY 2

#define PD_NONETWORKBUTTON 2097152

#define CC_ENABLETEMPLATEHANDLE 64

#define FR_HIDEMATCHCASE 32768

#define PSD_INWININIINTLMEASURE 0

#define PD_NOWARNING 128

#define OFN_ENABLEINCLUDENOTIFY 4194304

#define CF_ENABLEHOOK 8

#define FR_HIDEUPDOWN 16384

#define PD_ENABLEPRINTTEMPLATE 16384

#define PSD_SHOWHELP 2048

#define PD_SHOWHELP 2048

#define CF_WYSIWYG 32768

#define OFN_CREATEPROMPT 8192

#define OFN_SHAREWARN 0

#define PD_RESULT_PRINT 1

#define PD_RETURNDC 256

#define FR_ENABLETEMPLATE 512

#define FR_ENABLEHOOK 256

#define PD_EXCLUSIONFLAGS 16777216

#define CDN_SELCHANGE -602

#define CF_PRINTERFONTS 2

#define OFN_PATHMUSTEXIST 2048

#define PSD_INHUNDREDTHSOFMILLIMETERS 8

#define WM_PSD_ENVSTAMPRECT 1029

#define PD_USELARGETEMPLATE 268435456

#define PD_RETURNDEFAULT 1024

#define PSD_RETURNDEFAULT 1024

#define WM_CHOOSEFONT_GETLOGFONT 1025

#define OFN_ENABLETEMPLATE 64

#define CC_ANYCOLOR 256

#define PD_ENABLESETUPTEMPLATEHANDLE 131072

#define OFN_NODEREFERENCELINKS 1048576

#define CD_LBSELADD 2

#define PSD_DISABLEPAGEPAINTING 524288

#define OFN_NOTESTFILECREATE 65536

#define OFN_SHOWHELP 16

#define FR_MATCHDIAC 536870912

#define FR_FINDNEXT 8

#define OFN_READONLY 1

#define FR_WHOLEWORD 2

#define OFN_NOREADONLYRETURN 32768

#define PRINTER_FONTTYPE 16384

#define FR_MATCHALEFHAMZA 2147483648

#define PD_CURRENTPAGE 4194304

#define FR_NOMATCHCASE 2048

#define CF_SCRIPTSONLY 1024

#define CC_ENABLETEMPLATE 32

#define CD_LBSELNOITEMS -1

#define CDN_SHAREVIOLATION -604

#define OFN_NOVALIDATE 256

#define CF_ANSIONLY 1024

#define WM_PSD_GREEKTEXTRECT 1028

#define PSD_DISABLEPAPER 512

#define SCREEN_FONTTYPE 8192

#define FR_DIALOGTERM 64

#define CF_SHOWHELP 4

#define FR_RAW 131072

#define BOLD_FONTTYPE 256

#define CF_NOFACESEL 524288

#define PD_RESULT_CANCEL 0

#define CDM_GETFOLDERIDLIST 1127

#define CF_USESTYLE 128

#define CD_LBSELCHANGE 0

#define PD_NOCURRENTPAGE 8388608

#define PSD_DISABLEORIENTATION 256

#define OFN_EXTENSIONDIFFERENT 1024

#define PD_PAGENUMS 2

#define FR_MATCHCASE 4

#define CDM_SETDEFEXT 1130

#define CF_SELECTSCRIPT 4194304

#define CF_TTONLY 262144

#define OFN_ENABLETEMPLATEHANDLE 128

#define CF_NOSCRIPTSEL 8388608

#define PD_NOSELECTION 4

#define PSD_NOWARNING 128

#define CC_RGBINIT 1

#define PSD_DISABLEMARGINS 16

#define PD_PRINTSETUP 64

#define PSD_MARGINS 2

#define PD_ENABLESETUPHOOK 8192

#define PD_HIDEPRINTTOFILE 1048576

#define CDM_GETFOLDERPATH 1126

#define OFN_ENABLESIZING 8388608

#define CD_LBSELSUB 1

#define PD_DISABLEPRINTTOFILE 524288

#define WM_PSD_MINMARGINRECT 1026

#define PSD_DEFAULTMINMARGINS 0

#define PSD_NONETWORKBUTTON 2097152

#define FR_SHOWHELP 128

#define PD_PRINTTOFILE 32

#define PD_SELECTION 1

#define ITALIC_FONTTYPE 512

#define CC_SHOWHELP 8

#define OFN_NOLONGNAMES 262144

#define OFN_SHAREAWARE 16384

#define WM_CHOOSEFONT_SETLOGFONT 1125

#define PSD_ENABLEPAGESETUPHOOK 8192

#define CDM_GETSPEC 1124

#define CF_APPLY 512

#define CDM_SETCONTROLTEXT 1128

#define PD_USEDEVMODECOPIES 262144

#define CC_ENABLEHOOK 16

#define WM_PSD_YAFULLPAGERECT 1030

#define FR_HIDEWHOLEWORD 65536

#define FR_NOWHOLEWORD 4096

#define OFN_HIDEREADONLY 4

#define OFN_ALLOWMULTISELECT 512

#define CF_NOVERTFONTS 16777216

#define DN_DEFAULTPRN 1

#define CC_SOLIDCOLOR 128

#define FR_REPLACEALL 32

#define CC_PREVENTFULLOPEN 4

#define CDN_LAST -699

#define FR_DOWN 1

#define FR_NOUPDOWN 1024

#define CF_INITTOLOGFONTSTRUCT 64

#define PD_ENABLEPRINTHOOK 4096

#define OFN_EXPLORER 524288

typedef struct HCONVLIST__ HCONVLIST__, *PHCONVLIST__;

struct HCONVLIST__ {
    int unused;
};

typedef struct tagMONHSZSTRUCTA tagMONHSZSTRUCTA, *PtagMONHSZSTRUCTA;

typedef struct HSZ__ HSZ__, *PHSZ__;

typedef struct HSZ__ *HSZ;

struct tagMONHSZSTRUCTA {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    CHAR str[1];
};

struct HSZ__ {
    int unused;
};

typedef struct tagMONMSGSTRUCT tagMONMSGSTRUCT, *PtagMONMSGSTRUCT;

typedef struct tagDDEML_MSG_HOOK_DATA tagDDEML_MSG_HOOK_DATA, *PtagDDEML_MSG_HOOK_DATA;

typedef struct tagDDEML_MSG_HOOK_DATA DDEML_MSG_HOOK_DATA;

struct tagDDEML_MSG_HOOK_DATA {
    UINT_PTR uiLo;
    UINT_PTR uiHi;
    DWORD cbData;
    DWORD Data[8];
};

struct tagMONMSGSTRUCT {
    UINT cb;
    HWND hwndTo;
    DWORD dwTime;
    HANDLE hTask;
    UINT wMsg;
    WPARAM wParam;
    LPARAM lParam;
    DDEML_MSG_HOOK_DATA dmhd;
};

typedef struct tagCONVINFO tagCONVINFO, *PtagCONVINFO;

typedef struct tagCONVINFO CONVINFO;

typedef struct HCONV__ HCONV__, *PHCONV__;

typedef struct HCONV__ *HCONV;

typedef struct HCONVLIST__ *HCONVLIST;

typedef struct tagCONVCONTEXT tagCONVCONTEXT, *PtagCONVCONTEXT;

typedef struct tagCONVCONTEXT CONVCONTEXT;

struct tagCONVCONTEXT {
    UINT cb;
    UINT wFlags;
    UINT wCountryID;
    int iCodePage;
    DWORD dwLangID;
    DWORD dwSecurity;
    SECURITY_QUALITY_OF_SERVICE qos;
};

struct tagCONVINFO {
    DWORD cb;
    DWORD_PTR hUser;
    HCONV hConvPartner;
    HSZ hszSvcPartner;
    HSZ hszServiceReq;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    UINT wType;
    UINT wStatus;
    UINT wConvst;
    UINT wLastError;
    HCONVLIST hConvList;
    CONVCONTEXT ConvCtxt;
    HWND hwnd;
    HWND hwndPartner;
};

struct HCONV__ {
    int unused;
};

typedef struct tagMONCBSTRUCT tagMONCBSTRUCT, *PtagMONCBSTRUCT;

typedef struct tagMONCBSTRUCT *PMONCBSTRUCT;

typedef struct HDDEDATA__ HDDEDATA__, *PHDDEDATA__;

typedef struct HDDEDATA__ *HDDEDATA;

struct tagMONCBSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    DWORD dwRet;
    UINT wType;
    UINT wFmt;
    HCONV hConv;
    HSZ hsz1;
    HSZ hsz2;
    HDDEDATA hData;
    ULONG_PTR dwData1;
    ULONG_PTR dwData2;
    CONVCONTEXT cc;
    DWORD cbData;
    DWORD Data[8];
};

struct HDDEDATA__ {
    int unused;
};

typedef struct tagMONHSZSTRUCTA MONHSZSTRUCTA;

typedef MONHSZSTRUCTA MONHSZSTRUCT;

typedef struct tagMONHSZSTRUCTW tagMONHSZSTRUCTW, *PtagMONHSZSTRUCTW;

struct tagMONHSZSTRUCTW {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    WCHAR str[1];
};

typedef struct tagMONERRSTRUCT tagMONERRSTRUCT, *PtagMONERRSTRUCT;

typedef struct tagMONERRSTRUCT *PMONERRSTRUCT;

struct tagMONERRSTRUCT {
    UINT cb;
    UINT wLastError;
    DWORD dwTime;
    HANDLE hTask;
};

typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;

typedef struct tagMONCONVSTRUCT tagMONCONVSTRUCT, *PtagMONCONVSTRUCT;

typedef struct tagMONCONVSTRUCT *PMONCONVSTRUCT;

struct tagMONCONVSTRUCT {
    UINT cb;
    BOOL fConnect;
    DWORD dwTime;
    HANDLE hTask;
    HSZ hszSvc;
    HSZ hszTopic;
    HCONV hConvClient;
    HCONV hConvServer;
};

typedef HDDEDATA (FNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

typedef struct tagHSZPAIR tagHSZPAIR, *PtagHSZPAIR;

typedef struct tagHSZPAIR HSZPAIR;

typedef HSZPAIR *PHSZPAIR;

struct tagHSZPAIR {
    HSZ hszSvc;
    HSZ hszTopic;
};

typedef CONVINFO *PCONVINFO;

typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;

typedef struct tagMONMSGSTRUCT *PMONMSGSTRUCT;

typedef CONVCONTEXT *PCONVCONTEXT;

typedef struct tagMONLINKSTRUCT tagMONLINKSTRUCT, *PtagMONLINKSTRUCT;

struct tagMONLINKSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    BOOL fEstablished;
    BOOL fNoData;
    HSZ hszSvc;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    BOOL fServer;
    HCONV hConvServer;
    HCONV hConvClient;
};

typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;

typedef HDDEDATA (*PFNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

typedef struct tagDDEML_MSG_HOOK_DATA *PDDEML_MSG_HOOK_DATA;

typedef struct tagMONHSZSTRUCTA *PMONHSZSTRUCTA;

typedef PMONHSZSTRUCTA PMONHSZSTRUCT;

typedef struct tagMONHSZSTRUCTW *PMONHSZSTRUCTW;

typedef struct tagMONCBSTRUCT MONCBSTRUCT;

typedef struct tagMONLINKSTRUCT *PMONLINKSTRUCT;

typedef struct tagMONHSZSTRUCTW MONHSZSTRUCTW;

typedef struct tagMONERRSTRUCT MONERRSTRUCT;

#define XST_DATARCVD 6

#define XCLASS_NOTIFICATION 32768

#define MF_POSTMSGS 67108864

#define XTYP_MONITOR 33010

#define DMLERR_POSTMSG_FAILED 16396

#define XTYP_POKE 16528

#define CBF_FAIL_CONNECTIONS 8192

#define EC_DISABLE 8

#define DNS_FILTERON 4

#define EC_QUERYWAITING 2

#define TIMEOUT_ASYNC 4294967295

#define ST_BLOCKED 8

#define HDATA_APPOWNED 1

#define XST_ADVDATASENT 15

#define XTYP_WILDCONNECT 8418

#define XST_POKEACKRCVD 8

#define APPCMD_FILTERINITS 32

#define DMLERR_LAST 16401

#define XCLASS_MASK 64512

#define XTYP_XACT_COMPLETE 32896

#define MH_CREATE 1

#define DDE_FBUSY 16384

#define DDE_FACK 32768

#define ST_TERMINATED 32

#define MF_LINKS 536870912

#define APPCMD_CLIENTONLY 16

#define DDE_FNOTPROCESSED 0

#define MH_DELETE 3

#define DMLERR_UNADVACKTIMEOUT 16400

#define DNS_REGISTER 1

#define DDE_FAPPSTATUS 255

#define XST_EXECACKRCVD 10

#define CADV_LATEACK 65535

#define DDE_FACKRESERVED -49408

#define CBF_SKIP_DISCONNECTS 2097152

#define DDE_FRELEASE 8192

#define DDE_FDEFERUPD 16384

#define XST_UNADVACKRCVD 14

#define DMLERR_ADVACKTIMEOUT 16384

#define MH_KEEP 2

#define APPCLASS_MONITOR 1

#define MH_CLEANUP 4

#define EC_ENABLEALL 0

#define XTYPF_NODATA 4

#define DDE_FPOKRESERVED -8193

#define CP_WINNEUTRAL 1004

#define XTYP_CONNECT 4194

#define CP_WINANSI 1004

#define CBF_FAIL_REQUESTS 131072

#define DDE_FREQUESTED 4096

#define MAX_MONITORS 4

#define DMLERR_REENTRANCY 16397

#define APPCLASS_MASK 15

#define ST_ISSELF 256

#define XTYP_MASK 240

#define CBF_FAIL_ADVISES 16384

#define XTYP_REQUEST 8368

#define ST_CONNECTED 1

#define DMLERR_POKEACKTIMEOUT 16395

#define DMLERR_BUSY 16385

#define XCLASS_DATA 8192

#define XST_NULL 0

#define XST_UNADVSENT 12

#define XTYP_ADVSTOP 32832

#define CBF_SKIP_ALLNOTIFICATIONS 3932160

#define XST_CONNECTED 2

#define CBF_FAIL_SELFCONNECTIONS 4096

#define DMLERR_NO_CONV_ESTABLISHED 16394

#define XTYP_ADVREQ 8226

#define APPCLASS_STANDARD 0

#define DMLERR_DLL_USAGE 16388

#define DNS_FILTEROFF 8

#define DMLERR_LOW_MEMORY 16391

#define CP_WINUNICODE 1200

#define MF_ERRORS 268435456

#define DDE_FDATRESERVED -45057

#define XST_ADVDATAACKRCVD 16

#define ST_CLIENT 16

#define XST_INIT1 3

#define XST_INIT2 4

#define XTYP_ERROR 32770

#define XST_EXECSENT 9

#define MF_MASK 4278190080

#define DMLERR_MEMORY_ERROR 16392

#define XTYP_ADVDATA 16400

#define DNS_UNREGISTER 2

#define XTYPF_ACKREQ 8

#define APPCMD_MASK 4080

#define DDE_FADVRESERVED -49153

#define XST_ADVACKRCVD 13

#define XST_POKESENT 7

#define XTYP_SHIFT 4

#define XTYP_ADVSTART 4144

#define CBR_BLOCK -1

#define XST_INCOMPLETE 1

#define ST_ISLOCAL 4

#define CBF_SKIP_REGISTRATIONS 524288

#define XST_ADVSENT 11

#define CBF_SKIP_UNREGISTRATIONS 1048576

#define MF_CONV 1073741824

#define DMLERR_DLL_NOT_INITIALIZED 16387

#define ST_BLOCKNEXT 128

#define XCLASS_FLAGS 16384

#define DMLERR_DATAACKTIMEOUT 16386

#define MSGF_DDEMGR 32769

#define XTYPF_NOBLOCK 2

#define MF_CALLBACKS 134217728

#define MF_HSZ_INFO 16777216

#define CBF_SKIP_CONNECT_CONFIRMS 262144

#define CBF_FAIL_EXECUTES 32768

#define XST_REQSENT 5

#define DMLERR_INVALIDPARAMETER 16390

#define MF_SENDMSGS 33554432

#define ST_INLIST 64

#define DMLERR_UNFOUND_QUEUE_ID 16401

#define DMLERR_FIRST 16384

#define XTYP_REGISTER 32930

#define CBF_FAIL_ALLSVRXACTIONS 258048

#define XTYP_DISCONNECT 32962

#define XCLASS_BOOL 4096

#define DDE_FACKREQ 32768

#define DMLERR_NOTPROCESSED 16393

#define XTYP_UNREGISTER 32978

#define ST_ADVISE 2

#define CBF_FAIL_POKES 65536

#define DMLERR_SERVER_DIED 16398

#define DMLERR_EXECACKTIMEOUT 16389

#define XTYP_CONNECT_CONFIRM 32882

#define DMLERR_SYS_ERROR 16399

#define XTYP_EXECUTE 16464

#define QID_SYNC 4294967295

#define DMLERR_NO_ERROR 0

#define EC_ENABLEONE 128

typedef struct pvalueA pvalueA, *PpvalueA;

typedef struct pvalueA *PPVALUEA;

typedef PPVALUEA PPVALUE;

struct pvalueA {
    LPSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct value_entA value_entA, *Pvalue_entA;

struct value_entA {
    LPSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct pvalueA PVALUEA;

typedef ACCESS_MASK REGSAM;

typedef struct value_entA *PVALENTA;

typedef PVALENTA PVALENT;

typedef struct value_entW value_entW, *Pvalue_entW;

struct value_entW {
    LPWSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct pvalueW pvalueW, *PpvalueW;

typedef struct pvalueW PVALUEW;

struct pvalueW {
    LPWSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct val_context val_context, *Pval_context;

typedef struct val_context *PVALCONTEXT;

typedef DWORD (QUERYHANDLER)(LPVOID, PVALCONTEXT, DWORD, LPVOID, DWORD *, DWORD);

struct val_context {
    int valuelen;
    LPVOID value_context;
    LPVOID val_buff_ptr;
};

typedef struct provider_info provider_info, *Pprovider_info;

typedef struct provider_info REG_PROVIDER;

typedef QUERYHANDLER *PQUERYHANDLER;

struct provider_info {
    PQUERYHANDLER pi_R0_1val;
    PQUERYHANDLER pi_R0_allvals;
    PQUERYHANDLER pi_R3_1val;
    PQUERYHANDLER pi_R3_allvals;
    DWORD pi_flags;
    LPVOID pi_key_context;
};

typedef struct value_entA VALENTA;

typedef VALENTA VALENT;

typedef PVALUEA PVALUE;

typedef struct provider_info *PPROVIDER;

typedef struct value_entW *PVALENTW;

typedef struct pvalueW *PPVALUEW;

typedef struct value_entW VALENTW;

#define PROVIDER_KEEPS_VALUE_LENGTH 1

#define HKEY_LOCAL_MACHINE 2147483650

#define WIN31_CLASS 0

#define REASON_PLANNED_FLAG 2147483648

#define HKEY_USERS 2147483651

#define REASON_SERVICEHANG 196613

#define HKEY_DYN_DATA 2147483654

#define HKEY_CURRENT_USER 2147483649

#define REASON_OTHER 0

#define HKEY_PERFORMANCE_TEXT 2147483728

#define HKEY_PERFORMANCE_DATA 2147483652

#define REASON_UNSTABLE 327686

#define HKEY_CURRENT_CONFIG 2147483653

#define HKEY_PERFORMANCE_NLSTEXT 2147483744

#define REASON_SWHWRECONF 196612

#define REASON_UNKNOWN 255

#define HKEY_CLASSES_ROOT 2147483648

#define REASON_SWINSTALL 196610

#define REASON_HWINSTALL 65538

typedef struct IXMLDOMDocumentFragment IXMLDOMDocumentFragment, *PIXMLDOMDocumentFragment;

typedef struct IXMLDOMDocumentFragmentVtbl IXMLDOMDocumentFragmentVtbl, *PIXMLDOMDocumentFragmentVtbl;

typedef enum tagDOMNodeType {
    NODE_INVALID=0,
    NODE_ELEMENT=1,
    NODE_ATTRIBUTE=2,
    NODE_TEXT=3,
    NODE_CDATA_SECTION=4,
    NODE_ENTITY_REFERENCE=5,
    NODE_ENTITY=6,
    NODE_PROCESSING_INSTRUCTION=7,
    NODE_COMMENT=8,
    NODE_DOCUMENT=9,
    NODE_DOCUMENT_TYPE=10,
    NODE_DOCUMENT_FRAGMENT=11,
    NODE_NOTATION=12
} tagDOMNodeType;

typedef enum tagDOMNodeType DOMNodeType;

typedef struct IXMLDOMNode IXMLDOMNode, *PIXMLDOMNode;

typedef struct IXMLDOMNodeList IXMLDOMNodeList, *PIXMLDOMNodeList;

typedef struct IXMLDOMNamedNodeMap IXMLDOMNamedNodeMap, *PIXMLDOMNamedNodeMap;

typedef struct IXMLDOMDocument IXMLDOMDocument, *PIXMLDOMDocument;

typedef struct IXMLDOMNodeVtbl IXMLDOMNodeVtbl, *PIXMLDOMNodeVtbl;

typedef struct IXMLDOMNodeListVtbl IXMLDOMNodeListVtbl, *PIXMLDOMNodeListVtbl;

typedef struct IXMLDOMNamedNodeMapVtbl IXMLDOMNamedNodeMapVtbl, *PIXMLDOMNamedNodeMapVtbl;

typedef struct IXMLDOMDocumentVtbl IXMLDOMDocumentVtbl, *PIXMLDOMDocumentVtbl;

typedef struct IXMLDOMDocumentType IXMLDOMDocumentType, *PIXMLDOMDocumentType;

typedef struct IXMLDOMImplementation IXMLDOMImplementation, *PIXMLDOMImplementation;

typedef struct IXMLDOMElement IXMLDOMElement, *PIXMLDOMElement;

typedef struct IXMLDOMText IXMLDOMText, *PIXMLDOMText;

typedef struct IXMLDOMComment IXMLDOMComment, *PIXMLDOMComment;

typedef struct IXMLDOMCDATASection IXMLDOMCDATASection, *PIXMLDOMCDATASection;

typedef struct IXMLDOMProcessingInstruction IXMLDOMProcessingInstruction, *PIXMLDOMProcessingInstruction;

typedef struct IXMLDOMAttribute IXMLDOMAttribute, *PIXMLDOMAttribute;

typedef struct IXMLDOMEntityReference IXMLDOMEntityReference, *PIXMLDOMEntityReference;

typedef struct IXMLDOMParseError IXMLDOMParseError, *PIXMLDOMParseError;

typedef struct IXMLDOMDocumentTypeVtbl IXMLDOMDocumentTypeVtbl, *PIXMLDOMDocumentTypeVtbl;

typedef struct IXMLDOMImplementationVtbl IXMLDOMImplementationVtbl, *PIXMLDOMImplementationVtbl;

typedef struct IXMLDOMElementVtbl IXMLDOMElementVtbl, *PIXMLDOMElementVtbl;

typedef struct IXMLDOMTextVtbl IXMLDOMTextVtbl, *PIXMLDOMTextVtbl;

typedef struct IXMLDOMCommentVtbl IXMLDOMCommentVtbl, *PIXMLDOMCommentVtbl;

typedef struct IXMLDOMCDATASectionVtbl IXMLDOMCDATASectionVtbl, *PIXMLDOMCDATASectionVtbl;

typedef struct IXMLDOMProcessingInstructionVtbl IXMLDOMProcessingInstructionVtbl, *PIXMLDOMProcessingInstructionVtbl;

typedef struct IXMLDOMAttributeVtbl IXMLDOMAttributeVtbl, *PIXMLDOMAttributeVtbl;

typedef struct IXMLDOMEntityReferenceVtbl IXMLDOMEntityReferenceVtbl, *PIXMLDOMEntityReferenceVtbl;

typedef struct IXMLDOMParseErrorVtbl IXMLDOMParseErrorVtbl, *PIXMLDOMParseErrorVtbl;

struct IXMLDOMDocumentFragment {
    struct IXMLDOMDocumentFragmentVtbl *lpVtbl;
};

struct IXMLDOMProcessingInstruction {
    struct IXMLDOMProcessingInstructionVtbl *lpVtbl;
};

struct IXMLDOMCommentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMComment *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMComment *);
    ULONG (*Release)(struct IXMLDOMComment *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMComment *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMComment *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMComment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMComment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMComment *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMComment *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMComment *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMComment *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMComment *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMComment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMComment *, long *);
    HRESULT (*substringData)(struct IXMLDOMComment *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMComment *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMComment *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMComment *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMComment *, long, long, BSTR);
};

struct IXMLDOMNodeList {
    struct IXMLDOMNodeListVtbl *lpVtbl;
};

struct IXMLDOMProcessingInstructionVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMProcessingInstruction *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMProcessingInstruction *);
    ULONG (*Release)(struct IXMLDOMProcessingInstruction *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMProcessingInstruction *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMProcessingInstruction *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMProcessingInstruction *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMProcessingInstruction *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMProcessingInstruction *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_target)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_data)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMProcessingInstruction *, BSTR);
};

struct IXMLDOMNodeListVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNodeList *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNodeList *);
    ULONG (*Release)(struct IXMLDOMNodeList *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNodeList *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNodeList *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNodeList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNodeList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_item)(struct IXMLDOMNodeList *, long, struct IXMLDOMNode **);
    HRESULT (*get_length)(struct IXMLDOMNodeList *, long *);
    HRESULT (*nextNode)(struct IXMLDOMNodeList *, struct IXMLDOMNode **);
    HRESULT (*reset)(struct IXMLDOMNodeList *);
    HRESULT (*get__newEnum)(struct IXMLDOMNodeList *, struct IUnknown **);
};

struct IXMLDOMElement {
    struct IXMLDOMElementVtbl *lpVtbl;
};

struct IXMLDOMAttribute {
    struct IXMLDOMAttributeVtbl *lpVtbl;
};

struct IXMLDOMDocumentTypeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocumentType *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocumentType *);
    ULONG (*Release)(struct IXMLDOMDocumentType *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocumentType *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocumentType *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocumentType *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocumentType *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocumentType *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocumentType *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocumentType *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocumentType *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_name)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_entities)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*get_notations)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
};

struct IXMLDOMText {
    struct IXMLDOMTextVtbl *lpVtbl;
};

struct IXMLDOMNodeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNode *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNode *);
    ULONG (*Release)(struct IXMLDOMNode *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNode *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNode *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNode *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNode *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMNode *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMNode *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMNode *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMNode *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMNode *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMNode *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMNode *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMNode *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMCDATASectionVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMCDATASection *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMCDATASection *);
    ULONG (*Release)(struct IXMLDOMCDATASection *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMCDATASection *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMCDATASection *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMCDATASection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMCDATASection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMCDATASection *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMCDATASection *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMCDATASection *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMCDATASection *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMCDATASection *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMCDATASection *, long *);
    HRESULT (*substringData)(struct IXMLDOMCDATASection *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMCDATASection *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMCDATASection *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMCDATASection *, long, long, BSTR);
    HRESULT (*splitText)(struct IXMLDOMCDATASection *, long, struct IXMLDOMText **);
};

struct IXMLDOMAttributeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMAttribute *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMAttribute *);
    ULONG (*Release)(struct IXMLDOMAttribute *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMAttribute *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMAttribute *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMAttribute *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMAttribute *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMAttribute *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMAttribute *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMAttribute *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_name)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_value)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_value)(struct IXMLDOMAttribute *, VARIANT);
};

struct IXMLDOMDocument {
    struct IXMLDOMDocumentVtbl *lpVtbl;
};

struct IXMLDOMImplementation {
    struct IXMLDOMImplementationVtbl *lpVtbl;
};

struct IXMLDOMTextVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMText *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMText *);
    ULONG (*Release)(struct IXMLDOMText *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMText *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMText *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMText *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMText *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMText *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMText *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMText *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMText *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMText *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMText *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMText *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMText *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMText *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMText *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMText *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMText *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMText *, long *);
    HRESULT (*substringData)(struct IXMLDOMText *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMText *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMText *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMText *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMText *, long, long, BSTR);
    HRESULT (*splitText)(struct IXMLDOMText *, long, struct IXMLDOMText **);
};

struct IXMLDOMEntityReferenceVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMEntityReference *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMEntityReference *);
    ULONG (*Release)(struct IXMLDOMEntityReference *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMEntityReference *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMEntityReference *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMEntityReference *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMEntityReference *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMEntityReference *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMEntityReference *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMEntityReference *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMEntityReference *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMEntityReference *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMComment {
    struct IXMLDOMCommentVtbl *lpVtbl;
};

struct IXMLDOMNamedNodeMapVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNamedNodeMap *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNamedNodeMap *);
    ULONG (*Release)(struct IXMLDOMNamedNodeMap *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNamedNodeMap *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNamedNodeMap *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNamedNodeMap *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNamedNodeMap *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*getNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode **);
    HRESULT (*setNamedItem)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_item)(struct IXMLDOMNamedNodeMap *, long, struct IXMLDOMNode **);
    HRESULT (*get_length)(struct IXMLDOMNamedNodeMap *, long *);
    HRESULT (*getQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*removeQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*nextNode)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode **);
    HRESULT (*reset)(struct IXMLDOMNamedNodeMap *);
    HRESULT (*get__newEnum)(struct IXMLDOMNamedNodeMap *, struct IUnknown **);
};

struct IXMLDOMNode {
    struct IXMLDOMNodeVtbl *lpVtbl;
};

struct IXMLDOMParseError {
    struct IXMLDOMParseErrorVtbl *lpVtbl;
};

struct IXMLDOMImplementationVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMImplementation *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMImplementation *);
    ULONG (*Release)(struct IXMLDOMImplementation *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMImplementation *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMImplementation *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMImplementation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMImplementation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*hasFeature)(struct IXMLDOMImplementation *, BSTR, BSTR, VARIANT_BOOL *);
};

struct IXMLDOMDocumentType {
    struct IXMLDOMDocumentTypeVtbl *lpVtbl;
};

struct IXMLDOMEntityReference {
    struct IXMLDOMEntityReferenceVtbl *lpVtbl;
};

struct IXMLDOMDocumentFragmentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocumentFragment *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocumentFragment *);
    ULONG (*Release)(struct IXMLDOMDocumentFragment *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocumentFragment *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocumentFragment *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocumentFragment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocumentFragment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocumentFragment *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocumentFragment *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMElementVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMElement *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMElement *);
    ULONG (*Release)(struct IXMLDOMElement *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMElement *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMElement *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMElement *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMElement *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMElement *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMElement *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMElement *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMElement *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMElement *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMElement *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_tagName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*getAttribute)(struct IXMLDOMElement *, BSTR, VARIANT *);
    HRESULT (*setAttribute)(struct IXMLDOMElement *, BSTR, VARIANT);
    HRESULT (*removeAttribute)(struct IXMLDOMElement *, BSTR);
    HRESULT (*getAttributeNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMAttribute **);
    HRESULT (*setAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute **);
    HRESULT (*removeAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute **);
    HRESULT (*getElementsByTagName)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*normalize)(struct IXMLDOMElement *);
};

struct IXMLDOMNamedNodeMap {
    struct IXMLDOMNamedNodeMapVtbl *lpVtbl;
};

struct IXMLDOMDocumentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocument *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocument *);
    ULONG (*Release)(struct IXMLDOMDocument *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocument *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocument *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocument *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocument *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocument *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocument *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocument *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocument *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocument *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocument *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_doctype)(struct IXMLDOMDocument *, struct IXMLDOMDocumentType **);
    HRESULT (*get_implementation)(struct IXMLDOMDocument *, struct IXMLDOMImplementation **);
    HRESULT (*get_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement **);
    HRESULT (*putref_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement *);
    HRESULT (*createElement)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMElement **);
    HRESULT (*createDocumentFragment)(struct IXMLDOMDocument *, struct IXMLDOMDocumentFragment **);
    HRESULT (*createTextNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMText **);
    HRESULT (*createComment)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMComment **);
    HRESULT (*createCDATASection)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMCDATASection **);
    HRESULT (*createProcessingInstruction)(struct IXMLDOMDocument *, BSTR, BSTR, struct IXMLDOMProcessingInstruction **);
    HRESULT (*createAttribute)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMAttribute **);
    HRESULT (*createEntityReference)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMEntityReference **);
    HRESULT (*getElementsByTagName)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*createNode)(struct IXMLDOMDocument *, VARIANT, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*nodeFromID)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode **);
    HRESULT (*load)(struct IXMLDOMDocument *, VARIANT, VARIANT_BOOL *);
    HRESULT (*get_readyState)(struct IXMLDOMDocument *, long *);
    HRESULT (*get_parseError)(struct IXMLDOMDocument *, struct IXMLDOMParseError **);
    HRESULT (*get_url)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_async)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_async)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*abort)(struct IXMLDOMDocument *);
    HRESULT (*loadXML)(struct IXMLDOMDocument *, BSTR, VARIANT_BOOL *);
    HRESULT (*save)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*get_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*get_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*put_onreadystatechange)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*put_ondataavailable)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*put_ontransformnode)(struct IXMLDOMDocument *, VARIANT);
};

struct IXMLDOMCDATASection {
    struct IXMLDOMCDATASectionVtbl *lpVtbl;
};

struct IXMLDOMParseErrorVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMParseError *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMParseError *);
    ULONG (*Release)(struct IXMLDOMParseError *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMParseError *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMParseError *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMParseError *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMParseError *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_errorCode)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_url)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_reason)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_srcText)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_line)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_linepos)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_filepos)(struct IXMLDOMParseError *, long *);
};

typedef struct XMLDocument XMLDocument, *PXMLDocument;

struct XMLDocument {
};

typedef struct IXMLAttribute IXMLAttribute, *PIXMLAttribute;

typedef struct IXMLAttributeVtbl IXMLAttributeVtbl, *PIXMLAttributeVtbl;

struct IXMLAttribute {
    struct IXMLAttributeVtbl *lpVtbl;
};

struct IXMLAttributeVtbl {
    HRESULT (*QueryInterface)(struct IXMLAttribute *, IID *, void **);
    ULONG (*AddRef)(struct IXMLAttribute *);
    ULONG (*Release)(struct IXMLAttribute *);
    HRESULT (*GetTypeInfoCount)(struct IXMLAttribute *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLAttribute *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_name)(struct IXMLAttribute *, BSTR *);
    HRESULT (*get_value)(struct IXMLAttribute *, BSTR *);
};

typedef struct IXMLDOMNotation IXMLDOMNotation, *PIXMLDOMNotation;

typedef struct IXMLDOMNotationVtbl IXMLDOMNotationVtbl, *PIXMLDOMNotationVtbl;

struct IXMLDOMNotation {
    struct IXMLDOMNotationVtbl *lpVtbl;
};

struct IXMLDOMNotationVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNotation *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNotation *);
    ULONG (*Release)(struct IXMLDOMNotation *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNotation *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNotation *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNotation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNotation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMNotation *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMNotation *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMNotation *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMNotation *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMNotation *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMNotation *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMNotation *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMNotation *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_publicId)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*get_systemId)(struct IXMLDOMNotation *, VARIANT *);
};

typedef enum tagXMLEMEM_TYPE {
    XMLELEMTYPE_ELEMENT=0,
    XMLELEMTYPE_TEXT=1,
    XMLELEMTYPE_COMMENT=2,
    XMLELEMTYPE_DOCUMENT=3,
    XMLELEMTYPE_DTD=4,
    XMLELEMTYPE_PI=5,
    XMLELEMTYPE_OTHER=6
} tagXMLEMEM_TYPE;

typedef enum tagXMLEMEM_TYPE XMLELEM_TYPE;

typedef struct DOMFreeThreadedDocument DOMFreeThreadedDocument, *PDOMFreeThreadedDocument;

struct DOMFreeThreadedDocument {
};

typedef struct IXMLDOMEntity IXMLDOMEntity, *PIXMLDOMEntity;

typedef struct IXMLDOMEntityVtbl IXMLDOMEntityVtbl, *PIXMLDOMEntityVtbl;

struct IXMLDOMEntity {
    struct IXMLDOMEntityVtbl *lpVtbl;
};

struct IXMLDOMEntityVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMEntity *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMEntity *);
    ULONG (*Release)(struct IXMLDOMEntity *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMEntity *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMEntity *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMEntity *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMEntity *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMEntity *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMEntity *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMEntity *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMEntity *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMEntity *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMEntity *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMEntity *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMEntity *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_publicId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*get_systemId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*get_notationName)(struct IXMLDOMEntity *, BSTR *);
};

typedef struct IXMLElement2 IXMLElement2, *PIXMLElement2;

typedef struct IXMLElement2Vtbl IXMLElement2Vtbl, *PIXMLElement2Vtbl;

struct IXMLElement2Vtbl {
    HRESULT (*QueryInterface)(struct IXMLElement2 *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElement2 *);
    ULONG (*Release)(struct IXMLElement2 *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElement2 *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElement2 *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElement2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElement2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_tagName)(struct IXMLElement2 *, BSTR *);
    HRESULT (*put_tagName)(struct IXMLElement2 *, BSTR);
    HRESULT (*get_parent)(struct IXMLElement2 *, struct IXMLElement2 **);
    HRESULT (*setAttribute)(struct IXMLElement2 *, BSTR, VARIANT);
    HRESULT (*getAttribute)(struct IXMLElement2 *, BSTR, VARIANT *);
    HRESULT (*removeAttribute)(struct IXMLElement2 *, BSTR);
    HRESULT (*get_children)(struct IXMLElement2 *, struct IXMLElementCollection **);
    HRESULT (*get_type)(struct IXMLElement2 *, long *);
    HRESULT (*get_text)(struct IXMLElement2 *, BSTR *);
    HRESULT (*put_text)(struct IXMLElement2 *, BSTR);
    HRESULT (*addChild)(struct IXMLElement2 *, struct IXMLElement2 *, long, long);
    HRESULT (*removeChild)(struct IXMLElement2 *, struct IXMLElement2 *);
    HRESULT (*get_attributes)(struct IXMLElement2 *, struct IXMLElementCollection **);
};

struct IXMLElement2 {
    struct IXMLElement2Vtbl *lpVtbl;
};

typedef struct IXMLError IXMLError, *PIXMLError;

typedef struct IXMLErrorVtbl IXMLErrorVtbl, *PIXMLErrorVtbl;

typedef struct _xml_error _xml_error, *P_xml_error;

typedef struct _xml_error XML_ERROR;

struct IXMLError {
    struct IXMLErrorVtbl *lpVtbl;
};

struct _xml_error {
    uint _nLine;
    BSTR _pchBuf;
    uint _cchBuf;
    uint _ich;
    BSTR _pszFound;
    BSTR _pszExpected;
    DWORD _reserved1;
    DWORD _reserved2;
};

struct IXMLErrorVtbl {
    HRESULT (*QueryInterface)(struct IXMLError *, IID *, void **);
    ULONG (*AddRef)(struct IXMLError *);
    ULONG (*Release)(struct IXMLError *);
    HRESULT (*GetErrorInfo)(struct IXMLError *, XML_ERROR *);
};

typedef struct IXTLRuntime IXTLRuntime, *PIXTLRuntime;

typedef struct IXTLRuntimeVtbl IXTLRuntimeVtbl, *PIXTLRuntimeVtbl;

struct IXTLRuntime {
    struct IXTLRuntimeVtbl *lpVtbl;
};

struct IXTLRuntimeVtbl {
    HRESULT (*QueryInterface)(struct IXTLRuntime *, IID *, void **);
    ULONG (*AddRef)(struct IXTLRuntime *);
    ULONG (*Release)(struct IXTLRuntime *);
    HRESULT (*GetTypeInfoCount)(struct IXTLRuntime *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXTLRuntime *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXTLRuntime *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXTLRuntime *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (*get_nodeType)(struct IXTLRuntime *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXTLRuntime *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXTLRuntime *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXTLRuntime *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXTLRuntime *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_text)(struct IXTLRuntime *, BSTR *);
    HRESULT (*put_text)(struct IXTLRuntime *, BSTR);
    HRESULT (*get_specified)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (*get_dataType)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_dataType)(struct IXTLRuntime *, BSTR);
    HRESULT (*get_xml)(struct IXTLRuntime *, BSTR *);
    HRESULT (*transformNode)(struct IXTLRuntime *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXTLRuntime *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_prefix)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_baseName)(struct IXTLRuntime *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*uniqueID)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*depth)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*childNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*ancestorChildNumber)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode *, long *);
    HRESULT (*absoluteChildNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*formatIndex)(struct IXTLRuntime *, long, BSTR, BSTR *);
    HRESULT (*formatNumber)(struct IXTLRuntime *, double, BSTR, BSTR *);
    HRESULT (*formatDate)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
    HRESULT (*formatTime)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
};

typedef struct IXMLDSOControl IXMLDSOControl, *PIXMLDSOControl;

typedef struct IXMLDSOControlVtbl IXMLDSOControlVtbl, *PIXMLDSOControlVtbl;

struct IXMLDSOControl {
    struct IXMLDSOControlVtbl *lpVtbl;
};

struct IXMLDSOControlVtbl {
    HRESULT (*QueryInterface)(struct IXMLDSOControl *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDSOControl *);
    ULONG (*Release)(struct IXMLDSOControl *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDSOControl *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDSOControl *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDSOControl *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDSOControl *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument **);
    HRESULT (*put_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument *);
    HRESULT (*get_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL *);
    HRESULT (*put_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL);
    HRESULT (*get_readyState)(struct IXMLDSOControl *, long *);
};

typedef struct IXMLHttpRequestVtbl IXMLHttpRequestVtbl, *PIXMLHttpRequestVtbl;

typedef struct IXMLHttpRequest IXMLHttpRequest, *PIXMLHttpRequest;

struct IXMLHttpRequestVtbl {
    HRESULT (*QueryInterface)(struct IXMLHttpRequest *, IID *, void **);
    ULONG (*AddRef)(struct IXMLHttpRequest *);
    ULONG (*Release)(struct IXMLHttpRequest *);
    HRESULT (*GetTypeInfoCount)(struct IXMLHttpRequest *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLHttpRequest *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLHttpRequest *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLHttpRequest *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*open)(struct IXMLHttpRequest *, BSTR, BSTR, VARIANT, VARIANT, VARIANT);
    HRESULT (*setRequestHeader)(struct IXMLHttpRequest *, BSTR, BSTR);
    HRESULT (*getResponseHeader)(struct IXMLHttpRequest *, BSTR, BSTR *);
    HRESULT (*getAllResponseHeaders)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*send)(struct IXMLHttpRequest *, VARIANT);
    HRESULT (*abort)(struct IXMLHttpRequest *);
    HRESULT (*get_status)(struct IXMLHttpRequest *, long *);
    HRESULT (*get_statusText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*get_responseXML)(struct IXMLHttpRequest *, struct IDispatch **);
    HRESULT (*get_responseText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*get_responseBody)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (*get_responseStream)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (*get_readyState)(struct IXMLHttpRequest *, long *);
    HRESULT (*put_onreadystatechange)(struct IXMLHttpRequest *, struct IDispatch *);
};

struct IXMLHttpRequest {
    struct IXMLHttpRequestVtbl *lpVtbl;
};

typedef struct XMLHTTPRequest XMLHTTPRequest, *PXMLHTTPRequest;

struct XMLHTTPRequest {
};

typedef struct IXMLDOMCharacterDataVtbl IXMLDOMCharacterDataVtbl, *PIXMLDOMCharacterDataVtbl;

typedef struct IXMLDOMCharacterData IXMLDOMCharacterData, *PIXMLDOMCharacterData;

struct IXMLDOMCharacterDataVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMCharacterData *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMCharacterData *);
    ULONG (*Release)(struct IXMLDOMCharacterData *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMCharacterData *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMCharacterData *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMCharacterData *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMCharacterData *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMCharacterData *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMCharacterData *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMCharacterData *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMCharacterData *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMCharacterData *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMCharacterData *, long *);
    HRESULT (*substringData)(struct IXMLDOMCharacterData *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMCharacterData *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMCharacterData *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMCharacterData *, long, long, BSTR);
};

struct IXMLDOMCharacterData {
    struct IXMLDOMCharacterDataVtbl *lpVtbl;
};

typedef struct IXMLDocument2Vtbl IXMLDocument2Vtbl, *PIXMLDocument2Vtbl;

typedef struct IXMLDocument2 IXMLDocument2, *PIXMLDocument2;

struct IXMLDocument2Vtbl {
    HRESULT (*QueryInterface)(struct IXMLDocument2 *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDocument2 *);
    ULONG (*Release)(struct IXMLDocument2 *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDocument2 *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDocument2 *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDocument2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDocument2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_root)(struct IXMLDocument2 *, struct IXMLElement2 **);
    HRESULT (*get_fileSize)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_fileModifiedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_fileUpdatedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_URL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*put_URL)(struct IXMLDocument2 *, BSTR);
    HRESULT (*get_mimeType)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_readyState)(struct IXMLDocument2 *, long *);
    HRESULT (*get_charset)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*put_charset)(struct IXMLDocument2 *, BSTR);
    HRESULT (*get_version)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_doctype)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_dtdURL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*createElement)(struct IXMLDocument2 *, VARIANT, VARIANT, struct IXMLElement2 **);
    HRESULT (*get_async)(struct IXMLDocument2 *, VARIANT_BOOL *);
    HRESULT (*put_async)(struct IXMLDocument2 *, VARIANT_BOOL);
};

struct IXMLDocument2 {
    struct IXMLDocument2Vtbl *lpVtbl;
};

typedef struct XMLDOMDocumentEventsVtbl XMLDOMDocumentEventsVtbl, *PXMLDOMDocumentEventsVtbl;

typedef struct XMLDOMDocumentEvents XMLDOMDocumentEvents, *PXMLDOMDocumentEvents;

struct XMLDOMDocumentEvents {
    struct XMLDOMDocumentEventsVtbl *lpVtbl;
};

struct XMLDOMDocumentEventsVtbl {
    HRESULT (*QueryInterface)(struct XMLDOMDocumentEvents *, IID *, void **);
    ULONG (*AddRef)(struct XMLDOMDocumentEvents *);
    ULONG (*Release)(struct XMLDOMDocumentEvents *);
    HRESULT (*GetTypeInfoCount)(struct XMLDOMDocumentEvents *, UINT *);
    HRESULT (*GetTypeInfo)(struct XMLDOMDocumentEvents *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct XMLDOMDocumentEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct XMLDOMDocumentEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct DOMDocument DOMDocument, *PDOMDocument;

struct DOMDocument {
};

typedef struct IXMLDocumentVtbl IXMLDocumentVtbl, *PIXMLDocumentVtbl;

typedef struct IXMLDocument IXMLDocument, *PIXMLDocument;

struct IXMLDocument {
    struct IXMLDocumentVtbl *lpVtbl;
};

struct IXMLDocumentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDocument *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDocument *);
    ULONG (*Release)(struct IXMLDocument *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDocument *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDocument *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_root)(struct IXMLDocument *, struct IXMLElement **);
    HRESULT (*get_fileSize)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_fileModifiedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_fileUpdatedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_URL)(struct IXMLDocument *, BSTR *);
    HRESULT (*put_URL)(struct IXMLDocument *, BSTR);
    HRESULT (*get_mimeType)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_readyState)(struct IXMLDocument *, long *);
    HRESULT (*get_charset)(struct IXMLDocument *, BSTR *);
    HRESULT (*put_charset)(struct IXMLDocument *, BSTR);
    HRESULT (*get_version)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_doctype)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_dtdURL)(struct IXMLDocument *, BSTR *);
    HRESULT (*createElement)(struct IXMLDocument *, VARIANT, VARIANT, struct IXMLElement **);
};

typedef struct XMLDSOControl XMLDSOControl, *PXMLDSOControl;

struct XMLDSOControl {
};

#define USHRT_MAX 65535

#define INT_MAX 2147483647

#define SHRT_MAX 32767

#define ULLONG_MAX -1

#define LONG_MIN -2147483648

#define LLONG_MAX 9223372036854775807

#define ULONG_MAX 4294967295

#define UCHAR_MAX 255

#define UINT_MAX 4294967295

#define SCHAR_MAX 127

#define SHRT_MIN -32768

#define CHAR_MAX 127

#define LLONG_MIN -9223372036854775808

#define INT_MIN -2147483648

#define SCHAR_MIN -128

#define MB_LEN_MAX 16

#define CHAR_MIN -128

#define LONG_MAX 2147483647

#define CHAR_BIT 8

typedef struct AsyncIUnknown AsyncIUnknown, *PAsyncIUnknown;

typedef struct AsyncIUnknownVtbl AsyncIUnknownVtbl, *PAsyncIUnknownVtbl;

struct AsyncIUnknownVtbl {
    HRESULT (*QueryInterface)(struct AsyncIUnknown *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIUnknown *);
    ULONG (*Release)(struct AsyncIUnknown *);
    HRESULT (*Begin_QueryInterface)(struct AsyncIUnknown *, IID *);
    HRESULT (*Finish_QueryInterface)(struct AsyncIUnknown *, void **);
    HRESULT (*Begin_AddRef)(struct AsyncIUnknown *);
    ULONG (*Finish_AddRef)(struct AsyncIUnknown *);
    HRESULT (*Begin_Release)(struct AsyncIUnknown *);
    ULONG (*Finish_Release)(struct AsyncIUnknown *);
};

struct AsyncIUnknown {
    struct AsyncIUnknownVtbl *lpVtbl;
};

typedef struct IClassFactory *LPCLASSFACTORY;

typedef struct _PERF_INSTANCE_DEFINITION _PERF_INSTANCE_DEFINITION, *P_PERF_INSTANCE_DEFINITION;

struct _PERF_INSTANCE_DEFINITION {
    DWORD ByteLength;
    DWORD ParentObjectTitleIndex;
    DWORD ParentObjectInstance;
    LONG UniqueID;
    DWORD NameOffset;
    DWORD NameLength;
};

typedef struct _PERF_DATA_BLOCK _PERF_DATA_BLOCK, *P_PERF_DATA_BLOCK;

struct _PERF_DATA_BLOCK {
    WCHAR Signature[4];
    DWORD LittleEndian;
    DWORD Version;
    DWORD Revision;
    DWORD TotalByteLength;
    DWORD HeaderLength;
    DWORD NumObjectTypes;
    LONG DefaultObject;
    SYSTEMTIME SystemTime;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
    LARGE_INTEGER PerfTime100nSec;
    DWORD SystemNameLength;
    DWORD SystemNameOffset;
};

typedef struct _PERF_COUNTER_BLOCK _PERF_COUNTER_BLOCK, *P_PERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_BLOCK *PPERF_COUNTER_BLOCK;

struct _PERF_COUNTER_BLOCK {
    DWORD ByteLength;
};

typedef struct _PERF_COUNTER_DEFINITION _PERF_COUNTER_DEFINITION, *P_PERF_COUNTER_DEFINITION;

typedef struct _PERF_COUNTER_DEFINITION PERF_COUNTER_DEFINITION;

struct _PERF_COUNTER_DEFINITION {
    DWORD ByteLength;
    DWORD CounterNameTitleIndex;
    LPWSTR CounterNameTitle;
    DWORD CounterHelpTitleIndex;
    LPWSTR CounterHelpTitle;
    LONG DefaultScale;
    DWORD DetailLevel;
    DWORD CounterType;
    DWORD CounterSize;
    DWORD CounterOffset;
};

typedef struct _PERF_OBJECT_TYPE _PERF_OBJECT_TYPE, *P_PERF_OBJECT_TYPE;

typedef struct _PERF_OBJECT_TYPE PERF_OBJECT_TYPE;

struct _PERF_OBJECT_TYPE {
    DWORD TotalByteLength;
    DWORD DefinitionLength;
    DWORD HeaderLength;
    DWORD ObjectNameTitleIndex;
    LPWSTR ObjectNameTitle;
    DWORD ObjectHelpTitleIndex;
    LPWSTR ObjectHelpTitle;
    DWORD DetailLevel;
    DWORD NumCounters;
    LONG DefaultCounter;
    LONG NumInstances;
    DWORD CodePage;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
};

typedef struct _PERF_DATA_BLOCK *PPERF_DATA_BLOCK;

typedef DWORD (PM_COLLECT_PROC)(LPWSTR, LPVOID *, LPDWORD, LPDWORD);

typedef struct _PERF_INSTANCE_DEFINITION PERF_INSTANCE_DEFINITION;

typedef struct _PERF_OBJECT_TYPE *PPERF_OBJECT_TYPE;

typedef DWORD (PM_CLOSE_PROC)(void);

typedef struct _PERF_INSTANCE_DEFINITION *PPERF_INSTANCE_DEFINITION;

typedef DWORD (PM_QUERY_PROC)(LPDWORD, LPVOID *, LPDWORD, LPDWORD);

typedef struct _PERF_COUNTER_BLOCK PERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_DEFINITION *PPERF_COUNTER_DEFINITION;

typedef struct _PERF_DATA_BLOCK PERF_DATA_BLOCK;

typedef DWORD (PM_OPEN_PROC)(LPWSTR);

#define PERF_COUNTER_LARGE_RAWCOUNT 65792

#define PERF_SAMPLE_BASE 1073939457

#define PERF_COUNTER_RAWCOUNT 65536

#define PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE 6620416

#define PERF_RAW_BASE 1073939459

#define PERF_SAMPLE_COUNTER 4260864

#define MAX_PERF_OBJECTS_IN_QUERY_FUNCTION 64

#define PERF_COUNTER_QUEUELEN_TYPE 4523008

#define PERF_100NSEC_TIMER 542180608

#define PERF_RAW_FRACTION 537003008

#define PERF_COUNTER_LARGE_RAWCOUNT_HEX 256

#define PERF_DATA_VERSION 1

#define PERF_COUNTER_FRACTION 131072

#define PERF_COUNTER_QUEUELEN 327680

#define PERF_100NSEC_TIMER_INV 558957824

#define WINPERF_LOG_NONE 0

#define PERF_TIMER_100NS 1048576

#define PERF_TYPE_TEXT 2048

#define PERF_AVERAGE_BASE 1073939458

#define PERF_COUNTER_DELTA 4195328

#define PERF_NUMBER_DEC_1000 131072

#define PERF_DETAIL_EXPERT 300

#define PERF_TIMER_TICK 0

#define PERF_QUERY_GLOBAL 2147483649

#define PERF_COUNTER_PRECISION 458752

#define PERF_SIZE_DWORD 0

#define PERF_MULTI_COUNTER 33554432

#define PERF_NUMBER_DECIMAL 65536

#define PERF_SIZE_ZERO 512

#define PERF_TYPE_COUNTER 1024

#define PERF_PRECISION_OBJECT_TIMER 543622400

#define PERF_COUNTER_TIMER 541132032

#define PERF_TEXT_UNICODE 0

#define PERF_COUNTER_MULTI_TIMER_INV 591463680

#define PERF_TYPE_NUMBER 0

#define PERF_COUNTER_TIMER_INV 557909248

#define PERF_COUNTER_TEXT 2816

#define PERF_NO_UNIQUE_ID -1

#define PERF_DETAIL_WIZARD 400

#define PERF_DETAIL_NOVICE 100

#define PERF_COUNTER_HISTOGRAM 393216

#define PERF_COUNTER_MULTI_BASE 1107494144

#define PERF_COUNTER_HISTOGRAM_TYPE 2147483648

#define WINPERF_LOG_VERBOSE 3

#define PERF_COUNTER_BULK_COUNT 272696576

#define WINPERF_LOG_DEBUG 2

#define PERF_COUNTER_COUNTER 272696320

#define PERF_DELTA_BASE 8388608

#define PERF_SIZE_LARGE 256

#define PERF_COUNTER_ELAPSED 262144

#define PERF_QUERY_OBJECTS 2147483648

#define PERF_DISPLAY_PERCENT 536870912

#define PERF_PRECISION_TIMESTAMP 1073939712

#define WINPERF_LOG_USER 1

#define PERF_DATA_REVISION 1

#define PERF_NO_INSTANCES -1

#define PERF_COUNTER_NODATA 1073742336

#define PERF_DELTA_COUNTER 4194304

#define PERF_NUMBER_HEX 0

#define PERF_DETAIL_ADVANCED 200

#define PERF_100NSEC_MULTI_TIMER_INV 592512256

#define PERF_COUNTER_LARGE_QUEUELEN_TYPE 4523264

#define PERF_INVERSE_COUNTER 16777216

#define PERF_AVERAGE_TIMER 805438464

#define PERF_ELAPSED_TIME 807666944

#define PERF_DISPLAY_PER_SEC 268435456

#define PERF_COUNTER_100NS_QUEUELEN_TYPE 5571840

#define PERF_LARGE_RAW_BASE 1073939712

#define PERF_COUNTER_VALUE 0

#define PERF_TYPE_ZERO 3072

#define PERF_QUERY_COSTLY 2147483650

#define PERF_SAMPLE_FRACTION 549585920

#define PERF_LARGE_RAW_FRACTION 537003264

#define PERF_PRECISION_100NS_TIMER 542573824

#define PERF_COUNTER_RAWCOUNT_HEX 0

#define PERF_DISPLAY_SECONDS 805306368

#define PERF_COUNTER_RATE 65536

#define PERF_OBJ_TIME_TIMER 543229184

#define PERF_AVERAGE_BULK 1073874176

#define PERF_DISPLAY_NOSHOW 1073741824

#define PERF_TEXT_ASCII 65536

#define PERF_OBJECT_TIMER 2097152

#define PERF_COUNTER_BASE 196608

#define PERF_SIZE_VARIABLE_LEN 768

#define PERF_100NSEC_MULTI_TIMER 575735040

#define PERF_PRECISION_SYSTEM_TIMER 541525248

#define PERF_COUNTER_LARGE_DELTA 4195584

#define PERF_DISPLAY_NO_SUFFIX 0

#define PERF_COUNTER_MULTI_TIMER 574686464

typedef struct _COMMPROP _COMMPROP, *P_COMMPROP;

typedef struct _COMMPROP *LPCOMMPROP;

struct _COMMPROP {
    WORD wPacketLength;
    WORD wPacketVersion;
    DWORD dwServiceMask;
    DWORD dwReserved1;
    DWORD dwMaxTxQueue;
    DWORD dwMaxRxQueue;
    DWORD dwMaxBaud;
    DWORD dwProvSubType;
    DWORD dwProvCapabilities;
    DWORD dwSettableParams;
    DWORD dwSettableBaud;
    WORD wSettableData;
    WORD wSettableStopParity;
    DWORD dwCurrentTxQueue;
    DWORD dwCurrentRxQueue;
    DWORD dwProvSpec1;
    DWORD dwProvSpec2;
    WCHAR wcProvChar[1];
};

typedef struct tagHW_PROFILE_INFOA tagHW_PROFILE_INFOA, *PtagHW_PROFILE_INFOA;

typedef struct tagHW_PROFILE_INFOA *LPHW_PROFILE_INFOA;

struct tagHW_PROFILE_INFOA {
    DWORD dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
};

typedef struct _EXCEPTION_DEBUG_INFO _EXCEPTION_DEBUG_INFO, *P_EXCEPTION_DEBUG_INFO;

struct _EXCEPTION_DEBUG_INFO {
    EXCEPTION_RECORD ExceptionRecord;
    DWORD dwFirstChance;
};

typedef struct _CREATE_THREAD_DEBUG_INFO _CREATE_THREAD_DEBUG_INFO, *P_CREATE_THREAD_DEBUG_INFO;

typedef DWORD (*PTHREAD_START_ROUTINE)(LPVOID);

typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;

struct _CREATE_THREAD_DEBUG_INFO {
    HANDLE hThread;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
};

typedef struct tagHW_PROFILE_INFOW tagHW_PROFILE_INFOW, *PtagHW_PROFILE_INFOW;

struct tagHW_PROFILE_INFOW {
    DWORD dwDockInfo;
    WCHAR szHwProfileGuid[39];
    WCHAR szHwProfileName[80];
};

typedef struct _WIN32_FIND_DATAW _WIN32_FIND_DATAW, *P_WIN32_FIND_DATAW;

typedef struct _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

struct _WIN32_FIND_DATAW {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    WCHAR cFileName[260];
    WCHAR cAlternateFileName[14];
};

typedef struct _DCB _DCB, *P_DCB;

struct _DCB {
    DWORD DCBlength;
    DWORD BaudRate;
    DWORD fBinary:1;
    DWORD fParity:1;
    DWORD fOutxCtsFlow:1;
    DWORD fOutxDsrFlow:1;
    DWORD fDtrControl:2;
    DWORD fDsrSensitivity:1;
    DWORD fTXContinueOnXoff:1;
    DWORD fOutX:1;
    DWORD fInX:1;
    DWORD fErrorChar:1;
    DWORD fNull:1;
    DWORD fRtsControl:2;
    DWORD fAbortOnError:1;
    DWORD fDummy2:17;
    WORD wReserved;
    WORD XonLim;
    WORD XoffLim;
    BYTE ByteSize;
    BYTE Parity;
    BYTE StopBits;
    char XonChar;
    char XoffChar;
    char ErrorChar;
    char EofChar;
    char EvtChar;
    WORD wReserved1;
};

typedef struct _LOAD_DLL_DEBUG_INFO _LOAD_DLL_DEBUG_INFO, *P_LOAD_DLL_DEBUG_INFO;

struct _LOAD_DLL_DEBUG_INFO {
    HANDLE hFile;
    LPVOID lpBaseOfDll;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpImageName;
    WORD fUnicode;
};

typedef struct _STARTUPINFOW STARTUPINFOW;

typedef struct _STARTUPINFOA _STARTUPINFOA, *P_STARTUPINFOA;

typedef struct _STARTUPINFOA STARTUPINFOA;

struct _STARTUPINFOA {
    DWORD cb;
    LPSTR lpReserved;
    LPSTR lpDesktop;
    LPSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

typedef struct _TIME_ZONE_INFORMATION _TIME_ZONE_INFORMATION, *P_TIME_ZONE_INFORMATION;

struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _struct_323 _struct_323, *P_struct_323;

struct _struct_323 {
    DWORD dwCommittedSize;
    DWORD dwUnCommittedSize;
    LPVOID lpFirstBlock;
    LPVOID lpLastBlock;
};

typedef struct _struct_322 _struct_322, *P_struct_322;

struct _struct_322 {
    HANDLE hMem;
    DWORD dwReserved[3];
};

typedef struct _WIN32_STREAM_ID _WIN32_STREAM_ID, *P_WIN32_STREAM_ID;

struct _WIN32_STREAM_ID {
    DWORD dwStreamId;
    DWORD dwStreamAttributes;
    LARGE_INTEGER Size;
    DWORD dwStreamNameSize;
    WCHAR cStreamName[1];
};

typedef BOOL (*ENUMRESTYPEPROCA)(HMODULE, LPSTR, LONG_PTR);

typedef struct _struct_321 _struct_321, *P_struct_321;

struct _struct_321 {
    DWORD dwCommittedSize;
    DWORD dwUnCommittedSize;
    LPVOID lpFirstBlock;
    LPVOID lpLastBlock;
};

typedef struct _struct_320 _struct_320, *P_struct_320;

struct _struct_320 {
    HANDLE hMem;
    DWORD dwReserved[3];
};

typedef struct _SYSTEM_POWER_STATUS _SYSTEM_POWER_STATUS, *P_SYSTEM_POWER_STATUS;

struct _SYSTEM_POWER_STATUS {
    BYTE ACLineStatus;
    BYTE BatteryFlag;
    BYTE BatteryLifePercent;
    BYTE Reserved1;
    DWORD BatteryLifeTime;
    DWORD BatteryFullLifeTime;
};

typedef struct _SYSTEM_INFO _SYSTEM_INFO, *P_SYSTEM_INFO;

typedef struct _SYSTEM_INFO *LPSYSTEM_INFO;

typedef union _union_302 _union_302, *P_union_302;

typedef struct _struct_303 _struct_303, *P_struct_303;

struct _struct_303 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

union _union_302 {
    DWORD dwOemId;
    struct _struct_303 field1;
};

struct _SYSTEM_INFO {
    union _union_302 field0_0x0;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
};

typedef struct _EXIT_THREAD_DEBUG_INFO _EXIT_THREAD_DEBUG_INFO, *P_EXIT_THREAD_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;

struct _EXIT_THREAD_DEBUG_INFO {
    DWORD dwExitCode;
};

typedef struct _COMSTAT _COMSTAT, *P_COMSTAT;

typedef struct _COMSTAT COMSTAT;

struct _COMSTAT {
    DWORD fCtsHold:1;
    DWORD fDsrHold:1;
    DWORD fRlsdHold:1;
    DWORD fXoffHold:1;
    DWORD fXoffSent:1;
    DWORD fEof:1;
    DWORD fTxim:1;
    DWORD fReserved:25;
    DWORD cbInQue;
    DWORD cbOutQue;
};

typedef BOOL (*ENUMRESTYPEPROCW)(HMODULE, LPWSTR, LONG_PTR);

typedef struct _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;

typedef struct _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

typedef struct _struct_531 _struct_531, *P_struct_531;

struct _struct_531 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

typedef struct _RIP_INFO _RIP_INFO, *P_RIP_INFO;

struct _RIP_INFO {
    DWORD dwError;
    DWORD dwType;
};

typedef struct _struct_305 _struct_305, *P_struct_305;

struct _struct_305 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

typedef BOOL (*ENUMRESLANGPROCW)(HMODULE, LPCWSTR, LPCWSTR, WORD, LONG_PTR);

typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);

typedef struct _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

typedef union _union_292 _union_292, *P_union_292;

typedef struct _struct_293 _struct_293, *P_struct_293;

struct _struct_293 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_292 {
    struct _struct_293 field0;
    PVOID Pointer;
};

typedef struct _UNLOAD_DLL_DEBUG_INFO _UNLOAD_DLL_DEBUG_INFO, *P_UNLOAD_DLL_DEBUG_INFO;

struct _UNLOAD_DLL_DEBUG_INFO {
    LPVOID lpBaseOfDll;
};

typedef struct _struct_519 _struct_519, *P_struct_519;

struct _struct_519 {
    DWORD Offset;
    DWORD OffsetHigh;
};

typedef struct _PROCESS_INFORMATION *PPROCESS_INFORMATION;

typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;

typedef BOOL (*ENUMRESLANGPROCA)(HMODULE, LPCSTR, LPCSTR, WORD, LONG_PTR);

typedef struct _EVENTLOG_FULL_INFORMATION _EVENTLOG_FULL_INFORMATION, *P_EVENTLOG_FULL_INFORMATION;

typedef struct _EVENTLOG_FULL_INFORMATION EVENTLOG_FULL_INFORMATION;

struct _EVENTLOG_FULL_INFORMATION {
    DWORD dwFull;
};

typedef struct _MEMORYSTATUS _MEMORYSTATUS, *P_MEMORYSTATUS;

struct _MEMORYSTATUS {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    SIZE_T dwTotalPhys;
    SIZE_T dwAvailPhys;
    SIZE_T dwTotalPageFile;
    SIZE_T dwAvailPageFile;
    SIZE_T dwTotalVirtual;
    SIZE_T dwAvailVirtual;
};

typedef struct _BY_HANDLE_FILE_INFORMATION _BY_HANDLE_FILE_INFORMATION, *P_BY_HANDLE_FILE_INFORMATION;

struct _BY_HANDLE_FILE_INFORMATION {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD dwVolumeSerialNumber;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD nNumberOfLinks;
    DWORD nFileIndexHigh;
    DWORD nFileIndexLow;
};

typedef struct _DEBUG_EVENT _DEBUG_EVENT, *P_DEBUG_EVENT;

typedef struct _DEBUG_EVENT DEBUG_EVENT;

typedef union _union_315 _union_315, *P_union_315;

typedef struct _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;

typedef struct _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO _CREATE_PROCESS_DEBUG_INFO, *P_CREATE_PROCESS_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO _EXIT_PROCESS_DEBUG_INFO, *P_EXIT_PROCESS_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;

typedef struct _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO _OUTPUT_DEBUG_STRING_INFO, *P_OUTPUT_DEBUG_STRING_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;

typedef struct _RIP_INFO RIP_INFO;

struct _CREATE_PROCESS_DEBUG_INFO {
    HANDLE hFile;
    HANDLE hProcess;
    HANDLE hThread;
    LPVOID lpBaseOfImage;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
    LPVOID lpImageName;
    WORD fUnicode;
};

struct _EXIT_PROCESS_DEBUG_INFO {
    DWORD dwExitCode;
};

struct _OUTPUT_DEBUG_STRING_INFO {
    LPSTR lpDebugStringData;
    WORD fUnicode;
    WORD nDebugStringLength;
};

union _union_315 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

struct _DEBUG_EVENT {
    DWORD dwDebugEventCode;
    DWORD dwProcessId;
    DWORD dwThreadId;
    union _union_315 u;
};

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard=0,
    GetFileExMaxInfoLevel=1
} _GET_FILEEX_INFO_LEVELS;

typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;

typedef struct _MEMORYSTATUSEX _MEMORYSTATUSEX, *P_MEMORYSTATUSEX;

typedef struct _MEMORYSTATUSEX MEMORYSTATUSEX;

struct _MEMORYSTATUSEX {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    DWORDLONG ullTotalPhys;
    DWORDLONG ullAvailPhys;
    DWORDLONG ullTotalPageFile;
    DWORDLONG ullAvailPageFile;
    DWORDLONG ullTotalVirtual;
    DWORDLONG ullAvailVirtual;
    DWORDLONG ullAvailExtendedVirtual;
};

typedef LONG (*PTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);

typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

typedef struct _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

typedef struct _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

typedef struct _COMMCONFIG _COMMCONFIG, *P_COMMCONFIG;

typedef struct _DCB DCB;

struct _COMMCONFIG {
    DWORD dwSize;
    WORD wVersion;
    WORD wReserved;
    DCB dcb;
    DWORD dwProviderSubType;
    DWORD dwProviderOffset;
    DWORD dwProviderSize;
    WCHAR wcProviderData[1];
};

typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;

typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD;

typedef struct _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

typedef struct _OFSTRUCT _OFSTRUCT, *P_OFSTRUCT;

struct _OFSTRUCT {
    BYTE cBytes;
    BYTE fFixedDisk;
    WORD nErrCode;
    WORD Reserved1;
    WORD Reserved2;
    CHAR szPathName[128];
};

typedef struct tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;

typedef struct _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;

typedef struct tagHW_PROFILE_INFOW HW_PROFILE_INFOW;

typedef struct _DEBUG_EVENT *LPDEBUG_EVENT;

typedef BOOL (*ENUMRESNAMEPROCA)(HMODULE, LPCSTR, LPSTR, LONG_PTR);

typedef struct _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

typedef struct _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

typedef BOOL (*ENUMRESNAMEPROCW)(HMODULE, LPCWSTR, LPWSTR, LONG_PTR);

typedef union _union_530 _union_530, *P_union_530;

union _union_530 {
    DWORD dwOemId;
    struct _struct_531 s;
};

typedef struct _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;

typedef struct _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

typedef struct tagHW_PROFILE_INFOA HW_PROFILE_INFOA;

typedef HW_PROFILE_INFOA HW_PROFILE_INFO;

typedef struct _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

typedef struct _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;

typedef struct _RIP_INFO *LPRIP_INFO;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA _WIN32_FILE_ATTRIBUTE_DATA, *P_WIN32_FILE_ATTRIBUTE_DATA;

struct _WIN32_FILE_ATTRIBUTE_DATA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
};

typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG;

typedef union _union_518 _union_518, *P_union_518;

union _union_518 {
    struct _struct_519 s;
    PVOID Pointer;
};

typedef struct _SYSTEMTIME *LPSYSTEMTIME;

typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION;

typedef struct _OFSTRUCT *POFSTRUCT;

typedef DWORD (*PFE_EXPORT_FUNC)(PBYTE, PVOID, ULONG);

typedef union _union_321 _union_321, *P_union_321;

union _union_321 {
    struct _struct_322 Block;
    struct _struct_323 Region;
};

typedef struct _COMMTIMEOUTS _COMMTIMEOUTS, *P_COMMTIMEOUTS;

typedef struct _COMMTIMEOUTS COMMTIMEOUTS;

struct _COMMTIMEOUTS {
    DWORD ReadIntervalTimeout;
    DWORD ReadTotalTimeoutMultiplier;
    DWORD ReadTotalTimeoutConstant;
    DWORD WriteTotalTimeoutMultiplier;
    DWORD WriteTotalTimeoutConstant;
};

typedef PCONTEXT LPCONTEXT;

typedef struct _FILETIME *LPFILETIME;

typedef struct _STARTUPINFOA *LPSTARTUPINFOA;

typedef LPSTARTUPINFOA LPSTARTUPINFO;

typedef struct _WIN32_FIND_DATAA _WIN32_FIND_DATAA, *P_WIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATAA;

typedef WIN32_FIND_DATAA WIN32_FIND_DATA;

struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef union _union_304 _union_304, *P_union_304;

union _union_304 {
    DWORD dwOemId;
    struct _struct_305 field1;
};

typedef struct _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

typedef union _union_543 _union_543, *P_union_543;

union _union_543 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

typedef struct _MEMORYSTATUS MEMORYSTATUS;

typedef struct _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

typedef union _union_317 _union_317, *P_union_317;

union _union_317 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef union _union_319 _union_319, *P_union_319;

union _union_319 {
    struct _struct_320 Block;
    struct _struct_321 Region;
};

typedef struct _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

typedef void (*PFIBER_START_ROUTINE)(LPVOID);

typedef struct _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

typedef struct _SYSTEM_INFO SYSTEM_INFO;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;

typedef struct _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchNameMatch=0,
    FindExSearchLimitToDirectories=1,
    FindExSearchLimitToDevices=2,
    FindExSearchMaxSearchOp=3
} _FINDEX_SEARCH_OPS;

typedef struct _PROCESS_HEAP_ENTRY _PROCESS_HEAP_ENTRY, *P_PROCESS_HEAP_ENTRY;

typedef struct _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;

struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    DWORD cbData;
    BYTE cbOverhead;
    BYTE iRegionIndex;
    WORD wFlags;
    union _union_319 field5_0xc;
};

typedef STARTUPINFOA STARTUPINFO;

typedef struct _COMMCONFIG COMMCONFIG;

typedef void (*PTIMERAPCROUTINE)(LPVOID, DWORD, DWORD);

typedef struct _COMMCONFIG *LPCOMMCONFIG;

typedef DWORD (*LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, DWORD, DWORD, HANDLE, HANDLE, LPVOID);

typedef struct _FILETIME *PFILETIME;

typedef struct _COMMPROP COMMPROP;

typedef struct _PROCESS_INFORMATION PROCESS_INFORMATION;

typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoStandard=0,
    FindExInfoMaxInfoLevel=1
} _FINDEX_INFO_LEVELS;

typedef struct _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;

typedef struct _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

typedef struct _OFSTRUCT *LPOFSTRUCT;

typedef DWORD (*PFE_IMPORT_FUNC)(PBYTE, PVOID, PULONG);

typedef struct _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

typedef struct _SYSTEMTIME *PSYSTEMTIME;

typedef struct _COMSTAT *LPCOMSTAT;

typedef enum _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;

typedef struct _MEMORYSTATUS *LPMEMORYSTATUS;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

typedef struct _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

typedef struct _WIN32_FIND_DATAW WIN32_FIND_DATAW;

typedef struct _WIN32_STREAM_ID WIN32_STREAM_ID;

typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;

typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS;

typedef struct _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

typedef struct _COMMTIMEOUTS *LPCOMMTIMEOUTS;

typedef struct _OFSTRUCT OFSTRUCT;

typedef PLDT_ENTRY LPLDT_ENTRY;

typedef struct _DCB *LPDCB;

typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;

typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;

typedef struct _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;

typedef struct _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

typedef enum _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;

typedef struct _OVERLAPPED OVERLAPPED;

#define AC_LINE_BACKUP_POWER 2

#define IGNORE 0

#define S_PERIOD512 0

#define AC_LINE_OFFLINE 0

#define GMEM_SHARE 8192

#define BAUD_128K 65536

#define COPY_FILE_FAIL_IF_EXISTS 1

#define PROFILE_USER 268435456

#define STD_ERROR_HANDLE -12

#define STD_INPUT_HANDLE -10

#define PIPE_SERVER_END 1

#define EXCEPTION_FLT_OVERFLOW 3221225617

#define SECURITY_VALID_SQOS_FLAGS 2031616

#define DTR_CONTROL_HANDSHAKE 2

#define FORMAT_MESSAGE_IGNORE_INSERTS 512

#define EV_EVENT1 2048

#define STARTF_USECOUNTCHARS 8

#define EV_EVENT2 4096

#define CBR_600 600

#define DRIVE_CDROM 5

#define BAUD_600 32

#define GMEM_FIXED 0

#define OUTPUT_DEBUG_STRING_EVENT 8

#define BACKUP_INVALID 0

#define DOCKINFO_USER_DOCKED 6

#define SP_SERIALCOMM 1

#define NMPWAIT_WAIT_FOREVER 4294967295

#define S_SERQFUL -4

#define SEM_NOGPFAULTERRORBOX 2

#define GMEM_MODIFY 128

#define EV_RXCHAR 1

#define SETDTR 5

#define PIPE_TYPE_BYTE 0

#define DDD_LUID_BROADCAST_DRIVE 16

#define OF_REOPEN 32768

#define PCF_PARITY_CHECK 8

#define FORMAT_MESSAGE_ALLOCATE_BUFFER 256

#define FILE_FLAG_RANDOM_ACCESS 268435456

#define PROCESS_HEAP_ENTRY_DDESHARE 32

#define CBR_256000 256000

#define EXCEPTION_NONCONTINUABLE_EXCEPTION 3221225509

#define CE_DNS 2048

#define TC_NORMAL 0

#define TC_SIGNAL 3

#define FORMAT_MESSAGE_FROM_SYSTEM 4096

#define HIGH_PRIORITY_CLASS 128

#define BAUD_9600 2048

#define FILE_MAP_READ 4

#define FILE_FLAG_NO_BUFFERING 536870912

#define FILE_USER_DISALLOWED 7

#define BACKUP_PROPERTY_DATA 6

#define S_QUEUEEMPTY 0

#define BATTERY_FLAG_HIGH 1

#define GMEM_ZEROINIT 64

#define CBR_115200 115200

#define EXCEPTION_FLT_STACK_CHECK 3221225618

#define OF_VERIFY 1024

#define LMEM_ZEROINIT 64

#define FS_FILE_ENCRYPTION 131072

#define WAIT_OBJECT_0 0

#define LMEM_VALID_FLAGS 3954

#define SP_HANDSHAKING 16

#define FILE_MAP_ALL_ACCESS 983071

#define SHUTDOWN_NORETRY 1

#define DRIVE_FIXED 3

#define LOGON32_LOGON_BATCH 4

#define STARTF_FORCEOFFFEEDBACK 128

#define MOVEFILE_REPLACE_EXISTING 1

#define DRIVE_RAMDISK 6

#define BAUD_7200 1024

#define DRIVE_REMOVABLE 2

#define FILE_TYPE_DISK 1

#define LMEM_DISCARDED 16384

#define GMEM_NODISCARD 32

#define EXCEPTION_FLT_UNDERFLOW 3221225619

#define EV_ERR 128

#define DETACHED_PROCESS 8

#define OPEN_ALWAYS 4

#define FORMAT_MESSAGE_FROM_STRING 1024

#define OF_CREATE 4096

#define CLRRTS 4

#define FILE_FLAG_WRITE_THROUGH 2147483648

#define GMEM_VALID_FLAGS 32626

#define TLS_OUT_OF_INDEXES 4294967295

#define S_STACCATO 2

#define PROGRESS_STOP 2

#define CLRBREAK 9

#define PST_UNSPECIFIED 0

#define S_SERMACT -3

#define EXCEPTION_INVALID_HANDLE 3221225480

#define CALLBACK_STREAM_SWITCH 1

#define PROGRESS_CANCEL 1

#define TIME_ZONE_ID_INVALID 4294967295

#define PST_MODEM 6

#define NMPWAIT_USE_DEFAULT_WAIT 0

#define CREATE_FORCEDOS 8192

#define BATTERY_FLAG_LOW 2

#define CBR_1200 1200

#define DOCKINFO_UNDOCKED 1

#define CE_MODE 32768

#define AC_LINE_ONLINE 1

#define DOCKINFO_USER_UNDOCKED 5

#define CREATE_BREAKAWAY_FROM_JOB 16777216

#define STD_OUTPUT_HANDLE -11

#define CREATE_THREAD_DEBUG_EVENT 2

#define PST_SCANNER 34

#define RTS_CONTROL_HANDSHAKE 2

#define DRIVE_REMOTE 4

#define COPY_FILE_OPEN_SOURCE_FOR_WRITE 4

#define GMEM_NOCOMPACT 16

#define SP_PARITY_CHECK 32

#define PCF_INTTIMEOUTS 128

#define BACKUP_OBJECT_ID 7

#define BATTERY_FLAG_UNKNOWN 255

#define MS_CTS_ON 16

#define CREATE_NEW_CONSOLE 16

#define INVALID_ATOM 0

#define SPACEPARITY 4

#define MAX_COMPUTERNAME_LENGTH 15

#define IDLE_PRIORITY_CLASS 64

#define NORMAL_PRIORITY_CLASS 32

#define SETBREAK 8

#define PIPE_CLIENT_END 0

#define BACKUP_LINK 5

#define S_PERIODVOICE 3

#define CE_BREAK 16

#define STARTF_USEFILLATTRIBUTE 16

#define CE_PTO 512

#define FILE_MAP_COPY 1

#define SP_DATABITS 4

#define FILE_UNKNOWN 5

#define SECURITY_EFFECTIVE_ONLY 524288

#define EXCEPTION_STACK_OVERFLOW 3221225725

#define LOCKFILE_EXCLUSIVE_LOCK 2

#define GET_TAPE_DRIVE_INFORMATION 1

#define STOPBITS_20 4

#define PST_NETWORK_BRIDGE 256

#define CE_FRAME 8

#define OF_WRITE 1

#define LMEM_DISCARDABLE 3840

#define LMEM_INVALID_HANDLE 32768

#define STOPBITS_15 2

#define STOPBITS_10 1

#define BACKUP_SECURITY_DATA 3

#define EV_RING 256

#define THREAD_PRIORITY_LOWEST -2

#define PARITY_ODD 512

#define BACKUP_DATA 1

#define EXCEPTION_FLT_INVALID_OPERATION 3221225616

#define BACKUP_REPARSE_DATA 8

#define PARITY_NONE 256

#define FS_FILE_COMPRESSION 16

#define EVENPARITY 2

#define HANDLE_FLAG_PROTECT_FROM_CLOSE 2

#define S_SERBDNT -5

#define FILE_TYPE_REMOTE 32768

#define IE_MEMORY -4

#define HANDLE_FLAG_INHERIT 1

#define PIPE_TYPE_MESSAGE 4

#define MS_RLSD_ON 128

#define DEBUG_ONLY_THIS_PROCESS 2

#define STREAM_NORMAL_ATTRIBUTE 0

#define SETXON 2

#define FILE_SYSTEM_DIR 4

#define OF_PROMPT 8192

#define INVALID_SET_FILE_POINTER -1

#define LPTR 64

#define SET_TAPE_MEDIA_INFORMATION 0

#define CBR_57600 57600

#define STARTF_FORCEONFEEDBACK 64

#define FS_CASE_SENSITIVE 1

#define S_THRESHOLD 1

#define FILE_FLAG_OVERLAPPED 1073741824

#define CREATE_FOR_IMPORT 1

#define GMEM_LOCKCOUNT 255

#define DOCKINFO_DOCKED 2

#define CBR_110 110

#define LPTx 128

#define SP_RLSD 64

#define TWOSTOPBITS 2

#define S_WHITE2048 6

#define S_PERIOD2048 2

#define FILE_FLAG_DELETE_ON_CLOSE 67108864

#define EV_RX80FULL 1024

#define EV_DSR 16

#define FS_VOL_IS_COMPRESSED 32768

#define RESETDEV 7

#define S_ALLTHRESHOLD 2

#define IE_BAUDRATE -12

#define GMEM_NOTIFY 16384

#define OF_SHARE_COMPAT 0

#define S_SERDVL -9

#define PROGRESS_CONTINUE 0

#define FILE_FLAG_FIRST_PIPE_INSTANCE 524288

#define IE_BADID -1

#define STARTF_USEHOTKEY 512

#define BAUD_1200 64

#define DATABITS_5 1

#define DATABITS_6 2

#define OF_CANCEL 2048

#define COMMPROP_INITIALIZED 3879531822

#define DATABITS_7 4

#define DATABITS_8 8

#define PROCESS_HEAP_ENTRY_BUSY 4

#define S_SERDTP -8

#define CREATE_SHARED_WOW_VDM 4096

#define EV_PERR 512

#define S_WHITEVOICE 7

#define INVALID_FILE_SIZE 4294967295

#define LMEM_MOVEABLE 2

#define NONZEROLPTR 0

#define PURGE_TXCLEAR 4

#define GMEM_NOT_BANKED 4096

#define GMEM_MOVEABLE 2

#define CBR_300 300

#define OF_DELETE 512

#define S_SERDSR -15

#define S_SERDST -16

#define TC_GP_TRAP 2

#define S_SERDSH -11

#define PCF_RTSCTS 2

#define LOGON32_LOGON_SERVICE 5

#define MOVEFILE_WRITE_THROUGH 8

#define SP_STOPBITS 8

#define SEM_FAILCRITICALERRORS 1

#define DATABITS_16 16

#define CREATE_FOR_DIR 2

#define CREATE_IGNORE_SYSTEM_DEFAULT 2147483648

#define EXCEPTION_ARRAY_BOUNDS_EXCEEDED 3221225612

#define PIPE_READMODE_MESSAGE 2

#define MOVEFILE_DELAY_UNTIL_REBOOT 4

#define CREATE_PRESERVE_CODE_AUTHZ_LEVEL 33554432

#define S_SEROFM -2

#define LMEM_FIXED 0

#define DTR_CONTROL_DISABLE 0

#define CE_RXOVER 1

#define PCF_SETXCHAR 32

#define LMEM_LOCKCOUNT 255

#define FILE_TYPE_CHAR 2

#define S_SERDPT -12

#define WAIT_ABANDONED_0 128

#define HW_PROFILE_GUIDLEN 39

#define DDD_NO_BROADCAST_SYSTEM 8

#define UNLOAD_DLL_DEBUG_EVENT 7

#define THREAD_PRIORITY_ERROR_RETURN 2147483647

#define LOCKFILE_FAIL_IMMEDIATELY 1

#define S_NORMAL 0

#define FILE_DIR_DISALLOWED 9

#define DTR_CONTROL_ENABLE 1

#define SP_BAUD 2

#define BAUD_19200 8192

#define CALLBACK_CHUNK_FINISHED 0

#define RIP_EVENT 9

#define EXCEPTION_PRIV_INSTRUCTION 3221225622

#define CE_OVERRUN 2

#define FILE_TYPE_UNKNOWN 0

#define OF_SHARE_DENY_WRITE 32

#define PARITY_MARK 2048

#define CREATE_SEPARATE_WOW_VDM 2048

#define DRIVE_UNKNOWN 0

#define CREATE_NEW 1

#define PIPE_ACCESS_INBOUND 1

#define OF_SHARE_DENY_NONE 64

#define PIPE_ACCESS_DUPLEX 3

#define FILE_FLAG_OPEN_REPARSE_POINT 2097152

#define THREAD_PRIORITY_IDLE -15

#define PCF_XONXOFF 16

#define S_SERDMD -10

#define INFINITE 4294967295

#define LOGON32_PROVIDER_DEFAULT 0

#define PST_LAT 257

#define LOGON32_LOGON_INTERACTIVE 2

#define S_SERDLN -6

#define MAXINTATOM 49152

#define EV_BREAK 64

#define BATTERY_FLAG_CRITICAL 4

#define LOAD_LIBRARY_AS_DATAFILE 2

#define SETRTS 3

#define DOCKINFO_USER_SUPPLIED 4

#define OPEN_EXISTING 3

#define BATTERY_LIFE_UNKNOWN 4294967295

#define PARITY_EVEN 1024

#define STREAM_CONTAINS_PROPERTIES 4

#define IE_HARDWARE -10

#define CREATE_ALWAYS 2

#define PIPE_READMODE_BYTE 0

#define STARTF_USEPOSITION 4

#define CREATE_SUSPENDED 4

#define CREATE_NEW_PROCESS_GROUP 512

#define SCS_WOW_BINARY 2

#define OFS_MAXPATHNAME 128

#define FORMAT_MESSAGE_FROM_HMODULE 2048

#define BAUD_115200 131072

#define CBR_14400 14400

#define STILL_ACTIVE 259

#define STARTF_USESHOWWINDOW 1

#define IE_DEFAULT -5

#define PROFILE_SERVER 1073741824

#define BAUD_14400 4096

#define CONTROL_C_EXIT 3221225786

#define PIPE_NOWAIT 1

#define ODDPARITY 1

#define SCS_DOS_BINARY 1

#define PCF_16BITMODE 512

#define PURGE_RXCLEAR 8

#define WAIT_IO_COMPLETION 192

#define EXCEPTION_IN_PAGE_ERROR 3221225478

#define CBR_38400 38400

#define EXCEPTION_DEBUG_EVENT 1

#define GMEM_LOWER 4096

#define EV_RXFLAG 2

#define EXCEPTION_ACCESS_VIOLATION 3221225477

#define PROGRESS_QUIET 3

#define BAUD_300 16

#define EXCEPTION_INVALID_DISPOSITION 3221225510

#define COPY_FILE_ALLOW_DECRYPTED_DESTINATION 8

#define SCS_OS216_BINARY 5

#define WAIT_ABANDONED 128

#define GMEM_DDESHARE 8192

#define FILE_END 2

#define GPTR 64

#define STARTF_USESTDHANDLES 256

#define SEM_NOOPENFILEERRORBOX 32768

#define PROCESS_HEAP_REGION 1

#define PIPE_ACCESS_OUTBOUND 2

#define TC_HARDERR 1

#define LOAD_DLL_DEBUG_EVENT 6

#define EXCEPTION_FLT_INEXACT_RESULT 3221225615

#define S_SERDFQ -13

#define FILE_FLAG_SEQUENTIAL_SCAN 134217728

#define REALTIME_PRIORITY_CLASS 256

#define RTS_CONTROL_DISABLE 0

#define FILE_SYSTEM_NOT_SUPPORT 6

#define SCS_PIF_BINARY 3

#define BATTERY_FLAG_NO_BATTERY 128

#define S_SERDDR -14

#define STREAM_CONTAINS_SECURITY 2

#define CREATE_NO_WINDOW 134217728

#define PST_PARALLELPORT 2

#define PST_TCPIP_TELNET 258

#define CBR_128000 128000

#define BAUD_110 2

#define CBR_4800 4800

#define DEBUG_PROCESS 1

#define EV_TXEMPTY 4

#define FIND_FIRST_EX_CASE_SENSITIVE 1

#define S_SERDCC -7

#define OF_SHARE_EXCLUSIVE 16

#define OF_READWRITE 2

#define SET_TAPE_DRIVE_INFORMATION 1

#define BACKUP_SPARSE_BLOCK 9

#define EXCEPTION_INT_OVERFLOW 3221225621

#define FILE_TYPE_PIPE 3

#define FORMAT_MESSAGE_MAX_WIDTH_MASK 255

#define BATTERY_PERCENTAGE_UNKNOWN 255

#define EFS_USE_RECOVERY_KEYS 1

#define DATABITS_16X 32

#define MAX_PROFILE_LEN 80

#define FILE_MAP_WRITE 2

#define GMEM_INVALID_HANDLE 32768

#define BAUD_1800 128

#define SCS_64BIT_BINARY 6

#define THREAD_PRIORITY_HIGHEST 2

#define BACKUP_ALTERNATE_DATA 4

#define BAUD_56K 32768

#define FILE_FLAG_POSIX_SEMANTICS 16777216

#define SETXOFF 1

#define LOAD_WITH_ALTERED_SEARCH_PATH 8

#define PST_FAX 33

#define PROCESS_HEAP_UNCOMMITTED_RANGE 2

#define FS_PERSISTENT_ACLS 8

#define PCF_DTRDSR 1

#define LOGON32_LOGON_UNLOCK 7

#define EXCEPTION_FLT_DIVIDE_BY_ZERO 3221225614

#define BAUD_38400 16384

#define OF_READ 0

#define CREATE_PROCESS_DEBUG_EVENT 3

#define MS_RING_ON 64

#define LHND 66

#define CBR_56000 56000

#define DDD_RAW_TARGET_PATH 1

#define BAUD_150 8

#define FORMAT_MESSAGE_ARGUMENT_ARRAY 8192

#define THREAD_PRIORITY_BELOW_NORMAL -1

#define FILE_ENCRYPTABLE 0

#define CBR_2400 2400

#define CLRDTR 6

#define PIPE_WAIT 0

#define FILE_READ_ONLY 8

#define CE_TXFULL 256

#define NONZEROLHND 2

#define DDD_REMOVE_DEFINITION 2

#define FILE_FLAG_OPEN_NO_RECALL 1048576

#define EXCEPTION_GUARD_PAGE 2147483649

#define BAUD_075 1

#define IE_NOPEN -3

#define EXCEPTION_FLT_DENORMAL_OPERAND 3221225613

#define LOGON32_PROVIDER_WINNT40 2

#define STREAM_MODIFIED_WHEN_READ 1

#define MUTEX_MODIFY_STATE 1

#define PURGE_TXABORT 1

#define S_PERIOD1024 1

#define OF_EXIST 16384

#define CREATE_DEFAULT_ERROR_MODE 67108864

#define LOGON32_PROVIDER_WINNT35 1

#define SEM_NOALIGNMENTFAULTEXCEPT 4

#define FS_UNICODE_STORED_ON_DISK 4

#define SECURITY_SQOS_PRESENT 1048576

#define THREAD_PRIORITY_NORMAL 0

#define FILE_IS_ENCRYPTED 1

#define RTS_CONTROL_TOGGLE 3

#define LMEM_MODIFY 128

#define EXIT_PROCESS_DEBUG_EVENT 5

#define MUTEX_ALL_ACCESS 2031617

#define INVALID_FILE_ATTRIBUTES -1

#define PCF_RLSD 4

#define HINSTANCE_ERROR 32

#define OF_SHARE_DENY_READ 48

#define STACK_SIZE_PARAM_IS_A_RESERVATION 65536

#define EV_RLSD 32

#define CE_OOP 4096

#define EXCEPTION_DATATYPE_MISALIGNMENT 2147483650

#define MS_DSR_ON 32

#define DONT_RESOLVE_DLL_REFERENCES 1

#define TRUNCATE_EXISTING 5

#define BATTERY_FLAG_CHARGING 8

#define PIPE_UNLIMITED_INSTANCES 255

#define BAUD_4800 512

#define S_WHITE512 4

#define GMEM_DISCARDED 16384

#define PROFILE_KERNEL 536870912

#define CBR_19200 19200

#define EXCEPTION_SINGLE_STEP 2147483652

#define IE_BYTESIZE -11

#define EV_CTS 8

#define THREAD_PRIORITY_TIME_CRITICAL 15

#define WAIT_FAILED 4294967295

#define PURGE_RXABORT 2

#define S_SERDVNA -1

#define PCF_SPECIALCHARS 256

#define BAUD_134_5 4

#define RTS_CONTROL_ENABLE 1

#define MOVEFILE_COPY_ALLOWED 2

#define STREAM_SPARSE_ATTRIBUTE 8

#define S_LEGATO 1

#define INVALID_HANDLE_VALUE -1

#define EXIT_THREAD_DEBUG_EVENT 4

#define OF_PARSE 256

#define BAUD_2400 256

#define SCS_THIS_PLATFORM_BINARY 0

#define DDD_EXACT_MATCH_ON_REMOVE 4

#define BAUD_USER 268435456

#define STARTF_USESIZE 2

#define AC_LINE_UNKNOWN 255

#define FILE_CURRENT 1

#define PROCESS_HEAP_ENTRY_MOVEABLE 16

#define LOGON32_LOGON_NETWORK 3

#define EXCEPTION_BREAKPOINT 2147483651

#define BACKUP_EA_DATA 2

#define PCF_TOTALTIMEOUTS 64

#define EXCEPTION_INT_DIVIDE_BY_ZERO 3221225620

#define COPY_FILE_RESTARTABLE 2

#define NMPWAIT_NOWAIT 1

#define PST_RS423 4

#define PST_RS422 3

#define EVENTLOG_FULL_INFO 0

#define CREATE_UNICODE_ENVIRONMENT 1024

#define FILE_ROOT_DIR 3

#define THREAD_PRIORITY_ABOVE_NORMAL 1

#define S_WHITE1024 5

#define ABOVE_NORMAL_PRIORITY_CLASS 32768

#define PST_RS449 5

#define LMEM_NOCOMPACT 16

#define GET_TAPE_MEDIA_INFORMATION 0

#define CE_RXPARITY 4

#define LOAD_IGNORE_CODE_AUTHZ_LEVEL 16

#define BAUD_57600 262144

#define SCS_POSIX_BINARY 4

#define ONESTOPBIT 0

#define STARTF_RUNFULLSCREEN 32

#define FILE_SYSTEM_ATTR 2

#define FS_CASE_IS_PRESERVED 2

#define NOPARITY 0

#define MARKPARITY 3

#define BELOW_NORMAL_PRIORITY_CLASS 16384

#define DRIVE_NO_ROOT_DIR 1

#define PST_RS232 1

#define EXCEPTION_ILLEGAL_INSTRUCTION 3221225501

#define CBR_9600 9600

#define SP_PARITY 1

#define IE_OPEN -2

#define GHND 66

#define GMEM_DISCARDABLE 256

#define SECURITY_CONTEXT_TRACKING 262144

#define FILE_BEGIN 0

#define PST_X25 259

#define ONE5STOPBITS 1

#define OVERWRITE_HIDDEN 4

#define SCS_32BIT_BINARY 0

#define FILE_FLAG_BACKUP_SEMANTICS 33554432

#define CE_IOE 1024

#define LMEM_NODISCARD 32

#define PARITY_SPACE 4096

typedef enum enum_3272 {
    INTRNCVT_OK=0,
    INTRNCVT_OVERFLOW=1,
    INTRNCVT_UNDERFLOW=2
} enum_3272;

typedef enum enum_3272 INTRNCVT_STATUS;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR _GENERIC_BINDING_ROUTINE_PAIR, *P_GENERIC_BINDING_ROUTINE_PAIR;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR GENERIC_BINDING_ROUTINE_PAIR;

typedef void * (*GENERIC_BINDING_ROUTINE)(void *);

typedef void (*GENERIC_UNBIND_ROUTINE)(void *, uchar *);

struct _GENERIC_BINDING_ROUTINE_PAIR {
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

typedef struct NDR_ALLOC_ALL_NODES_CONTEXT NDR_ALLOC_ALL_NODES_CONTEXT, *PNDR_ALLOC_ALL_NODES_CONTEXT;

struct NDR_ALLOC_ALL_NODES_CONTEXT {
};

typedef struct _COMM_FAULT_OFFSETS _COMM_FAULT_OFFSETS, *P_COMM_FAULT_OFFSETS;

typedef struct _COMM_FAULT_OFFSETS COMM_FAULT_OFFSETS;

struct _COMM_FAULT_OFFSETS {
    short CommOffset;
    short FaultOffset;
};

typedef struct ARRAY_INFO ARRAY_INFO, *PARRAY_INFO;

struct ARRAY_INFO {
    long Dimension;
    ulong *BufferConformanceMark;
    ulong *BufferVarianceMark;
    ulong *MaxCountArray;
    ulong *OffsetArray;
    ulong *ActualCountArray;
};

typedef struct _NDR_CS_ROUTINES _NDR_CS_ROUTINES, *P_NDR_CS_ROUTINES;

typedef struct _NDR_CS_ROUTINES NDR_CS_ROUTINES;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES _NDR_CS_SIZE_CONVERT_ROUTINES, *P_NDR_CS_SIZE_CONVERT_ROUTINES;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES NDR_CS_SIZE_CONVERT_ROUTINES;

typedef ulong error_status_t;

typedef void (*CS_TAG_GETTING_ROUTINE)(RPC_BINDING_HANDLE, int, ulong *, ulong *, ulong *, error_status_t *);

typedef enum _IDL_CS_CONVERT {
    IDL_CS_NO_CONVERT=0,
    IDL_CS_IN_PLACE_CONVERT=1,
    IDL_CS_NEW_BUFFER_CONVERT=2
} _IDL_CS_CONVERT;

typedef enum _IDL_CS_CONVERT IDL_CS_CONVERT;

typedef void (*CS_TYPE_NET_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (*CS_TYPE_TO_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, void *, ulong, byte *, ulong *, error_status_t *);

typedef void (*CS_TYPE_LOCAL_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (*CS_TYPE_FROM_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, byte *, ulong, ulong, void *, ulong *, error_status_t *);

struct _NDR_CS_ROUTINES {
    NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
    CS_TAG_GETTING_ROUTINE *pTagGettingRoutines;
};

struct _NDR_CS_SIZE_CONVERT_ROUTINES {
    CS_TYPE_NET_SIZE_ROUTINE pfnNetSize;
    CS_TYPE_TO_NETCS_ROUTINE pfnToNetCs;
    CS_TYPE_LOCAL_SIZE_ROUTINE pfnLocalSize;
    CS_TYPE_FROM_NETCS_ROUTINE pfnFromNetCs;
};

typedef struct _XMIT_ROUTINE_QUINTUPLE _XMIT_ROUTINE_QUINTUPLE, *P_XMIT_ROUTINE_QUINTUPLE;

typedef struct _XMIT_ROUTINE_QUINTUPLE XMIT_ROUTINE_QUINTUPLE;

typedef struct _MIDL_STUB_MESSAGE _MIDL_STUB_MESSAGE, *P_MIDL_STUB_MESSAGE;

typedef struct _MIDL_STUB_MESSAGE *PMIDL_STUB_MESSAGE;

typedef void (*XMIT_HELPER_ROUTINE)(PMIDL_STUB_MESSAGE);

typedef struct NDR_POINTER_QUEUE_STATE NDR_POINTER_QUEUE_STATE, *PNDR_POINTER_QUEUE_STATE;

typedef struct _MIDL_STUB_DESC _MIDL_STUB_DESC, *P_MIDL_STUB_DESC;

typedef struct _FULL_PTR_XLAT_TABLES _FULL_PTR_XLAT_TABLES, *P_FULL_PTR_XLAT_TABLES;

typedef struct _struct_1164 _struct_1164, *P_struct_1164;

typedef struct _struct_1164 *NDR_SCONTEXT;

typedef struct _NDR_ASYNC_MESSAGE _NDR_ASYNC_MESSAGE, *P_NDR_ASYNC_MESSAGE;

typedef struct _NDR_ASYNC_MESSAGE *PNDR_ASYNC_MESSAGE;

typedef struct _NDR_CORRELATION_INFO _NDR_CORRELATION_INFO, *P_NDR_CORRELATION_INFO;

typedef struct _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO;

typedef struct CS_STUB_INFO CS_STUB_INFO, *PCS_STUB_INFO;

typedef struct _NDR_PROC_CONTEXT _NDR_PROC_CONTEXT, *P_NDR_PROC_CONTEXT;

typedef union _union_1196 _union_1196, *P_union_1196;

typedef void (*NDR_RUNDOWN)(void *);

typedef void (*EXPR_EVAL)(struct _MIDL_STUB_MESSAGE *);

typedef struct _MALLOC_FREE_STRUCT _MALLOC_FREE_STRUCT, *P_MALLOC_FREE_STRUCT;

typedef struct _MALLOC_FREE_STRUCT MALLOC_FREE_STRUCT;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE _USER_MARSHAL_ROUTINE_QUADRUPLE, *P_USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef void (*NDR_NOTIFY_ROUTINE)(void);

typedef struct _struct_1206 _struct_1206, *P_struct_1206;

typedef struct _struct_1207 _struct_1207, *P_struct_1207;

typedef enum enum_1202 {
    XLAT_SERVER=1,
    XLAT_CLIENT=2
} enum_1202;

typedef enum enum_1202 XLAT_SIDE;

typedef struct __GENERIC_BINDING_INFO __GENERIC_BINDING_INFO, *P__GENERIC_BINDING_INFO;

typedef struct __GENERIC_BINDING_INFO *PGENERIC_BINDING_INFO;

typedef ulong (*USER_MARSHAL_SIZING_ROUTINE)(ulong *, ulong, void *);

typedef uchar * (*USER_MARSHAL_MARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef uchar * (*USER_MARSHAL_UNMARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef void (*USER_MARSHAL_FREEING_ROUTINE)(ulong *, void *);

typedef struct _FULL_PTR_TO_REFID_ELEMENT _FULL_PTR_TO_REFID_ELEMENT, *P_FULL_PTR_TO_REFID_ELEMENT;

typedef struct _FULL_PTR_TO_REFID_ELEMENT *PFULL_PTR_TO_REFID_ELEMENT;

struct _MIDL_STUB_MESSAGE {
    PRPC_MESSAGE RpcMsg;
    uchar *Buffer;
    uchar *BufferStart;
    uchar *BufferEnd;
    uchar *BufferMark;
    ulong BufferLength;
    ulong MemorySize;
    uchar *Memory;
    int IsClient;
    int ReuseBuffer;
    struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
    int IgnoreEmbeddedPointers;
    uchar *PointerBufferMark;
    uchar fBufferValid;
    uchar uFlags;
    ushort Unused2;
    ULONG_PTR MaxCount;
    ulong Offset;
    ulong ActualCount;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    uchar *StackTop;
    uchar *pPresentedType;
    uchar *pTransmitType;
    handle_t SavedHandle;
    struct _MIDL_STUB_DESC *StubDesc;
    struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
    ulong FullPtrRefId;
    ulong PointerLength;
    int fInDontFree:1;
    int fDontCallFreeInst:1;
    int fInOnlyParam:1;
    int fHasReturn:1;
    int fHasExtensions:1;
    int fHasNewCorrDesc:1;
    int fUnused:10;
    int fUnused2:16;
    ulong dwDestContext;
    void *pvDestContext;
    NDR_SCONTEXT *SavedContextHandles;
    long ParamNumber;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    PARRAY_INFO pArrayInfo;
    ulong *SizePtrCountArray;
    ulong *SizePtrOffsetArray;
    ulong *SizePtrLengthArray;
    void *pArgQueue;
    ulong dwStubPhase;
    void *LowStackMark;
    PNDR_ASYNC_MESSAGE pAsyncMsg;
    PNDR_CORRELATION_INFO pCorrInfo;
    uchar *pCorrMemory;
    void *pMemoryList;
    struct CS_STUB_INFO *pCSInfo;
    uchar *ConformanceMark;
    uchar *VarianceMark;
    INT_PTR Unused;
    struct _NDR_PROC_CONTEXT *pContext;
    INT_PTR Reserved51_1;
    INT_PTR Reserved51_2;
    INT_PTR Reserved51_3;
    INT_PTR Reserved51_4;
    INT_PTR Reserved51_5;
};

union _union_1196 {
    handle_t *pAutoHandle;
    handle_t *pPrimitiveHandle;
    PGENERIC_BINDING_INFO pGenericBindingInfo;
};

struct _MIDL_STUB_DESC {
    void *RpcInterfaceInformation;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    union _union_1196 IMPLICIT_HANDLE_INFO;
    NDR_RUNDOWN *apfnNdrRundownRoutines;
    GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
    EXPR_EVAL *apfnExprEval;
    XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
    uchar *pFormatTypes;
    int fCheckBounds;
    ulong Version;
    MALLOC_FREE_STRUCT *pMallocFreeStruct;
    long MIDLVersion;
    COMM_FAULT_OFFSETS *CommFaultOffsets;
    USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
    NDR_NOTIFY_ROUTINE *NotifyRoutineTable;
    ULONG_PTR mFlags;
    NDR_CS_ROUTINES *CsRoutineTables;
    void *Reserved4;
    ULONG_PTR Reserved5;
};

struct _USER_MARSHAL_ROUTINE_QUADRUPLE {
    USER_MARSHAL_SIZING_ROUTINE pfnBufferSize;
    USER_MARSHAL_MARSHALLING_ROUTINE pfnMarshall;
    USER_MARSHAL_UNMARSHALLING_ROUTINE pfnUnmarshall;
    USER_MARSHAL_FREEING_ROUTINE pfnFree;
};

struct _MALLOC_FREE_STRUCT {
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
};

struct _FULL_PTR_TO_REFID_ELEMENT {
    struct _FULL_PTR_TO_REFID_ELEMENT *Next;
    void *Pointer;
    ulong RefId;
    uchar State;
};

struct NDR_POINTER_QUEUE_STATE {
};

struct _NDR_ASYNC_MESSAGE {
};

struct _struct_1207 {
    PFULL_PTR_TO_REFID_ELEMENT *XlatTable;
    ulong NumberOfBuckets;
    ulong HashMask;
};

struct _struct_1206 {
    void **XlatTable;
    uchar *StateTable;
    ulong NumberOfEntries;
};

struct _XMIT_ROUTINE_QUINTUPLE {
    XMIT_HELPER_ROUTINE pfnTranslateToXmit;
    XMIT_HELPER_ROUTINE pfnTranslateFromXmit;
    XMIT_HELPER_ROUTINE pfnFreeXmit;
    XMIT_HELPER_ROUTINE pfnFreeInst;
};

struct _struct_1164 {
    void *pad[2];
    void *userContext;
};

struct _NDR_CORRELATION_INFO {
};

struct _NDR_PROC_CONTEXT {
};

struct _FULL_PTR_XLAT_TABLES {
    struct _struct_1206 RefIdToPointer;
    struct _struct_1207 PointerToRefId;
    ulong NextRefId;
    XLAT_SIDE XlatSide;
};

struct __GENERIC_BINDING_INFO {
    void *pObj;
    uint Size;
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

struct CS_STUB_INFO {
    ulong WireCodeset;
    ulong DesiredReceivingCodeset;
    void *CSArrayInfo;
};

typedef struct _MIDL_STUBLESS_PROXY_INFO _MIDL_STUBLESS_PROXY_INFO, *P_MIDL_STUBLESS_PROXY_INFO;

typedef struct _MIDL_STUBLESS_PROXY_INFO MIDL_STUBLESS_PROXY_INFO;

typedef struct _MIDL_STUB_DESC MIDL_STUB_DESC;

typedef MIDL_STUB_DESC *PMIDL_STUB_DESC;

typedef uchar *PFORMAT_STRING;

typedef struct _MIDL_SYNTAX_INFO _MIDL_SYNTAX_INFO, *P_MIDL_SYNTAX_INFO;

typedef struct _MIDL_SYNTAX_INFO *PMIDL_SYNTAX_INFO;

struct _MIDL_STUBLESS_PROXY_INFO {
    PMIDL_STUB_DESC pStubDesc;
    PFORMAT_STRING ProcFormatString;
    ushort *FormatStringOffset;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

struct _MIDL_SYNTAX_INFO {
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    PFORMAT_STRING ProcString;
    ushort *FmtStringOffset;
    PFORMAT_STRING TypeString;
    void *aUserMarshalQuadruple;
    ULONG_PTR pReserved1;
    ULONG_PTR pReserved2;
};

typedef enum enum_1209 {
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
} enum_1209;

typedef enum enum_1209 PROXY_PHASE;

typedef struct _SCONTEXT_QUEUE _SCONTEXT_QUEUE, *P_SCONTEXT_QUEUE;

typedef struct _SCONTEXT_QUEUE SCONTEXT_QUEUE;

struct _SCONTEXT_QUEUE {
    ulong NumberOfObjects;
    NDR_SCONTEXT *ArrayOfObjects;
};

typedef enum enum_1208 {
    STUB_UNMARSHAL=0,
    STUB_CALL_SERVER=1,
    STUB_MARSHAL=2,
    STUB_CALL_SERVER_NO_HRESULT=3
} enum_1208;

typedef enum enum_1204 {
    XLAT_SERVER=1,
    XLAT_CLIENT=2
} enum_1204;

typedef enum enum_1210 {
    STUB_UNMARSHAL=0,
    STUB_CALL_SERVER=1,
    STUB_MARSHAL=2,
    STUB_CALL_SERVER_NO_HRESULT=3
} enum_1210;

typedef enum enum_1211 {
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
} enum_1211;

typedef long (*SERVER_ROUTINE)(void);

typedef enum _USER_MARSHAL_CB_TYPE {
    USER_MARSHAL_CB_BUFFER_SIZE=0,
    USER_MARSHAL_CB_MARSHALL=1,
    USER_MARSHAL_CB_UNMARSHALL=2,
    USER_MARSHAL_CB_FREE=3
} _USER_MARSHAL_CB_TYPE;

typedef enum _USER_MARSHAL_CB_TYPE USER_MARSHAL_CB_TYPE;

typedef union _union_1198 _union_1198, *P_union_1198;

union _union_1198 {
    handle_t *pAutoHandle;
    handle_t *pPrimitiveHandle;
    PGENERIC_BINDING_INFO pGenericBindingInfo;
};

typedef union _CLIENT_CALL_RETURN _CLIENT_CALL_RETURN, *P_CLIENT_CALL_RETURN;

union _CLIENT_CALL_RETURN {
    void *Pointer;
    LONG_PTR Simple;
};

typedef void *NDR_CCONTEXT;

typedef void * (RPC_CLIENT_ALLOC)(size_t);

typedef struct _SCONTEXT_QUEUE *PSCONTEXT_QUEUE;

typedef void (RPC_CLIENT_FREE)(void *);

typedef union _CLIENT_CALL_RETURN CLIENT_CALL_RETURN;

typedef enum enum_1208 STUB_PHASE;

typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO;

typedef void (*STUB_THUNK)(PMIDL_STUB_MESSAGE);

typedef ushort *PARAM_OFFSETTABLE;

typedef void *RPC_SS_THREAD_HANDLE;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR *PGENERIC_BINDING_ROUTINE_PAIR;

typedef void *PMIDL_XMIT_TYPE;

typedef struct _USER_MARSHAL_CB _USER_MARSHAL_CB, *P_USER_MARSHAL_CB;

struct _USER_MARSHAL_CB {
    ulong Flags;
    PMIDL_STUB_MESSAGE pStubMsg;
    PFORMAT_STRING pReserve;
    ulong Signature;
    USER_MARSHAL_CB_TYPE CBType;
    PFORMAT_STRING pFormat;
    PFORMAT_STRING pTypeFormat;
};

typedef struct _MIDL_SERVER_INFO_ _MIDL_SERVER_INFO_, *P_MIDL_SERVER_INFO_;

typedef struct _MIDL_SERVER_INFO_ *PMIDL_SERVER_INFO;

struct _MIDL_SERVER_INFO_ {
    PMIDL_STUB_DESC pStubDesc;
    SERVER_ROUTINE *DispatchTable;
    PFORMAT_STRING ProcString;
    ushort *FmtStringOffset;
    STUB_THUNK *ThunkTable;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

typedef struct _FULL_PTR_XLAT_TABLES FULL_PTR_XLAT_TABLES;

typedef struct _FULL_PTR_XLAT_TABLES *PFULL_PTR_XLAT_TABLES;

typedef struct _struct_1166 _struct_1166, *P_struct_1166;

struct _struct_1166 {
    void *pad[2];
    void *userContext;
};

typedef struct _XMIT_ROUTINE_QUINTUPLE *PXMIT_ROUTINE_QUINTUPLE;

typedef struct _NDR_USER_MARSHAL_INFO _NDR_USER_MARSHAL_INFO, *P_NDR_USER_MARSHAL_INFO;

typedef union _union_1225 _union_1225, *P_union_1225;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 _NDR_USER_MARSHAL_INFO_LEVEL1, *P_NDR_USER_MARSHAL_INFO_LEVEL1;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 NDR_USER_MARSHAL_INFO_LEVEL1;

struct _NDR_USER_MARSHAL_INFO_LEVEL1 {
    void *Buffer;
    ulong BufferSize;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    ULONG_PTR Reserved[5];
};

union _union_1225 {
    NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

struct _NDR_USER_MARSHAL_INFO {
    ulong InformationLevel;
    union _union_1225 field1_0x4;
};

typedef uchar *RPC_BUFPTR;

typedef struct _MIDL_FORMAT_STRING _MIDL_FORMAT_STRING, *P_MIDL_FORMAT_STRING;

typedef struct _MIDL_FORMAT_STRING MIDL_FORMAT_STRING;

struct _MIDL_FORMAT_STRING {
    short Pad;
    uchar Format[0];
};

typedef struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE;

typedef uchar boolean;

typedef void (*NDR_NOTIFY2_ROUTINE)(boolean);

typedef struct _USER_MARSHAL_CB USER_MARSHAL_CB;

typedef union _union_1227 _union_1227, *P_union_1227;

union _union_1227 {
    NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

typedef ulong RPC_LENGTH;

typedef double MIDL_uhyper;

typedef struct _FULL_PTR_TO_REFID_ELEMENT FULL_PTR_TO_REFID_ELEMENT;

typedef struct _NDR_USER_MARSHAL_INFO NDR_USER_MARSHAL_INFO;

typedef struct _MIDL_SERVER_INFO_ MIDL_SERVER_INFO;

typedef struct __GENERIC_BINDING_INFO GENERIC_BINDING_INFO;

typedef MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO;

typedef struct _struct_1209 _struct_1209, *P_struct_1209;

struct _struct_1209 {
    PFULL_PTR_TO_REFID_ELEMENT *XlatTable;
    ulong NumberOfBuckets;
    ulong HashMask;
};

typedef struct _struct_1208 _struct_1208, *P_struct_1208;

struct _struct_1208 {
    void **XlatTable;
    uchar *StateTable;
    ulong NumberOfEntries;
};

typedef byte cs_byte;

typedef ushort *PPARAM_OFFSETTABLE;

#define USER_MARSHAL_FC_USHORT 7

#define USER_MARSHAL_FC_ULONG 9

#define NDR_LOCAL_ENDIAN 16

#define TARGET_IS_NT351_OR_WIN95_OR_LATER 1

#define TARGET_IS_NT50_OR_LATER 1

#define USER_MARSHAL_FC_SMALL 3

#define NDR_LITTLE_ENDIAN 16

#define __RPCNDR_H_VERSION__ 500

#define USER_CALL_IS_ASYNC 256

#define NDR_VAX_FLOAT 256

#define NDR_ASCII_CHAR 0

#define USER_MARSHAL_FC_WCHAR 5

#define USER_MARSHAL_FC_CHAR 2

#define cbNDRContext 20

#define NDR_IBM_FLOAT 768

#define USER_MARSHAL_FC_SHORT 6

#define USER_CALL_NEW_CORRELATION_DESC 512

#define NDR_FLOAT_REP_MASK 65280

#define TARGET_IS_NT51_OR_LATER 1

#define USER_MARSHAL_FC_BYTE 1

#define NDR_BIG_ENDIAN 0

#define NDR_LOCAL_DATA_REPRESENTATION 16

#define USER_MARSHAL_FC_FLOAT 10

#define USER_MARSHAL_FC_LONG 8

#define USER_MARSHAL_FC_DOUBLE 12

#define NDR_EBCDIC_CHAR 1

#define USER_MARSHAL_FC_HYPER 11

#define NDR_INT_REP_MASK 240

#define NDR_IEEE_FLOAT 0

#define NDR_CHAR_REP_MASK 15

#define USER_MARSHAL_FC_USMALL 4

#define TARGET_IS_NT40_OR_LATER 1

typedef struct tagMONITORINFO tagMONITORINFO, *PtagMONITORINFO;

typedef struct tagMONITORINFO *LPMONITORINFO;

struct tagMONITORINFO {
    DWORD cbSize;
    RECT rcMonitor;
    RECT rcWork;
    DWORD dwFlags;
};

typedef BOOL (*DRAWSTATEPROC)(HDC, LPARAM, WPARAM, int, int);

typedef struct tagWNDCLASSA tagWNDCLASSA, *PtagWNDCLASSA;

typedef struct tagWNDCLASSA *LPWNDCLASSA;

typedef LPWNDCLASSA LPWNDCLASS;

typedef LRESULT (*WNDPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagWNDCLASSA {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
};

typedef struct tagMULTIKEYHELPA tagMULTIKEYHELPA, *PtagMULTIKEYHELPA;

typedef struct tagMULTIKEYHELPA *PMULTIKEYHELPA;

typedef PMULTIKEYHELPA PMULTIKEYHELP;

struct tagMULTIKEYHELPA {
    DWORD mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
};

typedef struct tagSERIALKEYSW tagSERIALKEYSW, *PtagSERIALKEYSW;

typedef struct tagSERIALKEYSW SERIALKEYSW;

struct tagSERIALKEYSW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszActivePort;
    LPWSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct tagSCROLLINFO tagSCROLLINFO, *PtagSCROLLINFO;

typedef struct tagSCROLLINFO SCROLLINFO;

struct tagSCROLLINFO {
    UINT cbSize;
    UINT fMask;
    int nMin;
    int nMax;
    UINT nPage;
    int nPos;
    int nTrackPos;
};

typedef struct tagSERIALKEYSA tagSERIALKEYSA, *PtagSERIALKEYSA;

typedef struct tagSERIALKEYSA SERIALKEYSA;

struct tagSERIALKEYSA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszActivePort;
    LPSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct tagMSGBOXPARAMSA tagMSGBOXPARAMSA, *PtagMSGBOXPARAMSA;

typedef struct tagHELPINFO tagHELPINFO, *PtagHELPINFO;

typedef struct tagHELPINFO *LPHELPINFO;

typedef void (*MSGBOXCALLBACK)(LPHELPINFO);

struct tagHELPINFO {
    UINT cbSize;
    int iContextType;
    int iCtrlId;
    HANDLE hItemHandle;
    DWORD_PTR dwContextId;
    POINT MousePos;
};

struct tagMSGBOXPARAMSA {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef struct tagWNDCLASSEXA tagWNDCLASSEXA, *PtagWNDCLASSEXA;

typedef struct tagWNDCLASSEXA *LPWNDCLASSEXA;

typedef LPWNDCLASSEXA LPWNDCLASSEX;

struct tagWNDCLASSEXA {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
};

typedef struct MENUITEMTEMPLATEHEADER MENUITEMTEMPLATEHEADER, *PMENUITEMTEMPLATEHEADER;

struct MENUITEMTEMPLATEHEADER {
    WORD versionNumber;
    WORD offset;
};

typedef struct tagMENUINFO tagMENUINFO, *PtagMENUINFO;

struct tagMENUINFO {
    DWORD cbSize;
    DWORD fMask;
    DWORD dwStyle;
    UINT cyMax;
    HBRUSH hbrBack;
    DWORD dwContextHelpID;
    ULONG_PTR dwMenuData;
};

typedef struct tagTPMPARAMS tagTPMPARAMS, *PtagTPMPARAMS;

typedef struct tagTPMPARAMS TPMPARAMS;

typedef TPMPARAMS *LPTPMPARAMS;

struct tagTPMPARAMS {
    UINT cbSize;
    RECT rcExclude;
};

typedef struct tagMENUINFO MENUINFO;

typedef struct tagTITLEBARINFO tagTITLEBARINFO, *PtagTITLEBARINFO;

typedef struct tagTITLEBARINFO *LPTITLEBARINFO;

struct tagTITLEBARINFO {
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[6];
};

typedef struct tagCBT_CREATEWNDW tagCBT_CREATEWNDW, *PtagCBT_CREATEWNDW;

typedef struct tagCREATESTRUCTW tagCREATESTRUCTW, *PtagCREATESTRUCTW;

struct tagCREATESTRUCTW {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCWSTR lpszName;
    LPCWSTR lpszClass;
    DWORD dwExStyle;
};

struct tagCBT_CREATEWNDW {
    struct tagCREATESTRUCTW *lpcs;
    HWND hwndInsertAfter;
};

typedef struct tagCBT_CREATEWNDA tagCBT_CREATEWNDA, *PtagCBT_CREATEWNDA;

typedef struct tagCREATESTRUCTA tagCREATESTRUCTA, *PtagCREATESTRUCTA;

struct tagCBT_CREATEWNDA {
    struct tagCREATESTRUCTA *lpcs;
    HWND hwndInsertAfter;
};

struct tagCREATESTRUCTA {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCSTR lpszName;
    LPCSTR lpszClass;
    DWORD dwExStyle;
};

typedef struct DLGITEMTEMPLATE DLGITEMTEMPLATE, *PDLGITEMTEMPLATE;

typedef struct DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

struct DLGITEMTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    short x;
    short y;
    short cx;
    short cy;
    WORD id;
};

typedef struct tagACCESSTIMEOUT tagACCESSTIMEOUT, *PtagACCESSTIMEOUT;

typedef struct tagACCESSTIMEOUT ACCESSTIMEOUT;

struct tagACCESSTIMEOUT {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iTimeOutMSec;
};

typedef struct tagNCCALCSIZE_PARAMS tagNCCALCSIZE_PARAMS, *PtagNCCALCSIZE_PARAMS;

typedef struct tagWINDOWPOS tagWINDOWPOS, *PtagWINDOWPOS;

typedef struct tagWINDOWPOS *PWINDOWPOS;

struct tagWINDOWPOS {
    HWND hwnd;
    HWND hwndInsertAfter;
    int x;
    int y;
    int cx;
    int cy;
    UINT flags;
};

struct tagNCCALCSIZE_PARAMS {
    RECT rgrc[3];
    PWINDOWPOS lppos;
};

typedef struct tagCBTACTIVATESTRUCT tagCBTACTIVATESTRUCT, *PtagCBTACTIVATESTRUCT;

struct tagCBTACTIVATESTRUCT {
    BOOL fMouse;
    HWND hWndActive;
};

typedef struct tagUSEROBJECTFLAGS tagUSEROBJECTFLAGS, *PtagUSEROBJECTFLAGS;

typedef struct tagUSEROBJECTFLAGS USEROBJECTFLAGS;

struct tagUSEROBJECTFLAGS {
    BOOL fInherit;
    BOOL fReserved;
    DWORD dwFlags;
};

typedef struct DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

typedef struct tagMENUBARINFO tagMENUBARINFO, *PtagMENUBARINFO;

typedef struct tagMENUBARINFO *LPMENUBARINFO;

struct tagMENUBARINFO {
    DWORD cbSize;
    RECT rcBar;
    HMENU hMenu;
    HWND hwndMenu;
    BOOL fBarFocused:1;
    BOOL fFocused:1;
};

typedef BOOL (*NAMEENUMPROCA)(LPSTR, LPARAM);

typedef NAMEENUMPROCA WINSTAENUMPROCA;

typedef WINSTAENUMPROCA WINSTAENUMPROC;

typedef struct tagCREATESTRUCTA *LPCREATESTRUCTA;

typedef LPCREATESTRUCTA LPCREATESTRUCT;

typedef struct tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

typedef struct tagHELPWININFOW tagHELPWININFOW, *PtagHELPWININFOW;

struct tagHELPWININFOW {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    WCHAR rgchMember[2];
};

typedef struct tagMSGBOXPARAMSW tagMSGBOXPARAMSW, *PtagMSGBOXPARAMSW;

typedef struct tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

struct tagMSGBOXPARAMSW {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpszText;
    LPCWSTR lpszCaption;
    DWORD dwStyle;
    LPCWSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef PVOID HDEVNOTIFY;

typedef HDEVNOTIFY *PHDEVNOTIFY;

typedef struct tagCOMPAREITEMSTRUCT tagCOMPAREITEMSTRUCT, *PtagCOMPAREITEMSTRUCT;

typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;

struct tagCOMPAREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    HWND hwndItem;
    UINT itemID1;
    ULONG_PTR itemData1;
    UINT itemID2;
    ULONG_PTR itemData2;
    DWORD dwLocaleId;
};

typedef struct tagWINDOWPLACEMENT tagWINDOWPLACEMENT, *PtagWINDOWPLACEMENT;

typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

typedef WINDOWPLACEMENT *PWINDOWPLACEMENT;

struct tagWINDOWPLACEMENT {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
};

typedef struct tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;

typedef struct tagSCROLLBARINFO tagSCROLLBARINFO, *PtagSCROLLBARINFO;

struct tagSCROLLBARINFO {
    DWORD cbSize;
    RECT rcScrollBar;
    int dxyLineButton;
    int xyThumbTop;
    int xyThumbBottom;
    int reserved;
    DWORD rgstate[6];
};

typedef struct tagKBDLLHOOKSTRUCT tagKBDLLHOOKSTRUCT, *PtagKBDLLHOOKSTRUCT;

typedef struct tagKBDLLHOOKSTRUCT *LPKBDLLHOOKSTRUCT;

struct tagKBDLLHOOKSTRUCT {
    DWORD vkCode;
    DWORD scanCode;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMEASUREITEMSTRUCT tagMEASUREITEMSTRUCT, *PtagMEASUREITEMSTRUCT;

typedef struct tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

struct tagMEASUREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemWidth;
    UINT itemHeight;
    ULONG_PTR itemData;
};

typedef struct tagTRACKMOUSEEVENT tagTRACKMOUSEEVENT, *PtagTRACKMOUSEEVENT;

typedef struct tagTRACKMOUSEEVENT TRACKMOUSEEVENT;

struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND hwndTrack;
    DWORD dwHoverTime;
};

typedef struct tagDEBUGHOOKINFO tagDEBUGHOOKINFO, *PtagDEBUGHOOKINFO;

struct tagDEBUGHOOKINFO {
    DWORD idThread;
    DWORD idThreadInstaller;
    LPARAM lParam;
    WPARAM wParam;
    int code;
};

typedef struct tagCWPSTRUCT tagCWPSTRUCT, *PtagCWPSTRUCT;

struct tagCWPSTRUCT {
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

typedef BOOL (*GRAYSTRINGPROC)(HDC, LPARAM, int);

typedef struct tagCOMBOBOXINFO tagCOMBOBOXINFO, *PtagCOMBOBOXINFO;

typedef struct tagCOMBOBOXINFO COMBOBOXINFO;

struct tagCOMBOBOXINFO {
    DWORD cbSize;
    RECT rcItem;
    RECT rcButton;
    DWORD stateButton;
    HWND hwndCombo;
    HWND hwndItem;
    HWND hwndList;
};

typedef struct tagMULTIKEYHELPA MULTIKEYHELPA;

typedef MULTIKEYHELPA MULTIKEYHELP;

typedef struct tagMINMAXINFO tagMINMAXINFO, *PtagMINMAXINFO;

typedef struct tagMINMAXINFO MINMAXINFO;

struct tagMINMAXINFO {
    POINT ptReserved;
    POINT ptMaxSize;
    POINT ptMaxPosition;
    POINT ptMinTrackSize;
    POINT ptMaxTrackSize;
};

typedef struct tagMENUITEMINFOW tagMENUITEMINFOW, *PtagMENUITEMINFOW;

typedef struct tagMENUITEMINFOW MENUITEMINFOW;

struct tagMENUITEMINFOW {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPWSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagMOUSEMOVEPOINT tagMOUSEMOVEPOINT, *PtagMOUSEMOVEPOINT;

typedef struct tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

struct tagMOUSEMOVEPOINT {
    int x;
    int y;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagICONMETRICSA tagICONMETRICSA, *PtagICONMETRICSA;

struct tagICONMETRICSA {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTA lfFont;
};

typedef NMHDR *LPNMHDR;

typedef struct tagHIGHCONTRASTA tagHIGHCONTRASTA, *PtagHIGHCONTRASTA;

typedef struct tagHIGHCONTRASTA HIGHCONTRASTA;

typedef HIGHCONTRASTA HIGHCONTRAST;

struct tagHIGHCONTRASTA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszDefaultScheme;
};

typedef struct tagMDINEXTMENU tagMDINEXTMENU, *PtagMDINEXTMENU;

typedef struct tagMDINEXTMENU MDINEXTMENU;

struct tagMDINEXTMENU {
    HMENU hmenuIn;
    HMENU hmenuNext;
    HWND hwndNext;
};

typedef struct tagMULTIKEYHELPA *LPMULTIKEYHELPA;

typedef struct tagNONCLIENTMETRICSW tagNONCLIENTMETRICSW, *PtagNONCLIENTMETRICSW;

struct tagNONCLIENTMETRICSW {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTW lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;
};

typedef BOOL (*PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, ULONG_PTR);

typedef PROPENUMPROCEXA PROPENUMPROCEX;

typedef struct tagFILTERKEYS tagFILTERKEYS, *PtagFILTERKEYS;

typedef struct tagFILTERKEYS FILTERKEYS;

struct tagFILTERKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iWaitMSec;
    DWORD iDelayMSec;
    DWORD iRepeatMSec;
    DWORD iBounceMSec;
};

typedef DWORD HELPPOLY;

typedef struct tagCREATESTRUCTW *LPCREATESTRUCTW;

typedef struct tagMOUSEKEYS tagMOUSEKEYS, *PtagMOUSEKEYS;

typedef struct tagMOUSEKEYS *LPMOUSEKEYS;

struct tagMOUSEKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iMaxSpeed;
    DWORD iTimeToMaxSpeed;
    DWORD iCtrlSpeed;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

typedef struct tagWNDCLASSW tagWNDCLASSW, *PtagWNDCLASSW;

typedef struct tagWNDCLASSW WNDCLASSW;

struct tagWNDCLASSW {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
};

typedef struct tagDELETEITEMSTRUCT tagDELETEITEMSTRUCT, *PtagDELETEITEMSTRUCT;

typedef struct tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

struct tagDELETEITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    HWND hwndItem;
    ULONG_PTR itemData;
};

typedef struct tagWNDCLASSA WNDCLASSA;

typedef struct tagMSG *PMSG;

typedef struct tagMULTIKEYHELPW tagMULTIKEYHELPW, *PtagMULTIKEYHELPW;

typedef struct tagMULTIKEYHELPW *LPMULTIKEYHELPW;

struct tagMULTIKEYHELPW {
    DWORD mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
};

typedef struct tagCWPRETSTRUCT tagCWPRETSTRUCT, *PtagCWPRETSTRUCT;

struct tagCWPRETSTRUCT {
    LRESULT lResult;
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagMOUSEHOOKSTRUCT tagMOUSEHOOKSTRUCT, *PtagMOUSEHOOKSTRUCT;

typedef struct tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

struct tagMOUSEHOOKSTRUCT {
    POINT pt;
    HWND hwnd;
    UINT wHitTestCode;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagACCEL tagACCEL, *PtagACCEL;

typedef struct tagACCEL *LPACCEL;

struct tagACCEL {
    BYTE fVirt;
    WORD key;
    WORD cmd;
};

typedef struct tagNONCLIENTMETRICSA tagNONCLIENTMETRICSA, *PtagNONCLIENTMETRICSA;

typedef struct tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS;

struct tagNONCLIENTMETRICSA {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTA lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;
};

typedef struct tagDROPSTRUCT tagDROPSTRUCT, *PtagDROPSTRUCT;

struct tagDROPSTRUCT {
    HWND hwndSource;
    HWND hwndSink;
    DWORD wFmt;
    ULONG_PTR dwData;
    POINT ptDrop;
    DWORD dwControlData;
};

typedef struct tagGUITHREADINFO tagGUITHREADINFO, *PtagGUITHREADINFO;

struct tagGUITHREADINFO {
    DWORD cbSize;
    DWORD flags;
    HWND hwndActive;
    HWND hwndFocus;
    HWND hwndCapture;
    HWND hwndMenuOwner;
    HWND hwndMoveSize;
    HWND hwndCaret;
    RECT rcCaret;
};

typedef struct tagMONITORINFOEXA tagMONITORINFOEXA, *PtagMONITORINFOEXA;

typedef struct tagMONITORINFOEXA *LPMONITORINFOEXA;

typedef LPMONITORINFOEXA LPMONITORINFOEX;

typedef struct tagMONITORINFO MONITORINFO;

struct tagMONITORINFOEXA {
    MONITORINFO field0_0x0;
    CHAR szDevice[32];
};

typedef struct tagWINDOWPOS WINDOWPOS;

typedef struct tagTOGGLEKEYS tagTOGGLEKEYS, *PtagTOGGLEKEYS;

typedef struct tagTOGGLEKEYS TOGGLEKEYS;

struct tagTOGGLEKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS;

typedef struct tagSOUNDSENTRYW tagSOUNDSENTRYW, *PtagSOUNDSENTRYW;

struct tagSOUNDSENTRYW {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPWSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagMENUGETOBJECTINFO tagMENUGETOBJECTINFO, *PtagMENUGETOBJECTINFO;

struct tagMENUGETOBJECTINFO {
    DWORD dwFlags;
    UINT uPos;
    HMENU hmenu;
    PVOID riid;
    PVOID pvObj;
};

typedef struct tagHELPWININFOA tagHELPWININFOA, *PtagHELPWININFOA;

typedef struct tagHELPWININFOA *PHELPWININFOA;

struct tagHELPWININFOA {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    CHAR rgchMember[2];
};

typedef struct tagMONITORINFOEXW tagMONITORINFOEXW, *PtagMONITORINFOEXW;

typedef struct tagMONITORINFOEXW MONITORINFOEXW;

struct tagMONITORINFOEXW {
    MONITORINFO field0_0x0;
    WCHAR szDevice[32];
};

typedef BOOL (*PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);

typedef struct tagMSLLHOOKSTRUCT tagMSLLHOOKSTRUCT, *PtagMSLLHOOKSTRUCT;

struct tagMSLLHOOKSTRUCT {
    POINT pt;
    DWORD mouseData;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMENUITEMINFOA tagMENUITEMINFOA, *PtagMENUITEMINFOA;

struct tagMENUITEMINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagMONITORINFOEXA MONITORINFOEXA;

typedef struct tagMULTIKEYHELPW MULTIKEYHELPW;

typedef struct tagHELPWININFOW *PHELPWININFOW;

typedef BOOL (*NAMEENUMPROCW)(LPWSTR, LPARAM);

typedef NAMEENUMPROCW DESKTOPENUMPROCW;

typedef BOOL (*PROPENUMPROCA)(HWND, LPCSTR, HANDLE);

typedef struct tagWNDCLASSA *PWNDCLASSA;

typedef PWNDCLASSA PWNDCLASS;

typedef struct DLGTEMPLATE DLGTEMPLATE, *PDLGTEMPLATE;

struct DLGTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    WORD cdit;
    short x;
    short y;
    short cx;
    short cy;
};

typedef struct tagMOUSEMOVEPOINT MOUSEMOVEPOINT;

typedef struct tagSTICKYKEYS tagSTICKYKEYS, *PtagSTICKYKEYS;

typedef struct tagSTICKYKEYS STICKYKEYS;

struct tagSTICKYKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef struct tagEVENTMSG tagEVENTMSG, *PtagEVENTMSG;

typedef struct tagEVENTMSG EVENTMSG;

struct tagEVENTMSG {
    UINT message;
    UINT paramL;
    UINT paramH;
    DWORD time;
    HWND hwnd;
};

typedef struct tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

typedef struct tagCWPRETSTRUCT *PCWPRETSTRUCT;

typedef struct tagWNDCLASSEXA *PWNDCLASSEXA;

typedef PWNDCLASSEXA PWNDCLASSEX;

typedef struct tagMSLLHOOKSTRUCT *LPMSLLHOOKSTRUCT;

typedef MENUINFO *LPCMENUINFO;

typedef struct tagNONCLIENTMETRICSW NONCLIENTMETRICSW;

typedef NAMEENUMPROCA DESKTOPENUMPROCA;

typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICSA;

typedef void (*SENDASYNCPROC)(HWND, UINT, ULONG_PTR, LRESULT);

typedef struct tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;

typedef struct tagWINDOWINFO tagWINDOWINFO, *PtagWINDOWINFO;

typedef WORD ATOM;

struct tagWINDOWINFO {
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
};

typedef struct tagMDICREATESTRUCTA tagMDICREATESTRUCTA, *PtagMDICREATESTRUCTA;

typedef struct tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT;

struct tagMDICREATESTRUCTA {
    LPCSTR szClass;
    LPCSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef void MENUTEMPLATEA;

typedef MENUTEMPLATEA MENUTEMPLATE;

typedef struct tagSOUNDSENTRYW *LPSOUNDSENTRYW;

typedef struct tagHARDWAREHOOKSTRUCT tagHARDWAREHOOKSTRUCT, *PtagHARDWAREHOOKSTRUCT;

typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;

struct tagHARDWAREHOOKSTRUCT {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
};

typedef struct tagICONMETRICSA ICONMETRICSA;

typedef ICONMETRICSA ICONMETRICS;

typedef BOOL (*MONITORENUMPROC)(HMONITOR, HDC, LPRECT, LPARAM);

typedef struct tagSTYLESTRUCT tagSTYLESTRUCT, *PtagSTYLESTRUCT;

typedef struct tagSTYLESTRUCT STYLESTRUCT;

struct tagSTYLESTRUCT {
    DWORD styleOld;
    DWORD styleNew;
};

typedef struct tagHELPWININFOA HELPWININFOA;

typedef HELPWININFOA HELPWININFO;

typedef struct DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

typedef struct tagDRAWITEMSTRUCT tagDRAWITEMSTRUCT, *PtagDRAWITEMSTRUCT;

typedef struct tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

struct tagDRAWITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemAction;
    UINT itemState;
    HWND hwndItem;
    HDC hDC;
    RECT rcItem;
    ULONG_PTR itemData;
};

typedef struct DLGTEMPLATE *LPCDLGTEMPLATEA;

typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE;

typedef struct tagSCROLLBARINFO *PSCROLLBARINFO;

typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;

typedef struct tagEVENTMSG *LPEVENTMSGMSG;

typedef int (*EDITWORDBREAKPROCA)(LPSTR, int, int, int);

typedef struct tagSCROLLBARINFO SCROLLBARINFO;

typedef int (*EDITWORDBREAKPROCW)(LPWSTR, int, int, int);

typedef SCROLLINFO *LPCSCROLLINFO;

typedef struct MENUITEMTEMPLATE MENUITEMTEMPLATE, *PMENUITEMTEMPLATE;

struct MENUITEMTEMPLATE {
    WORD mtOption;
    WORD mtID;
    WCHAR mtString[1];
};

typedef struct tagDROPSTRUCT *PDROPSTRUCT;

typedef struct tagEVENTMSG *PEVENTMSG;

typedef struct tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

typedef struct tagICONMETRICSA *LPICONMETRICSA;

typedef struct tagMINIMIZEDMETRICS tagMINIMIZEDMETRICS, *PtagMINIMIZEDMETRICS;

struct tagMINIMIZEDMETRICS {
    UINT cbSize;
    int iWidth;
    int iHorzGap;
    int iVertGap;
    int iArrange;
};

typedef struct tagKBDLLHOOKSTRUCT KBDLLHOOKSTRUCT;

typedef struct tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

typedef WNDCLASSA WNDCLASS;

typedef struct tagWNDCLASSW *PWNDCLASSW;

typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;

typedef struct tagCWPRETSTRUCT *LPCWPRETSTRUCT;

typedef struct tagWNDCLASSEXW tagWNDCLASSEXW, *PtagWNDCLASSEXW;

typedef struct tagWNDCLASSEXW WNDCLASSEXW;

struct tagWNDCLASSEXW {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
    HICON hIconSm;
};

typedef struct tagWNDCLASSEXA WNDCLASSEXA;

typedef BOOL (*PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, ULONG_PTR);

typedef struct tagHELPWININFOA *LPHELPWININFOA;

typedef struct tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

typedef struct DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;

typedef struct tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

typedef struct tagHELPWININFOW *LPHELPWININFOW;

typedef struct tagMDINEXTMENU *PMDINEXTMENU;

typedef struct tagSERIALKEYSA *LPSERIALKEYSA;

typedef LPSERIALKEYSA LPSERIALKEYS;

typedef struct tagCOPYDATASTRUCT tagCOPYDATASTRUCT, *PtagCOPYDATASTRUCT;

typedef struct tagCOPYDATASTRUCT COPYDATASTRUCT;

struct tagCOPYDATASTRUCT {
    ULONG_PTR dwData;
    DWORD cbData;
    PVOID lpData;
};

typedef struct tagHIGHCONTRASTW tagHIGHCONTRASTW, *PtagHIGHCONTRASTW;

typedef struct tagHIGHCONTRASTW HIGHCONTRASTW;

struct tagHIGHCONTRASTW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszDefaultScheme;
};

typedef struct tagCURSORINFO tagCURSORINFO, *PtagCURSORINFO;

typedef struct tagCURSORINFO CURSORINFO;

struct tagCURSORINFO {
    DWORD cbSize;
    DWORD flags;
    HCURSOR hCursor;
    POINT ptScreenPos;
};

typedef struct tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

typedef struct tagMENUBARINFO *PMENUBARINFO;

typedef struct tagSOUNDSENTRYA tagSOUNDSENTRYA, *PtagSOUNDSENTRYA;

struct tagSOUNDSENTRYA {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

typedef struct tagDRAWTEXTPARAMS tagDRAWTEXTPARAMS, *PtagDRAWTEXTPARAMS;

typedef struct tagDRAWTEXTPARAMS DRAWTEXTPARAMS;

struct tagDRAWTEXTPARAMS {
    UINT cbSize;
    int iTabLength;
    int iLeftMargin;
    int iRightMargin;
    UINT uiLengthDrawn;
};

typedef struct tagANIMATIONINFO tagANIMATIONINFO, *PtagANIMATIONINFO;

struct tagANIMATIONINFO {
    UINT cbSize;
    int iMinAnimate;
};

typedef struct tagMSG MSG;

typedef struct tagSTYLESTRUCT *LPSTYLESTRUCT;

typedef struct tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

typedef struct tagACCEL ACCEL;

typedef struct tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

typedef struct tagWINDOWINFO *PWINDOWINFO;

typedef struct tagICONMETRICSW tagICONMETRICSW, *PtagICONMETRICSW;

typedef struct tagICONMETRICSW *LPICONMETRICSW;

struct tagICONMETRICSW {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTW lfFont;
};

typedef LRESULT (*HOOKPROC)(int, WPARAM, LPARAM);

typedef struct tagCURSORSHAPE tagCURSORSHAPE, *PtagCURSORSHAPE;

struct tagCURSORSHAPE {
    int xHotSpot;
    int yHotSpot;
    int cx;
    int cy;
    int cbWidth;
    BYTE Planes;
    BYTE BitsPixel;
};

typedef struct tagCREATESTRUCTA CREATESTRUCTA;

typedef CREATESTRUCTA CREATESTRUCT;

typedef struct tagMENUITEMINFOA MENUITEMINFOA;

typedef MENUITEMINFOA *LPCMENUITEMINFOA;

typedef LPCMENUITEMINFOA LPCMENUITEMINFO;

typedef struct DLGTEMPLATE *LPCDLGTEMPLATEW;

typedef struct tagPAINTSTRUCT tagPAINTSTRUCT, *PtagPAINTSTRUCT;

typedef struct tagPAINTSTRUCT PAINTSTRUCT;

struct tagPAINTSTRUCT {
    HDC hdc;
    BOOL fErase;
    RECT rcPaint;
    BOOL fRestore;
    BOOL fIncUpdate;
    BYTE rgbReserved[32];
};

typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;

typedef struct tagCURSORSHAPE *LPCURSORSHAPE;

typedef struct tagCBT_CREATEWNDA CBT_CREATEWNDA;

typedef NONCLIENTMETRICSA NONCLIENTMETRICS;

typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;

typedef struct tagCBT_CREATEWNDW CBT_CREATEWNDW;

typedef struct tagCWPSTRUCT *NPCWPSTRUCT;

typedef struct tagMDICREATESTRUCTW tagMDICREATESTRUCTW, *PtagMDICREATESTRUCTW;

typedef struct tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

struct tagMDICREATESTRUCTW {
    LPCWSTR szClass;
    LPCWSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef struct tagMDICREATESTRUCTA MDICREATESTRUCTA;

typedef MDICREATESTRUCTA MDICREATESTRUCT;

typedef struct tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;

typedef MONITORINFOEXA MONITORINFOEX;

typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;

typedef PROPENUMPROCA PROPENUMPROC;

typedef struct tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

typedef PHELPWININFOA PHELPWININFO;

typedef struct tagGUITHREADINFO *LPGUITHREADINFO;

typedef struct tagWNDCLASSEXA *NPWNDCLASSEXA;

typedef struct tagHIGHCONTRASTA *LPHIGHCONTRASTA;

typedef LPHIGHCONTRASTA LPHIGHCONTRAST;

typedef LPICONMETRICSA LPICONMETRICS;

typedef struct tagWNDCLASSEXW *NPWNDCLASSEXW;

typedef WNDCLASSEXA WNDCLASSEX;

typedef struct tagALTTABINFO tagALTTABINFO, *PtagALTTABINFO;

struct tagALTTABINFO {
    DWORD cbSize;
    int cItems;
    int cColumns;
    int cRows;
    int iColFocus;
    int iRowFocus;
    int cxItem;
    int cyItem;
    POINT ptStart;
};

typedef struct tagSCROLLINFO *LPSCROLLINFO;

typedef struct tagWNDCLASSEXW *LPWNDCLASSEXW;

typedef NAMEENUMPROCW WINSTAENUMPROCW;

typedef void (*WINEVENTPROC)(HWINEVENTHOOK, DWORD, HWND, LONG, LONG, DWORD, DWORD);

typedef LPHELPWININFOA LPHELPWININFO;

typedef PVOID LPMENUTEMPLATEA;

typedef NPWNDCLASSEXA NPWNDCLASSEX;

typedef struct tagCWPSTRUCT *LPCWPSTRUCT;

typedef MENUITEMINFOW *LPCMENUITEMINFOW;

typedef struct tagEVENTMSG *NPEVENTMSG;

typedef PVOID LPMENUTEMPLATEW;

typedef struct tagHIGHCONTRASTW *LPHIGHCONTRASTW;

typedef struct tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

typedef MENUITEMINFOA MENUITEMINFO;

typedef SERIALKEYSA SERIALKEYS;

typedef struct FLASHWINFO FLASHWINFO, *PFLASHWINFO;

struct FLASHWINFO {
    UINT cbSize;
    HWND hwnd;
    DWORD dwFlags;
    UINT uCount;
    DWORD dwTimeout;
};

typedef struct tagICONMETRICSA *PICONMETRICSA;

typedef PICONMETRICSA PICONMETRICS;

typedef struct tagANIMATIONINFO ANIMATIONINFO;

typedef struct tagSCROLLBARINFO *LPSCROLLBARINFO;

typedef struct _ICONINFO _ICONINFO, *P_ICONINFO;

typedef struct _ICONINFO ICONINFO;

typedef ICONINFO *PICONINFO;

struct _ICONINFO {
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
};

typedef struct tagALTTABINFO ALTTABINFO;

typedef struct tagHELPINFO HELPINFO;

typedef HANDLE HDWP;

typedef struct tagCURSORINFO *PCURSORINFO;

typedef struct tagCWPSTRUCT CWPSTRUCT;

typedef struct tagMINMAXINFO *PMINMAXINFO;

typedef struct tagWINDOWINFO *LPWINDOWINFO;

typedef struct tagMULTIKEYHELPW *PMULTIKEYHELPW;

typedef struct tagSTICKYKEYS *LPSTICKYKEYS;

typedef struct tagPAINTSTRUCT *LPPAINTSTRUCT;

typedef struct tagCOMBOBOXINFO *LPCOMBOBOXINFO;

typedef DESKTOPENUMPROCA DESKTOPENUMPROC;

typedef struct tagCWPRETSTRUCT *NPCWPRETSTRUCT;

typedef struct tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

typedef struct tagTITLEBARINFO *PTITLEBARINFO;

typedef struct tagSOUNDSENTRYA SOUNDSENTRYA;

typedef SOUNDSENTRYA SOUNDSENTRY;

typedef struct tagICONMETRICSW *PICONMETRICSW;

typedef struct tagFILTERKEYS *LPFILTERKEYS;

typedef struct tagCLIENTCREATESTRUCT tagCLIENTCREATESTRUCT, *PtagCLIENTCREATESTRUCT;

struct tagCLIENTCREATESTRUCT {
    HANDLE hWindowMenu;
    UINT idFirstChild;
};

typedef struct tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

typedef struct tagMSGBOXPARAMSW MSGBOXPARAMSW;

typedef struct tagTOGGLEKEYS *LPTOGGLEKEYS;

typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;

typedef struct tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

typedef struct tagKBDLLHOOKSTRUCT *PKBDLLHOOKSTRUCT;

typedef struct tagDROPSTRUCT DROPSTRUCT;

typedef CBT_CREATEWNDA CBT_CREATEWND;

typedef struct tagACCESSTIMEOUT *LPACCESSTIMEOUT;

typedef struct DLGTEMPLATE *LPDLGTEMPLATEA;

typedef LPDLGTEMPLATEA LPDLGTEMPLATE;

typedef struct tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

typedef struct tagMSGBOXPARAMSA MSGBOXPARAMSA;

typedef struct tagMENUINFO *LPMENUINFO;

typedef struct tagMDICREATESTRUCTW MDICREATESTRUCTW;

typedef void MENUTEMPLATEW;

typedef EDITWORDBREAKPROCA EDITWORDBREAKPROC;

typedef struct tagEVENTMSG *NPEVENTMSGMSG;

typedef struct tagMSLLHOOKSTRUCT MSLLHOOKSTRUCT;

typedef struct tagMSG *NPMSG;

typedef struct tagSOUNDSENTRYA *LPSOUNDSENTRYA;

typedef struct tagCURSORSHAPE CURSORSHAPE;

typedef struct tagEVENTMSG *LPEVENTMSG;

typedef struct tagANIMATIONINFO *LPANIMATIONINFO;

typedef struct tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

typedef struct tagICONMETRICSW ICONMETRICSW;

typedef struct tagHELPWININFOW HELPWININFOW;

typedef struct tagCWPSTRUCT *PCWPSTRUCT;

typedef struct tagTRACKMOUSEEVENT *LPTRACKMOUSEEVENT;

typedef PMSGBOXPARAMSA PMSGBOXPARAMS;

typedef struct tagDROPSTRUCT *LPDROPSTRUCT;

typedef INT_PTR (*DLGPROC)(HWND, UINT, WPARAM, LPARAM);

typedef struct tagSERIALKEYSW *LPSERIALKEYSW;

typedef struct tagMENUGETOBJECTINFO MENUGETOBJECTINFO;

typedef LPMULTIKEYHELPA LPMULTIKEYHELP;

typedef struct tagMINIMIZEDMETRICS MINIMIZEDMETRICS;

typedef BOOL (*WNDENUMPROC)(HWND, LPARAM);

typedef void (*TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);

typedef struct tagMSLLHOOKSTRUCT *PMSLLHOOKSTRUCT;

typedef struct DLGTEMPLATE *LPDLGTEMPLATEW;

typedef struct tagWNDCLASSA *NPWNDCLASSA;

typedef LPSOUNDSENTRYA LPSOUNDSENTRY;

typedef MSGBOXPARAMSA MSGBOXPARAMS;

typedef struct tagALTTABINFO *PALTTABINFO;

typedef struct tagGUITHREADINFO GUITHREADINFO;

typedef struct tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

typedef struct tagMOUSEKEYS MOUSEKEYS;

typedef struct tagCREATESTRUCTW CREATESTRUCTW;

typedef struct tagMENUITEMINFOA *LPMENUITEMINFOA;

typedef LPMENUITEMINFOA LPMENUITEMINFO;

typedef struct tagPAINTSTRUCT *PPAINTSTRUCT;

typedef struct tagMENUBARINFO MENUBARINFO;

typedef struct tagCWPRETSTRUCT CWPRETSTRUCT;

typedef struct tagWNDCLASSW *LPWNDCLASSW;

typedef struct tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

typedef struct tagWNDCLASSEXW *PWNDCLASSEXW;

typedef struct tagPAINTSTRUCT *NPPAINTSTRUCT;

typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;

typedef struct tagALTTABINFO *LPALTTABINFO;

typedef struct tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

typedef struct tagWINDOWPOS *LPWINDOWPOS;

typedef struct tagWNDCLASSW *NPWNDCLASSW;

typedef struct tagTITLEBARINFO TITLEBARINFO;

typedef struct tagMENUITEMINFOW *LPMENUITEMINFOW;

typedef struct tagWINDOWINFO WINDOWINFO;

typedef struct tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

typedef struct tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

typedef struct tagSOUNDSENTRYW SOUNDSENTRYW;

typedef LPMENUTEMPLATEA LPMENUTEMPLATE;

typedef struct tagEVENTMSG *PEVENTMSGMSG;

typedef struct tagMINMAXINFO *LPMINMAXINFO;

typedef struct tagCOMBOBOXINFO *PCOMBOBOXINFO;

typedef struct tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

typedef NPWNDCLASSA NPWNDCLASS;

typedef struct tagMDINEXTMENU *LPMDINEXTMENU;

typedef WINDOWPLACEMENT *LPWINDOWPLACEMENT;

typedef struct tagMONITORINFOEXW *LPMONITORINFOEXW;

typedef struct tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

typedef struct tagCURSORINFO *LPCURSORINFO;

typedef struct tagGUITHREADINFO *PGUITHREADINFO;

#define SPI_GETTOGGLEKEYS 52

#define MF_SEPARATOR 2048

#define SB_LINEUP 0

#define IDTIMEOUT 32000

#define FKF_HOTKEYACTIVE 4

#define LLKHF_INJECTED 16

#define WVR_ALIGNLEFT 32

#define WS_EX_NOPARENTNOTIFY 4

#define EM_GETMARGINS 212

#define DT_PATH_ELLIPSIS 16384

#define WM_USER 1024

#define DESKTOP_JOURNALPLAYBACK 32

#define WM_VKEYTOITEM 46

#define TME_LEAVE 2

#define WINSTA_ACCESSCLIPBOARD 4

#define LBS_NOTIFY 1

#define SM_CXVSCROLL 2

#define SM_SAMEDISPLAYFORMAT 81

#define PRF_CHECKVISIBLE 1

#define SPI_SETTOGGLEKEYS 53

#define MWMO_WAITALL 1

#define WVR_ALIGNBOTTOM 64

#define WS_THICKFRAME 262144

#define DESKTOP_CREATEWINDOW 2

#define SMTO_ABORTIFHUNG 2

#define PBTF_APMRESUMEFROMFAILURE 1

#define RT_ANICURSOR 21

#define SPI_GETMENUDROPALIGNMENT 27

#define CF_METAFILEPICT 3

#define STATE_SYSTEM_INVISIBLE 32768

#define WH_MINHOOK -1

#define SM_CMONITORS 80

#define COLOR_INFOBK 24

#define WS_CLIPCHILDREN 33554432

#define RDW_INTERNALPAINT 2

#define UOI_NAME 2

#define VK_LEFT 37

#define MSGF_MAX 8

#define EDGE_SUNKEN 10

#define KLF_SETFORPROCESS 256

#define COLOR_3DLIGHT 22

#define DT_MODIFYSTRING 65536

#define HCBT_CLICKSKIPPED 6

#define MONITOR_DEFAULTTONULL 0

#define WM_MDICREATE 544

#define SOUND_SYSTEM_WARNING 6

#define WS_EX_LEFTSCROLLBAR 16384

#define INDEXID_OBJECT 0

#define HWND_DESKTOP 0

#define SM_XVIRTUALSCREEN 76

#define MKF_REPLACENUMBERS 128

#define MWMO_INPUTAVAILABLE 4

#define MNGOF_TOPGAP 1

#define SBM_SETRANGEREDRAW 230

#define SPI_GETMINIMIZEDMETRICS 43

#define QS_HOTKEY 128

#define WM_HANDHELDLAST 863

#define HSHELL_WINDOWDESTROYED 2

#define HCBT_DESTROYWND 4

#define WM_IME_KEYUP 657

#define FKF_INDICATOR 32

#define MIM_APPLYTOSUBMENUS 2147483648

#define MB_CANCELTRYCONTINUE 6

#define CDS_NORESET 268435456

#define CF_MAX 18

#define SPI_SETHOTTRACKING 4111

#define VK_SEPARATOR 108

#define BF_RIGHT 4

#define PBT_APMRESUMECRITICAL 6

#define PBT_APMPOWERSTATUSCHANGE 10

#define WM_GETTEXT 13

#define CTLCOLOR_EDIT 1

#define SPI_GETBORDER 5

#define DESKTOP_SWITCHDESKTOP 256

#define WM_COMPACTING 65

#define IDC_SIZENWSE 32642

#define MB_ICONMASK 240

#define SPI_GETCURSORSHADOW 4122

#define WM_MDIACTIVATE 546

#define MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID 16

#define VK_DELETE 46

#define LBS_SORT 2

#define ES_RIGHT 2

#define LBS_NOREDRAW 4

#define RT_STRING 6

#define MIIM_BITMAP 128

#define HELP_SETINDEX 5

#define DFCS_INACTIVE 256

#define WM_SPOOLERSTATUS 42

#define EM_FMTLINES 200

#define WM_NCLBUTTONDOWN 161

#define DLGC_STATIC 256

#define EM_SETPASSWORDCHAR 204

#define SS_RIGHTJUST 1024

#define LB_GETITEMDATA 409

#define DC_HASDEFID 21323

#define BS_AUTOCHECKBOX 3

#define SC_DEFAULT 61792

#define OBJID_HSCROLL 4294967290

#define RDW_NOERASE 32

#define STATE_SYSTEM_ALERT_LOW 67108864

#define SPI_SETMOUSETRAILS 93

#define WM_ENABLE 10

#define WM_NCMBUTTONDBLCLK 169

#define ODT_STATIC 5

#define SPI_SETSOUNDSENTRY 65

#define STN_CLICKED 0

#define BN_DISABLE 4

#define SIZEFULLSCREEN 2

#define WVR_ALIGNRIGHT 128

#define SM_MOUSEWHEELPRESENT 75

#define GMMP_USE_DISPLAY_POINTS 1

#define LLKHF_UP 128

#define DISP_CHANGE_BADPARAM -5

#define WS_EX_OVERLAPPEDWINDOW 768

#define HTCLIENT 1

#define HWND_BOTTOM 1

#define HC_ACTION 0

#define SWP_NOOWNERZORDER 512

#define EWX_LOGOFF 0

#define SPI_SETDESKWALLPAPER 20

#define TPM_CENTERALIGN 4

#define WM_NCMBUTTONDOWN 167

#define GW_HWNDPREV 3

#define CB_DIR 325

#define SPI_GETSCREENREADER 70

#define VK_RETURN 13

#define EVENT_SYSTEM_CAPTURESTART 8

#define BDR_SUNKENOUTER 2

#define DLGWINDOWEXTRA 30

#define ESB_DISABLE_RTDN 2

#define RT_FONT 8

#define BN_HILITE 2

#define VK_LMENU 164

#define WM_INITMENU 278

#define DLGC_RADIOBUTTON 64

#define WM_CREATE 1

#define EM_GETIMESTATUS 217

#define CB_SETITEMDATA 337

#define WVR_ALIGNTOP 16

#define SM_CXDOUBLECLK 36

#define WM_PALETTECHANGED 785

#define DCX_EXCLUDERGN 64

#define SPI_GETGRADIENTCAPTIONS 4104

#define WM_PRINTCLIENT 792

#define MF_HILITE 128

#define EMSIS_COMPOSITIONSTRING 1

#define RT_ACCELERATOR 9

#define CF_RIFF 11

#define IDC_UPARROW 32516

#define WM_QUERYNEWPALETTE 783

#define SM_REMOTESESSION 4096

#define SIF_DISABLENOSCROLL 8

#define BN_UNPUSHED 3

#define MOD_ALT 1

#define WHEEL_PAGESCROLL 4294967295

#define DT_BOTTOM 8

#define SC_CLOSE 61536

#define DDL_DRIVES 16384

#define EC_USEFONTINFO 65535

#define LR_DEFAULTSIZE 64

#define HTZOOM 9

#define FCONTROL 8

#define HELP_SETWINPOS 515

#define MB_ICONSTOP 16

#define STM_GETICON 369

#define SPI_GETUIEFFECTS 4158

#define DS_FIXEDSYS 8

#define LB_SETITEMHEIGHT 416

#define SPI_SETSELECTIONFADE 4117

#define WH_FOREGROUNDIDLE 11

#define WM_IME_KEYLAST 271

#define BDR_RAISEDOUTER 1

#define MOUSEEVENTF_ABSOLUTE 32768

#define AW_SLIDE 262144

#define ENUM_CURRENT_SETTINGS -1

#define LB_GETTEXT 393

#define LBS_NOINTEGRALHEIGHT 256

#define COLOR_3DHILIGHT 20

#define SPI_SETDOUBLECLICKTIME 32

#define EN_VSCROLL 1538

#define SM_CYDRAG 69

#define SM_CYDOUBLECLK 37

#define CB_RESETCONTENT 331

#define VK_NUMPAD0 96

#define LR_COPYDELETEORG 8

#define VK_NUMPAD2 98

#define VK_NUMPAD1 97

#define DT_RIGHT 2

#define COLOR_BTNSHADOW 16

#define WM_DEADCHAR 259

#define SM_CYSMCAPTION 51

#define ALERT_SYSTEM_INFORMATIONAL 1

#define WINEVENT_SKIPOWNTHREAD 1

#define MF_DEFAULT 4096

#define SW_MINIMIZE 6

#define WM_NCMOUSELEAVE 674

#define STM_GETIMAGE 371

#define SPI_SETKEYBOARDCUES 4107

#define IMAGE_CURSOR 2

#define ARW_BOTTOMRIGHT 1

#define SHOW_OPENWINDOW 1

#define HSHELL_LANGUAGE 8

#define SIF_RANGE 1

#define SPI_SETKEYBOARDSPEED 11

#define HCBT_KEYSKIPPED 7

#define WPF_SETMINPOSITION 1

#define BN_CLICKED 0

#define SIF_POS 4

#define DT_EDITCONTROL 8192

#define DI_COMPAT 4

#define SPI_SETMOUSE 4

#define EM_LINESCROLL 182

#define CBN_SELENDCANCEL 10

#define SPI_GETMENUSHOWDELAY 106

#define COLOR_DESKTOP 1

#define UOI_FLAGS 1

#define CF_DIF 5

#define PBT_APMQUERYSTANDBY 1

#define SPI_GETACTIVEWNDTRKZORDER 4108

#define WM_WINDOWPOSCHANGED 71

#define CF_DIB 8

#define ISMEX_CALLBACK 4

#define SETWALLPAPER_DEFAULT -1

#define CF_GDIOBJLAST 1023

#define DFC_CAPTION 1

#define MB_RIGHT 524288

#define VK_OEM_BACKTAB 245

#define WM_MENUCHAR 288

#define SM_CYEDGE 46

#define SC_KEYMENU 61696

#define SM_CXVIRTUALSCREEN 78

#define CTLCOLOR_BTN 3

#define DT_CALCRECT 1024

#define GA_ROOTOWNER 3

#define EWX_SHUTDOWN 1

#define MSGF_NEXTWINDOW 6

#define IDTRYAGAIN 10

#define WM_MOUSEFIRST 512

#define EM_REPLACESEL 194

#define EVENT_SYSTEM_DRAGDROPSTART 14

#define MNGOF_BOTTOMGAP 2

#define HTGROWBOX 4

#define WM_KILLFOCUS 8

#define EM_LINELENGTH 193

#define MF_BYCOMMAND 0

#define WM_GETMINMAXINFO 36

#define WA_INACTIVE 0

#define GCL_CBCLSEXTRA -20

#define SPI_GETSHOWIMEUI 110

#define FLASHW_CAPTION 1

#define CB_GETHORIZONTALEXTENT 349

#define TPM_VERNEGANIMATION 8192

#define CB_GETITEMHEIGHT 340

#define COLOR_HOTLIGHT 26

#define HCBT_ACTIVATE 5

#define SW_OTHERZOOM 2

#define CS_BYTEALIGNCLIENT 4096

#define SPI_GETWORKAREA 48

#define MSGF_MENU 2

#define VK_F6 117

#define VK_F7 118

#define VK_F4 115

#define VK_F5 116

#define VK_F2 113

#define VK_F3 114

#define WMSZ_BOTTOMLEFT 7

#define VK_F1 112

#define SSWF_NONE 0

#define VK_F8 119

#define VK_F9 120

#define SPI_SETMENUUNDERLINES 4107

#define SPI_GETMOUSETRAILS 94

#define HBMMENU_POPUP_MINIMIZE 11

#define WS_CAPTION 12582912

#define SM_CYMENUSIZE 55

#define SPI_GETMENUUNDERLINES 4106

#define HTMAXBUTTON 9

#define LR_SHARED 32768

#define DFCS_BUTTONCHECK 0

#define HELP_SETPOPUP_POS 13

#define MF_HELP 16384

#define EM_GETWORDBREAKPROC 209

#define WM_HOTKEY 786

#define PRF_NONCLIENT 2

#define WM_SHOWWINDOW 24

#define MFS_DEFAULT 4096

#define SPI_SETPOWEROFFACTIVE 86

#define HTERROR -2

#define LB_GETSEL 391

#define HCBT_SYSCOMMAND 8

#define SS_CENTER 1

#define CB_SHOWDROPDOWN 335

#define SB_LEFT 6

#define TPM_VERPOSANIMATION 4096

#define SOUND_SYSTEM_ERROR 4

#define LB_SETANCHORINDEX 412

#define AW_VER_POSITIVE 4

#define SPI_GETPOWEROFFACTIVE 84

#define DISP_CHANGE_NOTUPDATED -3

#define CB_GETLBTEXTLEN 329

#define BDR_SUNKEN 10

#define MOUSEEVENTF_XUP 256

#define WS_EX_STATICEDGE 131072

#define HWND_BROADCAST 65535

#define STATE_SYSTEM_MULTISELECTABLE 16777216

#define SPI_SETHANDHELD 78

#define DT_NOFULLWIDTHCHARBREAK 524288

#define MIM_MENUDATA 8

#define WH_GETMESSAGE 3

#define SPI_SETCURSORS 87

#define WM_POWER 72

#define BS_PUSHBUTTON 0

#define SPI_GETDEFAULTINPUTLANG 89

#define SM_CYBORDER 6

#define SPI_SETCURSORSHADOW 4123

#define WM_NOTIFY 78

#define EM_GETLINECOUNT 186

#define TPM_HORIZONTAL 0

#define WH_JOURNALPLAYBACK 1

#define SBS_HORZ 0

#define COLOR_3DHIGHLIGHT 20

#define PM_REMOVE 1

#define DEVICE_NOTIFY_WINDOW_HANDLE 0

#define EVENT_OBJECT_ACCELERATORCHANGE 32786

#define WH_KEYBOARD 2

#define SPI_SETBEEP 2

#define MNC_SELECT 3

#define GMDI_USEDISABLED 1

#define ALERT_SYSTEM_WARNING 2

#define DCX_CACHE 2

#define STN_DBLCLK 1

#define PM_NOREMOVE 0

#define DS_SHELLFONT 72

#define MB_ICONQUESTION 32

#define VK_HANGEUL 21

#define DC_TEXT 8

#define KF_UP 32768

#define SBS_BOTTOMALIGN 4

#define SS_ENDELLIPSIS 16384

#define SOUND_SYSTEM_MINIMIZE 9

#define STATE_SYSTEM_EXPANDED 512

#define SBM_GETSCROLLINFO 234

#define WS_CHILDWINDOW 1073741824

#define HWND_TOPMOST -1

#define ENUM_REGISTRY_SETTINGS -2

#define WM_SYSCOMMAND 274

#define LB_INSERTSTRING 385

#define GCL_MENUNAME -8

#define MK_MBUTTON 16

#define WM_SIZECLIPBOARD 779

#define EM_SETHANDLE 188

#define DISP_CHANGE_RESTART 1

#define SIZEICONIC 1

#define LLMHF_INJECTED 1

#define PBT_APMRESUMESUSPEND 7

#define MIIM_FTYPE 256

#define IDI_APPLICATION 32512

#define WS_ICONIC 536870912

#define HCF_CONFIRMHOTKEY 8

#define MNS_NOTIFYBYPOS 134217728

#define WSF_VISIBLE 1

#define NFR_ANSI 1

#define DT_TOP 0

#define WM_PAINTICON 38

#define HTOBJECT 19

#define SS_ETCHEDVERT 17

#define CS_IME 65536

#define WM_KEYLAST 265

#define VK_ICO_00 228

#define SB_RIGHT 7

#define ISMEX_REPLIED 8

#define SPI_SETKEYBOARDPREF 69

#define DS_ABSALIGN 1

#define SW_MAX 11

#define OBJID_NATIVEOM 4294967280

#define LB_SETITEMDATA 410

#define CS_BYTEALIGNWINDOW 8192

#define EN_MAXTEXT 1281

#define WM_MENUDRAG 291

#define KF_DLGMODE 2048

#define DFCS_MENUCHECK 1

#define DCX_WINDOW 1

#define WM_IME_SETCONTEXT 641

#define WM_MDIICONARRANGE 552

#define SM_CYVSCROLL 20

#define PWR_FAIL -1

#define BF_TOP 2

#define VK_NUMPAD4 100

#define VK_NUMPAD3 99

#define VK_NUMPAD6 102

#define VK_NUMPAD5 101

#define VK_NUMPAD8 104

#define VK_NUMPAD7 103

#define DWL_DLGPROC 4

#define VK_NUMPAD9 105

#define DT_END_ELLIPSIS 32768

#define EVENT_OBJECT_STATECHANGE 32778

#define MF_APPEND 256

#define EVENT_OBJECT_FOCUS 32773

#define IDC_APPSTARTING 32650

#define WS_MINIMIZE 536870912

#define VK_MULTIPLY 106

#define IDC_SIZENESW 32643

#define SPI_GETSERIALKEYS 62

#define EM_GETMODIFY 184

#define SSWF_CUSTOM 4

#define GR_USEROBJECTS 1

#define ES_PASSWORD 32

#define WM_DRAWCLIPBOARD 776

#define CBN_DROPDOWN 7

#define DI_IMAGE 2

#define PM_NOYIELD 2

#define WM_NEXTDLGCTL 40

#define VK_OEM_7 222

#define VK_OEM_6 221

#define VK_OEM_8 223

#define SM_CYSMSIZE 53

#define VK_OEM_1 186

#define VK_OEM_3 192

#define VK_OEM_2 191

#define VK_OEM_5 220

#define VK_OEM_4 219

#define MSGF_MESSAGEBOX 1

#define EVENT_OBJECT_SELECTIONADD 32775

#define ES_OEMCONVERT 1024

#define ISOLATIONAWARE_MANIFEST_RESOURCE_ID 2

#define VK_OEM_PA1 235

#define VK_OEM_PA2 236

#define VK_OEM_PA3 237

#define SSGF_NONE 0

#define PBT_APMRESUMEAUTOMATIC 18

#define SM_CYMAXTRACK 60

#define VK_OEM_FJ_LOYA 149

#define LB_GETANCHORINDEX 413

#define COLOR_APPWORKSPACE 12

#define SM_CYMIN 29

#define SPI_SETSERIALKEYS 63

#define DLGC_WANTTAB 2

#define CBN_SELCHANGE 1

#define SPI_GETSCREENSAVEACTIVE 16

#define SPI_GETGRIDGRANULARITY 18

#define DSS_RIGHT 32768

#define CF_TEXT 1

#define SPI_SETUIEFFECTS 4159

#define SWP_NOREPOSITION 512

#define MFT_RADIOCHECK 512

#define WM_IME_CHAR 646

#define MB_RETRYCANCEL 5

#define SW_SMOOTHSCROLL 16

#define WS_EX_RTLREADING 8192

#define HC_SYSMODALOFF 5

#define WM_NOTIFYFORMAT 85

#define SB_BOTH 3

#define EVENT_SYSTEM_SCROLLINGEND 19

#define VK_RWIN 92

#define UOI_USER_SID 4

#define STATE_SYSTEM_MOVEABLE 262144

#define CF_PRIVATELAST 767

#define HCBT_MINMAX 1

#define MDITILE_VERTICAL 0

#define CF_HDROP 15

#define QS_TIMER 16

#define MB_ICONASTERISK 64

#define SMTO_NOTIMEOUTIFNOTHUNG 8

#define VK_NUMLOCK 144

#define BS_DEFPUSHBUTTON 1

#define HSHELL_WINDOWACTIVATED 4

#define LB_SETCOUNT 423

#define VK_RBUTTON 2

#define WM_RENDERFORMAT 773

#define SM_SHOWSOUNDS 70

#define LR_COPYFROMRESOURCE 16384

#define CBS_OWNERDRAWVARIABLE 32

#define WM_RBUTTONUP 517

#define MB_ICONEXCLAMATION 48

#define IDH_MISSING_CONTEXT 28441

#define EM_SETREADONLY 207

#define SPI_SETICONS 88

#define HSHELL_TASKMAN 7

#define MOD_SHIFT 4

#define MF_MENUBREAK 64

#define DST_ICON 3

#define STATE_SYSTEM_ALERT_MEDIUM 134217728

#define VK_TAB 9

#define DOF_EXECUTABLE 32769

#define QS_MOUSEBUTTON 4

#define SPI_SETNONCLIENTMETRICS 42

#define ISMEX_SEND 1

#define GCL_HICON -14

#define WPF_RESTORETOMAXIMIZED 2

#define DCX_LOCKWINDOWUPDATE 1024

#define HELP_FORCEFILE 9

#define LR_LOADTRANSPARENT 32

#define BF_SOFT 4096

#define MF_BYPOSITION 1024

#define VK_KANA 21

#define DI_MASK 1

#define BS_BITMAP 128

#define SW_OTHERUNZOOM 4

#define DDL_HIDDEN 2

#define LB_SETLOCALE 421

#define RT_RCDATA 10

#define SB_LINEDOWN 1

#define WM_AFXLAST 895

#define SM_CYFRAME 33

#define MK_RBUTTON 2

#define FKF_HOTKEYSOUND 16

#define VK_EREOF 249

#define SPI_GETICONTITLELOGFONT 31

#define COLOR_INACTIVECAPTION 3

#define STATE_SYSTEM_SELECTED 2

#define DLGC_WANTMESSAGE 4

#define CB_GETCOUNT 326

#define VK_RIGHT 39

#define EM_SETRECT 179

#define COLOR_MENUHILIGHT 29

#define QS_ALLINPUT 1279

#define SPI_SETWHEELSCROLLLINES 105

#define ALERT_SYSTEM_ERROR 3

#define HCF_INDICATOR 32

#define PWR_SUSPENDRESUME 2

#define VK_FINAL 24

#define SS_SUNKEN 4096

#define CB_SETCURSEL 334

#define IDIGNORE 5

#define SC_HOTKEY 61776

#define TKF_AVAILABLE 2

#define WM_POWERBROADCAST 536

#define HBMMENU_MBAR_CLOSE_D 6

#define CB_GETDROPPEDSTATE 343

#define CS_HREDRAW 2

#define SPI_ICONVERTICALSPACING 24

#define WS_EX_LEFT 0

#define MK_SHIFT 4

#define HCBT_CREATEWND 3

#define BF_DIAGONAL_ENDBOTTOMLEFT 25

#define ARW_STARTTOP 2

#define MB_ABORTRETRYIGNORE 2

#define DLGC_WANTARROWS 1

#define VK_OEM_NEC_EQUAL 146

#define GWL_USERDATA -21

#define WM_MENURBUTTONUP 290

#define OBJID_VSCROLL 4294967291

#define HELP_INDEX 3

#define IDRETRY 4

#define IDI_QUESTION 32514

#define SKF_INDICATOR 32

#define DLGC_WANTCHARS 128

#define SPI_SETGRIDGRANULARITY 19

#define VK_MBUTTON 4

#define SM_CXMAXIMIZED 61

#define DM_SETDEFID 1025

#define SPI_SETBORDER 6

#define ODS_DEFAULT 32

#define WM_RBUTTONDBLCLK 518

#define ARW_RIGHT 0

#define DT_NOPREFIX 2048

#define SB_BOTTOM 7

#define QS_ALLEVENTS 1215

#define ES_UPPERCASE 8

#define SS_ICON 3

#define CF_OWNERDISPLAY 128

#define VK_OEM_RESET 233

#define SPI_GETSOUNDSENTRY 64

#define LBN_DBLCLK 2

#define WM_MBUTTONDOWN 519

#define CB_INITSTORAGE 353

#define LB_SETHORIZONTALEXTENT 404

#define GCL_CBWNDEXTRA -18

#define WM_CTLCOLORSCROLLBAR 311

#define WM_ICONERASEBKGND 39

#define DLGC_WANTALLKEYS 4

#define ODA_SELECT 2

#define WB_ISDELIMITER 2

#define LR_CREATEDIBSECTION 8192

#define ODS_CHECKED 8

#define OBJID_CARET 4294967288

#define PRF_OWNED 32

#define DC_GRADIENT 32

#define SM_YVIRTUALSCREEN 77

#define AW_VER_NEGATIVE 8

#define ISMEX_NOSEND 0

#define ODS_DISABLED 4

#define BS_CHECKBOX 2

#define MB_OKCANCEL 1

#define HELP_MULTIKEY 513

#define WS_DLGFRAME 4194304

#define HWND_NOTOPMOST -2

#define EVENT_SYSTEM_SWITCHSTART 20

#define WMSZ_RIGHT 2

#define WB_LEFT 0

#define HSHELL_WINDOWCREATED 1

#define LBS_NOSEL 16384

#define CS_CLASSDC 64

#define MB_OK 0

#define SM_CYFULLSCREEN 17

#define WM_GETICON 127

#define DT_WORD_ELLIPSIS 262144

#define SPI_SETTOOLTIPFADE 4121

#define DFCS_BUTTONRADIOMASK 2

#define DOF_MULTIPLE 32772

#define SERKF_AVAILABLE 2

#define VK_LBUTTON 1

#define SPI_SETFILTERKEYS 51

#define LBS_MULTIPLESEL 8

#define MDIS_ALLCHILDSTYLES 1

#define KEYEVENTF_EXTENDEDKEY 1

#define TPM_TOPALIGN 0

#define SPI_GETFILTERKEYS 50

#define HELP_CONTEXT 1

#define SPI_SETACCESSTIMEOUT 61

#define WINSTA_WRITEATTRIBUTES 16

#define TKF_CONFIRMHOTKEY 8

#define CHILDID_SELF 0

#define DLGC_DEFPUSHBUTTON 16

#define RT_FONTDIR 7

#define CF_DSPENHMETAFILE 142

#define EVENT_SYSTEM_SWITCHEND 21

#define VK_CRSEL 247

#define GWL_HINSTANCE -6

#define LR_LOADFROMFILE 16

#define BS_USERBUTTON 8

#define WS_EX_LAYOUTRTL 4194304

#define SPI_SETMOUSEKEYS 55

#define SPI_GETSTICKYKEYS 58

#define WM_IME_ENDCOMPOSITION 270

#define WH_KEYBOARD_LL 13

#define GCL_HMODULE -16

#define SM_CXMENUSIZE 54

#define WM_CTLCOLORDLG 310

#define WS_EX_DLGMODALFRAME 1

#define STATE_SYSTEM_ALERT_HIGH 268435456

#define DISP_CHANGE_FAILED -1

#define EM_SETWORDBREAKPROC 208

#define EM_EMPTYUNDOBUFFER 205

#define ES_LOWERCASE 16

#define SPI_GETPOWEROFFTIMEOUT 80

#define LB_GETSELITEMS 401

#define BS_BOTTOM 2048

#define SW_SCROLLCHILDREN 1

#define GMDI_GOINTOPOPUPS 2

#define ES_CENTER 1

#define SBS_SIZEBOXTOPLEFTALIGN 2

#define SS_WORDELLIPSIS 49152

#define MIM_BACKGROUND 2

#define WM_TIMECHANGE 30

#define IDC_IBEAM 32513

#define GWL_WNDPROC -4

#define WM_MOUSEMOVE 512

#define INPUTLANGCHANGE_FORWARD 2

#define DFCS_SCROLLCOMBOBOX 5

#define SKF_TWOKEYSOFF 256

#define RT_MANIFEST 24

#define WM_CTLCOLOREDIT 307

#define COLOR_WINDOW 5

#define MB_SETFOREGROUND 65536

#define SPI_SETLISTBOXSMOOTHSCROLLING 4103

#define DCX_VALIDATE 2097152

#define DDL_READWRITE 0

#define VK_SCROLL 145

#define DOF_DIRECTORY 32771

#define EM_SETLIMITTEXT 197

#define MA_ACTIVATEANDEAT 2

#define WM_NCMOUSEHOVER 672

#define SM_CXMENUCHECK 71

#define WM_NCHITTEST 132

#define SM_CXMIN 28

#define IDI_EXCLAMATION 32515

#define CBN_ERRSPACE -1

#define OBJID_SIZEGRIP 4294967289

#define WM_KEYFIRST 256

#define WM_MDISETMENU 560

#define FLASHW_STOP 0

#define MKF_AVAILABLE 2

#define BF_TOPRIGHT 6

#define EVENT_SYSTEM_MOVESIZESTART 10

#define SPI_ICONHORIZONTALSPACING 13

#define DFCS_SCROLLSIZEGRIP 8

#define CB_ADDSTRING 323

#define LB_GETTOPINDEX 398

#define SIZENORMAL 0

#define MFT_SEPARATOR 2048

#define SWP_NOSENDCHANGING 1024

#define SC_ZOOM 61488

#define WM_MOUSEWHEEL 522

#define STATE_SYSTEM_MARQUEED 8192

#define MB_ICONINFORMATION 64

#define OBJID_WINDOW 0

#define SPI_GETMOUSE 3

#define IMAGE_ENHMETAFILE 3

#define LB_CTLCODE 0

#define EN_CHANGE 768

#define SS_WHITERECT 6

#define WM_COMMAND 273

#define DFCS_SCROLLLEFT 2

#define WS_EX_WINDOWEDGE 256

#define SPI_SETDOUBLECLKWIDTH 29

#define WM_SYSKEYDOWN 260

#define WM_GETOBJECT 61

#define SM_CXFRAME 32

#define MKF_INDICATOR 32

#define COLOR_BTNTEXT 18

#define CB_SETTOPINDEX 348

#define IDC_ARROW 32512

#define ESB_DISABLE_RIGHT 2

#define SERKF_SERIALKEYSON 1

#define SM_CXSMSIZE 52

#define SC_MONITORPOWER 61808

#define MOUSEEVENTF_MOVE 1

#define SW_SHOWMINNOACTIVE 7

#define EWX_FORCE 4

#define IDC_CROSS 32515

#define MKF_CONFIRMHOTKEY 8

#define CTLCOLOR_STATIC 6

#define MFS_CHECKED 8

#define MOUSEEVENTF_LEFTDOWN 2

#define HTTOPRIGHT 14

#define SPI_GETMENUFADE 4114

#define SPI_GETACTIVEWINDOWTRACKING 4096

#define CB_ERR -1

#define QS_MOUSEMOVE 2

#define WVR_HREDRAW 256

#define RT_VERSION 16

#define GCLP_WNDPROC -24

#define STATE_SYSTEM_FOCUSED 4

#define LB_GETCOUNT 395

#define HCF_HOTKEYSOUND 16

#define WINSTA_EXITWINDOWS 64

#define TME_QUERY 1073741824

#define DESKTOP_JOURNALRECORD 16

#define BF_DIAGONAL_ENDTOPRIGHT 22

#define SPI_SETACTIVEWNDTRKTIMEOUT 8195

#define SS_REALSIZEIMAGE 2048

#define SPI_SETFASTTASKSWITCH 36

#define VK_LSHIFT 160

#define SWP_HIDEWINDOW 128

#define EM_SETRECTNP 180

#define EVENT_SYSTEM_FOREGROUND 3

#define CBN_EDITUPDATE 6

#define EM_GETTHUMB 190

#define VK_OEM_WSCTRL 238

#define BSM_ALLDESKTOPS 16

#define COLOR_GRADIENTACTIVECAPTION 27

#define WM_DRAWITEM 43

#define SM_CYCURSOR 14

#define VK_OEM_MINUS 189

#define DESKTOP_READOBJECTS 1

#define RT_MENU 4

#define WS_POPUP 2147483648

#define DO_PRINTFILE 1414419024

#define SM_CYMENU 15

#define QS_SENDMESSAGE 64

#define HTNOWHERE 0

#define CF_GDIOBJFIRST 768

#define OBJID_ALERT 4294967286

#define IDI_ERROR 32513

#define MFT_MENUBARBREAK 32

#define VK_NEXT 34

#define CBS_DISABLENOSCROLL 2048

#define TPM_VCENTERALIGN 16

#define EVENT_SYSTEM_MINIMIZESTART 22

#define SPI_SETSCREENREADER 71

#define LB_GETITEMRECT 408

#define GCL_HBRBACKGROUND -10

#define TPM_VERTICAL 64

#define MF_CHECKED 8

#define CB_GETLBTEXT 328

#define TPM_LEFTALIGN 0

#define LB_SELITEMRANGEEX 387

#define MA_NOACTIVATE 3

#define MF_POPUP 16

#define IDC_ICON 32641

#define CDS_SET_PRIMARY 16

#define SM_CXDRAG 68

#define SS_RIGHT 2

#define SBS_TOPALIGN 2

#define SM_RESERVED2 25

#define CBN_KILLFOCUS 4

#define SM_RESERVED1 24

#define SPI_GETKEYBOARDDELAY 22

#define SM_RESERVED4 27

#define SM_RESERVED3 26

#define DT_EXPANDTABS 64

#define VK_PLAY 250

#define HELP_CONTENTS 3

#define WM_SYSCOLORCHANGE 21

#define WM_CTLCOLORLISTBOX 308

#define HBMMENU_MBAR_MINIMIZE 3

#define SPI_GETKEYBOARDCUES 4106

#define IDH_GENERIC_HELP_BUTTON 28442

#define SKF_AVAILABLE 2

#define SWP_NOCOPYBITS 256

#define MIIM_ID 2

#define VK_PAUSE 19

#define MB_YESNOCANCEL 3

#define CBS_NOINTEGRALHEIGHT 1024

#define VK_OEM_CUSEL 239

#define DCX_CLIPCHILDREN 8

#define RT_MESSAGETABLE 11

#define VK_APPS 93

#define ISMEX_NOTIFY 2

#define WM_SETICON 128

#define OBJID_SOUND 4294967285

#define COLOR_GRADIENTINACTIVECAPTION 28

#define EM_SCROLLCARET 183

#define HTSYSMENU 3

#define SIF_ALL 23

#define SM_CXEDGE 45

#define DFC_BUTTON 4

#define DSS_NORMAL 0

#define SS_LEFT 0

#define COLOR_BTNHIGHLIGHT 20

#define CF_LOCALE 16

#define SPI_GETCOMBOBOXANIMATION 4100

#define WM_NULL 0

#define MINIMUM_RESERVED_MANIFEST_RESOURCE_ID 1

#define WM_PAINT 15

#define LBS_MULTICOLUMN 512

#define SPI_GETKEYBOARDSPEED 10

#define AW_BLEND 524288

#define SPI_SETCOMBOBOXANIMATION 4101

#define DOF_PROGMAN 1

#define VK_SNAPSHOT 44

#define SS_WHITEFRAME 9

#define GCLP_HICON -14

#define SC_SCREENSAVE 61760

#define SM_NETWORK 63

#define LB_DELETESTRING 386

#define VK_END 35

#define IDCANCEL 2

#define VK_LWIN 91

#define CBS_SORT 256

#define EM_GETPASSWORDCHAR 210

#define DT_NOCLIP 256

#define EM_CANUNDO 198

#define VK_ZOOM 251

#define WM_PAINTCLIPBOARD 777

#define RDW_ERASE 4

#define WS_EX_PALETTEWINDOW 392

#define ES_NUMBER 8192

#define DT_LEFT 0

#define CF_OEMTEXT 7

#define HWND_MESSAGE -3

#define DI_DEFAULTSIZE 8

#define VK_F21 132

#define VK_F20 131

#define DC_SMALLCAP 2

#define VK_SUBTRACT 109

#define SM_CXDLGFRAME 7

#define WM_SIZE 5

#define GCLP_HBRBACKGROUND -10

#define SPI_GETMOUSEKEYS 54

#define DFC_SCROLL 3

#define VK_F19 130

#define VK_F18 129

#define VK_F17 128

#define VK_F16 127

#define VK_F15 126

#define VK_F14 125

#define VK_F13 124

#define VK_F12 123

#define VK_F11 122

#define SBM_GETRANGE 227

#define VK_F10 121

#define EVENT_OBJECT_VALUECHANGE 32782

#define SWP_DRAWFRAME 32

#define ARW_TOPLEFT 2

#define MFT_BITMAP 4

#define WM_EXITSIZEMOVE 562

#define STATE_SYSTEM_VALID 1073741823

#define WM_KEYUP 257

#define SB_LINERIGHT 1

#define DLGC_HASSETSEL 8

#define BSM_INSTALLABLEDRIVERS 4

#define GA_ROOT 2

#define SPI_GETSHOWSOUNDS 56

#define IDCLOSE 8

#define MNC_EXECUTE 2

#define SPIF_SENDCHANGE 2

#define SSF_SOUNDSENTRYON 1

#define WM_MOUSEACTIVATE 33

#define EVENT_SYSTEM_MENUPOPUPEND 7

#define IDI_HAND 32513

#define DDL_DIRECTORY 16

#define FLASHW_TIMER 4

#define SOUND_SYSTEM_RESTOREDOWN 11

#define WM_CHARTOITEM 47

#define VK_F24 135

#define VK_F23 134

#define SPI_SETSHOWSOUNDS 57

#define VK_F22 133

#define ES_MULTILINE 4

#define MF_SYSMENU 8192

#define WM_CTLCOLORSTATIC 312

#define WH_CALLWNDPROC 4

#define WM_ENDSESSION 22

#define DEVICE_NOTIFY_SERVICE_HANDLE 1

#define FKF_CLICKON 64

#define HELP_KEY 257

#define HTHSCROLL 6

#define EIMES_CANCELCOMPSTRINFOCUS 2

#define VK_RSHIFT 161

#define DFCS_SCROLLRIGHT 3

#define EM_LINEINDEX 187

#define SS_BLACKFRAME 7

#define SLE_ERROR 1

#define DFCS_MENUBULLET 2

#define WH_MOUSE_LL 14

#define HTVSCROLL 7

#define STATE_SYSTEM_UNAVAILABLE 1

#define SBS_SIZEBOXBOTTOMRIGHTALIGN 4

#define RT_PLUGPLAY 19

#define EM_GETSEL 176

#define WM_APP 32768

#define PWR_SUSPENDREQUEST 1

#define EN_UPDATE 1024

#define CF_DSPTEXT 129

#define VK_BACK 8

#define GUI_INMENUMODE 4

#define SPI_SETSCREENSAVEACTIVE 17

#define CDS_VIDEOPARAMETERS 32

#define EVENT_OBJECT_DESCRIPTIONCHANGE 32781

#define EVENT_OBJECT_SELECTIONWITHIN 32777

#define CF_DIBV5 17

#define LR_MONOCHROME 1

#define MIIM_SUBMENU 4

#define WM_RENDERALLFORMATS 774

#define MIIM_STATE 1

#define MND_CONTINUE 0

#define EIMES_COMPLETECOMPSTRKILLFOCUS 4

#define EVENT_SYSTEM_MENUPOPUPSTART 6

#define IDI_INFORMATION 32516

#define SBS_LEFTALIGN 2

#define GA_PARENT 1

#define EM_LIMITTEXT 197

#define CB_MSGMAX 357

#define GCL_STYLE -26

#define SM_CYCAPTION 4

#define WH_HARDWARE 8

#define BF_BOTTOMRIGHT 12

#define DC_ACTIVE 1

#define SIZE_RESTORED 0

#define EWX_POWEROFF 8

#define MF_MOUSESELECT 32768

#define EN_ERRSPACE 1280

#define WM_ACTIVATE 6

#define WM_USERCHANGED 84

#define CB_GETTOPINDEX 347

#define WM_MENUCOMMAND 294

#define EVENT_SYSTEM_DIALOGEND 17

#define LB_SELITEMRANGE 411

#define BSF_FORCEIFHUNG 32

#define VK_DIVIDE 111

#define WM_PRINT 791

#define WM_MDICASCADE 551

#define WM_SETHOTKEY 50

#define HTSIZE 4

#define HTLEFT 10

#define SW_HIDE 0

#define COLOR_MENU 4

#define WS_HSCROLL 1048576

#define IDHOT_SNAPDESKTOP -2

#define LB_OKAY 0

#define VK_DOWN 40

#define BN_KILLFOCUS 7

#define EM_GETLIMITTEXT 213

#define SM_MOUSEPRESENT 19

#define KF_ALTDOWN 8192

#define SPI_SETSCREENSAVERRUNNING 97

#define ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID 3

#define SS_ETCHEDHORZ 16

#define SM_CXSMICON 49

#define WM_SETCURSOR 32

#define EDGE_ETCHED 6

#define SBS_VERT 1

#define LB_SETCOLUMNWIDTH 405

#define LB_RESETCONTENT 388

#define SKF_AUDIBLEFEEDBACK 64

#define SWP_ASYNCWINDOWPOS 16384

#define FALT 16

#define SS_LEFTNOWORDWRAP 12

#define SSF_INDICATOR 4

#define CB_GETDROPPEDWIDTH 351

#define SC_TASKLIST 61744

#define MIM_STYLE 16

#define WM_NCMOUSEMOVE 160

#define WM_CLEAR 771

#define MA_NOACTIVATEANDEAT 4

#define DDL_POSTMSGS 8192

#define STATE_SYSTEM_OFFSCREEN 65536

#define SPI_SETICONTITLELOGFONT 34

#define DDL_SYSTEM 4

#define WM_WINDOWPOSCHANGING 70

#define WM_SETTINGCHANGE 26

#define COLOR_WINDOWFRAME 6

#define EVENT_OBJECT_DEFACTIONCHANGE 32785

#define BS_RADIOBUTTON 4

#define LB_ADDFILE 406

#define CCHILDREN_TITLEBAR 5

#define HTBOTTOMRIGHT 17

#define LBN_SETFOCUS 4

#define MIIM_TYPE 16

#define SPI_SCREENSAVERRUNNING 97

#define HCBT_QS 2

#define WM_DELETEITEM 45

#define DFCS_CHECKED 1024

#define MDITILE_HORIZONTAL 1

#define WM_QUERYENDSESSION 17

#define STATE_SYSTEM_PROTECTED 536870912

#define SPI_SETLOWPOWERTIMEOUT 81

#define DCX_CLIPSIBLINGS 16

#define WM_QUIT 18

#define HELP_TCARD 32768

#define DESKTOP_CREATEMENU 4

#define HELP_PARTIALKEY 261

#define WINSTA_READSCREEN 512

#define GCL_HCURSOR -12

#define SM_CYMINSPACING 48

#define SS_BLACKRECT 4

#define CB_FINDSTRINGEXACT 344

#define EM_SETIMESTATUS 216

#define DDL_EXCLUSIVE 32768

#define LB_GETLOCALE 422

#define DOF_SHELLDATA 2

#define SPI_GETSNAPTODEFBUTTON 95

#define LBS_WANTKEYBOARDINPUT 1024

#define LB_SETTABSTOPS 402

#define CBS_LOWERCASE 16384

#define WM_CTLCOLORMSGBOX 306

#define WS_CHILD 1073741824

#define MOD_CONTROL 2

#define SPI_GETTOOLTIPANIMATION 4118

#define BM_GETSTATE 242

#define SC_MOUSEMENU 61584

#define SS_ELLIPSISMASK 49152

#define RT_ANIICON 22

#define STATE_SYSTEM_BUSY 2048

#define IDC_SIZENS 32645

#define SPI_SETWORKAREA 47

#define HSHELL_REDRAW 6

#define GUI_INMOVESIZE 2

#define BS_LEFTTEXT 32

#define WM_QUEUESYNC 35

#define VK_OEM_AX 225

#define LBN_KILLFOCUS 5

#define WS_BORDER 8388608

#define EM_LINEFROMCHAR 201

#define SPI_SETDEFAULTINPUTLANG 90

#define SM_CYVIRTUALSCREEN 79

#define IDC_HAND 32649

#define DS_MODALFRAME 128

#define COLOR_HIGHLIGHTTEXT 14

#define LB_INITSTORAGE 424

#define EVENT_OBJECT_HELPCHANGE 32784

#define CB_GETDROPPEDCONTROLRECT 338

#define BN_PAINT 1

#define HCBT_MOVESIZE 0

#define MFT_OWNERDRAW 256

#define DC_ICON 4

#define WS_SYSMENU 524288

#define COLOR_SCROLLBAR 0

#define EVENT_SYSTEM_MOVESIZEEND 11

#define SM_DBCSENABLED 42

#define EWX_REBOOT 2

#define QS_POSTMESSAGE 8

#define AW_HIDE 65536

#define SPI_SETDESKPATTERN 21

#define GCLP_MENUNAME -8

#define HBMMENU_MBAR_CLOSE 5

#define KLF_REPLACELANG 16

#define VK_OEM_AUTO 243

#define SPI_GETICONMETRICS 45

#define HWND_TOP 0

#define MF_END 128

#define HELP_TCARD_OTHER_CALLER 17

#define SPI_SETFONTSMOOTHING 75

#define EVENT_OBJECT_LOCATIONCHANGE 32779

#define IDC_SIZE 32640

#define DFCS_CAPTIONHELP 4

#define BS_AUTO3STATE 6

#define WS_EX_NOINHERITLAYOUT 1048576

#define WMSZ_TOP 3

#define CS_OWNDC 32

#define STM_MSGMAX 372

#define SPI_GETNONCLIENTMETRICS 41

#define DFCS_CAPTIONCLOSE 0

#define SPI_GETACCESSTIMEOUT 60

#define WC_DIALOG 32770

#define SS_ENHMETAFILE 15

#define ALERT_SYSTEM_QUERY 4

#define VK_CONTROL 17

#define SM_CXFULLSCREEN 16

#define DLGC_UNDEFPUSHBUTTON 32

#define DCX_NORESETATTRS 4

#define CB_GETCURSEL 327

#define WM_UNINITMENUPOPUP 293

#define MIIM_DATA 32

#define MIM_HELPID 4

#define IDC_SIZEWE 32644

#define SW_SHOW 5

#define DT_WORDBREAK 16

#define MF_MENUBARBREAK 32

#define EM_SETSEL 177

#define WS_GROUP 131072

#define SPI_GETANIMATION 72

#define DFCS_TRANSPARENT 2048

#define CB_SETLOCALE 345

#define EM_POSFROMCHAR 214

#define SC_MAXIMIZE 61488

#define KF_REPEAT 16384

#define WM_MOVE 3

#define BM_SETIMAGE 247

#define WH_MOUSE 7

#define MIIM_STRING 64

#define WM_MDIDESTROY 545

#define SW_SHOWMINIMIZED 2

#define WS_EX_TOOLWINDOW 128

#define BM_GETCHECK 240

#define MOUSEEVENTF_WHEEL 2048

#define DFCS_BUTTONRADIO 4

#define LB_SETTOPINDEX 407

#define STATE_SYSTEM_DEFAULT 256

#define BM_CLICK 245

#define BSM_ALLCOMPONENTS 0

#define GUI_POPUPMENUMODE 16

#define WM_COMMNOTIFY 68

#define TPM_RIGHTBUTTON 2

#define VK_HANJA 25

#define EVENT_SYSTEM_CONTEXTHELPSTART 12

#define GW_HWNDLAST 1

#define WM_IME_KEYDOWN 656

#define DM_REPOSITION 1026

#define MOD_WIN 8

#define BS_NOTIFY 16384

#define BSF_NOTIMEOUTIFNOTHUNG 64

#define VK_SLEEP 95

#define SKF_HOTKEYACTIVE 4

#define SIF_TRACKPOS 16

#define ARW_STARTRIGHT 1

#define DS_CONTEXTHELP 8192

#define WS_EX_ACCEPTFILES 16

#define SBM_SETRANGE 226

#define WM_ASKCBFORMATNAME 780

#define LR_DEFAULTCOLOR 0

#define SPI_SETFOREGROUNDFLASHCOUNT 8197

#define TPM_LEFTBUTTON 0

#define CBN_EDITCHANGE 5

#define TKF_INDICATOR 32

#define LB_DIR 397

#define GWLP_WNDPROC -4

#define SW_NORMAL 1

#define MB_RTLREADING 1048576

#define VK_HELP 47

#define MB_DEFBUTTON1 0

#define RT_CURSOR 1

#define MB_DEFBUTTON2 256

#define MB_DEFBUTTON3 512

#define MB_DEFBUTTON4 768

#define VK_EXSEL 248

#define CB_DELETESTRING 324

#define HTMENU 5

#define MOUSEEVENTF_MIDDLEUP 64

#define STATE_SYSTEM_SELFVOICING 524288

#define SW_MAXIMIZE 3

#define RT_BITMAP 2

#define LBS_DISABLENOSCROLL 4096

#define HBMMENU_MBAR_RESTORE 2

#define PBT_APMQUERYSTANDBYFAILED 3

#define ESB_DISABLE_UP 1

#define BS_PUSHLIKE 4096

#define RDW_NOINTERNALPAINT 16

#define EM_CHARFROMPOS 215

#define WM_MOUSELAST 526

#define SM_CYVTHUMB 9

#define STATE_SYSTEM_MIXED 32

#define SBM_SETPOS 224

#define SPI_GETFONTSMOOTHING 74

#define VK_PROCESSKEY 229

#define SC_VSCROLL 61552

#define CF_SYLK 4

#define MSGF_DIALOGBOX 0

#define WH_SHELL 10

#define EVENT_OBJECT_DESTROY 32769

#define WH_MSGFILTER -1

#define CTLCOLOR_LISTBOX 2

#define SM_SWAPBUTTON 23

#define CBS_UPPERCASE 8192

#define BST_CHECKED 1

#define GWL_STYLE -16

#define DFCS_BUTTON3STATE 8

#define HBMMENU_POPUP_MAXIMIZE 10

#define WVR_VREDRAW 512

#define SW_INVALIDATE 2

#define FKF_AVAILABLE 2

#define LB_FINDSTRINGEXACT 418

#define WM_RBUTTONDOWN 516

#define SOUND_SYSTEM_MAXIMIZE 8

#define DS_SETFOREGROUND 512

#define SPI_GETDRAGFULLWINDOWS 38

#define SPI_SETPENWINDOWS 49

#define MB_USERICON 128

#define EM_GETRECT 178

#define STATE_SYSTEM_COLLAPSED 1024

#define DFCS_ADJUSTRECT 8192

#define SPI_SETMENUDROPALIGNMENT 28

#define GWL_HWNDPARENT -8

#define SW_PARENTOPENING 3

#define WM_IME_CONTROL 643

#define WINSTA_READATTRIBUTES 2

#define SB_PAGEUP 2

#define CBN_SETFOCUS 3

#define DESKTOP_WRITEOBJECTS 128

#define SOUND_SYSTEM_BEEP 3

#define WM_PASTE 770

#define LBS_EXTENDEDSEL 2048

#define WM_ENTERMENULOOP 529

#define CBN_SELENDOK 9

#define TPM_BOTTOMALIGN 32

#define CB_SETDROPPEDWIDTH 352

#define CDS_TEST 2

#define RT_ICON 3

#define IDOK 1

#define MFS_UNCHECKED 0

#define IDNO 7

#define COLOR_WINDOWTEXT 8

#define SC_MOVE 61456

#define WMSZ_TOPLEFT 4

#define DFCS_SCROLLSIZEGRIPRIGHT 16

#define SOUND_SYSTEM_INFORMATION 7

#define WM_SYSCHAR 262

#define MNGO_NOINTERFACE 0

#define CWP_ALL 0

#define CB_INSERTSTRING 330

#define ATF_ONOFFFEEDBACK 2

#define MIM_MAXHEIGHT 1

#define SPI_GETHIGHCONTRAST 66

#define HC_NOREM 3

#define WM_SETFOCUS 7

#define ATF_TIMEOUTON 1

#define SM_CYICON 12

#define SWP_NOACTIVATE 16

#define MONITORINFOF_PRIMARY 1

#define LB_ITEMFROMPOINT 425

#define SM_CXICONSPACING 38

#define MIIM_CHECKMARKS 8

#define IDHOT_SNAPWINDOW -1

#define ARW_UP 4

#define LB_GETSELCOUNT 400

#define LB_SETCARETINDEX 414

#define HELP_CONTEXTPOPUP 8

#define FVIRTKEY 1

#define SPI_SETMOUSEBUTTONSWAP 33

#define STN_ENABLE 2

#define DFCS_SCROLLDOWN 1

#define SSTF_NONE 0

#define GCLP_HICONSM -34

#define VK_LCONTROL 162

#define BF_FLAT 16384

#define CBS_OWNERDRAWFIXED 16

#define PBT_APMQUERYSUSPEND 0

#define SPIF_SENDWININICHANGE 2

#define WM_INITMENUPOPUP 279

#define SPI_GETMENUANIMATION 4098

#define SPI_SETMINIMIZEDMETRICS 44

#define DFCS_SCROLLUP 0

#define WM_HSCROLLCLIPBOARD 782

#define FNOINVERT 2

#define WM_CTLCOLORBTN 309

#define CB_SETHORIZONTALEXTENT 350

#define SSTF_CHARS 1

#define RT_DLGINCLUDE 17

#define MB_TASKMODAL 8192

#define WS_EX_APPWINDOW 262144

#define WS_VSCROLL 2097152

#define TME_CANCEL 2147483648

#define SPI_GETSELECTIONFADE 4116

#define MF_OWNERDRAW 256

#define SOUND_SYSTEM_APPEND 14

#define DFCS_BUTTONRADIOIMAGE 1

#define SC_NEXTWINDOW 61504

#define VK_RMENU 165

#define EVENT_SYSTEM_SOUND 1

#define CWP_SKIPTRANSPARENT 4

#define WM_INITDIALOG 272

#define EVENT_OBJECT_REORDER 32772

#define VK_SHIFT 16

#define BS_VCENTER 3072

#define HTSIZEFIRST 10

#define WS_MAXIMIZEBOX 65536

#define ESB_ENABLE_BOTH 0

#define SHOW_OPENNOACTIVATE 4

#define DT_RTLREADING 131072

#define BF_LEFT 1

#define PBT_APMSUSPEND 4

#define SPIF_UPDATEINIFILE 1

#define SS_CENTERIMAGE 512

#define WM_COMPAREITEM 57

#define SB_THUMBPOSITION 4

#define FSHIFT 4

#define MFS_ENABLED 0

#define SOUND_SYSTEM_MENUCOMMAND 15

#define LB_SETCURSEL 390

#define WM_NCRBUTTONUP 165

#define SC_ICON 61472

#define WM_SETTEXT 12

#define DS_CENTER 2048

#define SM_CYICONSPACING 39

#define DSS_UNION 16

#define BS_RIGHT 512

#define MFS_UNHILITE 0

#define WM_STYLECHANGING 124

#define EVENT_MAX 2147483647

#define DWL_MSGRESULT 0

#define EVENT_OBJECT_SELECTIONREMOVE 32776

#define TKF_TOGGLEKEYSON 1

#define WB_RIGHT 1

#define SM_CYDLGFRAME 8

#define EVENT_SYSTEM_MENUSTART 4

#define OBJID_TITLEBAR 4294967294

#define DFC_POPUPMENU 5

#define SPI_SETDOUBLECLKHEIGHT 30

#define DO_DROPFILE 1162627398

#define CBS_SIMPLE 1

#define CB_GETLOCALE 346

#define HTRIGHT 11

#define EVENT_SYSTEM_ALERT 2

#define SM_CXCURSOR 13

#define TPM_RECURSE 1

#define COLOR_INACTIVECAPTIONTEXT 19

#define IMAGE_ICON 1

#define IDCONTINUE 11

#define VK_CAPITAL 20

#define MNC_CLOSE 1

#define SPI_GETWINDOWSEXTENSION 92

#define WS_EX_TRANSPARENT 32

#define ESB_DISABLE_DOWN 2

#define CS_SAVEBITS 2048

#define FLASHW_ALL 3

#define DWLP_MSGRESULT 0

#define MND_ENDMENU 1

#define WM_MDIGETACTIVE 553

#define VK_OEM_102 226

#define SLE_MINORERROR 2

#define MA_ACTIVATE 1

#define DST_PREFIXTEXT 2

#define DFCS_BUTTONPUSH 16

#define DST_COMPLEX 0

#define DDL_READONLY 1

#define BSM_VXDS 1

#define CBS_AUTOHSCROLL 64

#define LBS_HASSTRINGS 64

#define CTLCOLOR_SCROLLBAR 5

#define SPI_GETMOUSEHOVERTIME 102

#define SSWF_WINDOW 2

#define WVR_VALIDRECTS 1024

#define MFT_MENUBREAK 64

#define SPI_SETMENUSHOWDELAY 107

#define VK_OEM_ATTN 240

#define WINEVENT_OUTOFCONTEXT 0

#define ICON_BIG 1

#define BSF_QUERY 1

#define SPI_SETMOUSEHOVERWIDTH 99

#define WINSTA_ACCESSGLOBALATOMS 32

#define MF_ENABLED 0

#define DS_3DLOOK 4

#define FKF_CONFIRMHOTKEY 8

#define WMSZ_LEFT 1

#define HKL_PREV 0

#define TKF_HOTKEYACTIVE 4

#define HCF_AVAILABLE 2

#define SW_ERASE 4

#define BSF_IGNORECURRENTTASK 2

#define EVENT_OBJECT_CREATE 32768

#define SM_CYMENUCHECK 72

#define WM_NCPAINT 133

#define DSS_DISABLED 32

#define EVENT_MIN 1

#define SPI_SETDRAGWIDTH 76

#define AW_CENTER 16

#define WM_IME_NOTIFY 642

#define SPI_SETMOUSEHOVERTIME 103

#define LB_MSGMAX 435

#define STATE_SYSTEM_TRAVERSED 8388608

#define MNS_AUTODISMISS 268435456

#define DS_CENTERMOUSE 4096

#define SPI_GETSCREENSAVETIMEOUT 14

#define BSF_FLUSHDISK 4

#define VK_PRIOR 33

#define MB_SERVICE_NOTIFICATION_NT3X 262144

#define EVENT_SYSTEM_DRAGDROPEND 15

#define WINSTA_CREATEDESKTOP 8

#define COLOR_ACTIVECAPTION 2

#define HELP_CONTEXTMENU 10

#define VK_RCONTROL 163

#define DT_TABSTOP 128

#define LBN_ERRSPACE -2

#define VK_PRINT 42

#define SM_CYHSCROLL 3

#define SPI_SETANIMATION 73

#define SB_VERT 1

#define EVENT_OBJECT_PARENTCHANGE 32783

#define DWL_USER 8

#define HTCLOSE 20

#define LR_COLOR 2

#define WM_INPUTLANGCHANGE 81

#define SM_CYSCREEN 1

#define DST_BITMAP 4

#define MOUSEEVENTF_RIGHTUP 16

#define MWMO_ALERTABLE 2

#define ES_NOHIDESEL 256

#define BSF_NOHANG 8

#define BM_SETCHECK 241

#define WINSTA_ENUMERATE 256

#define STATE_SYSTEM_ANIMATED 16384

#define CW_USEDEFAULT 2147483648

#define STATE_SYSTEM_FOCUSABLE 1048576

#define SPI_GETMOUSESPEED 112

#define SPI_SETMENUFADE 4115

#define IDYES 6

#define WM_GETHOTKEY 51

#define WM_GETDLGCODE 135

#define MFT_RIGHTORDER 8192

#define TME_NONCLIENT 16

#define BF_DIAGONAL 16

#define SWP_DEFERERASE 8192

#define CDS_RESET 1073741824

#define SSTF_DISPLAY 3

#define CBS_DROPDOWN 2

#define WM_DESTROYCLIPBOARD 775

#define SPI_GETTOOLTIPFADE 4120

#define DS_CONTROL 1024

#define BF_MIDDLE 2048

#define BM_GETIMAGE 246

#define HTTOPLEFT 13

#define WM_MBUTTONUP 520

#define VK_ACCEPT 30

#define SPI_SETDRAGFULLWINDOWS 37

#define MDITILE_SKIPDISABLED 2

#define SS_USERITEM 10

#define MFT_STRING 0

#define MK_LBUTTON 1

#define HTSIZELAST 17

#define ODS_FOCUS 16

#define WM_IME_COMPOSITION 271

#define LB_GETCURSEL 392

#define SM_SECURE 44

#define WS_TABSTOP 65536

#define CDS_UPDATEREGISTRY 1

#define WM_CUT 768

#define DCX_INTERSECTUPDATE 512

#define MB_TOPMOST 262144

#define WS_DISABLED 134217728

#define SKF_STICKYKEYSON 1

#define BS_ICON 64

#define SM_CXMINSPACING 47

#define COLOR_HIGHLIGHT 13

#define SM_CYSIZE 31

#define BS_MULTILINE 8192

#define OBJID_MENU 4294967293

#define MOUSEEVENTF_MIDDLEDOWN 32

#define WS_EX_LTRREADING 0

#define SWP_NOREDRAW 8

#define EM_GETFIRSTVISIBLELINE 206

#define ES_LEFT 0

#define WM_MENUSELECT 287

#define SWP_SHOWWINDOW 64

#define VK_MODECHANGE 31

#define WS_CLIPSIBLINGS 67108864

#define ODT_BUTTON 4

#define DCX_PARENTCLIP 32

#define MF_DELETE 512

#define MF_STRING 0

#define GW_ENABLEDPOPUP 6

#define MNS_MODELESS 1073741824

#define STM_SETICON 368

#define SOUND_SYSTEM_MENUPOPUP 16

#define NF_REQUERY 4

#define TPM_HORNEGANIMATION 2048

#define ES_AUTOVSCROLL 64

#define DFCS_PUSHED 512

#define CS_VREDRAW 1

#define VK_HANGUL 21

#define GCL_HICONSM -34

#define HC_SKIP 2

#define BM_SETSTATE 243

#define CURSOR_SHOWING 1

#define WM_LBUTTONDBLCLK 515

#define EN_SETFOCUS 256

#define MSGF_SCROLLBAR 5

#define STATE_SYSTEM_HOTTRACKED 128

#define IDI_WARNING 32515

#define IDANI_OPEN 1

#define VK_PA1 253

#define RES_CURSOR 2

#define BROADCAST_QUERY_DENY 1112363332

#define EVENT_OBJECT_NAMECHANGE 32780

#define ES_WANTRETURN 4096

#define DS_NOFAILCREATE 16

#define MB_MODEMASK 12288

#define SPI_SETHIGHCONTRAST 67

#define RDW_ERASENOW 512

#define DS_SYSMODAL 2

#define SC_HSCROLL 61568

#define DCX_EXCLUDEUPDATE 256

#define FLASHW_TRAY 2

#define VK_SPACE 32

#define BSM_APPLICATIONS 8

#define DIFFERENCE 11

#define MB_NOFOCUS 32768

#define KLF_NOTELLSHELL 128

#define MB_DEFAULT_DESKTOP_ONLY 131072

#define SM_CMOUSEBUTTONS 43

#define SWP_NOMOVE 2

#define EM_SCROLL 181

#define NF_QUERY 3

#define CS_GLOBALCLASS 16384

#define MF_UNHILITE 0

#define ENDSESSION_LOGOFF 2147483648

#define VK_CONVERT 28

#define BDR_OUTER 3

#define BDR_SUNKENINNER 8

#define SC_SIZE 61440

#define DT_EXTERNALLEADING 512

#define BS_AUTORADIOBUTTON 9

#define DFCS_MENUARROW 0

#define HELP_FINDER 11

#define CB_SETEXTENDEDUI 341

#define DOF_DOCUMENT 32770

#define PRF_CHILDREN 16

#define DLGC_BUTTON 8192

#define COLOR_BTNHILIGHT 20

#define WM_DISPLAYCHANGE 126

#define MB_ICONWARNING 48

#define WM_CLOSE 16

#define BF_BOTTOMLEFT 9

#define SPI_SETLOWPOWERACTIVE 85

#define WM_IME_COMPOSITIONFULL 644

#define WMSZ_BOTTOM 6

#define SB_CTL 2

#define SOUND_SYSTEM_RESTOREUP 10

#define SPI_GETSCREENSAVERRUNNING 114

#define RDW_NOCHILDREN 64

#define WM_NCCALCSIZE 131

#define BS_TOP 1024

#define HBMMENU_POPUP_RESTORE 9

#define STATE_SYSTEM_READONLY 64

#define SPI_GETLOWPOWERACTIVE 83

#define SW_SHOWNOACTIVATE 4

#define HTBOTTOM 15

#define KLF_SUBSTITUTE_OK 2

#define SW_SHOWDEFAULT 10

#define CB_GETEDITSEL 320

#define HC_GETNEXT 1

#define HTCAPTION 2

#define SPI_GETKEYBOARDPREF 68

#define SSWF_DISPLAY 3

#define GWLP_ID -12

#define PBT_APMOEMEVENT 11

#define SPI_SETGRADIENTCAPTIONS 4105

#define IDH_CANCEL 28444

#define ODS_COMBOBOXEDIT 4096

#define GUI_CARETBLINKING 1

#define SPI_SETTOOLTIPANIMATION 4119

#define DS_SETFONT 64

#define UOI_TYPE 3

#define VK_OEM_FJ_MASSHOU 147

#define WM_KEYDOWN 256

#define WM_UNDO 772

#define MNS_DRAGDROP 536870912

#define WS_TILEDWINDOW 13565952

#define SPI_GETMOUSEHOVERHEIGHT 100

#define ARW_HIDE 8

#define IDABORT 3

#define HELP_SETCONTENTS 5

#define QS_INPUT 1031

#define LLKHF_EXTENDED 1

#define MB_SYSTEMMODAL 4096

#define WA_CLICKACTIVE 2

#define CBN_DBLCLK 2

#define HSHELL_GETMINRECT 5

#define ES_AUTOHSCROLL 128

#define BN_DBLCLK 5

#define PWR_CRITICALRESUME 3

#define DESKTOP_HOOKCONTROL 8

#define SIZE_MAXIMIZED 2

#define WH_MAXHOOK 14

#define VK_ESCAPE 27

#define WM_IME_REQUEST 648

#define HBMMENU_SYSTEM 1

#define STATE_SYSTEM_SELECTABLE 2097152

#define CDS_GLOBAL 8

#define QS_PAINT 32

#define SPI_SETMOUSESPEED 113

#define CTLCOLOR_MSGBOX 0

#define WM_WININICHANGE 26

#define COLOR_INACTIVEBORDER 11

#define LB_SELECTSTRING 396

#define LB_ERR -1

#define ESB_DISABLE_LEFT 1

#define SHOW_ICONWINDOW 2

#define COLOR_3DFACE 15

#define KL_NAMELENGTH 9

#define LB_GETTEXTLEN 394

#define MF_DISABLED 2

#define PWR_OK 1

#define WM_DEVICECHANGE 537

#define EDGE_RAISED 5

#define HBMMENU_MBAR_MINIMIZE_D 7

#define MFS_HILITE 128

#define SB_TOP 6

#define CB_SETEDITSEL 322

#define PRF_CLIENT 4

#define TPM_NONOTIFY 128

#define BST_UNCHECKED 0

#define GW_HWNDNEXT 2

#define KLF_REORDER 8

#define CB_SELECTSTRING 333

#define WM_IME_SELECT 645

#define EVENT_OBJECT_HIDE 32771

#define SS_OWNERDRAW 13

#define GW_HWNDFIRST 0

#define WM_GETFONT 49

#define SSTF_BORDER 2

#define SPI_SETICONMETRICS 46

#define BS_RIGHTBUTTON 32

#define WM_FONTCHANGE 29

#define WS_SIZEBOX 262144

#define VK_DECIMAL 110

#define VK_OEM_FJ_ROYA 150

#define WS_VISIBLE 268435456

#define SPI_SETACTIVEWNDTRKZORDER 4109

#define SM_CXMAXTRACK 59

#define WM_MDIREFRESHMENU 564

#define SM_CLEANBOOT 67

#define SPI_GETWHEELSCROLLLINES 104

#define WM_PENWINFIRST 896

#define SW_SHOWMAXIMIZED 3

#define ESB_DISABLE_BOTH 3

#define INDEXID_CONTAINER 0

#define RDW_VALIDATE 8

#define WM_NEXTMENU 531

#define INPUTLANGCHANGE_SYSCHARSET 1

#define BS_FLAT 32768

#define SPI_GETACTIVEWNDTRKTIMEOUT 8194

#define WS_EX_MDICHILD 64

#define BF_RECT 15

#define GWLP_USERDATA -21

#define QS_MOUSE 6

#define MB_HELP 16384

#define VK_NONAME 252

#define SB_LINELEFT 0

#define LBS_OWNERDRAWFIXED 16

#define SW_FORCEMINIMIZE 11

#define SS_ETCHEDFRAME 18

#define GW_CHILD 5

#define SC_SEPARATOR 61455

#define WM_NCLBUTTONDBLCLK 163

#define SPI_GETICONTITLEWRAP 25

#define MB_TYPEMASK 15

#define EVENT_SYSTEM_MINIMIZEEND 23

#define ODT_COMBOBOX 3

#define SW_PARENTCLOSING 1

#define SPI_GETBEEP 1

#define HELP_QUIT 2

#define WM_NCMBUTTONUP 168

#define PBT_APMRESUMESTANDBY 8

#define CB_LIMITTEXT 321

#define KF_EXTENDED 256

#define EIMES_GETCOMPSTRATONCE 1

#define WM_ERASEBKGND 20

#define CREATEPROCESS_MANIFEST_RESOURCE_ID 1

#define CF_ENHMETAFILE 14

#define RES_ICON 1

#define SMTO_BLOCK 1

#define CF_DSPMETAFILEPICT 131

#define SS_GRAYRECT 5

#define BS_LEFT 256

#define CSOUND_SYSTEM 16

#define IDI_ASTERISK 32516

#define MB_SERVICE_NOTIFICATION 2097152

#define MB_ICONERROR 16

#define WM_GETTEXTLENGTH 14

#define SWP_NOZORDER 4

#define WS_EX_CONTROLPARENT 65536

#define SPI_SETSTICKYKEYS 59

#define BN_SETFOCUS 6

#define WM_NCRBUTTONDBLCLK 166

#define VK_OEM_FJ_JISHO 146

#define VK_ICO_HELP 227

#define MSGF_USER 4096

#define SBS_SIZEBOX 8

#define CB_GETITEMDATA 336

#define BS_3STATE 5

#define DFCS_CAPTIONRESTORE 3

#define EM_SETTABSTOPS 203

#define WH_MAX 14

#define STATE_SYSTEM_CHECKED 16

#define BDR_RAISED 5

#define WM_LBUTTONUP 514

#define CF_BITMAP 2

#define IDH_NO_HELP 28440

#define WH_CALLWNDPROCRET 12

#define SBM_ENABLE_ARROWS 228

#define EN_KILLFOCUS 512

#define SM_CYSMICON 50

#define SS_NOTIFY 256

#define VK_EXECUTE 43

#define ARW_BOTTOMLEFT 0

#define ODS_HOTLIGHT 64

#define EVENT_SYSTEM_CAPTUREEND 9

#define SS_NOPREFIX 128

#define IDHELP 9

#define BF_MONO 32768

#define CB_ERRSPACE -2

#define KF_MENUMODE 4096

#define WM_CAPTURECHANGED 533

#define WM_PENWINLAST 911

#define WS_EX_RIGHT 4096

#define SPI_SETKEYBOARDDELAY 23

#define CBS_DROPDOWNLIST 3

#define WINSTA_ENUMDESKTOPS 1

#define WS_EX_CONTEXTHELP 1024

#define EVENT_SYSTEM_MENUEND 5

#define BF_ADJUST 8192

#define GMMP_USE_HIGH_RESOLUTION_POINTS 2

#define WM_MOVING 534

#define GCL_WNDPROC -24

#define SM_CXFIXEDFRAME 7

#define WM_CHAR 258

#define BN_UNHILITE 3

#define WM_NCCREATE 129

#define WM_COPYDATA 74

#define LBS_OWNERDRAWVARIABLE 32

#define MF_RIGHTJUSTIFY 16384

#define SM_MIDEASTENABLED 74

#define LR_VGACOLOR 128

#define WM_SYNCPAINT 136

#define MFS_DISABLED 3

#define WM_ACTIVATEAPP 28

#define SM_SLOWMACHINE 73

#define MNGO_NOERROR 1

#define MOUSEEVENTF_RIGHTDOWN 8

#define CF_WAVE 12

#define VK_OEM_ENLW 244

#define ESB_DISABLE_LTUP 1

#define SB_ENDSCROLL 8

#define HTTOP 12

#define SIZEZOOMHIDE 4

#define SM_CYFIXEDFRAME 8

#define VK_OEM_JUMP 234

#define DT_SINGLELINE 32

#define SERKF_INDICATOR 4

#define SKF_TRISTATE 128

#define WM_VSCROLLCLIPBOARD 778

#define WH_MIN -1

#define VK_ATTN 246

#define BF_DIAGONAL_ENDBOTTOMRIGHT 28

#define EM_SETMARGINS 211

#define GCLP_HCURSOR -12

#define MKF_MODIFIERS 64

#define WM_TIMER 275

#define ARW_TOPRIGHT 3

#define STATE_SYSTEM_LINKED 4194304

#define SBS_RIGHTALIGN 4

#define CDS_FULLSCREEN 4

#define SM_CYMAXIMIZED 62

#define SOUND_SYSTEM_QUESTION 5

#define WINEVENT_SKIPOWNPROCESS 2

#define SKF_CONFIRMHOTKEY 8

#define DISP_CHANGE_BADFLAGS -4

#define SM_CYSIZEFRAME 33

#define CTLCOLOR_MAX 7

#define DT_VCENTER 4

#define QS_ALLPOSTMESSAGE 256

#define WM_DESTROY 2

#define DESKTOP_ENUMERATE 64

#define SB_PAGERIGHT 3

#define CF_PRIVATEFIRST 512

#define EVENT_OBJECT_SHOW 32770

#define SM_CXICON 11

#define WS_POPUPWINDOW 2156396544

#define DF_ALLOWOTHERACCOUNTHOOK 1

#define DFCS_MONO 32768

#define STATE_SYSTEM_SIZEABLE 131072

#define VK_OEM_PERIOD 190

#define SWP_NOSIZE 1

#define SM_CXBORDER 5

#define SM_MENUDROPALIGNMENT 40

#define BN_PUSHED 2

#define VK_JUNJA 23

#define WA_ACTIVE 1

#define KLF_ACTIVATE 1

#define KEYEVENTF_KEYUP 2

#define CB_GETEXTENDEDUI 342

#define MFT_RIGHTJUSTIFY 16384

#define SPI_GETFASTTASKSWITCH 35

#define DCX_INTERSECTRGN 128

#define TPM_HORPOSANIMATION 1024

#define VK_KANJI 25

#define SM_CXMINIMIZED 57

#define CTLCOLOR_DLG 4

#define VK_ICO_CLEAR 230

#define SPI_SETPOWEROFFTIMEOUT 82

#define RDW_UPDATENOW 256

#define SM_CXMINTRACK 34

#define DSS_MONO 128

#define HBMMENU_CALLBACK -1

#define EVENT_OBJECT_SELECTION 32774

#define WM_CHILDACTIVATE 34

#define DS_LOCALEDIT 32

#define ARW_LEFT 0

#define CF_TIFF 6

#define HTREDUCE 8

#define VK_NONCONVERT 29

#define WS_EX_CLIENTEDGE 512

#define SS_GRAYFRAME 8

#define DISP_CHANGE_SUCCESSFUL 0

#define DT_INTERNAL 4096

#define WM_ENTERSIZEMOVE 561

#define MKF_HOTKEYSOUND 16

#define LBS_STANDARD 10485763

#define OBJID_SYSMENU 4294967295

#define HELP_HELPONHELP 4

#define STATE_SYSTEM_INDETERMINATE 32

#define CF_DSPBITMAP 130

#define SM_PENWINDOWS 41

#define SS_SIMPLE 11

#define SLE_WARNING 3

#define BST_INDETERMINATE 2

#define HKL_NEXT 1

#define COLOR_BTNFACE 15

#define IDI_WINLOGO 32517

#define SPI_SETICONTITLEWRAP 26

#define SOUND_SYSTEM_APPSTART 12

#define WM_MOUSEHOVER 673

#define VK_SELECT 41

#define WM_MEASUREITEM 44

#define WM_QUERYOPEN 19

#define WS_MAXIMIZE 16777216

#define DFCS_MENUARROWRIGHT 4

#define WM_SIZING 532

#define BF_BOTTOM 8

#define SPI_GETFOREGROUNDLOCKTIMEOUT 8192

#define MB_MISCMASK 49152

#define EM_UNDO 199

#define EM_GETLINE 196

#define PM_QS_POSTMESSAGE 9961472

#define VK_OEM_COMMA 188

#define EDGE_BUMP 9

#define RDW_NOFRAME 2048

#define HCBT_SETFOCUS 9

#define SIZE_MINIMIZED 1

#define GWL_EXSTYLE -20

#define ODT_LISTBOX 2

#define LR_LOADMAP3DCOLORS 4096

#define PBT_APMSTANDBY 5

#define IDH_OK 28443

#define DS_NOIDLEMSG 256

#define SW_SHOWNA 8

#define MF_INSERT 0

#define SC_RESTORE 61728

#define SOUND_SYSTEM_FAULT 13

#define OBJID_QUERYCLASSNAMEIDX 4294967284

#define MB_ICONHAND 16

#define STATE_SYSTEM_EXTSELECTABLE 33554432

#define HC_SYSMODALON 4

#define WM_MENUGETOBJECT 292

#define ODS_INACTIVE 128

#define WM_EXITMENULOOP 530

#define CS_NOCLOSE 512

#define STM_SETIMAGE 370

#define CWP_SKIPINVISIBLE 1

#define BS_CENTER 768

#define GW_OWNER 4

#define WM_CONTEXTMENU 123

#define MOUSEEVENTF_LEFTUP 4

#define SM_CXHTHUMB 10

#define SW_SHOWNORMAL 1

#define EC_LEFTMARGIN 1

#define WM_MDITILE 550

#define CBS_HASSTRINGS 512

#define WS_OVERLAPPEDWINDOW 13565952

#define SPI_LANGDRIVER 12

#define VK_CLEAR 12

#define SM_CXSCREEN 0

#define SIZEZOOMSHOW 3

#define DISP_CHANGE_BADMODE -2

#define MFS_GRAYED 3

#define RDW_FRAME 1024

#define WM_AFXFIRST 864

#define WM_SETFONT 48

#define SOUND_SYSTEM_STARTUP 1

#define SB_PAGELEFT 2

#define LBN_SELCHANGE 1

#define SPI_SETSCREENSAVETIMEOUT 15

#define BDR_INNER 12

#define SSF_AVAILABLE 2

#define HCF_HOTKEYAVAILABLE 64

#define WMSZ_BOTTOMRIGHT 8

#define WM_NCACTIVATE 134

#define LB_ADDSTRING 384

#define SPI_GETMOUSEHOVERWIDTH 98

#define BN_DOUBLECLICKED 5

#define SPI_SETCARETWIDTH 8199

#define SPI_SETMOUSEHOVERHEIGHT 101

#define WS_EX_RIGHTSCROLLBAR 0

#define BSM_NETDRIVER 2

#define WM_ENTERIDLE 289

#define RDW_ALLCHILDREN 128

#define SB_THUMBTRACK 5

#define EVENT_SYSTEM_DIALOGSTART 16

#define COLOR_BACKGROUND 1

#define MONITOR_DEFAULTTOPRIMARY 1

#define WM_SETREDRAW 11

#define DFCS_HOT 4096

#define DFCS_CAPTIONMAX 2

#define WM_NCRBUTTONDOWN 164

#define WM_TCARD 82

#define IDH_HELP 28445

#define CB_OKAY 0

#define WM_MDINEXT 548

#define SWP_FRAMECHANGED 32

#define GR_GDIOBJECTS 0

#define SC_CONTEXTHELP 61824

#define SB_HORZ 0

#define SKF_HOTKEYSOUND 16

#define GCLP_HMODULE -16

#define SPI_GETDESKWALLPAPER 115

#define ODA_DRAWENTIRE 1

#define FLASHW_TIMERNOFG 12

#define WM_IME_STARTCOMPOSITION 269

#define CF_PENDATA 10

#define SC_ARRANGE 61712

#define SPI_GETFOREGROUNDFLASHCOUNT 8196

#define HTTRANSPARENT -1

#define ICON_SMALL 0

#define TPM_RIGHTALIGN 8

#define SBM_GETPOS 225

#define WVR_REDRAW 768

#define WS_ACTIVECAPTION 1

#define BS_GROUPBOX 7

#define EM_SETMODIFY 185

#define SM_CMETRICS 97

#define WH_CBT 5

#define COLOR_ACTIVEBORDER 10

#define MB_APPLMODAL 0

#define HELPINFO_WINDOW 1

#define HC_NOREMOVE 3

#define WM_QUERYDRAGICON 55

#define WM_MBUTTONDBLCLK 521

#define SMTO_NORMAL 0

#define CS_DBLCLKS 8

#define LLKHF_ALTDOWN 32

#define COLOR_MENUBAR 30

#define HTBORDER 18

#define ARW_STARTMASK 3

#define PM_QS_PAINT 2097152

#define CB_FINDSTRING 332

#define BM_SETSTYLE 244

#define ES_READONLY 2048

#define SPI_SETLANGTOGGLE 91

#define SW_RESTORE 9

#define SBM_SETSCROLLINFO 233

#define EC_RIGHTMARGIN 2

#define WM_MOUSELEAVE 675

#define HELP_TCARD_DATA 16

#define HBMMENU_POPUP_CLOSE 8

#define SM_CXSIZEFRAME 32

#define WH_JOURNALRECORD 0

#define STN_DISABLE 3

#define MNS_CHECKORBMP 67108864

#define MKF_MOUSEKEYSON 1

#define VK_HOME 36

#define HOVER_DEFAULT 4294967295

#define PRF_ERASEBKGND 8

#define CBS_OEMCONVERT 128

#define METRICS_USEDEFAULT -1

#define SPI_GETLOWPOWERTIMEOUT 79

#define MF_UNCHECKED 0

#define COLOR_MENUTEXT 7

#define BF_DIAGONAL_ENDTOPLEFT 19

#define DM_GETDEFID 1024

#define SPI_SETACTIVEWINDOWTRACKING 4097

#define WM_HSCROLL 276

#define IDANI_CAPTION 3

#define VK_OEM_COPY 242

#define HELPINFO_MENUITEM 2

#define AW_HOR_POSITIVE 1

#define SS_TYPEMASK 31

#define STATE_SYSTEM_PRESSED 8

#define WH_SYSMSGFILTER 6

#define VK_UP 38

#define TME_HOVER 1

#define MNS_NOCHECK 2147483648

#define LBN_SELCANCEL 3

#define SSGF_DISPLAY 3

#define IDC_NO 32648

#define RT_HTML 23

#define WM_HELP 83

#define DFC_MENU 2

#define SM_CYMINIMIZED 58

#define MB_YESNO 4

#define SC_PREVWINDOW 61520

#define EVENT_SYSTEM_CONTEXTHELPEND 13

#define VK_OEM_FJ_TOUROKU 148

#define BST_PUSHED 4

#define PBT_APMBATTERYLOW 9

#define SM_CYKANJIWINDOW 18

#define BDR_RAISEDINNER 4

#define RT_VXD 20

#define SIF_PAGE 2

#define TKF_HOTKEYSOUND 16

#define CWP_SKIPDISABLED 2

#define LB_ERRSPACE -2

#define BS_TEXT 0

#define FKF_FILTERKEYSON 1

#define EM_GETHANDLE 189

#define SPI_SETFOREGROUNDLOCKTIMEOUT 8193

#define ODA_FOCUS 4

#define HCF_HIGHCONTRASTON 1

#define HCF_HOTKEYACTIVE 4

#define CF_PALETTE 9

#define WM_COPY 769

#define VK_ADD 107

#define ODT_MENU 1

#define SSWF_TITLE 1

#define MF_BITMAP 4

#define IDC_WAIT 32514

#define AW_HOR_NEGATIVE 2

#define SM_CXSIZE 30

#define SIZE_MAXSHOW 3

#define INPUTLANGCHANGE_BACKWARD 4

#define BST_FOCUS 8

#define WS_EX_TOPMOST 8

#define MF_CHANGE 128

#define PM_QS_INPUT 67567616

#define SOUND_SYSTEM_SHUTDOWN 2

#define STATE_SYSTEM_FLOATING 4096

#define EDS_RAWMODE 2

#define MF_USECHECKBITMAPS 512

#define WM_DEVMODECHANGE 27

#define MOUSEEVENTF_XDOWN 128

#define CCHILDREN_SCROLLBAR 5

#define WM_LBUTTONDOWN 513

#define SPI_GETCARETWIDTH 8198

#define GWLP_HINSTANCE -6

#define COLOR_INFOTEXT 23

#define LB_GETCARETINDEX 415

#define CALERT_SYSTEM 6

#define LBS_USETABSTOPS 128

#define IDC_SIZEALL 32646

#define WM_INPUTLANGCHANGEREQUEST 80

#define GWLP_HWNDPARENT -8

#define MOUSEEVENTF_VIRTUALDESK 16384

#define GW_MAX 6

#define VK_CANCEL 3

#define MKF_HOTKEYACTIVE 4

#define SM_DEBUG 22

#define PBT_APMQUERYSUSPENDFAILED 2

#define RDW_INVALIDATE 1

#define WM_VSCROLL 277

#define WM_NCLBUTTONUP 162

#define WM_CANCELJOURNAL 75

#define WINEVENT_INCONTEXT 4

#define SC_MINIMIZE 61472

#define ARW_DOWN 4

#define ALERT_SYSTEM_CRITICAL 5

#define SPI_SETDRAGHEIGHT 77

#define WS_OVERLAPPED 0

#define MK_CONTROL 8

#define NFR_UNICODE 2

#define WH_DEBUG 9

#define IDC_HELP 32651

#define WM_MDIRESTORE 547

#define HELP_WM_HELP 12

#define CF_UNICODETEXT 13

#define GCW_ATOM -32

#define SB_PAGEDOWN 3

#define HSHELL_ACTIVATESHELLWINDOW 3

#define LB_GETITEMHEIGHT 417

#define HTHELP 21

#define WM_CANCELMODE 31

#define SPI_GETLISTBOXSMOOTHSCROLLING 4102

#define QS_KEY 1

#define SS_BITMAP 14

#define LB_GETHORIZONTALEXTENT 403

#define WM_STYLECHANGED 125

#define VK_MENU 18

#define SPI_SETSNAPTODEFBUTTON 96

#define PM_QS_SENDMESSAGE 4194304

#define GUI_SYSTEMMENUMODE 8

#define WS_MINIMIZEBOX 131072

#define IMAGE_BITMAP 0

#define DI_NORMAL 3

#define MONITOR_DEFAULTTONEAREST 2

#define TPM_RETURNCMD 256

#define SHOW_FULLSCREEN 3

#define ORD_LANGDRIVER 1

#define CBN_CLOSEUP 8

#define DFCS_FLAT 16384

#define HELP_COMMAND 258

#define DC_INBUTTON 16

#define WHEEL_DELTA 120

#define DDL_ARCHIVE 32

#define SPI_SETMENUANIMATION 4099

#define WM_SYSDEADCHAR 263

#define HTMINBUTTON 8

#define OBJID_CLIENT 4294967292

#define MB_DEFMASK 3840

#define DFCS_CAPTIONMIN 1

#define VK_INSERT 45

#define SBS_SIZEGRIP 16

#define ODS_GRAYED 2

#define SM_ARRANGE 56

#define HIDE_WINDOW 0

#define SS_REALSIZECONTROL 64

#define WM_MDIMAXIMIZE 549

#define CB_SETITEMHEIGHT 339

#define AW_ACTIVATE 131072

#define SPI_GETHOTTRACKING 4110

#define WM_PARENTNOTIFY 528

#define DT_CENTER 1

#define BF_TOPLEFT 3

#define SM_CXHSCROLL 21

#define SPI_SETSHOWIMEUI 111

#define HTBOTTOMLEFT 16

#define BSF_POSTMESSAGE 16

#define EN_HSCROLL 1537

#define VK_OEM_FINISH 241

#define WM_CHANGECBCHAIN 781

#define VK_OEM_PLUS 187

#define WM_SYSKEYUP 261

#define SIZE_MAXHIDE 4

#define RT_DIALOG 5

#define MNC_IGNORE 0

#define BS_OWNERDRAW 11

#define MF_REMOVE 4096

#define DST_TEXT 1

#define WMSZ_TOPRIGHT 5

#define COLOR_3DDKSHADOW 21

#define GWL_ID -12

#define WM_PALETTEISCHANGING 784

#define SS_PATHELLIPSIS 32768

#define WM_NCDESTROY 130

#define COLOR_GRAYTEXT 17

#define LB_SETSEL 389

#define EVENT_SYSTEM_SCROLLINGSTART 18

#define WS_TILED 0

#define COLOR_CAPTIONTEXT 9

#define WM_HANDHELDFIRST 856

#define LBS_NODATA 8192

#define LR_COPYRETURNORG 4

#define ODS_SELECTED 1

#define CS_PARENTDC 128

#define SM_CYMINTRACK 35

#define WM_DROPFILES 563

#define COLOR_3DSHADOW 16

#define VK_OEM_CLEAR 254

#define OBJID_CURSOR 4294967287

#define LB_FINDSTRING 399

#define MF_GRAYED 1

typedef struct _ENUM_SERVICE_STATUS_PROCESSA _ENUM_SERVICE_STATUS_PROCESSA, *P_ENUM_SERVICE_STATUS_PROCESSA;

typedef struct _SERVICE_STATUS_PROCESS _SERVICE_STATUS_PROCESS, *P_SERVICE_STATUS_PROCESS;

typedef struct _SERVICE_STATUS_PROCESS SERVICE_STATUS_PROCESS;

struct _SERVICE_STATUS_PROCESS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
    DWORD dwProcessId;
    DWORD dwServiceFlags;
};

struct _ENUM_SERVICE_STATUS_PROCESSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _QUERY_SERVICE_CONFIGA _QUERY_SERVICE_CONFIGA, *P_QUERY_SERVICE_CONFIGA;

typedef struct _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

struct _QUERY_SERVICE_CONFIGA {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPSTR lpBinaryPathName;
    LPSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPSTR lpDependencies;
    LPSTR lpServiceStartName;
    LPSTR lpDisplayName;
};

typedef struct _SERVICE_FAILURE_ACTIONSW _SERVICE_FAILURE_ACTIONSW, *P_SERVICE_FAILURE_ACTIONSW;

typedef struct _SC_ACTION _SC_ACTION, *P_SC_ACTION;

typedef struct _SC_ACTION SC_ACTION;

typedef enum _SC_ACTION_TYPE {
    SC_ACTION_NONE=0,
    SC_ACTION_RESTART=1,
    SC_ACTION_REBOOT=2,
    SC_ACTION_RUN_COMMAND=3
} _SC_ACTION_TYPE;

typedef enum _SC_ACTION_TYPE SC_ACTION_TYPE;

struct _SC_ACTION {
    SC_ACTION_TYPE Type;
    DWORD Delay;
};

struct _SERVICE_FAILURE_ACTIONSW {
    DWORD dwResetPeriod;
    LPWSTR lpRebootMsg;
    LPWSTR lpCommand;
    DWORD cActions;
    SC_ACTION *lpsaActions;
};

typedef void (*LPHANDLER_FUNCTION)(DWORD);

typedef struct _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

typedef struct _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESSA;

typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW _QUERY_SERVICE_LOCK_STATUSW, *P_QUERY_SERVICE_LOCK_STATUSW;

struct _QUERY_SERVICE_LOCK_STATUSW {
    DWORD fIsLocked;
    LPWSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef struct _SERVICE_STATUS _SERVICE_STATUS, *P_SERVICE_STATUS;

struct _SERVICE_STATUS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSW _ENUM_SERVICE_STATUS_PROCESSW, *P_ENUM_SERVICE_STATUS_PROCESSW;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

struct _ENUM_SERVICE_STATUS_PROCESSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA _QUERY_SERVICE_LOCK_STATUSA, *P_QUERY_SERVICE_LOCK_STATUSA;

struct _QUERY_SERVICE_LOCK_STATUSA {
    DWORD fIsLocked;
    LPSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef void (*LPSERVICE_MAIN_FUNCTIONW)(DWORD, LPWSTR *);

typedef struct _SERVICE_TABLE_ENTRYA _SERVICE_TABLE_ENTRYA, *P_SERVICE_TABLE_ENTRYA;

typedef void (*LPSERVICE_MAIN_FUNCTIONA)(DWORD, LPSTR *);

struct _SERVICE_TABLE_ENTRYA {
    LPSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONA lpServiceProc;
};

typedef struct _SERVICE_TABLE_ENTRYW _SERVICE_TABLE_ENTRYW, *P_SERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;

struct _SERVICE_TABLE_ENTRYW {
    LPWSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONW lpServiceProc;
};

typedef struct SERVICE_STATUS_HANDLE__ SERVICE_STATUS_HANDLE__, *PSERVICE_STATUS_HANDLE__;

typedef struct SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

struct SERVICE_STATUS_HANDLE__ {
    int unused;
};

typedef struct _QUERY_SERVICE_CONFIGW _QUERY_SERVICE_CONFIGW, *P_QUERY_SERVICE_CONFIGW;

typedef struct _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;

struct _QUERY_SERVICE_CONFIGW {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPWSTR lpBinaryPathName;
    LPWSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPWSTR lpDependencies;
    LPWSTR lpServiceStartName;
    LPWSTR lpDisplayName;
};

typedef struct _SERVICE_DESCRIPTIONA _SERVICE_DESCRIPTIONA, *P_SERVICE_DESCRIPTIONA;

typedef struct _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTIONA;

typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;

struct _SERVICE_DESCRIPTIONA {
    LPSTR lpDescription;
};

typedef DWORD (*LPHANDLER_FUNCTION_EX)(DWORD, DWORD, LPVOID, LPVOID);

typedef struct _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION;

typedef struct _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

typedef struct _ENUM_SERVICE_STATUSA _ENUM_SERVICE_STATUSA, *P_ENUM_SERVICE_STATUSA;

typedef struct _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS;

typedef struct _SERVICE_STATUS SERVICE_STATUS;

struct _ENUM_SERVICE_STATUSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

typedef struct SC_HANDLE__ SC_HANDLE__, *PSC_HANDLE__;

struct SC_HANDLE__ {
    int unused;
};

typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;

typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;

typedef struct _SERVICE_DESCRIPTIONW _SERVICE_DESCRIPTIONW, *P_SERVICE_DESCRIPTIONW;

struct _SERVICE_DESCRIPTIONW {
    LPWSTR lpDescription;
};

typedef struct _SERVICE_FAILURE_ACTIONSA _SERVICE_FAILURE_ACTIONSA, *P_SERVICE_FAILURE_ACTIONSA;

typedef struct _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

struct _SERVICE_FAILURE_ACTIONSA {
    DWORD dwResetPeriod;
    LPSTR lpRebootMsg;
    LPSTR lpCommand;
    DWORD cActions;
    SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;

typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;

typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;

typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;

typedef struct SC_HANDLE__ *SC_HANDLE;

typedef struct _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONSA;

typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;

typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO=0
} _SC_STATUS_TYPE;

typedef enum _SC_STATUS_TYPE SC_STATUS_TYPE;

typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO=0
} _SC_ENUM_TYPE;

typedef SC_HANDLE *LPSC_HANDLE;

typedef struct _SC_ACTION *LPSC_ACTION;

typedef struct _ENUM_SERVICE_STATUSW _ENUM_SERVICE_STATUSW, *P_ENUM_SERVICE_STATUSW;

typedef struct _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

struct _ENUM_SERVICE_STATUSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_STATUS *LPSERVICE_STATUS;

typedef struct _SERVICE_DESCRIPTIONW SERVICE_DESCRIPTIONW;

typedef struct _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;

typedef struct _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

typedef enum _SC_ENUM_TYPE SC_ENUM_TYPE;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW ENUM_SERVICE_STATUS_PROCESSW;

typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;

typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG;

typedef struct _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;

typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY;

typedef LPVOID SC_LOCK;

typedef struct _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

typedef struct _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_FAILURE_ACTIONSW SERVICE_FAILURE_ACTIONSW;

#define SERVICE_QUERY_CONFIG 1

#define SC_MANAGER_LOCK 8

#define SERVICE_ACTIVE 1

#define SC_MANAGER_QUERY_LOCK_STATUS 16

#define SERVICE_STOP 32

#define SERVICE_CONFIG_DESCRIPTION 1

#define SERVICE_CONTROL_NETBINDENABLE 9

#define SERVICE_STOPPED 1

#define SERVICE_CONTROL_PARAMCHANGE 6

#define SERVICE_INACTIVE 2

#define SC_MANAGER_ALL_ACCESS 983103

#define SERVICE_ACCEPT_POWEREVENT 64

#define SERVICE_ACCEPT_SHUTDOWN 4

#define SC_MANAGER_ENUMERATE_SERVICE 4

#define SERVICE_CHANGE_CONFIG 2

#define SERVICE_QUERY_STATUS 4

#define SERVICE_CONTROL_INTERROGATE 4

#define SERVICE_INTERROGATE 128

#define SERVICE_PAUSED 7

#define SERVICE_USER_DEFINED_CONTROL 256

#define SERVICE_ACCEPT_HARDWAREPROFILECHANGE 32

#define SERVICE_RUNNING 4

#define SERVICE_RUNS_IN_SYSTEM_PROCESS 1

#define SERVICE_NO_CHANGE 4294967295

#define SERVICE_CONTROL_SHUTDOWN 5

#define SERVICE_CONFIG_FAILURE_ACTIONS 2

#define SERVICE_ALL_ACCESS 983551

#define SC_MANAGER_CONNECT 1

#define SERVICE_ACCEPT_STOP 1

#define SC_MANAGER_MODIFY_BOOT_CONFIG 32

#define SERVICE_CONTROL_HARDWAREPROFILECHANGE 12

#define SERVICE_ACCEPT_NETBINDCHANGE 16

#define SERVICE_CONTROL_SESSIONCHANGE 14

#define SERVICE_CONTROL_CONTINUE 3

#define SERVICE_CONTROL_NETBINDADD 7

#define SERVICE_CONTROL_PAUSE 2

#define SERVICE_STOP_PENDING 3

#define SERVICE_ACCEPT_PAUSE_CONTINUE 2

#define SERVICE_ACCEPT_SESSIONCHANGE 128

#define SERVICE_ACCEPT_PARAMCHANGE 8

#define SERVICE_PAUSE_PENDING 6

#define SERVICE_PAUSE_CONTINUE 64

#define SERVICE_CONTROL_STOP 1

#define SERVICE_CONTINUE_PENDING 5

#define SERVICE_STATE_ALL 3

#define SC_MANAGER_CREATE_SERVICE 2

#define SERVICE_ENUMERATE_DEPENDENTS 8

#define SERVICE_CONTROL_NETBINDDISABLE 10

#define SERVICE_START_PENDING 2

#define SERVICE_CONTROL_POWEREVENT 13

#define SERVICE_CONTROL_DEVICEEVENT 11

#define SERVICE_START 16

#define SERVICE_CONTROL_NETBINDREMOVE 8

#define LZERROR_READ -3

#define LZERROR_UNKNOWNALG -8

#define LZERROR_BADVALUE -7

#define LZERROR_BADOUTHANDLE -2

#define LZERROR_GLOBALLOC -5

#define LZERROR_GLOBLOCK -6

#define LZERROR_BADINHANDLE -1

#define LZERROR_WRITE -4

typedef enum tagCOWAIT_FLAGS {
    COWAIT_WAITALL=1,
    COWAIT_ALERTABLE=2
} tagCOWAIT_FLAGS;

typedef enum tagCOWAIT_FLAGS COWAIT_FLAGS;

typedef enum tagREGCLS {
    REGCLS_SINGLEUSE=0,
    REGCLS_MULTIPLEUSE=1,
    REGCLS_MULTI_SEPARATE=2,
    REGCLS_SUSPENDED=4,
    REGCLS_SURROGATE=8
} tagREGCLS;

typedef enum tagREGCLS REGCLS;

typedef enum tagCOINIT {
    COINIT_MULTITHREADED=0,
    COINIT_APARTMENTTHREADED=2,
    COINIT_DISABLE_OLE1DDE=4,
    COINIT_SPEED_OVER_MEMORY=8
} tagCOINIT;

typedef struct tagSTGOPTIONS tagSTGOPTIONS, *PtagSTGOPTIONS;

typedef struct tagSTGOPTIONS STGOPTIONS;

struct tagSTGOPTIONS {
    USHORT usVersion;
    USHORT reserved;
    ULONG ulSectorSize;
    WCHAR *pwcsTemplateFile;
};

typedef HRESULT (*LPFNCANUNLOADNOW)(void);

typedef enum tagCOINIT COINIT;

typedef enum tagSTDMSHLFLAGS {
    SMEXF_SERVER=1,
    SMEXF_HANDLER=2
} tagSTDMSHLFLAGS;

typedef HRESULT (*LPFNGETCLASSOBJECT)(IID *, IID *, LPVOID *);

typedef enum tagSTDMSHLFLAGS STDMSHLFLAGS;

#define STGM_WRITE 1

#define STG_LAYOUT_INTERLEAVED 1

#define STG_TOEND 4294967295

#define STGM_SHARE_EXCLUSIVE 16

#define ASYNC_MODE_DEFAULT 0

#define STGM_NOSCRATCH 1048576

#define ASYNC_MODE_COMPATIBILITY 1

#define STGOPTIONS_VERSION 2

#define STGM_DIRECT 0

#define STGM_SHARE_DENY_READ 48

#define STGM_TRANSACTED 65536

#define STGM_READWRITE 2

#define STGTY_REPEAT 256

#define COM_RIGHTS_EXECUTE 1

#define STGFMT_DOCUMENT 0

#define STGM_DELETEONRELEASE 67108864

#define STGM_NOSNAPSHOT 2097152

#define STG_LAYOUT_SEQUENTIAL 0

#define COM_RIGHTS_SAFE_FOR_SCRIPTING 2

#define STGM_SHARE_DENY_NONE 64

#define STGM_SIMPLE 134217728

#define STGFMT_ANY 4

#define STGFMT_STORAGE 0

#define STGM_CREATE 4096

#define MARSHALINTERFACE_MIN 500

#define STGFMT_FILE 3

#define CWCSTORAGENAME 32

#define STGFMT_DOCFILE 5

#define STGM_READ 0

#define STGFMT_NATIVE 1

#define STGM_CONVERT 131072

#define STGM_SHARE_DENY_WRITE 32

#define STGM_FAILIFTHERE 0

#define STGM_PRIORITY 262144

typedef struct IDirect3DResource8Vtbl IDirect3DResource8Vtbl, *PIDirect3DResource8Vtbl;

typedef struct IDirect3DResource8 IDirect3DResource8, *PIDirect3DResource8;

struct IDirect3DResource8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DResource8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DResource8 *);
    ULONG (*Release)(struct IDirect3DResource8 *);
    HRESULT (*GetDevice)(struct IDirect3DResource8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DResource8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DResource8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DResource8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DResource8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DResource8 *);
    void (*PreLoad)(struct IDirect3DResource8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DResource8 *);
};

struct IDirect3DResource8 {
    struct IDirect3DResource8Vtbl *lpVtbl;
};

typedef struct IDirect3DVolumeTexture8 *PDIRECT3DVOLUMETEXTURE8;

typedef struct IDirect3DResource8 *PDIRECT3DRESOURCE8;

typedef struct IDirect3DSwapChain8 *LPDIRECT3DSWAPCHAIN8;

typedef struct IDirect3DVolume8 *LPDIRECT3DVOLUME8;

typedef struct IDirect3DVertexBuffer8 *PDIRECT3DVERTEXBUFFER8;

typedef struct IDirect3DIndexBuffer8 *PDIRECT3DINDEXBUFFER8;

typedef struct IDirect3DVolumeTexture8 *LPDIRECT3DVOLUMETEXTURE8;

typedef struct IDirect3DVertexBuffer8 *LPDIRECT3DVERTEXBUFFER8;

typedef struct IDirect3DVolume8 *PDIRECT3DVOLUME8;

typedef struct IDirect3DResource8 *LPDIRECT3DRESOURCE8;

typedef struct IDirect3DIndexBuffer8 *LPDIRECT3DINDEXBUFFER8;

typedef struct IDirect3DCubeTexture8 *PDIRECT3DCUBETEXTURE8;

typedef struct IDirect3D8 *PDIRECT3D8;

typedef struct IDirect3DSurface8 *PDIRECT3DSURFACE8;

typedef struct IDirect3D8 *LPDIRECT3D8;

typedef struct IDirect3DBaseTexture8 *LPDIRECT3DBASETEXTURE8;

typedef struct IDirect3DBaseTexture8 *PDIRECT3DBASETEXTURE8;

typedef struct IDirect3DDevice8 *PDIRECT3DDEVICE8;

typedef struct IDirect3DSwapChain8 *PDIRECT3DSWAPCHAIN8;

typedef struct IDirect3DTexture8 *PDIRECT3DTEXTURE8;

#define D3D_OK 0

#define D3DERR_UNSUPPORTEDCOLOROPERATION 2289436697

#define DIRECT3D_VERSION 2048

#define D3DERR_CONFLICTINGTEXTUREFILTER 2289436702

#define D3DERR_DEVICENOTRESET 2289436777

#define D3DERR_DRIVERINTERNALERROR 2289436711

#define D3DSGR_NO_CALIBRATION 0

#define D3DADAPTER_DEFAULT 0

#define D3DCREATE_FPU_PRESERVE 2

#define D3DERR_WRONGTEXTUREFORMAT 2289436696

#define D3DERR_UNSUPPORTEDALPHAOPERATION 2289436699

#define D3DCREATE_MIXED_VERTEXPROCESSING 128

#define D3DCREATE_SOFTWARE_VERTEXPROCESSING 32

#define D3DERR_UNSUPPORTEDALPHAARG 2289436700

#define D3DCURSOR_IMMEDIATE_UPDATE 1

#define D3DSPD_IUNKNOWN 1

#define D3DERR_UNSUPPORTEDFACTORVALUE 2289436703

#define D3DENUM_NO_WHQL_LEVEL 2

#define D3DERR_CONFLICTINGRENDERSTATE 2289436705

#define D3DPRESENT_BACK_BUFFERS_MAX 3

#define D3DERR_INVALIDCALL 2289436780

#define D3DERR_DEVICELOST 2289436776

#define D3DERR_CONFLICTINGTEXTUREPALETTE 2289436710

#define D3DSGR_CALIBRATE 1

#define D3DERR_UNSUPPORTEDTEXTUREFILTER 2289436706

#define D3DERR_TOOMANYOPERATIONS 2289436701

#define D3DCURRENT_DISPLAY_MODE 15728639

#define D3DERR_MOREDATA 2289436775

#define D3DERR_NOTFOUND 2289436774

#define D3DERR_NOTAVAILABLE 2289436778

#define D3DERR_DRIVERINVALIDCALL 2289436781

#define D3DCREATE_PUREDEVICE 16

#define D3DERR_INVALIDDEVICE 2289436779

#define D3DERR_UNSUPPORTEDCOLORARG 2289436698

#define D3DCREATE_HARDWARE_VERTEXPROCESSING 64

#define _FACD3D 2166

#define D3DCREATE_MULTITHREADED 4

#define D3D_SDK_VERSION 120

#define D3DERR_OUTOFVIDEOMEMORY 2289435004

typedef enum tagREGKIND {
    REGKIND_DEFAULT=0,
    REGKIND_REGISTER=1,
    REGKIND_NONE=2
} tagREGKIND;

typedef enum tagREGKIND REGKIND;

typedef struct tagPARAMDATA tagPARAMDATA, *PtagPARAMDATA;

typedef struct tagPARAMDATA PARAMDATA;

struct tagPARAMDATA {
    OLECHAR *szName;
    VARTYPE vt;
};

typedef struct tagMETHODDATA tagMETHODDATA, *PtagMETHODDATA;

typedef struct tagMETHODDATA *LPMETHODDATA;

struct tagMETHODDATA {
    OLECHAR *szName;
    PARAMDATA *ppdata;
    DISPID dispid;
    UINT iMeth;
    CALLCONV cc;
    UINT cArgs;
    WORD wFlags;
    VARTYPE vtReturn;
};

typedef struct tagMETHODDATA METHODDATA;

typedef struct tagINTERFACEDATA tagINTERFACEDATA, *PtagINTERFACEDATA;

typedef struct tagINTERFACEDATA INTERFACEDATA;

struct tagINTERFACEDATA {
    METHODDATA *pmethdata;
    UINT cMembers;
};

typedef struct tagINTERFACEDATA *LPINTERFACEDATA;

typedef struct UDATE UDATE, *PUDATE;

struct UDATE {
    SYSTEMTIME st;
    USHORT wDayOfYear;
};

typedef struct NUMPARSE NUMPARSE, *PNUMPARSE;

struct NUMPARSE {
    INT cDig;
    ULONG dwInFlags;
    ULONG dwOutFlags;
    INT cchUsed;
    INT nBaseShift;
    INT nPwr10;
};

typedef struct tagPARAMDATA *LPPARAMDATA;

#define VARIANT_CALENDAR_GREGORIAN 64

#define VAR_FORMAT_NOSUBSTITUTE 32

#define VAR_CALENDAR_GREGORIAN 256

#define VAR_CALENDAR_THAI 128

#define NUMPRS_LEADING_MINUS 16

#define VAR_TIMEVALUEONLY 1

#define ACTIVEOBJECT_STRONG 0

#define NUMPRS_DECIMAL 256

#define VARIANT_NOVALUEPROP 1

#define MEMBERID_NIL -1

#define DISPATCH_PROPERTYGET 2

#define NUMPRS_TRAILING_PLUS 8

#define NUMPRS_INEXACT 131072

#define STDOLE2_MINORVERNUM 0

#define STDOLE_MINORVERNUM 0

#define STDOLE_LCID 0

#define VAR_LOCALBOOL 16

#define NUMPRS_USE_ALL 4096

#define ID_DEFAULTINST -2

#define VAR_FOURDIGITYEARS 64

#define STDOLE_MAJORVERNUM 1

#define STDOLE2_MAJORVERNUM 2

#define NUMPRS_NEG 65536

#define LOCALE_USE_NLS 268435456

#define VARIANT_LOCALBOOL 16

#define LOAD_TLB_AS_64BIT 64

#define VARIANT_ALPHABOOL 2

#define NUMPRS_THOUSANDS 512

#define NUMPRS_PARENS 128

#define NUMPRS_CURRENCY 1024

#define DISPATCH_PROPERTYPUTREF 8

#define VAR_VALIDDATE 4

#define DISPATCH_PROPERTYPUT 4

#define NUMPRS_LEADING_PLUS 4

#define VARCMP_LT 0

#define VTDATEGRE_MAX 2958465

#define ACTIVEOBJECT_WEAK 1

#define VARCMP_EQ 1

#define VARIANT_CALENDAR_HIJRI 8

#define VARIANT_NOUSEROVERRIDE 4

#define NUMPRS_TRAILING_MINUS 32

#define DISPATCH_METHOD 1

#define STDOLE2_LCID 0

#define LOAD_TLB_AS_32BIT 32

#define NUMPRS_STD 8191

#define MASK_TO_RESET_TLB_BITS -97

#define VAR_DATEVALUEONLY 2

#define VAR_CALENDAR_HIJRI 8

#define NUMPRS_LEADING_WHITE 1

#define VTDATEGRE_MIN -657434

#define NUMPRS_HEX_OCT 64

#define NUMPRS_TRAILING_WHITE 2

#define VARIANT_CALENDAR_THAI 32

#define VARIANT_USE_NLS 128

#define VARCMP_GT 2

#define VARCMP_NULL 3

#define NUMPRS_EXPONENT 2048

typedef struct _LDBL12 _LDBL12, *P_LDBL12;

struct _LDBL12 {
    uchar ld12[12];
};

typedef struct _ldiv_t _ldiv_t, *P_ldiv_t;

typedef struct _ldiv_t ldiv_t;

struct _ldiv_t {
    long quot;
    long rem;
};

typedef void (*_secerr_handler_func)(int, void *);

typedef void (*_purecall_handler)(void);

typedef struct _div_t _div_t, *P_div_t;

struct _div_t {
    int quot;
    int rem;
};

typedef int (*_onexit_t)(void);

typedef struct _div_t div_t;

typedef struct _CRT_DOUBLE _CRT_DOUBLE, *P_CRT_DOUBLE;

struct _CRT_DOUBLE {
    double x;
};

#define _MAX_DRIVE 3

#define _OUT_TO_STDERR 1

#define _SECERR_BUFFER_OVERRUN 1

#define _MAX_PATH 260

#define EXIT_FAILURE 1

#define _MAX_FNAME 256

#define _MAX_DIR 256

#define _OUT_TO_DEFAULT 0

#define _MAX_EXT 256

#define _OUT_TO_MSGBOX 2

#define _CVTBUFSIZE 349

#define RAND_MAX 2147483647

#define _REPORT_ERRMODE 3

#define EXIT_SUCCESS 0

typedef struct png_color_8_struct png_color_8_struct, *Ppng_color_8_struct;

typedef struct png_color_8_struct png_color_8;

typedef png_color_8 *png_color_8p;

struct png_color_8_struct {
    png_byte red;
    png_byte green;
    png_byte blue;
    png_byte gray;
    png_byte alpha;
};

typedef struct png_info_struct png_info_struct, *Ppng_info_struct;

typedef struct png_color_struct png_color_struct, *Ppng_color_struct;

typedef struct png_color_struct png_color;

typedef png_color *png_colorp;

typedef struct png_text_struct png_text_struct, *Ppng_text_struct;

typedef struct png_text_struct png_text;

typedef png_text *png_textp;

typedef struct png_time_struct png_time_struct, *Ppng_time_struct;

typedef struct png_time_struct png_time;

typedef struct png_color_16_struct png_color_16_struct, *Ppng_color_16_struct;

typedef struct png_color_16_struct png_color_16;

struct png_color_struct {
    png_byte red;
    png_byte green;
    png_byte blue;
};

struct png_color_16_struct {
    png_byte index;
    png_uint_16 red;
    png_uint_16 green;
    png_uint_16 blue;
    png_uint_16 gray;
};

struct png_time_struct {
    png_uint_16 year;
    png_byte month;
    png_byte day;
    png_byte hour;
    png_byte minute;
    png_byte second;
};

struct png_info_struct {
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 valid;
    png_uint_32 rowbytes;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte bit_depth;
    png_byte color_type;
    png_byte compression_type;
    png_byte filter_type;
    png_byte interlace_type;
    png_byte channels;
    png_byte pixel_depth;
    png_byte spare_byte;
    png_byte signature[8];
    float gamma;
    png_byte srgb_intent;
    int num_text;
    int max_text;
    png_textp text;
    png_time mod_time;
    png_color_8 sig_bit;
    png_bytep trans;
    png_color_16 trans_values;
    png_color_16 background;
    png_uint_32 x_offset;
    png_uint_32 y_offset;
    png_byte offset_unit_type;
    png_uint_32 x_pixels_per_unit;
    png_uint_32 y_pixels_per_unit;
    png_byte phys_unit_type;
    png_uint_16p hist;
    float x_white;
    float y_white;
    float x_red;
    float y_red;
    float x_green;
    float y_green;
    float x_blue;
    float y_blue;
    png_charp pcal_purpose;
    png_int_32 pcal_X0;
    png_int_32 pcal_X1;
    png_charp pcal_units;
    png_charpp pcal_params;
    png_byte pcal_type;
    png_byte pcal_nparams;
};

struct png_text_struct {
    int compression;
    png_charp key;
    png_charp text;
    png_size_t text_length;
};

typedef struct png_struct_def png_struct_def, *Ppng_struct_def;

typedef struct png_struct_def png_struct;

typedef png_struct *png_structp;

typedef void (*png_flush_ptr)(png_structp);

typedef int jmp_buf[16];

typedef void (*png_error_ptr)(png_structp, png_const_charp);

typedef void (*png_rw_ptr)(png_structp, png_bytep, png_size_t);

typedef struct png_row_info_struct png_row_info_struct, *Ppng_row_info_struct;

typedef struct png_row_info_struct png_row_info;

typedef png_row_info *png_row_infop;

typedef void (*png_user_transform_ptr)(png_structp, png_row_infop, png_bytep);

typedef void (*png_read_status_ptr)(png_structp, png_uint_32, int);

typedef void (*png_write_status_ptr)(png_structp, png_uint_32, int);

typedef struct png_info_struct png_info;

typedef png_info *png_infop;

typedef void (*png_progressive_info_ptr)(png_structp, png_infop);

typedef void (*png_progressive_row_ptr)(png_structp, png_bytep, png_uint_32, int);

typedef void (*png_progressive_end_ptr)(png_structp, png_infop);

struct png_row_info_struct {
    png_uint_32 width;
    png_uint_32 rowbytes;
    png_byte color_type;
    png_byte bit_depth;
    png_byte channels;
    png_byte pixel_depth;
};

struct png_struct_def {
    jmp_buf jmpbuf;
    png_error_ptr error_fn;
    png_error_ptr warning_fn;
    png_voidp error_ptr;
    png_rw_ptr write_data_fn;
    png_rw_ptr read_data_fn;
    png_voidp io_ptr;
    png_user_transform_ptr read_user_transform_fn;
    png_user_transform_ptr write_user_transform_fn;
    png_voidp user_transform_ptr;
    png_byte user_transform_depth;
    png_byte user_transform_channels;
    png_uint_32 mode;
    png_uint_32 flags;
    png_uint_32 transformations;
    z_stream zstream;
    png_bytep zbuf;
    png_size_t zbuf_size;
    int zlib_level;
    int zlib_method;
    int zlib_window_bits;
    int zlib_mem_level;
    int zlib_strategy;
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 num_rows;
    png_uint_32 usr_width;
    png_uint_32 rowbytes;
    png_uint_32 irowbytes;
    png_uint_32 iwidth;
    png_uint_32 row_number;
    png_bytep prev_row;
    png_bytep row_buf;
    png_bytep sub_row;
    png_bytep up_row;
    png_bytep avg_row;
    png_bytep paeth_row;
    png_row_info row_info;
    png_uint_32 idat_size;
    png_uint_32 crc;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte chunk_name[5];
    png_byte compression;
    png_byte filter;
    png_byte interlaced;
    png_byte pass;
    png_byte do_filter;
    png_byte color_type;
    png_byte bit_depth;
    png_byte usr_bit_depth;
    png_byte pixel_depth;
    png_byte channels;
    png_byte usr_channels;
    png_byte sig_bytes;
    png_uint_16 filler;
    png_byte background_gamma_type;
    float background_gamma;
    png_color_16 background;
    png_color_16 background_1;
    png_flush_ptr output_flush_fn;
    png_uint_32 flush_dist;
    png_uint_32 flush_rows;
    int gamma_shift;
    float gamma;
    float screen_gamma;
    png_bytep gamma_table;
    png_bytep gamma_from_1;
    png_bytep gamma_to_1;
    png_uint_16pp gamma_16_table;
    png_uint_16pp gamma_16_from_1;
    png_uint_16pp gamma_16_to_1;
    png_color_8 sig_bit;
    png_color_8 shift;
    png_bytep trans;
    png_color_16 trans_values;
    png_read_status_ptr read_row_fn;
    png_write_status_ptr write_row_fn;
    png_progressive_info_ptr info_fn;
    png_progressive_row_ptr row_fn;
    png_progressive_end_ptr end_fn;
    png_bytep save_buffer_ptr;
    png_bytep save_buffer;
    png_bytep current_buffer_ptr;
    png_bytep current_buffer;
    png_uint_32 push_length;
    png_uint_32 skip_length;
    png_size_t save_buffer_size;
    png_size_t save_buffer_max;
    png_size_t buffer_size;
    png_size_t current_buffer_size;
    int process_mode;
    int cur_palette;
    png_size_t current_text_size;
    png_size_t current_text_left;
    png_charp current_text;
    png_charp current_text_ptr;
    png_bytep palette_lookup;
    png_bytep dither_index;
    png_uint_16p hist;
    png_byte heuristic_method;
    png_byte num_prev_filters;
    png_bytep prev_filters;
    png_uint_16p filter_weights;
    png_uint_16p inv_filter_weights;
    png_uint_16p filter_costs;
    png_uint_16p inv_filter_costs;
    png_charp time_buffer;
    png_byte rgb_to_gray_status;
    png_byte rgb_to_gray_red_coeff;
    png_byte rgb_to_gray_green_coeff;
    png_byte rgb_to_gray_blue_coeff;
    png_byte empty_plte_permitted;
};

typedef png_time *png_timep;

typedef png_time **png_timepp;

typedef png_structp version_1_0_5;

typedef png_color_16 *png_color_16p;

typedef png_color_16 **png_color_16pp;

typedef png_struct **png_structpp;

typedef png_text **png_textpp;

typedef png_row_info **png_row_infopp;

typedef void (*png_free_ptr)(png_structp, png_voidp);

typedef png_color **png_colorpp;

typedef png_color_8 **png_color_8pp;

typedef png_voidp (*png_malloc_ptr)(png_structp, png_size_t);

typedef png_info **png_infopp;

#define PNG_BACKGROUND_GAMMA_FILE 2

#define PNG_INTERLACE_NONE 0

#define PNG_RESOLUTION_LAST 2

#define PNG_CRC_QUIET_USE 4

#define PNG_COLOR_TYPE_GRAY 0

#define PNG_INFO_pHYs 128

#define PNG_INTERLACE_ADAM7 1

#define PNG_COMPRESSION_TYPE_DEFAULT 0

#define PNG_CRC_ERROR_QUIT 1

#define PNG_EQUATION_LINEAR 0

#define PNG_INFO_cHRM 4

#define PNG_RESOLUTION_METER 1

#define PNG_FILTER_PAETH 128

#define PNG_EQUATION_ARBITRARY 2

#define PNG_INFO_pCAL 1024

#define PNG_CRC_DEFAULT 0

#define PNG_RESOLUTION_UNKNOWN 0

#define PNG_TEXT_COMPRESSION_LAST 1

#define PNG_FILTER_HEURISTIC_DEFAULT 0

#define PNG_FILTER_VALUE_UP 2

#define PNG_CRC_WARN_USE 3

#define PNG_INFO_oFFs 256

#define PNG_EQUATION_HYPERBOLIC 3

#define PNG_BACKGROUND_GAMMA_SCREEN 1

#define PNG_INFO_gAMA 1

#define PNG_FILTER_VALUE_LAST 5

#define PNG_COLOR_TYPE_PALETTE 3

#define PNG_MAX_UINT 2147483647

#define PNG_FILLER_AFTER 1

#define PNG_BACKGROUND_GAMMA_UNKNOWN 0

#define PNG_OFFSET_LAST 2

#define PNG_sRGB_INTENT_ABSOLUTE 2

#define PNG_FILTER_HEURISTIC_WEIGHTED 2

#define PNG_OFFSET_PIXEL 0

#define PNG_INTERLACE_LAST 2

#define PNG_LIBPNG_VER 10005

#define PNG_FILTER_VALUE_AVG 3

#define PNG_INFO_hIST 64

#define PNG_FILLER_BEFORE 0

#define PNG_TEXT_COMPRESSION_zTXt 0

#define PNG_FILTER_HEURISTIC_LAST 3

#define PNG_FILTER_AVG 64

#define PNG_EQUATION_LAST 4

#define PNG_INFO_tRNS 16

#define PNG_INFO_sBIT 2

#define PNG_sRGB_INTENT_SATURATION 0

#define PNG_TEXT_COMPRESSION_zTXt_WR -2

#define PNG_FILTER_UP 32

#define PNG_TEXT_COMPRESSION_NONE_WR -3

#define PNG_COLOR_TYPE_RGB 2

#define PNG_sRGB_INTENT_RELATIVE 3

#define PNG_ALL_FILTERS 248

#define PNG_INFO_bKGD 32

#define PNG_CRC_NO_CHANGE 5

#define PNG_COLOR_TYPE_GRAY_ALPHA 4

#define PNG_FILTER_VALUE_NONE 0

#define PNG_FILTER_TYPE_BASE 0

#define PNG_INFO_tIME 512

#define PNG_COLOR_MASK_PALETTE 1

#define PNG_OFFSET_MICROMETER 1

#define PNG_FILTER_SUB 16

#define PNG_NO_FILTERS 0

#define PNG_BACKGROUND_GAMMA_UNIQUE 3

#define PNG_INFO_sRGB 2048

#define PNG_COLOR_MASK_COLOR 2

#define PNG_EQUATION_BASE_E 1

#define PNG_sRGB_INTENT_LAST 4

#define PNG_sRGB_INTENT_PERCEPTUAL 1

#define PNG_FILTER_VALUE_PAETH 4

#define PNG_FILTER_NONE 8

#define PNG_COMPRESSION_TYPE_BASE 0

#define PNG_INFO_PLTE 8

#define PNG_TEXT_COMPRESSION_NONE -1

#define PNG_COLOR_MASK_ALPHA 4

#define PNG_FILTER_HEURISTIC_UNWEIGHTED 1

#define PNG_CRC_WARN_DISCARD 2

#define PNG_FILTER_TYPE_DEFAULT 0

#define PNG_FILTER_VALUE_SUB 1

#define PNG_COLOR_TYPE_RGB_ALPHA 6

#define RPC_X_ENUM_VALUE_TOO_LARGE 1781

#define RPC_S_ASYNC_CALL_PENDING 997

#define RPC_S_OUT_OF_THREADS 164

#define RPC_X_NO_MEMORY 14

#define RPC_X_INVALID_BUFFER 1784

#define RPC_S_OUT_OF_MEMORY 14

#define RPC_S_TIMEOUT 1460

#define RPC_S_ACCESS_DENIED 5

#define RPC_X_SS_CONTEXT_MISMATCH 6

#define RPC_S_BUFFER_TOO_SMALL 122

#define RPC_S_INVALID_LEVEL 87

#define RPC_X_INVALID_BOUND 1734

#define RPC_S_INVALID_ARG 87

#define RPC_S_SERVER_OUT_OF_MEMORY 1130

#define RPC_X_PIPE_APP_MEMORY 14

#define RPC_S_OK 0

#define RPC_X_INVALID_TAG 1733

#define RPC_X_INVALID_PIPE_OPERATION 1831

#define RPC_S_INVALID_SECURITY_DESC 1338

#define RPC_S_UNKNOWN_PRINCIPAL 1332

typedef struct __JUMP_BUFFER __JUMP_BUFFER, *P__JUMP_BUFFER;

struct __JUMP_BUFFER {
    ulong Ebp;
    ulong Ebx;
    ulong Edi;
    ulong Esi;
    ulong Esp;
    ulong Eip;
    ulong Registration;
    ulong TryLevel;
    ulong Cookie;
    ulong UnwindFunc;
    ulong UnwindData[6];
};

typedef struct __JUMP_BUFFER _JUMP_BUFFER;

#define _JBLEN 16

typedef struct _COORD _COORD, *P_COORD;

typedef struct _COORD COORD;

struct _COORD {
    SHORT X;
    SHORT Y;
};

typedef struct _SMALL_RECT _SMALL_RECT, *P_SMALL_RECT;

struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD _WINDOW_BUFFER_SIZE_RECORD, *P_WINDOW_BUFFER_SIZE_RECORD;

struct _WINDOW_BUFFER_SIZE_RECORD {
    COORD dwSize;
};

typedef struct _CHAR_INFO _CHAR_INFO, *P_CHAR_INFO;

typedef struct _CHAR_INFO CHAR_INFO;

typedef union _union_612.conflict _union_612.conflict, *P_union_612.conflict;

union _union_612.conflict {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _CHAR_INFO {
    union _union_612.conflict Char;
    WORD Attributes;
};

typedef struct _INPUT_RECORD _INPUT_RECORD, *P_INPUT_RECORD;

typedef struct _INPUT_RECORD INPUT_RECORD;

typedef union _union_610 _union_610, *P_union_610;

typedef struct _KEY_EVENT_RECORD _KEY_EVENT_RECORD, *P_KEY_EVENT_RECORD;

typedef struct _KEY_EVENT_RECORD KEY_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD _MOUSE_EVENT_RECORD, *P_MOUSE_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;

typedef struct _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;

typedef struct _MENU_EVENT_RECORD _MENU_EVENT_RECORD, *P_MENU_EVENT_RECORD;

typedef struct _MENU_EVENT_RECORD MENU_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD _FOCUS_EVENT_RECORD, *P_FOCUS_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;

typedef union _union_604 _union_604, *P_union_604;

union _union_604 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _MENU_EVENT_RECORD {
    UINT dwCommandId;
};

struct _KEY_EVENT_RECORD {
    BOOL bKeyDown;
    WORD wRepeatCount;
    WORD wVirtualKeyCode;
    WORD wVirtualScanCode;
    union _union_604 uChar;
    DWORD dwControlKeyState;
};

struct _MOUSE_EVENT_RECORD {
    COORD dwMousePosition;
    DWORD dwButtonState;
    DWORD dwControlKeyState;
    DWORD dwEventFlags;
};

struct _FOCUS_EVENT_RECORD {
    BOOL bSetFocus;
};

union _union_610 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

struct _INPUT_RECORD {
    WORD EventType;
    union _union_610 Event;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFO _CONSOLE_SCREEN_BUFFER_INFO, *P_CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _SMALL_RECT SMALL_RECT;

struct _CONSOLE_SCREEN_BUFFER_INFO {
    COORD dwSize;
    COORD dwCursorPosition;
    WORD wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
};

typedef struct _CONSOLE_CURSOR_INFO _CONSOLE_CURSOR_INFO, *P_CONSOLE_CURSOR_INFO;

typedef struct _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

struct _CONSOLE_CURSOR_INFO {
    DWORD dwSize;
    BOOL bVisible;
};

typedef struct _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;

typedef struct _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CHAR_INFO *PCHAR_INFO;

typedef struct _CONSOLE_FONT_INFO _CONSOLE_FONT_INFO, *P_CONSOLE_FONT_INFO;

struct _CONSOLE_FONT_INFO {
    DWORD nFont;
    COORD dwFontSize;
};

typedef BOOL (*PHANDLER_ROUTINE)(DWORD);

typedef struct _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

typedef union _union_606 _union_606, *P_union_606;

union _union_606 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_963 _union_963, *P_union_963;

union _union_963 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_961 _union_961, *P_union_961;

union _union_961 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

typedef union _union_614 _union_614, *P_union_614;

union _union_614 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_612 _union_612, *P_union_612;

union _union_612 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

typedef struct _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

typedef struct _CONSOLE_FONT_INFO CONSOLE_FONT_INFO;

typedef struct _COORD *PCOORD;

typedef struct _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

typedef union _union_955 _union_955, *P_union_955;

union _union_955 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef struct _INPUT_RECORD *PINPUT_RECORD;

typedef struct _SMALL_RECT *PSMALL_RECT;

#define FROM_LEFT_1ST_BUTTON_PRESSED 1

#define ENABLE_PROCESSED_OUTPUT 1

#define NLS_DBCSCHAR 65536

#define CAPSLOCK_ON 128

#define COMMON_LVB_GRID_RVERTICAL 4096

#define NUMLOCK_ON 32

#define MOUSE_WHEELED 4

#define MOUSE_MOVED 1

#define BACKGROUND_BLUE 16

#define FROM_LEFT_2ND_BUTTON_PRESSED 4

#define LEFT_CTRL_PRESSED 8

#define FOREGROUND_BLUE 1

#define WINDOW_BUFFER_SIZE_EVENT 4

#define NLS_IME_DISABLE 536870912

#define COMMON_LVB_SBCSDBCS 768

#define FOCUS_EVENT 16

#define COMMON_LVB_UNDERSCORE 32768

#define FOREGROUND_INTENSITY 8

#define NLS_IME_CONVERSION 8388608

#define CTRL_LOGOFF_EVENT 5

#define RIGHTMOST_BUTTON_PRESSED 2

#define NLS_KATAKANA 131072

#define ENABLE_LINE_INPUT 2

#define BACKGROUND_GREEN 32

#define SCROLLLOCK_ON 64

#define FOREGROUND_RED 4

#define COMMON_LVB_GRID_HORIZONTAL 1024

#define COMMON_LVB_GRID_LVERTICAL 2048

#define CONSOLE_TEXTMODE_BUFFER 1

#define NLS_HIRAGANA 262144

#define NLS_ROMAN 4194304

#define COMMON_LVB_TRAILING_BYTE 512

#define COMMON_LVB_REVERSE_VIDEO 16384

#define COMMON_LVB_LEADING_BYTE 256

#define BACKGROUND_RED 64

#define ENABLE_MOUSE_INPUT 16

#define CTRL_BREAK_EVENT 1

#define FROM_LEFT_4TH_BUTTON_PRESSED 16

#define ENABLE_WRAP_AT_EOL_OUTPUT 2

#define KEY_EVENT 1

#define CTRL_SHUTDOWN_EVENT 6

#define MENU_EVENT 8

#define CTRL_CLOSE_EVENT 2

#define ENABLE_PROCESSED_INPUT 1

#define ENABLE_WINDOW_INPUT 8

#define NLS_ALPHANUMERIC 0

#define DOUBLE_CLICK 2

#define ENHANCED_KEY 256

#define LEFT_ALT_PRESSED 2

#define FOREGROUND_GREEN 2

#define CTRL_C_EVENT 0

#define MOUSE_EVENT 2

#define RIGHT_ALT_PRESSED 1

#define FROM_LEFT_3RD_BUTTON_PRESSED 8

#define RIGHT_CTRL_PRESSED 4

#define SHIFT_PRESSED 16

#define BACKGROUND_INTENSITY 128

#define ENABLE_ECHO_INPUT 4

typedef GUID FMTID;

typedef FMTID *LPFMTID;

typedef IID *LPIID;

typedef struct _GUID _GUID, *P_GUID;

struct _GUID {
    ulong Data1;
    ushort Data2;
    ushort Data3;
    uchar Data4[8];
};

typedef struct _DXFILELOADRESOURCE _DXFILELOADRESOURCE, *P_DXFILELOADRESOURCE;

struct _DXFILELOADRESOURCE {
    HMODULE hModule;
    LPCTSTR lpName;
    LPCTSTR lpType;
};

typedef struct IDirectXFileData IDirectXFileData, *PIDirectXFileData;

typedef struct IDirectXFileData *LPDIRECTXFILEDATA;

typedef struct IDirectXFileDataVtbl IDirectXFileDataVtbl, *PIDirectXFileDataVtbl;

typedef struct IDirectXFileObject IDirectXFileObject, *PIDirectXFileObject;

typedef struct IDirectXFileObject *LPDIRECTXFILEOBJECT;

typedef struct IDirectXFileObjectVtbl IDirectXFileObjectVtbl, *PIDirectXFileObjectVtbl;

struct IDirectXFileDataVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileData *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileData *);
    ULONG (*Release)(struct IDirectXFileData *);
    HRESULT (*GetName)(struct IDirectXFileData *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileData *, LPGUID);
    HRESULT (*GetData)(struct IDirectXFileData *, LPCSTR, DWORD *, void **);
    HRESULT (*GetType)(struct IDirectXFileData *, GUID **);
    HRESULT (*GetNextObject)(struct IDirectXFileData *, LPDIRECTXFILEOBJECT *);
    HRESULT (*AddDataObject)(struct IDirectXFileData *, LPDIRECTXFILEDATA);
    HRESULT (*AddDataReference)(struct IDirectXFileData *, LPCSTR, GUID *);
    HRESULT (*AddBinaryObject)(struct IDirectXFileData *, LPCSTR, GUID *, LPCSTR, LPVOID, DWORD);
};

struct IDirectXFileObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileObject *);
    ULONG (*Release)(struct IDirectXFileObject *);
    HRESULT (*GetName)(struct IDirectXFileObject *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileObject *, LPGUID);
};

struct IDirectXFileObject {
    struct IDirectXFileObjectVtbl *lpVtbl;
};

struct IDirectXFileData {
    struct IDirectXFileDataVtbl *lpVtbl;
};

typedef struct IDirectXFileEnumObject IDirectXFileEnumObject, *PIDirectXFileEnumObject;

typedef struct IDirectXFileEnumObjectVtbl IDirectXFileEnumObjectVtbl, *PIDirectXFileEnumObjectVtbl;

struct IDirectXFileEnumObject {
    struct IDirectXFileEnumObjectVtbl *lpVtbl;
};

struct IDirectXFileEnumObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileEnumObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileEnumObject *);
    ULONG (*Release)(struct IDirectXFileEnumObject *);
    HRESULT (*GetNextDataObject)(struct IDirectXFileEnumObject *, LPDIRECTXFILEDATA *);
    HRESULT (*GetDataObjectById)(struct IDirectXFileEnumObject *, GUID *, LPDIRECTXFILEDATA *);
    HRESULT (*GetDataObjectByName)(struct IDirectXFileEnumObject *, LPCSTR, LPDIRECTXFILEDATA *);
};

typedef struct IDirectXFileVtbl IDirectXFileVtbl, *PIDirectXFileVtbl;

typedef struct IDirectXFile IDirectXFile, *PIDirectXFile;

typedef DWORD DXFILELOADOPTIONS;

typedef struct IDirectXFileEnumObject *LPDIRECTXFILEENUMOBJECT;

typedef DWORD DXFILEFORMAT;

typedef struct IDirectXFileSaveObject IDirectXFileSaveObject, *PIDirectXFileSaveObject;

typedef struct IDirectXFileSaveObject *LPDIRECTXFILESAVEOBJECT;

typedef struct IDirectXFileSaveObjectVtbl IDirectXFileSaveObjectVtbl, *PIDirectXFileSaveObjectVtbl;

struct IDirectXFileSaveObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileSaveObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileSaveObject *);
    ULONG (*Release)(struct IDirectXFileSaveObject *);
    HRESULT (*SaveTemplates)(struct IDirectXFileSaveObject *, DWORD, GUID **);
    HRESULT (*CreateDataObject)(struct IDirectXFileSaveObject *, GUID *, LPCSTR, GUID *, DWORD, LPVOID, LPDIRECTXFILEDATA *);
    HRESULT (*SaveData)(struct IDirectXFileSaveObject *, LPDIRECTXFILEDATA);
};

struct IDirectXFileVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFile *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFile *);
    ULONG (*Release)(struct IDirectXFile *);
    HRESULT (*CreateEnumObject)(struct IDirectXFile *, LPVOID, DXFILELOADOPTIONS, LPDIRECTXFILEENUMOBJECT *);
    HRESULT (*CreateSaveObject)(struct IDirectXFile *, LPCSTR, DXFILEFORMAT, LPDIRECTXFILESAVEOBJECT *);
    HRESULT (*RegisterTemplates)(struct IDirectXFile *, LPVOID, DWORD);
};

struct IDirectXFileSaveObject {
    struct IDirectXFileSaveObjectVtbl *lpVtbl;
};

struct IDirectXFile {
    struct IDirectXFileVtbl *lpVtbl;
};

typedef struct _DXFILELOADRESOURCE *LPDXFILELOADRESOURCE;

typedef struct IDirectXFileDataReferenceVtbl IDirectXFileDataReferenceVtbl, *PIDirectXFileDataReferenceVtbl;

typedef struct IDirectXFileDataReference IDirectXFileDataReference, *PIDirectXFileDataReference;

struct IDirectXFileDataReferenceVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileDataReference *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileDataReference *);
    ULONG (*Release)(struct IDirectXFileDataReference *);
    HRESULT (*GetName)(struct IDirectXFileDataReference *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileDataReference *, LPGUID);
    HRESULT (*Resolve)(struct IDirectXFileDataReference *, LPDIRECTXFILEDATA *);
};

struct IDirectXFileDataReference {
    struct IDirectXFileDataReferenceVtbl *lpVtbl;
};

typedef struct IDirectXFileEnumObject **LPLPDIRECTXFILEENUMOBJECT;

typedef struct IDirectXFileSaveObject **LPLPDIRECTXFILESAVEOBJECT;

typedef struct IDirectXFileBinary IDirectXFileBinary, *PIDirectXFileBinary;

typedef struct IDirectXFileBinary *LPDIRECTXFILEBINARY;

typedef struct IDirectXFileBinaryVtbl IDirectXFileBinaryVtbl, *PIDirectXFileBinaryVtbl;

struct IDirectXFileBinaryVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileBinary *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileBinary *);
    ULONG (*Release)(struct IDirectXFileBinary *);
    HRESULT (*GetName)(struct IDirectXFileBinary *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileBinary *, LPGUID);
    HRESULT (*GetSize)(struct IDirectXFileBinary *, DWORD *);
    HRESULT (*GetMimeType)(struct IDirectXFileBinary *, LPCSTR *);
    HRESULT (*Read)(struct IDirectXFileBinary *, LPVOID, DWORD, LPDWORD);
};

struct IDirectXFileBinary {
    struct IDirectXFileBinaryVtbl *lpVtbl;
};

typedef struct IDirectXFileBinary **LPLPDIRECTXFILEBINARY;

typedef struct _DXFILELOADRESOURCE DXFILELOADRESOURCE;

typedef struct IDirectXFile **LPLPDIRECTXFILE;

typedef struct IDirectXFile *LPDIRECTXFILE;

typedef struct _DXFILELOADMEMORY _DXFILELOADMEMORY, *P_DXFILELOADMEMORY;

typedef struct _DXFILELOADMEMORY DXFILELOADMEMORY;

struct _DXFILELOADMEMORY {
    LPVOID lpMemory;
    DWORD dSize;
};

typedef struct IDirectXFileData **LPLPDIRECTXFILEDATA;

typedef struct _DXFILELOADMEMORY *LPDXFILELOADMEMORY;

typedef struct IDirectXFileDataReference **LPLPDIRECTXFILEDATAREFERENCE;

typedef struct IDirectXFileObject **LPLPDIRECTXFILEOBJECT;

typedef struct IDirectXFileDataReference *LPDIRECTXFILEDATAREFERENCE;

#define DXFILELOAD_FROMMEMORY 2

#define DXFILE_OK 0

#define DXFILEERR_BADARRAYSIZE 2289435492

#define DXFILEFORMAT_TEXT 1

#define DXFILEERR_BADFILEFLOATSIZE 2289435487

#define DXFILEERR_NOMORESTREAMHANDLES 2289435497

#define DXFILEERR_BADFILECOMPRESSIONTYPE 2289435488

#define DXFILEERR_BADINTRINSICS 2289435496

#define DXFILEERR_NOMOREDATA 2289435498

#define DXFILELOAD_FROMFILE 0

#define DXFILELOAD_FROMURL 8

#define DXFILEERR_BADDATAREFERENCE 2289435493

#define DXFILEERR_BADTYPE 2289435476

#define DXFILEERR_BADRESOURCE 2289435484

#define DXFILEERR_INTERNALERROR 2289435494

#define DXFILELOAD_FROMSTREAM 4

#define _FACDD 2166

#define DXFILEFORMAT_BINARY 0

#define DXFILEERR_BADSTREAMHANDLE 2289435477

#define DXFILEERR_BADOBJECT 2289435474

#define DXFILEERR_URLNOTFOUND 2289435483

#define DXFILEERR_PARSEERROR 2289435490

#define DXFILEERR_BADVALUE 2289435475

#define DXFILELOAD_FROMRESOURCE 1

#define DXFILEERR_BADCACHEFILE 2289435499

#define DXFILEERR_NOINTERNET 2289435500

#define DXFILEERR_RESOURCENOTFOUND 2289435482

#define DXFILEERR_NOTEMPLATE 2289435491

#define DXFILEERR_BADFILETYPE 2289435485

#define DXFILEERR_NOMOREOBJECTS 2289435495

#define DXFILEERR_BADALLOC 2289435478

#define DXFILEERR_NOTFOUND 2289435479

#define DXFILEERR_FILENOTFOUND 2289435481

#define DXFILEERR_BADFILE 2289435489

#define DXFILEERR_BADFILEVERSION 2289435486

#define DXFILEFORMAT_COMPRESSED 2

#define DXFILEERR_NOTDONEYET 2289435480

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO _CMSG_KEY_AGREE_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER _CRYPT_ALGORITHM_IDENTIFIER, *P_CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPTOAPI_BLOB _CRYPTOAPI_BLOB, *P_CRYPTOAPI_BLOB;

typedef struct _CRYPTOAPI_BLOB CRYPT_DATA_BLOB;

typedef union _union_1089 _union_1089, *P_union_1089;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CRYPTOAPI_BLOB CRYPT_OBJID_BLOB;

typedef struct _CERT_ID _CERT_ID, *P_CERT_ID;

typedef struct _CERT_ID CERT_ID;

typedef struct _CERT_PUBLIC_KEY_INFO _CERT_PUBLIC_KEY_INFO, *P_CERT_PUBLIC_KEY_INFO;

typedef struct _CERT_PUBLIC_KEY_INFO CERT_PUBLIC_KEY_INFO;

typedef union _union_1048 _union_1048, *P_union_1048;

typedef struct _CRYPT_BIT_BLOB _CRYPT_BIT_BLOB, *P_CRYPT_BIT_BLOB;

typedef struct _CRYPT_BIT_BLOB CRYPT_BIT_BLOB;

typedef struct _CERT_ISSUER_SERIAL_NUMBER _CERT_ISSUER_SERIAL_NUMBER, *P_CERT_ISSUER_SERIAL_NUMBER;

typedef struct _CERT_ISSUER_SERIAL_NUMBER CERT_ISSUER_SERIAL_NUMBER;

typedef struct _CRYPTOAPI_BLOB CRYPT_HASH_BLOB;

typedef struct _CRYPTOAPI_BLOB CERT_NAME_BLOB;

typedef struct _CRYPTOAPI_BLOB CRYPT_INTEGER_BLOB;

struct _CRYPTOAPI_BLOB {
    DWORD cbData;
    BYTE *pbData;
};

struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
    DWORD cbSize;
    CRYPT_DATA_BLOB EncryptedKey;
};

struct _CRYPT_ALGORITHM_IDENTIFIER {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

struct _CRYPT_BIT_BLOB {
    DWORD cbData;
    BYTE *pbData;
    DWORD cUnusedBits;
};

struct _CERT_PUBLIC_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_BIT_BLOB PublicKey;
};

struct _CERT_ISSUER_SERIAL_NUMBER {
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
};

union _union_1048 {
    CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    CRYPT_HASH_BLOB KeyId;
    CRYPT_HASH_BLOB HashId;
};

struct _CERT_ID {
    DWORD dwIdChoice;
    union _union_1048 field1_0x4;
};

union _union_1089 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD dwOriginatorChoice;
    union _union_1089 field5_0x20;
    DWORD cKeyAgreeKeyEncryptInfo;
    PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO *rgpKeyAgreeKeyEncryptInfo;
    DWORD dwFlags;
};

typedef struct _CMSG_CTRL_DECRYPT_PARA _CMSG_CTRL_DECRYPT_PARA, *P_CMSG_CTRL_DECRYPT_PARA;

typedef ULONG_PTR HCRYPTPROV;

struct _CMSG_CTRL_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    DWORD dwRecipientIndex;
};

typedef struct _CERT_REVOCATION_CRL_INFO _CERT_REVOCATION_CRL_INFO, *P_CERT_REVOCATION_CRL_INFO;

typedef struct _CRL_CONTEXT _CRL_CONTEXT, *P_CRL_CONTEXT;

typedef struct _CRL_CONTEXT CRL_CONTEXT;

typedef CRL_CONTEXT *PCCRL_CONTEXT;

typedef struct _CRL_ENTRY _CRL_ENTRY, *P_CRL_ENTRY;

typedef struct _CRL_ENTRY *PCRL_ENTRY;

typedef struct _CRL_INFO _CRL_INFO, *P_CRL_INFO;

typedef struct _CRL_INFO *PCRL_INFO;

typedef void *HCERTSTORE;

typedef struct _CERT_EXTENSION _CERT_EXTENSION, *P_CERT_EXTENSION;

typedef struct _CERT_EXTENSION *PCERT_EXTENSION;

struct _CERT_REVOCATION_CRL_INFO {
    DWORD cbSize;
    PCCRL_CONTEXT pBaseCrlContext;
    PCCRL_CONTEXT pDeltaCrlContext;
    PCRL_ENTRY pCrlEntry;
    BOOL fDeltaCrlEntry;
};

struct _CRL_ENTRY {
    CRYPT_INTEGER_BLOB SerialNumber;
    FILETIME RevocationDate;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CRL_INFO {
    DWORD dwVersion;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    DWORD cCRLEntry;
    PCRL_ENTRY rgCRLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CERT_EXTENSION {
    LPSTR pszObjId;
    BOOL fCritical;
    CRYPT_OBJID_BLOB Value;
};

struct _CRL_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE *pbCrlEncoded;
    DWORD cbCrlEncoded;
    PCRL_INFO pCrlInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CROSS_CERT_DIST_POINTS_INFO _CROSS_CERT_DIST_POINTS_INFO, *P_CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CERT_ALT_NAME_INFO _CERT_ALT_NAME_INFO, *P_CERT_ALT_NAME_INFO;

typedef struct _CERT_ALT_NAME_INFO *PCERT_ALT_NAME_INFO;

typedef struct _CERT_ALT_NAME_ENTRY _CERT_ALT_NAME_ENTRY, *P_CERT_ALT_NAME_ENTRY;

typedef struct _CERT_ALT_NAME_ENTRY *PCERT_ALT_NAME_ENTRY;

typedef union _union_992 _union_992, *P_union_992;

typedef struct _CERT_OTHER_NAME _CERT_OTHER_NAME, *P_CERT_OTHER_NAME;

typedef struct _CERT_OTHER_NAME *PCERT_OTHER_NAME;

struct _CERT_ALT_NAME_INFO {
    DWORD cAltEntry;
    PCERT_ALT_NAME_ENTRY rgAltEntry;
};

struct _CROSS_CERT_DIST_POINTS_INFO {
    DWORD dwSyncDeltaTime;
    DWORD cDistPoint;
    PCERT_ALT_NAME_INFO rgDistPoint;
};

union _union_992 {
    PCERT_OTHER_NAME pOtherName;
    LPWSTR pwszRfc822Name;
    LPWSTR pwszDNSName;
    CERT_NAME_BLOB DirectoryName;
    LPWSTR pwszURL;
    CRYPT_DATA_BLOB IPAddress;
    LPSTR pszRegisteredID;
};

struct _CERT_ALT_NAME_ENTRY {
    DWORD dwAltNameChoice;
    union _union_992 field1_0x4;
};

struct _CERT_OTHER_NAME {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _CTL_FIND_USAGE_PARA _CTL_FIND_USAGE_PARA, *P_CTL_FIND_USAGE_PARA;

typedef struct _CTL_FIND_USAGE_PARA *PCTL_FIND_USAGE_PARA;

typedef struct _CTL_USAGE _CTL_USAGE, *P_CTL_USAGE;

typedef struct _CTL_USAGE CTL_USAGE;

typedef struct _CERT_INFO _CERT_INFO, *P_CERT_INFO;

typedef struct _CERT_INFO *PCERT_INFO;

struct _CTL_USAGE {
    DWORD cUsageIdentifier;
    LPSTR *rgpszUsageIdentifier;
};

struct _CTL_FIND_USAGE_PARA {
    DWORD cbSize;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    PCERT_INFO pSigner;
};

struct _CERT_INFO {
    DWORD dwVersion;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME NotBefore;
    FILETIME NotAfter;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    CRYPT_BIT_BLOB IssuerUniqueId;
    CRYPT_BIT_BLOB SubjectUniqueId;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CERT_STORE_PROV_INFO _CERT_STORE_PROV_INFO, *P_CERT_STORE_PROV_INFO;

typedef struct _CERT_STORE_PROV_INFO CERT_STORE_PROV_INFO;

typedef void *HCERTSTOREPROV;

typedef void *HCRYPTOIDFUNCADDR;

struct _CERT_STORE_PROV_INFO {
    DWORD cbSize;
    DWORD cStoreProvFunc;
    void **rgpvStoreProvFunc;
    HCERTSTOREPROV hStoreProv;
    DWORD dwStoreProvFlags;
    HCRYPTOIDFUNCADDR hStoreProvFuncAddr2;
};

typedef struct _CERT_CONTEXT _CERT_CONTEXT, *P_CERT_CONTEXT;

typedef struct _CERT_CONTEXT CERT_CONTEXT;

struct _CERT_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE *pbCertEncoded;
    DWORD cbCertEncoded;
    PCERT_INFO pCertInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CERT_CHAIN_CONTEXT _CERT_CHAIN_CONTEXT, *P_CERT_CHAIN_CONTEXT;

typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT;

typedef CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT;

typedef struct _CERT_TRUST_STATUS _CERT_TRUST_STATUS, *P_CERT_TRUST_STATUS;

typedef struct _CERT_TRUST_STATUS CERT_TRUST_STATUS;

typedef struct _CERT_SIMPLE_CHAIN _CERT_SIMPLE_CHAIN, *P_CERT_SIMPLE_CHAIN;

typedef struct _CERT_SIMPLE_CHAIN *PCERT_SIMPLE_CHAIN;

typedef struct _CERT_CHAIN_ELEMENT _CERT_CHAIN_ELEMENT, *P_CERT_CHAIN_ELEMENT;

typedef struct _CERT_CHAIN_ELEMENT *PCERT_CHAIN_ELEMENT;

typedef struct _CERT_TRUST_LIST_INFO _CERT_TRUST_LIST_INFO, *P_CERT_TRUST_LIST_INFO;

typedef struct _CERT_TRUST_LIST_INFO *PCERT_TRUST_LIST_INFO;

typedef CERT_CONTEXT *PCCERT_CONTEXT;

typedef struct _CERT_REVOCATION_INFO _CERT_REVOCATION_INFO, *P_CERT_REVOCATION_INFO;

typedef struct _CERT_REVOCATION_INFO *PCERT_REVOCATION_INFO;

typedef struct _CTL_USAGE *PCERT_ENHKEY_USAGE;

typedef struct _CTL_ENTRY _CTL_ENTRY, *P_CTL_ENTRY;

typedef struct _CTL_ENTRY *PCTL_ENTRY;

typedef struct _CTL_CONTEXT _CTL_CONTEXT, *P_CTL_CONTEXT;

typedef struct _CTL_CONTEXT CTL_CONTEXT;

typedef CTL_CONTEXT *PCCTL_CONTEXT;

typedef struct _CERT_REVOCATION_CRL_INFO *PCERT_REVOCATION_CRL_INFO;

typedef struct _CRYPT_ATTRIBUTE _CRYPT_ATTRIBUTE, *P_CRYPT_ATTRIBUTE;

typedef struct _CRYPT_ATTRIBUTE *PCRYPT_ATTRIBUTE;

typedef struct _CTL_INFO _CTL_INFO, *P_CTL_INFO;

typedef struct _CTL_INFO *PCTL_INFO;

typedef void *HCRYPTMSG;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_ATTR_BLOB;

struct _CERT_TRUST_STATUS {
    DWORD dwErrorStatus;
    DWORD dwInfoStatus;
};

struct _CERT_CHAIN_ELEMENT {
    DWORD cbSize;
    PCCERT_CONTEXT pCertContext;
    CERT_TRUST_STATUS TrustStatus;
    PCERT_REVOCATION_INFO pRevocationInfo;
    PCERT_ENHKEY_USAGE pIssuanceUsage;
    PCERT_ENHKEY_USAGE pApplicationUsage;
    LPCWSTR pwszExtendedErrorInfo;
};

struct _CERT_SIMPLE_CHAIN {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cElement;
    PCERT_CHAIN_ELEMENT *rgpElement;
    PCERT_TRUST_LIST_INFO pTrustListInfo;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
};

struct _CTL_INFO {
    DWORD dwVersion;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    CRYPT_INTEGER_BLOB SequenceNumber;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    DWORD cCTLEntry;
    PCTL_ENTRY rgCTLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CERT_REVOCATION_INFO {
    DWORD cbSize;
    DWORD dwRevocationResult;
    LPCSTR pszRevocationOid;
    LPVOID pvOidSpecificInfo;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
    PCERT_REVOCATION_CRL_INFO pCrlInfo;
};

struct _CTL_CONTEXT {
    DWORD dwMsgAndCertEncodingType;
    BYTE *pbCtlEncoded;
    DWORD cbCtlEncoded;
    PCTL_INFO pCtlInfo;
    HCERTSTORE hCertStore;
    HCRYPTMSG hCryptMsg;
    BYTE *pbCtlContent;
    DWORD cbCtlContent;
};

struct _CERT_CHAIN_CONTEXT {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cChain;
    PCERT_SIMPLE_CHAIN *rgpChain;
    DWORD cLowerQualityChainContext;
    PCCERT_CHAIN_CONTEXT *rgpLowerQualityChainContext;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
};

struct _CRYPT_ATTRIBUTE {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_ATTR_BLOB rgValue;
};

struct _CERT_TRUST_LIST_INFO {
    DWORD cbSize;
    PCTL_ENTRY pCtlEntry;
    PCCTL_CONTEXT pCtlContext;
};

struct _CTL_ENTRY {
    CRYPT_DATA_BLOB SubjectIdentifier;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE _CRYPT_ATTRIBUTE_TYPE_VALUE, *P_CRYPT_ATTRIBUTE_TYPE_VALUE;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE CRYPT_ATTRIBUTE_TYPE_VALUE;

struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _CERT_SIGNED_CONTENT_INFO _CERT_SIGNED_CONTENT_INFO, *P_CERT_SIGNED_CONTENT_INFO;

typedef struct _CERT_SIGNED_CONTENT_INFO CERT_SIGNED_CONTENT_INFO;

typedef struct _CRYPTOAPI_BLOB CRYPT_DER_BLOB;

struct _CERT_SIGNED_CONTENT_INFO {
    CRYPT_DER_BLOB ToBeSigned;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CRYPT_BIT_BLOB Signature;
};

typedef struct _CERT_SYSTEM_STORE_INFO _CERT_SYSTEM_STORE_INFO, *P_CERT_SYSTEM_STORE_INFO;

typedef struct _CERT_SYSTEM_STORE_INFO CERT_SYSTEM_STORE_INFO;

struct _CERT_SYSTEM_STORE_INFO {
    DWORD cbSize;
};

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO _CERT_KEY_USAGE_RESTRICTION_INFO, *P_CERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_POLICY_ID _CERT_POLICY_ID, *P_CERT_POLICY_ID;

typedef struct _CERT_POLICY_ID *PCERT_POLICY_ID;

struct _CERT_KEY_USAGE_RESTRICTION_INFO {
    DWORD cCertPolicyId;
    PCERT_POLICY_ID rgCertPolicyId;
    CRYPT_BIT_BLOB RestrictedKeyUsage;
};

struct _CERT_POLICY_ID {
    DWORD cCertPolicyElementId;
    LPSTR *rgpszCertPolicyElementId;
};

typedef struct _CRYPTOAPI_BLOB CRYPT_UINT_BLOB;

typedef struct _CRYPT_BLOB_ARRAY _CRYPT_BLOB_ARRAY, *P_CRYPT_BLOB_ARRAY;

typedef struct _CRYPT_BLOB_ARRAY CRYPT_BLOB_ARRAY;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DATA_BLOB;

struct _CRYPT_BLOB_ARRAY {
    DWORD cBlob;
    PCRYPT_DATA_BLOB rgBlob;
};

typedef struct _CMC_TAGGED_CERT_REQUEST _CMC_TAGGED_CERT_REQUEST, *P_CMC_TAGGED_CERT_REQUEST;

struct _CMC_TAGGED_CERT_REQUEST {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB SignedCertRequest;
};

typedef struct _CERT_CREATE_CONTEXT_PARA _CERT_CREATE_CONTEXT_PARA, *P_CERT_CREATE_CONTEXT_PARA;

typedef void (*PFN_CRYPT_FREE)(LPVOID);

struct _CERT_CREATE_CONTEXT_PARA {
    DWORD cbSize;
    PFN_CRYPT_FREE pfnFree;
    void *pvFree;
};

typedef struct _CRYPT_URL_ARRAY _CRYPT_URL_ARRAY, *P_CRYPT_URL_ARRAY;

typedef struct _CRYPT_URL_ARRAY *PCRYPT_URL_ARRAY;

struct _CRYPT_URL_ARRAY {
    DWORD cUrl;
    LPWSTR *rgwszUrl;
};

typedef struct _CRYPT_OID_INFO _CRYPT_OID_INFO, *P_CRYPT_OID_INFO;

typedef union _union_1045 _union_1045, *P_union_1045;

union _union_1045 {
    DWORD dwValue;
    ALG_ID Algid;
    DWORD dwLength;
};

struct _CRYPT_OID_INFO {
    DWORD cbSize;
    LPCSTR pszOID;
    LPCWSTR pwszName;
    DWORD dwGroupId;
    union _union_1045 field4_0x10;
    CRYPT_DATA_BLOB ExtraInfo;
};

typedef struct _CERT_CHAIN _CERT_CHAIN, *P_CERT_CHAIN;

typedef struct _CRYPTOAPI_BLOB *PCERT_BLOB;

typedef struct _CRYPT_KEY_PROV_INFO _CRYPT_KEY_PROV_INFO, *P_CRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_INFO CRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_PARAM _CRYPT_KEY_PROV_PARAM, *P_CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_KEY_PROV_PARAM *PCRYPT_KEY_PROV_PARAM;

struct _CRYPT_KEY_PROV_PARAM {
    DWORD dwParam;
    BYTE *pbData;
    DWORD cbData;
    DWORD dwFlags;
};

struct _CRYPT_KEY_PROV_INFO {
    LPWSTR pwszContainerName;
    LPWSTR pwszProvName;
    DWORD dwProvType;
    DWORD dwFlags;
    DWORD cProvParam;
    PCRYPT_KEY_PROV_PARAM rgProvParam;
    DWORD dwKeySpec;
};

struct _CERT_CHAIN {
    DWORD cCerts;
    PCERT_BLOB certs;
    CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

typedef struct _CMSG_CMS_SIGNER_INFO _CMSG_CMS_SIGNER_INFO, *P_CMSG_CMS_SIGNER_INFO;

typedef struct _CRYPT_ATTRIBUTES _CRYPT_ATTRIBUTES, *P_CRYPT_ATTRIBUTES;

typedef struct _CRYPT_ATTRIBUTES CRYPT_ATTRIBUTES;

struct _CRYPT_ATTRIBUTES {
    DWORD cAttr;
    PCRYPT_ATTRIBUTE rgAttr;
};

struct _CMSG_CMS_SIGNER_INFO {
    DWORD dwVersion;
    CERT_ID SignerId;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _PUBKEY _PUBKEY, *P_PUBKEY;

typedef struct _PUBKEY TEKPUBKEY;

struct _PUBKEY {
    DWORD magic;
    DWORD bitlen;
};

typedef struct _CERT_NAME_INFO _CERT_NAME_INFO, *P_CERT_NAME_INFO;

typedef struct _CERT_NAME_INFO *PCERT_NAME_INFO;

typedef struct _CERT_RDN _CERT_RDN, *P_CERT_RDN;

typedef struct _CERT_RDN *PCERT_RDN;

typedef struct _CERT_RDN_ATTR _CERT_RDN_ATTR, *P_CERT_RDN_ATTR;

typedef struct _CERT_RDN_ATTR *PCERT_RDN_ATTR;

typedef struct _CRYPTOAPI_BLOB CERT_RDN_VALUE_BLOB;

struct _CERT_RDN {
    DWORD cRDNAttr;
    PCERT_RDN_ATTR rgRDNAttr;
};

struct _CERT_RDN_ATTR {
    LPSTR pszObjId;
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

struct _CERT_NAME_INFO {
    DWORD cRDN;
    PCERT_RDN rgRDN;
};

typedef struct _CRYPT_PRIVATE_KEY_INFO _CRYPT_PRIVATE_KEY_INFO, *P_CRYPT_PRIVATE_KEY_INFO;

typedef struct _CRYPT_PRIVATE_KEY_INFO CRYPT_PRIVATE_KEY_INFO;

typedef BOOL (*PFN_IMPORT_PRIV_KEY_FUNC)(HCRYPTPROV, CRYPT_PRIVATE_KEY_INFO *, DWORD, void *);

typedef struct _CRYPT_ATTRIBUTES *PCRYPT_ATTRIBUTES;

struct _CRYPT_PRIVATE_KEY_INFO {
    DWORD Version;
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_DER_BLOB PrivateKey;
    PCRYPT_ATTRIBUTES pAttributes;
};

typedef struct _CMC_TAGGED_CERT_REQUEST CMC_TAGGED_CERT_REQUEST;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO _CMSG_ENCRYPTED_ENCODE_INFO, *P_CMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO *PCMSG_ENCRYPTED_ENCODE_INFO;

struct _CMSG_ENCRYPTED_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
};

typedef struct _CRYPTOAPI_BLOB CRL_BLOB;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    BOOL fCommercial;
};

typedef struct _CRYPT_SIGN_MESSAGE_PARA _CRYPT_SIGN_MESSAGE_PARA, *P_CRYPT_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_SIGN_MESSAGE_PARA *PCRYPT_SIGN_MESSAGE_PARA;

struct _CRYPT_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    PCCERT_CONTEXT pSigningCert;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    DWORD cMsgCert;
    PCCERT_CONTEXT *rgpMsgCert;
    DWORD cMsgCrl;
    PCCRL_CONTEXT *rgpMsgCrl;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS _CRYPT_RC2_CBC_PARAMETERS, *P_CRYPT_RC2_CBC_PARAMETERS;

struct _CRYPT_RC2_CBC_PARAMETERS {
    DWORD dwVersion;
    BOOL fIV;
    BYTE rgbIV[8];
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO _CMSG_MAIL_LIST_ENCRYPT_INFO, *P_CMSG_MAIL_LIST_ENCRYPT_INFO;

struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef CRYPT_ATTRIBUTES CMSG_ATTR;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef union _union_1058.conflict _union_1058.conflict, *P_union_1058.conflict;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE *PCRYPT_ATTRIBUTE_TYPE_VALUE;

typedef ULONG_PTR HCRYPTKEY;

union _union_1058.conflict {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeyChoice;
    union _union_1058.conflict field5_0x1c;
    CRYPT_DATA_BLOB KeyId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CRYPT_OID_INFO *PCRYPT_OID_INFO;

typedef struct _PUBKEY KEAPUBKEY;

typedef struct _CERT_ACCESS_DESCRIPTION _CERT_ACCESS_DESCRIPTION, *P_CERT_ACCESS_DESCRIPTION;

typedef struct _CERT_ALT_NAME_ENTRY CERT_ALT_NAME_ENTRY;

struct _CERT_ACCESS_DESCRIPTION {
    LPSTR pszAccessMethod;
    CERT_ALT_NAME_ENTRY AccessLocation;
};

typedef struct _CRL_DIST_POINTS_INFO _CRL_DIST_POINTS_INFO, *P_CRL_DIST_POINTS_INFO;

typedef struct _CRL_DIST_POINT _CRL_DIST_POINT, *P_CRL_DIST_POINT;

typedef struct _CRL_DIST_POINT *PCRL_DIST_POINT;

typedef struct _CRL_DIST_POINT_NAME _CRL_DIST_POINT_NAME, *P_CRL_DIST_POINT_NAME;

typedef struct _CRL_DIST_POINT_NAME CRL_DIST_POINT_NAME;

typedef struct _CERT_ALT_NAME_INFO CERT_ALT_NAME_INFO;

typedef union _union_1013 _union_1013, *P_union_1013;

union _union_1013 {
    CERT_ALT_NAME_INFO FullName;
};

struct _CRL_DIST_POINT_NAME {
    DWORD dwDistPointNameChoice;
    union _union_1013 field1_0x4;
};

struct _CRL_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    CRYPT_BIT_BLOB ReasonFlags;
    CERT_ALT_NAME_INFO CRLIssuer;
};

struct _CRL_DIST_POINTS_INFO {
    DWORD cDistPoint;
    PCRL_DIST_POINT rgDistPoint;
};

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *P_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO _CMSG_MAIL_LIST_RECIPIENT_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO *PCMSG_MAIL_LIST_RECIPIENT_INFO;

typedef union _union_1082 _union_1082, *P_union_1082;

union _union_1082 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
    DWORD dwRecipientIndex;
    DWORD dwKeyChoice;
    union _union_1082 field5_0x14;
};

struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
    DWORD dwVersion;
    CRYPT_DATA_BLOB KeyId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CERT_GENERAL_SUBTREE _CERT_GENERAL_SUBTREE, *P_CERT_GENERAL_SUBTREE;

typedef struct _CERT_GENERAL_SUBTREE CERT_GENERAL_SUBTREE;

struct _CERT_GENERAL_SUBTREE {
    CERT_ALT_NAME_ENTRY Base;
    DWORD dwMinimum;
    BOOL fMaximum;
    DWORD dwMaximum;
};

typedef struct _CMS_KEY_INFO _CMS_KEY_INFO, *P_CMS_KEY_INFO;

struct _CMS_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    BYTE *pbOID;
    DWORD cbOID;
};

typedef struct _CRYPT_KEY_LIMITS_V01 _CRYPT_KEY_LIMITS_V01, *P_CRYPT_KEY_LIMITS_V01;

typedef struct _CRYPT_KEY_LIMITS_V01 *PCRYPT_KEY_LIMITS;

struct _CRYPT_KEY_LIMITS_V01 {
    DWORD dwVersion;
    ALG_ID algId;
    DWORD dwMinKeyLength;
    DWORD dwMaxKeyLength;
    DWORD dwRequiredFlags;
    DWORD dwDisallowedFlags;
};

typedef struct _CRYPT_SMIME_CAPABILITIES _CRYPT_SMIME_CAPABILITIES, *P_CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITIES CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITY _CRYPT_SMIME_CAPABILITY, *P_CRYPT_SMIME_CAPABILITY;

typedef struct _CRYPT_SMIME_CAPABILITY *PCRYPT_SMIME_CAPABILITY;

struct _CRYPT_SMIME_CAPABILITIES {
    DWORD cCapability;
    PCRYPT_SMIME_CAPABILITY rgCapability;
};

struct _CRYPT_SMIME_CAPABILITY {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

typedef struct _CRYPTOAPI_BLOB CERT_BLOB;

typedef struct _CERT_NAME_CONSTRAINTS_INFO _CERT_NAME_CONSTRAINTS_INFO, *P_CERT_NAME_CONSTRAINTS_INFO;

typedef struct _CERT_GENERAL_SUBTREE *PCERT_GENERAL_SUBTREE;

struct _CERT_NAME_CONSTRAINTS_INFO {
    DWORD cPermittedSubtree;
    PCERT_GENERAL_SUBTREE rgPermittedSubtree;
    DWORD cExcludedSubtree;
    PCERT_GENERAL_SUBTREE rgExcludedSubtree;
};

typedef struct _CRL_REVOCATION_INFO _CRL_REVOCATION_INFO, *P_CRL_REVOCATION_INFO;

typedef struct _CRL_REVOCATION_INFO *PCRL_REVOCATION_INFO;

struct _CRL_REVOCATION_INFO {
    PCRL_ENTRY pCrlEntry;
    PCCRL_CONTEXT pCrlContext;
    PCCERT_CHAIN_CONTEXT pCrlIssuerChain;
};

typedef struct _CTL_FIND_SUBJECT_PARA _CTL_FIND_SUBJECT_PARA, *P_CTL_FIND_SUBJECT_PARA;

struct _CTL_FIND_SUBJECT_PARA {
    DWORD cbSize;
    PCTL_FIND_USAGE_PARA pUsagePara;
    DWORD dwSubjectType;
    void *pvSubject;
};

typedef struct _CERT_DH_PARAMETERS _CERT_DH_PARAMETERS, *P_CERT_DH_PARAMETERS;

typedef struct _CERT_DH_PARAMETERS *PCERT_DH_PARAMETERS;

struct _CERT_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
};

typedef struct _CERT_PHYSICAL_STORE_INFO _CERT_PHYSICAL_STORE_INFO, *P_CERT_PHYSICAL_STORE_INFO;

struct _CERT_PHYSICAL_STORE_INFO {
    DWORD cbSize;
    LPSTR pszOpenStoreProvider;
    DWORD dwOpenEncodingType;
    DWORD dwOpenFlags;
    CRYPT_DATA_BLOB OpenParameters;
    DWORD dwFlags;
    DWORD dwPriority;
};

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *P_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO _CMSG_SIGNED_ENCODE_INFO, *P_CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO _CMSG_ENVELOPED_ENCODE_INFO, *P_CMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO CMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO _CMSG_SIGNER_ENCODE_INFO, *P_CMSG_SIGNER_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO *PCMSG_SIGNER_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRL_BLOB;

struct _CMSG_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCERT_INFO *rgpRecipients;
};

struct _CMSG_SIGNED_ENCODE_INFO {
    DWORD cbSize;
    DWORD cSigners;
    PCMSG_SIGNER_ENCODE_INFO rgSigners;
    DWORD cCertEncoded;
    PCERT_BLOB rgCertEncoded;
    DWORD cCrlEncoded;
    PCRL_BLOB rgCrlEncoded;
};

struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    CMSG_SIGNED_ENCODE_INFO SignedInfo;
    CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

struct _CMSG_SIGNER_ENCODE_INFO {
    DWORD cbSize;
    PCERT_INFO pCertInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *P_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO _CMSG_KEY_AGREE_RECIPIENT_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO *PCMSG_KEY_AGREE_RECIPIENT_INFO;

typedef union _union_1073 _union_1073, *P_union_1073;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

union _union_1073 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
    DWORD dwVersion;
    DWORD dwOriginatorChoice;
    union _union_1073 field2_0x8;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO *rgpRecipientEncryptedKeys;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
    CERT_ID RecipientId;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    DWORD dwRecipientIndex;
    DWORD dwRecipientEncryptedKeyIndex;
    CRYPT_BIT_BLOB OriginatorPublicKey;
};

typedef struct _PUBKEYVER3 _PUBKEYVER3, *P_PUBKEYVER3;

typedef struct _PUBKEYVER3 DSSPUBKEY_VER3;

typedef struct _DSSSEED _DSSSEED, *P_DSSSEED;

typedef struct _DSSSEED DSSSEED;

struct _DSSSEED {
    DWORD counter;
    BYTE seed[20];
};

struct _PUBKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DSSSEED DSSSeed;
};

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef struct _CERT_CHAIN_POLICY_STATUS _CERT_CHAIN_POLICY_STATUS, *P_CERT_CHAIN_POLICY_STATUS;

typedef struct _CERT_CHAIN_POLICY_STATUS CERT_CHAIN_POLICY_STATUS;

struct _CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    DWORD dwError;
    LONG lChainIndex;
    LONG lElementIndex;
    void *pvExtraPolicyStatus;
};

typedef struct _CMC_DATA_INFO _CMC_DATA_INFO, *P_CMC_DATA_INFO;

typedef struct _CMC_TAGGED_ATTRIBUTE _CMC_TAGGED_ATTRIBUTE, *P_CMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_ATTRIBUTE *PCMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_REQUEST _CMC_TAGGED_REQUEST, *P_CMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_REQUEST *PCMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_CONTENT_INFO _CMC_TAGGED_CONTENT_INFO, *P_CMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_CONTENT_INFO *PCMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_OTHER_MSG _CMC_TAGGED_OTHER_MSG, *P_CMC_TAGGED_OTHER_MSG;

typedef struct _CMC_TAGGED_OTHER_MSG *PCMC_TAGGED_OTHER_MSG;

typedef struct _CRYPT_ATTRIBUTE CRYPT_ATTRIBUTE;

typedef union _union_1032 _union_1032, *P_union_1032;

typedef struct _CMC_TAGGED_CERT_REQUEST *PCMC_TAGGED_CERT_REQUEST;

struct _CMC_DATA_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedRequest;
    PCMC_TAGGED_REQUEST rgTaggedRequest;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

union _union_1032 {
    PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest;
};

struct _CMC_TAGGED_OTHER_MSG {
    DWORD dwBodyPartID;
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

struct _CMC_TAGGED_REQUEST {
    DWORD dwTaggedRequestChoice;
    union _union_1032 field1_0x4;
};

struct _CMC_TAGGED_CONTENT_INFO {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB EncodedContentInfo;
};

struct _CMC_TAGGED_ATTRIBUTE {
    DWORD dwBodyPartID;
    CRYPT_ATTRIBUTE Attribute;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO _CMSG_KEY_TRANS_ENCRYPT_INFO, *P_CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO *PCMSG_KEY_TRANS_ENCRYPT_INFO;

struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO CMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CRYPTOAPI_BLOB DATA_BLOB;

typedef struct _CTL_VERIFY_USAGE_STATUS _CTL_VERIFY_USAGE_STATUS, *P_CTL_VERIFY_USAGE_STATUS;

struct _CTL_VERIFY_USAGE_STATUS {
    DWORD cbSize;
    DWORD dwError;
    DWORD dwFlags;
    PCCTL_CONTEXT *ppCtl;
    DWORD dwCtlEntryIndex;
    PCCERT_CONTEXT *ppSigner;
    DWORD dwSignerIndex;
};

typedef struct _CERT_POLICY_QUALIFIER_INFO _CERT_POLICY_QUALIFIER_INFO, *P_CERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO CERT_POLICY_QUALIFIER_INFO;

struct _CERT_POLICY_QUALIFIER_INFO {
    LPSTR pszPolicyQualifierId;
    CRYPT_OBJID_BLOB Qualifier;
};

typedef struct _CERT_CRL_CONTEXT_PAIR _CERT_CRL_CONTEXT_PAIR, *P_CERT_CRL_CONTEXT_PAIR;

struct _CERT_CRL_CONTEXT_PAIR {
    PCCERT_CONTEXT pCertContext;
    PCCRL_CONTEXT pCrlContext;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO _CMC_ADD_ATTRIBUTES_INFO, *P_CMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMC_ADD_ATTRIBUTES_INFO *PCMC_ADD_ATTRIBUTES_INFO;

struct _CMC_ADD_ATTRIBUTES_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD *rgdwCertReference;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO _CMSG_SP3_COMPATIBLE_AUX_INFO, *P_CMSG_SP3_COMPATIBLE_AUX_INFO;

struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
    DWORD cbSize;
    DWORD dwFlags;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSA _CRYPT_PASSWORD_CREDENTIALSA, *P_CRYPT_PASSWORD_CREDENTIALSA;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALSA;

typedef CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS;

struct _CRYPT_PASSWORD_CREDENTIALSA {
    DWORD cbSize;
    LPSTR pszUsername;
    LPSTR pszPassword;
};

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _PUBKEYVER3 DHPUBKEY_VER3;

typedef struct _CRYPT_OID_FUNC_ENTRY _CRYPT_OID_FUNC_ENTRY, *P_CRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_OID_FUNC_ENTRY CRYPT_OID_FUNC_ENTRY;

struct _CRYPT_OID_FUNC_ENTRY {
    LPCSTR pszOID;
    void *pvFuncAddr;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _KEY_TYPE_SUBTYPE _KEY_TYPE_SUBTYPE, *P_KEY_TYPE_SUBTYPE;

struct _KEY_TYPE_SUBTYPE {
    DWORD dwKeySpec;
    GUID Type;
    GUID Subtype;
};

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA _CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *P_CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
    HKEY hKeyBase;
    LPWSTR pwszRegPath;
};

typedef struct _CRYPTPROTECT_PROMPTSTRUCT _CRYPTPROTECT_PROMPTSTRUCT, *P_CRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT *PCRYPTPROTECT_PROMPTSTRUCT;

struct _CRYPTPROTECT_PROMPTSTRUCT {
    DWORD cbSize;
    DWORD dwPromptFlags;
    HWND hwndApp;
    LPCWSTR szPrompt;
};

typedef struct _CMSG_RECIPIENT_ENCODE_INFO _CMSG_RECIPIENT_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCODE_INFO;

typedef union _union_1060.conflict _union_1060.conflict, *P_union_1060.conflict;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef union _union_1056 _union_1056, *P_union_1056;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER *PCRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CERT_ID *PCERT_ID;

union _union_1056 {
    PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
    PCERT_ID pSenderId;
};

struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    HCRYPTPROV hCryptProv;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
};

union _union_1060.conflict {
    PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList;
};

struct _CMSG_RECIPIENT_ENCODE_INFO {
    DWORD dwRecipientChoice;
    union _union_1060.conflict field1_0x4;
};

struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
    void *pvKeyWrapAuxInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    DWORD dwKeyChoice;
    union _union_1056 field8_0x30;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *rgpRecipientEncryptedKeys;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CERT_NAME_INFO CERT_NAME_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO *PCMSG_SIGNED_ENCODE_INFO;

typedef struct _CERT_REVOCATION_STATUS _CERT_REVOCATION_STATUS, *P_CERT_REVOCATION_STATUS;

struct _CERT_REVOCATION_STATUS {
    DWORD cbSize;
    DWORD dwIndex;
    DWORD dwError;
    DWORD dwReason;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
};

typedef struct _CRYPT_CREDENTIALS _CRYPT_CREDENTIALS, *P_CRYPT_CREDENTIALS;

struct _CRYPT_CREDENTIALS {
    DWORD cbSize;
    LPCSTR pszCredentialsOid;
    LPVOID pvCredentials;
};

typedef struct _CERT_X942_DH_VALIDATION_PARAMS _CERT_X942_DH_VALIDATION_PARAMS, *P_CERT_X942_DH_VALIDATION_PARAMS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS CERT_X942_DH_VALIDATION_PARAMS;

struct _CERT_X942_DH_VALIDATION_PARAMS {
    CRYPT_BIT_BLOB seed;
    DWORD pgenCounter;
};

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS _CRYPT_PKCS8_EXPORT_PARAMS, *P_CRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS *PCRYPT_PKCS8_EXPORT_PARAMS;

typedef BOOL (*PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER *, CRYPT_DATA_BLOB *, BYTE *, DWORD *, LPVOID);

struct _CRYPT_PKCS8_EXPORT_PARAMS {
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    LPSTR pszPrivateKeyObjId;
    PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc;
    LPVOID pVoidEncryptFunc;
};

typedef struct _CERT_POLICY_MAPPING _CERT_POLICY_MAPPING, *P_CERT_POLICY_MAPPING;

typedef struct _CERT_POLICY_MAPPING CERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPING {
    LPSTR pszIssuerDomainPolicy;
    LPSTR pszSubjectDomainPolicy;
};

typedef struct _CMC_STATUS_INFO _CMC_STATUS_INFO, *P_CMC_STATUS_INFO;

typedef struct _CMC_STATUS_INFO *PCMC_STATUS_INFO;

typedef union _union_1039 _union_1039, *P_union_1039;

typedef struct _CMC_PEND_INFO _CMC_PEND_INFO, *P_CMC_PEND_INFO;

typedef struct _CMC_PEND_INFO *PCMC_PEND_INFO;

union _union_1039 {
    DWORD dwFailInfo;
    PCMC_PEND_INFO pPendInfo;
};

struct _CMC_STATUS_INFO {
    DWORD dwStatus;
    DWORD cBodyList;
    DWORD *rgdwBodyList;
    LPWSTR pwszStatusString;
    DWORD dwOtherInfoChoice;
    union _union_1039 field5_0x14;
};

struct _CMC_PEND_INFO {
    CRYPT_DATA_BLOB PendToken;
    FILETIME PendTime;
};

typedef struct _CTL_FIND_SUBJECT_PARA CTL_FIND_SUBJECT_PARA;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *P_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedPrivateKey;
};

typedef struct _CRYPT_HASH_MESSAGE_PARA _CRYPT_HASH_MESSAGE_PARA, *P_CRYPT_HASH_MESSAGE_PARA;

typedef struct _CRYPT_HASH_MESSAGE_PARA *PCRYPT_HASH_MESSAGE_PARA;

struct _CRYPT_HASH_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS _CERT_AUTHORITY_INFO_ACCESS, *P_CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_AUTHORITY_INFO_ACCESS CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_ACCESS_DESCRIPTION *PCERT_ACCESS_DESCRIPTION;

struct _CERT_AUTHORITY_INFO_ACCESS {
    DWORD cAccDescr;
    PCERT_ACCESS_DESCRIPTION rgAccDescr;
};

typedef struct _CERT_CHAIN *PCERT_CHAIN;

typedef struct _CERT_KEY_CONTEXT _CERT_KEY_CONTEXT, *P_CERT_KEY_CONTEXT;

struct _CERT_KEY_CONTEXT {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
};

typedef struct _CMC_TAGGED_OTHER_MSG CMC_TAGGED_OTHER_MSG;

typedef struct _CTL_VERIFY_USAGE_PARA _CTL_VERIFY_USAGE_PARA, *P_CTL_VERIFY_USAGE_PARA;

struct _CTL_VERIFY_USAGE_PARA {
    DWORD cbSize;
    CRYPT_DATA_BLOB ListIdentifier;
    DWORD cCtlStore;
    HCERTSTORE *rghCtlStore;
    DWORD cSignerStore;
    HCERTSTORE *rghSignerStore;
};

typedef struct _CMC_TAGGED_REQUEST CMC_TAGGED_REQUEST;

typedef struct _CRYPT_VERIFY_MESSAGE_PARA _CRYPT_VERIFY_MESSAGE_PARA, *P_CRYPT_VERIFY_MESSAGE_PARA;

typedef PCCERT_CONTEXT (*PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *, DWORD, PCERT_INFO, HCERTSTORE);

struct _CRYPT_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    HCRYPTPROV hCryptProv;
    PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
    void *pvGetArg;
};

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA _CERT_SYSTEM_STORE_RELOCATE_PARA, *P_CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef union _union_1098 _union_1098, *P_union_1098;

typedef union _union_1099 _union_1099, *P_union_1099;

union _union_1098 {
    HKEY hKeyBase;
    void *pvBase;
};

union _union_1099 {
    void *pvSystemStore;
    LPCSTR pszSystemStore;
    LPCWSTR pwszSystemStore;
};

struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
    union _union_1098 field0_0x0;
    union _union_1099 field1_0x4;
};

typedef struct _CERT_STORE_PROV_FIND_INFO _CERT_STORE_PROV_FIND_INFO, *P_CERT_STORE_PROV_FIND_INFO;

typedef struct _CERT_STORE_PROV_FIND_INFO *PCERT_STORE_PROV_FIND_INFO;

struct _CERT_STORE_PROV_FIND_INFO {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD dwFindFlags;
    DWORD dwFindType;
    void *pvFindPara;
};

typedef BOOL (*PFN_EXPORT_PRIV_KEY_FUNC)(HCRYPTPROV, DWORD, LPSTR, DWORD, void *, CRYPT_PRIVATE_KEY_INFO *, DWORD *);

typedef struct _CERT_CHAIN_POLICY_PARA _CERT_CHAIN_POLICY_PARA, *P_CERT_CHAIN_POLICY_PARA;

struct _CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwFlags;
    void *pvExtraPolicyPara;
};

typedef struct _CMSG_ENVELOPED_ENCODE_INFO *PCMSG_ENVELOPED_ENCODE_INFO;

typedef ULONG_PTR HCRYPTHASH;

typedef struct _CERT_STORE_PROV_FIND_INFO CERT_STORE_PROV_FIND_INFO;

typedef CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO;

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CRYPT_URL_INFO _CRYPT_URL_INFO, *P_CRYPT_URL_INFO;

typedef struct _CRYPT_URL_INFO CRYPT_URL_INFO;

struct _CRYPT_URL_INFO {
    DWORD cbSize;
    DWORD dwSyncDeltaTime;
    DWORD cGroup;
    DWORD *rgcGroupEntry;
};

typedef struct _HMAC_Info _HMAC_Info, *P_HMAC_Info;

typedef struct _HMAC_Info HMAC_INFO;

struct _HMAC_Info {
    ALG_ID HashAlgid;
    BYTE *pbInnerString;
    DWORD cbInnerString;
    BYTE *pbOuterString;
    DWORD cbOuterString;
};

typedef struct _PUBKEY DHPUBKEY;

typedef struct _CMC_PEND_INFO CMC_PEND_INFO;

typedef struct _CERT_POLICY_INFO _CERT_POLICY_INFO, *P_CERT_POLICY_INFO;

struct _CERT_POLICY_INFO {
    LPSTR pszPolicyIdentifier;
    DWORD cPolicyQualifier;
    CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

typedef struct _CERT_EXTENSIONS _CERT_EXTENSIONS, *P_CERT_EXTENSIONS;

struct _CERT_EXTENSIONS {
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CMSG_CMS_SIGNER_INFO CMSG_CMS_SIGNER_INFO;

typedef struct _SCHANNEL_ALG _SCHANNEL_ALG, *P_SCHANNEL_ALG;

struct _SCHANNEL_ALG {
    DWORD dwUse;
    ALG_ID Algid;
    DWORD cBits;
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct _CERT_EXTENSIONS *PCERT_EXTENSIONS;

typedef struct _CTL_ANY_SUBJECT_INFO _CTL_ANY_SUBJECT_INFO, *P_CTL_ANY_SUBJECT_INFO;

typedef struct _CTL_ANY_SUBJECT_INFO CTL_ANY_SUBJECT_INFO;

struct _CTL_ANY_SUBJECT_INFO {
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    CRYPT_DATA_BLOB SubjectIdentifier;
};

typedef struct _CERT_NAME_VALUE _CERT_NAME_VALUE, *P_CERT_NAME_VALUE;

typedef struct _CERT_NAME_VALUE CERT_NAME_VALUE;

struct _CERT_NAME_VALUE {
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

typedef struct _CMSG_HASHED_ENCODE_INFO _CMSG_HASHED_ENCODE_INFO, *P_CMSG_HASHED_ENCODE_INFO;

struct _CMSG_HASHED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
};

typedef struct _CERT_CHAIN_POLICY_PARA CERT_CHAIN_POLICY_PARA;

typedef struct _PUBLICKEYSTRUC _PUBLICKEYSTRUC, *P_PUBLICKEYSTRUC;

typedef struct _PUBLICKEYSTRUC PUBLICKEYSTRUC;

struct _PUBLICKEYSTRUC {
    BYTE bType;
    BYTE bVersion;
    WORD reserved;
    ALG_ID aiKeyAlg;
};

typedef struct _CRYPT_URL_INFO *PCRYPT_URL_INFO;

typedef struct _CERT_TRUST_LIST_INFO CERT_TRUST_LIST_INFO;

typedef struct _CERT_X942_DH_PARAMETERS _CERT_X942_DH_PARAMETERS, *P_CERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_PARAMETERS *PCERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS *PCERT_X942_DH_VALIDATION_PARAMS;

struct _CERT_X942_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB j;
    PCERT_X942_DH_VALIDATION_PARAMS pValidationParams;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    DWORD dwUnauthAttrIndex;
};

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO _CERT_BASIC_CONSTRAINTS2_INFO, *P_CERT_BASIC_CONSTRAINTS2_INFO;

struct _CERT_BASIC_CONSTRAINTS2_INFO {
    BOOL fCA;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
};

typedef struct _CMC_DATA_INFO CMC_DATA_INFO;

typedef struct _CMS_DH_KEY_INFO _CMS_DH_KEY_INFO, *P_CMS_DH_KEY_INFO;

struct _CMS_DH_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    LPSTR pszContentEncObjId;
    CRYPT_DATA_BLOB PubInfo;
    void *pReserved;
};

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *P_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef BOOL (*PFN_CMSG_IMPORT_KEY_TRANS)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO _CMSG_KEY_TRANS_RECIPIENT_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO *PCMSG_KEY_TRANS_RECIPIENT_INFO;

struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
    DWORD dwVersion;
    CERT_ID RecipientId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
};

struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    DWORD dwRecipientIndex;
};

typedef struct _CRYPT_ENCODE_PARA _CRYPT_ENCODE_PARA, *P_CRYPT_ENCODE_PARA;

typedef LPVOID (*PFN_CRYPT_ALLOC)(size_t);

struct _CRYPT_ENCODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CERT_CHAIN_PARA _CERT_CHAIN_PARA, *P_CERT_CHAIN_PARA;

typedef struct _CERT_CHAIN_PARA CERT_CHAIN_PARA;

typedef struct _CERT_USAGE_MATCH _CERT_USAGE_MATCH, *P_CERT_USAGE_MATCH;

typedef struct _CERT_USAGE_MATCH CERT_USAGE_MATCH;

typedef struct _CTL_USAGE CERT_ENHKEY_USAGE;

struct _CERT_USAGE_MATCH {
    DWORD dwType;
    CERT_ENHKEY_USAGE Usage;
};

struct _CERT_CHAIN_PARA {
    DWORD cbSize;
    CERT_USAGE_MATCH RequestedUsage;
};

typedef struct _CRYPT_DECODE_PARA _CRYPT_DECODE_PARA, *P_CRYPT_DECODE_PARA;

struct _CRYPT_DECODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CRYPT_OID_INFO CRYPT_OID_INFO;

typedef CRYPT_OID_INFO *PCCRYPT_OID_INFO;

typedef BOOL (*PFN_CRYPT_ENUM_OID_INFO)(PCCRYPT_OID_INFO, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, void *, DWORD);

typedef struct _CRYPT_VERIFY_MESSAGE_PARA *PCRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA _CRYPT_KEY_VERIFY_MESSAGE_PARA, *P_CRYPT_KEY_VERIFY_MESSAGE_PARA;

struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
};

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR _CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *P_CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
    LPWSTR pwszName;
    LPWSTR pwszValue;
};

typedef struct _CRYPT_CSP_PROVIDER _CRYPT_CSP_PROVIDER, *P_CRYPT_CSP_PROVIDER;

typedef struct _CRYPT_CSP_PROVIDER CRYPT_CSP_PROVIDER;

struct _CRYPT_CSP_PROVIDER {
    DWORD dwKeySpec;
    LPWSTR pwszProviderName;
    CRYPT_BIT_BLOB Signature;
};

typedef BOOL (*PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(LPCWSTR, DWORD, void *, void *);

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA _CRYPT_KEY_SIGN_MESSAGE_PARA, *P_CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA *PCRYPT_KEY_SIGN_MESSAGE_PARA;

struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef CERT_STORE_PROV_FIND_INFO *PCCERT_STORE_PROV_FIND_INFO;

typedef struct _CERT_CRL_CONTEXT_PAIR CERT_CRL_CONTEXT_PAIR;

typedef struct _CRYPT_HASH_INFO _CRYPT_HASH_INFO, *P_CRYPT_HASH_INFO;

struct _CRYPT_HASH_INFO {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_HASH_BLOB Hash;
};

typedef struct _CMSG_RC2_AUX_INFO _CMSG_RC2_AUX_INFO, *P_CMSG_RC2_AUX_INFO;

typedef struct _CMSG_RC2_AUX_INFO CMSG_RC2_AUX_INFO;

struct _CMSG_RC2_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO _CRYPT_TIME_STAMP_REQUEST_INFO, *P_CRYPT_TIME_STAMP_REQUEST_INFO;

struct _CRYPT_TIME_STAMP_REQUEST_INFO {
    LPSTR pszTimeStampAlgorithm;
    LPSTR pszContentType;
    CRYPT_OBJID_BLOB Content;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CRL_ISSUING_DIST_POINT _CRL_ISSUING_DIST_POINT, *P_CRL_ISSUING_DIST_POINT;

struct _CRL_ISSUING_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    BOOL fOnlyContainsUserCerts;
    BOOL fOnlyContainsCACerts;
    CRYPT_BIT_BLOB OnlySomeReasonFlags;
    BOOL fIndirectCRL;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO *PCRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CMSG_CMS_RECIPIENT_INFO _CMSG_CMS_RECIPIENT_INFO, *P_CMSG_CMS_RECIPIENT_INFO;

typedef struct _CMSG_CMS_RECIPIENT_INFO *PCMSG_CMS_RECIPIENT_INFO;

typedef union _union_1076 _union_1076, *P_union_1076;

union _union_1076 {
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
};

struct _CMSG_CMS_RECIPIENT_INFO {
    DWORD dwRecipientChoice;
    union _union_1076 field1_0x4;
};

typedef struct _CERT_PRIVATE_KEY_VALIDITY _CERT_PRIVATE_KEY_VALIDITY, *P_CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CERT_PRIVATE_KEY_VALIDITY *PCERT_PRIVATE_KEY_VALIDITY;

struct _CERT_PRIVATE_KEY_VALIDITY {
    FILETIME NotBefore;
    FILETIME NotAfter;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMC_RESPONSE_INFO _CMC_RESPONSE_INFO, *P_CMC_RESPONSE_INFO;

typedef struct _CMC_RESPONSE_INFO CMC_RESPONSE_INFO;

struct _CMC_RESPONSE_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *P_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DER_BLOB;

struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *P_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
    LPSTR pszOrganization;
    DWORD cNoticeNumbers;
    int *rgNoticeNumbers;
};

typedef struct _CERT_TEMPLATE_EXT _CERT_TEMPLATE_EXT, *P_CERT_TEMPLATE_EXT;

struct _CERT_TEMPLATE_EXT {
    LPSTR pszObjId;
    DWORD dwMajorVersion;
    BOOL fMinorVersion;
    DWORD dwMinorVersion;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS *PCERT_AUTHORITY_INFO_ACCESS;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    BOOL fCommercial;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO CRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO *PCERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA _CERT_CHAIN_FIND_BY_ISSUER_PARA, *P_CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef BOOL (*PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(PCCERT_CONTEXT, void *);

struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
    DWORD cbSize;
    LPCSTR pszUsageIdentifier;
    DWORD dwKeySpec;
    DWORD dwAcquirePrivateKeyFlags;
    DWORD cIssuer;
    CERT_NAME_BLOB *rgIssuer;
    PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
    void *pvFindArg;
};

typedef void *HCRYPTDEFAULTCONTEXT;

typedef struct _CRYPT_X942_OTHER_INFO _CRYPT_X942_OTHER_INFO, *P_CRYPT_X942_OTHER_INFO;

struct _CRYPT_X942_OTHER_INFO {
    LPSTR pszContentEncryptionObjId;
    BYTE rgbCounter[4];
    BYTE rgbKeyLength[4];
    CRYPT_DATA_BLOB PubInfo;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO _CERT_POLICY_MAPPINGS_INFO, *P_CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_POLICY_MAPPING *PCERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPINGS_INFO {
    DWORD cPolicyMapping;
    PCERT_POLICY_MAPPING rgPolicyMapping;
};

typedef struct _HTTPSPolicyCallbackData _HTTPSPolicyCallbackData, *P_HTTPSPolicyCallbackData;

typedef struct _HTTPSPolicyCallbackData *PHTTPSPolicyCallbackData;

typedef union _union_1154 _union_1154, *P_union_1154;

union _union_1154 {
    DWORD cbStruct;
    DWORD cbSize;
};

struct _HTTPSPolicyCallbackData {
    union _union_1154 field0_0x0;
    DWORD dwAuthType;
    DWORD fdwChecks;
    WCHAR *pwszServerName;
};

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION _CRYPT_ASYNC_RETRIEVAL_COMPLETION, *P_CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef void (*PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(LPVOID, DWORD, LPCSTR, LPSTR, LPVOID);

struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
    PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion;
    LPVOID pvCompletion;
};

typedef struct _CERT_REVOCATION_PARA _CERT_REVOCATION_PARA, *P_CERT_REVOCATION_PARA;

struct _CERT_REVOCATION_PARA {
    DWORD cbSize;
    PCCERT_CONTEXT pIssuerCert;
    DWORD cCertStore;
    HCERTSTORE *rgCertStore;
    HCERTSTORE hCrlStore;
    LPFILETIME pftTimeToUse;
};

typedef struct _CRL_ISSUING_DIST_POINT CRL_ISSUING_DIST_POINT;

typedef struct _CERT_REVOCATION_PARA CERT_REVOCATION_PARA;

typedef struct _CERT_SIGNED_CONTENT_INFO *PCERT_SIGNED_CONTENT_INFO;

typedef struct _CRL_FIND_ISSUED_FOR_PARA _CRL_FIND_ISSUED_FOR_PARA, *P_CRL_FIND_ISSUED_FOR_PARA;

struct _CRL_FIND_ISSUED_FOR_PARA {
    PCCERT_CONTEXT pSubjectCert;
    PCCERT_CONTEXT pIssuerCert;
};

typedef CRYPT_ATTRIBUTES *PCMSG_ATTR;

typedef struct _CRYPT_CREDENTIALS *PCRYPT_CREDENTIALS;

typedef struct _CRYPT_HASH_MESSAGE_PARA CRYPT_HASH_MESSAGE_PARA;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA _CERT_REGISTRY_STORE_ROAMING_PARA, *P_CERT_REGISTRY_STORE_ROAMING_PARA;

struct _CERT_REGISTRY_STORE_ROAMING_PARA {
    HKEY hKey;
    LPWSTR pwszStoreDirectory;
};

typedef struct _CMSG_SIGNER_INFO _CMSG_SIGNER_INFO, *P_CMSG_SIGNER_INFO;

struct _CMSG_SIGNER_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CMSG_SIGNER_INFO *PCMSG_SIGNER_INFO;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    PCMSG_SIGNER_INFO pSignerInfo;
};

typedef BOOL (*PFN_CMSG_STREAM_OUTPUT)(void *, BYTE *, DWORD, BOOL);

typedef struct _CERT_RDN_ATTR CERT_RDN_ATTR;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA *PCERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE _CERT_POLICY_QUALIFIER_USER_NOTICE, *P_CERT_POLICY_QUALIFIER_USER_NOTICE;

struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
    CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
    LPWSTR pszDisplayText;
};

typedef struct _CERT_PHYSICAL_STORE_INFO *PCERT_PHYSICAL_STORE_INFO;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    CRYPT_DATA_BLOB blob;
};

typedef struct _CERT_REVOCATION_PARA *PCERT_REVOCATION_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_CONTROL)(HCERTSTOREPROV, DWORD, DWORD, void *);

typedef struct _CERT_CREATE_CONTEXT_PARA *PCERT_CREATE_CONTEXT_PARA;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO _CMSG_CONTENT_ENCRYPT_INFO, *P_CMSG_CONTENT_ENCRYPT_INFO;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO *PCMSG_RECIPIENT_ENCODE_INFO;

typedef void * (*PFN_CMSG_ALLOC)(size_t);

typedef void (*PFN_CMSG_FREE)(void *);

struct _CMSG_CONTENT_ENCRYPT_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients;
    PFN_CMSG_ALLOC pfnAlloc;
    PFN_CMSG_FREE pfnFree;
    DWORD dwEncryptFlags;
    HCRYPTKEY hContentEncryptKey;
    DWORD dwFlags;
};

typedef CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR;

typedef BOOL (*PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER, CRYPT_DATA_BLOB, BYTE *, DWORD *, LPVOID);

typedef HANDLE *PHCRYPTASYNC;

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef HANDLE HCERTCHAINENGINE;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT CRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CERT_KEY_ATTRIBUTES_INFO _CERT_KEY_ATTRIBUTES_INFO, *P_CERT_KEY_ATTRIBUTES_INFO;

struct _CERT_KEY_ATTRIBUTES_INFO {
    CRYPT_DATA_BLOB KeyId;
    CRYPT_BIT_BLOB IntendedKeyUsage;
    PCERT_PRIVATE_KEY_VALIDITY pPrivateKeyUsagePeriod;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO *PCMSG_CONTENT_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_KEY_TRANS)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, PCMSG_KEY_TRANS_ENCRYPT_INFO, DWORD, void *);

typedef struct _PUBKEY DSSPUBKEY;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS _CRYPT_PKCS8_IMPORT_PARAMS, *P_CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPTOAPI_BLOB CRYPT_DIGEST_BLOB;

typedef BOOL (*PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(CRYPT_PRIVATE_KEY_INFO *, HCRYPTPROV *, LPVOID);

struct _CRYPT_PKCS8_IMPORT_PARAMS {
    CRYPT_DIGEST_BLOB PrivateKey;
    PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc;
    LPVOID pVoidResolveFunc;
    PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc;
    LPVOID pVoidDecryptFunc;
};

typedef struct _CERT_KEY_ATTRIBUTES_INFO *PCERT_KEY_ATTRIBUTES_INFO;

typedef struct _CRYPT_DECODE_PARA CRYPT_DECODE_PARA;

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *P_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
    DWORD cOID;
    LPSTR *rgpszOID;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE *PCERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CTL_FIND_USAGE_PARA CTL_FIND_USAGE_PARA;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO CMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO _CMC_ADD_EXTENSIONS_INFO, *P_CMC_ADD_EXTENSIONS_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO *PCMC_ADD_EXTENSIONS_INFO;

struct _CMC_ADD_EXTENSIONS_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD *rgdwCertReference;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CERT_PAIR _CERT_PAIR, *P_CERT_PAIR;

struct _CERT_PAIR {
    CERT_BLOB Forward;
    CERT_BLOB Reverse;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA CRL_FIND_ISSUED_FOR_PARA;

typedef struct _CTL_USAGE_MATCH _CTL_USAGE_MATCH, *P_CTL_USAGE_MATCH;

typedef struct _CTL_USAGE_MATCH CTL_USAGE_MATCH;

struct _CTL_USAGE_MATCH {
    DWORD dwType;
    CTL_USAGE Usage;
};

typedef HANDLE HCRYPTASYNC;

typedef BOOL (*PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(HCRYPTASYNC);

typedef struct _CRL_INFO CRL_INFO;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO *PCERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_CHAIN_ENGINE_CONFIG _CERT_CHAIN_ENGINE_CONFIG, *P_CERT_CHAIN_ENGINE_CONFIG;

struct _CERT_CHAIN_ENGINE_CONFIG {
    DWORD cbSize;
    HCERTSTORE hRestrictedRoot;
    HCERTSTORE hRestrictedTrust;
    HCERTSTORE hRestrictedOther;
    DWORD cAdditionalStore;
    HCERTSTORE *rghAdditionalStore;
    DWORD dwFlags;
    DWORD dwUrlRetrievalTimeout;
    DWORD MaximumCachedCertificates;
    DWORD CycleDetectionModulus;
};

typedef struct _CMS_DH_KEY_INFO CMS_DH_KEY_INFO;

typedef struct _CERT_CRL_CONTEXT_PAIR *PCERT_CRL_CONTEXT_PAIR;

typedef struct _CERT_CREATE_CONTEXT_PARA CERT_CREATE_CONTEXT_PARA;

typedef struct _CERT_CHAIN CERT_CHAIN;

typedef struct _CMSG_HASHED_ENCODE_INFO CMSG_HASHED_ENCODE_INFO;

typedef struct _CERT_STORE_PROV_INFO *PCERT_STORE_PROV_INFO;

typedef BOOL (*PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(LPCSTR, DWORD, HCRYPTPROV, DWORD, void *, HCERTSTORE, PCERT_STORE_PROV_INFO);

typedef struct _CMS_DH_KEY_INFO *PCMS_DH_KEY_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO _CRYPT_RETRIEVE_AUX_INFO, *P_CRYPT_RETRIEVE_AUX_INFO;

struct _CRYPT_RETRIEVE_AUX_INFO {
    DWORD cbSize;
    FILETIME *pLastSyncTime;
};

typedef struct _CMSG_RC4_AUX_INFO _CMSG_RC4_AUX_INFO, *P_CMSG_RC4_AUX_INFO;

typedef struct _CMSG_RC4_AUX_INFO CMSG_RC4_AUX_INFO;

struct _CMSG_RC4_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CRYPTOAPI_BLOB *PCERT_NAME_BLOB;

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef BOOL (*PFN_CMSG_IMPORT_KEY_AGREE)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _HTTPSPolicyCallbackData HTTPSPolicyCallbackData;

typedef struct _CERT_REVOCATION_STATUS *PCERT_REVOCATION_STATUS;

typedef struct _CRYPT_KEY_PROV_INFO *PCRYPT_KEY_PROV_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO _CERT_POLICY_CONSTRAINTS_INFO, *P_CERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO *PCERT_POLICY_CONSTRAINTS_INFO;

struct _CERT_POLICY_CONSTRAINTS_INFO {
    BOOL fRequireExplicitPolicy;
    DWORD dwRequireExplicitPolicySkipCerts;
    BOOL fInhibitPolicyMapping;
    DWORD dwInhibitPolicyMappingSkipCerts;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPTOAPI_BLOB *PDATA_BLOB;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW _CRYPT_PASSWORD_CREDENTIALSW, *P_CRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW CRYPT_PASSWORD_CREDENTIALSW;

struct _CRYPT_PASSWORD_CREDENTIALSW {
    DWORD cbSize;
    LPWSTR pszUsername;
    LPWSTR pszPassword;
};

typedef struct _CERT_POLICIES_INFO _CERT_POLICIES_INFO, *P_CERT_POLICIES_INFO;

typedef struct _CERT_POLICY_INFO CERT_POLICY_INFO;

struct _CERT_POLICIES_INFO {
    DWORD cPolicyInfo;
    CERT_POLICY_INFO *rgPolicyInfo;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA *PCRL_FIND_ISSUED_FOR_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CERT_CHAIN_POLICY_STATUS *PCERT_CHAIN_POLICY_STATUS;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CRYPT_BLOB_ARRAY *PCRYPT_BLOB_ARRAY;

typedef void (*PFN_FREE_ENCODED_OBJECT_FUNC)(LPCSTR, PCRYPT_BLOB_ARRAY, LPVOID);

typedef struct _CERT_KEY_CONTEXT *PCERT_KEY_CONTEXT;

typedef CRYPT_OID_INFO CCRYPT_OID_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO *PCMSG_KEY_AGREE_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_KEY_AGREE)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, PCMSG_KEY_AGREE_ENCRYPT_INFO, DWORD, void *);

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CERT_DSS_PARAMETERS _CERT_DSS_PARAMETERS, *P_CERT_DSS_PARAMETERS;

typedef struct _CERT_DSS_PARAMETERS CERT_DSS_PARAMETERS;

struct _CERT_DSS_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB g;
};

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, void *, DWORD);

typedef struct _CRYPT_OBJID_TABLE _CRYPT_OBJID_TABLE, *P_CRYPT_OBJID_TABLE;

typedef struct _CRYPT_OBJID_TABLE *PCRYPT_OBJID_TABLE;

struct _CRYPT_OBJID_TABLE {
    DWORD dwAlgId;
    LPCSTR pszObjId;
};

typedef struct _CRYPT_SEQUENCE_OF_ANY _CRYPT_SEQUENCE_OF_ANY, *P_CRYPT_SEQUENCE_OF_ANY;

typedef struct _CRYPT_SEQUENCE_OF_ANY CRYPT_SEQUENCE_OF_ANY;

struct _CRYPT_SEQUENCE_OF_ANY {
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _KEY_TYPE_SUBTYPE KEY_TYPE_SUBTYPE;

typedef struct _CERT_KEY_ATTRIBUTES_INFO CERT_KEY_ATTRIBUTES_INFO;

typedef struct _CRYPT_HASH_INFO CRYPT_HASH_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO CRYPT_RETRIEVE_AUX_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO CERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO _CERT_BASIC_CONSTRAINTS_INFO, *P_CERT_BASIC_CONSTRAINTS_INFO;

struct _CERT_BASIC_CONSTRAINTS_INFO {
    CRYPT_BIT_BLOB SubjectType;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
    DWORD cSubtreesConstraint;
    CERT_NAME_BLOB *rgSubtreesConstraint;
};

typedef struct _CRYPTOAPI_BLOB *PCRYPT_HASH_BLOB;

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, void *, DWORD);

typedef struct _CERT_TEMPLATE_EXT *PCERT_TEMPLATE_EXT;

typedef struct _SCHANNEL_ALG SCHANNEL_ALG;

typedef struct _PRIVKEYVER3 _PRIVKEYVER3, *P_PRIVKEYVER3;

typedef struct _PRIVKEYVER3 DSSPRIVKEY_VER3;

struct _PRIVKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DWORD bitlenX;
    DSSSEED DSSSeed;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSW *PCRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CERT_POLICY_INFO *PCERT_POLICY_INFO;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALSA;

typedef struct _CERT_POLICY_ID CERT_POLICY_ID;

typedef struct _CMSG_CTRL_DECRYPT_PARA CMSG_CTRL_DECRYPT_PARA;

typedef void (*PFN_CERT_STORE_PROV_CLOSE)(HCERTSTOREPROV, DWORD);

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *P_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwSignerIndex;
    DWORD dwSignerType;
    void *pvSigner;
};

typedef struct _CTL_INFO CTL_INFO;

typedef struct _CMC_STATUS_INFO CMC_STATUS_INFO;

typedef BOOL (*PFN_CRYPT_CANCEL_RETRIEVAL)(DWORD, void *);

typedef struct _HTTPSPolicyCallbackData *PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_SMIME_CAPABILITIES *PCRYPT_SMIME_CAPABILITIES;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO _CERT_AUTHORITY_KEY_ID2_INFO, *P_CERT_AUTHORITY_KEY_ID2_INFO;

struct _CERT_AUTHORITY_KEY_ID2_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_ALT_NAME_INFO AuthorityCertIssuer;
    CRYPT_INTEGER_BLOB AuthorityCertSerialNumber;
};

typedef struct _CERT_CHAIN_POLICY_PARA *PCERT_CHAIN_POLICY_PARA;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO *PCMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA _CRYPT_ENCRYPT_MESSAGE_PARA, *P_CRYPT_ENCRYPT_MESSAGE_PARA;

struct _CRYPT_ENCRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRL_ISSUING_DIST_POINT *PCRL_ISSUING_DIST_POINT;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA CRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO CERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CRYPT_ENCODE_PARA *PCRYPT_ENCODE_PARA;

typedef struct _CTL_USAGE_MATCH *PCTL_USAGE_MATCH;

typedef struct _CERT_ACCESS_DESCRIPTION CERT_ACCESS_DESCRIPTION;

typedef struct _CRL_DIST_POINTS_INFO CRL_DIST_POINTS_INFO;

typedef struct _CERT_EXTENSION CERT_EXTENSION;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef void *HCRYPTOIDFUNCSET;

typedef struct _CMSG_STREAM_INFO _CMSG_STREAM_INFO, *P_CMSG_STREAM_INFO;

typedef struct _CMSG_STREAM_INFO *PCMSG_STREAM_INFO;

struct _CMSG_STREAM_INFO {
    DWORD cbContent;
    PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
    void *pvArg;
};

typedef struct _CERT_AUTHORITY_KEY_ID_INFO _CERT_AUTHORITY_KEY_ID_INFO, *P_CERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO CERT_AUTHORITY_KEY_ID_INFO;

struct _CERT_AUTHORITY_KEY_ID_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_NAME_BLOB CertIssuer;
    CRYPT_INTEGER_BLOB CertSerialNumber;
};

typedef struct _CERT_REQUEST_INFO _CERT_REQUEST_INFO, *P_CERT_REQUEST_INFO;

struct _CERT_REQUEST_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CERT_DSS_PARAMETERS *PCERT_DSS_PARAMETERS;

typedef struct _CERT_PUBLIC_KEY_INFO *PCERT_PUBLIC_KEY_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_ENCRYPT_KEY)(HCRYPTPROV, HCRYPTKEY, PCERT_PUBLIC_KEY_INFO, PBYTE, PDWORD);

typedef PCRYPT_PASSWORD_CREDENTIALSA PCRYPT_PASSWORD_CREDENTIALS;

typedef struct _CERT_REQUEST_INFO *PCERT_REQUEST_INFO;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA CRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CRL_DIST_POINTS_INFO *PCRL_DIST_POINTS_INFO;

typedef struct _CPS_URLS _CPS_URLS, *P_CPS_URLS;

typedef struct _CPS_URLS *PCPS_URLS;

struct _CPS_URLS {
    LPWSTR pszURL;
    CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
    CRYPT_DATA_BLOB *pDigest;
};

typedef struct _CRYPT_VERIFY_MESSAGE_PARA CRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CERT_CHAIN_ELEMENT CERT_CHAIN_ELEMENT;

typedef struct _CRYPT_URL_ARRAY CRYPT_URL_ARRAY;

typedef struct _CMC_TAGGED_CONTENT_INFO CMC_TAGGED_CONTENT_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_UINT_BLOB;

typedef struct _CMSG_CMS_RECIPIENT_INFO CMSG_CMS_RECIPIENT_INFO;

typedef struct _CERT_NAME_CONSTRAINTS_INFO *PCERT_NAME_CONSTRAINTS_INFO;

typedef struct _CRYPT_BIT_BLOB *PCRYPT_BIT_BLOB;

typedef struct _CERT_CHAIN_ENGINE_CONFIG *PCERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CMC_ADD_EXTENSIONS_INFO CMC_ADD_EXTENSIONS_INFO;

typedef struct _CRYPT_PRIVATE_KEY_INFO *PCRYPT_PRIVATE_KEY_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO *PCERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CTL_FIND_SUBJECT_PARA *PCTL_FIND_SUBJECT_PARA;

typedef struct _CERT_KEYGEN_REQUEST_INFO _CERT_KEYGEN_REQUEST_INFO, *P_CERT_KEYGEN_REQUEST_INFO;

struct _CERT_KEYGEN_REQUEST_INFO {
    DWORD dwVersion;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    LPWSTR pwszChallengeString;
};

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO CERT_AUTHORITY_KEY_ID2_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef struct _CERT_CHAIN_ENGINE_CONFIG CERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_FORTEZZA_DATA_PROP _CERT_FORTEZZA_DATA_PROP, *P_CERT_FORTEZZA_DATA_PROP;

struct _CERT_FORTEZZA_DATA_PROP {
    uchar SerialNumber[8];
    int CertIndex;
    uchar CertLabel[36];
};

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CPS_URLS CPS_URLS;

typedef struct _CRL_ENTRY CRL_ENTRY;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef struct _CRYPT_CONTENT_INFO _CRYPT_CONTENT_INFO, *P_CRYPT_CONTENT_INFO;

struct _CRYPT_CONTENT_INFO {
    LPSTR pszObjId;
    CRYPT_DER_BLOB Content;
};

typedef struct _KEY_TYPE_SUBTYPE *PKEY_TYPE_SUBTYPE;

typedef struct _PROV_ENUMALGS _PROV_ENUMALGS, *P_PROV_ENUMALGS;

typedef struct _PROV_ENUMALGS PROV_ENUMALGS;

struct _PROV_ENUMALGS {
    ALG_ID aiAlgid;
    DWORD dwBitLen;
    DWORD dwNameLen;
    CHAR szName[20];
};

typedef struct _CERT_FORTEZZA_DATA_PROP CERT_FORTEZZA_DATA_PROP;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA CERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_OTHER_NAME CERT_OTHER_NAME;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CERT_RDN CERT_RDN;

typedef struct _CMSG_RC4_AUX_INFO *PCMSG_RC4_AUX_INFO;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPTOAPI_BLOB CRYPT_ATTR_BLOB;

typedef union _union_1015 _union_1015, *P_union_1015;

union _union_1015 {
    CERT_ALT_NAME_INFO FullName;
};

typedef struct _CERT_X942_DH_PARAMETERS CERT_X942_DH_PARAMETERS;

typedef BOOL (*PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(PCMSG_CONTENT_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (*PFN_CRYPT_ENUM_KEYID_PROP)(CRYPT_HASH_BLOB *, DWORD, void *, void *, DWORD, DWORD *, void **, DWORD *);

typedef struct _CERT_REVOCATION_STATUS CERT_REVOCATION_STATUS;

typedef union _union_1034 _union_1034, *P_union_1034;

union _union_1034 {
    PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef void (*PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(LPSTR, LPVOID);

typedef struct _CTL_USAGE *PCTL_USAGE;

typedef struct _CMS_KEY_INFO *PCMS_KEY_INFO;

typedef union _union_1041 _union_1041, *P_union_1041;

union _union_1041 {
    DWORD dwFailInfo;
    PCMC_PEND_INFO pPendInfo;
};

typedef union _union_1047 _union_1047, *P_union_1047;

union _union_1047 {
    DWORD dwValue;
    ALG_ID Algid;
    DWORD dwLength;
};

typedef union _union_1050 _union_1050, *P_union_1050;

union _union_1050 {
    CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    CRYPT_HASH_BLOB KeyId;
    CRYPT_HASH_BLOB HashId;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO CMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMSG_CTRL_DECRYPT_PARA *PCMSG_CTRL_DECRYPT_PARA;

typedef struct _CERT_CHAIN_CONTEXT *PCERT_CHAIN_CONTEXT;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO CERT_KEY_USAGE_RESTRICTION_INFO;

typedef union _union_1058 _union_1058, *P_union_1058;

union _union_1058 {
    PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
    PCERT_ID pSenderId;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_TRUST_STATUS *PCERT_TRUST_STATUS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef union _union_1060 _union_1060, *P_union_1060;

union _union_1060 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

typedef union _union_1062 _union_1062, *P_union_1062;

union _union_1062 {
    PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList;
};

typedef struct _HTTPSPolicyCallbackData SSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA _CRYPT_DECRYPT_MESSAGE_PARA, *P_CRYPT_DECRYPT_MESSAGE_PARA;

struct _CRYPT_DECRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD cCertStore;
    HCERTSTORE *rghCertStore;
};

typedef union _union_1075 _union_1075, *P_union_1075;

union _union_1075 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

typedef union _union_1078 _union_1078, *P_union_1078;

union _union_1078 {
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
};

typedef struct _PROV_ENUMALGS_EX _PROV_ENUMALGS_EX, *P_PROV_ENUMALGS_EX;

typedef struct _PROV_ENUMALGS_EX PROV_ENUMALGS_EX;

struct _PROV_ENUMALGS_EX {
    ALG_ID aiAlgid;
    DWORD dwDefaultLen;
    DWORD dwMinLen;
    DWORD dwMaxLen;
    DWORD dwProtocols;
    DWORD dwNameLen;
    CHAR szName[20];
    DWORD dwLongNameLen;
    CHAR szLongName[40];
};

typedef struct _CRYPT_OID_FUNC_ENTRY *PCRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_CREDENTIALS CRYPT_CREDENTIALS;

typedef struct _CRYPT_CSP_PROVIDER *PCRYPT_CSP_PROVIDER;

typedef struct _CMSG_CMS_SIGNER_INFO *PCMSG_CMS_SIGNER_INFO;

typedef union _union_1084 _union_1084, *P_union_1084;

union _union_1084 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

typedef struct _CERT_SYSTEM_STORE_INFO *PCERT_SYSTEM_STORE_INFO;

typedef BOOL (*PFN_CERT_ENUM_SYSTEM_STORE)(void *, DWORD, PCERT_SYSTEM_STORE_INFO, void *, void *);

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO *PCMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _SCHANNEL_ALG *PSCHANNEL_ALG;

typedef struct _CERT_ISSUER_SERIAL_NUMBER *PCERT_ISSUER_SERIAL_NUMBER;

typedef struct _CMSG_SIGNER_INFO CMSG_SIGNER_INFO;

typedef union _union_1091 _union_1091, *P_union_1091;

union _union_1091 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _CERT_REVOCATION_CRL_INFO CERT_REVOCATION_CRL_INFO;

typedef struct _CTL_VERIFY_USAGE_STATUS *PCTL_VERIFY_USAGE_STATUS;

typedef struct _CRYPT_RC2_CBC_PARAMETERS CRYPT_RC2_CBC_PARAMETERS;

typedef struct _CERT_PAIR *PCERT_PAIR;

typedef struct _CERT_POLICY95_QUALIFIER1 _CERT_POLICY95_QUALIFIER1, *P_CERT_POLICY95_QUALIFIER1;

struct _CERT_POLICY95_QUALIFIER1 {
    LPWSTR pszPracticesReference;
    LPSTR pszNoticeIdentifier;
    LPSTR pszNSINoticeIdentifier;
    DWORD cCPSURLs;
    CPS_URLS *rgCPSURLs;
};

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CMC_RESPONSE_INFO *PCMC_RESPONSE_INFO;

typedef struct _CERT_CONTEXT *PCERT_CONTEXT;

typedef BOOL (*PFN_CMSG_GEN_ENCRYPT_KEY)(HCRYPTPROV *, PCRYPT_ALGORITHM_IDENTIFIER, PVOID, PCERT_PUBLIC_KEY_INFO, PFN_CMSG_ALLOC, HCRYPTKEY *, PBYTE *, PDWORD);

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA *PCRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CRYPT_SEQUENCE_OF_ANY *PCRYPT_SEQUENCE_OF_ANY;

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef struct _CTL_CONTEXT *PCTL_CONTEXT;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO CMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef struct _CTL_ANY_SUBJECT_INFO *PCTL_ANY_SUBJECT_INFO;

typedef struct _CRYPT_SIGN_MESSAGE_PARA CRYPT_SIGN_MESSAGE_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef struct _CTL_VERIFY_USAGE_PARA *PCTL_VERIFY_USAGE_PARA;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS CRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _PUBLICKEYSTRUC BLOBHEADER;

typedef struct _CRYPT_HASH_INFO *PCRYPT_HASH_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DIGEST_BLOB;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_INTEGER_BLOB;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA *PCRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CERT_PHYSICAL_STORE_INFO CERT_PHYSICAL_STORE_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CERT_NAME_CONSTRAINTS_INFO CERT_NAME_CONSTRAINTS_INFO;

typedef struct _PRIVKEYVER3 DHPRIVKEY_VER3;

typedef struct _CERT_PAIR CERT_PAIR;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CMSG_SIGNER_ENCODE_INFO CMSG_SIGNER_ENCODE_INFO;

typedef struct _RSAPUBKEY _RSAPUBKEY, *P_RSAPUBKEY;

struct _RSAPUBKEY {
    DWORD magic;
    DWORD bitlen;
    DWORD pubexp;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE CERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_OBJID_BLOB;

typedef struct _CRYPT_X942_OTHER_INFO *PCRYPT_X942_OTHER_INFO;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA CRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CRYPT_RC2_CBC_PARAMETERS *PCRYPT_RC2_CBC_PARAMETERS;

typedef BOOL (*PFN_CMSG_EXPORT_MAIL_LIST)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, PCMSG_MAIL_LIST_ENCRYPT_INFO, DWORD, void *);

typedef struct _CRYPT_ENCODE_PARA CRYPT_ENCODE_PARA;

typedef struct _CRYPT_X942_OTHER_INFO CRYPT_X942_OTHER_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _HMAC_Info *PHMAC_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO CERT_KEYGEN_REQUEST_INFO;

typedef struct _CERT_POLICIES_INFO *PCERT_POLICIES_INFO;

typedef BOOL (*PFN_CRYPT_ENUM_OID_FUNC)(DWORD, LPCSTR, LPCSTR, DWORD, DWORD *, LPCWSTR *, BYTE **, DWORD *, void *);

typedef struct _CTL_VERIFY_USAGE_PARA CTL_VERIFY_USAGE_PARA;

typedef BOOL (*PFN_CERT_ENUM_PHYSICAL_STORE)(void *, DWORD, LPCWSTR, PCERT_PHYSICAL_STORE_INFO, void *, void *);

typedef struct _CMSG_STREAM_INFO CMSG_STREAM_INFO;

typedef struct _CERT_REVOCATION_INFO CERT_REVOCATION_INFO;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA *PCERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CMSG_RC2_AUX_INFO *PCMSG_RC2_AUX_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CRL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCRL_CONTEXT, DWORD, void **, PCCRL_CONTEXT *);

typedef union _union_1100 _union_1100, *P_union_1100;

union _union_1100 {
    HKEY hKeyBase;
    void *pvBase;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef union _union_1101 _union_1101, *P_union_1101;

union _union_1101 {
    void *pvSystemStore;
    LPCSTR pszSystemStore;
    LPCWSTR pwszSystemStore;
};

typedef BOOL (*PFN_CMSG_IMPORT_ENCRYPT_KEY)(HCRYPTPROV, DWORD, PCRYPT_ALGORITHM_IDENTIFIER, PCRYPT_ALGORITHM_IDENTIFIER, PBYTE, DWORD, HCRYPTKEY *);

typedef struct _CMC_DATA_INFO *PCMC_DATA_INFO;

typedef union _union_994 _union_994, *P_union_994;

union _union_994 {
    PCERT_OTHER_NAME pOtherName;
    LPWSTR pwszRfc822Name;
    LPWSTR pwszDNSName;
    CERT_NAME_BLOB DirectoryName;
    LPWSTR pwszURL;
    CRYPT_DATA_BLOB IPAddress;
    LPSTR pszRegisteredID;
};

typedef struct _CRYPT_CONTENT_INFO CRYPT_CONTENT_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO *PCERT_AUTHORITY_KEY_ID2_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CERT)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCERT_CONTEXT, DWORD, void **, PCCERT_CONTEXT *);

typedef struct _CRYPT_KEY_LIMITS_V01 CRYPT_KEY_LIMITS;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO;

typedef struct _CERT_PRIVATE_KEY_VALIDITY CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CRYPT_OBJID_TABLE CRYPT_OBJID_TABLE;

typedef struct _CERT_POLICY95_QUALIFIER1 CERT_POLICY95_QUALIFIER1;

typedef union _union_1156 _union_1156, *P_union_1156;

union _union_1156 {
    DWORD cbStruct;
    DWORD cbSize;
};

typedef struct _CERT_INFO CERT_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO *PCERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CRL_CONTEXT *PCRL_CONTEXT;

typedef struct _CERT_POLICY95_QUALIFIER1 *PCERT_POLICY95_QUALIFIER1;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef struct _CERT_NAME_VALUE *PCERT_NAME_VALUE;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, PCCTL_CONTEXT *);

typedef struct _CERT_DH_PARAMETERS CERT_DH_PARAMETERS;

typedef struct _CROSS_CERT_DIST_POINTS_INFO CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA *PCRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CRL_REVOCATION_INFO CRL_REVOCATION_INFO;

typedef struct _CERT_USAGE_MATCH *PCERT_USAGE_MATCH;

typedef struct _CERT_EXTENSIONS CERT_EXTENSIONS;

typedef struct _CRYPT_SMIME_CAPABILITY CRYPT_SMIME_CAPABILITY;

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef struct _CRYPT_CONTENT_INFO *PCRYPT_CONTENT_INFO;

typedef struct _CRL_DIST_POINT CRL_DIST_POINT;

typedef struct _CERT_TEMPLATE_EXT CERT_TEMPLATE_EXT;

typedef struct _CERT_SIMPLE_CHAIN CERT_SIMPLE_CHAIN;

typedef struct _CERT_POLICIES_INFO CERT_POLICIES_INFO;

typedef struct _CROSS_CERT_DIST_POINTS_INFO *PCROSS_CERT_DIST_POINTS_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO *PCERT_KEYGEN_REQUEST_INFO;

typedef struct _CMS_KEY_INFO CMS_KEY_INFO;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CTL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCTL_CONTEXT, DWORD, void **, PCCTL_CONTEXT *);

typedef struct _CTL_VERIFY_USAGE_STATUS CTL_VERIFY_USAGE_STATUS;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, PCCRL_CONTEXT *);

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CERT_KEY_CONTEXT CERT_KEY_CONTEXT;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO CERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CTL_ENTRY CTL_ENTRY;

typedef struct _CERT_REQUEST_INFO CERT_REQUEST_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO *PCRYPT_RETRIEVE_AUX_INFO;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPT_KEY_PROV_PARAM CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO *PCERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRL_DIST_POINT_NAME *PCRL_DIST_POINT_NAME;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CRYPT_DECODE_PARA *PCRYPT_DECODE_PARA;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO CMSG_CONTENT_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_IMPORT_MAIL_LIST)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _CERT_CHAIN_PARA *PCERT_CHAIN_PARA;

typedef struct _CMSG_HASHED_ENCODE_INFO *PCMSG_HASHED_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCERT_RDN_VALUE_BLOB;

typedef struct _CMC_TAGGED_ATTRIBUTE CMC_TAGGED_ATTRIBUTE;

typedef struct _RSAPUBKEY RSAPUBKEY;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, PCCERT_CONTEXT *);

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CERT_POLICY_MAPPINGS_INFO *PCERT_POLICY_MAPPINGS_INFO;

#define CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED 8

#define CRL_FIND_ISSUED_BY_BASE_FLAG 8

#define CALG_TEK 26123

#define ALG_SID_AES_128 14

#define CRYPTPROTECT_CRED_REGENERATE 128

#define CERT_QUERY_CONTENT_PKCS7_UNSIGNED 9

#define CERT_FIND_ISSUER_NAME 131076

#define X509_BITS_WITHOUT_TRAILING_ZEROES 51

#define ALG_CLASS_SIGNATURE 8192

#define CERT_FIND_PUBLIC_KEY 393216

#define X509_ANY_STRING 6

#define ALG_SID_DESX 4

#define CERT_TRUST_CTL_IS_NOT_TIME_VALID 131072

#define CMSG_SIGNED_AND_ENVELOPED 4

#define ALG_SID_SAFERSK64 7

#define CERT_QUERY_FORMAT_BASE64_ENCODED 2

#define CERT_INFO_SERIAL_NUMBER_FLAG 2

#define CERT_STORE_CTRL_RESYNC 1

#define CONTEXT_OID_CRL 2

#define CERT_TRUST_HAS_EXACT_MATCH_ISSUER 1

#define CERT_NAME_STR_REVERSE_FLAG 33554432

#define CERT_STORE_OPEN_EXISTING_FLAG 16384

#define CALG_AES_192 26127

#define CERT_STORE_PROV_FREE_FIND_CRL_FUNC 18

#define CERT_SYSTEM_STORE_USERS 393216

#define CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG 16384

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE 16

#define CERT_QUERY_FORMAT_FLAG_ALL 14

#define CMS_SIGNER_INFO 501

#define CRYPT_USER_PROTECTED 2

#define CRYPT_ACQUIRE_USE_PROV_INFO_FLAG 2

#define CRYPT_MODE_CBCOFMI 10

#define CMC_FAIL_TRY_LATER 12

#define PP_KEYEXCHANGE_ALG 14

#define CERT_COMPARE_SHA1_HASH 1

#define CRL_REASON_CA_COMPROMISE_FLAG 32

#define CRYPT_PUBKEY_ALG_OID_GROUP_ID 3

#define CERT_STORE_CTRL_AUTO_RESYNC 4

#define RSA_CSP_PUBLICKEYBLOB 19

#define CERT_TRUST_NO_ERROR 0

#define CMSG_ENCRYPT_PARAM 26

#define CRYPT_FLAG_SIGNING 32

#define KP_CERTIFICATE 26

#define CERT_FIND_CROSS_CERT_DIST_POINTS 1114112

#define KP_HIGHEST_VERSION 41

#define CERT_KEY_SPEC_PROP_ID 6

#define CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG 4

#define CERT_STORE_PROV_READ_CTL_FUNC 9

#define ALG_SID_SEAL 2

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT 2

#define CERT_RDN_ANY_TYPE 0

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ID 2

#define INTERNATIONAL_USAGE 1

#define CALG_KEA_KEYX 43524

#define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL 268435455

#define CRYPT_DATA_KEY 2048

#define CRL_DIST_POINT_ERR_INDEX_MASK 127

#define CRYPT_ENCRYPT 1

#define PROV_SSL 6

#define CMC_OTHER_INFO_FAIL_CHOICE 1

#define CMSG_RECIPIENT_COUNT_PARAM 17

#define URL_OID_CERTIFICATE_FRESHEST_CRL 6

#define CERT_TRUST_HAS_PREFERRED_ISSUER 256

#define CRYPT_NDR_ENCODING 2

#define CERT_STORE_DELETE_FLAG 16

#define CERT_FIND_SUBJECT_CERT 720896

#define CRL_FIND_ANY 0

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT 16

#define CERT_AUTO_ENROLL_PROP_ID 21

#define CERT_CLOSE_STORE_CHECK_FLAG 2

#define CERT_QUERY_CONTENT_CERT 1

#define CERT_FIND_NO_ENHKEY_USAGE_FLAG 8

#define CRYPT_OWF_REPL_LM_HASH 1

#define CRYPT_KEYID_ALLOC_FLAG 32768

#define CRYPT_GET_INSTALLED_OID_FUNC_FLAG 1

#define CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG 1073741824

#define PKCS_CONTENT_INFO_SEQUENCE_OF_ANY 23

#define CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG 131072

#define KP_CLEAR_KEY 27

#define CERT_OID_NAME_STR 2

#define CONTEXT_OID_CERTIFICATE 1

#define CALG_SKIPJACK 26122

#define ALG_SID_SSL3_MASTER 1

#define CMSG_SIGNER_INFO_PARAM 6

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT 32

#define CERT_VERIFY_TRUSTED_SIGNERS_FLAG 2

#define CERT_FIND_SUBJECT_ATTR 196615

#define CONTEXT_OID_CTL 3

#define CERT_NAME_URL_TYPE 7

#define CERT_TRUST_INVALID_POLICY_CONSTRAINTS 512

#define CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE 1

#define PROV_MS_EXCHANGE 5

#define CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG 1

#define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT 32768

#define CERT_NAME_DISABLE_IE4_UTF8_FLAG 65536

#define CERT_KEY_CERT_SIGN_KEY_USAGE 4

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG 16

#define CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG 2

#define CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG 1

#define CMSG_DATA_FLAG 2

#define CERT_KEY_ENCIPHERMENT_KEY_USAGE 32

#define CALG_AES_128 26126

#define ALG_TYPE_BLOCK 1536

#define CTL_CERT_SUBJECT_TYPE 2

#define CRYPT_LAST_OID_GROUP_ID 10

#define ALG_CLASS_DATA_ENCRYPT 24576

#define CERT_ENCIPHER_ONLY_KEY_USAGE 1

#define REVOCATION_OID_CRL_REVOCATION 1

#define CERT_COMPARE_ISSUER_OF 12

#define CERT_TRUST_PUB_ALLOW_TRUST_MASK 3

#define CMSG_CMS_ENCAPSULATED_CTL_FLAG 32768

#define CALG_SCHANNEL_MAC_KEY 19459

#define CONTEXT_OID_CAPI2_ANY 5

#define CERT_FIND_NO_CTL_USAGE_FLAG 8

#define CERT_DESCRIPTION_PROP_ID 13

#define CERT_TRUST_IS_NOT_TIME_NESTED 2

#define CERT_COMPARE_KEY_SPEC 9

#define CRYPT_READ 8

#define ALG_SID_AGREED_KEY_ANY 3

#define CERT_SYSTEM_STORE_SERVICES_ID 5

#define CRYPT_FLAG_TLS1 8

#define CRYPT_FORMAT_RDN_UNQUOTE 1024

#define CMSG_DETACHED_FLAG 4

#define CERT_LAST_USER_PROP_ID 65535

#define CRYPT_SIGN_ALG_OID_GROUP_ID 4

#define CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG 2147483648

#define CERT_RDN_INT4_STRING 11

#define CRYPT_DECODE_TO_BE_SIGNED_FLAG 2

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 1073741824

#define ALG_SID_DSS_DMS 2

#define CRYPT_ENCODE_DECODE_NONE 0

#define CMSG_SIGNER_COUNT_PARAM 5

#define CRYPT_IMPL_REMOVABLE 8

#define PKCS_7_ASN_ENCODING 65536

#define ALG_SID_IDEA 5

#define CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG 16384

#define PP_ENUMALGS_EX 22

#define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY 1024

#define CRYPT_STRING_BASE64REQUESTHEADER 3

#define CERT_UNICODE_VALUE_ERR_INDEX_MASK 65535

#define CRYPT_DECODE_SHARE_OID_STRING_FLAG 4

#define CERT_REGISTRY_STORE_CLIENT_GPT_FLAG 2147483648

#define PROV_RSA_SCHANNEL 12

#define CTL_FIND_NO_LIST_ID_CBDATA 4294967295

#define ALG_SID_SCHANNEL_MAC_KEY 3

#define CERT_FIND_MD5_HASH 262144

#define CRYPT_PREGEN 64

#define PKCS_ATTRIBUTES 48

#define PKCS_RC2_CBC_PARAMETERS 41

#define CERT_SMART_CARD_DATA_PROP_ID 16

#define CERT_DSS_S_LEN 20

#define CERT_CHAIN_REVOCATION_CHECK_END_CERT 268435456

#define CERT_STORE_PROV_WRITE_CERT_FUNC 2

#define KP_CLIENT_RANDOM 21

#define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE 16

#define CERT_STORE_ADD_NEWER 6

#define CONTEXT_OID_PKCS7 4

#define CRYPT_MATCH_ANY_ENCODING_TYPE 4294967295

#define PROV_EC_ECNRA_FULL 17

#define CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG 1

#define CRYPT_RC2_128BIT_VERSION 58

#define ALG_SID_3DES 3

#define CMSG_MAIL_LIST_HANDLE_KEY_CHOICE 1

#define CRYPT_STRING_HEX_ANY 8

#define CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST 1

#define CRYPTPROTECT_UI_FORBIDDEN 1

#define CERT_SYSTEM_STORE_CURRENT_SERVICE 262144

#define CRYPT_LITTLE_ENDIAN 1

#define CRYPTPROTECT_VERIFY_PROTECTION 64

#define CERT_STORE_PROV_PHYSICAL_W 14

#define CMSG_SIGNER_INFO_V3 3

#define CMSG_SIGNER_INFO_V1 1

#define CERT_STORE_MANIFOLD_FLAG 256

#define CMSG_KEY_AGREE_RECIPIENT 2

#define CERT_ALT_NAME_URL 7

#define CRYPT_MODE_CFBP 7

#define CMSG_SIGNER_UNAUTH_ATTR_PARAM 10

#define CERT_ARCHIVED_KEY_HASH_PROP_ID 65

#define CERT_PROT_ROOT_ONLY_LM_GPT_FLAG 8

#define CRYPT_OID_INFO_SIGN_KEY 4

#define CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 2

#define CRYPT_CREATE_IV 512

#define CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID 24

#define CRYPT_VERIFY_DATA_HASH 64

#define CERT_SET_KEY_CONTEXT_PROP_ID 1

#define CERT_TRUST_IS_UNTRUSTED_ROOT 32

#define PP_ENUMCONTAINERS 2

#define RSA1024BIT_KEY 67108864

#define X509_UNICODE_NAME 20

#define CMSG_ENCODE_SORTED_CTL_FLAG 1

#define CRYPT_FORMAT_SEMICOLON 256

#define CMSG_TRUSTED_SIGNER_FLAG 1

#define CRYPT_DESTROYKEY 4

#define CRYPT_FLAG_PCT1 1

#define CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG 1

#define X509_DSS_SIGNATURE 40

#define CRYPT_EXPORT 4

#define CMSG_VERIFY_SIGNER_NULL 4

#define PP_KEYSTORAGE 17

#define PP_SESSION_KEYSIZE 20

#define CERT_UNICODE_RDN_ERR_INDEX_SHIFT 22

#define CERT_INFO_SUBJECT_FLAG 7

#define KP_PRECOMP_SHA 25

#define X509_MULTI_BYTE_INTEGER 28

#define CERT_TRUST_IS_NOT_SIGNATURE_VALID 8

#define CMSG_CTRL_DEL_CRL 13

#define CMSG_MAIL_LIST_VERSION 4

#define CRYPT_STRING_BASE64 1

#define CRYPT_DECODE_ALLOC_FLAG 32768

#define ALG_TYPE_ANY 0

#define CERT_INFO_VERSION_FLAG 1

#define CERT_REGISTRY_STORE_REMOTE_FLAG 65536

#define PKCS_CTL 37

#define PROV_EC_ECNRA_SIG 15

#define CERT_FIND_CTL_USAGE 655360

#define URL_OID_CTL_ISSUER 3

#define CALG_HASH_REPLACE_OWF 32779

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL 3

#define CRYPTLIMIT_USING_PCT 1

#define CERT_COMPARE_EXISTING 13

#define CERT_CHAIN_THREAD_STORE_SYNC 2

#define CMC_STATUS 61

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL 5

#define PROV_STT_BRND 9

#define CRL_DIST_POINT_ISSUER_RDN_NAME 2

#define X509_ASN_ENCODING 1

#define CRYPTPROTECT_LAST_RESERVED_FLAGVAL 4294967295

#define CERT_SYSTEM_STORE_LOCATION_SHIFT 16

#define X509_NAME_VALUE 6

#define CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION 0

#define X509_OCTET_STRING 25

#define CERT_RDN_DISABLE_IE4_UTF8_FLAG 16777216

#define NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE 128

#define CRYPT_USER_KEYSET 4096

#define CRYPT_OID_INFO_ALGID_KEY 3

#define X942_DH_PARAMETERS 50

#define CERT_RDN_GENERAL_STRING 10

#define CERT_STORE_PROV_DELETE_CRL_FUNC 7

#define ALG_SID_HMAC 9

#define PROV_DSS_DH 13

#define X509_BASIC_CONSTRAINTS2 15

#define PUBLICKEYBLOBEX 10

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT 2

#define CRYPT_KEEP_TIME_VALID 128

#define CMSG_ENVELOPED_FLAG 8

#define CRYPT_MODE_CBCI 6

#define CERT_RENEWAL_PROP_ID 64

#define ALG_TYPE_DH 2560

#define CRYPT_INITIATOR 64

#define CERT_CHAIN_CACHE_END_CERT 1

#define KP_SALT 2

#define PP_CLIENT_HWND 1

#define PKCS_ENCRYPTED_PRIVATE_KEY_INFO 45

#define NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE 64

#define SORTED_CTL_EXT_HASH_BUCKET_OFFSET 12

#define CMSG_ATTR_CERT_COUNT_PARAM 31

#define CERT_QUERY_CONTENT_PKCS7_SIGNED 8

#define CRYPT_FORMAT_STR_MULTI_LINE 1

#define CMSG_VERIFY_SIGNER_CHAIN 3

#define ALG_TYPE_RSA 1024

#define ALG_SID_TEK 11

#define CRYPT_RETRIEVE_MULTIPLE_OBJECTS 1

#define PP_CONTAINER 6

#define CERT_CHAIN_TIMESTAMP_TIME 512

#define OPAQUEKEYBLOB 9

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG 2147483648

#define HP_HMAC_INFO 5

#define CERT_CROSS_CERT_DIST_POINTS_PROP_ID 23

#define CRYPT_REGISTER_LAST_INDEX 4294967295

#define CERT_INFO_EXTENSION_FLAG 11

#define PP_VERSION 5

#define CRYPT_RC2_64BIT_VERSION 120

#define ZERO_PADDING 3

#define CRYPT_MODE_ECB 2

#define ALG_SID_SSL3SHAMD5 8

#define CRYPT_RECIPIENT 16

#define CERT_VERIFY_UPDATED_CTL_FLAG 1

#define CALG_DSS_SIGN 8704

#define KP_SCHANNEL_ALG 20

#define PKCS_PRIVATE_KEY_INFO 44

#define CERT_STORE_PROV_CLOSE_FUNC 0

#define X509_CROSS_CERT_DIST_POINTS 58

#define X509_DH_PUBLICKEY 38

#define CMC_STATUS_CONFIRM_REQUIRED 5

#define CERT_QUERY_CONTENT_SERIALIZED_CERT 5

#define CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG 8

#define CRYPTPROTECT_LOCAL_MACHINE 4

#define PROV_STT_MER 7

#define CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG 512

#define CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG 8

#define HCCE_CURRENT_USER 0

#define CERT_FIND_SUBJECT_STR_W 524295

#define HP_HASHVAL 2

#define KP_PERMISSIONS 6

#define CRYPT_TYPE2_FORMAT 2

#define CERT_STORE_REVOCATION_FLAG 4

#define CERT_TRUST_INVALID_EXTENSION 256

#define CERT_SYSTEM_STORE_CURRENT_USER_ID 1

#define CRYPT_LAST_ALG_OID_GROUP_ID 4

#define USAGE_MATCH_TYPE_AND 0

#define CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST 2

#define X942_OTHER_INFO 52

#define ALG_SID_EXAMPLE 80

#define CERT_STORE_PROV_CONTROL_FUNC 13

#define CERT_FIND_SUBJECT_STR_A 458759

#define CERT_CTL_USAGE_PROP_ID 9

#define CERT_FIRST_RESERVED_PROP_ID 92

#define X509_AUTHORITY_KEY_ID 9

#define CRYPT_STRING_HEXASCII 5

#define CRYPTPROTECT_PROMPT_STRONG 8

#define CERT_STORE_PROV_SYSTEM_STORE_FLAG 8

#define CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG 32

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG 2147483648

#define CRYPT_ENCODE_ALLOC_FLAG 32768

#define CALG_RSA_KEYX 41984

#define CMSG_SIGNER_INFO_CMS_VERSION 3

#define X509_POLICY_MAPPINGS 56

#define CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION 1

#define CERT_CREATE_SELFSIGN_NO_SIGN 1

#define X509_ENHANCED_KEY_USAGE 36

#define CERT_RDN_FLAGS_MASK 4278190080

#define CERT_INFO_SUBJECT_UNIQUE_ID_FLAG 10

#define CALG_TLS1_MASTER 19462

#define CERT_KEY_PROV_INFO_PROP_ID 2

#define CMSG_ATTR_CERT_PARAM 32

#define PKCS_UTC_TIME 17

#define CERT_COMPARE_HASH 1

#define CERT_STORE_PROV_WRITE_ADD_FLAG 1

#define CERT_DECIPHER_ONLY_KEY_USAGE 128

#define CRYPT_FIRST 1

#define ALG_SID_SKIPJACK 10

#define CTL_FIND_ANY 0

#define CERT_STORE_SAVE_TO_FILENAME 4

#define CALG_RSA_SIGN 9216

#define X509_AUTHORITY_INFO_ACCESS 32

#define CERT_PVK_FILE_PROP_ID 12

#define CALG_3DES_112 26121

#define CALG_DES 26113

#define CMSG_CTRL_ADD_CRL 12

#define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL 8192

#define CERT_INFO_NOT_BEFORE_FLAG 5

#define CALG_SSL2_MASTER 19461

#define CMSG_COMPUTED_HASH_PARAM 22

#define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS 1024

#define CERT_STORE_UPDATE_KEYID_FLAG 1024

#define CERT_STORE_PROV_NO_PERSIST_FLAG 4

#define CMSG_CRYPT_RELEASE_CONTEXT_FLAG 32768

#define PP_SIGNATURE_ALG 15

#define CALG_DESX 26116

#define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS 128

#define CRYPT_ONLINE 128

#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID 7

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN 3

#define CMSG_CERT_PARAM 12

#define CERT_RDN_PRINTABLE_STRING 4

#define CRYPT_LOCALIZED_NAME_ENCODING_TYPE 0

#define CMSG_TYPE_PARAM 1

#define CRYPT_STRING_HEX 4

#define CERT_ENROLLMENT_PROP_ID 26

#define CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE 4

#define PP_PROVTYPE 16

#define CRYPT_SUCCEED 1

#define CRYPT_ACCUMULATIVE_TIMEOUT 2048

#define CRYPT_FORMAT_RDN_CRLF 512

#define SYMMETRICWRAPKEYBLOB 11

#define CMSG_HASHED 5

#define CMC_STATUS_NO_SUPPORT 4

#define ALG_SID_RIPEMD160 7

#define CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG 16

#define CERT_DSS_SIGNATURE_LEN 40

#define CERT_STORE_PROV_LDAP 16

#define CRYPT_ARCHIVE 256

#define CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 2048

#define CERT_STORE_PROV_READ_CERT_FUNC 1

#define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY 33554432

#define CRL_REASON_CESSATION_OF_OPERATION 5

#define KP_SALT_EX 10

#define CERT_FIND_KEY_SPEC 589824

#define PLAINTEXTKEYBLOB 8

#define CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED 512

#define CRYPT_MODE_CBCOFM 9

#define CUR_BLOB_VERSION 2

#define PROV_STT_ISS 11

#define CERT_CHAIN_POLICY_BASE 1

#define KP_CMS_KEY_INFO 37

#define CERT_ALT_NAME_IP_ADDRESS 8

#define CERT_UNICODE_IS_RDN_ATTRS_FLAG 1

#define CERT_CREATE_CONTEXT_SORTED_FLAG 2

#define ALG_TYPE_SECURECHANNEL 3072

#define CRYPTPROTECT_PROMPT_ON_PROTECT 2

#define CRYPT_FORMAT_CRLF 512

#define PROV_STT_ACQ 8

#define CMSG_HASHED_DATA_PKCS_1_5_VERSION 0

#define CERT_NAME_ISSUER_FLAG 1

#define CMSG_HASHED_DATA_V2 2

#define CMSG_HASHED_DATA_V0 0

#define CERT_ALT_NAME_REGISTERED_ID 9

#define KP_MODE_BITS 5

#define CERT_COMPARE_PROPERTY 5

#define ALG_CLASS_KEY_EXCHANGE 40960

#define KP_PUB_EX_LEN 28

#define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE 256

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK 255

#define CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG 1024

#define CERT_TRUST_PUB_ALLOW_END_USER_TRUST 0

#define CALG_3DES 26115

#define CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CERT_ALT_NAME_OTHER_NAME 1

#define CRYPT_MACHINE_DEFAULT 1

#define CERT_ENCODING_TYPE_MASK 65535

#define CALG_AGREEDKEY_ANY 43523

#define CERT_FIRST_USER_PROP_ID 32768

#define TIME_VALID_OID_GET_CTL 1

#define X509_BASIC_CONSTRAINTS 13

#define PKCS5_PADDING 1

#define AT_KEYEXCHANGE 1

#define CRYPT_DONT_CHECK_TIME_VALIDITY 512

#define CRYPT_ACQUIRE_CACHE_FLAG 1

#define KP_EFFECTIVE_KEYLEN 19

#define CERT_STORE_PROV_WRITE_CRL_FUNC 6

#define NETSCAPE_SIGN_CA_CERT_TYPE 1

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB 1

#define X509_ENUMERATED 29

#define CRYPT_BLOB_VER3 128

#define CRYPT_UI_PROMPT 4

#define PKCS12_IMPORT_RESERVED_MASK 4294901760

#define X509_ALTERNATE_NAME 12

#define X509_AUTHORITY_KEY_ID2 31

#define CERT_QUERY_CONTENT_FLAG_ALL 16382

#define PKCS_CONTENT_INFO 33

#define SCHANNEL_ENC_KEY 1

#define CERT_INFO_ISSUER_UNIQUE_ID_FLAG 9

#define X509_CERTIFICATE_TEMPLATE 64

#define X509_KEYGEN_REQUEST_TO_BE_SIGNED 21

#define CMC_FAIL_MUST_ARCHIVE_KEYS 6

#define CALG_AES_256 26128

#define CRL_REASON_CESSATION_OF_OPERATION_FLAG 4

#define CMSG_CTRL_DEL_SIGNER 7

#define ALG_TYPE_STREAM 2048

#define CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG 1

#define CERT_STORE_PROV_READ_CRL_FUNC 5

#define CMSG_CTRL_ADD_CMS_SIGNER_INFO 20

#define CERT_FIND_ENHKEY_USAGE 655360

#define CMSG_AUTHENTICATED_ATTRIBUTES_FLAG 8

#define CMSG_RECIPIENT_INFO_PARAM 19

#define CRL_FIND_ISSUED_BY 1

#define ALG_SID_KEA 4

#define CERT_ID_SHA1_HASH 3

#define CERT_CHAIN_POLICY_SSL 4

#define CMSG_UNPROTECTED_ATTR_PARAM 37

#define ALG_CLASS_MSG_ENCRYPT 16384

#define CERT_STORE_PROV_COLLECTION 11

#define CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM 35

#define PKCS_RSA_PRIVATE_KEY 43

#define CMSG_RECIPIENT_INDEX_PARAM 18

#define CMSG_CERT_COUNT_PARAM 11

#define CERT_LDAP_STORE_SIGN_FLAG 65536

#define CERT_STORE_PROV_DELETED_FLAG 2

#define HP_TLS1PRF_LABEL 6

#define CRYPT_INSTALL_OID_INFO_BEFORE_FLAG 1

#define CERT_QUERY_CONTENT_FLAG_PKCS10 2048

#define CRYPT_KEYID_DELETE_FLAG 16

#define CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG 2

#define CMSG_SIGNED_DATA_CMS_VERSION 3

#define CERT_STORE_CTRL_COMMIT_CLEAR_FLAG 2

#define KP_KEYEXCHANGE_PIN 32

#define PP_ENUMALGS 1

#define CERT_CREATE_SELFSIGN_NO_KEY_INFO 2

#define CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS 3840

#define CERT_RDN_GRAPHIC_STRING 8

#define CRYPT_POLICY_OID_GROUP_ID 8

#define CERT_COMPARE_MASK 65535

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 4

#define CMSG_DATA 1

#define CMSG_CONTENTS_OCTETS_FLAG 16

#define CERT_FIND_VALID_ENHKEY_USAGE_FLAG 32

#define CMSG_VERIFY_SIGNER_CERT 2

#define CMSG_SIGNER_AUTH_ATTR_PARAM 9

#define CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL 2

#define CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC 4

#define CERT_SIGNATURE_HASH_PROP_ID 15

#define X509_EXTENSIONS 5

#define CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG 131072

#define PROV_INTEL_SEC 22

#define CALG_SEAL 26626

#define X509_DSS_PARAMETERS 39

#define CERT_INFO_SIGNATURE_ALGORITHM_FLAG 3

#define CERT_ARCHIVED_PROP_ID 19

#define PP_KEYEXCHANGE_KEYSIZE 12

#define CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED 4

#define CRYPT_EXPORTABLE 1

#define CRL_REASON_SUPERSEDED 4

#define CRYPT_ASN_ENCODING 1

#define CERT_STORE_NO_CRYPT_RELEASE_FLAG 1

#define CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC 12

#define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE 32768

#define CERT_TRUST_IS_NOT_TIME_VALID 1

#define X509_DH_PARAMETERS 47

#define CERT_STORE_SAVE_AS_PKCS7 2

#define TIME_VALID_OID_FLUSH_CTL 1

#define CALG_SCHANNEL_ENC_KEY 19463

#define CRYPT_EXT_OR_ATTR_OID_GROUP_ID 6

#define CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG 256

#define CERT_RDN_T61_STRING 5

#define EXPORT_PRIVATE_KEYS 4

#define CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG 2

#define CMSG_ENVELOPED_DATA_CMS_VERSION 2

#define ALG_SID_RSA_ANY 0

#define PP_USE_HARDWARE_RNG 38

#define CRYPTLIMIT_USING_SGC 2

#define CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY 2147483648

#define CERT_NAME_STR_SEMICOLON_FLAG 1073741824

#define CMSG_HASH_ALGORITHM_PARAM 20

#define CMC_STATUS_FAILED 2

#define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY 2

#define PUBLICKEYBLOB 6

#define CERT_VERIFY_ALLOW_MORE_USAGE_FLAG 8

#define CRYPT_X942_KEY_LENGTH_BYTE_LENGTH 4

#define CRYPT_FAILED 0

#define CERT_STORE_ADD_USE_EXISTING 2

#define CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG 1

#define CALG_SSL3_SHAMD5 32776

#define CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID 2

#define ALG_SID_RSA_PKCS 1

#define PROV_EC_ECDSA_FULL 16

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG 2

#define ALG_SID_DH_EPHEM 2

#define CERT_NAME_ATTR_TYPE 3

#define CERT_COMPARE_CROSS_CERT_DIST_POINTS 17

#define ALG_SID_SHA 4

#define CERT_FRIENDLY_NAME_PROP_ID 11

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE 589824

#define CMC_FAIL_UNSUPORTED_EXT 5

#define CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG 16

#define CERT_TRUST_IS_CYCLIC 128

#define CMSG_CTRL_ADD_ATTR_CERT 14

#define ALG_TYPE_DSS 512

#define CMSG_VERSION_PARAM 30

#define CRYPT_FORMAT_SIMPLE 1

#define CERT_CREATE_CONTEXT_NO_ENTRY_FLAG 8

#define CERT_QUERY_CONTENT_PFX 12

#define CERT_CHAIN_ENABLE_SHARE_STORE 32

#define CMSG_ENCODED_SIGNER 28

#define CRYPT_FORMAT_COMMA 4096

#define CERT_STORE_PROV_SYSTEM_REGISTRY 13

#define X509_KEY_ATTRIBUTES 10

#define CRYPT_MAC 32

#define CRYPT_OID_INFO_OID_KEY 1

#define X509_CERT_PAIR 53

#define CRYPT_MODE_CTS 5

#define CRYPT_LDAP_SIGN_RETRIEVAL 65536

#define CERT_ENHKEY_USAGE_PROP_ID 9

#define NETSCAPE_SSL_CA_CERT_TYPE 4

#define PP_ENUMMANDROOTS 25

#define CERT_CHAIN_FIND_BY_ISSUER 1

#define URL_OID_CERTIFICATE_ISSUER 1

#define X509_NDR_ENCODING 2

#define CERT_RDN_TYPE_MASK 255

#define CMSG_INDEFINITE_LENGTH 4294967295

#define ALG_SID_RIPEMD 6

#define CTL_ENTRY_FROM_PROP_CHAIN_FLAG 1

#define ALG_SID_PCT1_MASTER 4

#define CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG 2

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_A 1

#define CRL_REASON_CA_COMPROMISE 2

#define CRYPT_MACHINE_KEYSET 32

#define CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG 65536

#define X509_BITS 26

#define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT 8192

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_W 2

#define CERT_STORE_LOCALIZED_NAME_PROP_ID 4096

#define CRYPT_TEMPLATE_OID_GROUP_ID 9

#define CERT_FIND_HASH 65536

#define CERT_STORE_CTL_CONTEXT 3

#define PKCS12_EXPORT_RESERVED_MASK 4294901760

#define TIME_VALID_OID_GET_CRL 2

#define CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG 4

#define CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC 8

#define CRL_REASON_KEY_COMPROMISE 1

#define PP_UNIQUE_CONTAINER 36

#define CMSG_KEY_TRANS_CMS_VERSION 2

#define CERT_QUERY_CONTENT_CRL 3

#define CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 65536

#define CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG 1

#define CMSG_INNER_CONTENT_TYPE_PARAM 4

#define CERT_STORE_SIGNATURE_FLAG 1

#define ALG_SID_SCHANNEL_MASTER_HASH 2

#define CERT_COMPARE_MD5_HASH 4

#define CERT_FORTEZZA_DATA_PROP_ID 18

#define CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG 4

#define CERT_LAST_RESERVED_PROP_ID 32767

#define CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG 1

#define CRYPT_IPSEC_HMAC_KEY 256

#define CERT_EXCLUDED_SUBTREE_BIT 2147483648

#define CMSG_VERIFY_SIGNER_PUBKEY 1

#define CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT 0

#define CERT_STORE_PROV_FILENAME_W 8

#define CERT_STORE_CERTIFICATE_CONTEXT 1

#define CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG 1

#define CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG 8

#define CERT_STORE_PROV_DELETE_CERT_FUNC 3

#define CERT_PUBKEY_HASH_RESERVED_PROP_ID 8

#define CERT_FIND_ISSUER_OF 786432

#define CERT_FIND_PROPERTY 327680

#define KP_KEYLEN 9

#define CERT_RDN_ENABLE_T61_UNICODE_FLAG 2147483648

#define CERT_STORE_PROV_FILENAME_A 7

#define PROV_STT_ROOT 10

#define CMSG_ENCRYPTED 6

#define CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC 16

#define CERT_QUERY_CONTENT_CTL 2

#define X509_CERT_REQUEST_TO_BE_SIGNED 4

#define CERT_TRUST_IS_NOT_VALID_FOR_USAGE 16

#define CRYPT_MODE_OFBP 8

#define ALG_SID_DH_SANDF 1

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED 256

#define CRYPT_SERVER 1024

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG 8

#define CMSG_CTRL_VERIFY_HASH 5

#define CERT_RDN_NUMERIC_STRING 3

#define CERT_VERIFY_NO_TIME_CHECK_FLAG 4

#define CERT_STORE_SHARE_STORE_FLAG 64

#define CERT_STORE_PROV_EXTERNAL_FLAG 1

#define CALG_HMAC 32777

#define CMC_RESPONSE 60

#define CRYPT_VERIFYCONTEXT 4026531840

#define CERT_STORE_ADD_REPLACE_EXISTING 3

#define CERT_NAME_STR_CRLF_FLAG 134217728

#define CMC_OTHER_INFO_NO_CHOICE 0

#define CRYPT_DELETE_KEYSET 16

#define CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG 2

#define NETSCAPE_SIGN_CERT_TYPE 16

#define CERT_STORE_NO_CRL_FLAG 65536

#define PP_KEYSET_SEC_DESCR 8

#define CERT_STORE_CTRL_COMMIT_FORCE_FLAG 1

#define ALG_SID_SAFERSK128 8

#define CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES 5

#define CMSG_SIGNER_INFO_PKCS_1_5_VERSION 1

#define CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG 2

#define CERT_COMPARE_CTL_USAGE 10

#define CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED 3

#define CMC_FAIL_POP_FAILED 9

#define CMC_FAIL_BAD_MESSAGE_CHECK 1

#define CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG 2147483648

#define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING 64

#define CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG 4

#define CTL_FIND_SUBJECT 4

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG 1

#define CRYPT_UPDATE_KEY 8

#define ALG_SID_RSA_ENTRUST 3

#define CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR 8

#define CRYPT_WRITE 16

#define CMSG_CTRL_DECRYPT 2

#define URL_OID_CRL_ISSUER 5

#define CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG 4

#define CALG_RC2 26114

#define CERT_FIND_OPTIONAL_CTL_USAGE_FLAG 1

#define CERT_STORE_PROV_FIND_CERT_FUNC 14

#define CRYPT_IMPL_MIXED 3

#define CRYPT_FIND_MACHINE_KEYSET_FLAG 2

#define ALG_SID_SCHANNEL_ENC_KEY 7

#define CERT_SYSTEM_STORE_SERVICES 327680

#define CRYPT_X942_PUB_INFO_BYTE_LENGTH 64

#define CALG_RC4 26625

#define CALG_RC5 26125

#define ALG_SID_RSA_MSATWORK 2

#define CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG 2

#define PP_KEYEXCHANGE_PIN 32

#define CERT_STORE_CRL_CONTEXT_FLAG 4

#define PP_APPLI_CERT 18

#define CRL_FIND_ISSUED_BY_AKI_FLAG 1

#define CRYPTPROTECT_PROMPT_RESERVED 4

#define CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG 32768

#define CRYPT_STRING_BASE64X509CRLHEADER 9

#define CRL_REASON_AFFILIATION_CHANGED_FLAG 16

#define CERT_KEY_PROV_HANDLE_PROP_ID 1

#define CERT_DATA_ENCIPHERMENT_KEY_USAGE 16

#define CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID 28

#define CRYPT_FIND_SILENT_KEYSET_FLAG 64

#define CERT_RDN_UNICODE_STRING 12

#define CERT_CHAIN_POLICY_NT_AUTH 6

#define CRYPT_ACQUIRE_SILENT_FLAG 64

#define CMSG_CMS_RECIPIENT_COUNT_PARAM 33

#define CERT_INFO_NOT_AFTER_FLAG 6

#define CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG 64

#define REPORT_NO_PRIVATE_KEY 1

#define CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG 512

#define CERT_COMPARE_SUBJECT_CERT 11

#define CERT_NON_REPUDIATION_KEY_USAGE 64

#define CRL_REASON_SUPERSEDED_FLAG 8

#define CMSG_CRL_PARAM 14

#define CTL_FIND_MD5_HASH 2

#define CRYPT_MODE_CFB 4

#define CRYPT_CREATE_SALT 4

#define CRYPT_NEWKEYSET 8

#define CERT_STORE_CTL_CONTEXT_FLAG 8

#define KP_KEYVAL 30

#define CRL_DIST_POINT_NO_NAME 0

#define CRYPT_OID_INFO_NAME_KEY 2

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID 8

#define CERT_STORE_ADD_ALWAYS 4

#define X509_CERT_POLICIES 16

#define CERT_IE30_RESERVED_PROP_ID 7

#define CRYPT_STRING_HEXADDR 10

#define CALG_NO_SIGN 8192

#define CALG_AES 26129

#define CMC_TAGGED_CERT_REQUEST_CHOICE 1

#define CRYPT_DONT_CACHE_RESULT 8

#define CERT_SYSTEM_STORE_USERS_ID 6

#define ALG_SID_TLS1PRF 10

#define PP_SYM_KEYSIZE 19

#define CRYPT_STRING_HEXASCIIADDR 11

#define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE 524288

#define CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG 524288

#define CMC_STATUS_SUCCESS 0

#define CERT_RDN_TELETEX_STRING 5

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID 9

#define URL_OID_CROSS_CERT_DIST_POINT 8

#define X509_KEY_USAGE 14

#define CALG_TLS1PRF 32778

#define CALG_CYLINK_MEK 26124

#define CERT_QUERY_CONTENT_FLAG_CERT_PAIR 8192

#define CERT_EFS_PROP_ID 17

#define X509_POLICY_CONSTRAINTS 57

#define CRYPT_MESSAGE_SILENT_KEYSET_FLAG 64

#define PROV_RSA_AES 24

#define HP_TLS1PRF_SEED 7

#define CERT_ACCESS_STATE_PROP_ID 14

#define CMSG_RC4_NO_SALT_FLAG 1073741824

#define PP_NAME 4

#define CERT_UNICODE_VALUE_ERR_INDEX_SHIFT 0

#define CERT_STORE_MAXIMUM_ALLOWED_FLAG 4096

#define CERT_TRUST_HAS_NAME_MATCH_ISSUER 4

#define CRL_FIND_ISSUED_FOR 3

#define CRL_REASON_AFFILIATION_CHANGED 3

#define PP_ADMIN_PIN 31

#define X509_CRL_DIST_POINTS 35

#define TIME_VALID_OID_GET_CRL_FROM_CERT 3

#define CERT_FIND_CERT_ID 1048576

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL 4

#define CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG 262144

#define CERT_RDN_VIDEOTEX_STRING 6

#define X509_DSS_PUBLICKEY 38

#define PKCS_SORTED_CTL 49

#define CERT_COMPARE_NAME 2

#define CRYPT_ASYNC_RETRIEVAL 16

#define CERT_END_ENTITY_SUBJECT_FLAG 64

#define CRYPT_STICKY_CACHE_RETRIEVAL 4096

#define CERT_SYSTEM_STORE_RELOCATE_FLAG 2147483648

#define CMSG_KEY_AGREE_STATIC_KEY_CHOICE 2

#define CERT_STORE_SET_LOCALIZED_NAME_FLAG 2

#define CERT_TRUST_IS_COMPLEX_CHAIN 65536

#define KP_X 14

#define KP_Y 15

#define AUTHTYPE_CLIENT 1

#define CRYPT_X931_FORMAT 4

#define CERT_FIND_SHA1_HASH 65536

#define CERT_FIND_PUBKEY_MD5_HASH 1179648

#define CERT_ALT_NAME_EDI_PARTY_NAME 6

#define PP_IMPTYPE 3

#define CRYPT_EXPORT_KEY 64

#define CERT_DSS_R_LEN 20

#define CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG 4

#define CMSG_SIGNER_HASH_ALGORITHM_PARAM 8

#define PKCS_SMIME_CAPABILITIES 42

#define CERT_FIND_VALID_CTL_USAGE_FLAG 32

#define ALG_SID_CYLINK_MEK 12

#define CRL_REASON_CERTIFICATE_HOLD_FLAG 2

#define ALG_CLASS_HASH 32768

#define CERT_CHAIN_POLICY_BASIC_CONSTRAINTS 5

#define CMSG_CTRL_DEL_ATTR_CERT 15

#define CERT_DATE_STAMP_PROP_ID 27

#define CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION 2

#define CERT_ALT_NAME_VALUE_ERR_INDEX_MASK 65535

#define CERT_STORE_PROV_WRITE_CTL_FUNC 10

#define CERT_STORE_READONLY_FLAG 32768

#define CERT_TRUST_IS_PARTIAL_CHAIN 65536

#define X509_CERT_CRL_TO_BE_SIGNED 3

#define CERT_CHAIN_POLICY_AUTHENTICODE 2

#define CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG 256

#define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID 262144

#define ALG_SID_ANY 0

#define CERT_COMPARE_PUBLIC_KEY 6

#define KP_PREHASH 34

#define URL_OID_CTL_NEXT_UPDATE 4

#define PROV_EC_ECDSA_SIG 14

#define TIME_VALID_OID_FLUSH_CRL 2

#define CERT_UNICODE_ATTR_ERR_INDEX_SHIFT 16

#define CERT_STORE_DELTA_CRL_FLAG 512

#define CERT_STORE_CTRL_NOTIFY_CHANGE 2

#define CRL_REASON_KEY_COMPROMISE_FLAG 64

#define CERT_FIND_SIGNATURE_HASH 917504

#define CERT_ALT_NAME_DIRECTORY_NAME 5

#define SCHANNEL_MAC_KEY 0

#define CRYPT_ACQUIRE_COMPARE_KEY_FLAG 4

#define SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG 1

#define CERT_STORE_PROV_FREE_FIND_CERT_FUNC 15

#define CERT_STORE_PROV_SERIALIZED 6

#define PKCS7_SIGNER_INFO 500

#define CMSG_BARE_CONTENT_PARAM 3

#define CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CERT_STORE_PROV_SYSTEM_REGISTRY_A 12

#define CERT_CHAIN_POLICY_AUTHENTICODE_TS 3

#define CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG 4

#define CTL_FIND_SAME_USAGE_FLAG 1

#define CMSG_ENCODING_TYPE_MASK 4294901760

#define SORTED_CTL_EXT_COUNT_OFFSET 4

#define CERT_NAME_STR_COMMA_FLAG 67108864

#define X509_UNICODE_ANY_STRING 24

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL 128

#define CERT_STORE_BASE_CRL_FLAG 256

#define CALG_DH_SF 43521

#define CERT_FIND_EXISTING 851968

#define CRYPT_ENCRYPT_ALG_OID_GROUP_ID 2

#define CMSG_SIGNED 2

#define CRYPTPROTECT_AUDIT 16

#define CRYPT_USER_DEFAULT 2

#define X509_ISSUING_DIST_POINT 54

#define KP_PRECOMP_MD5 24

#define CMSG_SIGNED_FLAG 4

#define CERT_FIND_ANY 0

#define CERT_NAME_FRIENDLY_DISPLAY_TYPE 5

#define CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG 32768

#define CERT_SYSTEM_STORE_MASK 4294901760

#define KP_SIGNATURE_PIN 33

#define CERT_TRUST_HAS_KEY_MATCH_ISSUER 2

#define CERT_UNICODE_ATTR_ERR_INDEX_MASK 63

#define CERT_STORE_PROV_DELETE_CTL_FUNC 11

#define CERT_INFO_ISSUER_FLAG 4

#define X509_SEQUENCE_OF_ANY 34

#define KP_PADDING 3

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL 64

#define CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_CTRL_KEY_TRANS_DECRYPT 16

#define CRYPT_FLAG_SSL2 2

#define CRYPT_FLAG_SSL3 4

#define CERT_RDN_ISO646_STRING 9

#define X509_KEY_USAGE_RESTRICTION 11

#define CERT_KEY_AGREEMENT_KEY_USAGE 8

#define CALG_SHA1 32772

#define CERT_STORE_NO_ISSUER_FLAG 131072

#define ALG_SID_AES 17

#define CERT_STORE_PROV_SYSTEM_REGISTRY_W 13

#define CRYPT_PSTORE 2

#define CERT_FIND_OR_ENHKEY_USAGE_FLAG 16

#define CRYPT_FORMAT_OID 4

#define CERT_CHAIN_USE_LOCAL_MACHINE_STORE 8

#define CRYPT_KEYID_SET_NEW_FLAG 8192

#define CMC_DATA 59

#define CRYPT_FIND_USER_KEYSET_FLAG 1

#define KP_MODE 4

#define PROV_FORTEZZA 4

#define CERT_TRUST_REVOCATION_STATUS_UNKNOWN 64

#define CMSG_SIGNER_ONLY_FLAG 2

#define CERT_RDN_OCTET_STRING 2

#define CERT_FIND_ISSUER_STR_A 458756

#define CMC_FAIL_NO_KEY_REUSE 10

#define CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG 128

#define CMSG_BARE_CONTENT_FLAG 1

#define CRYPT_MESSAGE_KEYID_SIGNER_FLAG 4

#define CRYPT_IMPL_SOFTWARE 2

#define CERT_COMPARE_ATTR 3

#define CRYPTPROTECT_CRED_SYNC 8

#define X509_CERT 1

#define CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG 8

#define CERT_COMPARE_KEY_IDENTIFIER 15

#define CRYPT_USERDATA 1

#define CMSG_SIGNED_DATA_V3 3

#define CALG_SSL3_MASTER 19457

#define CTL_FIND_SHA1_HASH 1

#define CMSG_SIGNED_DATA_V1 1

#define CERT_ID_KEY_IDENTIFIER 2

#define CERT_RDN_BMP_STRING 12

#define CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS 1

#define AT_SIGNATURE 2

#define CMSG_CTRL_MAIL_LIST_DECRYPT 18

#define CERT_FIND_ISSUER_STR_W 524292

#define CMC_STATUS_PENDING 3

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG 32768

#define CMSG_ENCRYPTED_FLAG 64

#define CRYPT_FORMAT_X509 2

#define CRYPT_SGCKEY 8192

#define CRYPT_HASH_ALG_OID_GROUP_ID 1

#define CERT_FIND_KEY_IDENTIFIER 983040

#define CERT_SHA1_HASH_PROP_ID 3

#define CERT_RDN_IA5_STRING 7

#define CRYPT_MODE_CBC 1

#define CRYPT_SGC_ENUM 4

#define PP_KEYX_KEYSIZE_INC 35

#define KEY_LENGTH_MASK 4294901760

#define PP_UI_PROMPT 21

#define CERT_SYSTEM_STORE_UNPROTECTED_FLAG 1073741824

#define CERT_PUBKEY_ALG_PARA_PROP_ID 22

#define CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG 1

#define CRYPT_SECRETDIGEST 1

#define CERT_STORE_CTRL_CANCEL_NOTIFY 5

#define CRL_DIST_POINT_ERR_INDEX_SHIFT 24

#define PP_KEYSET_TYPE 27

#define CRYPT_VOLATILE 4096

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT 4

#define CRYPT_DONT_VERIFY_SIGNATURE 256

#define CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE 8

#define ALG_SID_RC4 1

#define CERT_ALT_NAME_RFC822_NAME 2

#define CALG_MAC 32773

#define ALG_SID_RC2 2

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG 1

#define ALG_SID_RC5 13

#define CERT_STORE_PROV_SMART_CARD_W 15

#define PROV_DSS 3

#define CMSG_CMS_RECIPIENT_INFO_PARAM 36

#define CRYPT_STRING_BASE64HEADER 0

#define CTL_FIND_USAGE 3

#define RANDOM_PADDING 2

#define CERT_UNICODE_RDN_ERR_INDEX_MASK 1023

#define AUTHTYPE_SERVER 2

#define CERT_TRUST_IS_REVOKED 4

#define CALG_MD5 32771

#define CERT_COMPARE_SHIFT 16

#define CALG_MD2 32769

#define CALG_MD4 32770

#define PRIVATEKEYBLOB 7

#define CRYPT_NOHASHOID 1

#define CRL_DIST_POINT_FULL_NAME 1

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT 4

#define CERT_NAME_SIMPLE_DISPLAY_TYPE 4

#define USAGE_MATCH_TYPE_OR 1

#define X509_CHOICE_OF_TIME 30

#define CERT_STORE_SAVE_TO_FILENAME_W 4

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY 1

#define CRYPT_IMPORT_KEY 128

#define HP_ALGID 1

#define CERT_SYSTEM_STORE_LOCATION_MASK 16711680

#define CERT_SYSTEM_STORE_CURRENT_SERVICE_ID 4

#define CERT_STORE_SAVE_TO_FILENAME_A 3

#define CMC_ADD_ATTRIBUTES 63

#define CMSG_HASHED_DATA_CMS_VERSION 2

#define PP_CHANGE_PASSWORD 7

#define CRYPT_STRING_NOCR 2147483648

#define CERT_CHAIN_POLICY_MICROSOFT_ROOT 7

#define CMSG_SIGNED_AND_ENVELOPED_FLAG 16

#define CRYPT_DECRYPT 2

#define CERT_KEYGEN_REQUEST_V1 0

#define ALG_SID_TLS1_MASTER 6

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY 524288

#define CERT_CLOSE_STORE_FORCE_FLAG 1

#define CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED 10

#define CERT_CRL_SIGN_KEY_USAGE 2

#define CERT_NEXT_UPDATE_LOCATION_PROP_ID 10

#define CERT_COMPARE_ANY 0

#define CERT_SIMPLE_NAME_STR 1

#define PP_SIGNATURE_KEYSIZE 13

#define CERT_QUERY_OBJECT_BLOB 2

#define CERT_COMPARE_SIGNATURE_HASH 14

#define CRL_FIND_ISSUED_BY_SIGNATURE_FLAG 2

#define CERT_QUERY_CONTENT_FLAG_CERT 2

#define SORTED_CTL_EXT_FLAGS_OFFSET 0

#define CRYPT_FORMAT_RDN_REVERSE 2048

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG 4

#define CMSG_KEY_TRANS_RECIPIENT 1

#define X509_PUBLIC_KEY_INFO 8

#define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT 4096

#define CMSG_CRL_COUNT_PARAM 13

#define PP_SIGNATURE_PIN 33

#define KP_BLOCKLEN 8

#define CERT_ALT_NAME_DNS_NAME 3

#define URL_OID_CRL_FRESHEST_CRL 7

#define PKCS_TIME_REQUEST 18

#define CERT_MD5_HASH_PROP_ID 4

#define URL_OID_CERTIFICATE_CRL_DIST_POINT 2

#define CERT_STORE_PROV_REG 4

#define CERT_FIND_SUBJECT_STR 524295

#define ALG_SID_AES_256 16

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL 5

#define CMSG_KEY_TRANS_PKCS_1_5_VERSION 0

#define CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN 48

#define CERT_STORE_PROV_SYSTEM 10

#define CMSG_KEY_AGREE_ORIGINATOR_CERT 1

#define CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT 24

#define CMSG_USE_SIGNER_INDEX_FLAG 4

#define CRYPT_X942_COUNTER_BYTE_LENGTH 4

#define KP_PUB_PARAMS 39

#define CRL_V1 0

#define CRL_V2 1

#define PKCS_ATTRIBUTE 22

#define CRYPT_REGISTER_FIRST_INDEX 0

#define CRYPT_RDN_ATTR_OID_GROUP_ID 5

#define CMSG_CTRL_ADD_CERT 10

#define PROV_SPYRUS_LYNKS 20

#define KP_CMS_DH_KEY_INFO 38

#define CERT_QUERY_CONTENT_SERIALIZED_STORE 4

#define CMC_ADD_EXTENSIONS 62

#define X509_CRL_REASON_CODE 29

#define CERT_STORE_SHARE_CONTEXT_FLAG 128

#define CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS 7

#define CMSG_LENGTH_ONLY_FLAG 2

#define CERT_STORE_CRL_CONTEXT 2

#define CERT_STORE_PROV_FILENAME 8

#define CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG 4

#define CERT_TRUST_INVALID_NAME_CONSTRAINTS 2048

#define CMSG_ENCODED_MESSAGE 29

#define CRYPT_DECODE_NOCOPY_FLAG 1

#define PROV_DH_SCHANNEL 18

#define CERT_V1 0

#define CERT_COMPARE_PUBKEY_MD5_HASH 18

#define CERT_V2 1

#define CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG 2

#define CRYPT_SILENT 64

#define CMC_FAIL_INTERNAL_CA_ERROR 11

#define CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG 4

#define CERT_V3 2

#define ALG_SID_DSS_ANY 0

#define CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG 2

#define CALG_SHA 32772

#define CMC_FAIL_POP_REQUIRED 8

#define CERT_X500_NAME_STR 3

#define CMSG_CMS_ENCAPSULATED_CONTENT_FLAG 64

#define CMC_OTHER_INFO_PEND_CHOICE 2

#define CERT_REGISTRY_STORE_SERIALIZED_FLAG 131072

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CMSG_ALL_FLAGS -1

#define CERT_STORE_PROV_PKCS7 5

#define CERT_STORE_ALL_CONTEXT_FLAG -1

#define CRL_REASON_UNSPECIFIED 0

#define CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_DEFAULT_INSTALLABLE_FUNC_OID 1

#define CRYPT_RC2_40BIT_VERSION 160

#define CRYPT_OAEP 64

#define CERT_KEY_CONTEXT_PROP_ID 5

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG 1073741824

#define CERT_STORE_PROV_FREE_FIND_CTL_FUNC 21

#define CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC 22

#define CERT_QUERY_CONTENT_CERT_PAIR 13

#define CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG 8

#define PP_CONTEXT_INFO 11

#define CERT_SYSTEM_STORE_CURRENT_USER 65536

#define CERT_TRUST_IS_SELF_SIGNED 8

#define CERT_STORE_ENUM_ARCHIVED_FLAG 512

#define CRYPT_FASTSGC 2

#define CRYPT_STRING_ANY 7

#define CERT_QUERY_CONTENT_FLAG_CRL 8

#define CRYPT_DELETE_DEFAULT 4

#define CMSG_HASH_DATA_PARAM 21

#define CRYPT_CACHE_ONLY_RETRIEVAL 2

#define CERT_STORE_PROV_MSG 1

#define CTL_V1 0

#define CERT_STORE_PROV_SYSTEM_A 9

#define CERT_SUBJECT_NAME_MD5_HASH_PROP_ID 29

#define ALG_SID_CAST 6

#define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY 512

#define CRYPT_SSL2_FALLBACK 2

#define CRYPT_MODE_OFB 3

#define CMSG_CMS_RECIPIENT_INDEX_PARAM 34

#define X509_NAME_CONSTRAINTS 55

#define CMSG_HASHED_FLAG 32

#define KP_ADMIN_PIN 31

#define CERT_STORE_PROV_SYSTEM_W 10

#define CERT_NAME_STR_NO_PLUS_FLAG 536870912

#define CERT_STORE_CTRL_COMMIT 3

#define CERT_RDN_VISIBLE_STRING 9

#define CRYPT_NO_SALT 16

#define CRYPTPROTECT_NO_RECOVERY 32

#define CERT_QUERY_CONTENT_FLAG_CTL 4

#define NETSCAPE_SMIME_CERT_TYPE 32

#define PROV_RSA_SIG 2

#define X509_NAME 7

#define TIME_VALID_OID_FLUSH_CRL_FROM_CERT 3

#define CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR 9

#define CERT_HASH_PROP_ID 3

#define CRYPT_IMPL_HARDWARE 1

#define SIMPLEBLOB 1

#define ALG_SID_DSS_PKCS 1

#define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL 4

#define CERT_FIND_OR_CTL_USAGE_FLAG 16

#define CMSG_SIGNER_CERT_INFO_PARAM 7

#define CERT_STORE_SAVE_AS_STORE 1

#define CRYPT_FIRST_ALG_OID_GROUP_ID 1

#define CERT_QUERY_CONTENT_PKCS10 11

#define CALG_SCHANNEL_MASTER_HASH 19458

#define CRYPT_WIRE_ONLY_RETRIEVAL 4

#define CERT_STORE_PROV_FIND_CTL_FUNC 20

#define CERT_FILE_STORE_COMMIT_ENABLE_FLAG 65536

#define CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC 19

#define CERT_CONTEXT_REVOCATION_TYPE 1

#define CERT_NAME_EMAIL_TYPE 1

#define CMSG_ENCRYPTED_DIGEST 27

#define CRYPT_SEC_DESCR 1

#define X509_PKIX_POLICY_QUALIFIER_USERNOTICE 46

#define CERT_CREATE_CONTEXT_NOCOPY_FLAG 1

#define CMC_FAIL_BAD_ALG 0

#define CTL_ANY_SUBJECT_TYPE 1

#define CERT_RDN_UNIVERSAL_STRING 11

#define ALG_SID_MD2 1

#define CMSG_CTRL_VERIFY_SIGNATURE_EX 19

#define ALG_SID_MD5 3

#define CERT_STORE_PROV_SMART_CARD 15

#define ALG_SID_MD4 2

#define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL 262144

#define CERT_STORE_BACKUP_RESTORE_FLAG 2048

#define CERT_STORE_PROV_FIND_CRL_FUNC 17

#define ALG_SID_3DES_112 9

#define CERT_QUERY_OBJECT_FILE 1

#define CERT_STORE_CREATE_NEW_FLAG 8192

#define X509_MULTI_BYTE_UINT 38

#define CERT_NAME_DNS_TYPE 6

#define PP_SIG_KEYSIZE_INC 34

#define CRYPT_KEK 1024

#define KP_ALGID 7

#define CERT_RDN_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CROSS_CERT_DIST_POINT_ERR_INDEX_MASK 255

#define CRYPT_SF 256

#define CERT_SET_KEY_PROV_HANDLE_PROP_ID 1

#define CALG_PCT1_MASTER 19460

#define CMC_FAIL_BAD_IDENTITY 7

#define CERT_QUERY_CONTENT_SERIALIZED_CTL 6

#define X509_INTEGER 27

#define CRYPT_FLAG_IPSEC 16

#define KP_VERIFY_PARAMS 40

#define CRYPTPROTECT_PROMPT_ON_UNPROTECT 1

#define CMSG_CTRL_ADD_SIGNER 6

#define CMC_FAIL_BAD_CERT_ID 4

#define CRYPT_FORMAT_RDN_SEMICOLON 256

#define CRL_REASON_UNUSED_FLAG 128

#define CRYPT_IMPL_UNKNOWN 4

#define CMSG_ENVELOPED_RECIPIENT_V0 0

#define CMSG_ENVELOPED_RECIPIENT_V3 3

#define CMSG_ENVELOPED_RECIPIENT_V2 2

#define CMSG_ENVELOPED_RECIPIENT_V4 4

#define KP_IV 1

#define CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG 2

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN 536870912

#define CRYPT_GET_URL_FROM_EXTENSION 2

#define CERT_NAME_RDN_TYPE 2

#define CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG 2

#define CERT_COMPARE_NAME_STR_A 7

#define CERT_REGISTRY_STORE_ROAMING_FLAG 262144

#define ALG_SID_MAC 5

#define CERT_STORE_ADD_NEW 1

#define CERT_COMPARE_ENHKEY_USAGE 10

#define PP_KEY_TYPE_SUBTYPE 10

#define KP_G 12

#define KP_P 11

#define KP_Q 13

#define CERT_COMPARE_NAME_STR_W 8

#define CRYPT_RC2_56BIT_VERSION 52

#define CRYPT_NO_AUTH_RETRIEVAL 131072

#define CERT_SYSTEM_STORE_LOCAL_MACHINE 131072

#define CERT_TRUST_IS_OFFLINE_REVOCATION 16777216

#define CERT_FIND_ISSUER_STR 524292

#define ALG_CLASS_ALL 57344

#define CERT_QUERY_CONTENT_FLAG_PFX 4096

#define CERT_COMPARE_CERT_ID 16

#define CMSG_SIGNED_DATA_PKCS_1_5_VERSION 1

#define CERT_STORE_SAVE_TO_FILE 1

#define CTL_FIND_NO_SIGNER_PTR -1

#define CERT_ID_ISSUER_SERIAL_NUMBER 1

#define CRYPT_STRING_BASE64_ANY 6

#define CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG 1

#define PP_ENUMEX_SIGNING_PROT 40

#define X509_CERT_TO_BE_SIGNED 2

#define CRYPT_VERIFY_CONTEXT_SIGNATURE 32

#define CERT_STORE_PROV_FILE 3

#define CERT_STORE_PROV_MEMORY 2

#define CERT_STORE_SAVE_TO_MEMORY 2

#define CERT_ACCESS_STATE_SYSTEM_STORE_FLAG 2

#define NETSCAPE_SMIME_CA_CERT_TYPE 2

#define CERT_QUERY_CONTENT_SERIALIZED_CRL 7

#define CMSG_ENVELOPED_DATA_V0 0

#define CERT_OFFLINE_CRL_SIGN_KEY_USAGE 2

#define CERT_STORE_TIME_VALIDITY_FLAG 2

#define CMSG_ENVELOPED_DATA_V2 2

#define PKCS_7_NDR_ENCODING 131072

#define CMSG_ENVELOPED 3

#define ALG_SID_RSA_PGP 4

#define ALG_CLASS_ANY 0

#define CRL_REASON_REMOVE_FROM_CRL 8

#define CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG 16777216

#define CERT_DIGITAL_SIGNATURE_KEY_USAGE 128

#define CRL_REASON_CERTIFICATE_HOLD 6

#define CERT_REQUEST_V1 0

#define CMSG_MAX_LENGTH_FLAG 32

#define CRL_FIND_ISSUED_BY_DELTA_FLAG 4

#define KP_OAEP_PARAMS 36

#define CERT_STORE_CERTIFICATE_CONTEXT_FLAG 2

#define CERT_RDN_ENCODED_BLOB 1

#define HCCE_LOCAL_MACHINE 1

#define PROV_RNG 21

#define CRYPT_FORMAT_STR_NO_HEX 16

#define ALG_SID_DES 1

#define MAXUIDLEN 64

#define CERT_FIND_SUBJECT_NAME 131079

#define CERT_TRUST_INVALID_BASIC_CONSTRAINTS 1024

#define CALG_HUGHES_MD5 40963

#define CRL_FIND_EXISTING 2

#define KP_SERVER_RANDOM 22

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED 1024

#define ALG_SID_SSL2_MASTER 5

#define KP_RA 16

#define CERT_STORE_PROV_LDAP_W 16

#define CERT_EXTENDED_ERROR_INFO_PROP_ID 30

#define KP_RB 17

#define CRYPT_GET_URL_FROM_PROPERTY 1

#define SORTED_CTL_EXT_MAX_COLLISION_OFFSET 8

#define KP_RP 23

#define PP_SGC_INFO 37

#define CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY 2

#define CERT_REGISTRY_STORE_LM_GPT_FLAG 16777216

#define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT 134217728

#define PP_CERTCHAIN 9

#define PP_ENUMELECTROOTS 26

#define CERT_VERIFY_REV_CHAIN_FLAG 1

#define CRYPT_KEYID_MACHINE_FLAG 32

#define CERT_NAME_UPN_TYPE 8

#define CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES 7

#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY 458752

#define CMSG_SIGNER_CERT_ID_PARAM 38

#define CERT_NAME_STR_NO_QUOTING_FLAG 268435456

#define CMSG_MAIL_LIST_RECIPIENT 3

#define CERT_FIND_ISSUER_ATTR 196612

#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CMSG_CONTENT_PARAM 2

#define CMSG_CTRL_VERIFY_SIGNATURE 1

#define CRYPT_DELETEKEYSET 16

#define ALG_SID_AES_192 15

#define CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID 25

#define CERT_STORE_PROV_PHYSICAL 14

#define CRYPT_ENHKEY_USAGE_OID_GROUP_ID 7

#define CTL_FIND_EXISTING 5

#define CMSG_KEY_AGREE_VERSION 3

#define CERT_QUERY_FORMAT_FLAG_BINARY 2

#define PP_KEYSPEC 39

#define CERT_ACCESS_STATE_WRITE_PERSIST_FLAG 1

#define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT 16384

#define CRL_DIST_POINT_ERR_CRL_ISSUER_BIT 2147483648

#define CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG 1

#define CMSG_CTRL_DEL_CERT 11

#define KP_INFO 18

#define ALG_SID_SHA1 4

#define CMSG_CMS_SIGNER_INFO_PARAM 39

#define CRYPT_OFFLINE_CHECK_RETRIEVAL 16384

#define CRYPT_Y_ONLY 1

#define CERT_ALT_NAME_X400_ADDRESS 4

#define CRYPT_SGC 1

#define CERT_CA_SUBJECT_FLAG 128

#define PROV_RSA_FULL 1

#define CRYPT_STRING_BINARY 2

#define ALG_SID_HASH_REPLACE_OWF 11

#define CERT_QUERY_FORMAT_BINARY 1

#define PP_DELETEKEY 24

#define CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID 1

#define CMSG_ENVELOPE_ALGORITHM_PARAM 15

#define CMC_FAIL_BAD_TIME 3

#define CMC_FAIL_BAD_REQUEST 2

#define CERT_KEY_IDENTIFIER_PROP_ID 20

#define CMSG_CTRL_KEY_AGREE_DECRYPT 17

#define KP_PUB_EX_VAL 29

#define HP_HASHSIZE 4

#define CERT_RDN_UTF8_STRING 13

#define CRYPT_ARCHIVABLE 16384

#define CRYPT_NEXT 2

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG 1

#define PROV_REPLACE_OWF 23

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG 4

#define CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG 1

#define CALG_DH_EPHEM 43522

#define X509_UNICODE_NAME_VALUE 24

typedef uLong uLongf;

typedef int intf;

typedef uInt uIntf;

#define MAX_MEM_LEVEL 9


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_SET - /deps/mmsystem.h/defines/define_SEEK_SET */


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_CUR - /deps/mmsystem.h/defines/define_SEEK_CUR */

#define MAX_WBITS 15


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_END - /deps/mmsystem.h/defines/define_SEEK_END */

typedef struct _PROPSHEETHEADERW _PROPSHEETHEADERW, *P_PROPSHEETHEADERW;

typedef union _union_1409.conflict _union_1409.conflict, *P_union_1409.conflict;

typedef union _union_1410 _union_1410, *P_union_1410;

typedef union _union_1411.conflict _union_1411.conflict, *P_union_1411.conflict;

typedef int (*PFNPROPSHEETCALLBACK)(HWND, UINT, LPARAM);

typedef union _union_1412.conflict _union_1412.conflict, *P_union_1412.conflict;

typedef union _union_1413.conflict _union_1413.conflict, *P_union_1413.conflict;

typedef struct _PROPSHEETPAGEW _PROPSHEETPAGEW, *P_PROPSHEETPAGEW;

typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW_V2;

typedef PROPSHEETPAGEW_V2 *LPCPROPSHEETPAGEW_V2;

typedef LPCPROPSHEETPAGEW_V2 LPCPROPSHEETPAGEW;

typedef union _union_1397.conflict _union_1397.conflict, *P_union_1397.conflict;

typedef union _union_1398 _union_1398, *P_union_1398;

typedef UINT (*LPFNPSPCALLBACKW)(HWND, UINT, struct _PROPSHEETPAGEW *);

typedef LPCDLGTEMPLATE PROPSHEETPAGE_RESOURCE;

union _union_1411.conflict {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE *phpage;
};

union _union_1410 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

union _union_1413.conflict {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

union _union_1409.conflict {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1412.conflict {
    HBITMAP hbmWatermark;
    LPCWSTR pszbmWatermark;
};

struct _PROPSHEETHEADERW {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1409.conflict field4_0x10;
    LPCWSTR pszCaption;
    UINT nPages;
    union _union_1410 field7_0x1c;
    union _union_1411.conflict field8_0x20;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1412.conflict field10_0x28;
    HPALETTE hplWatermark;
    union _union_1413.conflict field12_0x30;
};

union _union_1397.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1398 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1397.conflict field3_0xc;
    union _union_1398 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
};

typedef union _union_1388.conflict _union_1388.conflict, *P_union_1388.conflict;

union _union_1388.conflict {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1407.conflict _union_1407.conflict, *P_union_1407.conflict;

union _union_1407.conflict {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

typedef union _union_1391.conflict _union_1391.conflict, *P_union_1391.conflict;

union _union_1391.conflict {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef struct _PROPSHEETPAGEA_V3 _PROPSHEETPAGEA_V3, *P_PROPSHEETPAGEA_V3;

typedef struct _PROPSHEETPAGEA_V3 PROPSHEETPAGEA_V3;

typedef union _union_1392 _union_1392, *P_union_1392;

typedef struct _PROPSHEETPAGEA _PROPSHEETPAGEA, *P_PROPSHEETPAGEA;

typedef UINT (*LPFNPSPCALLBACKA)(HWND, UINT, struct _PROPSHEETPAGEA *);

typedef union _union_1389 _union_1389, *P_union_1389;

union _union_1392 {
    HICON hIcon;
    LPCSTR pszIcon;
};

struct _PROPSHEETPAGEA_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1391.conflict field3_0xc;
    union _union_1392 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

union _union_1389 {
    HICON hIcon;
    LPCSTR pszIcon;
};

struct _PROPSHEETPAGEA {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1388.conflict field3_0xc;
    union _union_1389 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA_V2;

typedef struct _PROPSHEETPAGEA_V1 _PROPSHEETPAGEA_V1, *P_PROPSHEETPAGEA_V1;

typedef struct _PROPSHEETPAGEA_V1 PROPSHEETPAGEA_V1;

typedef union _union_1385 _union_1385, *P_union_1385;

typedef union _union_1386 _union_1386, *P_union_1386;

union _union_1386 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1385 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1385 field3_0xc;
    union _union_1386 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
};

typedef struct _PROPSHEETPAGEW_V3 _PROPSHEETPAGEW_V3, *P_PROPSHEETPAGEW_V3;

typedef struct _PROPSHEETPAGEW_V3 PROPSHEETPAGEW_V3;

typedef PROPSHEETPAGEW_V3 PROPSHEETPAGEW_LATEST;

typedef union _union_1400.conflict _union_1400.conflict, *P_union_1400.conflict;

typedef union _union_1401 _union_1401, *P_union_1401;

union _union_1400.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1401 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1400.conflict field3_0xc;
    union _union_1401 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

typedef BOOL (*LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);

typedef BOOL (*LPFNADDPROPSHEETPAGES)(LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);

typedef struct _PROPSHEETHEADERA _PROPSHEETHEADERA, *P_PROPSHEETHEADERA;

typedef union _union_1403.conflict _union_1403.conflict, *P_union_1403.conflict;

typedef union _union_1404 _union_1404, *P_union_1404;

typedef union _union_1405.conflict _union_1405.conflict, *P_union_1405.conflict;

typedef union _union_1406.conflict _union_1406.conflict, *P_union_1406.conflict;

typedef PROPSHEETPAGEA_V2 *LPCPROPSHEETPAGEA_V2;

typedef LPCPROPSHEETPAGEA_V2 LPCPROPSHEETPAGEA;

union _union_1403.conflict {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1406.conflict {
    HBITMAP hbmWatermark;
    LPCSTR pszbmWatermark;
};

union _union_1404 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

union _union_1405.conflict {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE *phpage;
};

struct _PROPSHEETHEADERA {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1403.conflict field4_0x10;
    LPCSTR pszCaption;
    UINT nPages;
    union _union_1404 field7_0x1c;
    union _union_1405.conflict field8_0x20;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1406.conflict field10_0x28;
    HPALETTE hplWatermark;
    union _union_1407.conflict field12_0x30;
};

typedef struct _PROPSHEETHEADERW *LPPROPSHEETHEADERW;

typedef struct _PROPSHEETPAGEW_V1 _PROPSHEETPAGEW_V1, *P_PROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEW_V1 PROPSHEETPAGEW_V1;

typedef union _union_1394.conflict _union_1394.conflict, *P_union_1394.conflict;

typedef union _union_1395 _union_1395, *P_union_1395;

union _union_1394.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1395 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1394.conflict field3_0xc;
    union _union_1395 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
};

typedef PROPSHEETPAGEW_V2 PROPSHEETPAGEW;

typedef struct _PSHNOTIFY _PSHNOTIFY, *P_PSHNOTIFY;

struct _PSHNOTIFY {
    NMHDR hdr;
    LPARAM lParam;
};

typedef PROPSHEETPAGEA_V2 PROPSHEETPAGEA;

typedef union _union_1406 _union_1406, *P_union_1406;

union _union_1406 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

typedef struct _PROPSHEETHEADERA PROPSHEETHEADERA;

typedef union _union_1407 _union_1407, *P_union_1407;

union _union_1407 {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE *phpage;
};

typedef union _union_1408 _union_1408, *P_union_1408;

union _union_1408 {
    HBITMAP hbmWatermark;
    LPCSTR pszbmWatermark;
};

typedef union _union_1409 _union_1409, *P_union_1409;

union _union_1409 {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

typedef union _union_1402 _union_1402, *P_union_1402;

union _union_1402 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1403 _union_1403, *P_union_1403;

union _union_1403 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1405 _union_1405, *P_union_1405;

union _union_1405 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1400 _union_1400, *P_union_1400;

union _union_1400 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef struct _PROPSHEETHEADERA *LPPROPSHEETHEADERA;

typedef union _union_1413 _union_1413, *P_union_1413;

union _union_1413 {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE *phpage;
};

typedef union _union_1414 _union_1414, *P_union_1414;

union _union_1414 {
    HBITMAP hbmWatermark;
    LPCWSTR pszbmWatermark;
};

typedef union _union_1415 _union_1415, *P_union_1415;

union _union_1415 {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

typedef union _union_1411 _union_1411, *P_union_1411;

union _union_1411 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1412 _union_1412, *P_union_1412;

union _union_1412 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

typedef PROPSHEETPAGEA_V3 PROPSHEETPAGEA_LATEST;

typedef struct _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_V3;

typedef LPPROPSHEETPAGEW_V3 LPPROPSHEETPAGEW_LATEST;

typedef struct _PROPSHEETPAGEA *LPPROPSHEETPAGEA_V2;

typedef LPPROPSHEETPAGEA_V2 LPPROPSHEETPAGEA;

typedef struct _PROPSHEETPAGEW *LPPROPSHEETPAGEW_V2;

typedef LPPROPSHEETPAGEW_V2 LPPROPSHEETPAGEW;

typedef struct _PROPSHEETHEADERW PROPSHEETHEADERW;

typedef struct _PROPSHEETPAGEW_V1 *LPPROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_V3;

typedef struct _PROPSHEETPAGEA_V1 *LPPROPSHEETPAGEA_V1;

typedef PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_V3;

typedef PROPSHEETPAGEA_V1 *LPCPROPSHEETPAGEA_V1;

typedef PROPSHEETHEADERA *LPCPROPSHEETHEADERA;

typedef LPPROPSHEETPAGEA_V3 LPPROPSHEETPAGEA_LATEST;

typedef PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_V3;

typedef LPCPROPSHEETPAGEW_V3 LPCPROPSHEETPAGEW_LATEST;

typedef PROPSHEETHEADERW *LPCPROPSHEETHEADERW;

typedef PROPSHEETPAGEW_V1 *LPCPROPSHEETPAGEW_V1;

typedef LPCPROPSHEETPAGEA_V3 LPCPROPSHEETPAGEA_LATEST;

typedef struct _PSHNOTIFY PSHNOTIFY;

typedef union _union_1387 _union_1387, *P_union_1387;

union _union_1387 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef struct _PSHNOTIFY *LPPSHNOTIFY;

typedef union _union_1388 _union_1388, *P_union_1388;

union _union_1388 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1394 _union_1394, *P_union_1394;

union _union_1394 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1396 _union_1396, *P_union_1396;

union _union_1396 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1397 _union_1397, *P_union_1397;

union _union_1397 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1390 _union_1390, *P_union_1390;

union _union_1390 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1391 _union_1391, *P_union_1391;

union _union_1391 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1393 _union_1393, *P_union_1393;

union _union_1393 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1399 _union_1399, *P_union_1399;

union _union_1399 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

#define PSN_WIZFINISH -208

#define PSH_WIZARDCONTEXTHELP 4096

#define PSP_HASHELP 32

#define PSCB_INITIALIZED 1

#define PSP_PREMATURE 1024

#define PROP_LG_CXDLG 252

#define WIZ_CYDLG 140

#define PSWIZB_DISABLEDFINISH 8

#define PSH_WIZARD97 16777216

#define PROP_MED_CYDLG 215

#define PSM_REBOOTSYSTEM 1130

#define PSN_HELP -205

#define MAXPROPPAGES 100

#define PSM_RESTARTWINDOWS 1129

#define PSM_SETTITLEW 1144

#define WIZ_BODYCX 184

#define PSP_USEHEADERSUBTITLE 8192

#define PSNRET_INVALID 1

#define PSH_WIZARD 32

#define PSM_PRESSBUTTON 1137

#define PSH_USEPAGELANG 2097152

#define PSN_FIRST -200

#define PSH_USEHBMWATERMARK 65536

#define PSM_SETFINISHTEXT 1139

#define PSP_USETITLE 8

#define PSBTN_APPLYNOW 4

#define PSM_SETTITLE 1135

#define PSM_SETHEADERSUBTITLEA 1151

#define PSM_SETHEADERSUBTITLEW 1152

#define PSM_QUERYSIBLINGS 1132

#define PSM_SETHEADERSUBTITLE 1151

#define PSBTN_FINISH 2

#define PSH_USEHBMHEADER 1048576

#define PSM_SETFINISHTEXTA 1139

#define PSM_GETTABCONTROL 1140

#define PSN_QUERYINITIALFOCUS -213

#define PSM_ADDPAGE 1127

#define PSM_CANCELTOCLOSE 1131

#define PSH_USEHPLWATERMARK 131072

#define PSM_GETCURRENTPAGEHWND 1142

#define PROP_LG_CYDLG 218

#define PSBTN_BACK 0

#define WIZ_CXDLG 276

#define PSM_SETHEADERTITLEW 1150

#define PSN_SETACTIVE -200

#define PSP_RTLREADING 16

#define PSWIZB_NEXT 2

#define PSP_DLGINDIRECT 1

#define PSWIZB_BACK 1

#define PSBTN_HELP 6

#define PSM_HWNDTOINDEX 1153

#define PSBTN_MAX 6

#define PSP_USEICONID 4

#define PSBTN_NEXT 1

#define PSH_HASHELP 512

#define PSH_WATERMARK 32768

#define PSM_SETFINISHTEXTW 1145

#define PSM_PAGETOINDEX 1155

#define PSM_SETHEADERTITLE 1149

#define PSH_USEPSTARTPAGE 64

#define PSN_APPLY -202

#define PSM_SETCURSEL 1125

#define PSN_KILLACTIVE -201

#define PSM_IDTOINDEX 1157

#define PROP_SM_CYDLG 188

#define ID_PSRESTARTWINDOWS 2

#define PSPCB_ADDREF 0

#define PSH_DEFAULT 0

#define PSM_SETWIZBUTTONS 1136

#define PSN_WIZNEXT -207

#define PSM_APPLY 1134

#define PSBTN_CANCEL 5

#define PSP_USEREFPARENT 64

#define PSN_WIZBACK -206

#define PSH_USECALLBACK 256

#define PROP_SM_CXDLG 212

#define PSM_REMOVEPAGE 1126

#define PSM_INDEXTOPAGE 1156

#define PSH_NOCONTEXTHELP 33554432

#define PSP_USECALLBACK 128

#define PSH_NOAPPLYNOW 128

#define PSM_SETHEADERTITLEA 1149

#define PSP_DEFAULT 0

#define PSH_RTLREADING 2048

#define PSM_CHANGED 1128

#define PSNRET_MESSAGEHANDLED 3

#define PSM_ISDIALOGMESSAGE 1141

#define PSP_USEHEADERTITLE 4096

#define PSH_HEADER 524288

#define PSP_USEHICON 2

#define PSH_PROPSHEETPAGE 8

#define PSP_HIDEHEADER 2048

#define PSH_MODELESS 1024

#define PSM_INSERTPAGE 1143

#define ID_PSREBOOTSYSTEM 3

#define PROP_MED_CXDLG 227

#define PSN_QUERYCANCEL -209

#define PSM_UNCHANGED 1133

#define PSH_STRETCHWATERMARK 262144

#define PSM_GETRESULT 1159

#define _WIN32_IE 1281

#define PSM_INDEXTOHWND 1154

#define PSN_TRANSLATEACCELERATOR -212

#define PSM_SETCURSELID 1138

#define PSNRET_NOERROR 0

#define PSH_PROPTITLE 1

#define PSCB_PRECREATE 2

#define PSWIZB_FINISH 4

#define PSM_SETTITLEA 1135

#define PSH_WIZARDHASFINISH 16

#define WIZ_CXBMP 80

#define PSN_LAST -299

#define PSH_USEICONID 4

#define PSM_INDEXTOID 1158

#define PSN_GETOBJECT -210

#define PSPCB_CREATE 2

#define PSBTN_OK 3

#define PSN_RESET -203

#define PSM_RECALCPAGESIZES 1160

#define PSH_USEHICON 2

#define PSH_WIZARD_LITE 4194304

#define PSPCB_RELEASE 1

#define PSNRET_INVALID_NOCHANGEPAGE 2

#define WIZ_BODYX 92

typedef HANDLE GLOBALHANDLE;


/* WARNING! conflicting data type names: /deps/WinDef.h/HINSTANCE - /deps/windef.h/HINSTANCE */


/* WARNING! conflicting data type names: /deps/WinDef.h/HMODULE - /deps/windef.h/HMODULE */

typedef int (*FARPROC)(void);

typedef HANDLE *SPHANDLE;

typedef BOOL *LPBOOL;


/* WARNING! conflicting data type names: /deps/WinDef.h/HCURSOR - /deps/windef.h/HCURSOR */


/* WARNING! conflicting data type names: /deps/WinDef.h/HFONT - /deps/windef.h/HFONT */

typedef HANDLE LOCALHANDLE;

typedef char *PSZ;


/* WARNING! conflicting data type names: /deps/WinDef.h/HDC - /deps/windef.h/HDC */

typedef USHORT *PUSHORT;

typedef WORD *LPWORD;


/* WARNING! conflicting data type names: /deps/WinDef.h/HICON - /deps/windef.h/HICON */


/* WARNING! conflicting data type names: /deps/WinDef.h/HBITMAP - /deps/windef.h/HBITMAP */

typedef uint *PUINT;


/* WARNING! conflicting data type names: /deps/WinDef.h/HWND - /deps/windef.h/HWND */

typedef SIZE *PSIZEL;

typedef HANDLE HLOCAL;

typedef int (*NEARPROC)(void);


/* WARNING! conflicting data type names: /deps/WinDef.h/LPRECT - /deps/windef.h/LPRECT */

typedef int *PINT;

typedef FLOAT *PFLOAT;

typedef int (*PROC)(void);


/* WARNING! conflicting data type names: /deps/WinDef.h/HBRUSH - /deps/windef.h/HBRUSH */

typedef UCHAR *PUCHAR;

typedef DWORD *LPCOLORREF;

typedef int *LPINT;

typedef BOOL *PBOOL;


/* WARNING! conflicting data type names: /deps/WinDef.h/HMENU - /deps/windef.h/HMENU */


/* WARNING! conflicting data type names: /deps/WinDef.h/LPFILETIME - /deps/winbase.h/LPFILETIME */

typedef HANDLE *LPHANDLE;


/* WARNING! conflicting data type names: /deps/WinDef.h/HTASK - /deps/windef.h/HTASK */

typedef int HFILE;

typedef void *LPCVOID;

typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;

typedef struct tagCAFLT tagCAFLT, *PtagCAFLT;

struct tagCAFLT {
    ULONG cElems;
    FLOAT *pElems;
};

typedef struct tagCADATE tagCADATE, *PtagCADATE;

typedef struct tagCADATE CADATE;

struct tagCADATE {
    ULONG cElems;
    DATE *pElems;
};

typedef struct tagCACLSID tagCACLSID, *PtagCACLSID;

typedef struct tagCACLSID CACLSID;

struct tagCACLSID {
    ULONG cElems;
    CLSID *pElems;
};

typedef struct IPropertyStorage IPropertyStorage, *PIPropertyStorage;

typedef struct IPropertyStorageVtbl IPropertyStorageVtbl, *PIPropertyStorageVtbl;

typedef struct tagPROPSPEC tagPROPSPEC, *PtagPROPSPEC;

typedef struct tagPROPSPEC PROPSPEC;

typedef struct tagPROPVARIANT tagPROPVARIANT, *PtagPROPVARIANT;

typedef struct tagPROPVARIANT PROPVARIANT;

typedef struct IEnumSTATPROPSTG IEnumSTATPROPSTG, *PIEnumSTATPROPSTG;

typedef struct tagSTATPROPSETSTG tagSTATPROPSETSTG, *PtagSTATPROPSETSTG;

typedef struct tagSTATPROPSETSTG STATPROPSETSTG;

typedef union _union_2426 _union_2426, *P_union_2426;

typedef union _union_2421 _union_2421, *P_union_2421;

typedef struct IEnumSTATPROPSTGVtbl IEnumSTATPROPSTGVtbl, *PIEnumSTATPROPSTGVtbl;

typedef struct tagSTATPROPSTG tagSTATPROPSTG, *PtagSTATPROPSTG;

typedef struct tagSTATPROPSTG STATPROPSTG;

typedef struct _struct_2422 _struct_2422, *P_struct_2422;

typedef WORD PROPVAR_PAD1;

typedef WORD PROPVAR_PAD2;

typedef WORD PROPVAR_PAD3;

typedef union _union_2423 _union_2423, *P_union_2423;

typedef struct tagVersionedStream tagVersionedStream, *PtagVersionedStream;

typedef struct tagVersionedStream *LPVERSIONEDSTREAM;

typedef struct tagCAC tagCAC, *PtagCAC;

typedef struct tagCAC CAC;

typedef struct tagCAUB tagCAUB, *PtagCAUB;

typedef struct tagCAUB CAUB;

typedef struct tagCAI tagCAI, *PtagCAI;

typedef struct tagCAI CAI;

typedef struct tagCAUI tagCAUI, *PtagCAUI;

typedef struct tagCAUI CAUI;

typedef struct tagCAL tagCAL, *PtagCAL;

typedef struct tagCAL CAL;

typedef struct tagCAUL tagCAUL, *PtagCAUL;

typedef struct tagCAUL CAUL;

typedef struct tagCAH tagCAH, *PtagCAH;

typedef struct tagCAH CAH;

typedef struct tagCAUH tagCAUH, *PtagCAUH;

typedef struct tagCAUH CAUH;

typedef struct tagCAFLT CAFLT;

typedef struct tagCADBL tagCADBL, *PtagCADBL;

typedef struct tagCADBL CADBL;

typedef struct tagCABOOL tagCABOOL, *PtagCABOOL;

typedef struct tagCABOOL CABOOL;

typedef struct tagCASCODE tagCASCODE, *PtagCASCODE;

typedef struct tagCASCODE CASCODE;

typedef struct tagCACY tagCACY, *PtagCACY;

typedef struct tagCACY CACY;

typedef struct tagCAFILETIME tagCAFILETIME, *PtagCAFILETIME;

typedef struct tagCAFILETIME CAFILETIME;

typedef struct tagCACLIPDATA tagCACLIPDATA, *PtagCACLIPDATA;

typedef struct tagCACLIPDATA CACLIPDATA;

typedef struct tagCABSTR tagCABSTR, *PtagCABSTR;

typedef struct tagCABSTR CABSTR;

typedef struct tagCABSTRBLOB tagCABSTRBLOB, *PtagCABSTRBLOB;

typedef struct tagCABSTRBLOB CABSTRBLOB;

typedef struct tagCALPSTR tagCALPSTR, *PtagCALPSTR;

typedef struct tagCALPSTR CALPSTR;

typedef struct tagCALPWSTR tagCALPWSTR, *PtagCALPWSTR;

typedef struct tagCALPWSTR CALPWSTR;

typedef struct tagCAPROPVARIANT tagCAPROPVARIANT, *PtagCAPROPVARIANT;

typedef struct tagCAPROPVARIANT CAPROPVARIANT;

struct IPropertyStorageVtbl {
    HRESULT (*QueryInterface)(struct IPropertyStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPropertyStorage *);
    ULONG (*Release)(struct IPropertyStorage *);
    HRESULT (*ReadMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *);
    HRESULT (*WriteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *, PROPID);
    HRESULT (*DeleteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *);
    HRESULT (*ReadPropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (*WritePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (*DeletePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *);
    HRESULT (*Commit)(struct IPropertyStorage *, DWORD);
    HRESULT (*Revert)(struct IPropertyStorage *);
    HRESULT (*Enum)(struct IPropertyStorage *, struct IEnumSTATPROPSTG **);
    HRESULT (*SetTimes)(struct IPropertyStorage *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (*SetClass)(struct IPropertyStorage *, IID *);
    HRESULT (*Stat)(struct IPropertyStorage *, STATPROPSETSTG *);
};

union _union_2426 {
    PROPID propid;
    LPOLESTR lpwstr;
};

struct tagCABOOL {
    ULONG cElems;
    VARIANT_BOOL *pElems;
};

struct tagCAC {
    ULONG cElems;
    CHAR *pElems;
};

struct tagCASCODE {
    ULONG cElems;
    SCODE *pElems;
};

struct tagCAH {
    ULONG cElems;
    LARGE_INTEGER *pElems;
};

struct tagCAL {
    ULONG cElems;
    LONG *pElems;
};

struct tagCADBL {
    ULONG cElems;
    DOUBLE *pElems;
};

struct tagCABSTRBLOB {
    ULONG cElems;
    BSTRBLOB *pElems;
};

struct tagCAFILETIME {
    ULONG cElems;
    FILETIME *pElems;
};

struct tagCABSTR {
    ULONG cElems;
    BSTR *pElems;
};

struct tagCAUL {
    ULONG cElems;
    ULONG *pElems;
};

struct tagCAUB {
    ULONG cElems;
    UCHAR *pElems;
};

struct tagCALPSTR {
    ULONG cElems;
    LPSTR *pElems;
};

struct tagCAI {
    ULONG cElems;
    SHORT *pElems;
};

struct tagCACY {
    ULONG cElems;
    CY *pElems;
};

struct tagCAPROPVARIANT {
    ULONG cElems;
    PROPVARIANT *pElems;
};

struct tagCAUH {
    ULONG cElems;
    ULARGE_INTEGER *pElems;
};

struct tagCAUI {
    ULONG cElems;
    USHORT *pElems;
};

struct tagCALPWSTR {
    ULONG cElems;
    LPWSTR *pElems;
};

struct tagCACLIPDATA {
    ULONG cElems;
    CLIPDATA *pElems;
};

union _union_2423 {
    CHAR cVal;
    UCHAR bVal;
    SHORT iVal;
    USHORT uiVal;
    LONG lVal;
    ULONG ulVal;
    INT intVal;
    UINT uintVal;
    LARGE_INTEGER hVal;
    ULARGE_INTEGER uhVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    FILETIME filetime;
    CLSID *puuid;
    CLIPDATA *pclipdata;
    BSTR bstrVal;
    BSTRBLOB bstrblobVal;
    BLOB blob;
    LPSTR pszVal;
    LPWSTR pwszVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct IStream *pStream;
    struct IStorage *pStorage;
    LPVERSIONEDSTREAM pVersionedStream;
    LPSAFEARRAY parray;
    CAC cac;
    CAUB caub;
    CAI cai;
    CAUI caui;
    CAL cal;
    CAUL caul;
    CAH cah;
    CAUH cauh;
    CAFLT caflt;
    CADBL cadbl;
    CABOOL cabool;
    CASCODE cascode;
    CACY cacy;
    CADATE cadate;
    CAFILETIME cafiletime;
    CACLSID cauuid;
    CACLIPDATA caclipdata;
    CABSTR cabstr;
    CABSTRBLOB cabstrblob;
    CALPSTR calpstr;
    CALPWSTR calpwstr;
    CAPROPVARIANT capropvar;
    CHAR *pcVal;
    UCHAR *pbVal;
    SHORT *piVal;
    USHORT *puiVal;
    LONG *plVal;
    ULONG *pulVal;
    INT *pintVal;
    UINT *puintVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    DECIMAL *pdecVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    LPSAFEARRAY *pparray;
    PROPVARIANT *pvarVal;
};

struct _struct_2422 {
    VARTYPE vt;
    PROPVAR_PAD1 wReserved1;
    PROPVAR_PAD2 wReserved2;
    PROPVAR_PAD3 wReserved3;
    union _union_2423 field4_0x8;
};

union _union_2421 {
    struct _struct_2422 field0;
    DECIMAL decVal;
};

struct IEnumSTATPROPSTG {
    struct IEnumSTATPROPSTGVtbl *lpVtbl;
};

struct tagPROPVARIANT {
    union _union_2421 field0_0x0;
};

struct tagVersionedStream {
    GUID guidVersion;
    struct IStream *pStream;
};

struct tagPROPSPEC {
    ULONG ulKind;
    union _union_2426 field1_0x4;
};

struct IPropertyStorage {
    struct IPropertyStorageVtbl *lpVtbl;
};

struct tagSTATPROPSETSTG {
    FMTID fmtid;
    CLSID clsid;
    DWORD grfFlags;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD dwOSVersion;
};

struct tagSTATPROPSTG {
    LPOLESTR lpwstrName;
    PROPID propid;
    VARTYPE vt;
};

struct IEnumSTATPROPSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATPROPSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATPROPSTG *);
    ULONG (*Release)(struct IEnumSTATPROPSTG *);
    HRESULT (*Next)(struct IEnumSTATPROPSTG *, ULONG, STATPROPSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATPROPSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATPROPSTG *);
    HRESULT (*Clone)(struct IEnumSTATPROPSTG *, struct IEnumSTATPROPSTG **);
};

typedef struct IPropertyStorage *LPPROPERTYSTORAGE;

typedef struct IPropertySetStorageVtbl IPropertySetStorageVtbl, *PIPropertySetStorageVtbl;

typedef struct IPropertySetStorage IPropertySetStorage, *PIPropertySetStorage;

typedef struct IEnumSTATPROPSETSTG IEnumSTATPROPSETSTG, *PIEnumSTATPROPSETSTG;

typedef struct IEnumSTATPROPSETSTGVtbl IEnumSTATPROPSETSTGVtbl, *PIEnumSTATPROPSETSTGVtbl;

struct IEnumSTATPROPSETSTG {
    struct IEnumSTATPROPSETSTGVtbl *lpVtbl;
};

struct IPropertySetStorageVtbl {
    HRESULT (*QueryInterface)(struct IPropertySetStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPropertySetStorage *);
    ULONG (*Release)(struct IPropertySetStorage *);
    HRESULT (*Create)(struct IPropertySetStorage *, IID *, CLSID *, DWORD, DWORD, struct IPropertyStorage **);
    HRESULT (*Open)(struct IPropertySetStorage *, IID *, DWORD, struct IPropertyStorage **);
    HRESULT (*Delete)(struct IPropertySetStorage *, IID *);
    HRESULT (*Enum)(struct IPropertySetStorage *, struct IEnumSTATPROPSETSTG **);
};

struct IEnumSTATPROPSETSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATPROPSETSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATPROPSETSTG *);
    ULONG (*Release)(struct IEnumSTATPROPSETSTG *);
    HRESULT (*Next)(struct IEnumSTATPROPSETSTG *, ULONG, STATPROPSETSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATPROPSETSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATPROPSETSTG *);
    HRESULT (*Clone)(struct IEnumSTATPROPSETSTG *, struct IEnumSTATPROPSETSTG **);
};

struct IPropertySetStorage {
    struct IPropertySetStorageVtbl *lpVtbl;
};

typedef struct tagPROPVARIANT *LPPROPVARIANT;

typedef struct IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;

typedef enum PIDMSI_STATUS_VALUE {
    PIDMSI_STATUS_NORMAL=0,
    PIDMSI_STATUS_NEW=1,
    PIDMSI_STATUS_PRELIM=2,
    PIDMSI_STATUS_DRAFT=3,
    PIDMSI_STATUS_INPROGRESS=4,
    PIDMSI_STATUS_EDIT=5,
    PIDMSI_STATUS_REVIEW=6,
    PIDMSI_STATUS_PROOF=7,
    PIDMSI_STATUS_FINAL=8,
    PIDMSI_STATUS_OTHER=32767
} PIDMSI_STATUS_VALUE;

typedef struct tagVersionedStream VERSIONEDSTREAM;

typedef struct IEnumSTATPROPSTG *LPENUMSTATPROPSTG;

typedef struct IPropertySetStorage *LPPROPERTYSETSTORAGE;

#define PIDSI_PAGECOUNT 14

#define PIDSI_CREATE_DTM 12

#define PIDMSI_STATUS 7

#define PIDSI_REVNUMBER 9

#define PRSPEC_INVALID 4294967295

#define PID_MAX_READONLY 3221225471

#define PIDSI_COMMENTS 6

#define PID_ILLEGAL 4294967295

#define PIDSI_WORDCOUNT 15

#define PIDSI_SUBJECT 3

#define PIDSI_LASTPRINTED 11

#define PROPSETFLAG_ANSI 2

#define PIDDSI_COMPANY 15

#define PRSPEC_PROPID 1

#define PIDSI_DOC_SECURITY 19

#define PIDSI_AUTHOR 4

#define PIDSI_THUMBNAIL 17

#define PID_FIRST_NAME_DEFAULT 4095

#define PIDSI_KEYWORDS 5

#define PID_MIN_READONLY 2147483648

#define PIDMSI_SUPPLIER 3

#define PIDMSI_EDITOR 2

#define PID_FIRST_USABLE 2

#define PIDDSI_SLIDECOUNT 7

#define CCH_MAX_PROPSTG_NAME 31

#define PROPSETFLAG_UNBUFFERED 4

#define PIDSI_LASTAUTHOR 8

#define PIDMSI_SEQUENCE_NO 5

#define PROPSETFLAG_NONSIMPLE 1

#define PID_SECURITY 2147483650

#define PROPSETFLAG_DEFAULT 0

#define PROPSET_BEHAVIOR_CASE_SENSITIVE 1

#define PID_DICTIONARY 0

#define PIDSI_TEMPLATE 7

#define PID_MODIFY_TIME 2147483649

#define PIDSI_EDITTIME 10

#define PIDDI_THUMBNAIL 2

#define PIDDSI_HEADINGPAIR 12

#define PIDMSI_RATING 9

#define PIDMSI_PRODUCTION 10

#define PROPSETFLAG_CASE_SENSITIVE 8

#define PIDMSI_SOURCE 4

#define PIDMSI_OWNER 8

#define PIDDSI_PRESFORMAT 3

#define PIDSI_APPNAME 18

#define PIDDSI_BYTECOUNT 4

#define PID_CODEPAGE 1

#define PIDSI_TITLE 2

#define PIDDSI_CATEGORY 2

#define PRSPEC_LPWSTR 0

#define PIDDSI_SCALE 11

#define PIDDSI_MMCLIPCOUNT 10

#define PIDDSI_DOCPARTS 13

#define PIDDSI_PARCOUNT 6

#define PID_LOCALE 2147483648

#define PIDMSI_COPYRIGHT 11

#define PROPSETHDR_OSVERSION_UNKNOWN 4294967295

#define PID_BEHAVIOR 2147483651

#define PIDDSI_NOTECOUNT 8

#define PIDDSI_LINKSDIRTY 16

#define PIDDSI_MANAGER 14

#define PIDDSI_HIDDENCOUNT 9

#define PIDMSI_PROJECT 6

#define PIDSI_LASTSAVE_DTM 13

#define PIDSI_CHARCOUNT 16

#define PIDDSI_LINECOUNT 5

typedef struct _ACTION_HEADER _ACTION_HEADER, *P_ACTION_HEADER;

typedef struct _ACTION_HEADER ACTION_HEADER;

struct _ACTION_HEADER {
    ULONG transport_id;
    USHORT action_code;
    USHORT reserved;
};

typedef struct _FIND_NAME_HEADER _FIND_NAME_HEADER, *P_FIND_NAME_HEADER;

struct _FIND_NAME_HEADER {
    WORD node_count;
    UCHAR reserved;
    UCHAR unique_group;
};

typedef struct _FIND_NAME_BUFFER _FIND_NAME_BUFFER, *P_FIND_NAME_BUFFER;

struct _FIND_NAME_BUFFER {
    UCHAR length;
    UCHAR access_control;
    UCHAR frame_control;
    UCHAR destination_addr[6];
    UCHAR source_addr[6];
    UCHAR routing_info[18];
};

typedef struct _NAME_BUFFER _NAME_BUFFER, *P_NAME_BUFFER;

typedef struct _NAME_BUFFER NAME_BUFFER;

struct _NAME_BUFFER {
    UCHAR name[16];
    UCHAR name_num;
    UCHAR name_flags;
};

typedef struct _LANA_ENUM _LANA_ENUM, *P_LANA_ENUM;

typedef struct _LANA_ENUM LANA_ENUM;

struct _LANA_ENUM {
    UCHAR length;
    UCHAR lana[255];
};

typedef struct _ACTION_HEADER *PACTION_HEADER;

typedef struct _SESSION_BUFFER _SESSION_BUFFER, *P_SESSION_BUFFER;

struct _SESSION_BUFFER {
    UCHAR lsn;
    UCHAR state;
    UCHAR local_name[16];
    UCHAR remote_name[16];
    UCHAR rcvs_outstanding;
    UCHAR sends_outstanding;
};

typedef struct _FIND_NAME_HEADER *PFIND_NAME_HEADER;

typedef struct _SESSION_BUFFER SESSION_BUFFER;

typedef struct _FIND_NAME_HEADER FIND_NAME_HEADER;

typedef struct _NCB _NCB, *P_NCB;

typedef struct _NCB NCB;

struct _NCB {
    UCHAR ncb_command;
    UCHAR ncb_retcode;
    UCHAR ncb_lsn;
    UCHAR ncb_num;
    PUCHAR ncb_buffer;
    WORD ncb_length;
    UCHAR ncb_callname[16];
    UCHAR ncb_name[16];
    UCHAR ncb_rto;
    UCHAR ncb_sto;
    void (*ncb_post)(struct _NCB *);
    UCHAR ncb_lana_num;
    UCHAR ncb_cmd_cplt;
    UCHAR ncb_reserve[10];
    HANDLE ncb_event;
};

typedef struct _SESSION_HEADER _SESSION_HEADER, *P_SESSION_HEADER;

typedef struct _SESSION_HEADER SESSION_HEADER;

struct _SESSION_HEADER {
    UCHAR sess_name;
    UCHAR num_sess;
    UCHAR rcv_dg_outstanding;
    UCHAR rcv_any_outstanding;
};

typedef struct _SESSION_HEADER *PSESSION_HEADER;

typedef struct _ADAPTER_STATUS _ADAPTER_STATUS, *P_ADAPTER_STATUS;

typedef struct _ADAPTER_STATUS ADAPTER_STATUS;

struct _ADAPTER_STATUS {
    UCHAR adapter_address[6];
    UCHAR rev_major;
    UCHAR reserved0;
    UCHAR adapter_type;
    UCHAR rev_minor;
    WORD duration;
    WORD frmr_recv;
    WORD frmr_xmit;
    WORD iframe_recv_err;
    WORD xmit_aborts;
    DWORD xmit_success;
    DWORD recv_success;
    WORD iframe_xmit_err;
    WORD recv_buff_unavail;
    WORD t1_timeouts;
    WORD ti_timeouts;
    DWORD reserved1;
    WORD free_ncbs;
    WORD max_cfg_ncbs;
    WORD max_ncbs;
    WORD xmit_buf_unavail;
    WORD max_dgram_size;
    WORD pending_sess;
    WORD max_cfg_sess;
    WORD max_sess;
    WORD max_sess_pkt_size;
    WORD name_count;
};

typedef struct _FIND_NAME_BUFFER FIND_NAME_BUFFER;

typedef struct _NAME_BUFFER *PNAME_BUFFER;

typedef struct _SESSION_BUFFER *PSESSION_BUFFER;

typedef struct _ADAPTER_STATUS *PADAPTER_STATUS;

typedef struct _FIND_NAME_BUFFER *PFIND_NAME_BUFFER;

typedef struct _LANA_ENUM *PLANA_ENUM;

typedef struct _NCB *PNCB;

#define NRC_CMDTMO 5

#define NCBNAMSZ 16

#define NCBSENDNA 113

#define NRC_SNUMOUT 8

#define HANGUP_COMPLETE 5

#define NCBCHAINSENDNA 114

#define NRC_IFBUSY 33

#define NRC_NORES 9

#define UNIQUE_NAME 0

#define NRC_INVADDRESS 57

#define HANGUP_PENDING 4

#define NRC_MAXAPPS 54

#define NRC_ACTSES 15

#define NRC_NOCALL 20

#define NCBRESET 50

#define NRC_ENVNOTDEF 52

#define NRC_ILLCMD 3

#define NCBASTAT 51

#define NCBDELNAME 49

#define NCBTRACE 121

#define NCBADDGRNAME 54

#define NRC_GOODRET 0

#define NCBSSTAT 52

#define NCBACTION 119

#define NRC_TOOMANY 34

#define NCBRECV 21

#define NRC_NAMERR 23

#define NCBHANGUP 18

#define NRC_LOCTFUL 17

#define NRC_DUPNAME 13

#define DUPLICATE 6

#define NRC_PENDING 255

#define NCBRECVANY 22

#define NCBDGSENDBC 34

#define DUPLICATE_DEREG 7

#define NCBDGRECV 33

#define NRC_SABORT 24

#define NCBENUM 55

#define SESSION_ESTABLISHED 3

#define NRC_CMDCAN 11

#define NRC_NAMCONF 25

#define NRC_INVDDID 59

#define NRC_CANOCCR 36

#define NRC_NORESOURCES 56

#define NCBDGRECVBC 35

#define NCBADDNAME 48

#define NRC_NOSAPS 55

#define NCBCHAINSEND 23

#define REGISTERED 4

#define DEREGISTERED 5

#define NRC_LOCKFAIL 60

#define REGISTERING 0

#define NRC_NAMTFUL 14

#define NRC_SYSTEM 64

#define NRC_OSRESNOTAV 53

#define NRC_NOWILD 21

#define NRC_BUFLEN 1

#define MAX_LANA 254

#define NRC_INUSE 22

#define NCBFINDNAME 120

#define NRC_REMTFUL 18

#define ASYNCH 128

#define NRC_BRIDGE 35

#define NRC_SCLOSED 10

#define NRC_ILLNN 19

#define NCBDGSEND 32

#define NRC_OPENERR 63

#define NCBCALL 16

#define NRC_DUPENV 48

#define NCBLISTEN 17

#define SESSION_ABORTED 6

#define GROUP_NAME 128

#define NCBCANCEL 53

#define NRC_INCOMP 6

#define LISTEN_OUTSTANDING 1

#define NCBUNLINK 112

#define NCBLANSTALERT 115

#define NRC_CANCEL 38

#define CALL_PENDING 2

#define NCBSEND 20

#define NAME_FLAGS_MASK 135

#define NRC_BADDR 7

typedef struct GameManager GameManager, *PGameManager;

typedef struct Catk Catk, *PCatk;

typedef struct Clrd Clrd, *PClrd;

typedef struct Pscr Pscr, *PPscr;

typedef struct Th6k Th6k, *PTh6k;

struct Th6k {
    uint magic;
    ushort th6k_len;
    ushort unk_len;
    char version?;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
};

struct Pscr {
    struct Th6k base;
    int score;
    byte character;
    byte difficulty;
    byte stage;
};

struct Clrd {
    struct Th6k base;
    byte difficulty_cleared_with_retries[5];
    byte difficulty_cleared_without_retries[5];
    byte character_shottype;
    undefined field4_0x17;
};

struct Catk {
    struct Th6k base;
    uint unk_c;
    ushort idx;
    byte name_csum; /* Created by retype action */
    byte unk_13;
    uint unk_14;
    byte name[32];
    uint num_attempts;
    short num_successes;
    short unk_3e;
};

struct GameManager {
    undefined4 field0_0x0;
    uint score;
    undefined4 field2_0x8;
    uint high_score;
    uint difficulty;
    uint graze_in_stage;
    uint field6_0x18;
    uint field7_0x1c;
    uint field8_0x20;
    uint field9_0x24;
    uint field10_0x28;
    uint field11_0x2c;
    struct Catk catk[64];
    struct Clrd clrd[4];
    struct Pscr pscr[96];
    ushort current_power;
    undefined2 field16_0x1812;
    ushort point_items_collected_in_stage;
    undefined2 field18_0x1816;
    byte num_retries;
    byte power_item_count_for_score;
    byte lives_remaining;
    byte bombs_remaining;
    byte field23_0x181c;
    byte character;
    byte shottype;
    byte is_in_game_menu;
    byte is_in_retry_menu;
    byte field28_0x1821;
    byte unk_1822;
    byte field30_0x1823;
    byte demo_mode;
    undefined field32_0x1825;
    undefined field33_0x1826;
    undefined field34_0x1827;
    undefined field35_0x1828;
    undefined field36_0x1829;
    undefined field37_0x182a;
    undefined field38_0x182b;
    char replay_file[256];
    undefined field40_0x192c[256];
    undefined2 field41_0x1a2c;
    undefined field42_0x1a2e;
    undefined field43_0x1a2f;
    uint unk_1a30;
    uint current_stage;
    undefined4 field46_0x1a38;
    struct D3DXVECTOR2 arcade_region_top_left_pos;
    struct D3DXVECTOR2 arcade_region_size;
    float field49_0x1a4c;
    float field50_0x1a50;
    float field51_0x1a54;
    float field52_0x1a58;
    undefined field53_0x1a5c;
    undefined field54_0x1a5d;
    undefined field55_0x1a5e;
    undefined field56_0x1a5f;
    D3DXVECTOR3 stage_camera_facing_dir;
    uint field58_0x1a6c;
    uint rank;
    uint max_rank;
    uint min_rank;
    uint subrank;
};

typedef struct Pbg3Archive Pbg3Archive, *PPbg3Archive;

typedef struct Pbg3Parser Pbg3Parser, *PPbg3Parser;

typedef struct Pbg3Entry Pbg3Entry, *PPbg3Entry;

typedef struct IPbg3Parser IPbg3Parser, *PIPbg3Parser;

typedef struct Pbg3FileAbstraction Pbg3FileAbstraction, *PPbg3FileAbstraction;

typedef struct Pbg3ParserVtbl Pbg3ParserVtbl, *PPbg3ParserVtbl;

typedef struct FileAbstraction FileAbstraction, *PFileAbstraction;

typedef struct FileAbstractionVtable FileAbstractionVtable, *PFileAbstractionVtable;

struct FileAbstraction {
    struct FileAbstractionVtable *vtbl;
    HANDLE handle;
    uint access;
};

struct Pbg3FileAbstraction {
    struct FileAbstraction base;
};

struct Pbg3Archive {
    struct Pbg3Parser *parser;
    int unk;
    int numOfEntries;
    int fileTableOffset;
    struct Pbg3Entry *entries;
};

struct IPbg3Parser {
    struct Pbg3ParserVtbl *vtbl;
    uint offsetInFile;
    uint fileSize;
    int curByte;
    byte bitIdxInCurByte;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    uint someKindOfCrc;
};

struct Pbg3Parser {
    struct IPbg3Parser base;
    struct Pbg3FileAbstraction fileAbstraction; /* Created by retype action */
};

struct FileAbstractionVtable {
    int (*Open)(struct FileAbstraction *, LPCSTR, char *);
    void (*Close)(struct FileAbstraction *);
    BOOL (*Read)(struct FileAbstraction *, char *, DWORD, LPDWORD);
    BOOL (*Write)(struct FileAbstraction *, LPCVOID, DWORD, LPDWORD);
    byte (*ReadByte)(struct FileAbstraction *);
    byte (*WriteByte)(struct FileAbstraction *, byte);
    int (*Seek)(struct FileAbstraction *, long, DWORD);
    DWORD (*Tell)(struct FileAbstraction *);
    DWORD (*GetSize)(struct FileAbstraction *);
    HLOCAL (*ReadRemaining)(struct FileAbstraction *, uint);
};

struct Pbg3Entry {
    uint unk1; /* Created by retype action */
    uint unk2; /* Created by retype action */
    uint uncompressedSize; /* Created by retype action */
    uint dataOffset; /* Created by retype action */
    uint checksum; /* Created by retype action */
    char filename[256];
};

struct Pbg3ParserVtbl {
    bool (*ReadBit)(struct Pbg3Parser *);
    void *ReadInt;
    void *ReadByteAssumeAligned;
    void *SeekToOffset;
    void *SeekToNextByte;
    void *ReadByteAlignedData;
    void *GetLastWriteTime;
    void *operator_delete;
};

typedef struct EclManager EclManager, *PEclManager;

struct EclManager { /* Size is unknown */
    void *ecl_file;
    void *sub_table;
    void *timeline;
};

typedef struct RenderVertexInfo RenderVertexInfo, *PRenderVertexInfo;

struct RenderVertexInfo {
    D3DXVECTOR3 position;
    struct D3DXVECTOR2 textureUV;
};

typedef struct Supervisor Supervisor, *PSupervisor;

typedef struct GameConfiguration GameConfiguration, *PGameConfiguration;

typedef struct MidiOutput MidiOutput, *PMidiOutput;

typedef struct Pbg3FileName Pbg3FileName, *PPbg3FileName;

typedef struct ControllerMapping ControllerMapping, *PControllerMapping;

typedef enum MusicMode {
    OFF=0,
    WAV=1,
    MIDI=2
} MusicMode;

typedef struct MidiTimer MidiTimer, *PMidiTimer;

typedef struct MidiTrack MidiTrack, *PMidiTrack;

typedef struct MidiDevice MidiDevice, *PMidiDevice;

typedef struct MidiOutputVtbl MidiOutputVtbl, *PMidiOutputVtbl;

struct Pbg3FileName {
    byte filename[32];
};

struct ControllerMapping {
    short shootButton;
    short bombButton;
    short focusButton;
    short menuButton;
    short upButton;
    short downButton;
    short leftButton;
    short rightButton;
    short skipButton;
};

struct GameConfiguration {
    struct ControllerMapping controllerMapping;
    undefined field1_0x12;
    undefined field2_0x13;
    int version; /* 0xAABB where AA is major and BB is minor */
    byte lifeCount;
    byte bombCount;
    byte colorMode16bit;
    enum MusicMode musicMode; /* 0 = off, 1 = wav, 2 = midi */
    byte playSounds; /* 0 = off, 1 = on */
    byte defaultDifficulty;
    bool windowed;
    byte frameskipConfig; /* 0 = fullspeed, 1 = 1/2 speed, 2 = 1/4 speed */
    ushort padAxisX;
    ushort padAxisY;
    undefined field14_0x24;
    undefined field15_0x25;
    undefined field16_0x26;
    undefined field17_0x27;
    undefined field18_0x28;
    undefined field19_0x29;
    undefined field20_0x2a;
    undefined field21_0x2b;
    undefined field22_0x2c;
    undefined field23_0x2d;
    undefined field24_0x2e;
    undefined field25_0x2f;
    undefined field26_0x30;
    undefined field27_0x31;
    undefined field28_0x32;
    undefined field29_0x33;
    uint opts;
};

struct Supervisor {
    HINSTANCE hInstance;
    struct IDirect3D8 *d3dIface;
    struct IDirect3DDevice8 *d3dDevice;
    struct IDirectInput8A *directInput;
    LPDIRECTINPUTDEVICE8A keyboard;
    LPDIRECTINPUTDEVICE8A controller;
    struct DIDEVCAPS controllerCaps;
    HWND hwndGameWindow;
    D3DMATRIX viewMatrix; /* Created by retype action */
    D3DMATRIX projectionMatrix;
    D3DVIEWPORT8 viewport;
    D3DPRESENT_PARAMETERS presentParameters;
    struct GameConfiguration cfg;
    undefined field13_0x14c;
    undefined field14_0x14d;
    undefined field15_0x14e;
    undefined field16_0x14f;
    undefined field17_0x150;
    undefined field18_0x151;
    undefined field19_0x152;
    undefined field20_0x153;
    undefined field21_0x154;
    undefined field22_0x155;
    undefined field23_0x156;
    undefined field24_0x157;
    undefined field25_0x158;
    undefined field26_0x159;
    undefined field27_0x15a;
    undefined field28_0x15b;
    undefined field29_0x15c;
    undefined field30_0x15d;
    undefined field31_0x15e;
    undefined field32_0x15f;
    undefined field33_0x160;
    undefined field34_0x161;
    undefined field35_0x162;
    undefined field36_0x163;
    byte lifeCount;
    byte bombCount;
    undefined field39_0x166;
    undefined field40_0x167;
    undefined field41_0x168;
    undefined field42_0x169;
    undefined field43_0x16a;
    undefined field44_0x16b;
    undefined field45_0x16c;
    undefined field46_0x16d;
    undefined field47_0x16e;
    undefined field48_0x16f;
    undefined field49_0x170;
    undefined field50_0x171;
    undefined field51_0x172;
    undefined field52_0x173;
    undefined field53_0x174;
    undefined field54_0x175;
    undefined field55_0x176;
    undefined field56_0x177;
    undefined field57_0x178;
    undefined field58_0x179;
    undefined field59_0x17a;
    undefined field60_0x17b;
    undefined field61_0x17c;
    undefined field62_0x17d;
    undefined field63_0x17e;
    undefined field64_0x17f;
    undefined field65_0x180;
    undefined field66_0x181;
    undefined field67_0x182;
    undefined field68_0x183;
    int calcCount;
    int wantedState;
    int curState;
    int wantedState2;
    int unk194;
    int unk198;
    int unk19c;
    int vsyncEnabled;
    int lastFrameTime;
    float effectiveFramerateMultiplier;
    float framerateMultiplier;
    struct MidiOutput *midi_output;
    float unk1b4;
    float unk1b8;
    struct Pbg3Archive *pbg3Archives[16];
    struct Pbg3FileName pbg3FileName[16];
    byte hasD3dHardwareVertexProcessing;
    byte lockableBackbuffer;
    byte colorMode16Bits;
    undefined field88_0x3ff;
    uint startup_time_for_menu_music;
    D3DCAPS8 d3dCaps;
};

struct MidiTimer {
    struct MidiOutputVtbl *vtbl;
    UINT timerId;
    TIMECAPS timeCaps;
};

struct MidiDevice {
    HMIDIOUT handle;
    undefined4 deviceID;
};

struct MidiOutput {
    struct MidiTimer timer;
    MIDIHDR *midiHeaders[32];
    int midiHeadersCursor;
    byte *midiFileData[32];
    int num_tracks;
    undefined4 format;
    int divisons;
    int unk120;
    undefined4 unk124;
    uint unk128;
    uint unk12c;
    uint unk130;
    uint unk134;
    struct MidiTrack *tracks;
    struct MidiDevice midiOutDev;
    undefined unk144[384];
    byte unk2c4;
    undefined field17_0x2c5;
    undefined field18_0x2c6;
    undefined field19_0x2c7;
    float unk2c8;
    uint unk2cc;
    uint unk2d0;
    uint unk2d4;
    uint unk2d8;
    uint unk2dc;
    uint unk2e0;
    uint unk2e4;
    uint unk2e8;
    int unk2ec;
    uint unk2f0;
    uint unk2f4;
    uint unk2f8;
    uint unk2fc;
};

struct MidiOutputVtbl {
};

struct MidiTrack {
    uint track_playing;
    uint unk4;
    uint track_length;
    uint unkc;
    void *trackData;
    void *curTrackDataCursor;
    void *unk18;
    uint unk1c;
};

typedef struct Bullet Bullet, *PBullet;

typedef struct BulletTypeVms BulletTypeVms, *PBulletTypeVms;

struct BulletTypeVms {
    struct AnmVm vm0;
    struct AnmVm spawn_effect_short;
    struct AnmVm spawn_effect_medium;
    struct AnmVm spawn_effect_long;
    struct AnmVm vm5;
    float field5_0x550;
    float field6_0x554;
    undefined field7_0x558;
    undefined field8_0x559;
    undefined field9_0x55a;
    undefined field10_0x55b;
    byte field11_0x55c;
    byte field12_0x55d;
    undefined field13_0x55e;
    undefined field14_0x55f;
};

struct Bullet {
    struct BulletTypeVms vms;
    D3DXVECTOR3 pos;
    D3DXVECTOR3 velocity;
    D3DXVECTOR3 ex_4_acceleration;
    float speed;
    float ex_5_float_0;
    float dir_change__speed_arg;
    float angle;
    float ex_5_float_1;
    float dir_change__rotation_arg;
    struct ZunTimer timer;
    int ex_5_int_0;
    int dir_change__interval;
    int dir_change__num_times;
    int dir_change__max_times;
    ushort ex_flags;
    ushort color;
    undefined2 field17_0x5bc;
    ushort state;
    ushort field19_0x5c0;
    byte field20_0x5c2;
    byte field21_0x5c3;
};

typedef struct ReplayData ReplayData, *PReplayData;

typedef uint uint32_t;

typedef ushort uint16_t;

typedef struct StageReplayData StageReplayData, *PStageReplayData;

typedef struct ReplayDataInput ReplayDataInput, *PReplayDataInput;

struct ReplayDataInput {
    uint frame_num;
    ushort input_key;
    undefined2 padding;
};

struct ReplayData {
    char *magic;
    ushort version;
    byte shottype_chara;
    byte difficulty;
    uint32_t checksum;
    uint16_t padding_bytes;
    uint8_t key;
    undefined field7_0xf;
    undefined field8_0x10;
    undefined field9_0x11;
    undefined field10_0x12;
    undefined field11_0x13;
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    undefined field16_0x18;
    undefined field17_0x19;
    undefined field18_0x1a;
    undefined field19_0x1b;
    undefined field20_0x1c;
    undefined field21_0x1d;
    undefined field22_0x1e;
    undefined field23_0x1f;
    undefined field24_0x20;
    undefined field25_0x21;
    undefined field26_0x22;
    undefined field27_0x23;
    undefined field28_0x24;
    undefined field29_0x25;
    undefined field30_0x26;
    undefined field31_0x27;
    undefined field32_0x28;
    undefined field33_0x29;
    undefined field34_0x2a;
    undefined field35_0x2b;
    undefined field36_0x2c;
    undefined field37_0x2d;
    undefined field38_0x2e;
    undefined field39_0x2f;
    struct StageReplayData *stage_score[5];
    undefined field41_0x44;
    undefined field42_0x45;
    undefined field43_0x46;
    undefined field44_0x47;
    byte *score_inputs;
    undefined field46_0x4c;
    undefined field47_0x4d;
    undefined field48_0x4e;
    undefined field49_0x4f;
};

struct StageReplayData {
    uint score;
    ushort random_seed;
    ushort unk6;
    byte power;
    byte lives_remaining;
    byte bombs_remaining;
    byte rank;
    byte power_item_count_for_score;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    struct ReplayDataInput replay_inputs[53998];
};

typedef struct GuiImplChildB GuiImplChildB, *PGuiImplChildB;

struct GuiImplChildB {
    D3DXVECTOR3 field0_0x0;
    int field1_0xc;
    int field2_0x10;
    struct ZunTimer field3_0x14;
};

typedef struct MsgRawHeader MsgRawHeader, *PMsgRawHeader;

struct MsgRawHeader {
    uint num_entries;
    void *entries;
};

typedef struct ScreenEffect ScreenEffect, *PScreenEffect;

struct ScreenEffect {
    int field0_0x0;
    struct ChainElem *calcChainElement;
    struct ChainElem *drawChainElement;
    uint field3_0xc;
    uint field4_0x10;
    int field5_0x14;
    int field6_0x18;
    int field7_0x1c;
    int field8_0x20;
    struct ZunTimer timer;
};

typedef struct EnemyLaserShooter EnemyLaserShooter, *PEnemyLaserShooter;

struct EnemyLaserShooter {
    ushort sprite;
    ushort color;
    D3DXVECTOR3 position;
    float angle;
    undefined4 field4_0x14;
    float speed;
    undefined4 field6_0x1c;
    float start_offset;
    float end_offset;
    float start_length;
    float width;
    int start_time;
    int duration;
    int stop_time;
    int graze_delay;
    int graze_distance;
    undefined4 field16_0x44;
    ushort type;
    uint field18_0x4c;
    uint field19_0x50;
};

typedef struct DifficultyInfo DifficultyInfo, *PDifficultyInfo;

struct DifficultyInfo {
    uint rank;
    uint min_rank;
    uint max_rank;
};

typedef struct Effect Effect, *PEffect;

struct Effect {
    struct AnmVm vm;
    D3DXVECTOR3 pos1;
    float field2_0x11c;
    float field3_0x120;
    float field4_0x124;
    float field5_0x128;
    float field6_0x12c;
    float field7_0x130;
    D3DXVECTOR3 field8_0x134;
    D3DXVECTOR3 pos2;
    struct D3DXQUATERNION field10_0x14c;
    float field11_0x15c;
    float field12_0x160;
    struct ZunTimer timer;
    undefined4 field14_0x170;
    int (*effect_update_callback)(struct Effect *);
    byte in_use_flag;
    byte effect_id;
    byte field18_0x17a;
    undefined field19_0x17b;
};

typedef struct UnknownEffectsVars476298 UnknownEffectsVars476298, *PUnknownEffectsVars476298;

struct UnknownEffectsVars476298 {
    int anmFileIndex;
    int (*update_callback)(struct Effect *);
};

typedef struct PlayerRect PlayerRect, *PPlayerRect;

struct PlayerRect {
    struct D3DXVECTOR2 position1;
    struct D3DXVECTOR2 size1;
};

typedef struct AsciiManagerString AsciiManagerString, *PAsciiManagerString;

struct AsciiManagerString {
    char text[64];
    D3DXVECTOR3 position;
    D3DCOLOR color;
    struct D3DXVECTOR2 scale;
    undefined4 isSelected;
    undefined4 isGui;
};

typedef enum EclValueType {
    ECL_VALUE_TYPE_INT=0,
    EVL_VALUE_TYPE_FLOAT=1,
    ECL_VALUE_TYPE_READONLY=2,
    ECL_VALUE_TYPE_UNDEFINED=3
} EclValueType;

typedef struct Rng Rng, *PRng;

struct Rng {
    ushort seed;
    uint generationCount;
};

typedef struct Enemy Enemy, *PEnemy;

typedef struct EnemyEclContext EnemyEclContext, *PEnemyEclContext;

typedef struct EnemyBulletShooter EnemyBulletShooter, *PEnemyBulletShooter;

struct EnemyEclContext {
    void *current_instr;
    struct ZunTimer time;
    void *func_set_func;
    int var0;
    int var1;
    int var2;
    int var3;
    float float0;
    float float1;
    float float2;
    float float3;
    int var4;
    int var5;
    int var6;
    int var7;
    int compare_register;
    ushort sub_id;
};

struct EnemyBulletShooter {
    ushort sprite;
    ushort color;
    D3DXVECTOR3 position;
    float angle1;
    float angle2;
    float speed1;
    float speed2;
    float ex_floats[4];
    int ex_ints[4];
    int field9_0x40;
    ushort count1;
    ushort count2;
    ushort aim_mode;
    uint flags;
    int sfx;
};

struct Enemy {
    struct AnmVm primary_vm;
    struct AnmVm vms[8];
    struct EnemyEclContext current_context;
    struct EnemyEclContext saved_context_stack[8];
    int stack_depth;
    int field5_0xc40;
    short death_callback_sub;
    short interrupts[16];
    int run_interrupt;
    D3DXVECTOR3 position;
    D3DXVECTOR3 hitbox_dimensions;
    D3DXVECTOR3 axis_speed;
    float angle;
    float angular_velocity;
    float speed;
    float acceleration;
    D3DXVECTOR3 shoot_offset;
    D3DXVECTOR3 move_interp;
    D3DXVECTOR3 move_interp_start_pos;
    struct ZunTimer move_interp_timer;
    int move_interp_start_time;
    float bullet_rank_speed_low;
    float bullet_rank_speed_high;
    ushort bullet_rank_amount1_low;
    ushort bullet_rank_amount1_high;
    ushort bullet_rank_amount2_low;
    ushort bullet_rank_amount2_high;
    int life;
    int max_life;
    int score;
    struct ZunTimer boss_timer;
    D3DCOLOR field31_0xcfc;
    struct EnemyBulletShooter bullet_props;
    int shoot_interval;
    struct ZunTimer shoot_interval_timer;
    struct EnemyLaserShooter laser_props;
    void *lasers[32];
    int laser_store;
    byte death_anm1;
    byte death_anm2;
    byte death_anm3;
    byte item_drop;
    byte boss_id;
    byte field43_0xe41;
    struct ZunTimer field44_0xe44;
    byte flags1;
    byte flags2;
    byte flags3;
    byte anm_ex_flags;
    short anm_ex_defaults;
    short anm_ex_far_left;
    short anm_ex_far_right;
    short anm_ex_left;
    short anm_ex_right;
    struct D3DXVECTOR2 lower_move_limit;
    struct D3DXVECTOR2 upper_move_limit;
    struct Effect *effect_array[12];
    int effect_idx;
    float effect_distance;
    int life_callback_threshold;
    int life_callback_sub;
    int timer_callback_threshold;
    int timer_callback_sub;
    float field63_0xeb8;
    struct ZunTimer field64_0xebc;
};

typedef struct Gui Gui, *PGui;

typedef struct GuiImpl GuiImpl, *PGuiImpl;

typedef struct GuiMsgVm GuiMsgVm, *PGuiMsgVm;

struct Gui {
    uint flags;
    struct GuiImpl *impl;
    float field2_0x8;
    float blue_spellcard_bar_length;
    uint field4_0x10;
    int ecl_set_lives;
    int ecl_spellcard_related;
    int field7_0x1c;
    bool boss_present;
    float boss_health_bar1;
    float boss_health_bar2;
};

struct GuiMsgVm {
    struct MsgRawHeader *msg_file;
    void *current_instr;
    uint current_msg_idx;
    struct ZunTimer timer;
    int frames_elapsed_during_pause;
    struct AnmVm portraits[2];
    struct AnmVm dialogue_lines[2];
    struct AnmVm intro_lines[2];
    D3DCOLOR text_colors_A[4];
    D3DCOLOR text_colors_B[4];
    uint font_size;
    uint ignore_wait_counter;
    byte dialogue_skippable;
};

struct GuiImpl {
    struct AnmVm vms[26];
    byte field1_0x1ba0;
    undefined field2_0x1ba1[3];
    struct AnmVm vm1;
    struct AnmVm vm2;
    struct AnmVm vm3;
    struct AnmVm vm4;
    struct AnmVm vm5;
    struct AnmVm vm6;
    struct AnmVm vm7;
    struct AnmVm vm8;
    struct AnmVm vm9;
    struct GuiMsgVm msg;
    uint field13_0x2bdc;
    uint stage_score;
    struct GuiImplChildB field15_0x2be4;
    struct GuiImplChildB field16_0x2c04;
    struct GuiImplChildB field17_0x2c24;
};

typedef struct PlayerBullet PlayerBullet, *PPlayerBullet;

struct PlayerBullet {
    struct AnmVm field0_0x0;
    D3DXVECTOR3 field1_0x110;
    D3DXVECTOR3 field2_0x11c;
    float field3_0x128;
    float field4_0x12c;
    float field5_0x130;
    float field6_0x134;
    float field7_0x138;
    float field8_0x13c;
    struct ZunTimer field9_0x140;
    short field10_0x14c;
    short field11_0x14e;
    short field12_0x150;
    short field13_0x152;
    short field14_0x154;
};

typedef struct UnkVars476264 UnkVars476264, *PUnkVars476264;

struct UnkVars476264 {
    int var1;
    int var2;
    int var3;
};

typedef struct AsciiManager AsciiManager, *PAsciiManager;

typedef struct StageMenu StageMenu, *PStageMenu;

typedef struct AsciiManagerPopup AsciiManagerPopup, *PAsciiManagerPopup;

struct AsciiManagerPopup {
    char digits[8];
    D3DXVECTOR3 position;
    D3DCOLOR color;
    struct ZunTimer timer;
    uchar inUse;
    uchar characterCount;
};

struct StageMenu { /* This is a menu that appears when we are in-game. There are two: the normal menu (when you hit the menu button) and the retry menu (when you die with no lives remaining) */
    int curState;
    int numFrames;
    struct AnmVm vms0[6];
    struct AnmVm vm1;
};

struct AsciiManager {
    struct AnmVm vm0;
    struct AnmVm vm1;
    struct AsciiManagerString strings[256];
    int numStrings;
    D3DCOLOR color;
    struct D3DXVECTOR2 scale;
    int isGui;
    int isSelected;
    int nextPopupIndex1;
    int nextPopupIndex2;
    undefined4 unk3;
    struct StageMenu game_menu;
    struct StageMenu retry_menu;
    struct AsciiManagerPopup popups0[512];
    struct AsciiManagerPopup popups1[3];
};

typedef struct EnemyManager EnemyManager, *PEnemyManager;

struct EnemyManager {
    char *stg_enm_anm_filename;
    char *stg_enm2_anm_filename;
    struct Enemy template;
    struct Enemy enemies[256];
    struct Enemy dummy_enemy_for_failed_spawns;
    struct Enemy *bosses[8];
    ushort random_item_spawn_index;
    ushort random_item_table_index;
    int enemy_count_real;
    undefined field9_0xee5c0;
    undefined field10_0xee5c1;
    undefined field11_0xee5c2;
    undefined field12_0xee5c3;
    undefined field13_0xee5c4;
    undefined field14_0xee5c5;
    undefined field15_0xee5c6;
    undefined field16_0xee5c7;
    int spellcard_capture;
    int spellcard_bonus;
    int spellcard_number;
    undefined field20_0xee5d4;
    undefined field21_0xee5d5;
    undefined field22_0xee5d6;
    undefined field23_0xee5d7;
    undefined field24_0xee5d8;
    undefined field25_0xee5d9;
    undefined field26_0xee5da;
    undefined field27_0xee5db;
    void *timeline_instr;
    struct ZunTimer timeline_time;
};

typedef struct Laser Laser, *PLaser;

struct Laser {
    struct AnmVm vm0;
    struct AnmVm vm1;
    D3DXVECTOR3 pos;
    float angle;
    float start_offset;
    float end_offset;
    float start_length;
    float width;
    float speed;
    int start_time;
    int graze_delay;
    int duration;
    int end_time;
    int graze_interval;
    int in_use;
    struct ZunTimer timer;
    short flags;
    short color;
    byte state;
};


/* WARNING! conflicting data type names: /th06/test - /test */

typedef struct ResultScreenUnk3ab0 ResultScreenUnk3ab0, *PResultScreenUnk3ab0;

struct ResultScreenUnk3ab0 {
    int unk1;
    void *unk2;
    void *unk3;
};

typedef struct BulletManager BulletManager, *PBulletManager;

struct BulletManager {
    struct BulletTypeVms bullet_type_templates[16];
    struct Bullet bullets[640];
    struct Laser lasers[64];
    int next_bullet_index;
    int bullet_count;
    struct ZunTimer time;
    char *etama_anm_filename;
};

typedef struct PlayerInner PlayerInner, *PPlayerInner;

typedef struct PlayerUnknown PlayerUnknown, *PPlayerUnknown;

struct PlayerUnknown {
    float field0_0x0;
    float field1_0x4;
    float field2_0x8;
};

struct PlayerInner {
    int field0_0x0;
    int field1_0x4;
    struct ZunTimer field2_0x8;
    void *bombCalc;
    void *bombDraw;
    undefined field5_0x1c[64];
    struct PlayerUnknown field6_0x5c[4];
    undefined field7_0x8c[48];
    int field8_0xbc[8];
    undefined field9_0xdc[64];
    struct AnmVm field10_0x11c[32];
};

typedef enum SpellcardState {
    NOT_RUNNING=0,
    RUNNING=1,
    RAN_FOR_60_FRAMES=2
} SpellcardState;

typedef struct Pbg3Archive *FileAbstractionToPbgArchive;

typedef struct ResultScreen ResultScreen, *PResultScreen;

typedef struct ScoreDat ScoreDat, *PScoreDat;

typedef struct Hscr Hscr, *PHscr;

struct Hscr {
    struct Th6k base;
    uint score;
    byte character; /* range is 0-3. Bottom bit is spellcard, top bit is character (0 = reimu, 2 = marisa) */
    byte difficulty;
    byte stage;
    char name[9];
};

struct ResultScreen {
    struct ScoreDat *scoredat;
    undefined field1_0x4;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    int unk_8;
    undefined field6_0xc;
    undefined field7_0xd;
    undefined field8_0xe;
    undefined field9_0xf;
    int unk_10;
    undefined field11_0x14;
    undefined field12_0x15;
    undefined field13_0x16;
    undefined field14_0x17;
    undefined field15_0x18;
    undefined field16_0x19;
    undefined field17_0x1a;
    undefined field18_0x1b;
    undefined field19_0x1c;
    undefined field20_0x1d;
    undefined field21_0x1e;
    undefined field22_0x1f;
    undefined field23_0x20;
    undefined field24_0x21;
    undefined field25_0x22;
    undefined field26_0x23;
    undefined field27_0x24;
    undefined field28_0x25;
    undefined field29_0x26;
    undefined field30_0x27;
    undefined field31_0x28;
    undefined field32_0x29;
    undefined field33_0x2a;
    undefined field34_0x2b;
    undefined field35_0x2c;
    undefined field36_0x2d;
    undefined field37_0x2e;
    undefined field38_0x2f;
    undefined field39_0x30;
    undefined field40_0x31;
    undefined field41_0x32;
    undefined field42_0x33;
    undefined field43_0x34;
    undefined field44_0x35;
    undefined field45_0x36;
    undefined field46_0x37;
    undefined field47_0x38;
    undefined field48_0x39;
    undefined field49_0x3a;
    undefined field50_0x3b;
    undefined field51_0x3c;
    undefined field52_0x3d;
    undefined field53_0x3e;
    undefined field54_0x3f;
    struct AnmVm unk_40[38];
    struct AnmVm unk_28a0[16];
    struct AnmVm unk_39a0;
    struct ResultScreenUnk3ab0 unk_3ab0[20];
    struct Hscr default_scores[5][4][10];
    undefined field60_0x5180;
    undefined field61_0x5181;
    undefined field62_0x5182;
    undefined field63_0x5183;
    undefined field64_0x5184;
    undefined field65_0x5185;
    undefined field66_0x5186;
    undefined field67_0x5187;
    undefined field68_0x5188;
    undefined field69_0x5189;
    undefined field70_0x518a;
    undefined field71_0x518b;
    undefined field72_0x518c;
    undefined field73_0x518d;
    undefined field74_0x518e;
    undefined field75_0x518f;
    undefined field76_0x5190;
    undefined field77_0x5191;
    undefined field78_0x5192;
    undefined field79_0x5193;
    undefined field80_0x5194;
    undefined field81_0x5195;
    undefined field82_0x5196;
    undefined field83_0x5197;
    undefined field84_0x5198;
    undefined field85_0x5199;
    undefined field86_0x519a;
    undefined field87_0x519b;
    undefined field88_0x519c;
    undefined field89_0x519d;
    undefined field90_0x519e;
    undefined field91_0x519f;
    undefined field92_0x51a0;
    undefined field93_0x51a1;
    undefined field94_0x51a2;
    undefined field95_0x51a3;
    undefined field96_0x51a4;
    undefined field97_0x51a5;
    undefined field98_0x51a6;
    undefined field99_0x51a7;
    undefined field100_0x51a8;
    undefined field101_0x51a9;
    undefined field102_0x51aa;
    undefined field103_0x51ab;
    undefined field104_0x51ac;
    undefined field105_0x51ad;
    undefined field106_0x51ae;
    undefined field107_0x51af;
    undefined field108_0x51b0;
    undefined field109_0x51b1;
    undefined field110_0x51b2;
    undefined field111_0x51b3;
    undefined field112_0x51b4;
    undefined field113_0x51b5;
    undefined field114_0x51b6;
    undefined field115_0x51b7;
    undefined field116_0x51b8;
    undefined field117_0x51b9;
    undefined field118_0x51ba;
    undefined field119_0x51bb;
    undefined field120_0x51bc;
    undefined field121_0x51bd;
    undefined field122_0x51be;
    undefined field123_0x51bf;
    undefined field124_0x51c0;
    undefined field125_0x51c1;
    undefined field126_0x51c2;
    undefined field127_0x51c3;
    undefined field128_0x51c4;
    undefined field129_0x51c5;
    undefined field130_0x51c6;
    undefined field131_0x51c7;
    undefined field132_0x51c8;
    undefined field133_0x51c9;
    undefined field134_0x51ca;
    undefined field135_0x51cb;
    undefined field136_0x51cc;
    undefined field137_0x51cd;
    undefined field138_0x51ce;
    undefined field139_0x51cf;
    undefined field140_0x51d0;
    undefined field141_0x51d1;
    undefined field142_0x51d2;
    undefined field143_0x51d3;
    undefined field144_0x51d4;
    undefined field145_0x51d5;
    undefined field146_0x51d6;
    undefined field147_0x51d7;
    undefined field148_0x51d8;
    undefined field149_0x51d9;
    undefined field150_0x51da;
    undefined field151_0x51db;
    undefined field152_0x51dc;
    undefined field153_0x51dd;
    undefined field154_0x51de;
    undefined field155_0x51df;
    undefined field156_0x51e0;
    undefined field157_0x51e1;
    undefined field158_0x51e2;
    undefined field159_0x51e3;
    undefined field160_0x51e4;
    undefined field161_0x51e5;
    undefined field162_0x51e6;
    undefined field163_0x51e7;
    undefined field164_0x51e8;
    undefined field165_0x51e9;
    undefined field166_0x51ea;
    undefined field167_0x51eb;
    undefined field168_0x51ec;
    undefined field169_0x51ed;
    undefined field170_0x51ee;
    undefined field171_0x51ef;
    undefined field172_0x51f0;
    undefined field173_0x51f1;
    undefined field174_0x51f2;
    undefined field175_0x51f3;
    undefined field176_0x51f4;
    undefined field177_0x51f5;
    undefined field178_0x51f6;
    undefined field179_0x51f7;
    undefined field180_0x51f8;
    undefined field181_0x51f9;
    undefined field182_0x51fa;
    undefined field183_0x51fb;
    undefined field184_0x51fc;
    undefined field185_0x51fd;
    undefined field186_0x51fe;
    undefined field187_0x51ff;
    undefined field188_0x5200;
    undefined field189_0x5201;
    undefined field190_0x5202;
    undefined field191_0x5203;
    undefined field192_0x5204;
    undefined field193_0x5205;
    undefined field194_0x5206;
    undefined field195_0x5207;
    undefined field196_0x5208;
    undefined field197_0x5209;
    undefined field198_0x520a;
    undefined field199_0x520b;
    undefined field200_0x520c;
    undefined field201_0x520d;
    undefined field202_0x520e;
    undefined field203_0x520f;
    undefined field204_0x5210;
    undefined field205_0x5211;
    undefined field206_0x5212;
    undefined field207_0x5213;
    undefined field208_0x5214;
    undefined field209_0x5215;
    undefined field210_0x5216;
    undefined field211_0x5217;
    undefined field212_0x5218;
    undefined field213_0x5219;
    undefined field214_0x521a;
    undefined field215_0x521b;
    undefined field216_0x521c;
    undefined field217_0x521d;
    undefined field218_0x521e;
    undefined field219_0x521f;
    undefined field220_0x5220;
    undefined field221_0x5221;
    undefined field222_0x5222;
    undefined field223_0x5223;
    undefined field224_0x5224;
    undefined field225_0x5225;
    undefined field226_0x5226;
    undefined field227_0x5227;
    undefined field228_0x5228;
    undefined field229_0x5229;
    undefined field230_0x522a;
    undefined field231_0x522b;
    undefined field232_0x522c;
    undefined field233_0x522d;
    undefined field234_0x522e;
    undefined field235_0x522f;
    undefined field236_0x5230;
    undefined field237_0x5231;
    undefined field238_0x5232;
    undefined field239_0x5233;
    undefined field240_0x5234;
    undefined field241_0x5235;
    undefined field242_0x5236;
    undefined field243_0x5237;
    undefined field244_0x5238;
    undefined field245_0x5239;
    undefined field246_0x523a;
    undefined field247_0x523b;
    undefined field248_0x523c;
    undefined field249_0x523d;
    undefined field250_0x523e;
    undefined field251_0x523f;
    undefined field252_0x5240;
    undefined field253_0x5241;
    undefined field254_0x5242;
    undefined field255_0x5243;
    undefined field256_0x5244;
    undefined field257_0x5245;
    undefined field258_0x5246;
    undefined field259_0x5247;
    undefined field260_0x5248;
    undefined field261_0x5249;
    undefined field262_0x524a;
    undefined field263_0x524b;
    undefined field264_0x524c;
    undefined field265_0x524d;
    undefined field266_0x524e;
    undefined field267_0x524f;
    undefined field268_0x5250;
    undefined field269_0x5251;
    undefined field270_0x5252;
    undefined field271_0x5253;
    undefined field272_0x5254;
    undefined field273_0x5255;
    undefined field274_0x5256;
    undefined field275_0x5257;
    undefined field276_0x5258;
    undefined field277_0x5259;
    undefined field278_0x525a;
    undefined field279_0x525b;
    undefined field280_0x525c;
    undefined field281_0x525d;
    undefined field282_0x525e;
    undefined field283_0x525f;
    undefined field284_0x5260;
    undefined field285_0x5261;
    undefined field286_0x5262;
    undefined field287_0x5263;
    undefined field288_0x5264;
    undefined field289_0x5265;
    undefined field290_0x5266;
    undefined field291_0x5267;
    undefined field292_0x5268;
    undefined field293_0x5269;
    undefined field294_0x526a;
    undefined field295_0x526b;
    undefined field296_0x526c;
    undefined field297_0x526d;
    undefined field298_0x526e;
    undefined field299_0x526f;
    undefined field300_0x5270;
    undefined field301_0x5271;
    undefined field302_0x5272;
    undefined field303_0x5273;
    undefined field304_0x5274;
    undefined field305_0x5275;
    undefined field306_0x5276;
    undefined field307_0x5277;
    undefined field308_0x5278;
    undefined field309_0x5279;
    undefined field310_0x527a;
    undefined field311_0x527b;
    undefined field312_0x527c;
    undefined field313_0x527d;
    undefined field314_0x527e;
    undefined field315_0x527f;
    undefined field316_0x5280;
    undefined field317_0x5281;
    undefined field318_0x5282;
    undefined field319_0x5283;
    undefined field320_0x5284;
    undefined field321_0x5285;
    undefined field322_0x5286;
    undefined field323_0x5287;
    undefined field324_0x5288;
    undefined field325_0x5289;
    undefined field326_0x528a;
    undefined field327_0x528b;
    undefined field328_0x528c;
    undefined field329_0x528d;
    undefined field330_0x528e;
    undefined field331_0x528f;
    undefined field332_0x5290;
    undefined field333_0x5291;
    undefined field334_0x5292;
    undefined field335_0x5293;
    undefined field336_0x5294;
    undefined field337_0x5295;
    undefined field338_0x5296;
    undefined field339_0x5297;
    undefined field340_0x5298;
    undefined field341_0x5299;
    undefined field342_0x529a;
    undefined field343_0x529b;
    undefined field344_0x529c;
    undefined field345_0x529d;
    undefined field346_0x529e;
    undefined field347_0x529f;
    undefined field348_0x52a0;
    undefined field349_0x52a1;
    undefined field350_0x52a2;
    undefined field351_0x52a3;
    undefined field352_0x52a4;
    undefined field353_0x52a5;
    undefined field354_0x52a6;
    undefined field355_0x52a7;
    undefined field356_0x52a8;
    undefined field357_0x52a9;
    undefined field358_0x52aa;
    undefined field359_0x52ab;
    undefined field360_0x52ac;
    undefined field361_0x52ad;
    undefined field362_0x52ae;
    undefined field363_0x52af;
    undefined field364_0x52b0;
    undefined field365_0x52b1;
    undefined field366_0x52b2;
    undefined field367_0x52b3;
    undefined field368_0x52b4;
    undefined field369_0x52b5;
    undefined field370_0x52b6;
    undefined field371_0x52b7;
    undefined field372_0x52b8;
    undefined field373_0x52b9;
    undefined field374_0x52ba;
    undefined field375_0x52bb;
    undefined field376_0x52bc;
    undefined field377_0x52bd;
    undefined field378_0x52be;
    undefined field379_0x52bf;
    undefined field380_0x52c0;
    undefined field381_0x52c1;
    undefined field382_0x52c2;
    undefined field383_0x52c3;
    undefined field384_0x52c4;
    undefined field385_0x52c5;
    undefined field386_0x52c6;
    undefined field387_0x52c7;
    undefined field388_0x52c8;
    undefined field389_0x52c9;
    undefined field390_0x52ca;
    undefined field391_0x52cb;
    undefined field392_0x52cc;
    undefined field393_0x52cd;
    undefined field394_0x52ce;
    undefined field395_0x52cf;
    undefined field396_0x52d0;
    undefined field397_0x52d1;
    undefined field398_0x52d2;
    undefined field399_0x52d3;
    undefined field400_0x52d4;
    undefined field401_0x52d5;
    undefined field402_0x52d6;
    undefined field403_0x52d7;
    undefined field404_0x52d8;
    undefined field405_0x52d9;
    undefined field406_0x52da;
    undefined field407_0x52db;
    undefined field408_0x52dc;
    undefined field409_0x52dd;
    undefined field410_0x52de;
    undefined field411_0x52df;
    undefined field412_0x52e0;
    undefined field413_0x52e1;
    undefined field414_0x52e2;
    undefined field415_0x52e3;
    undefined field416_0x52e4;
    undefined field417_0x52e5;
    undefined field418_0x52e6;
    undefined field419_0x52e7;
    undefined field420_0x52e8;
    undefined field421_0x52e9;
    undefined field422_0x52ea;
    undefined field423_0x52eb;
    undefined field424_0x52ec;
    undefined field425_0x52ed;
    undefined field426_0x52ee;
    undefined field427_0x52ef;
    undefined field428_0x52f0;
    undefined field429_0x52f1;
    undefined field430_0x52f2;
    undefined field431_0x52f3;
    undefined field432_0x52f4;
    undefined field433_0x52f5;
    undefined field434_0x52f6;
    undefined field435_0x52f7;
    undefined field436_0x52f8;
    undefined field437_0x52f9;
    undefined field438_0x52fa;
    undefined field439_0x52fb;
    undefined field440_0x52fc;
    undefined field441_0x52fd;
    undefined field442_0x52fe;
    undefined field443_0x52ff;
    undefined field444_0x5300;
    undefined field445_0x5301;
    undefined field446_0x5302;
    undefined field447_0x5303;
    undefined field448_0x5304;
    undefined field449_0x5305;
    undefined field450_0x5306;
    undefined field451_0x5307;
    undefined field452_0x5308;
    undefined field453_0x5309;
    undefined field454_0x530a;
    undefined field455_0x530b;
    undefined field456_0x530c;
    undefined field457_0x530d;
    undefined field458_0x530e;
    undefined field459_0x530f;
    undefined field460_0x5310;
    undefined field461_0x5311;
    undefined field462_0x5312;
    undefined field463_0x5313;
    undefined field464_0x5314;
    undefined field465_0x5315;
    undefined field466_0x5316;
    undefined field467_0x5317;
    undefined field468_0x5318;
    undefined field469_0x5319;
    undefined field470_0x531a;
    undefined field471_0x531b;
    undefined field472_0x531c;
    undefined field473_0x531d;
    undefined field474_0x531e;
    undefined field475_0x531f;
    undefined field476_0x5320;
    undefined field477_0x5321;
    undefined field478_0x5322;
    undefined field479_0x5323;
    undefined field480_0x5324;
    undefined field481_0x5325;
    undefined field482_0x5326;
    undefined field483_0x5327;
    undefined field484_0x5328;
    undefined field485_0x5329;
    undefined field486_0x532a;
    undefined field487_0x532b;
    undefined field488_0x532c;
    undefined field489_0x532d;
    undefined field490_0x532e;
    undefined field491_0x532f;
    undefined field492_0x5330;
    undefined field493_0x5331;
    undefined field494_0x5332;
    undefined field495_0x5333;
    undefined field496_0x5334;
    undefined field497_0x5335;
    undefined field498_0x5336;
    undefined field499_0x5337;
    undefined field500_0x5338;
    undefined field501_0x5339;
    undefined field502_0x533a;
    undefined field503_0x533b;
    undefined field504_0x533c;
    undefined field505_0x533d;
    undefined field506_0x533e;
    undefined field507_0x533f;
    undefined field508_0x5340;
    undefined field509_0x5341;
    undefined field510_0x5342;
    undefined field511_0x5343;
    undefined field512_0x5344;
    undefined field513_0x5345;
    undefined field514_0x5346;
    undefined field515_0x5347;
    undefined field516_0x5348;
    undefined field517_0x5349;
    undefined field518_0x534a;
    undefined field519_0x534b;
    undefined field520_0x534c;
    undefined field521_0x534d;
    undefined field522_0x534e;
    undefined field523_0x534f;
    undefined field524_0x5350;
    undefined field525_0x5351;
    undefined field526_0x5352;
    undefined field527_0x5353;
    undefined field528_0x5354;
    undefined field529_0x5355;
    undefined field530_0x5356;
    undefined field531_0x5357;
    undefined field532_0x5358;
    undefined field533_0x5359;
    undefined field534_0x535a;
    undefined field535_0x535b;
    undefined field536_0x535c;
    undefined field537_0x535d;
    undefined field538_0x535e;
    undefined field539_0x535f;
    undefined field540_0x5360;
    undefined field541_0x5361;
    undefined field542_0x5362;
    undefined field543_0x5363;
    undefined field544_0x5364;
    undefined field545_0x5365;
    undefined field546_0x5366;
    undefined field547_0x5367;
    undefined field548_0x5368;
    undefined field549_0x5369;
    undefined field550_0x536a;
    undefined field551_0x536b;
    undefined field552_0x536c;
    undefined field553_0x536d;
    undefined field554_0x536e;
    undefined field555_0x536f;
    undefined field556_0x5370;
    undefined field557_0x5371;
    undefined field558_0x5372;
    undefined field559_0x5373;
    undefined field560_0x5374;
    undefined field561_0x5375;
    undefined field562_0x5376;
    undefined field563_0x5377;
    undefined field564_0x5378;
    undefined field565_0x5379;
    undefined field566_0x537a;
    undefined field567_0x537b;
    undefined field568_0x537c;
    undefined field569_0x537d;
    undefined field570_0x537e;
    undefined field571_0x537f;
    undefined field572_0x5380;
    undefined field573_0x5381;
    undefined field574_0x5382;
    undefined field575_0x5383;
    undefined field576_0x5384;
    undefined field577_0x5385;
    undefined field578_0x5386;
    undefined field579_0x5387;
    undefined field580_0x5388;
    undefined field581_0x5389;
    undefined field582_0x538a;
    undefined field583_0x538b;
    undefined field584_0x538c;
    undefined field585_0x538d;
    undefined field586_0x538e;
    undefined field587_0x538f;
    undefined field588_0x5390;
    undefined field589_0x5391;
    undefined field590_0x5392;
    undefined field591_0x5393;
    undefined field592_0x5394;
    undefined field593_0x5395;
    undefined field594_0x5396;
    undefined field595_0x5397;
    undefined field596_0x5398;
    undefined field597_0x5399;
    undefined field598_0x539a;
    undefined field599_0x539b;
    undefined field600_0x539c;
    undefined field601_0x539d;
    undefined field602_0x539e;
    undefined field603_0x539f;
    undefined field604_0x53a0;
    undefined field605_0x53a1;
    undefined field606_0x53a2;
    undefined field607_0x53a3;
    undefined field608_0x53a4;
    undefined field609_0x53a5;
    undefined field610_0x53a6;
    undefined field611_0x53a7;
    undefined field612_0x53a8;
    undefined field613_0x53a9;
    undefined field614_0x53aa;
    undefined field615_0x53ab;
    undefined field616_0x53ac;
    undefined field617_0x53ad;
    undefined field618_0x53ae;
    undefined field619_0x53af;
    undefined field620_0x53b0;
    undefined field621_0x53b1;
    undefined field622_0x53b2;
    undefined field623_0x53b3;
    undefined field624_0x53b4;
    undefined field625_0x53b5;
    undefined field626_0x53b6;
    undefined field627_0x53b7;
    undefined field628_0x53b8;
    undefined field629_0x53b9;
    undefined field630_0x53ba;
    undefined field631_0x53bb;
    undefined field632_0x53bc;
    undefined field633_0x53bd;
    undefined field634_0x53be;
    undefined field635_0x53bf;
    undefined field636_0x53c0;
    undefined field637_0x53c1;
    undefined field638_0x53c2;
    undefined field639_0x53c3;
    undefined field640_0x53c4;
    undefined field641_0x53c5;
    undefined field642_0x53c6;
    undefined field643_0x53c7;
    undefined field644_0x53c8;
    undefined field645_0x53c9;
    undefined field646_0x53ca;
    undefined field647_0x53cb;
    undefined field648_0x53cc;
    undefined field649_0x53cd;
    undefined field650_0x53ce;
    undefined field651_0x53cf;
    undefined field652_0x53d0;
    undefined field653_0x53d1;
    undefined field654_0x53d2;
    undefined field655_0x53d3;
    undefined field656_0x53d4;
    undefined field657_0x53d5;
    undefined field658_0x53d6;
    undefined field659_0x53d7;
    undefined field660_0x53d8;
    undefined field661_0x53d9;
    undefined field662_0x53da;
    undefined field663_0x53db;
    undefined field664_0x53dc;
    undefined field665_0x53dd;
    undefined field666_0x53de;
    undefined field667_0x53df;
    undefined field668_0x53e0;
    undefined field669_0x53e1;
    undefined field670_0x53e2;
    undefined field671_0x53e3;
    undefined field672_0x53e4;
    undefined field673_0x53e5;
    undefined field674_0x53e6;
    undefined field675_0x53e7;
    undefined field676_0x53e8;
    undefined field677_0x53e9;
    undefined field678_0x53ea;
    undefined field679_0x53eb;
    undefined field680_0x53ec;
    undefined field681_0x53ed;
    undefined field682_0x53ee;
    undefined field683_0x53ef;
    undefined field684_0x53f0;
    undefined field685_0x53f1;
    undefined field686_0x53f2;
    undefined field687_0x53f3;
    undefined field688_0x53f4;
    undefined field689_0x53f5;
    undefined field690_0x53f6;
    undefined field691_0x53f7;
    undefined field692_0x53f8;
    undefined field693_0x53f9;
    undefined field694_0x53fa;
    undefined field695_0x53fb;
    undefined field696_0x53fc;
    undefined field697_0x53fd;
    undefined field698_0x53fe;
    undefined field699_0x53ff;
    undefined field700_0x5400;
    undefined field701_0x5401;
    undefined field702_0x5402;
    undefined field703_0x5403;
    undefined field704_0x5404;
    undefined field705_0x5405;
    undefined field706_0x5406;
    undefined field707_0x5407;
    undefined field708_0x5408;
    undefined field709_0x5409;
    undefined field710_0x540a;
    undefined field711_0x540b;
    undefined field712_0x540c;
    undefined field713_0x540d;
    undefined field714_0x540e;
    undefined field715_0x540f;
    undefined field716_0x5410;
    undefined field717_0x5411;
    undefined field718_0x5412;
    undefined field719_0x5413;
    undefined field720_0x5414;
    undefined field721_0x5415;
    undefined field722_0x5416;
    undefined field723_0x5417;
    undefined field724_0x5418;
    undefined field725_0x5419;
    undefined field726_0x541a;
    undefined field727_0x541b;
    undefined field728_0x541c;
    undefined field729_0x541d;
    undefined field730_0x541e;
    undefined field731_0x541f;
    undefined field732_0x5420;
    undefined field733_0x5421;
    undefined field734_0x5422;
    undefined field735_0x5423;
    undefined field736_0x5424;
    undefined field737_0x5425;
    undefined field738_0x5426;
    undefined field739_0x5427;
    undefined field740_0x5428;
    undefined field741_0x5429;
    undefined field742_0x542a;
    undefined field743_0x542b;
    undefined field744_0x542c;
    undefined field745_0x542d;
    undefined field746_0x542e;
    undefined field747_0x542f;
    undefined field748_0x5430;
    undefined field749_0x5431;
    undefined field750_0x5432;
    undefined field751_0x5433;
    undefined field752_0x5434;
    undefined field753_0x5435;
    undefined field754_0x5436;
    undefined field755_0x5437;
    undefined field756_0x5438;
    undefined field757_0x5439;
    undefined field758_0x543a;
    undefined field759_0x543b;
    undefined field760_0x543c;
    undefined field761_0x543d;
    undefined field762_0x543e;
    undefined field763_0x543f;
    undefined field764_0x5440;
    undefined field765_0x5441;
    undefined field766_0x5442;
    undefined field767_0x5443;
    undefined field768_0x5444;
    undefined field769_0x5445;
    undefined field770_0x5446;
    undefined field771_0x5447;
    undefined field772_0x5448;
    undefined field773_0x5449;
    undefined field774_0x544a;
    undefined field775_0x544b;
    undefined field776_0x544c;
    undefined field777_0x544d;
    undefined field778_0x544e;
    undefined field779_0x544f;
    undefined field780_0x5450;
    undefined field781_0x5451;
    undefined field782_0x5452;
    undefined field783_0x5453;
    undefined field784_0x5454;
    undefined field785_0x5455;
    undefined field786_0x5456;
    undefined field787_0x5457;
    undefined field788_0x5458;
    undefined field789_0x5459;
    undefined field790_0x545a;
    undefined field791_0x545b;
    undefined field792_0x545c;
    undefined field793_0x545d;
    undefined field794_0x545e;
    undefined field795_0x545f;
    undefined field796_0x5460;
    undefined field797_0x5461;
    undefined field798_0x5462;
    undefined field799_0x5463;
    undefined field800_0x5464;
    undefined field801_0x5465;
    undefined field802_0x5466;
    undefined field803_0x5467;
    undefined field804_0x5468;
    undefined field805_0x5469;
    undefined field806_0x546a;
    undefined field807_0x546b;
    undefined field808_0x546c;
    undefined field809_0x546d;
    undefined field810_0x546e;
    undefined field811_0x546f;
    undefined field812_0x5470;
    undefined field813_0x5471;
    undefined field814_0x5472;
    undefined field815_0x5473;
    undefined field816_0x5474;
    undefined field817_0x5475;
    undefined field818_0x5476;
    undefined field819_0x5477;
    undefined field820_0x5478;
    undefined field821_0x5479;
    undefined field822_0x547a;
    undefined field823_0x547b;
    undefined field824_0x547c;
    undefined field825_0x547d;
    undefined field826_0x547e;
    undefined field827_0x547f;
    undefined field828_0x5480;
    undefined field829_0x5481;
    undefined field830_0x5482;
    undefined field831_0x5483;
    undefined field832_0x5484;
    undefined field833_0x5485;
    undefined field834_0x5486;
    undefined field835_0x5487;
    undefined field836_0x5488;
    undefined field837_0x5489;
    undefined field838_0x548a;
    undefined field839_0x548b;
    undefined field840_0x548c;
    undefined field841_0x548d;
    undefined field842_0x548e;
    undefined field843_0x548f;
    undefined field844_0x5490;
    undefined field845_0x5491;
    undefined field846_0x5492;
    undefined field847_0x5493;
    undefined field848_0x5494;
    undefined field849_0x5495;
    undefined field850_0x5496;
    undefined field851_0x5497;
    undefined field852_0x5498;
    undefined field853_0x5499;
    undefined field854_0x549a;
    undefined field855_0x549b;
    undefined field856_0x549c;
    undefined field857_0x549d;
    undefined field858_0x549e;
    undefined field859_0x549f;
    undefined field860_0x54a0;
    undefined field861_0x54a1;
    undefined field862_0x54a2;
    undefined field863_0x54a3;
    undefined field864_0x54a4;
    undefined field865_0x54a5;
    undefined field866_0x54a6;
    undefined field867_0x54a7;
    undefined field868_0x54a8;
    undefined field869_0x54a9;
    undefined field870_0x54aa;
    undefined field871_0x54ab;
    undefined field872_0x54ac;
    undefined field873_0x54ad;
    undefined field874_0x54ae;
    undefined field875_0x54af;
    undefined field876_0x54b0;
    undefined field877_0x54b1;
    undefined field878_0x54b2;
    undefined field879_0x54b3;
    undefined field880_0x54b4;
    undefined field881_0x54b5;
    undefined field882_0x54b6;
    undefined field883_0x54b7;
    undefined field884_0x54b8;
    undefined field885_0x54b9;
    undefined field886_0x54ba;
    undefined field887_0x54bb;
    undefined field888_0x54bc;
    undefined field889_0x54bd;
    undefined field890_0x54be;
    undefined field891_0x54bf;
    undefined field892_0x54c0;
    undefined field893_0x54c1;
    undefined field894_0x54c2;
    undefined field895_0x54c3;
    undefined field896_0x54c4;
    undefined field897_0x54c5;
    undefined field898_0x54c6;
    undefined field899_0x54c7;
    undefined field900_0x54c8;
    undefined field901_0x54c9;
    undefined field902_0x54ca;
    undefined field903_0x54cb;
    undefined field904_0x54cc;
    undefined field905_0x54cd;
    undefined field906_0x54ce;
    undefined field907_0x54cf;
    undefined field908_0x54d0;
    undefined field909_0x54d1;
    undefined field910_0x54d2;
    undefined field911_0x54d3;
    undefined field912_0x54d4;
    undefined field913_0x54d5;
    undefined field914_0x54d6;
    undefined field915_0x54d7;
    undefined field916_0x54d8;
    undefined field917_0x54d9;
    undefined field918_0x54da;
    undefined field919_0x54db;
    undefined field920_0x54dc;
    undefined field921_0x54dd;
    undefined field922_0x54de;
    undefined field923_0x54df;
    undefined field924_0x54e0;
    undefined field925_0x54e1;
    undefined field926_0x54e2;
    undefined field927_0x54e3;
    undefined field928_0x54e4;
    undefined field929_0x54e5;
    undefined field930_0x54e6;
    undefined field931_0x54e7;
    undefined field932_0x54e8;
    undefined field933_0x54e9;
    undefined field934_0x54ea;
    undefined field935_0x54eb;
    undefined field936_0x54ec;
    undefined field937_0x54ed;
    undefined field938_0x54ee;
    undefined field939_0x54ef;
    undefined field940_0x54f0;
    undefined field941_0x54f1;
    undefined field942_0x54f2;
    undefined field943_0x54f3;
    undefined field944_0x54f4;
    undefined field945_0x54f5;
    undefined field946_0x54f6;
    undefined field947_0x54f7;
    undefined field948_0x54f8;
    undefined field949_0x54f9;
    undefined field950_0x54fa;
    undefined field951_0x54fb;
    undefined field952_0x54fc;
    undefined field953_0x54fd;
    undefined field954_0x54fe;
    undefined field955_0x54ff;
    undefined field956_0x5500;
    undefined field957_0x5501;
    undefined field958_0x5502;
    undefined field959_0x5503;
    undefined field960_0x5504;
    undefined field961_0x5505;
    undefined field962_0x5506;
    undefined field963_0x5507;
    undefined field964_0x5508;
    undefined field965_0x5509;
    undefined field966_0x550a;
    undefined field967_0x550b;
    undefined field968_0x550c;
    undefined field969_0x550d;
    undefined field970_0x550e;
    undefined field971_0x550f;
    undefined field972_0x5510;
    undefined field973_0x5511;
    undefined field974_0x5512;
    undefined field975_0x5513;
    undefined field976_0x5514;
    undefined field977_0x5515;
    undefined field978_0x5516;
    undefined field979_0x5517;
    undefined field980_0x5518;
    undefined field981_0x5519;
    undefined field982_0x551a;
    undefined field983_0x551b;
    undefined field984_0x551c;
    undefined field985_0x551d;
    undefined field986_0x551e;
    undefined field987_0x551f;
    undefined field988_0x5520;
    undefined field989_0x5521;
    undefined field990_0x5522;
    undefined field991_0x5523;
    undefined field992_0x5524;
    undefined field993_0x5525;
    undefined field994_0x5526;
    undefined field995_0x5527;
    undefined field996_0x5528;
    undefined field997_0x5529;
    undefined field998_0x552a;
    undefined field999_0x552b;
    undefined field1000_0x552c;
    undefined field1001_0x552d;
    undefined field1002_0x552e;
    undefined field1003_0x552f;
    undefined field1004_0x5530;
    undefined field1005_0x5531;
    undefined field1006_0x5532;
    undefined field1007_0x5533;
    undefined field1008_0x5534;
    undefined field1009_0x5535;
    undefined field1010_0x5536;
    undefined field1011_0x5537;
    undefined field1012_0x5538;
    undefined field1013_0x5539;
    undefined field1014_0x553a;
    undefined field1015_0x553b;
    undefined field1016_0x553c;
    undefined field1017_0x553d;
    undefined field1018_0x553e;
    undefined field1019_0x553f;
    undefined field1020_0x5540;
    undefined field1021_0x5541;
    undefined field1022_0x5542;
    undefined field1023_0x5543;
    undefined field1024_0x5544;
    undefined field1025_0x5545;
    undefined field1026_0x5546;
    undefined field1027_0x5547;
    undefined field1028_0x5548;
    undefined field1029_0x5549;
    undefined field1030_0x554a;
    undefined field1031_0x554b;
    undefined field1032_0x554c;
    undefined field1033_0x554d;
    undefined field1034_0x554e;
    undefined field1035_0x554f;
    undefined field1036_0x5550;
    undefined field1037_0x5551;
    undefined field1038_0x5552;
    undefined field1039_0x5553;
    undefined field1040_0x5554;
    undefined field1041_0x5555;
    undefined field1042_0x5556;
    undefined field1043_0x5557;
    undefined field1044_0x5558;
    undefined field1045_0x5559;
    undefined field1046_0x555a;
    undefined field1047_0x555b;
    undefined field1048_0x555c;
    undefined field1049_0x555d;
    undefined field1050_0x555e;
    undefined field1051_0x555f;
    undefined field1052_0x5560;
    undefined field1053_0x5561;
    undefined field1054_0x5562;
    undefined field1055_0x5563;
    undefined field1056_0x5564;
    undefined field1057_0x5565;
    undefined field1058_0x5566;
    undefined field1059_0x5567;
    undefined field1060_0x5568;
    undefined field1061_0x5569;
    undefined field1062_0x556a;
    undefined field1063_0x556b;
    undefined field1064_0x556c;
    undefined field1065_0x556d;
    undefined field1066_0x556e;
    undefined field1067_0x556f;
    undefined field1068_0x5570;
    undefined field1069_0x5571;
    undefined field1070_0x5572;
    undefined field1071_0x5573;
    undefined field1072_0x5574;
    undefined field1073_0x5575;
    undefined field1074_0x5576;
    undefined field1075_0x5577;
    undefined field1076_0x5578;
    undefined field1077_0x5579;
    undefined field1078_0x557a;
    undefined field1079_0x557b;
    undefined field1080_0x557c;
    undefined field1081_0x557d;
    undefined field1082_0x557e;
    undefined field1083_0x557f;
    undefined field1084_0x5580;
    undefined field1085_0x5581;
    undefined field1086_0x5582;
    undefined field1087_0x5583;
    undefined field1088_0x5584;
    undefined field1089_0x5585;
    undefined field1090_0x5586;
    undefined field1091_0x5587;
    undefined field1092_0x5588;
    undefined field1093_0x5589;
    undefined field1094_0x558a;
    undefined field1095_0x558b;
    undefined field1096_0x558c;
    undefined field1097_0x558d;
    undefined field1098_0x558e;
    undefined field1099_0x558f;
    undefined field1100_0x5590;
    undefined field1101_0x5591;
    undefined field1102_0x5592;
    undefined field1103_0x5593;
    undefined field1104_0x5594;
    undefined field1105_0x5595;
    undefined field1106_0x5596;
    undefined field1107_0x5597;
    undefined field1108_0x5598;
    undefined field1109_0x5599;
    undefined field1110_0x559a;
    undefined field1111_0x559b;
    undefined field1112_0x559c;
    undefined field1113_0x559d;
    undefined field1114_0x559e;
    undefined field1115_0x559f;
    undefined field1116_0x55a0;
    undefined field1117_0x55a1;
    undefined field1118_0x55a2;
    undefined field1119_0x55a3;
    undefined field1120_0x55a4;
    undefined field1121_0x55a5;
    undefined field1122_0x55a6;
    undefined field1123_0x55a7;
    undefined field1124_0x55a8;
    undefined field1125_0x55a9;
    undefined field1126_0x55aa;
    undefined field1127_0x55ab;
    undefined field1128_0x55ac;
    undefined field1129_0x55ad;
    undefined field1130_0x55ae;
    undefined field1131_0x55af;
    undefined field1132_0x55b0;
    undefined field1133_0x55b1;
    undefined field1134_0x55b2;
    undefined field1135_0x55b3;
    undefined field1136_0x55b4;
    undefined field1137_0x55b5;
    undefined field1138_0x55b6;
    undefined field1139_0x55b7;
    undefined field1140_0x55b8;
    undefined field1141_0x55b9;
    undefined field1142_0x55ba;
    undefined field1143_0x55bb;
    undefined field1144_0x55bc;
    undefined field1145_0x55bd;
    undefined field1146_0x55be;
    undefined field1147_0x55bf;
    undefined field1148_0x55c0;
    undefined field1149_0x55c1;
    undefined field1150_0x55c2;
    undefined field1151_0x55c3;
    undefined field1152_0x55c4;
    undefined field1153_0x55c5;
    undefined field1154_0x55c6;
    undefined field1155_0x55c7;
    undefined field1156_0x55c8;
    undefined field1157_0x55c9;
    undefined field1158_0x55ca;
    undefined field1159_0x55cb;
    undefined field1160_0x55cc;
    undefined field1161_0x55cd;
    undefined field1162_0x55ce;
    undefined field1163_0x55cf;
    undefined field1164_0x55d0;
    undefined field1165_0x55d1;
    undefined field1166_0x55d2;
    undefined field1167_0x55d3;
    undefined field1168_0x55d4;
    undefined field1169_0x55d5;
    undefined field1170_0x55d6;
    undefined field1171_0x55d7;
    undefined field1172_0x55d8;
    undefined field1173_0x55d9;
    undefined field1174_0x55da;
    undefined field1175_0x55db;
    undefined field1176_0x55dc;
    undefined field1177_0x55dd;
    undefined field1178_0x55de;
    undefined field1179_0x55df;
    undefined field1180_0x55e0;
    undefined field1181_0x55e1;
    undefined field1182_0x55e2;
    undefined field1183_0x55e3;
    undefined field1184_0x55e4;
    undefined field1185_0x55e5;
    undefined field1186_0x55e6;
    undefined field1187_0x55e7;
    undefined field1188_0x55e8;
    undefined field1189_0x55e9;
    undefined field1190_0x55ea;
    undefined field1191_0x55eb;
    undefined field1192_0x55ec;
    undefined field1193_0x55ed;
    undefined field1194_0x55ee;
    undefined field1195_0x55ef;
    undefined field1196_0x55f0;
    undefined field1197_0x55f1;
    undefined field1198_0x55f2;
    undefined field1199_0x55f3;
    undefined field1200_0x55f4;
    undefined field1201_0x55f5;
    undefined field1202_0x55f6;
    undefined field1203_0x55f7;
    undefined field1204_0x55f8;
    undefined field1205_0x55f9;
    undefined field1206_0x55fa;
    undefined field1207_0x55fb;
    undefined field1208_0x55fc;
    undefined field1209_0x55fd;
    undefined field1210_0x55fe;
    undefined field1211_0x55ff;
    undefined field1212_0x5600;
    undefined field1213_0x5601;
    undefined field1214_0x5602;
    undefined field1215_0x5603;
    undefined field1216_0x5604;
    undefined field1217_0x5605;
    undefined field1218_0x5606;
    undefined field1219_0x5607;
    undefined field1220_0x5608;
    undefined field1221_0x5609;
    undefined field1222_0x560a;
    undefined field1223_0x560b;
    undefined field1224_0x560c;
    undefined field1225_0x560d;
    undefined field1226_0x560e;
    undefined field1227_0x560f;
    undefined field1228_0x5610;
    undefined field1229_0x5611;
    undefined field1230_0x5612;
    undefined field1231_0x5613;
    undefined field1232_0x5614;
    undefined field1233_0x5615;
    undefined field1234_0x5616;
    undefined field1235_0x5617;
    undefined field1236_0x5618;
    undefined field1237_0x5619;
    undefined field1238_0x561a;
    undefined field1239_0x561b;
    undefined field1240_0x561c;
    undefined field1241_0x561d;
    undefined field1242_0x561e;
    undefined field1243_0x561f;
    undefined field1244_0x5620;
    undefined field1245_0x5621;
    undefined field1246_0x5622;
    undefined field1247_0x5623;
    undefined field1248_0x5624;
    undefined field1249_0x5625;
    undefined field1250_0x5626;
    undefined field1251_0x5627;
    undefined field1252_0x5628;
    undefined field1253_0x5629;
    undefined field1254_0x562a;
    undefined field1255_0x562b;
    undefined field1256_0x562c;
    undefined field1257_0x562d;
    undefined field1258_0x562e;
    undefined field1259_0x562f;
    undefined field1260_0x5630;
    undefined field1261_0x5631;
    undefined field1262_0x5632;
    undefined field1263_0x5633;
    undefined field1264_0x5634;
    undefined field1265_0x5635;
    undefined field1266_0x5636;
    undefined field1267_0x5637;
    undefined field1268_0x5638;
    undefined field1269_0x5639;
    undefined field1270_0x563a;
    undefined field1271_0x563b;
    undefined field1272_0x563c;
    undefined field1273_0x563d;
    undefined field1274_0x563e;
    undefined field1275_0x563f;
    undefined field1276_0x5640;
    undefined field1277_0x5641;
    undefined field1278_0x5642;
    undefined field1279_0x5643;
    undefined field1280_0x5644;
    undefined field1281_0x5645;
    undefined field1282_0x5646;
    undefined field1283_0x5647;
    undefined field1284_0x5648;
    undefined field1285_0x5649;
    undefined field1286_0x564a;
    undefined field1287_0x564b;
    undefined field1288_0x564c;
    undefined field1289_0x564d;
    undefined field1290_0x564e;
    undefined field1291_0x564f;
    undefined field1292_0x5650;
    undefined field1293_0x5651;
    undefined field1294_0x5652;
    undefined field1295_0x5653;
    undefined field1296_0x5654;
    undefined field1297_0x5655;
    undefined field1298_0x5656;
    undefined field1299_0x5657;
    undefined field1300_0x5658;
    undefined field1301_0x5659;
    undefined field1302_0x565a;
    undefined field1303_0x565b;
    undefined field1304_0x565c;
    undefined field1305_0x565d;
    undefined field1306_0x565e;
    undefined field1307_0x565f;
    undefined field1308_0x5660;
    undefined field1309_0x5661;
    undefined field1310_0x5662;
    undefined field1311_0x5663;
    undefined field1312_0x5664;
    undefined field1313_0x5665;
    undefined field1314_0x5666;
    undefined field1315_0x5667;
    undefined field1316_0x5668;
    undefined field1317_0x5669;
    undefined field1318_0x566a;
    undefined field1319_0x566b;
    undefined field1320_0x566c;
    undefined field1321_0x566d;
    undefined field1322_0x566e;
    undefined field1323_0x566f;
    undefined field1324_0x5670;
    undefined field1325_0x5671;
    undefined field1326_0x5672;
    undefined field1327_0x5673;
    undefined field1328_0x5674;
    undefined field1329_0x5675;
    undefined field1330_0x5676;
    undefined field1331_0x5677;
    undefined field1332_0x5678;
    undefined field1333_0x5679;
    undefined field1334_0x567a;
    undefined field1335_0x567b;
    undefined field1336_0x567c;
    undefined field1337_0x567d;
    undefined field1338_0x567e;
    undefined field1339_0x567f;
    undefined field1340_0x5680;
    undefined field1341_0x5681;
    undefined field1342_0x5682;
    undefined field1343_0x5683;
    undefined field1344_0x5684;
    undefined field1345_0x5685;
    undefined field1346_0x5686;
    undefined field1347_0x5687;
    undefined field1348_0x5688;
    undefined field1349_0x5689;
    undefined field1350_0x568a;
    undefined field1351_0x568b;
    undefined field1352_0x568c;
    undefined field1353_0x568d;
    undefined field1354_0x568e;
    undefined field1355_0x568f;
    undefined field1356_0x5690;
    undefined field1357_0x5691;
    undefined field1358_0x5692;
    undefined field1359_0x5693;
    undefined field1360_0x5694;
    undefined field1361_0x5695;
    undefined field1362_0x5696;
    undefined field1363_0x5697;
    undefined field1364_0x5698;
    undefined field1365_0x5699;
    undefined field1366_0x569a;
    undefined field1367_0x569b;
    undefined field1368_0x569c;
    undefined field1369_0x569d;
    undefined field1370_0x569e;
    undefined field1371_0x569f;
    undefined field1372_0x56a0;
    undefined field1373_0x56a1;
    undefined field1374_0x56a2;
    undefined field1375_0x56a3;
    undefined field1376_0x56a4;
    undefined field1377_0x56a5;
    undefined field1378_0x56a6;
    undefined field1379_0x56a7;
    undefined field1380_0x56a8;
    undefined field1381_0x56a9;
    undefined field1382_0x56aa;
    undefined field1383_0x56ab;
    undefined field1384_0x56ac;
    undefined field1385_0x56ad;
    undefined field1386_0x56ae;
    undefined field1387_0x56af;
};

struct ScoreDat {
    byte xorseed[2];
    ushort csum;
    byte unk[4];
    uint data_offset;
    uint unk2;
    uint file_length;
};

typedef struct EffectManager EffectManager, *PEffectManager;

struct EffectManager {
    int next_index;
    undefined4 unk;
    struct Effect effects[512];
    struct Effect dummy_effect_for_failed_spawns;
};

typedef struct Player Player, *PPlayer;

typedef byte u8;

typedef struct ShottypeData ShottypeData, *PShottypeData;

struct ShottypeData {
    float field0_0x0;
    float field1_0x4;
    float field2_0x8;
    float field3_0xc;
    void *field4_0x10;
    void *field5_0x14;
};

struct Player {
    struct AnmVm vm0;
    struct AnmVm vm1[3];
    D3DXVECTOR3 position;
    u8 field3_0x44c[12];
    D3DXVECTOR3 field4_0x458;
    D3DXVECTOR3 field5_0x464;
    D3DXVECTOR3 field6_0x470;
    D3DXVECTOR3 field7_0x47c;
    D3DXVECTOR3 field8_0x488;
    D3DXVECTOR3 field9_0x494;
    D3DXVECTOR3 field10_0x4a0[2];
    D3DXVECTOR3 field11_0x4b8[32];
    D3DXVECTOR3 field12_0x638[32];
    int field13_0x7b8[32];
    int field14_0x838[32];
    struct PlayerRect field15_0x8b8[16];
    struct ZunTimer field16_0x9b8[2];
    float field17_0x9d0;
    float field18_0x9d4;
    int field19_0x9d8;
    int field20_0x9dc;
    byte field21_0x9e0;
    byte field22_0x9e1;
    byte field23_0x9e2;
    byte field24_0x9e3;
    byte field25_0x9e4;
    struct ZunTimer field26_0x9e8;
    struct ShottypeData field27_0x9f4;
    int field28_0xa0c;
    float field29_0xa10;
    int field30_0xa14;
    short field31_0xa18;
    D3DXVECTOR3 position_of_last_enemy_hit;
    struct PlayerBullet bullets[80];
    struct ZunTimer field34_0x75a8;
    struct ZunTimer field35_0x75b4;
    void *field36_0x75c0;
    void *field37_0x75c4;
    struct PlayerInner inner;
    struct ChainElem *onTick;
    struct ChainElem *onDraw1;
    struct ChainElem *onDraw2;
};

typedef struct Chain Chain, *PChain;

struct Chain {
    struct ChainElem calcChain;
    struct ChainElem drawChain;
    DWORD midiOutputDeviceCount;
    undefined4 unk;
};

typedef struct GameErrorContext GameErrorContext, *PGameErrorContext;

struct GameErrorContext {
    char m_Buffer[2048];
    char *m_BufferEnd;
    bool m_ShowMessageBox;
};

typedef struct zRect zRect, *PzRect;

struct zRect {
    float left;
    float top;
    float right;
    float bottom;
};

typedef struct MainMenu MainMenu, *PMainMenu;

struct MainMenu {
    struct AnmVm AnmVMArray[122];
    uint cursor;
    undefined field2_0x81a4;
    undefined field3_0x81a5;
    undefined field4_0x81a6;
    undefined field5_0x81a7;
    undefined field6_0x81a8;
    undefined field7_0x81a9;
    undefined field8_0x81aa;
    undefined field9_0x81ab;
    undefined field10_0x81ac;
    undefined field11_0x81ad;
    undefined field12_0x81ae;
    undefined field13_0x81af;
    undefined field14_0x81b0;
    undefined field15_0x81b1;
    undefined field16_0x81b2;
    undefined field17_0x81b3;
    undefined field18_0x81b4;
    undefined field19_0x81b5;
    undefined field20_0x81b6;
    undefined field21_0x81b7;
    undefined field22_0x81b8;
    undefined field23_0x81b9;
    undefined field24_0x81ba;
    undefined field25_0x81bb;
    undefined field26_0x81bc;
    undefined field27_0x81bd;
    undefined field28_0x81be;
    undefined field29_0x81bf;
    undefined field30_0x81c0;
    undefined field31_0x81c1;
    undefined field32_0x81c2;
    undefined field33_0x81c3;
    undefined field34_0x81c4;
    undefined field35_0x81c5;
    undefined field36_0x81c6;
    undefined field37_0x81c7;
    undefined field38_0x81c8;
    undefined field39_0x81c9;
    undefined field40_0x81ca;
    undefined field41_0x81cb;
    undefined field42_0x81cc;
    undefined field43_0x81cd;
    undefined field44_0x81ce;
    undefined field45_0x81cf;
    undefined field46_0x81d0;
    undefined field47_0x81d1;
    undefined field48_0x81d2;
    undefined field49_0x81d3;
    undefined field50_0x81d4;
    undefined field51_0x81d5;
    undefined field52_0x81d6;
    undefined field53_0x81d7;
    undefined field54_0x81d8;
    undefined field55_0x81d9;
    undefined field56_0x81da;
    undefined field57_0x81db;
    undefined field58_0x81dc;
    undefined field59_0x81dd;
    undefined field60_0x81de;
    undefined field61_0x81df;
    undefined field62_0x81e0;
    undefined field63_0x81e1;
    undefined field64_0x81e2;
    undefined field65_0x81e3;
    uint unk_81e4;
    undefined field67_0x81e8;
    undefined field68_0x81e9;
    undefined field69_0x81ea;
    undefined field70_0x81eb;
    undefined field71_0x81ec;
    undefined field72_0x81ed;
    undefined field73_0x81ee;
    undefined field74_0x81ef;
    uint gameState;
    uint gameSubState;
    uint idleFrames;
    uint unk_81fc;
    float unk_8200;
    uint unk_8204;
    uint unk_8208;
    uint unk_820c;
    uint unk_8210;
    undefined field84_0x8214;
    undefined field85_0x8215;
    undefined field86_0x8216;
    undefined field87_0x8217;
    undefined field88_0x8218;
    undefined field89_0x8219;
    undefined field90_0x821a;
    undefined field91_0x821b;
    struct ControllerMapping controlMapping;
    undefined field93_0x822e;
    undefined field94_0x822f;
    undefined field95_0x8230;
    undefined field96_0x8231;
    undefined field97_0x8232;
    undefined field98_0x8233;
    struct ChainElem *chain_calc;
    struct ChainElem *chain_draw;
    undefined field101_0x823c;
    undefined field102_0x823d;
    undefined field103_0x823e;
    undefined field104_0x823f;
    undefined field105_0x8240;
    undefined field106_0x8241;
    undefined field107_0x8242;
    undefined field108_0x8243;
    undefined field109_0x8244;
    undefined field110_0x8245;
    undefined field111_0x8246;
    undefined field112_0x8247;
    undefined field113_0x8248;
    undefined field114_0x8249;
    undefined field115_0x824a;
    undefined field116_0x824b;
    undefined field117_0x824c;
    undefined field118_0x824d;
    undefined field119_0x824e;
    undefined field120_0x824f;
    undefined field121_0x8250;
    undefined field122_0x8251;
    undefined field123_0x8252;
    undefined field124_0x8253;
    undefined field125_0x8254;
    undefined field126_0x8255;
    undefined field127_0x8256;
    undefined field128_0x8257;
    undefined field129_0x8258;
    undefined field130_0x8259;
    undefined field131_0x825a;
    undefined field132_0x825b;
    undefined field133_0x825c;
    undefined field134_0x825d;
    undefined field135_0x825e;
    undefined field136_0x825f;
    undefined field137_0x8260;
    undefined field138_0x8261;
    undefined field139_0x8262;
    undefined field140_0x8263;
    undefined field141_0x8264;
    undefined field142_0x8265;
    undefined field143_0x8266;
    undefined field144_0x8267;
    undefined field145_0x8268;
    undefined field146_0x8269;
    undefined field147_0x826a;
    undefined field148_0x826b;
    undefined field149_0x826c;
    undefined field150_0x826d;
    undefined field151_0x826e;
    undefined field152_0x826f;
    undefined field153_0x8270;
    undefined field154_0x8271;
    undefined field155_0x8272;
    undefined field156_0x8273;
    undefined field157_0x8274;
    undefined field158_0x8275;
    undefined field159_0x8276;
    undefined field160_0x8277;
    undefined field161_0x8278;
    undefined field162_0x8279;
    undefined field163_0x827a;
    undefined field164_0x827b;
    undefined field165_0x827c;
    undefined field166_0x827d;
    undefined field167_0x827e;
    undefined field168_0x827f;
    undefined field169_0x8280;
    undefined field170_0x8281;
    undefined field171_0x8282;
    undefined field172_0x8283;
    undefined field173_0x8284;
    undefined field174_0x8285;
    undefined field175_0x8286;
    undefined field176_0x8287;
    undefined field177_0x8288;
    undefined field178_0x8289;
    undefined field179_0x828a;
    undefined field180_0x828b;
    undefined field181_0x828c;
    undefined field182_0x828d;
    undefined field183_0x828e;
    undefined field184_0x828f;
    undefined field185_0x8290;
    undefined field186_0x8291;
    undefined field187_0x8292;
    undefined field188_0x8293;
    undefined field189_0x8294;
    undefined field190_0x8295;
    undefined field191_0x8296;
    undefined field192_0x8297;
    undefined field193_0x8298;
    undefined field194_0x8299;
    undefined field195_0x829a;
    undefined field196_0x829b;
    undefined field197_0x829c;
    undefined field198_0x829d;
    undefined field199_0x829e;
    undefined field200_0x829f;
    undefined field201_0x82a0;
    undefined field202_0x82a1;
    undefined field203_0x82a2;
    undefined field204_0x82a3;
    undefined field205_0x82a4;
    undefined field206_0x82a5;
    undefined field207_0x82a6;
    undefined field208_0x82a7;
    undefined field209_0x82a8;
    undefined field210_0x82a9;
    undefined field211_0x82aa;
    undefined field212_0x82ab;
    undefined field213_0x82ac;
    undefined field214_0x82ad;
    undefined field215_0x82ae;
    undefined field216_0x82af;
    undefined field217_0x82b0;
    undefined field218_0x82b1;
    undefined field219_0x82b2;
    undefined field220_0x82b3;
    undefined field221_0x82b4;
    undefined field222_0x82b5;
    undefined field223_0x82b6;
    undefined field224_0x82b7;
    undefined field225_0x82b8;
    undefined field226_0x82b9;
    undefined field227_0x82ba;
    undefined field228_0x82bb;
    undefined field229_0x82bc;
    undefined field230_0x82bd;
    undefined field231_0x82be;
    undefined field232_0x82bf;
    undefined field233_0x82c0;
    undefined field234_0x82c1;
    undefined field235_0x82c2;
    undefined field236_0x82c3;
    undefined field237_0x82c4;
    undefined field238_0x82c5;
    undefined field239_0x82c6;
    undefined field240_0x82c7;
    undefined field241_0x82c8;
    undefined field242_0x82c9;
    undefined field243_0x82ca;
    undefined field244_0x82cb;
    undefined field245_0x82cc;
    undefined field246_0x82cd;
    undefined field247_0x82ce;
    undefined field248_0x82cf;
    undefined field249_0x82d0;
    undefined field250_0x82d1;
    undefined field251_0x82d2;
    undefined field252_0x82d3;
    undefined field253_0x82d4;
    undefined field254_0x82d5;
    undefined field255_0x82d6;
    undefined field256_0x82d7;
    undefined field257_0x82d8;
    undefined field258_0x82d9;
    undefined field259_0x82da;
    undefined field260_0x82db;
    undefined field261_0x82dc;
    undefined field262_0x82dd;
    undefined field263_0x82de;
    undefined field264_0x82df;
    undefined field265_0x82e0;
    undefined field266_0x82e1;
    undefined field267_0x82e2;
    undefined field268_0x82e3;
    undefined field269_0x82e4;
    undefined field270_0x82e5;
    undefined field271_0x82e6;
    undefined field272_0x82e7;
    undefined field273_0x82e8;
    undefined field274_0x82e9;
    undefined field275_0x82ea;
    undefined field276_0x82eb;
    undefined field277_0x82ec;
    undefined field278_0x82ed;
    undefined field279_0x82ee;
    undefined field280_0x82ef;
    undefined field281_0x82f0;
    undefined field282_0x82f1;
    undefined field283_0x82f2;
    undefined field284_0x82f3;
    undefined field285_0x82f4;
    undefined field286_0x82f5;
    undefined field287_0x82f6;
    undefined field288_0x82f7;
    undefined field289_0x82f8;
    undefined field290_0x82f9;
    undefined field291_0x82fa;
    undefined field292_0x82fb;
    undefined field293_0x82fc;
    undefined field294_0x82fd;
    undefined field295_0x82fe;
    undefined field296_0x82ff;
    undefined field297_0x8300;
    undefined field298_0x8301;
    undefined field299_0x8302;
    undefined field300_0x8303;
    undefined field301_0x8304;
    undefined field302_0x8305;
    undefined field303_0x8306;
    undefined field304_0x8307;
    undefined field305_0x8308;
    undefined field306_0x8309;
    undefined field307_0x830a;
    undefined field308_0x830b;
    undefined field309_0x830c;
    undefined field310_0x830d;
    undefined field311_0x830e;
    undefined field312_0x830f;
    undefined field313_0x8310;
    undefined field314_0x8311;
    undefined field315_0x8312;
    undefined field316_0x8313;
    undefined field317_0x8314;
    undefined field318_0x8315;
    undefined field319_0x8316;
    undefined field320_0x8317;
    undefined field321_0x8318;
    undefined field322_0x8319;
    undefined field323_0x831a;
    undefined field324_0x831b;
    undefined field325_0x831c;
    undefined field326_0x831d;
    undefined field327_0x831e;
    undefined field328_0x831f;
    undefined field329_0x8320;
    undefined field330_0x8321;
    undefined field331_0x8322;
    undefined field332_0x8323;
    undefined field333_0x8324;
    undefined field334_0x8325;
    undefined field335_0x8326;
    undefined field336_0x8327;
    undefined field337_0x8328;
    undefined field338_0x8329;
    undefined field339_0x832a;
    undefined field340_0x832b;
    undefined field341_0x832c;
    undefined field342_0x832d;
    undefined field343_0x832e;
    undefined field344_0x832f;
    undefined field345_0x8330;
    undefined field346_0x8331;
    undefined field347_0x8332;
    undefined field348_0x8333;
    undefined field349_0x8334;
    undefined field350_0x8335;
    undefined field351_0x8336;
    undefined field352_0x8337;
    undefined field353_0x8338;
    undefined field354_0x8339;
    undefined field355_0x833a;
    undefined field356_0x833b;
    undefined field357_0x833c;
    undefined field358_0x833d;
    undefined field359_0x833e;
    undefined field360_0x833f;
    undefined field361_0x8340;
    undefined field362_0x8341;
    undefined field363_0x8342;
    undefined field364_0x8343;
    undefined field365_0x8344;
    undefined field366_0x8345;
    undefined field367_0x8346;
    undefined field368_0x8347;
    undefined field369_0x8348;
    undefined field370_0x8349;
    undefined field371_0x834a;
    undefined field372_0x834b;
    undefined field373_0x834c;
    undefined field374_0x834d;
    undefined field375_0x834e;
    undefined field376_0x834f;
    undefined field377_0x8350;
    undefined field378_0x8351;
    undefined field379_0x8352;
    undefined field380_0x8353;
    undefined field381_0x8354;
    undefined field382_0x8355;
    undefined field383_0x8356;
    undefined field384_0x8357;
    undefined field385_0x8358;
    undefined field386_0x8359;
    undefined field387_0x835a;
    undefined field388_0x835b;
    undefined field389_0x835c;
    undefined field390_0x835d;
    undefined field391_0x835e;
    undefined field392_0x835f;
    undefined field393_0x8360;
    undefined field394_0x8361;
    undefined field395_0x8362;
    undefined field396_0x8363;
    undefined field397_0x8364;
    undefined field398_0x8365;
    undefined field399_0x8366;
    undefined field400_0x8367;
    undefined field401_0x8368;
    undefined field402_0x8369;
    undefined field403_0x836a;
    undefined field404_0x836b;
    undefined field405_0x836c;
    undefined field406_0x836d;
    undefined field407_0x836e;
    undefined field408_0x836f;
    undefined field409_0x8370;
    undefined field410_0x8371;
    undefined field411_0x8372;
    undefined field412_0x8373;
    undefined field413_0x8374;
    undefined field414_0x8375;
    undefined field415_0x8376;
    undefined field416_0x8377;
    undefined field417_0x8378;
    undefined field418_0x8379;
    undefined field419_0x837a;
    undefined field420_0x837b;
    undefined field421_0x837c;
    undefined field422_0x837d;
    undefined field423_0x837e;
    undefined field424_0x837f;
    undefined field425_0x8380;
    undefined field426_0x8381;
    undefined field427_0x8382;
    undefined field428_0x8383;
    undefined field429_0x8384;
    undefined field430_0x8385;
    undefined field431_0x8386;
    undefined field432_0x8387;
    undefined field433_0x8388;
    undefined field434_0x8389;
    undefined field435_0x838a;
    undefined field436_0x838b;
    undefined field437_0x838c;
    undefined field438_0x838d;
    undefined field439_0x838e;
    undefined field440_0x838f;
    undefined field441_0x8390;
    undefined field442_0x8391;
    undefined field443_0x8392;
    undefined field444_0x8393;
    undefined field445_0x8394;
    undefined field446_0x8395;
    undefined field447_0x8396;
    undefined field448_0x8397;
    undefined field449_0x8398;
    undefined field450_0x8399;
    undefined field451_0x839a;
    undefined field452_0x839b;
    undefined field453_0x839c;
    undefined field454_0x839d;
    undefined field455_0x839e;
    undefined field456_0x839f;
    undefined field457_0x83a0;
    undefined field458_0x83a1;
    undefined field459_0x83a2;
    undefined field460_0x83a3;
    undefined field461_0x83a4;
    undefined field462_0x83a5;
    undefined field463_0x83a6;
    undefined field464_0x83a7;
    undefined field465_0x83a8;
    undefined field466_0x83a9;
    undefined field467_0x83aa;
    undefined field468_0x83ab;
    undefined field469_0x83ac;
    undefined field470_0x83ad;
    undefined field471_0x83ae;
    undefined field472_0x83af;
    undefined field473_0x83b0;
    undefined field474_0x83b1;
    undefined field475_0x83b2;
    undefined field476_0x83b3;
    undefined field477_0x83b4;
    undefined field478_0x83b5;
    undefined field479_0x83b6;
    undefined field480_0x83b7;
    undefined field481_0x83b8;
    undefined field482_0x83b9;
    undefined field483_0x83ba;
    undefined field484_0x83bb;
    undefined field485_0x83bc;
    undefined field486_0x83bd;
    undefined field487_0x83be;
    undefined field488_0x83bf;
    undefined field489_0x83c0;
    undefined field490_0x83c1;
    undefined field491_0x83c2;
    undefined field492_0x83c3;
    undefined field493_0x83c4;
    undefined field494_0x83c5;
    undefined field495_0x83c6;
    undefined field496_0x83c7;
    undefined field497_0x83c8;
    undefined field498_0x83c9;
    undefined field499_0x83ca;
    undefined field500_0x83cb;
    undefined field501_0x83cc;
    undefined field502_0x83cd;
    undefined field503_0x83ce;
    undefined field504_0x83cf;
    undefined field505_0x83d0;
    undefined field506_0x83d1;
    undefined field507_0x83d2;
    undefined field508_0x83d3;
    undefined field509_0x83d4;
    undefined field510_0x83d5;
    undefined field511_0x83d6;
    undefined field512_0x83d7;
    undefined field513_0x83d8;
    undefined field514_0x83d9;
    undefined field515_0x83da;
    undefined field516_0x83db;
    undefined field517_0x83dc;
    undefined field518_0x83dd;
    undefined field519_0x83de;
    undefined field520_0x83df;
    undefined field521_0x83e0;
    undefined field522_0x83e1;
    undefined field523_0x83e2;
    undefined field524_0x83e3;
    undefined field525_0x83e4;
    undefined field526_0x83e5;
    undefined field527_0x83e6;
    undefined field528_0x83e7;
    undefined field529_0x83e8;
    undefined field530_0x83e9;
    undefined field531_0x83ea;
    undefined field532_0x83eb;
    undefined field533_0x83ec;
    undefined field534_0x83ed;
    undefined field535_0x83ee;
    undefined field536_0x83ef;
    undefined field537_0x83f0;
    undefined field538_0x83f1;
    undefined field539_0x83f2;
    undefined field540_0x83f3;
    undefined field541_0x83f4;
    undefined field542_0x83f5;
    undefined field543_0x83f6;
    undefined field544_0x83f7;
    undefined field545_0x83f8;
    undefined field546_0x83f9;
    undefined field547_0x83fa;
    undefined field548_0x83fb;
    undefined field549_0x83fc;
    undefined field550_0x83fd;
    undefined field551_0x83fe;
    undefined field552_0x83ff;
    undefined field553_0x8400;
    undefined field554_0x8401;
    undefined field555_0x8402;
    undefined field556_0x8403;
    undefined field557_0x8404;
    undefined field558_0x8405;
    undefined field559_0x8406;
    undefined field560_0x8407;
    undefined field561_0x8408;
    undefined field562_0x8409;
    undefined field563_0x840a;
    undefined field564_0x840b;
    undefined field565_0x840c;
    undefined field566_0x840d;
    undefined field567_0x840e;
    undefined field568_0x840f;
    undefined field569_0x8410;
    undefined field570_0x8411;
    undefined field571_0x8412;
    undefined field572_0x8413;
    undefined field573_0x8414;
    undefined field574_0x8415;
    undefined field575_0x8416;
    undefined field576_0x8417;
    undefined field577_0x8418;
    undefined field578_0x8419;
    undefined field579_0x841a;
    undefined field580_0x841b;
    undefined field581_0x841c;
    undefined field582_0x841d;
    undefined field583_0x841e;
    undefined field584_0x841f;
    undefined field585_0x8420;
    undefined field586_0x8421;
    undefined field587_0x8422;
    undefined field588_0x8423;
    undefined field589_0x8424;
    undefined field590_0x8425;
    undefined field591_0x8426;
    undefined field592_0x8427;
    undefined field593_0x8428;
    undefined field594_0x8429;
    undefined field595_0x842a;
    undefined field596_0x842b;
    undefined field597_0x842c;
    undefined field598_0x842d;
    undefined field599_0x842e;
    undefined field600_0x842f;
    undefined field601_0x8430;
    undefined field602_0x8431;
    undefined field603_0x8432;
    undefined field604_0x8433;
    undefined field605_0x8434;
    undefined field606_0x8435;
    undefined field607_0x8436;
    undefined field608_0x8437;
    undefined field609_0x8438;
    undefined field610_0x8439;
    undefined field611_0x843a;
    undefined field612_0x843b;
    undefined field613_0x843c;
    undefined field614_0x843d;
    undefined field615_0x843e;
    undefined field616_0x843f;
    undefined field617_0x8440;
    undefined field618_0x8441;
    undefined field619_0x8442;
    undefined field620_0x8443;
    undefined field621_0x8444;
    undefined field622_0x8445;
    undefined field623_0x8446;
    undefined field624_0x8447;
    undefined field625_0x8448;
    undefined field626_0x8449;
    undefined field627_0x844a;
    undefined field628_0x844b;
    undefined field629_0x844c;
    undefined field630_0x844d;
    undefined field631_0x844e;
    undefined field632_0x844f;
    undefined field633_0x8450;
    undefined field634_0x8451;
    undefined field635_0x8452;
    undefined field636_0x8453;
    undefined field637_0x8454;
    undefined field638_0x8455;
    undefined field639_0x8456;
    undefined field640_0x8457;
    undefined field641_0x8458;
    undefined field642_0x8459;
    undefined field643_0x845a;
    undefined field644_0x845b;
    undefined field645_0x845c;
    undefined field646_0x845d;
    undefined field647_0x845e;
    undefined field648_0x845f;
    undefined field649_0x8460;
    undefined field650_0x8461;
    undefined field651_0x8462;
    undefined field652_0x8463;
    undefined field653_0x8464;
    undefined field654_0x8465;
    undefined field655_0x8466;
    undefined field656_0x8467;
    undefined field657_0x8468;
    undefined field658_0x8469;
    undefined field659_0x846a;
    undefined field660_0x846b;
    undefined field661_0x846c;
    undefined field662_0x846d;
    undefined field663_0x846e;
    undefined field664_0x846f;
    undefined field665_0x8470;
    undefined field666_0x8471;
    undefined field667_0x8472;
    undefined field668_0x8473;
    undefined field669_0x8474;
    undefined field670_0x8475;
    undefined field671_0x8476;
    undefined field672_0x8477;
    undefined field673_0x8478;
    undefined field674_0x8479;
    undefined field675_0x847a;
    undefined field676_0x847b;
    undefined field677_0x847c;
    undefined field678_0x847d;
    undefined field679_0x847e;
    undefined field680_0x847f;
    undefined field681_0x8480;
    undefined field682_0x8481;
    undefined field683_0x8482;
    undefined field684_0x8483;
    undefined field685_0x8484;
    undefined field686_0x8485;
    undefined field687_0x8486;
    undefined field688_0x8487;
    undefined field689_0x8488;
    undefined field690_0x8489;
    undefined field691_0x848a;
    undefined field692_0x848b;
    undefined field693_0x848c;
    undefined field694_0x848d;
    undefined field695_0x848e;
    undefined field696_0x848f;
    undefined field697_0x8490;
    undefined field698_0x8491;
    undefined field699_0x8492;
    undefined field700_0x8493;
    undefined field701_0x8494;
    undefined field702_0x8495;
    undefined field703_0x8496;
    undefined field704_0x8497;
    undefined field705_0x8498;
    undefined field706_0x8499;
    undefined field707_0x849a;
    undefined field708_0x849b;
    undefined field709_0x849c;
    undefined field710_0x849d;
    undefined field711_0x849e;
    undefined field712_0x849f;
    undefined field713_0x84a0;
    undefined field714_0x84a1;
    undefined field715_0x84a2;
    undefined field716_0x84a3;
    undefined field717_0x84a4;
    undefined field718_0x84a5;
    undefined field719_0x84a6;
    undefined field720_0x84a7;
    undefined field721_0x84a8;
    undefined field722_0x84a9;
    undefined field723_0x84aa;
    undefined field724_0x84ab;
    undefined field725_0x84ac;
    undefined field726_0x84ad;
    undefined field727_0x84ae;
    undefined field728_0x84af;
    undefined field729_0x84b0;
    undefined field730_0x84b1;
    undefined field731_0x84b2;
    undefined field732_0x84b3;
    undefined field733_0x84b4;
    undefined field734_0x84b5;
    undefined field735_0x84b6;
    undefined field736_0x84b7;
    undefined field737_0x84b8;
    undefined field738_0x84b9;
    undefined field739_0x84ba;
    undefined field740_0x84bb;
    undefined field741_0x84bc;
    undefined field742_0x84bd;
    undefined field743_0x84be;
    undefined field744_0x84bf;
    undefined field745_0x84c0;
    undefined field746_0x84c1;
    undefined field747_0x84c2;
    undefined field748_0x84c3;
    undefined field749_0x84c4;
    undefined field750_0x84c5;
    undefined field751_0x84c6;
    undefined field752_0x84c7;
    undefined field753_0x84c8;
    undefined field754_0x84c9;
    undefined field755_0x84ca;
    undefined field756_0x84cb;
    undefined field757_0x84cc;
    undefined field758_0x84cd;
    undefined field759_0x84ce;
    undefined field760_0x84cf;
    undefined field761_0x84d0;
    undefined field762_0x84d1;
    undefined field763_0x84d2;
    undefined field764_0x84d3;
    undefined field765_0x84d4;
    undefined field766_0x84d5;
    undefined field767_0x84d6;
    undefined field768_0x84d7;
    undefined field769_0x84d8;
    undefined field770_0x84d9;
    undefined field771_0x84da;
    undefined field772_0x84db;
    undefined field773_0x84dc;
    undefined field774_0x84dd;
    undefined field775_0x84de;
    undefined field776_0x84df;
    undefined field777_0x84e0;
    undefined field778_0x84e1;
    undefined field779_0x84e2;
    undefined field780_0x84e3;
    undefined field781_0x84e4;
    undefined field782_0x84e5;
    undefined field783_0x84e6;
    undefined field784_0x84e7;
    undefined field785_0x84e8;
    undefined field786_0x84e9;
    undefined field787_0x84ea;
    undefined field788_0x84eb;
    undefined field789_0x84ec;
    undefined field790_0x84ed;
    undefined field791_0x84ee;
    undefined field792_0x84ef;
    undefined field793_0x84f0;
    undefined field794_0x84f1;
    undefined field795_0x84f2;
    undefined field796_0x84f3;
    undefined field797_0x84f4;
    undefined field798_0x84f5;
    undefined field799_0x84f6;
    undefined field800_0x84f7;
    undefined field801_0x84f8;
    undefined field802_0x84f9;
    undefined field803_0x84fa;
    undefined field804_0x84fb;
    undefined field805_0x84fc;
    undefined field806_0x84fd;
    undefined field807_0x84fe;
    undefined field808_0x84ff;
    undefined field809_0x8500;
    undefined field810_0x8501;
    undefined field811_0x8502;
    undefined field812_0x8503;
    undefined field813_0x8504;
    undefined field814_0x8505;
    undefined field815_0x8506;
    undefined field816_0x8507;
    undefined field817_0x8508;
    undefined field818_0x8509;
    undefined field819_0x850a;
    undefined field820_0x850b;
    undefined field821_0x850c;
    undefined field822_0x850d;
    undefined field823_0x850e;
    undefined field824_0x850f;
    undefined field825_0x8510;
    undefined field826_0x8511;
    undefined field827_0x8512;
    undefined field828_0x8513;
    undefined field829_0x8514;
    undefined field830_0x8515;
    undefined field831_0x8516;
    undefined field832_0x8517;
    undefined field833_0x8518;
    undefined field834_0x8519;
    undefined field835_0x851a;
    undefined field836_0x851b;
    undefined field837_0x851c;
    undefined field838_0x851d;
    undefined field839_0x851e;
    undefined field840_0x851f;
    undefined field841_0x8520;
    undefined field842_0x8521;
    undefined field843_0x8522;
    undefined field844_0x8523;
    undefined field845_0x8524;
    undefined field846_0x8525;
    undefined field847_0x8526;
    undefined field848_0x8527;
    undefined field849_0x8528;
    undefined field850_0x8529;
    undefined field851_0x852a;
    undefined field852_0x852b;
    undefined field853_0x852c;
    undefined field854_0x852d;
    undefined field855_0x852e;
    undefined field856_0x852f;
    undefined field857_0x8530;
    undefined field858_0x8531;
    undefined field859_0x8532;
    undefined field860_0x8533;
    undefined field861_0x8534;
    undefined field862_0x8535;
    undefined field863_0x8536;
    undefined field864_0x8537;
    undefined field865_0x8538;
    undefined field866_0x8539;
    undefined field867_0x853a;
    undefined field868_0x853b;
    undefined field869_0x853c;
    undefined field870_0x853d;
    undefined field871_0x853e;
    undefined field872_0x853f;
    undefined field873_0x8540;
    undefined field874_0x8541;
    undefined field875_0x8542;
    undefined field876_0x8543;
    undefined field877_0x8544;
    undefined field878_0x8545;
    undefined field879_0x8546;
    undefined field880_0x8547;
    undefined field881_0x8548;
    undefined field882_0x8549;
    undefined field883_0x854a;
    undefined field884_0x854b;
    undefined field885_0x854c;
    undefined field886_0x854d;
    undefined field887_0x854e;
    undefined field888_0x854f;
    undefined field889_0x8550;
    undefined field890_0x8551;
    undefined field891_0x8552;
    undefined field892_0x8553;
    undefined field893_0x8554;
    undefined field894_0x8555;
    undefined field895_0x8556;
    undefined field896_0x8557;
    undefined field897_0x8558;
    undefined field898_0x8559;
    undefined field899_0x855a;
    undefined field900_0x855b;
    undefined field901_0x855c;
    undefined field902_0x855d;
    undefined field903_0x855e;
    undefined field904_0x855f;
    undefined field905_0x8560;
    undefined field906_0x8561;
    undefined field907_0x8562;
    undefined field908_0x8563;
    undefined field909_0x8564;
    undefined field910_0x8565;
    undefined field911_0x8566;
    undefined field912_0x8567;
    undefined field913_0x8568;
    undefined field914_0x8569;
    undefined field915_0x856a;
    undefined field916_0x856b;
    undefined field917_0x856c;
    undefined field918_0x856d;
    undefined field919_0x856e;
    undefined field920_0x856f;
    undefined field921_0x8570;
    undefined field922_0x8571;
    undefined field923_0x8572;
    undefined field924_0x8573;
    undefined field925_0x8574;
    undefined field926_0x8575;
    undefined field927_0x8576;
    undefined field928_0x8577;
    undefined field929_0x8578;
    undefined field930_0x8579;
    undefined field931_0x857a;
    undefined field932_0x857b;
    undefined field933_0x857c;
    undefined field934_0x857d;
    undefined field935_0x857e;
    undefined field936_0x857f;
    undefined field937_0x8580;
    undefined field938_0x8581;
    undefined field939_0x8582;
    undefined field940_0x8583;
    undefined field941_0x8584;
    undefined field942_0x8585;
    undefined field943_0x8586;
    undefined field944_0x8587;
    undefined field945_0x8588;
    undefined field946_0x8589;
    undefined field947_0x858a;
    undefined field948_0x858b;
    undefined field949_0x858c;
    undefined field950_0x858d;
    undefined field951_0x858e;
    undefined field952_0x858f;
    undefined field953_0x8590;
    undefined field954_0x8591;
    undefined field955_0x8592;
    undefined field956_0x8593;
    undefined field957_0x8594;
    undefined field958_0x8595;
    undefined field959_0x8596;
    undefined field960_0x8597;
    undefined field961_0x8598;
    undefined field962_0x8599;
    undefined field963_0x859a;
    undefined field964_0x859b;
    undefined field965_0x859c;
    undefined field966_0x859d;
    undefined field967_0x859e;
    undefined field968_0x859f;
    undefined field969_0x85a0;
    undefined field970_0x85a1;
    undefined field971_0x85a2;
    undefined field972_0x85a3;
    undefined field973_0x85a4;
    undefined field974_0x85a5;
    undefined field975_0x85a6;
    undefined field976_0x85a7;
    undefined field977_0x85a8;
    undefined field978_0x85a9;
    undefined field979_0x85aa;
    undefined field980_0x85ab;
    undefined field981_0x85ac;
    undefined field982_0x85ad;
    undefined field983_0x85ae;
    undefined field984_0x85af;
    undefined field985_0x85b0;
    undefined field986_0x85b1;
    undefined field987_0x85b2;
    undefined field988_0x85b3;
    undefined field989_0x85b4;
    undefined field990_0x85b5;
    undefined field991_0x85b6;
    undefined field992_0x85b7;
    undefined field993_0x85b8;
    undefined field994_0x85b9;
    undefined field995_0x85ba;
    undefined field996_0x85bb;
    undefined field997_0x85bc;
    undefined field998_0x85bd;
    undefined field999_0x85be;
    undefined field1000_0x85bf;
    undefined field1001_0x85c0;
    undefined field1002_0x85c1;
    undefined field1003_0x85c2;
    undefined field1004_0x85c3;
    undefined field1005_0x85c4;
    undefined field1006_0x85c5;
    undefined field1007_0x85c6;
    undefined field1008_0x85c7;
    undefined field1009_0x85c8;
    undefined field1010_0x85c9;
    undefined field1011_0x85ca;
    undefined field1012_0x85cb;
    undefined field1013_0x85cc;
    undefined field1014_0x85cd;
    undefined field1015_0x85ce;
    undefined field1016_0x85cf;
    undefined field1017_0x85d0;
    undefined field1018_0x85d1;
    undefined field1019_0x85d2;
    undefined field1020_0x85d3;
    undefined field1021_0x85d4;
    undefined field1022_0x85d5;
    undefined field1023_0x85d6;
    undefined field1024_0x85d7;
    undefined field1025_0x85d8;
    undefined field1026_0x85d9;
    undefined field1027_0x85da;
    undefined field1028_0x85db;
    undefined field1029_0x85dc;
    undefined field1030_0x85dd;
    undefined field1031_0x85de;
    undefined field1032_0x85df;
    undefined field1033_0x85e0;
    undefined field1034_0x85e1;
    undefined field1035_0x85e2;
    undefined field1036_0x85e3;
    undefined field1037_0x85e4;
    undefined field1038_0x85e5;
    undefined field1039_0x85e6;
    undefined field1040_0x85e7;
    undefined field1041_0x85e8;
    undefined field1042_0x85e9;
    undefined field1043_0x85ea;
    undefined field1044_0x85eb;
    undefined field1045_0x85ec;
    undefined field1046_0x85ed;
    undefined field1047_0x85ee;
    undefined field1048_0x85ef;
    undefined field1049_0x85f0;
    undefined field1050_0x85f1;
    undefined field1051_0x85f2;
    undefined field1052_0x85f3;
    undefined field1053_0x85f4;
    undefined field1054_0x85f5;
    undefined field1055_0x85f6;
    undefined field1056_0x85f7;
    undefined field1057_0x85f8;
    undefined field1058_0x85f9;
    undefined field1059_0x85fa;
    undefined field1060_0x85fb;
    undefined field1061_0x85fc;
    undefined field1062_0x85fd;
    undefined field1063_0x85fe;
    undefined field1064_0x85ff;
    undefined field1065_0x8600;
    undefined field1066_0x8601;
    undefined field1067_0x8602;
    undefined field1068_0x8603;
    undefined field1069_0x8604;
    undefined field1070_0x8605;
    undefined field1071_0x8606;
    undefined field1072_0x8607;
    undefined field1073_0x8608;
    undefined field1074_0x8609;
    undefined field1075_0x860a;
    undefined field1076_0x860b;
    undefined field1077_0x860c;
    undefined field1078_0x860d;
    undefined field1079_0x860e;
    undefined field1080_0x860f;
    undefined field1081_0x8610;
    undefined field1082_0x8611;
    undefined field1083_0x8612;
    undefined field1084_0x8613;
    undefined field1085_0x8614;
    undefined field1086_0x8615;
    undefined field1087_0x8616;
    undefined field1088_0x8617;
    undefined field1089_0x8618;
    undefined field1090_0x8619;
    undefined field1091_0x861a;
    undefined field1092_0x861b;
    undefined field1093_0x861c;
    undefined field1094_0x861d;
    undefined field1095_0x861e;
    undefined field1096_0x861f;
    undefined field1097_0x8620;
    undefined field1098_0x8621;
    undefined field1099_0x8622;
    undefined field1100_0x8623;
    undefined field1101_0x8624;
    undefined field1102_0x8625;
    undefined field1103_0x8626;
    undefined field1104_0x8627;
    undefined field1105_0x8628;
    undefined field1106_0x8629;
    undefined field1107_0x862a;
    undefined field1108_0x862b;
    undefined field1109_0x862c;
    undefined field1110_0x862d;
    undefined field1111_0x862e;
    undefined field1112_0x862f;
    undefined field1113_0x8630;
    undefined field1114_0x8631;
    undefined field1115_0x8632;
    undefined field1116_0x8633;
    undefined field1117_0x8634;
    undefined field1118_0x8635;
    undefined field1119_0x8636;
    undefined field1120_0x8637;
    undefined field1121_0x8638;
    undefined field1122_0x8639;
    undefined field1123_0x863a;
    undefined field1124_0x863b;
    undefined field1125_0x863c;
    undefined field1126_0x863d;
    undefined field1127_0x863e;
    undefined field1128_0x863f;
    undefined field1129_0x8640;
    undefined field1130_0x8641;
    undefined field1131_0x8642;
    undefined field1132_0x8643;
    undefined field1133_0x8644;
    undefined field1134_0x8645;
    undefined field1135_0x8646;
    undefined field1136_0x8647;
    undefined field1137_0x8648;
    undefined field1138_0x8649;
    undefined field1139_0x864a;
    undefined field1140_0x864b;
    undefined field1141_0x864c;
    undefined field1142_0x864d;
    undefined field1143_0x864e;
    undefined field1144_0x864f;
    undefined field1145_0x8650;
    undefined field1146_0x8651;
    undefined field1147_0x8652;
    undefined field1148_0x8653;
    undefined field1149_0x8654;
    undefined field1150_0x8655;
    undefined field1151_0x8656;
    undefined field1152_0x8657;
    undefined field1153_0x8658;
    undefined field1154_0x8659;
    undefined field1155_0x865a;
    undefined field1156_0x865b;
    undefined field1157_0x865c;
    undefined field1158_0x865d;
    undefined field1159_0x865e;
    undefined field1160_0x865f;
    undefined field1161_0x8660;
    undefined field1162_0x8661;
    undefined field1163_0x8662;
    undefined field1164_0x8663;
    undefined field1165_0x8664;
    undefined field1166_0x8665;
    undefined field1167_0x8666;
    undefined field1168_0x8667;
    undefined field1169_0x8668;
    undefined field1170_0x8669;
    undefined field1171_0x866a;
    undefined field1172_0x866b;
    undefined field1173_0x866c;
    undefined field1174_0x866d;
    undefined field1175_0x866e;
    undefined field1176_0x866f;
    undefined field1177_0x8670;
    undefined field1178_0x8671;
    undefined field1179_0x8672;
    undefined field1180_0x8673;
    undefined field1181_0x8674;
    undefined field1182_0x8675;
    undefined field1183_0x8676;
    undefined field1184_0x8677;
    undefined field1185_0x8678;
    undefined field1186_0x8679;
    undefined field1187_0x867a;
    undefined field1188_0x867b;
    undefined field1189_0x867c;
    undefined field1190_0x867d;
    undefined field1191_0x867e;
    undefined field1192_0x867f;
    undefined field1193_0x8680;
    undefined field1194_0x8681;
    undefined field1195_0x8682;
    undefined field1196_0x8683;
    undefined field1197_0x8684;
    undefined field1198_0x8685;
    undefined field1199_0x8686;
    undefined field1200_0x8687;
    undefined field1201_0x8688;
    undefined field1202_0x8689;
    undefined field1203_0x868a;
    undefined field1204_0x868b;
    undefined field1205_0x868c;
    undefined field1206_0x868d;
    undefined field1207_0x868e;
    undefined field1208_0x868f;
    undefined field1209_0x8690;
    undefined field1210_0x8691;
    undefined field1211_0x8692;
    undefined field1212_0x8693;
    undefined field1213_0x8694;
    undefined field1214_0x8695;
    undefined field1215_0x8696;
    undefined field1216_0x8697;
    undefined field1217_0x8698;
    undefined field1218_0x8699;
    undefined field1219_0x869a;
    undefined field1220_0x869b;
    undefined field1221_0x869c;
    undefined field1222_0x869d;
    undefined field1223_0x869e;
    undefined field1224_0x869f;
    undefined field1225_0x86a0;
    undefined field1226_0x86a1;
    undefined field1227_0x86a2;
    undefined field1228_0x86a3;
    undefined field1229_0x86a4;
    undefined field1230_0x86a5;
    undefined field1231_0x86a6;
    undefined field1232_0x86a7;
    undefined field1233_0x86a8;
    undefined field1234_0x86a9;
    undefined field1235_0x86aa;
    undefined field1236_0x86ab;
    undefined field1237_0x86ac;
    undefined field1238_0x86ad;
    undefined field1239_0x86ae;
    undefined field1240_0x86af;
    undefined field1241_0x86b0;
    undefined field1242_0x86b1;
    undefined field1243_0x86b2;
    undefined field1244_0x86b3;
    undefined field1245_0x86b4;
    undefined field1246_0x86b5;
    undefined field1247_0x86b6;
    undefined field1248_0x86b7;
    undefined field1249_0x86b8;
    undefined field1250_0x86b9;
    undefined field1251_0x86ba;
    undefined field1252_0x86bb;
    undefined field1253_0x86bc;
    undefined field1254_0x86bd;
    undefined field1255_0x86be;
    undefined field1256_0x86bf;
    undefined field1257_0x86c0;
    undefined field1258_0x86c1;
    undefined field1259_0x86c2;
    undefined field1260_0x86c3;
    undefined field1261_0x86c4;
    undefined field1262_0x86c5;
    undefined field1263_0x86c6;
    undefined field1264_0x86c7;
    undefined field1265_0x86c8;
    undefined field1266_0x86c9;
    undefined field1267_0x86ca;
    undefined field1268_0x86cb;
    undefined field1269_0x86cc;
    undefined field1270_0x86cd;
    undefined field1271_0x86ce;
    undefined field1272_0x86cf;
    undefined field1273_0x86d0;
    undefined field1274_0x86d1;
    undefined field1275_0x86d2;
    undefined field1276_0x86d3;
    undefined field1277_0x86d4;
    undefined field1278_0x86d5;
    undefined field1279_0x86d6;
    undefined field1280_0x86d7;
    undefined field1281_0x86d8;
    undefined field1282_0x86d9;
    undefined field1283_0x86da;
    undefined field1284_0x86db;
    undefined field1285_0x86dc;
    undefined field1286_0x86dd;
    undefined field1287_0x86de;
    undefined field1288_0x86df;
    undefined field1289_0x86e0;
    undefined field1290_0x86e1;
    undefined field1291_0x86e2;
    undefined field1292_0x86e3;
    undefined field1293_0x86e4;
    undefined field1294_0x86e5;
    undefined field1295_0x86e6;
    undefined field1296_0x86e7;
    undefined field1297_0x86e8;
    undefined field1298_0x86e9;
    undefined field1299_0x86ea;
    undefined field1300_0x86eb;
    undefined field1301_0x86ec;
    undefined field1302_0x86ed;
    undefined field1303_0x86ee;
    undefined field1304_0x86ef;
    undefined field1305_0x86f0;
    undefined field1306_0x86f1;
    undefined field1307_0x86f2;
    undefined field1308_0x86f3;
    undefined field1309_0x86f4;
    undefined field1310_0x86f5;
    undefined field1311_0x86f6;
    undefined field1312_0x86f7;
    undefined field1313_0x86f8;
    undefined field1314_0x86f9;
    undefined field1315_0x86fa;
    undefined field1316_0x86fb;
    undefined field1317_0x86fc;
    undefined field1318_0x86fd;
    undefined field1319_0x86fe;
    undefined field1320_0x86ff;
    undefined field1321_0x8700;
    undefined field1322_0x8701;
    undefined field1323_0x8702;
    undefined field1324_0x8703;
    undefined field1325_0x8704;
    undefined field1326_0x8705;
    undefined field1327_0x8706;
    undefined field1328_0x8707;
    undefined field1329_0x8708;
    undefined field1330_0x8709;
    undefined field1331_0x870a;
    undefined field1332_0x870b;
    undefined field1333_0x870c;
    undefined field1334_0x870d;
    undefined field1335_0x870e;
    undefined field1336_0x870f;
    undefined field1337_0x8710;
    undefined field1338_0x8711;
    undefined field1339_0x8712;
    undefined field1340_0x8713;
    undefined field1341_0x8714;
    undefined field1342_0x8715;
    undefined field1343_0x8716;
    undefined field1344_0x8717;
    undefined field1345_0x8718;
    undefined field1346_0x8719;
    undefined field1347_0x871a;
    undefined field1348_0x871b;
    undefined field1349_0x871c;
    undefined field1350_0x871d;
    undefined field1351_0x871e;
    undefined field1352_0x871f;
    undefined field1353_0x8720;
    undefined field1354_0x8721;
    undefined field1355_0x8722;
    undefined field1356_0x8723;
    undefined field1357_0x8724;
    undefined field1358_0x8725;
    undefined field1359_0x8726;
    undefined field1360_0x8727;
    undefined field1361_0x8728;
    undefined field1362_0x8729;
    undefined field1363_0x872a;
    undefined field1364_0x872b;
    undefined field1365_0x872c;
    undefined field1366_0x872d;
    undefined field1367_0x872e;
    undefined field1368_0x872f;
    undefined field1369_0x8730;
    undefined field1370_0x8731;
    undefined field1371_0x8732;
    undefined field1372_0x8733;
    undefined field1373_0x8734;
    undefined field1374_0x8735;
    undefined field1375_0x8736;
    undefined field1376_0x8737;
    undefined field1377_0x8738;
    undefined field1378_0x8739;
    undefined field1379_0x873a;
    undefined field1380_0x873b;
    undefined field1381_0x873c;
    undefined field1382_0x873d;
    undefined field1383_0x873e;
    undefined field1384_0x873f;
    undefined field1385_0x8740;
    undefined field1386_0x8741;
    undefined field1387_0x8742;
    undefined field1388_0x8743;
    undefined field1389_0x8744;
    undefined field1390_0x8745;
    undefined field1391_0x8746;
    undefined field1392_0x8747;
    undefined field1393_0x8748;
    undefined field1394_0x8749;
    undefined field1395_0x874a;
    undefined field1396_0x874b;
    undefined field1397_0x874c;
    undefined field1398_0x874d;
    undefined field1399_0x874e;
    undefined field1400_0x874f;
    undefined field1401_0x8750;
    undefined field1402_0x8751;
    undefined field1403_0x8752;
    undefined field1404_0x8753;
    undefined field1405_0x8754;
    undefined field1406_0x8755;
    undefined field1407_0x8756;
    undefined field1408_0x8757;
    undefined field1409_0x8758;
    undefined field1410_0x8759;
    undefined field1411_0x875a;
    undefined field1412_0x875b;
    undefined field1413_0x875c;
    undefined field1414_0x875d;
    undefined field1415_0x875e;
    undefined field1416_0x875f;
    undefined field1417_0x8760;
    undefined field1418_0x8761;
    undefined field1419_0x8762;
    undefined field1420_0x8763;
    undefined field1421_0x8764;
    undefined field1422_0x8765;
    undefined field1423_0x8766;
    undefined field1424_0x8767;
    undefined field1425_0x8768;
    undefined field1426_0x8769;
    undefined field1427_0x876a;
    undefined field1428_0x876b;
    undefined field1429_0x876c;
    undefined field1430_0x876d;
    undefined field1431_0x876e;
    undefined field1432_0x876f;
    undefined field1433_0x8770;
    undefined field1434_0x8771;
    undefined field1435_0x8772;
    undefined field1436_0x8773;
    undefined field1437_0x8774;
    undefined field1438_0x8775;
    undefined field1439_0x8776;
    undefined field1440_0x8777;
    undefined field1441_0x8778;
    undefined field1442_0x8779;
    undefined field1443_0x877a;
    undefined field1444_0x877b;
    undefined field1445_0x877c;
    undefined field1446_0x877d;
    undefined field1447_0x877e;
    undefined field1448_0x877f;
    undefined field1449_0x8780;
    undefined field1450_0x8781;
    undefined field1451_0x8782;
    undefined field1452_0x8783;
    undefined field1453_0x8784;
    undefined field1454_0x8785;
    undefined field1455_0x8786;
    undefined field1456_0x8787;
    undefined field1457_0x8788;
    undefined field1458_0x8789;
    undefined field1459_0x878a;
    undefined field1460_0x878b;
    undefined field1461_0x878c;
    undefined field1462_0x878d;
    undefined field1463_0x878e;
    undefined field1464_0x878f;
    undefined field1465_0x8790;
    undefined field1466_0x8791;
    undefined field1467_0x8792;
    undefined field1468_0x8793;
    undefined field1469_0x8794;
    undefined field1470_0x8795;
    undefined field1471_0x8796;
    undefined field1472_0x8797;
    undefined field1473_0x8798;
    undefined field1474_0x8799;
    undefined field1475_0x879a;
    undefined field1476_0x879b;
    undefined field1477_0x879c;
    undefined field1478_0x879d;
    undefined field1479_0x879e;
    undefined field1480_0x879f;
    undefined field1481_0x87a0;
    undefined field1482_0x87a1;
    undefined field1483_0x87a2;
    undefined field1484_0x87a3;
    undefined field1485_0x87a4;
    undefined field1486_0x87a5;
    undefined field1487_0x87a6;
    undefined field1488_0x87a7;
    undefined field1489_0x87a8;
    undefined field1490_0x87a9;
    undefined field1491_0x87aa;
    undefined field1492_0x87ab;
    undefined field1493_0x87ac;
    undefined field1494_0x87ad;
    undefined field1495_0x87ae;
    undefined field1496_0x87af;
    undefined field1497_0x87b0;
    undefined field1498_0x87b1;
    undefined field1499_0x87b2;
    undefined field1500_0x87b3;
    undefined field1501_0x87b4;
    undefined field1502_0x87b5;
    undefined field1503_0x87b6;
    undefined field1504_0x87b7;
    undefined field1505_0x87b8;
    undefined field1506_0x87b9;
    undefined field1507_0x87ba;
    undefined field1508_0x87bb;
    undefined field1509_0x87bc;
    undefined field1510_0x87bd;
    undefined field1511_0x87be;
    undefined field1512_0x87bf;
    undefined field1513_0x87c0;
    undefined field1514_0x87c1;
    undefined field1515_0x87c2;
    undefined field1516_0x87c3;
    undefined field1517_0x87c4;
    undefined field1518_0x87c5;
    undefined field1519_0x87c6;
    undefined field1520_0x87c7;
    undefined field1521_0x87c8;
    undefined field1522_0x87c9;
    undefined field1523_0x87ca;
    undefined field1524_0x87cb;
    undefined field1525_0x87cc;
    undefined field1526_0x87cd;
    undefined field1527_0x87ce;
    undefined field1528_0x87cf;
    undefined field1529_0x87d0;
    undefined field1530_0x87d1;
    undefined field1531_0x87d2;
    undefined field1532_0x87d3;
    undefined field1533_0x87d4;
    undefined field1534_0x87d5;
    undefined field1535_0x87d6;
    undefined field1536_0x87d7;
    undefined field1537_0x87d8;
    undefined field1538_0x87d9;
    undefined field1539_0x87da;
    undefined field1540_0x87db;
    undefined field1541_0x87dc;
    undefined field1542_0x87dd;
    undefined field1543_0x87de;
    undefined field1544_0x87df;
    undefined field1545_0x87e0;
    undefined field1546_0x87e1;
    undefined field1547_0x87e2;
    undefined field1548_0x87e3;
    undefined field1549_0x87e4;
    undefined field1550_0x87e5;
    undefined field1551_0x87e6;
    undefined field1552_0x87e7;
    undefined field1553_0x87e8;
    undefined field1554_0x87e9;
    undefined field1555_0x87ea;
    undefined field1556_0x87eb;
    undefined field1557_0x87ec;
    undefined field1558_0x87ed;
    undefined field1559_0x87ee;
    undefined field1560_0x87ef;
    undefined field1561_0x87f0;
    undefined field1562_0x87f1;
    undefined field1563_0x87f2;
    undefined field1564_0x87f3;
    undefined field1565_0x87f4;
    undefined field1566_0x87f5;
    undefined field1567_0x87f6;
    undefined field1568_0x87f7;
    undefined field1569_0x87f8;
    undefined field1570_0x87f9;
    undefined field1571_0x87fa;
    undefined field1572_0x87fb;
    undefined field1573_0x87fc;
    undefined field1574_0x87fd;
    undefined field1575_0x87fe;
    undefined field1576_0x87ff;
    undefined field1577_0x8800;
    undefined field1578_0x8801;
    undefined field1579_0x8802;
    undefined field1580_0x8803;
    undefined field1581_0x8804;
    undefined field1582_0x8805;
    undefined field1583_0x8806;
    undefined field1584_0x8807;
    undefined field1585_0x8808;
    undefined field1586_0x8809;
    undefined field1587_0x880a;
    undefined field1588_0x880b;
    undefined field1589_0x880c;
    undefined field1590_0x880d;
    undefined field1591_0x880e;
    undefined field1592_0x880f;
    undefined field1593_0x8810;
    undefined field1594_0x8811;
    undefined field1595_0x8812;
    undefined field1596_0x8813;
    undefined field1597_0x8814;
    undefined field1598_0x8815;
    undefined field1599_0x8816;
    undefined field1600_0x8817;
    undefined field1601_0x8818;
    undefined field1602_0x8819;
    undefined field1603_0x881a;
    undefined field1604_0x881b;
    undefined field1605_0x881c;
    undefined field1606_0x881d;
    undefined field1607_0x881e;
    undefined field1608_0x881f;
    undefined field1609_0x8820;
    undefined field1610_0x8821;
    undefined field1611_0x8822;
    undefined field1612_0x8823;
    undefined field1613_0x8824;
    undefined field1614_0x8825;
    undefined field1615_0x8826;
    undefined field1616_0x8827;
    undefined field1617_0x8828;
    undefined field1618_0x8829;
    undefined field1619_0x882a;
    undefined field1620_0x882b;
    undefined field1621_0x882c;
    undefined field1622_0x882d;
    undefined field1623_0x882e;
    undefined field1624_0x882f;
    undefined field1625_0x8830;
    undefined field1626_0x8831;
    undefined field1627_0x8832;
    undefined field1628_0x8833;
    undefined field1629_0x8834;
    undefined field1630_0x8835;
    undefined field1631_0x8836;
    undefined field1632_0x8837;
    undefined field1633_0x8838;
    undefined field1634_0x8839;
    undefined field1635_0x883a;
    undefined field1636_0x883b;
    undefined field1637_0x883c;
    undefined field1638_0x883d;
    undefined field1639_0x883e;
    undefined field1640_0x883f;
    undefined field1641_0x8840;
    undefined field1642_0x8841;
    undefined field1643_0x8842;
    undefined field1644_0x8843;
    undefined field1645_0x8844;
    undefined field1646_0x8845;
    undefined field1647_0x8846;
    undefined field1648_0x8847;
    undefined field1649_0x8848;
    undefined field1650_0x8849;
    undefined field1651_0x884a;
    undefined field1652_0x884b;
    undefined field1653_0x884c;
    undefined field1654_0x884d;
    undefined field1655_0x884e;
    undefined field1656_0x884f;
    undefined field1657_0x8850;
    undefined field1658_0x8851;
    undefined field1659_0x8852;
    undefined field1660_0x8853;
    undefined field1661_0x8854;
    undefined field1662_0x8855;
    undefined field1663_0x8856;
    undefined field1664_0x8857;
    undefined field1665_0x8858;
    undefined field1666_0x8859;
    undefined field1667_0x885a;
    undefined field1668_0x885b;
    undefined field1669_0x885c;
    undefined field1670_0x885d;
    undefined field1671_0x885e;
    undefined field1672_0x885f;
    undefined field1673_0x8860;
    undefined field1674_0x8861;
    undefined field1675_0x8862;
    undefined field1676_0x8863;
    undefined field1677_0x8864;
    undefined field1678_0x8865;
    undefined field1679_0x8866;
    undefined field1680_0x8867;
    undefined field1681_0x8868;
    undefined field1682_0x8869;
    undefined field1683_0x886a;
    undefined field1684_0x886b;
    undefined field1685_0x886c;
    undefined field1686_0x886d;
    undefined field1687_0x886e;
    undefined field1688_0x886f;
    undefined field1689_0x8870;
    undefined field1690_0x8871;
    undefined field1691_0x8872;
    undefined field1692_0x8873;
    undefined field1693_0x8874;
    undefined field1694_0x8875;
    undefined field1695_0x8876;
    undefined field1696_0x8877;
    undefined field1697_0x8878;
    undefined field1698_0x8879;
    undefined field1699_0x887a;
    undefined field1700_0x887b;
    undefined field1701_0x887c;
    undefined field1702_0x887d;
    undefined field1703_0x887e;
    undefined field1704_0x887f;
    undefined field1705_0x8880;
    undefined field1706_0x8881;
    undefined field1707_0x8882;
    undefined field1708_0x8883;
    undefined field1709_0x8884;
    undefined field1710_0x8885;
    undefined field1711_0x8886;
    undefined field1712_0x8887;
    undefined field1713_0x8888;
    undefined field1714_0x8889;
    undefined field1715_0x888a;
    undefined field1716_0x888b;
    undefined field1717_0x888c;
    undefined field1718_0x888d;
    undefined field1719_0x888e;
    undefined field1720_0x888f;
    undefined field1721_0x8890;
    undefined field1722_0x8891;
    undefined field1723_0x8892;
    undefined field1724_0x8893;
    undefined field1725_0x8894;
    undefined field1726_0x8895;
    undefined field1727_0x8896;
    undefined field1728_0x8897;
    undefined field1729_0x8898;
    undefined field1730_0x8899;
    undefined field1731_0x889a;
    undefined field1732_0x889b;
    undefined field1733_0x889c;
    undefined field1734_0x889d;
    undefined field1735_0x889e;
    undefined field1736_0x889f;
    undefined field1737_0x88a0;
    undefined field1738_0x88a1;
    undefined field1739_0x88a2;
    undefined field1740_0x88a3;
    undefined field1741_0x88a4;
    undefined field1742_0x88a5;
    undefined field1743_0x88a6;
    undefined field1744_0x88a7;
    undefined field1745_0x88a8;
    undefined field1746_0x88a9;
    undefined field1747_0x88aa;
    undefined field1748_0x88ab;
    undefined field1749_0x88ac;
    undefined field1750_0x88ad;
    undefined field1751_0x88ae;
    undefined field1752_0x88af;
    undefined field1753_0x88b0;
    undefined field1754_0x88b1;
    undefined field1755_0x88b2;
    undefined field1756_0x88b3;
    undefined field1757_0x88b4;
    undefined field1758_0x88b5;
    undefined field1759_0x88b6;
    undefined field1760_0x88b7;
    undefined field1761_0x88b8;
    undefined field1762_0x88b9;
    undefined field1763_0x88ba;
    undefined field1764_0x88bb;
    undefined field1765_0x88bc;
    undefined field1766_0x88bd;
    undefined field1767_0x88be;
    undefined field1768_0x88bf;
    undefined field1769_0x88c0;
    undefined field1770_0x88c1;
    undefined field1771_0x88c2;
    undefined field1772_0x88c3;
    undefined field1773_0x88c4;
    undefined field1774_0x88c5;
    undefined field1775_0x88c6;
    undefined field1776_0x88c7;
    undefined field1777_0x88c8;
    undefined field1778_0x88c9;
    undefined field1779_0x88ca;
    undefined field1780_0x88cb;
    undefined field1781_0x88cc;
    undefined field1782_0x88cd;
    undefined field1783_0x88ce;
    undefined field1784_0x88cf;
    undefined field1785_0x88d0;
    undefined field1786_0x88d1;
    undefined field1787_0x88d2;
    undefined field1788_0x88d3;
    undefined field1789_0x88d4;
    undefined field1790_0x88d5;
    undefined field1791_0x88d6;
    undefined field1792_0x88d7;
    undefined field1793_0x88d8;
    undefined field1794_0x88d9;
    undefined field1795_0x88da;
    undefined field1796_0x88db;
    undefined field1797_0x88dc;
    undefined field1798_0x88dd;
    undefined field1799_0x88de;
    undefined field1800_0x88df;
    undefined field1801_0x88e0;
    undefined field1802_0x88e1;
    undefined field1803_0x88e2;
    undefined field1804_0x88e3;
    undefined field1805_0x88e4;
    undefined field1806_0x88e5;
    undefined field1807_0x88e6;
    undefined field1808_0x88e7;
    undefined field1809_0x88e8;
    undefined field1810_0x88e9;
    undefined field1811_0x88ea;
    undefined field1812_0x88eb;
    undefined field1813_0x88ec;
    undefined field1814_0x88ed;
    undefined field1815_0x88ee;
    undefined field1816_0x88ef;
    undefined field1817_0x88f0;
    undefined field1818_0x88f1;
    undefined field1819_0x88f2;
    undefined field1820_0x88f3;
    undefined field1821_0x88f4;
    undefined field1822_0x88f5;
    undefined field1823_0x88f6;
    undefined field1824_0x88f7;
    undefined field1825_0x88f8;
    undefined field1826_0x88f9;
    undefined field1827_0x88fa;
    undefined field1828_0x88fb;
    undefined field1829_0x88fc;
    undefined field1830_0x88fd;
    undefined field1831_0x88fe;
    undefined field1832_0x88ff;
    undefined field1833_0x8900;
    undefined field1834_0x8901;
    undefined field1835_0x8902;
    undefined field1836_0x8903;
    undefined field1837_0x8904;
    undefined field1838_0x8905;
    undefined field1839_0x8906;
    undefined field1840_0x8907;
    undefined field1841_0x8908;
    undefined field1842_0x8909;
    undefined field1843_0x890a;
    undefined field1844_0x890b;
    undefined field1845_0x890c;
    undefined field1846_0x890d;
    undefined field1847_0x890e;
    undefined field1848_0x890f;
    undefined field1849_0x8910;
    undefined field1850_0x8911;
    undefined field1851_0x8912;
    undefined field1852_0x8913;
    undefined field1853_0x8914;
    undefined field1854_0x8915;
    undefined field1855_0x8916;
    undefined field1856_0x8917;
    undefined field1857_0x8918;
    undefined field1858_0x8919;
    undefined field1859_0x891a;
    undefined field1860_0x891b;
    undefined field1861_0x891c;
    undefined field1862_0x891d;
    undefined field1863_0x891e;
    undefined field1864_0x891f;
    undefined field1865_0x8920;
    undefined field1866_0x8921;
    undefined field1867_0x8922;
    undefined field1868_0x8923;
    undefined field1869_0x8924;
    undefined field1870_0x8925;
    undefined field1871_0x8926;
    undefined field1872_0x8927;
    undefined field1873_0x8928;
    undefined field1874_0x8929;
    undefined field1875_0x892a;
    undefined field1876_0x892b;
    undefined field1877_0x892c;
    undefined field1878_0x892d;
    undefined field1879_0x892e;
    undefined field1880_0x892f;
    undefined field1881_0x8930;
    undefined field1882_0x8931;
    undefined field1883_0x8932;
    undefined field1884_0x8933;
    undefined field1885_0x8934;
    undefined field1886_0x8935;
    undefined field1887_0x8936;
    undefined field1888_0x8937;
    undefined field1889_0x8938;
    undefined field1890_0x8939;
    undefined field1891_0x893a;
    undefined field1892_0x893b;
    undefined field1893_0x893c;
    undefined field1894_0x893d;
    undefined field1895_0x893e;
    undefined field1896_0x893f;
    undefined field1897_0x8940;
    undefined field1898_0x8941;
    undefined field1899_0x8942;
    undefined field1900_0x8943;
    undefined field1901_0x8944;
    undefined field1902_0x8945;
    undefined field1903_0x8946;
    undefined field1904_0x8947;
    undefined field1905_0x8948;
    undefined field1906_0x8949;
    undefined field1907_0x894a;
    undefined field1908_0x894b;
    undefined field1909_0x894c;
    undefined field1910_0x894d;
    undefined field1911_0x894e;
    undefined field1912_0x894f;
    undefined field1913_0x8950;
    undefined field1914_0x8951;
    undefined field1915_0x8952;
    undefined field1916_0x8953;
    undefined field1917_0x8954;
    undefined field1918_0x8955;
    undefined field1919_0x8956;
    undefined field1920_0x8957;
    undefined field1921_0x8958;
    undefined field1922_0x8959;
    undefined field1923_0x895a;
    undefined field1924_0x895b;
    undefined field1925_0x895c;
    undefined field1926_0x895d;
    undefined field1927_0x895e;
    undefined field1928_0x895f;
    undefined field1929_0x8960;
    undefined field1930_0x8961;
    undefined field1931_0x8962;
    undefined field1932_0x8963;
    undefined field1933_0x8964;
    undefined field1934_0x8965;
    undefined field1935_0x8966;
    undefined field1936_0x8967;
    undefined field1937_0x8968;
    undefined field1938_0x8969;
    undefined field1939_0x896a;
    undefined field1940_0x896b;
    undefined field1941_0x896c;
    undefined field1942_0x896d;
    undefined field1943_0x896e;
    undefined field1944_0x896f;
    undefined field1945_0x8970;
    undefined field1946_0x8971;
    undefined field1947_0x8972;
    undefined field1948_0x8973;
    undefined field1949_0x8974;
    undefined field1950_0x8975;
    undefined field1951_0x8976;
    undefined field1952_0x8977;
    undefined field1953_0x8978;
    undefined field1954_0x8979;
    undefined field1955_0x897a;
    undefined field1956_0x897b;
    undefined field1957_0x897c;
    undefined field1958_0x897d;
    undefined field1959_0x897e;
    undefined field1960_0x897f;
    undefined field1961_0x8980;
    undefined field1962_0x8981;
    undefined field1963_0x8982;
    undefined field1964_0x8983;
    undefined field1965_0x8984;
    undefined field1966_0x8985;
    undefined field1967_0x8986;
    undefined field1968_0x8987;
    undefined field1969_0x8988;
    undefined field1970_0x8989;
    undefined field1971_0x898a;
    undefined field1972_0x898b;
    undefined field1973_0x898c;
    undefined field1974_0x898d;
    undefined field1975_0x898e;
    undefined field1976_0x898f;
    undefined field1977_0x8990;
    undefined field1978_0x8991;
    undefined field1979_0x8992;
    undefined field1980_0x8993;
    undefined field1981_0x8994;
    undefined field1982_0x8995;
    undefined field1983_0x8996;
    undefined field1984_0x8997;
    undefined field1985_0x8998;
    undefined field1986_0x8999;
    undefined field1987_0x899a;
    undefined field1988_0x899b;
    undefined field1989_0x899c;
    undefined field1990_0x899d;
    undefined field1991_0x899e;
    undefined field1992_0x899f;
    undefined field1993_0x89a0;
    undefined field1994_0x89a1;
    undefined field1995_0x89a2;
    undefined field1996_0x89a3;
    undefined field1997_0x89a4;
    undefined field1998_0x89a5;
    undefined field1999_0x89a6;
    undefined field2000_0x89a7;
    undefined field2001_0x89a8;
    undefined field2002_0x89a9;
    undefined field2003_0x89aa;
    undefined field2004_0x89ab;
    undefined field2005_0x89ac;
    undefined field2006_0x89ad;
    undefined field2007_0x89ae;
    undefined field2008_0x89af;
    undefined field2009_0x89b0;
    undefined field2010_0x89b1;
    undefined field2011_0x89b2;
    undefined field2012_0x89b3;
    undefined field2013_0x89b4;
    undefined field2014_0x89b5;
    undefined field2015_0x89b6;
    undefined field2016_0x89b7;
    undefined field2017_0x89b8;
    undefined field2018_0x89b9;
    undefined field2019_0x89ba;
    undefined field2020_0x89bb;
    undefined field2021_0x89bc;
    undefined field2022_0x89bd;
    undefined field2023_0x89be;
    undefined field2024_0x89bf;
    undefined field2025_0x89c0;
    undefined field2026_0x89c1;
    undefined field2027_0x89c2;
    undefined field2028_0x89c3;
    undefined field2029_0x89c4;
    undefined field2030_0x89c5;
    undefined field2031_0x89c6;
    undefined field2032_0x89c7;
    undefined field2033_0x89c8;
    undefined field2034_0x89c9;
    undefined field2035_0x89ca;
    undefined field2036_0x89cb;
    undefined field2037_0x89cc;
    undefined field2038_0x89cd;
    undefined field2039_0x89ce;
    undefined field2040_0x89cf;
    undefined field2041_0x89d0;
    undefined field2042_0x89d1;
    undefined field2043_0x89d2;
    undefined field2044_0x89d3;
    undefined field2045_0x89d4;
    undefined field2046_0x89d5;
    undefined field2047_0x89d6;
    undefined field2048_0x89d7;
    undefined field2049_0x89d8;
    undefined field2050_0x89d9;
    undefined field2051_0x89da;
    undefined field2052_0x89db;
    undefined field2053_0x89dc;
    undefined field2054_0x89dd;
    undefined field2055_0x89de;
    undefined field2056_0x89df;
    undefined field2057_0x89e0;
    undefined field2058_0x89e1;
    undefined field2059_0x89e2;
    undefined field2060_0x89e3;
    undefined field2061_0x89e4;
    undefined field2062_0x89e5;
    undefined field2063_0x89e6;
    undefined field2064_0x89e7;
    undefined field2065_0x89e8;
    undefined field2066_0x89e9;
    undefined field2067_0x89ea;
    undefined field2068_0x89eb;
    undefined field2069_0x89ec;
    undefined field2070_0x89ed;
    undefined field2071_0x89ee;
    undefined field2072_0x89ef;
    undefined field2073_0x89f0;
    undefined field2074_0x89f1;
    undefined field2075_0x89f2;
    undefined field2076_0x89f3;
    undefined field2077_0x89f4;
    undefined field2078_0x89f5;
    undefined field2079_0x89f6;
    undefined field2080_0x89f7;
    undefined field2081_0x89f8;
    undefined field2082_0x89f9;
    undefined field2083_0x89fa;
    undefined field2084_0x89fb;
    undefined field2085_0x89fc;
    undefined field2086_0x89fd;
    undefined field2087_0x89fe;
    undefined field2088_0x89ff;
    undefined field2089_0x8a00;
    undefined field2090_0x8a01;
    undefined field2091_0x8a02;
    undefined field2092_0x8a03;
    undefined field2093_0x8a04;
    undefined field2094_0x8a05;
    undefined field2095_0x8a06;
    undefined field2096_0x8a07;
    undefined field2097_0x8a08;
    undefined field2098_0x8a09;
    undefined field2099_0x8a0a;
    undefined field2100_0x8a0b;
    undefined field2101_0x8a0c;
    undefined field2102_0x8a0d;
    undefined field2103_0x8a0e;
    undefined field2104_0x8a0f;
    undefined field2105_0x8a10;
    undefined field2106_0x8a11;
    undefined field2107_0x8a12;
    undefined field2108_0x8a13;
    undefined field2109_0x8a14;
    undefined field2110_0x8a15;
    undefined field2111_0x8a16;
    undefined field2112_0x8a17;
    undefined field2113_0x8a18;
    undefined field2114_0x8a19;
    undefined field2115_0x8a1a;
    undefined field2116_0x8a1b;
    undefined field2117_0x8a1c;
    undefined field2118_0x8a1d;
    undefined field2119_0x8a1e;
    undefined field2120_0x8a1f;
    undefined field2121_0x8a20;
    undefined field2122_0x8a21;
    undefined field2123_0x8a22;
    undefined field2124_0x8a23;
    undefined field2125_0x8a24;
    undefined field2126_0x8a25;
    undefined field2127_0x8a26;
    undefined field2128_0x8a27;
    undefined field2129_0x8a28;
    undefined field2130_0x8a29;
    undefined field2131_0x8a2a;
    undefined field2132_0x8a2b;
    undefined field2133_0x8a2c;
    undefined field2134_0x8a2d;
    undefined field2135_0x8a2e;
    undefined field2136_0x8a2f;
    undefined field2137_0x8a30;
    undefined field2138_0x8a31;
    undefined field2139_0x8a32;
    undefined field2140_0x8a33;
    undefined field2141_0x8a34;
    undefined field2142_0x8a35;
    undefined field2143_0x8a36;
    undefined field2144_0x8a37;
    undefined field2145_0x8a38;
    undefined field2146_0x8a39;
    undefined field2147_0x8a3a;
    undefined field2148_0x8a3b;
    undefined field2149_0x8a3c;
    undefined field2150_0x8a3d;
    undefined field2151_0x8a3e;
    undefined field2152_0x8a3f;
    undefined field2153_0x8a40;
    undefined field2154_0x8a41;
    undefined field2155_0x8a42;
    undefined field2156_0x8a43;
    undefined field2157_0x8a44;
    undefined field2158_0x8a45;
    undefined field2159_0x8a46;
    undefined field2160_0x8a47;
    undefined field2161_0x8a48;
    undefined field2162_0x8a49;
    undefined field2163_0x8a4a;
    undefined field2164_0x8a4b;
    undefined field2165_0x8a4c;
    undefined field2166_0x8a4d;
    undefined field2167_0x8a4e;
    undefined field2168_0x8a4f;
    undefined field2169_0x8a50;
    undefined field2170_0x8a51;
    undefined field2171_0x8a52;
    undefined field2172_0x8a53;
    undefined field2173_0x8a54;
    undefined field2174_0x8a55;
    undefined field2175_0x8a56;
    undefined field2176_0x8a57;
    undefined field2177_0x8a58;
    undefined field2178_0x8a59;
    undefined field2179_0x8a5a;
    undefined field2180_0x8a5b;
    undefined field2181_0x8a5c;
    undefined field2182_0x8a5d;
    undefined field2183_0x8a5e;
    undefined field2184_0x8a5f;
    undefined field2185_0x8a60;
    undefined field2186_0x8a61;
    undefined field2187_0x8a62;
    undefined field2188_0x8a63;
    undefined field2189_0x8a64;
    undefined field2190_0x8a65;
    undefined field2191_0x8a66;
    undefined field2192_0x8a67;
    undefined field2193_0x8a68;
    undefined field2194_0x8a69;
    undefined field2195_0x8a6a;
    undefined field2196_0x8a6b;
    undefined field2197_0x8a6c;
    undefined field2198_0x8a6d;
    undefined field2199_0x8a6e;
    undefined field2200_0x8a6f;
    undefined field2201_0x8a70;
    undefined field2202_0x8a71;
    undefined field2203_0x8a72;
    undefined field2204_0x8a73;
    undefined field2205_0x8a74;
    undefined field2206_0x8a75;
    undefined field2207_0x8a76;
    undefined field2208_0x8a77;
    undefined field2209_0x8a78;
    undefined field2210_0x8a79;
    undefined field2211_0x8a7a;
    undefined field2212_0x8a7b;
    undefined field2213_0x8a7c;
    undefined field2214_0x8a7d;
    undefined field2215_0x8a7e;
    undefined field2216_0x8a7f;
    undefined field2217_0x8a80;
    undefined field2218_0x8a81;
    undefined field2219_0x8a82;
    undefined field2220_0x8a83;
    undefined field2221_0x8a84;
    undefined field2222_0x8a85;
    undefined field2223_0x8a86;
    undefined field2224_0x8a87;
    undefined field2225_0x8a88;
    undefined field2226_0x8a89;
    undefined field2227_0x8a8a;
    undefined field2228_0x8a8b;
    undefined field2229_0x8a8c;
    undefined field2230_0x8a8d;
    undefined field2231_0x8a8e;
    undefined field2232_0x8a8f;
    undefined field2233_0x8a90;
    undefined field2234_0x8a91;
    undefined field2235_0x8a92;
    undefined field2236_0x8a93;
    undefined field2237_0x8a94;
    undefined field2238_0x8a95;
    undefined field2239_0x8a96;
    undefined field2240_0x8a97;
    undefined field2241_0x8a98;
    undefined field2242_0x8a99;
    undefined field2243_0x8a9a;
    undefined field2244_0x8a9b;
    undefined field2245_0x8a9c;
    undefined field2246_0x8a9d;
    undefined field2247_0x8a9e;
    undefined field2248_0x8a9f;
    undefined field2249_0x8aa0;
    undefined field2250_0x8aa1;
    undefined field2251_0x8aa2;
    undefined field2252_0x8aa3;
    undefined field2253_0x8aa4;
    undefined field2254_0x8aa5;
    undefined field2255_0x8aa6;
    undefined field2256_0x8aa7;
    undefined field2257_0x8aa8;
    undefined field2258_0x8aa9;
    undefined field2259_0x8aaa;
    undefined field2260_0x8aab;
    undefined field2261_0x8aac;
    undefined field2262_0x8aad;
    undefined field2263_0x8aae;
    undefined field2264_0x8aaf;
    undefined field2265_0x8ab0;
    undefined field2266_0x8ab1;
    undefined field2267_0x8ab2;
    undefined field2268_0x8ab3;
    undefined field2269_0x8ab4;
    undefined field2270_0x8ab5;
    undefined field2271_0x8ab6;
    undefined field2272_0x8ab7;
    undefined field2273_0x8ab8;
    undefined field2274_0x8ab9;
    undefined field2275_0x8aba;
    undefined field2276_0x8abb;
    undefined field2277_0x8abc;
    undefined field2278_0x8abd;
    undefined field2279_0x8abe;
    undefined field2280_0x8abf;
    undefined field2281_0x8ac0;
    undefined field2282_0x8ac1;
    undefined field2283_0x8ac2;
    undefined field2284_0x8ac3;
    undefined field2285_0x8ac4;
    undefined field2286_0x8ac5;
    undefined field2287_0x8ac6;
    undefined field2288_0x8ac7;
    undefined field2289_0x8ac8;
    undefined field2290_0x8ac9;
    undefined field2291_0x8aca;
    undefined field2292_0x8acb;
    undefined field2293_0x8acc;
    undefined field2294_0x8acd;
    undefined field2295_0x8ace;
    undefined field2296_0x8acf;
    undefined field2297_0x8ad0;
    undefined field2298_0x8ad1;
    undefined field2299_0x8ad2;
    undefined field2300_0x8ad3;
    undefined field2301_0x8ad4;
    undefined field2302_0x8ad5;
    undefined field2303_0x8ad6;
    undefined field2304_0x8ad7;
    undefined field2305_0x8ad8;
    undefined field2306_0x8ad9;
    undefined field2307_0x8ada;
    undefined field2308_0x8adb;
    undefined field2309_0x8adc;
    undefined field2310_0x8add;
    undefined field2311_0x8ade;
    undefined field2312_0x8adf;
    undefined field2313_0x8ae0;
    undefined field2314_0x8ae1;
    undefined field2315_0x8ae2;
    undefined field2316_0x8ae3;
    undefined field2317_0x8ae4;
    undefined field2318_0x8ae5;
    undefined field2319_0x8ae6;
    undefined field2320_0x8ae7;
    undefined field2321_0x8ae8;
    undefined field2322_0x8ae9;
    undefined field2323_0x8aea;
    undefined field2324_0x8aeb;
    undefined field2325_0x8aec;
    undefined field2326_0x8aed;
    undefined field2327_0x8aee;
    undefined field2328_0x8aef;
    undefined field2329_0x8af0;
    undefined field2330_0x8af1;
    undefined field2331_0x8af2;
    undefined field2332_0x8af3;
    undefined field2333_0x8af4;
    undefined field2334_0x8af5;
    undefined field2335_0x8af6;
    undefined field2336_0x8af7;
    undefined field2337_0x8af8;
    undefined field2338_0x8af9;
    undefined field2339_0x8afa;
    undefined field2340_0x8afb;
    undefined field2341_0x8afc;
    undefined field2342_0x8afd;
    undefined field2343_0x8afe;
    undefined field2344_0x8aff;
    undefined field2345_0x8b00;
    undefined field2346_0x8b01;
    undefined field2347_0x8b02;
    undefined field2348_0x8b03;
    undefined field2349_0x8b04;
    undefined field2350_0x8b05;
    undefined field2351_0x8b06;
    undefined field2352_0x8b07;
    undefined field2353_0x8b08;
    undefined field2354_0x8b09;
    undefined field2355_0x8b0a;
    undefined field2356_0x8b0b;
    undefined field2357_0x8b0c;
    undefined field2358_0x8b0d;
    undefined field2359_0x8b0e;
    undefined field2360_0x8b0f;
    undefined field2361_0x8b10;
    undefined field2362_0x8b11;
    undefined field2363_0x8b12;
    undefined field2364_0x8b13;
    undefined field2365_0x8b14;
    undefined field2366_0x8b15;
    undefined field2367_0x8b16;
    undefined field2368_0x8b17;
    undefined field2369_0x8b18;
    undefined field2370_0x8b19;
    undefined field2371_0x8b1a;
    undefined field2372_0x8b1b;
    undefined field2373_0x8b1c;
    undefined field2374_0x8b1d;
    undefined field2375_0x8b1e;
    undefined field2376_0x8b1f;
    undefined field2377_0x8b20;
    undefined field2378_0x8b21;
    undefined field2379_0x8b22;
    undefined field2380_0x8b23;
    undefined field2381_0x8b24;
    undefined field2382_0x8b25;
    undefined field2383_0x8b26;
    undefined field2384_0x8b27;
    undefined field2385_0x8b28;
    undefined field2386_0x8b29;
    undefined field2387_0x8b2a;
    undefined field2388_0x8b2b;
    undefined field2389_0x8b2c;
    undefined field2390_0x8b2d;
    undefined field2391_0x8b2e;
    undefined field2392_0x8b2f;
    undefined field2393_0x8b30;
    undefined field2394_0x8b31;
    undefined field2395_0x8b32;
    undefined field2396_0x8b33;
    undefined field2397_0x8b34;
    undefined field2398_0x8b35;
    undefined field2399_0x8b36;
    undefined field2400_0x8b37;
    undefined field2401_0x8b38;
    undefined field2402_0x8b39;
    undefined field2403_0x8b3a;
    undefined field2404_0x8b3b;
    undefined field2405_0x8b3c;
    undefined field2406_0x8b3d;
    undefined field2407_0x8b3e;
    undefined field2408_0x8b3f;
    undefined field2409_0x8b40;
    undefined field2410_0x8b41;
    undefined field2411_0x8b42;
    undefined field2412_0x8b43;
    undefined field2413_0x8b44;
    undefined field2414_0x8b45;
    undefined field2415_0x8b46;
    undefined field2416_0x8b47;
    undefined field2417_0x8b48;
    undefined field2418_0x8b49;
    undefined field2419_0x8b4a;
    undefined field2420_0x8b4b;
    undefined field2421_0x8b4c;
    undefined field2422_0x8b4d;
    undefined field2423_0x8b4e;
    undefined field2424_0x8b4f;
    undefined field2425_0x8b50;
    undefined field2426_0x8b51;
    undefined field2427_0x8b52;
    undefined field2428_0x8b53;
    undefined field2429_0x8b54;
    undefined field2430_0x8b55;
    undefined field2431_0x8b56;
    undefined field2432_0x8b57;
    undefined field2433_0x8b58;
    undefined field2434_0x8b59;
    undefined field2435_0x8b5a;
    undefined field2436_0x8b5b;
    undefined field2437_0x8b5c;
    undefined field2438_0x8b5d;
    undefined field2439_0x8b5e;
    undefined field2440_0x8b5f;
    undefined field2441_0x8b60;
    undefined field2442_0x8b61;
    undefined field2443_0x8b62;
    undefined field2444_0x8b63;
    undefined field2445_0x8b64;
    undefined field2446_0x8b65;
    undefined field2447_0x8b66;
    undefined field2448_0x8b67;
    undefined field2449_0x8b68;
    undefined field2450_0x8b69;
    undefined field2451_0x8b6a;
    undefined field2452_0x8b6b;
    undefined field2453_0x8b6c;
    undefined field2454_0x8b6d;
    undefined field2455_0x8b6e;
    undefined field2456_0x8b6f;
    undefined field2457_0x8b70;
    undefined field2458_0x8b71;
    undefined field2459_0x8b72;
    undefined field2460_0x8b73;
    undefined field2461_0x8b74;
    undefined field2462_0x8b75;
    undefined field2463_0x8b76;
    undefined field2464_0x8b77;
    undefined field2465_0x8b78;
    undefined field2466_0x8b79;
    undefined field2467_0x8b7a;
    undefined field2468_0x8b7b;
    undefined field2469_0x8b7c;
    undefined field2470_0x8b7d;
    undefined field2471_0x8b7e;
    undefined field2472_0x8b7f;
    undefined field2473_0x8b80;
    undefined field2474_0x8b81;
    undefined field2475_0x8b82;
    undefined field2476_0x8b83;
    undefined field2477_0x8b84;
    undefined field2478_0x8b85;
    undefined field2479_0x8b86;
    undefined field2480_0x8b87;
    undefined field2481_0x8b88;
    undefined field2482_0x8b89;
    undefined field2483_0x8b8a;
    undefined field2484_0x8b8b;
    undefined field2485_0x8b8c;
    undefined field2486_0x8b8d;
    undefined field2487_0x8b8e;
    undefined field2488_0x8b8f;
    undefined field2489_0x8b90;
    undefined field2490_0x8b91;
    undefined field2491_0x8b92;
    undefined field2492_0x8b93;
    undefined field2493_0x8b94;
    undefined field2494_0x8b95;
    undefined field2495_0x8b96;
    undefined field2496_0x8b97;
    undefined field2497_0x8b98;
    undefined field2498_0x8b99;
    undefined field2499_0x8b9a;
    undefined field2500_0x8b9b;
    undefined field2501_0x8b9c;
    undefined field2502_0x8b9d;
    undefined field2503_0x8b9e;
    undefined field2504_0x8b9f;
    undefined field2505_0x8ba0;
    undefined field2506_0x8ba1;
    undefined field2507_0x8ba2;
    undefined field2508_0x8ba3;
    undefined field2509_0x8ba4;
    undefined field2510_0x8ba5;
    undefined field2511_0x8ba6;
    undefined field2512_0x8ba7;
    undefined field2513_0x8ba8;
    undefined field2514_0x8ba9;
    undefined field2515_0x8baa;
    undefined field2516_0x8bab;
    undefined field2517_0x8bac;
    undefined field2518_0x8bad;
    undefined field2519_0x8bae;
    undefined field2520_0x8baf;
    undefined field2521_0x8bb0;
    undefined field2522_0x8bb1;
    undefined field2523_0x8bb2;
    undefined field2524_0x8bb3;
    undefined field2525_0x8bb4;
    undefined field2526_0x8bb5;
    undefined field2527_0x8bb6;
    undefined field2528_0x8bb7;
    undefined field2529_0x8bb8;
    undefined field2530_0x8bb9;
    undefined field2531_0x8bba;
    undefined field2532_0x8bbb;
    undefined field2533_0x8bbc;
    undefined field2534_0x8bbd;
    undefined field2535_0x8bbe;
    undefined field2536_0x8bbf;
    undefined field2537_0x8bc0;
    undefined field2538_0x8bc1;
    undefined field2539_0x8bc2;
    undefined field2540_0x8bc3;
    undefined field2541_0x8bc4;
    undefined field2542_0x8bc5;
    undefined field2543_0x8bc6;
    undefined field2544_0x8bc7;
    undefined field2545_0x8bc8;
    undefined field2546_0x8bc9;
    undefined field2547_0x8bca;
    undefined field2548_0x8bcb;
    undefined field2549_0x8bcc;
    undefined field2550_0x8bcd;
    undefined field2551_0x8bce;
    undefined field2552_0x8bcf;
    undefined field2553_0x8bd0;
    undefined field2554_0x8bd1;
    undefined field2555_0x8bd2;
    undefined field2556_0x8bd3;
    undefined field2557_0x8bd4;
    undefined field2558_0x8bd5;
    undefined field2559_0x8bd6;
    undefined field2560_0x8bd7;
    undefined field2561_0x8bd8;
    undefined field2562_0x8bd9;
    undefined field2563_0x8bda;
    undefined field2564_0x8bdb;
    undefined field2565_0x8bdc;
    undefined field2566_0x8bdd;
    undefined field2567_0x8bde;
    undefined field2568_0x8bdf;
    undefined field2569_0x8be0;
    undefined field2570_0x8be1;
    undefined field2571_0x8be2;
    undefined field2572_0x8be3;
    undefined field2573_0x8be4;
    undefined field2574_0x8be5;
    undefined field2575_0x8be6;
    undefined field2576_0x8be7;
    undefined field2577_0x8be8;
    undefined field2578_0x8be9;
    undefined field2579_0x8bea;
    undefined field2580_0x8beb;
    undefined field2581_0x8bec;
    undefined field2582_0x8bed;
    undefined field2583_0x8bee;
    undefined field2584_0x8bef;
    undefined field2585_0x8bf0;
    undefined field2586_0x8bf1;
    undefined field2587_0x8bf2;
    undefined field2588_0x8bf3;
    undefined field2589_0x8bf4;
    undefined field2590_0x8bf5;
    undefined field2591_0x8bf6;
    undefined field2592_0x8bf7;
    undefined field2593_0x8bf8;
    undefined field2594_0x8bf9;
    undefined field2595_0x8bfa;
    undefined field2596_0x8bfb;
    undefined field2597_0x8bfc;
    undefined field2598_0x8bfd;
    undefined field2599_0x8bfe;
    undefined field2600_0x8bff;
    undefined field2601_0x8c00;
    undefined field2602_0x8c01;
    undefined field2603_0x8c02;
    undefined field2604_0x8c03;
    undefined field2605_0x8c04;
    undefined field2606_0x8c05;
    undefined field2607_0x8c06;
    undefined field2608_0x8c07;
    undefined field2609_0x8c08;
    undefined field2610_0x8c09;
    undefined field2611_0x8c0a;
    undefined field2612_0x8c0b;
    undefined field2613_0x8c0c;
    undefined field2614_0x8c0d;
    undefined field2615_0x8c0e;
    undefined field2616_0x8c0f;
    undefined field2617_0x8c10;
    undefined field2618_0x8c11;
    undefined field2619_0x8c12;
    undefined field2620_0x8c13;
    undefined field2621_0x8c14;
    undefined field2622_0x8c15;
    undefined field2623_0x8c16;
    undefined field2624_0x8c17;
    undefined field2625_0x8c18;
    undefined field2626_0x8c19;
    undefined field2627_0x8c1a;
    undefined field2628_0x8c1b;
    undefined field2629_0x8c1c;
    undefined field2630_0x8c1d;
    undefined field2631_0x8c1e;
    undefined field2632_0x8c1f;
    undefined field2633_0x8c20;
    undefined field2634_0x8c21;
    undefined field2635_0x8c22;
    undefined field2636_0x8c23;
    undefined field2637_0x8c24;
    undefined field2638_0x8c25;
    undefined field2639_0x8c26;
    undefined field2640_0x8c27;
    undefined field2641_0x8c28;
    undefined field2642_0x8c29;
    undefined field2643_0x8c2a;
    undefined field2644_0x8c2b;
    undefined field2645_0x8c2c;
    undefined field2646_0x8c2d;
    undefined field2647_0x8c2e;
    undefined field2648_0x8c2f;
    undefined field2649_0x8c30;
    undefined field2650_0x8c31;
    undefined field2651_0x8c32;
    undefined field2652_0x8c33;
    undefined field2653_0x8c34;
    undefined field2654_0x8c35;
    undefined field2655_0x8c36;
    undefined field2656_0x8c37;
    undefined field2657_0x8c38;
    undefined field2658_0x8c39;
    undefined field2659_0x8c3a;
    undefined field2660_0x8c3b;
    undefined field2661_0x8c3c;
    undefined field2662_0x8c3d;
    undefined field2663_0x8c3e;
    undefined field2664_0x8c3f;
    undefined field2665_0x8c40;
    undefined field2666_0x8c41;
    undefined field2667_0x8c42;
    undefined field2668_0x8c43;
    undefined field2669_0x8c44;
    undefined field2670_0x8c45;
    undefined field2671_0x8c46;
    undefined field2672_0x8c47;
    undefined field2673_0x8c48;
    undefined field2674_0x8c49;
    undefined field2675_0x8c4a;
    undefined field2676_0x8c4b;
    undefined field2677_0x8c4c;
    undefined field2678_0x8c4d;
    undefined field2679_0x8c4e;
    undefined field2680_0x8c4f;
    undefined field2681_0x8c50;
    undefined field2682_0x8c51;
    undefined field2683_0x8c52;
    undefined field2684_0x8c53;
    undefined field2685_0x8c54;
    undefined field2686_0x8c55;
    undefined field2687_0x8c56;
    undefined field2688_0x8c57;
    undefined field2689_0x8c58;
    undefined field2690_0x8c59;
    undefined field2691_0x8c5a;
    undefined field2692_0x8c5b;
    undefined field2693_0x8c5c;
    undefined field2694_0x8c5d;
    undefined field2695_0x8c5e;
    undefined field2696_0x8c5f;
    undefined field2697_0x8c60;
    undefined field2698_0x8c61;
    undefined field2699_0x8c62;
    undefined field2700_0x8c63;
    undefined field2701_0x8c64;
    undefined field2702_0x8c65;
    undefined field2703_0x8c66;
    undefined field2704_0x8c67;
    undefined field2705_0x8c68;
    undefined field2706_0x8c69;
    undefined field2707_0x8c6a;
    undefined field2708_0x8c6b;
    undefined field2709_0x8c6c;
    undefined field2710_0x8c6d;
    undefined field2711_0x8c6e;
    undefined field2712_0x8c6f;
    undefined field2713_0x8c70;
    undefined field2714_0x8c71;
    undefined field2715_0x8c72;
    undefined field2716_0x8c73;
    undefined field2717_0x8c74;
    undefined field2718_0x8c75;
    undefined field2719_0x8c76;
    undefined field2720_0x8c77;
    undefined field2721_0x8c78;
    undefined field2722_0x8c79;
    undefined field2723_0x8c7a;
    undefined field2724_0x8c7b;
    undefined field2725_0x8c7c;
    undefined field2726_0x8c7d;
    undefined field2727_0x8c7e;
    undefined field2728_0x8c7f;
    undefined field2729_0x8c80;
    undefined field2730_0x8c81;
    undefined field2731_0x8c82;
    undefined field2732_0x8c83;
    undefined field2733_0x8c84;
    undefined field2734_0x8c85;
    undefined field2735_0x8c86;
    undefined field2736_0x8c87;
    undefined field2737_0x8c88;
    undefined field2738_0x8c89;
    undefined field2739_0x8c8a;
    undefined field2740_0x8c8b;
    undefined field2741_0x8c8c;
    undefined field2742_0x8c8d;
    undefined field2743_0x8c8e;
    undefined field2744_0x8c8f;
    undefined field2745_0x8c90;
    undefined field2746_0x8c91;
    undefined field2747_0x8c92;
    undefined field2748_0x8c93;
    undefined field2749_0x8c94;
    undefined field2750_0x8c95;
    undefined field2751_0x8c96;
    undefined field2752_0x8c97;
    undefined field2753_0x8c98;
    undefined field2754_0x8c99;
    undefined field2755_0x8c9a;
    undefined field2756_0x8c9b;
    undefined field2757_0x8c9c;
    undefined field2758_0x8c9d;
    undefined field2759_0x8c9e;
    undefined field2760_0x8c9f;
    undefined field2761_0x8ca0;
    undefined field2762_0x8ca1;
    undefined field2763_0x8ca2;
    undefined field2764_0x8ca3;
    undefined field2765_0x8ca4;
    undefined field2766_0x8ca5;
    undefined field2767_0x8ca6;
    undefined field2768_0x8ca7;
    undefined field2769_0x8ca8;
    undefined field2770_0x8ca9;
    undefined field2771_0x8caa;
    undefined field2772_0x8cab;
    undefined field2773_0x8cac;
    undefined field2774_0x8cad;
    undefined field2775_0x8cae;
    undefined field2776_0x8caf;
    undefined field2777_0x8cb0;
    undefined field2778_0x8cb1;
    undefined field2779_0x8cb2;
    undefined field2780_0x8cb3;
    undefined field2781_0x8cb4;
    undefined field2782_0x8cb5;
    undefined field2783_0x8cb6;
    undefined field2784_0x8cb7;
    undefined field2785_0x8cb8;
    undefined field2786_0x8cb9;
    undefined field2787_0x8cba;
    undefined field2788_0x8cbb;
    undefined field2789_0x8cbc;
    undefined field2790_0x8cbd;
    undefined field2791_0x8cbe;
    undefined field2792_0x8cbf;
    undefined field2793_0x8cc0;
    undefined field2794_0x8cc1;
    undefined field2795_0x8cc2;
    undefined field2796_0x8cc3;
    undefined field2797_0x8cc4;
    undefined field2798_0x8cc5;
    undefined field2799_0x8cc6;
    undefined field2800_0x8cc7;
    undefined field2801_0x8cc8;
    undefined field2802_0x8cc9;
    undefined field2803_0x8cca;
    undefined field2804_0x8ccb;
    undefined field2805_0x8ccc;
    undefined field2806_0x8ccd;
    undefined field2807_0x8cce;
    undefined field2808_0x8ccf;
    undefined field2809_0x8cd0;
    undefined field2810_0x8cd1;
    undefined field2811_0x8cd2;
    undefined field2812_0x8cd3;
    undefined field2813_0x8cd4;
    undefined field2814_0x8cd5;
    undefined field2815_0x8cd6;
    undefined field2816_0x8cd7;
    undefined field2817_0x8cd8;
    undefined field2818_0x8cd9;
    undefined field2819_0x8cda;
    undefined field2820_0x8cdb;
    undefined field2821_0x8cdc;
    undefined field2822_0x8cdd;
    undefined field2823_0x8cde;
    undefined field2824_0x8cdf;
    undefined field2825_0x8ce0;
    undefined field2826_0x8ce1;
    undefined field2827_0x8ce2;
    undefined field2828_0x8ce3;
    undefined field2829_0x8ce4;
    undefined field2830_0x8ce5;
    undefined field2831_0x8ce6;
    undefined field2832_0x8ce7;
    undefined field2833_0x8ce8;
    undefined field2834_0x8ce9;
    undefined field2835_0x8cea;
    undefined field2836_0x8ceb;
    undefined field2837_0x8cec;
    undefined field2838_0x8ced;
    undefined field2839_0x8cee;
    undefined field2840_0x8cef;
    undefined field2841_0x8cf0;
    undefined field2842_0x8cf1;
    undefined field2843_0x8cf2;
    undefined field2844_0x8cf3;
    undefined field2845_0x8cf4;
    undefined field2846_0x8cf5;
    undefined field2847_0x8cf6;
    undefined field2848_0x8cf7;
    undefined field2849_0x8cf8;
    undefined field2850_0x8cf9;
    undefined field2851_0x8cfa;
    undefined field2852_0x8cfb;
    undefined field2853_0x8cfc;
    undefined field2854_0x8cfd;
    undefined field2855_0x8cfe;
    undefined field2856_0x8cff;
    undefined field2857_0x8d00;
    undefined field2858_0x8d01;
    undefined field2859_0x8d02;
    undefined field2860_0x8d03;
    undefined field2861_0x8d04;
    undefined field2862_0x8d05;
    undefined field2863_0x8d06;
    undefined field2864_0x8d07;
    undefined field2865_0x8d08;
    undefined field2866_0x8d09;
    undefined field2867_0x8d0a;
    undefined field2868_0x8d0b;
    undefined field2869_0x8d0c;
    undefined field2870_0x8d0d;
    undefined field2871_0x8d0e;
    undefined field2872_0x8d0f;
    undefined field2873_0x8d10;
    undefined field2874_0x8d11;
    undefined field2875_0x8d12;
    undefined field2876_0x8d13;
    undefined field2877_0x8d14;
    undefined field2878_0x8d15;
    undefined field2879_0x8d16;
    undefined field2880_0x8d17;
    undefined field2881_0x8d18;
    undefined field2882_0x8d19;
    undefined field2883_0x8d1a;
    undefined field2884_0x8d1b;
    undefined field2885_0x8d1c;
    undefined field2886_0x8d1d;
    undefined field2887_0x8d1e;
    undefined field2888_0x8d1f;
    undefined field2889_0x8d20;
    undefined field2890_0x8d21;
    undefined field2891_0x8d22;
    undefined field2892_0x8d23;
    undefined field2893_0x8d24;
    undefined field2894_0x8d25;
    undefined field2895_0x8d26;
    undefined field2896_0x8d27;
    undefined field2897_0x8d28;
    undefined field2898_0x8d29;
    undefined field2899_0x8d2a;
    undefined field2900_0x8d2b;
    undefined field2901_0x8d2c;
    undefined field2902_0x8d2d;
    undefined field2903_0x8d2e;
    undefined field2904_0x8d2f;
    undefined field2905_0x8d30;
    undefined field2906_0x8d31;
    undefined field2907_0x8d32;
    undefined field2908_0x8d33;
    undefined field2909_0x8d34;
    undefined field2910_0x8d35;
    undefined field2911_0x8d36;
    undefined field2912_0x8d37;
    undefined field2913_0x8d38;
    undefined field2914_0x8d39;
    undefined field2915_0x8d3a;
    undefined field2916_0x8d3b;
    undefined field2917_0x8d3c;
    undefined field2918_0x8d3d;
    undefined field2919_0x8d3e;
    undefined field2920_0x8d3f;
    undefined field2921_0x8d40;
    undefined field2922_0x8d41;
    undefined field2923_0x8d42;
    undefined field2924_0x8d43;
    undefined field2925_0x8d44;
    undefined field2926_0x8d45;
    undefined field2927_0x8d46;
    undefined field2928_0x8d47;
    undefined field2929_0x8d48;
    undefined field2930_0x8d49;
    undefined field2931_0x8d4a;
    undefined field2932_0x8d4b;
    undefined field2933_0x8d4c;
    undefined field2934_0x8d4d;
    undefined field2935_0x8d4e;
    undefined field2936_0x8d4f;
    undefined field2937_0x8d50;
    undefined field2938_0x8d51;
    undefined field2939_0x8d52;
    undefined field2940_0x8d53;
    undefined field2941_0x8d54;
    undefined field2942_0x8d55;
    undefined field2943_0x8d56;
    undefined field2944_0x8d57;
    undefined field2945_0x8d58;
    undefined field2946_0x8d59;
    undefined field2947_0x8d5a;
    undefined field2948_0x8d5b;
    undefined field2949_0x8d5c;
    undefined field2950_0x8d5d;
    undefined field2951_0x8d5e;
    undefined field2952_0x8d5f;
    undefined field2953_0x8d60;
    undefined field2954_0x8d61;
    undefined field2955_0x8d62;
    undefined field2956_0x8d63;
    undefined field2957_0x8d64;
    undefined field2958_0x8d65;
    undefined field2959_0x8d66;
    undefined field2960_0x8d67;
    undefined field2961_0x8d68;
    undefined field2962_0x8d69;
    undefined field2963_0x8d6a;
    undefined field2964_0x8d6b;
    undefined field2965_0x8d6c;
    undefined field2966_0x8d6d;
    undefined field2967_0x8d6e;
    undefined field2968_0x8d6f;
    undefined field2969_0x8d70;
    undefined field2970_0x8d71;
    undefined field2971_0x8d72;
    undefined field2972_0x8d73;
    undefined field2973_0x8d74;
    undefined field2974_0x8d75;
    undefined field2975_0x8d76;
    undefined field2976_0x8d77;
    undefined field2977_0x8d78;
    undefined field2978_0x8d79;
    undefined field2979_0x8d7a;
    undefined field2980_0x8d7b;
    undefined field2981_0x8d7c;
    undefined field2982_0x8d7d;
    undefined field2983_0x8d7e;
    undefined field2984_0x8d7f;
    undefined field2985_0x8d80;
    undefined field2986_0x8d81;
    undefined field2987_0x8d82;
    undefined field2988_0x8d83;
    undefined field2989_0x8d84;
    undefined field2990_0x8d85;
    undefined field2991_0x8d86;
    undefined field2992_0x8d87;
    undefined field2993_0x8d88;
    undefined field2994_0x8d89;
    undefined field2995_0x8d8a;
    undefined field2996_0x8d8b;
    undefined field2997_0x8d8c;
    undefined field2998_0x8d8d;
    undefined field2999_0x8d8e;
    undefined field3000_0x8d8f;
    undefined field3001_0x8d90;
    undefined field3002_0x8d91;
    undefined field3003_0x8d92;
    undefined field3004_0x8d93;
    undefined field3005_0x8d94;
    undefined field3006_0x8d95;
    undefined field3007_0x8d96;
    undefined field3008_0x8d97;
    undefined field3009_0x8d98;
    undefined field3010_0x8d99;
    undefined field3011_0x8d9a;
    undefined field3012_0x8d9b;
    undefined field3013_0x8d9c;
    undefined field3014_0x8d9d;
    undefined field3015_0x8d9e;
    undefined field3016_0x8d9f;
    undefined field3017_0x8da0;
    undefined field3018_0x8da1;
    undefined field3019_0x8da2;
    undefined field3020_0x8da3;
    undefined field3021_0x8da4;
    undefined field3022_0x8da5;
    undefined field3023_0x8da6;
    undefined field3024_0x8da7;
    undefined field3025_0x8da8;
    undefined field3026_0x8da9;
    undefined field3027_0x8daa;
    undefined field3028_0x8dab;
    undefined field3029_0x8dac;
    undefined field3030_0x8dad;
    undefined field3031_0x8dae;
    undefined field3032_0x8daf;
    undefined field3033_0x8db0;
    undefined field3034_0x8db1;
    undefined field3035_0x8db2;
    undefined field3036_0x8db3;
    undefined field3037_0x8db4;
    undefined field3038_0x8db5;
    undefined field3039_0x8db6;
    undefined field3040_0x8db7;
    undefined field3041_0x8db8;
    undefined field3042_0x8db9;
    undefined field3043_0x8dba;
    undefined field3044_0x8dbb;
    undefined field3045_0x8dbc;
    undefined field3046_0x8dbd;
    undefined field3047_0x8dbe;
    undefined field3048_0x8dbf;
    undefined field3049_0x8dc0;
    undefined field3050_0x8dc1;
    undefined field3051_0x8dc2;
    undefined field3052_0x8dc3;
    undefined field3053_0x8dc4;
    undefined field3054_0x8dc5;
    undefined field3055_0x8dc6;
    undefined field3056_0x8dc7;
    undefined field3057_0x8dc8;
    undefined field3058_0x8dc9;
    undefined field3059_0x8dca;
    undefined field3060_0x8dcb;
    undefined field3061_0x8dcc;
    undefined field3062_0x8dcd;
    undefined field3063_0x8dce;
    undefined field3064_0x8dcf;
    undefined field3065_0x8dd0;
    undefined field3066_0x8dd1;
    undefined field3067_0x8dd2;
    undefined field3068_0x8dd3;
    undefined field3069_0x8dd4;
    undefined field3070_0x8dd5;
    undefined field3071_0x8dd6;
    undefined field3072_0x8dd7;
    undefined field3073_0x8dd8;
    undefined field3074_0x8dd9;
    undefined field3075_0x8dda;
    undefined field3076_0x8ddb;
    undefined field3077_0x8ddc;
    undefined field3078_0x8ddd;
    undefined field3079_0x8dde;
    undefined field3080_0x8ddf;
    undefined field3081_0x8de0;
    undefined field3082_0x8de1;
    undefined field3083_0x8de2;
    undefined field3084_0x8de3;
    undefined field3085_0x8de4;
    undefined field3086_0x8de5;
    undefined field3087_0x8de6;
    undefined field3088_0x8de7;
    undefined field3089_0x8de8;
    undefined field3090_0x8de9;
    undefined field3091_0x8dea;
    undefined field3092_0x8deb;
    undefined field3093_0x8dec;
    undefined field3094_0x8ded;
    undefined field3095_0x8dee;
    undefined field3096_0x8def;
    undefined field3097_0x8df0;
    undefined field3098_0x8df1;
    undefined field3099_0x8df2;
    undefined field3100_0x8df3;
    undefined field3101_0x8df4;
    undefined field3102_0x8df5;
    undefined field3103_0x8df6;
    undefined field3104_0x8df7;
    undefined field3105_0x8df8;
    undefined field3106_0x8df9;
    undefined field3107_0x8dfa;
    undefined field3108_0x8dfb;
    undefined field3109_0x8dfc;
    undefined field3110_0x8dfd;
    undefined field3111_0x8dfe;
    undefined field3112_0x8dff;
    undefined field3113_0x8e00;
    undefined field3114_0x8e01;
    undefined field3115_0x8e02;
    undefined field3116_0x8e03;
    undefined field3117_0x8e04;
    undefined field3118_0x8e05;
    undefined field3119_0x8e06;
    undefined field3120_0x8e07;
    undefined field3121_0x8e08;
    undefined field3122_0x8e09;
    undefined field3123_0x8e0a;
    undefined field3124_0x8e0b;
    undefined field3125_0x8e0c;
    undefined field3126_0x8e0d;
    undefined field3127_0x8e0e;
    undefined field3128_0x8e0f;
    undefined field3129_0x8e10;
    undefined field3130_0x8e11;
    undefined field3131_0x8e12;
    undefined field3132_0x8e13;
    undefined field3133_0x8e14;
    undefined field3134_0x8e15;
    undefined field3135_0x8e16;
    undefined field3136_0x8e17;
    undefined field3137_0x8e18;
    undefined field3138_0x8e19;
    undefined field3139_0x8e1a;
    undefined field3140_0x8e1b;
    undefined field3141_0x8e1c;
    undefined field3142_0x8e1d;
    undefined field3143_0x8e1e;
    undefined field3144_0x8e1f;
    undefined field3145_0x8e20;
    undefined field3146_0x8e21;
    undefined field3147_0x8e22;
    undefined field3148_0x8e23;
    undefined field3149_0x8e24;
    undefined field3150_0x8e25;
    undefined field3151_0x8e26;
    undefined field3152_0x8e27;
    undefined field3153_0x8e28;
    undefined field3154_0x8e29;
    undefined field3155_0x8e2a;
    undefined field3156_0x8e2b;
    undefined field3157_0x8e2c;
    undefined field3158_0x8e2d;
    undefined field3159_0x8e2e;
    undefined field3160_0x8e2f;
    undefined field3161_0x8e30;
    undefined field3162_0x8e31;
    undefined field3163_0x8e32;
    undefined field3164_0x8e33;
    undefined field3165_0x8e34;
    undefined field3166_0x8e35;
    undefined field3167_0x8e36;
    undefined field3168_0x8e37;
    undefined field3169_0x8e38;
    undefined field3170_0x8e39;
    undefined field3171_0x8e3a;
    undefined field3172_0x8e3b;
    undefined field3173_0x8e3c;
    undefined field3174_0x8e3d;
    undefined field3175_0x8e3e;
    undefined field3176_0x8e3f;
    undefined field3177_0x8e40;
    undefined field3178_0x8e41;
    undefined field3179_0x8e42;
    undefined field3180_0x8e43;
    undefined field3181_0x8e44;
    undefined field3182_0x8e45;
    undefined field3183_0x8e46;
    undefined field3184_0x8e47;
    undefined field3185_0x8e48;
    undefined field3186_0x8e49;
    undefined field3187_0x8e4a;
    undefined field3188_0x8e4b;
    undefined field3189_0x8e4c;
    undefined field3190_0x8e4d;
    undefined field3191_0x8e4e;
    undefined field3192_0x8e4f;
    undefined field3193_0x8e50;
    undefined field3194_0x8e51;
    undefined field3195_0x8e52;
    undefined field3196_0x8e53;
    undefined field3197_0x8e54;
    undefined field3198_0x8e55;
    undefined field3199_0x8e56;
    undefined field3200_0x8e57;
    undefined field3201_0x8e58;
    undefined field3202_0x8e59;
    undefined field3203_0x8e5a;
    undefined field3204_0x8e5b;
    undefined field3205_0x8e5c;
    undefined field3206_0x8e5d;
    undefined field3207_0x8e5e;
    undefined field3208_0x8e5f;
    undefined field3209_0x8e60;
    undefined field3210_0x8e61;
    undefined field3211_0x8e62;
    undefined field3212_0x8e63;
    undefined field3213_0x8e64;
    undefined field3214_0x8e65;
    undefined field3215_0x8e66;
    undefined field3216_0x8e67;
    undefined field3217_0x8e68;
    undefined field3218_0x8e69;
    undefined field3219_0x8e6a;
    undefined field3220_0x8e6b;
    undefined field3221_0x8e6c;
    undefined field3222_0x8e6d;
    undefined field3223_0x8e6e;
    undefined field3224_0x8e6f;
    undefined field3225_0x8e70;
    undefined field3226_0x8e71;
    undefined field3227_0x8e72;
    undefined field3228_0x8e73;
    undefined field3229_0x8e74;
    undefined field3230_0x8e75;
    undefined field3231_0x8e76;
    undefined field3232_0x8e77;
    undefined field3233_0x8e78;
    undefined field3234_0x8e79;
    undefined field3235_0x8e7a;
    undefined field3236_0x8e7b;
    undefined field3237_0x8e7c;
    undefined field3238_0x8e7d;
    undefined field3239_0x8e7e;
    undefined field3240_0x8e7f;
    undefined field3241_0x8e80;
    undefined field3242_0x8e81;
    undefined field3243_0x8e82;
    undefined field3244_0x8e83;
    undefined field3245_0x8e84;
    undefined field3246_0x8e85;
    undefined field3247_0x8e86;
    undefined field3248_0x8e87;
    undefined field3249_0x8e88;
    undefined field3250_0x8e89;
    undefined field3251_0x8e8a;
    undefined field3252_0x8e8b;
    undefined field3253_0x8e8c;
    undefined field3254_0x8e8d;
    undefined field3255_0x8e8e;
    undefined field3256_0x8e8f;
    undefined field3257_0x8e90;
    undefined field3258_0x8e91;
    undefined field3259_0x8e92;
    undefined field3260_0x8e93;
    undefined field3261_0x8e94;
    undefined field3262_0x8e95;
    undefined field3263_0x8e96;
    undefined field3264_0x8e97;
    undefined field3265_0x8e98;
    undefined field3266_0x8e99;
    undefined field3267_0x8e9a;
    undefined field3268_0x8e9b;
    undefined field3269_0x8e9c;
    undefined field3270_0x8e9d;
    undefined field3271_0x8e9e;
    undefined field3272_0x8e9f;
    undefined field3273_0x8ea0;
    undefined field3274_0x8ea1;
    undefined field3275_0x8ea2;
    undefined field3276_0x8ea3;
    undefined field3277_0x8ea4;
    undefined field3278_0x8ea5;
    undefined field3279_0x8ea6;
    undefined field3280_0x8ea7;
    undefined field3281_0x8ea8;
    undefined field3282_0x8ea9;
    undefined field3283_0x8eaa;
    undefined field3284_0x8eab;
    undefined field3285_0x8eac;
    undefined field3286_0x8ead;
    undefined field3287_0x8eae;
    undefined field3288_0x8eaf;
    undefined field3289_0x8eb0;
    undefined field3290_0x8eb1;
    undefined field3291_0x8eb2;
    undefined field3292_0x8eb3;
    undefined field3293_0x8eb4;
    undefined field3294_0x8eb5;
    undefined field3295_0x8eb6;
    undefined field3296_0x8eb7;
    undefined field3297_0x8eb8;
    undefined field3298_0x8eb9;
    undefined field3299_0x8eba;
    undefined field3300_0x8ebb;
    undefined field3301_0x8ebc;
    undefined field3302_0x8ebd;
    undefined field3303_0x8ebe;
    undefined field3304_0x8ebf;
    undefined field3305_0x8ec0;
    undefined field3306_0x8ec1;
    undefined field3307_0x8ec2;
    undefined field3308_0x8ec3;
    undefined field3309_0x8ec4;
    undefined field3310_0x8ec5;
    undefined field3311_0x8ec6;
    undefined field3312_0x8ec7;
    undefined field3313_0x8ec8;
    undefined field3314_0x8ec9;
    undefined field3315_0x8eca;
    undefined field3316_0x8ecb;
    undefined field3317_0x8ecc;
    undefined field3318_0x8ecd;
    undefined field3319_0x8ece;
    undefined field3320_0x8ecf;
    undefined field3321_0x8ed0;
    undefined field3322_0x8ed1;
    undefined field3323_0x8ed2;
    undefined field3324_0x8ed3;
    undefined field3325_0x8ed4;
    undefined field3326_0x8ed5;
    undefined field3327_0x8ed6;
    undefined field3328_0x8ed7;
    undefined field3329_0x8ed8;
    undefined field3330_0x8ed9;
    undefined field3331_0x8eda;
    undefined field3332_0x8edb;
    undefined field3333_0x8edc;
    undefined field3334_0x8edd;
    undefined field3335_0x8ede;
    undefined field3336_0x8edf;
    undefined field3337_0x8ee0;
    undefined field3338_0x8ee1;
    undefined field3339_0x8ee2;
    undefined field3340_0x8ee3;
    undefined field3341_0x8ee4;
    undefined field3342_0x8ee5;
    undefined field3343_0x8ee6;
    undefined field3344_0x8ee7;
    undefined field3345_0x8ee8;
    undefined field3346_0x8ee9;
    undefined field3347_0x8eea;
    undefined field3348_0x8eeb;
    undefined field3349_0x8eec;
    undefined field3350_0x8eed;
    undefined field3351_0x8eee;
    undefined field3352_0x8eef;
    undefined field3353_0x8ef0;
    undefined field3354_0x8ef1;
    undefined field3355_0x8ef2;
    undefined field3356_0x8ef3;
    undefined field3357_0x8ef4;
    undefined field3358_0x8ef5;
    undefined field3359_0x8ef6;
    undefined field3360_0x8ef7;
    undefined field3361_0x8ef8;
    undefined field3362_0x8ef9;
    undefined field3363_0x8efa;
    undefined field3364_0x8efb;
    undefined field3365_0x8efc;
    undefined field3366_0x8efd;
    undefined field3367_0x8efe;
    undefined field3368_0x8eff;
    undefined field3369_0x8f00;
    undefined field3370_0x8f01;
    undefined field3371_0x8f02;
    undefined field3372_0x8f03;
    undefined field3373_0x8f04;
    undefined field3374_0x8f05;
    undefined field3375_0x8f06;
    undefined field3376_0x8f07;
    undefined field3377_0x8f08;
    undefined field3378_0x8f09;
    undefined field3379_0x8f0a;
    undefined field3380_0x8f0b;
    undefined field3381_0x8f0c;
    undefined field3382_0x8f0d;
    undefined field3383_0x8f0e;
    undefined field3384_0x8f0f;
    undefined field3385_0x8f10;
    undefined field3386_0x8f11;
    undefined field3387_0x8f12;
    undefined field3388_0x8f13;
    undefined field3389_0x8f14;
    undefined field3390_0x8f15;
    undefined field3391_0x8f16;
    undefined field3392_0x8f17;
    undefined field3393_0x8f18;
    undefined field3394_0x8f19;
    undefined field3395_0x8f1a;
    undefined field3396_0x8f1b;
    undefined field3397_0x8f1c;
    undefined field3398_0x8f1d;
    undefined field3399_0x8f1e;
    undefined field3400_0x8f1f;
    undefined field3401_0x8f20;
    undefined field3402_0x8f21;
    undefined field3403_0x8f22;
    undefined field3404_0x8f23;
    undefined field3405_0x8f24;
    undefined field3406_0x8f25;
    undefined field3407_0x8f26;
    undefined field3408_0x8f27;
    undefined field3409_0x8f28;
    undefined field3410_0x8f29;
    undefined field3411_0x8f2a;
    undefined field3412_0x8f2b;
    undefined field3413_0x8f2c;
    undefined field3414_0x8f2d;
    undefined field3415_0x8f2e;
    undefined field3416_0x8f2f;
    undefined field3417_0x8f30;
    undefined field3418_0x8f31;
    undefined field3419_0x8f32;
    undefined field3420_0x8f33;
    undefined field3421_0x8f34;
    undefined field3422_0x8f35;
    undefined field3423_0x8f36;
    undefined field3424_0x8f37;
    undefined field3425_0x8f38;
    undefined field3426_0x8f39;
    undefined field3427_0x8f3a;
    undefined field3428_0x8f3b;
    undefined field3429_0x8f3c;
    undefined field3430_0x8f3d;
    undefined field3431_0x8f3e;
    undefined field3432_0x8f3f;
    undefined field3433_0x8f40;
    undefined field3434_0x8f41;
    undefined field3435_0x8f42;
    undefined field3436_0x8f43;
    undefined field3437_0x8f44;
    undefined field3438_0x8f45;
    undefined field3439_0x8f46;
    undefined field3440_0x8f47;
    undefined field3441_0x8f48;
    undefined field3442_0x8f49;
    undefined field3443_0x8f4a;
    undefined field3444_0x8f4b;
    undefined field3445_0x8f4c;
    undefined field3446_0x8f4d;
    undefined field3447_0x8f4e;
    undefined field3448_0x8f4f;
    undefined field3449_0x8f50;
    undefined field3450_0x8f51;
    undefined field3451_0x8f52;
    undefined field3452_0x8f53;
    undefined field3453_0x8f54;
    undefined field3454_0x8f55;
    undefined field3455_0x8f56;
    undefined field3456_0x8f57;
    undefined field3457_0x8f58;
    undefined field3458_0x8f59;
    undefined field3459_0x8f5a;
    undefined field3460_0x8f5b;
    undefined field3461_0x8f5c;
    undefined field3462_0x8f5d;
    undefined field3463_0x8f5e;
    undefined field3464_0x8f5f;
    undefined field3465_0x8f60;
    undefined field3466_0x8f61;
    undefined field3467_0x8f62;
    undefined field3468_0x8f63;
    undefined field3469_0x8f64;
    undefined field3470_0x8f65;
    undefined field3471_0x8f66;
    undefined field3472_0x8f67;
    undefined field3473_0x8f68;
    undefined field3474_0x8f69;
    undefined field3475_0x8f6a;
    undefined field3476_0x8f6b;
    undefined field3477_0x8f6c;
    undefined field3478_0x8f6d;
    undefined field3479_0x8f6e;
    undefined field3480_0x8f6f;
    undefined field3481_0x8f70;
    undefined field3482_0x8f71;
    undefined field3483_0x8f72;
    undefined field3484_0x8f73;
    undefined field3485_0x8f74;
    undefined field3486_0x8f75;
    undefined field3487_0x8f76;
    undefined field3488_0x8f77;
    undefined field3489_0x8f78;
    undefined field3490_0x8f79;
    undefined field3491_0x8f7a;
    undefined field3492_0x8f7b;
    undefined field3493_0x8f7c;
    undefined field3494_0x8f7d;
    undefined field3495_0x8f7e;
    undefined field3496_0x8f7f;
    undefined field3497_0x8f80;
    undefined field3498_0x8f81;
    undefined field3499_0x8f82;
    undefined field3500_0x8f83;
    undefined field3501_0x8f84;
    undefined field3502_0x8f85;
    undefined field3503_0x8f86;
    undefined field3504_0x8f87;
    undefined field3505_0x8f88;
    undefined field3506_0x8f89;
    undefined field3507_0x8f8a;
    undefined field3508_0x8f8b;
    undefined field3509_0x8f8c;
    undefined field3510_0x8f8d;
    undefined field3511_0x8f8e;
    undefined field3512_0x8f8f;
    undefined field3513_0x8f90;
    undefined field3514_0x8f91;
    undefined field3515_0x8f92;
    undefined field3516_0x8f93;
    undefined field3517_0x8f94;
    undefined field3518_0x8f95;
    undefined field3519_0x8f96;
    undefined field3520_0x8f97;
    undefined field3521_0x8f98;
    undefined field3522_0x8f99;
    undefined field3523_0x8f9a;
    undefined field3524_0x8f9b;
    undefined field3525_0x8f9c;
    undefined field3526_0x8f9d;
    undefined field3527_0x8f9e;
    undefined field3528_0x8f9f;
    undefined field3529_0x8fa0;
    undefined field3530_0x8fa1;
    undefined field3531_0x8fa2;
    undefined field3532_0x8fa3;
    undefined field3533_0x8fa4;
    undefined field3534_0x8fa5;
    undefined field3535_0x8fa6;
    undefined field3536_0x8fa7;
    undefined field3537_0x8fa8;
    undefined field3538_0x8fa9;
    undefined field3539_0x8faa;
    undefined field3540_0x8fab;
    undefined field3541_0x8fac;
    undefined field3542_0x8fad;
    undefined field3543_0x8fae;
    undefined field3544_0x8faf;
    undefined field3545_0x8fb0;
    undefined field3546_0x8fb1;
    undefined field3547_0x8fb2;
    undefined field3548_0x8fb3;
    undefined field3549_0x8fb4;
    undefined field3550_0x8fb5;
    undefined field3551_0x8fb6;
    undefined field3552_0x8fb7;
    undefined field3553_0x8fb8;
    undefined field3554_0x8fb9;
    undefined field3555_0x8fba;
    undefined field3556_0x8fbb;
    undefined field3557_0x8fbc;
    undefined field3558_0x8fbd;
    undefined field3559_0x8fbe;
    undefined field3560_0x8fbf;
    undefined field3561_0x8fc0;
    undefined field3562_0x8fc1;
    undefined field3563_0x8fc2;
    undefined field3564_0x8fc3;
    undefined field3565_0x8fc4;
    undefined field3566_0x8fc5;
    undefined field3567_0x8fc6;
    undefined field3568_0x8fc7;
    undefined field3569_0x8fc8;
    undefined field3570_0x8fc9;
    undefined field3571_0x8fca;
    undefined field3572_0x8fcb;
    undefined field3573_0x8fcc;
    undefined field3574_0x8fcd;
    undefined field3575_0x8fce;
    undefined field3576_0x8fcf;
    undefined field3577_0x8fd0;
    undefined field3578_0x8fd1;
    undefined field3579_0x8fd2;
    undefined field3580_0x8fd3;
    undefined field3581_0x8fd4;
    undefined field3582_0x8fd5;
    undefined field3583_0x8fd6;
    undefined field3584_0x8fd7;
    undefined field3585_0x8fd8;
    undefined field3586_0x8fd9;
    undefined field3587_0x8fda;
    undefined field3588_0x8fdb;
    undefined field3589_0x8fdc;
    undefined field3590_0x8fdd;
    undefined field3591_0x8fde;
    undefined field3592_0x8fdf;
    undefined field3593_0x8fe0;
    undefined field3594_0x8fe1;
    undefined field3595_0x8fe2;
    undefined field3596_0x8fe3;
    undefined field3597_0x8fe4;
    undefined field3598_0x8fe5;
    undefined field3599_0x8fe6;
    undefined field3600_0x8fe7;
    undefined field3601_0x8fe8;
    undefined field3602_0x8fe9;
    undefined field3603_0x8fea;
    undefined field3604_0x8feb;
    undefined field3605_0x8fec;
    undefined field3606_0x8fed;
    undefined field3607_0x8fee;
    undefined field3608_0x8fef;
    undefined field3609_0x8ff0;
    undefined field3610_0x8ff1;
    undefined field3611_0x8ff2;
    undefined field3612_0x8ff3;
    undefined field3613_0x8ff4;
    undefined field3614_0x8ff5;
    undefined field3615_0x8ff6;
    undefined field3616_0x8ff7;
    undefined field3617_0x8ff8;
    undefined field3618_0x8ff9;
    undefined field3619_0x8ffa;
    undefined field3620_0x8ffb;
    undefined field3621_0x8ffc;
    undefined field3622_0x8ffd;
    undefined field3623_0x8ffe;
    undefined field3624_0x8fff;
    undefined field3625_0x9000;
    undefined field3626_0x9001;
    undefined field3627_0x9002;
    undefined field3628_0x9003;
    undefined field3629_0x9004;
    undefined field3630_0x9005;
    undefined field3631_0x9006;
    undefined field3632_0x9007;
    undefined field3633_0x9008;
    undefined field3634_0x9009;
    undefined field3635_0x900a;
    undefined field3636_0x900b;
    undefined field3637_0x900c;
    undefined field3638_0x900d;
    undefined field3639_0x900e;
    undefined field3640_0x900f;
    undefined field3641_0x9010;
    undefined field3642_0x9011;
    undefined field3643_0x9012;
    undefined field3644_0x9013;
    undefined field3645_0x9014;
    undefined field3646_0x9015;
    undefined field3647_0x9016;
    undefined field3648_0x9017;
    undefined field3649_0x9018;
    undefined field3650_0x9019;
    undefined field3651_0x901a;
    undefined field3652_0x901b;
    undefined field3653_0x901c;
    undefined field3654_0x901d;
    undefined field3655_0x901e;
    undefined field3656_0x901f;
    undefined field3657_0x9020;
    undefined field3658_0x9021;
    undefined field3659_0x9022;
    undefined field3660_0x9023;
    undefined field3661_0x9024;
    undefined field3662_0x9025;
    undefined field3663_0x9026;
    undefined field3664_0x9027;
    undefined field3665_0x9028;
    undefined field3666_0x9029;
    undefined field3667_0x902a;
    undefined field3668_0x902b;
    undefined field3669_0x902c;
    undefined field3670_0x902d;
    undefined field3671_0x902e;
    undefined field3672_0x902f;
    undefined field3673_0x9030;
    undefined field3674_0x9031;
    undefined field3675_0x9032;
    undefined field3676_0x9033;
    undefined field3677_0x9034;
    undefined field3678_0x9035;
    undefined field3679_0x9036;
    undefined field3680_0x9037;
    undefined field3681_0x9038;
    undefined field3682_0x9039;
    undefined field3683_0x903a;
    undefined field3684_0x903b;
    undefined field3685_0x903c;
    undefined field3686_0x903d;
    undefined field3687_0x903e;
    undefined field3688_0x903f;
    undefined field3689_0x9040;
    undefined field3690_0x9041;
    undefined field3691_0x9042;
    undefined field3692_0x9043;
    undefined field3693_0x9044;
    undefined field3694_0x9045;
    undefined field3695_0x9046;
    undefined field3696_0x9047;
    undefined field3697_0x9048;
    undefined field3698_0x9049;
    undefined field3699_0x904a;
    undefined field3700_0x904b;
    undefined field3701_0x904c;
    undefined field3702_0x904d;
    undefined field3703_0x904e;
    undefined field3704_0x904f;
    undefined field3705_0x9050;
    undefined field3706_0x9051;
    undefined field3707_0x9052;
    undefined field3708_0x9053;
    undefined field3709_0x9054;
    undefined field3710_0x9055;
    undefined field3711_0x9056;
    undefined field3712_0x9057;
    undefined field3713_0x9058;
    undefined field3714_0x9059;
    undefined field3715_0x905a;
    undefined field3716_0x905b;
    undefined field3717_0x905c;
    undefined field3718_0x905d;
    undefined field3719_0x905e;
    undefined field3720_0x905f;
    undefined field3721_0x9060;
    undefined field3722_0x9061;
    undefined field3723_0x9062;
    undefined field3724_0x9063;
    undefined field3725_0x9064;
    undefined field3726_0x9065;
    undefined field3727_0x9066;
    undefined field3728_0x9067;
    undefined field3729_0x9068;
    undefined field3730_0x9069;
    undefined field3731_0x906a;
    undefined field3732_0x906b;
    undefined field3733_0x906c;
    undefined field3734_0x906d;
    undefined field3735_0x906e;
    undefined field3736_0x906f;
    undefined field3737_0x9070;
    undefined field3738_0x9071;
    undefined field3739_0x9072;
    undefined field3740_0x9073;
    undefined field3741_0x9074;
    undefined field3742_0x9075;
    undefined field3743_0x9076;
    undefined field3744_0x9077;
    undefined field3745_0x9078;
    undefined field3746_0x9079;
    undefined field3747_0x907a;
    undefined field3748_0x907b;
    undefined field3749_0x907c;
    undefined field3750_0x907d;
    undefined field3751_0x907e;
    undefined field3752_0x907f;
    undefined field3753_0x9080;
    undefined field3754_0x9081;
    undefined field3755_0x9082;
    undefined field3756_0x9083;
    undefined field3757_0x9084;
    undefined field3758_0x9085;
    undefined field3759_0x9086;
    undefined field3760_0x9087;
    undefined field3761_0x9088;
    undefined field3762_0x9089;
    undefined field3763_0x908a;
    undefined field3764_0x908b;
    undefined field3765_0x908c;
    undefined field3766_0x908d;
    undefined field3767_0x908e;
    undefined field3768_0x908f;
    undefined field3769_0x9090;
    undefined field3770_0x9091;
    undefined field3771_0x9092;
    undefined field3772_0x9093;
    undefined field3773_0x9094;
    undefined field3774_0x9095;
    undefined field3775_0x9096;
    undefined field3776_0x9097;
    undefined field3777_0x9098;
    undefined field3778_0x9099;
    undefined field3779_0x909a;
    undefined field3780_0x909b;
    undefined field3781_0x909c;
    undefined field3782_0x909d;
    undefined field3783_0x909e;
    undefined field3784_0x909f;
    undefined field3785_0x90a0;
    undefined field3786_0x90a1;
    undefined field3787_0x90a2;
    undefined field3788_0x90a3;
    undefined field3789_0x90a4;
    undefined field3790_0x90a5;
    undefined field3791_0x90a6;
    undefined field3792_0x90a7;
    undefined field3793_0x90a8;
    undefined field3794_0x90a9;
    undefined field3795_0x90aa;
    undefined field3796_0x90ab;
    undefined field3797_0x90ac;
    undefined field3798_0x90ad;
    undefined field3799_0x90ae;
    undefined field3800_0x90af;
    undefined field3801_0x90b0;
    undefined field3802_0x90b1;
    undefined field3803_0x90b2;
    undefined field3804_0x90b3;
    undefined field3805_0x90b4;
    undefined field3806_0x90b5;
    undefined field3807_0x90b6;
    undefined field3808_0x90b7;
    undefined field3809_0x90b8;
    undefined field3810_0x90b9;
    undefined field3811_0x90ba;
    undefined field3812_0x90bb;
    undefined field3813_0x90bc;
    undefined field3814_0x90bd;
    undefined field3815_0x90be;
    undefined field3816_0x90bf;
    undefined field3817_0x90c0;
    undefined field3818_0x90c1;
    undefined field3819_0x90c2;
    undefined field3820_0x90c3;
    undefined field3821_0x90c4;
    undefined field3822_0x90c5;
    undefined field3823_0x90c6;
    undefined field3824_0x90c7;
    undefined field3825_0x90c8;
    undefined field3826_0x90c9;
    undefined field3827_0x90ca;
    undefined field3828_0x90cb;
    undefined field3829_0x90cc;
    undefined field3830_0x90cd;
    undefined field3831_0x90ce;
    undefined field3832_0x90cf;
    undefined field3833_0x90d0;
    undefined field3834_0x90d1;
    undefined field3835_0x90d2;
    undefined field3836_0x90d3;
    undefined field3837_0x90d4;
    undefined field3838_0x90d5;
    undefined field3839_0x90d6;
    undefined field3840_0x90d7;
    undefined field3841_0x90d8;
    undefined field3842_0x90d9;
    undefined field3843_0x90da;
    undefined field3844_0x90db;
    undefined field3845_0x90dc;
    undefined field3846_0x90dd;
    undefined field3847_0x90de;
    undefined field3848_0x90df;
    undefined field3849_0x90e0;
    undefined field3850_0x90e1;
    undefined field3851_0x90e2;
    undefined field3852_0x90e3;
    undefined field3853_0x90e4;
    undefined field3854_0x90e5;
    undefined field3855_0x90e6;
    undefined field3856_0x90e7;
    undefined field3857_0x90e8;
    undefined field3858_0x90e9;
    undefined field3859_0x90ea;
    undefined field3860_0x90eb;
    undefined field3861_0x90ec;
    undefined field3862_0x90ed;
    undefined field3863_0x90ee;
    undefined field3864_0x90ef;
    undefined field3865_0x90f0;
    undefined field3866_0x90f1;
    undefined field3867_0x90f2;
    undefined field3868_0x90f3;
    undefined field3869_0x90f4;
    undefined field3870_0x90f5;
    undefined field3871_0x90f6;
    undefined field3872_0x90f7;
    undefined field3873_0x90f8;
    undefined field3874_0x90f9;
    undefined field3875_0x90fa;
    undefined field3876_0x90fb;
    undefined field3877_0x90fc;
    undefined field3878_0x90fd;
    undefined field3879_0x90fe;
    undefined field3880_0x90ff;
    undefined field3881_0x9100;
    undefined field3882_0x9101;
    undefined field3883_0x9102;
    undefined field3884_0x9103;
    undefined field3885_0x9104;
    undefined field3886_0x9105;
    undefined field3887_0x9106;
    undefined field3888_0x9107;
    undefined field3889_0x9108;
    undefined field3890_0x9109;
    undefined field3891_0x910a;
    undefined field3892_0x910b;
    undefined field3893_0x910c;
    undefined field3894_0x910d;
    undefined field3895_0x910e;
    undefined field3896_0x910f;
    undefined field3897_0x9110;
    undefined field3898_0x9111;
    undefined field3899_0x9112;
    undefined field3900_0x9113;
    undefined field3901_0x9114;
    undefined field3902_0x9115;
    undefined field3903_0x9116;
    undefined field3904_0x9117;
    undefined field3905_0x9118;
    undefined field3906_0x9119;
    undefined field3907_0x911a;
    undefined field3908_0x911b;
    undefined field3909_0x911c;
    undefined field3910_0x911d;
    undefined field3911_0x911e;
    undefined field3912_0x911f;
    undefined field3913_0x9120;
    undefined field3914_0x9121;
    undefined field3915_0x9122;
    undefined field3916_0x9123;
    undefined field3917_0x9124;
    undefined field3918_0x9125;
    undefined field3919_0x9126;
    undefined field3920_0x9127;
    undefined field3921_0x9128;
    undefined field3922_0x9129;
    undefined field3923_0x912a;
    undefined field3924_0x912b;
    undefined field3925_0x912c;
    undefined field3926_0x912d;
    undefined field3927_0x912e;
    undefined field3928_0x912f;
    undefined field3929_0x9130;
    undefined field3930_0x9131;
    undefined field3931_0x9132;
    undefined field3932_0x9133;
    undefined field3933_0x9134;
    undefined field3934_0x9135;
    undefined field3935_0x9136;
    undefined field3936_0x9137;
    undefined field3937_0x9138;
    undefined field3938_0x9139;
    undefined field3939_0x913a;
    undefined field3940_0x913b;
    undefined field3941_0x913c;
    undefined field3942_0x913d;
    undefined field3943_0x913e;
    undefined field3944_0x913f;
    undefined field3945_0x9140;
    undefined field3946_0x9141;
    undefined field3947_0x9142;
    undefined field3948_0x9143;
    undefined field3949_0x9144;
    undefined field3950_0x9145;
    undefined field3951_0x9146;
    undefined field3952_0x9147;
    undefined field3953_0x9148;
    undefined field3954_0x9149;
    undefined field3955_0x914a;
    undefined field3956_0x914b;
    undefined field3957_0x914c;
    undefined field3958_0x914d;
    undefined field3959_0x914e;
    undefined field3960_0x914f;
    undefined field3961_0x9150;
    undefined field3962_0x9151;
    undefined field3963_0x9152;
    undefined field3964_0x9153;
    undefined field3965_0x9154;
    undefined field3966_0x9155;
    undefined field3967_0x9156;
    undefined field3968_0x9157;
    undefined field3969_0x9158;
    undefined field3970_0x9159;
    undefined field3971_0x915a;
    undefined field3972_0x915b;
    undefined field3973_0x915c;
    undefined field3974_0x915d;
    undefined field3975_0x915e;
    undefined field3976_0x915f;
    undefined field3977_0x9160;
    undefined field3978_0x9161;
    undefined field3979_0x9162;
    undefined field3980_0x9163;
    undefined field3981_0x9164;
    undefined field3982_0x9165;
    undefined field3983_0x9166;
    undefined field3984_0x9167;
    undefined field3985_0x9168;
    undefined field3986_0x9169;
    undefined field3987_0x916a;
    undefined field3988_0x916b;
    undefined field3989_0x916c;
    undefined field3990_0x916d;
    undefined field3991_0x916e;
    undefined field3992_0x916f;
    undefined field3993_0x9170;
    undefined field3994_0x9171;
    undefined field3995_0x9172;
    undefined field3996_0x9173;
    undefined field3997_0x9174;
    undefined field3998_0x9175;
    undefined field3999_0x9176;
    undefined field4000_0x9177;
    undefined field4001_0x9178;
    undefined field4002_0x9179;
    undefined field4003_0x917a;
    undefined field4004_0x917b;
    undefined field4005_0x917c;
    undefined field4006_0x917d;
    undefined field4007_0x917e;
    undefined field4008_0x917f;
    undefined field4009_0x9180;
    undefined field4010_0x9181;
    undefined field4011_0x9182;
    undefined field4012_0x9183;
    undefined field4013_0x9184;
    undefined field4014_0x9185;
    undefined field4015_0x9186;
    undefined field4016_0x9187;
    undefined field4017_0x9188;
    undefined field4018_0x9189;
    undefined field4019_0x918a;
    undefined field4020_0x918b;
    undefined field4021_0x918c;
    undefined field4022_0x918d;
    undefined field4023_0x918e;
    undefined field4024_0x918f;
    undefined field4025_0x9190;
    undefined field4026_0x9191;
    undefined field4027_0x9192;
    undefined field4028_0x9193;
    undefined field4029_0x9194;
    undefined field4030_0x9195;
    undefined field4031_0x9196;
    undefined field4032_0x9197;
    undefined field4033_0x9198;
    undefined field4034_0x9199;
    undefined field4035_0x919a;
    undefined field4036_0x919b;
    undefined field4037_0x919c;
    undefined field4038_0x919d;
    undefined field4039_0x919e;
    undefined field4040_0x919f;
    undefined field4041_0x91a0;
    undefined field4042_0x91a1;
    undefined field4043_0x91a2;
    undefined field4044_0x91a3;
    undefined field4045_0x91a4;
    undefined field4046_0x91a5;
    undefined field4047_0x91a6;
    undefined field4048_0x91a7;
    undefined field4049_0x91a8;
    undefined field4050_0x91a9;
    undefined field4051_0x91aa;
    undefined field4052_0x91ab;
    undefined field4053_0x91ac;
    undefined field4054_0x91ad;
    undefined field4055_0x91ae;
    undefined field4056_0x91af;
    undefined field4057_0x91b0;
    undefined field4058_0x91b1;
    undefined field4059_0x91b2;
    undefined field4060_0x91b3;
    undefined field4061_0x91b4;
    undefined field4062_0x91b5;
    undefined field4063_0x91b6;
    undefined field4064_0x91b7;
    undefined field4065_0x91b8;
    undefined field4066_0x91b9;
    undefined field4067_0x91ba;
    undefined field4068_0x91bb;
    undefined field4069_0x91bc;
    undefined field4070_0x91bd;
    undefined field4071_0x91be;
    undefined field4072_0x91bf;
    undefined field4073_0x91c0;
    undefined field4074_0x91c1;
    undefined field4075_0x91c2;
    undefined field4076_0x91c3;
    undefined field4077_0x91c4;
    undefined field4078_0x91c5;
    undefined field4079_0x91c6;
    undefined field4080_0x91c7;
    undefined field4081_0x91c8;
    undefined field4082_0x91c9;
    undefined field4083_0x91ca;
    undefined field4084_0x91cb;
    undefined field4085_0x91cc;
    undefined field4086_0x91cd;
    undefined field4087_0x91ce;
    undefined field4088_0x91cf;
    undefined field4089_0x91d0;
    undefined field4090_0x91d1;
    undefined field4091_0x91d2;
    undefined field4092_0x91d3;
    undefined field4093_0x91d4;
    undefined field4094_0x91d5;
    undefined field4095_0x91d6;
    undefined field4096_0x91d7;
    undefined field4097_0x91d8;
    undefined field4098_0x91d9;
    undefined field4099_0x91da;
    undefined field4100_0x91db;
    undefined field4101_0x91dc;
    undefined field4102_0x91dd;
    undefined field4103_0x91de;
    undefined field4104_0x91df;
    undefined field4105_0x91e0;
    undefined field4106_0x91e1;
    undefined field4107_0x91e2;
    undefined field4108_0x91e3;
    undefined field4109_0x91e4;
    undefined field4110_0x91e5;
    undefined field4111_0x91e6;
    undefined field4112_0x91e7;
    undefined field4113_0x91e8;
    undefined field4114_0x91e9;
    undefined field4115_0x91ea;
    undefined field4116_0x91eb;
    undefined field4117_0x91ec;
    undefined field4118_0x91ed;
    undefined field4119_0x91ee;
    undefined field4120_0x91ef;
    undefined field4121_0x91f0;
    undefined field4122_0x91f1;
    undefined field4123_0x91f2;
    undefined field4124_0x91f3;
    undefined field4125_0x91f4;
    undefined field4126_0x91f5;
    undefined field4127_0x91f6;
    undefined field4128_0x91f7;
    undefined field4129_0x91f8;
    undefined field4130_0x91f9;
    undefined field4131_0x91fa;
    undefined field4132_0x91fb;
    undefined field4133_0x91fc;
    undefined field4134_0x91fd;
    undefined field4135_0x91fe;
    undefined field4136_0x91ff;
    undefined field4137_0x9200;
    undefined field4138_0x9201;
    undefined field4139_0x9202;
    undefined field4140_0x9203;
    undefined field4141_0x9204;
    undefined field4142_0x9205;
    undefined field4143_0x9206;
    undefined field4144_0x9207;
    undefined field4145_0x9208;
    undefined field4146_0x9209;
    undefined field4147_0x920a;
    undefined field4148_0x920b;
    undefined field4149_0x920c;
    undefined field4150_0x920d;
    undefined field4151_0x920e;
    undefined field4152_0x920f;
    undefined field4153_0x9210;
    undefined field4154_0x9211;
    undefined field4155_0x9212;
    undefined field4156_0x9213;
    undefined field4157_0x9214;
    undefined field4158_0x9215;
    undefined field4159_0x9216;
    undefined field4160_0x9217;
    undefined field4161_0x9218;
    undefined field4162_0x9219;
    undefined field4163_0x921a;
    undefined field4164_0x921b;
    undefined field4165_0x921c;
    undefined field4166_0x921d;
    undefined field4167_0x921e;
    undefined field4168_0x921f;
    undefined field4169_0x9220;
    undefined field4170_0x9221;
    undefined field4171_0x9222;
    undefined field4172_0x9223;
    undefined field4173_0x9224;
    undefined field4174_0x9225;
    undefined field4175_0x9226;
    undefined field4176_0x9227;
    undefined field4177_0x9228;
    undefined field4178_0x9229;
    undefined field4179_0x922a;
    undefined field4180_0x922b;
    undefined field4181_0x922c;
    undefined field4182_0x922d;
    undefined field4183_0x922e;
    undefined field4184_0x922f;
    undefined field4185_0x9230;
    undefined field4186_0x9231;
    undefined field4187_0x9232;
    undefined field4188_0x9233;
    undefined field4189_0x9234;
    undefined field4190_0x9235;
    undefined field4191_0x9236;
    undefined field4192_0x9237;
    undefined field4193_0x9238;
    undefined field4194_0x9239;
    undefined field4195_0x923a;
    undefined field4196_0x923b;
    undefined field4197_0x923c;
    undefined field4198_0x923d;
    undefined field4199_0x923e;
    undefined field4200_0x923f;
    undefined field4201_0x9240;
    undefined field4202_0x9241;
    undefined field4203_0x9242;
    undefined field4204_0x9243;
    undefined field4205_0x9244;
    undefined field4206_0x9245;
    undefined field4207_0x9246;
    undefined field4208_0x9247;
    undefined field4209_0x9248;
    undefined field4210_0x9249;
    undefined field4211_0x924a;
    undefined field4212_0x924b;
    undefined field4213_0x924c;
    undefined field4214_0x924d;
    undefined field4215_0x924e;
    undefined field4216_0x924f;
    undefined field4217_0x9250;
    undefined field4218_0x9251;
    undefined field4219_0x9252;
    undefined field4220_0x9253;
    undefined field4221_0x9254;
    undefined field4222_0x9255;
    undefined field4223_0x9256;
    undefined field4224_0x9257;
    undefined field4225_0x9258;
    undefined field4226_0x9259;
    undefined field4227_0x925a;
    undefined field4228_0x925b;
    undefined field4229_0x925c;
    undefined field4230_0x925d;
    undefined field4231_0x925e;
    undefined field4232_0x925f;
    undefined field4233_0x9260;
    undefined field4234_0x9261;
    undefined field4235_0x9262;
    undefined field4236_0x9263;
    undefined field4237_0x9264;
    undefined field4238_0x9265;
    undefined field4239_0x9266;
    undefined field4240_0x9267;
    undefined field4241_0x9268;
    undefined field4242_0x9269;
    undefined field4243_0x926a;
    undefined field4244_0x926b;
    undefined field4245_0x926c;
    undefined field4246_0x926d;
    undefined field4247_0x926e;
    undefined field4248_0x926f;
    undefined field4249_0x9270;
    undefined field4250_0x9271;
    undefined field4251_0x9272;
    undefined field4252_0x9273;
    undefined field4253_0x9274;
    undefined field4254_0x9275;
    undefined field4255_0x9276;
    undefined field4256_0x9277;
    undefined field4257_0x9278;
    undefined field4258_0x9279;
    undefined field4259_0x927a;
    undefined field4260_0x927b;
    undefined field4261_0x927c;
    undefined field4262_0x927d;
    undefined field4263_0x927e;
    undefined field4264_0x927f;
    undefined field4265_0x9280;
    undefined field4266_0x9281;
    undefined field4267_0x9282;
    undefined field4268_0x9283;
    undefined field4269_0x9284;
    undefined field4270_0x9285;
    undefined field4271_0x9286;
    undefined field4272_0x9287;
    undefined field4273_0x9288;
    undefined field4274_0x9289;
    undefined field4275_0x928a;
    undefined field4276_0x928b;
    undefined field4277_0x928c;
    undefined field4278_0x928d;
    undefined field4279_0x928e;
    undefined field4280_0x928f;
    undefined field4281_0x9290;
    undefined field4282_0x9291;
    undefined field4283_0x9292;
    undefined field4284_0x9293;
    undefined field4285_0x9294;
    undefined field4286_0x9295;
    undefined field4287_0x9296;
    undefined field4288_0x9297;
    undefined field4289_0x9298;
    undefined field4290_0x9299;
    undefined field4291_0x929a;
    undefined field4292_0x929b;
    undefined field4293_0x929c;
    undefined field4294_0x929d;
    undefined field4295_0x929e;
    undefined field4296_0x929f;
    undefined field4297_0x92a0;
    undefined field4298_0x92a1;
    undefined field4299_0x92a2;
    undefined field4300_0x92a3;
    undefined field4301_0x92a4;
    undefined field4302_0x92a5;
    undefined field4303_0x92a6;
    undefined field4304_0x92a7;
    undefined field4305_0x92a8;
    undefined field4306_0x92a9;
    undefined field4307_0x92aa;
    undefined field4308_0x92ab;
    undefined field4309_0x92ac;
    undefined field4310_0x92ad;
    undefined field4311_0x92ae;
    undefined field4312_0x92af;
    undefined field4313_0x92b0;
    undefined field4314_0x92b1;
    undefined field4315_0x92b2;
    undefined field4316_0x92b3;
    undefined field4317_0x92b4;
    undefined field4318_0x92b5;
    undefined field4319_0x92b6;
    undefined field4320_0x92b7;
    undefined field4321_0x92b8;
    undefined field4322_0x92b9;
    undefined field4323_0x92ba;
    undefined field4324_0x92bb;
    undefined field4325_0x92bc;
    undefined field4326_0x92bd;
    undefined field4327_0x92be;
    undefined field4328_0x92bf;
    undefined field4329_0x92c0;
    undefined field4330_0x92c1;
    undefined field4331_0x92c2;
    undefined field4332_0x92c3;
    undefined field4333_0x92c4;
    undefined field4334_0x92c5;
    undefined field4335_0x92c6;
    undefined field4336_0x92c7;
    undefined field4337_0x92c8;
    undefined field4338_0x92c9;
    undefined field4339_0x92ca;
    undefined field4340_0x92cb;
    undefined field4341_0x92cc;
    undefined field4342_0x92cd;
    undefined field4343_0x92ce;
    undefined field4344_0x92cf;
    undefined field4345_0x92d0;
    undefined field4346_0x92d1;
    undefined field4347_0x92d2;
    undefined field4348_0x92d3;
    undefined field4349_0x92d4;
    undefined field4350_0x92d5;
    undefined field4351_0x92d6;
    undefined field4352_0x92d7;
    undefined field4353_0x92d8;
    undefined field4354_0x92d9;
    undefined field4355_0x92da;
    undefined field4356_0x92db;
    undefined field4357_0x92dc;
    undefined field4358_0x92dd;
    undefined field4359_0x92de;
    undefined field4360_0x92df;
    undefined field4361_0x92e0;
    undefined field4362_0x92e1;
    undefined field4363_0x92e2;
    undefined field4364_0x92e3;
    undefined field4365_0x92e4;
    undefined field4366_0x92e5;
    undefined field4367_0x92e6;
    undefined field4368_0x92e7;
    undefined field4369_0x92e8;
    undefined field4370_0x92e9;
    undefined field4371_0x92ea;
    undefined field4372_0x92eb;
    undefined field4373_0x92ec;
    undefined field4374_0x92ed;
    undefined field4375_0x92ee;
    undefined field4376_0x92ef;
    undefined field4377_0x92f0;
    undefined field4378_0x92f1;
    undefined field4379_0x92f2;
    undefined field4380_0x92f3;
    undefined field4381_0x92f4;
    undefined field4382_0x92f5;
    undefined field4383_0x92f6;
    undefined field4384_0x92f7;
    undefined field4385_0x92f8;
    undefined field4386_0x92f9;
    undefined field4387_0x92fa;
    undefined field4388_0x92fb;
    undefined field4389_0x92fc;
    undefined field4390_0x92fd;
    undefined field4391_0x92fe;
    undefined field4392_0x92ff;
    undefined field4393_0x9300;
    undefined field4394_0x9301;
    undefined field4395_0x9302;
    undefined field4396_0x9303;
    undefined field4397_0x9304;
    undefined field4398_0x9305;
    undefined field4399_0x9306;
    undefined field4400_0x9307;
    undefined field4401_0x9308;
    undefined field4402_0x9309;
    undefined field4403_0x930a;
    undefined field4404_0x930b;
    undefined field4405_0x930c;
    undefined field4406_0x930d;
    undefined field4407_0x930e;
    undefined field4408_0x930f;
    undefined field4409_0x9310;
    undefined field4410_0x9311;
    undefined field4411_0x9312;
    undefined field4412_0x9313;
    undefined field4413_0x9314;
    undefined field4414_0x9315;
    undefined field4415_0x9316;
    undefined field4416_0x9317;
    undefined field4417_0x9318;
    undefined field4418_0x9319;
    undefined field4419_0x931a;
    undefined field4420_0x931b;
    undefined field4421_0x931c;
    undefined field4422_0x931d;
    undefined field4423_0x931e;
    undefined field4424_0x931f;
    undefined field4425_0x9320;
    undefined field4426_0x9321;
    undefined field4427_0x9322;
    undefined field4428_0x9323;
    undefined field4429_0x9324;
    undefined field4430_0x9325;
    undefined field4431_0x9326;
    undefined field4432_0x9327;
    undefined field4433_0x9328;
    undefined field4434_0x9329;
    undefined field4435_0x932a;
    undefined field4436_0x932b;
    undefined field4437_0x932c;
    undefined field4438_0x932d;
    undefined field4439_0x932e;
    undefined field4440_0x932f;
    undefined field4441_0x9330;
    undefined field4442_0x9331;
    undefined field4443_0x9332;
    undefined field4444_0x9333;
    undefined field4445_0x9334;
    undefined field4446_0x9335;
    undefined field4447_0x9336;
    undefined field4448_0x9337;
    undefined field4449_0x9338;
    undefined field4450_0x9339;
    undefined field4451_0x933a;
    undefined field4452_0x933b;
    undefined field4453_0x933c;
    undefined field4454_0x933d;
    undefined field4455_0x933e;
    undefined field4456_0x933f;
    undefined field4457_0x9340;
    undefined field4458_0x9341;
    undefined field4459_0x9342;
    undefined field4460_0x9343;
    undefined field4461_0x9344;
    undefined field4462_0x9345;
    undefined field4463_0x9346;
    undefined field4464_0x9347;
    undefined field4465_0x9348;
    undefined field4466_0x9349;
    undefined field4467_0x934a;
    undefined field4468_0x934b;
    undefined field4469_0x934c;
    undefined field4470_0x934d;
    undefined field4471_0x934e;
    undefined field4472_0x934f;
    undefined field4473_0x9350;
    undefined field4474_0x9351;
    undefined field4475_0x9352;
    undefined field4476_0x9353;
    undefined field4477_0x9354;
    undefined field4478_0x9355;
    undefined field4479_0x9356;
    undefined field4480_0x9357;
    undefined field4481_0x9358;
    undefined field4482_0x9359;
    undefined field4483_0x935a;
    undefined field4484_0x935b;
    undefined field4485_0x935c;
    undefined field4486_0x935d;
    undefined field4487_0x935e;
    undefined field4488_0x935f;
    undefined field4489_0x9360;
    undefined field4490_0x9361;
    undefined field4491_0x9362;
    undefined field4492_0x9363;
    undefined field4493_0x9364;
    undefined field4494_0x9365;
    undefined field4495_0x9366;
    undefined field4496_0x9367;
    undefined field4497_0x9368;
    undefined field4498_0x9369;
    undefined field4499_0x936a;
    undefined field4500_0x936b;
    undefined field4501_0x936c;
    undefined field4502_0x936d;
    undefined field4503_0x936e;
    undefined field4504_0x936f;
    undefined field4505_0x9370;
    undefined field4506_0x9371;
    undefined field4507_0x9372;
    undefined field4508_0x9373;
    undefined field4509_0x9374;
    undefined field4510_0x9375;
    undefined field4511_0x9376;
    undefined field4512_0x9377;
    undefined field4513_0x9378;
    undefined field4514_0x9379;
    undefined field4515_0x937a;
    undefined field4516_0x937b;
    undefined field4517_0x937c;
    undefined field4518_0x937d;
    undefined field4519_0x937e;
    undefined field4520_0x937f;
    undefined field4521_0x9380;
    undefined field4522_0x9381;
    undefined field4523_0x9382;
    undefined field4524_0x9383;
    undefined field4525_0x9384;
    undefined field4526_0x9385;
    undefined field4527_0x9386;
    undefined field4528_0x9387;
    undefined field4529_0x9388;
    undefined field4530_0x9389;
    undefined field4531_0x938a;
    undefined field4532_0x938b;
    undefined field4533_0x938c;
    undefined field4534_0x938d;
    undefined field4535_0x938e;
    undefined field4536_0x938f;
    undefined field4537_0x9390;
    undefined field4538_0x9391;
    undefined field4539_0x9392;
    undefined field4540_0x9393;
    undefined field4541_0x9394;
    undefined field4542_0x9395;
    undefined field4543_0x9396;
    undefined field4544_0x9397;
    undefined field4545_0x9398;
    undefined field4546_0x9399;
    undefined field4547_0x939a;
    undefined field4548_0x939b;
    undefined field4549_0x939c;
    undefined field4550_0x939d;
    undefined field4551_0x939e;
    undefined field4552_0x939f;
    undefined field4553_0x93a0;
    undefined field4554_0x93a1;
    undefined field4555_0x93a2;
    undefined field4556_0x93a3;
    undefined field4557_0x93a4;
    undefined field4558_0x93a5;
    undefined field4559_0x93a6;
    undefined field4560_0x93a7;
    undefined field4561_0x93a8;
    undefined field4562_0x93a9;
    undefined field4563_0x93aa;
    undefined field4564_0x93ab;
    undefined field4565_0x93ac;
    undefined field4566_0x93ad;
    undefined field4567_0x93ae;
    undefined field4568_0x93af;
    undefined field4569_0x93b0;
    undefined field4570_0x93b1;
    undefined field4571_0x93b2;
    undefined field4572_0x93b3;
    undefined field4573_0x93b4;
    undefined field4574_0x93b5;
    undefined field4575_0x93b6;
    undefined field4576_0x93b7;
    undefined field4577_0x93b8;
    undefined field4578_0x93b9;
    undefined field4579_0x93ba;
    undefined field4580_0x93bb;
    undefined field4581_0x93bc;
    undefined field4582_0x93bd;
    undefined field4583_0x93be;
    undefined field4584_0x93bf;
    undefined field4585_0x93c0;
    undefined field4586_0x93c1;
    undefined field4587_0x93c2;
    undefined field4588_0x93c3;
    undefined field4589_0x93c4;
    undefined field4590_0x93c5;
    undefined field4591_0x93c6;
    undefined field4592_0x93c7;
    undefined field4593_0x93c8;
    undefined field4594_0x93c9;
    undefined field4595_0x93ca;
    undefined field4596_0x93cb;
    undefined field4597_0x93cc;
    undefined field4598_0x93cd;
    undefined field4599_0x93ce;
    undefined field4600_0x93cf;
    undefined field4601_0x93d0;
    undefined field4602_0x93d1;
    undefined field4603_0x93d2;
    undefined field4604_0x93d3;
    undefined field4605_0x93d4;
    undefined field4606_0x93d5;
    undefined field4607_0x93d6;
    undefined field4608_0x93d7;
    undefined field4609_0x93d8;
    undefined field4610_0x93d9;
    undefined field4611_0x93da;
    undefined field4612_0x93db;
    undefined field4613_0x93dc;
    undefined field4614_0x93dd;
    undefined field4615_0x93de;
    undefined field4616_0x93df;
    undefined field4617_0x93e0;
    undefined field4618_0x93e1;
    undefined field4619_0x93e2;
    undefined field4620_0x93e3;
    undefined field4621_0x93e4;
    undefined field4622_0x93e5;
    undefined field4623_0x93e6;
    undefined field4624_0x93e7;
    undefined field4625_0x93e8;
    undefined field4626_0x93e9;
    undefined field4627_0x93ea;
    undefined field4628_0x93eb;
    undefined field4629_0x93ec;
    undefined field4630_0x93ed;
    undefined field4631_0x93ee;
    undefined field4632_0x93ef;
    undefined field4633_0x93f0;
    undefined field4634_0x93f1;
    undefined field4635_0x93f2;
    undefined field4636_0x93f3;
    undefined field4637_0x93f4;
    undefined field4638_0x93f5;
    undefined field4639_0x93f6;
    undefined field4640_0x93f7;
    undefined field4641_0x93f8;
    undefined field4642_0x93f9;
    undefined field4643_0x93fa;
    undefined field4644_0x93fb;
    undefined field4645_0x93fc;
    undefined field4646_0x93fd;
    undefined field4647_0x93fe;
    undefined field4648_0x93ff;
    undefined field4649_0x9400;
    undefined field4650_0x9401;
    undefined field4651_0x9402;
    undefined field4652_0x9403;
    undefined field4653_0x9404;
    undefined field4654_0x9405;
    undefined field4655_0x9406;
    undefined field4656_0x9407;
    undefined field4657_0x9408;
    undefined field4658_0x9409;
    undefined field4659_0x940a;
    undefined field4660_0x940b;
    undefined field4661_0x940c;
    undefined field4662_0x940d;
    undefined field4663_0x940e;
    undefined field4664_0x940f;
    undefined field4665_0x9410;
    undefined field4666_0x9411;
    undefined field4667_0x9412;
    undefined field4668_0x9413;
    undefined field4669_0x9414;
    undefined field4670_0x9415;
    undefined field4671_0x9416;
    undefined field4672_0x9417;
    undefined field4673_0x9418;
    undefined field4674_0x9419;
    undefined field4675_0x941a;
    undefined field4676_0x941b;
    undefined field4677_0x941c;
    undefined field4678_0x941d;
    undefined field4679_0x941e;
    undefined field4680_0x941f;
    undefined field4681_0x9420;
    undefined field4682_0x9421;
    undefined field4683_0x9422;
    undefined field4684_0x9423;
    undefined field4685_0x9424;
    undefined field4686_0x9425;
    undefined field4687_0x9426;
    undefined field4688_0x9427;
    undefined field4689_0x9428;
    undefined field4690_0x9429;
    undefined field4691_0x942a;
    undefined field4692_0x942b;
    undefined field4693_0x942c;
    undefined field4694_0x942d;
    undefined field4695_0x942e;
    undefined field4696_0x942f;
    undefined field4697_0x9430;
    undefined field4698_0x9431;
    undefined field4699_0x9432;
    undefined field4700_0x9433;
    undefined field4701_0x9434;
    undefined field4702_0x9435;
    undefined field4703_0x9436;
    undefined field4704_0x9437;
    undefined field4705_0x9438;
    undefined field4706_0x9439;
    undefined field4707_0x943a;
    undefined field4708_0x943b;
    undefined field4709_0x943c;
    undefined field4710_0x943d;
    undefined field4711_0x943e;
    undefined field4712_0x943f;
    undefined field4713_0x9440;
    undefined field4714_0x9441;
    undefined field4715_0x9442;
    undefined field4716_0x9443;
    undefined field4717_0x9444;
    undefined field4718_0x9445;
    undefined field4719_0x9446;
    undefined field4720_0x9447;
    undefined field4721_0x9448;
    undefined field4722_0x9449;
    undefined field4723_0x944a;
    undefined field4724_0x944b;
    undefined field4725_0x944c;
    undefined field4726_0x944d;
    undefined field4727_0x944e;
    undefined field4728_0x944f;
    undefined field4729_0x9450;
    undefined field4730_0x9451;
    undefined field4731_0x9452;
    undefined field4732_0x9453;
    undefined field4733_0x9454;
    undefined field4734_0x9455;
    undefined field4735_0x9456;
    undefined field4736_0x9457;
    undefined field4737_0x9458;
    undefined field4738_0x9459;
    undefined field4739_0x945a;
    undefined field4740_0x945b;
    undefined field4741_0x945c;
    undefined field4742_0x945d;
    undefined field4743_0x945e;
    undefined field4744_0x945f;
    undefined field4745_0x9460;
    undefined field4746_0x9461;
    undefined field4747_0x9462;
    undefined field4748_0x9463;
    undefined field4749_0x9464;
    undefined field4750_0x9465;
    undefined field4751_0x9466;
    undefined field4752_0x9467;
    undefined field4753_0x9468;
    undefined field4754_0x9469;
    undefined field4755_0x946a;
    undefined field4756_0x946b;
    undefined field4757_0x946c;
    undefined field4758_0x946d;
    undefined field4759_0x946e;
    undefined field4760_0x946f;
    undefined field4761_0x9470;
    undefined field4762_0x9471;
    undefined field4763_0x9472;
    undefined field4764_0x9473;
    undefined field4765_0x9474;
    undefined field4766_0x9475;
    undefined field4767_0x9476;
    undefined field4768_0x9477;
    undefined field4769_0x9478;
    undefined field4770_0x9479;
    undefined field4771_0x947a;
    undefined field4772_0x947b;
    undefined field4773_0x947c;
    undefined field4774_0x947d;
    undefined field4775_0x947e;
    undefined field4776_0x947f;
    undefined field4777_0x9480;
    undefined field4778_0x9481;
    undefined field4779_0x9482;
    undefined field4780_0x9483;
    undefined field4781_0x9484;
    undefined field4782_0x9485;
    undefined field4783_0x9486;
    undefined field4784_0x9487;
    undefined field4785_0x9488;
    undefined field4786_0x9489;
    undefined field4787_0x948a;
    undefined field4788_0x948b;
    undefined field4789_0x948c;
    undefined field4790_0x948d;
    undefined field4791_0x948e;
    undefined field4792_0x948f;
    undefined field4793_0x9490;
    undefined field4794_0x9491;
    undefined field4795_0x9492;
    undefined field4796_0x9493;
    undefined field4797_0x9494;
    undefined field4798_0x9495;
    undefined field4799_0x9496;
    undefined field4800_0x9497;
    undefined field4801_0x9498;
    undefined field4802_0x9499;
    undefined field4803_0x949a;
    undefined field4804_0x949b;
    undefined field4805_0x949c;
    undefined field4806_0x949d;
    undefined field4807_0x949e;
    undefined field4808_0x949f;
    undefined field4809_0x94a0;
    undefined field4810_0x94a1;
    undefined field4811_0x94a2;
    undefined field4812_0x94a3;
    undefined field4813_0x94a4;
    undefined field4814_0x94a5;
    undefined field4815_0x94a6;
    undefined field4816_0x94a7;
    undefined field4817_0x94a8;
    undefined field4818_0x94a9;
    undefined field4819_0x94aa;
    undefined field4820_0x94ab;
    undefined field4821_0x94ac;
    undefined field4822_0x94ad;
    undefined field4823_0x94ae;
    undefined field4824_0x94af;
    undefined field4825_0x94b0;
    undefined field4826_0x94b1;
    undefined field4827_0x94b2;
    undefined field4828_0x94b3;
    undefined field4829_0x94b4;
    undefined field4830_0x94b5;
    undefined field4831_0x94b6;
    undefined field4832_0x94b7;
    undefined field4833_0x94b8;
    undefined field4834_0x94b9;
    undefined field4835_0x94ba;
    undefined field4836_0x94bb;
    undefined field4837_0x94bc;
    undefined field4838_0x94bd;
    undefined field4839_0x94be;
    undefined field4840_0x94bf;
    undefined field4841_0x94c0;
    undefined field4842_0x94c1;
    undefined field4843_0x94c2;
    undefined field4844_0x94c3;
    undefined field4845_0x94c4;
    undefined field4846_0x94c5;
    undefined field4847_0x94c6;
    undefined field4848_0x94c7;
    undefined field4849_0x94c8;
    undefined field4850_0x94c9;
    undefined field4851_0x94ca;
    undefined field4852_0x94cb;
    undefined field4853_0x94cc;
    undefined field4854_0x94cd;
    undefined field4855_0x94ce;
    undefined field4856_0x94cf;
    undefined field4857_0x94d0;
    undefined field4858_0x94d1;
    undefined field4859_0x94d2;
    undefined field4860_0x94d3;
    undefined field4861_0x94d4;
    undefined field4862_0x94d5;
    undefined field4863_0x94d6;
    undefined field4864_0x94d7;
    undefined field4865_0x94d8;
    undefined field4866_0x94d9;
    undefined field4867_0x94da;
    undefined field4868_0x94db;
    undefined field4869_0x94dc;
    undefined field4870_0x94dd;
    undefined field4871_0x94de;
    undefined field4872_0x94df;
    undefined field4873_0x94e0;
    undefined field4874_0x94e1;
    undefined field4875_0x94e2;
    undefined field4876_0x94e3;
    undefined field4877_0x94e4;
    undefined field4878_0x94e5;
    undefined field4879_0x94e6;
    undefined field4880_0x94e7;
    undefined field4881_0x94e8;
    undefined field4882_0x94e9;
    undefined field4883_0x94ea;
    undefined field4884_0x94eb;
    undefined field4885_0x94ec;
    undefined field4886_0x94ed;
    undefined field4887_0x94ee;
    undefined field4888_0x94ef;
    undefined field4889_0x94f0;
    undefined field4890_0x94f1;
    undefined field4891_0x94f2;
    undefined field4892_0x94f3;
    undefined field4893_0x94f4;
    undefined field4894_0x94f5;
    undefined field4895_0x94f6;
    undefined field4896_0x94f7;
    undefined field4897_0x94f8;
    undefined field4898_0x94f9;
    undefined field4899_0x94fa;
    undefined field4900_0x94fb;
    undefined field4901_0x94fc;
    undefined field4902_0x94fd;
    undefined field4903_0x94fe;
    undefined field4904_0x94ff;
    undefined field4905_0x9500;
    undefined field4906_0x9501;
    undefined field4907_0x9502;
    undefined field4908_0x9503;
    undefined field4909_0x9504;
    undefined field4910_0x9505;
    undefined field4911_0x9506;
    undefined field4912_0x9507;
    undefined field4913_0x9508;
    undefined field4914_0x9509;
    undefined field4915_0x950a;
    undefined field4916_0x950b;
    undefined field4917_0x950c;
    undefined field4918_0x950d;
    undefined field4919_0x950e;
    undefined field4920_0x950f;
    undefined field4921_0x9510;
    undefined field4922_0x9511;
    undefined field4923_0x9512;
    undefined field4924_0x9513;
    undefined field4925_0x9514;
    undefined field4926_0x9515;
    undefined field4927_0x9516;
    undefined field4928_0x9517;
    undefined field4929_0x9518;
    undefined field4930_0x9519;
    undefined field4931_0x951a;
    undefined field4932_0x951b;
    undefined field4933_0x951c;
    undefined field4934_0x951d;
    undefined field4935_0x951e;
    undefined field4936_0x951f;
    undefined field4937_0x9520;
    undefined field4938_0x9521;
    undefined field4939_0x9522;
    undefined field4940_0x9523;
    undefined field4941_0x9524;
    undefined field4942_0x9525;
    undefined field4943_0x9526;
    undefined field4944_0x9527;
    undefined field4945_0x9528;
    undefined field4946_0x9529;
    undefined field4947_0x952a;
    undefined field4948_0x952b;
    undefined field4949_0x952c;
    undefined field4950_0x952d;
    undefined field4951_0x952e;
    undefined field4952_0x952f;
    undefined field4953_0x9530;
    undefined field4954_0x9531;
    undefined field4955_0x9532;
    undefined field4956_0x9533;
    undefined field4957_0x9534;
    undefined field4958_0x9535;
    undefined field4959_0x9536;
    undefined field4960_0x9537;
    undefined field4961_0x9538;
    undefined field4962_0x9539;
    undefined field4963_0x953a;
    undefined field4964_0x953b;
    undefined field4965_0x953c;
    undefined field4966_0x953d;
    undefined field4967_0x953e;
    undefined field4968_0x953f;
    undefined field4969_0x9540;
    undefined field4970_0x9541;
    undefined field4971_0x9542;
    undefined field4972_0x9543;
    undefined field4973_0x9544;
    undefined field4974_0x9545;
    undefined field4975_0x9546;
    undefined field4976_0x9547;
    undefined field4977_0x9548;
    undefined field4978_0x9549;
    undefined field4979_0x954a;
    undefined field4980_0x954b;
    undefined field4981_0x954c;
    undefined field4982_0x954d;
    undefined field4983_0x954e;
    undefined field4984_0x954f;
    undefined field4985_0x9550;
    undefined field4986_0x9551;
    undefined field4987_0x9552;
    undefined field4988_0x9553;
    undefined field4989_0x9554;
    undefined field4990_0x9555;
    undefined field4991_0x9556;
    undefined field4992_0x9557;
    undefined field4993_0x9558;
    undefined field4994_0x9559;
    undefined field4995_0x955a;
    undefined field4996_0x955b;
    undefined field4997_0x955c;
    undefined field4998_0x955d;
    undefined field4999_0x955e;
    undefined field5000_0x955f;
    undefined field5001_0x9560;
    undefined field5002_0x9561;
    undefined field5003_0x9562;
    undefined field5004_0x9563;
    undefined field5005_0x9564;
    undefined field5006_0x9565;
    undefined field5007_0x9566;
    undefined field5008_0x9567;
    undefined field5009_0x9568;
    undefined field5010_0x9569;
    undefined field5011_0x956a;
    undefined field5012_0x956b;
    undefined field5013_0x956c;
    undefined field5014_0x956d;
    undefined field5015_0x956e;
    undefined field5016_0x956f;
    undefined field5017_0x9570;
    undefined field5018_0x9571;
    undefined field5019_0x9572;
    undefined field5020_0x9573;
    undefined field5021_0x9574;
    undefined field5022_0x9575;
    undefined field5023_0x9576;
    undefined field5024_0x9577;
    undefined field5025_0x9578;
    undefined field5026_0x9579;
    undefined field5027_0x957a;
    undefined field5028_0x957b;
    undefined field5029_0x957c;
    undefined field5030_0x957d;
    undefined field5031_0x957e;
    undefined field5032_0x957f;
    undefined field5033_0x9580;
    undefined field5034_0x9581;
    undefined field5035_0x9582;
    undefined field5036_0x9583;
    undefined field5037_0x9584;
    undefined field5038_0x9585;
    undefined field5039_0x9586;
    undefined field5040_0x9587;
    undefined field5041_0x9588;
    undefined field5042_0x9589;
    undefined field5043_0x958a;
    undefined field5044_0x958b;
    undefined field5045_0x958c;
    undefined field5046_0x958d;
    undefined field5047_0x958e;
    undefined field5048_0x958f;
    undefined field5049_0x9590;
    undefined field5050_0x9591;
    undefined field5051_0x9592;
    undefined field5052_0x9593;
    undefined field5053_0x9594;
    undefined field5054_0x9595;
    undefined field5055_0x9596;
    undefined field5056_0x9597;
    undefined field5057_0x9598;
    undefined field5058_0x9599;
    undefined field5059_0x959a;
    undefined field5060_0x959b;
    undefined field5061_0x959c;
    undefined field5062_0x959d;
    undefined field5063_0x959e;
    undefined field5064_0x959f;
    undefined field5065_0x95a0;
    undefined field5066_0x95a1;
    undefined field5067_0x95a2;
    undefined field5068_0x95a3;
    undefined field5069_0x95a4;
    undefined field5070_0x95a5;
    undefined field5071_0x95a6;
    undefined field5072_0x95a7;
    undefined field5073_0x95a8;
    undefined field5074_0x95a9;
    undefined field5075_0x95aa;
    undefined field5076_0x95ab;
    undefined field5077_0x95ac;
    undefined field5078_0x95ad;
    undefined field5079_0x95ae;
    undefined field5080_0x95af;
    undefined field5081_0x95b0;
    undefined field5082_0x95b1;
    undefined field5083_0x95b2;
    undefined field5084_0x95b3;
    undefined field5085_0x95b4;
    undefined field5086_0x95b5;
    undefined field5087_0x95b6;
    undefined field5088_0x95b7;
    undefined field5089_0x95b8;
    undefined field5090_0x95b9;
    undefined field5091_0x95ba;
    undefined field5092_0x95bb;
    undefined field5093_0x95bc;
    undefined field5094_0x95bd;
    undefined field5095_0x95be;
    undefined field5096_0x95bf;
    undefined field5097_0x95c0;
    undefined field5098_0x95c1;
    undefined field5099_0x95c2;
    undefined field5100_0x95c3;
    undefined field5101_0x95c4;
    undefined field5102_0x95c5;
    undefined field5103_0x95c6;
    undefined field5104_0x95c7;
    undefined field5105_0x95c8;
    undefined field5106_0x95c9;
    undefined field5107_0x95ca;
    undefined field5108_0x95cb;
    undefined field5109_0x95cc;
    undefined field5110_0x95cd;
    undefined field5111_0x95ce;
    undefined field5112_0x95cf;
    undefined field5113_0x95d0;
    undefined field5114_0x95d1;
    undefined field5115_0x95d2;
    undefined field5116_0x95d3;
    undefined field5117_0x95d4;
    undefined field5118_0x95d5;
    undefined field5119_0x95d6;
    undefined field5120_0x95d7;
    undefined field5121_0x95d8;
    undefined field5122_0x95d9;
    undefined field5123_0x95da;
    undefined field5124_0x95db;
    undefined field5125_0x95dc;
    undefined field5126_0x95dd;
    undefined field5127_0x95de;
    undefined field5128_0x95df;
    undefined field5129_0x95e0;
    undefined field5130_0x95e1;
    undefined field5131_0x95e2;
    undefined field5132_0x95e3;
    undefined field5133_0x95e4;
    undefined field5134_0x95e5;
    undefined field5135_0x95e6;
    undefined field5136_0x95e7;
    undefined field5137_0x95e8;
    undefined field5138_0x95e9;
    undefined field5139_0x95ea;
    undefined field5140_0x95eb;
    undefined field5141_0x95ec;
    undefined field5142_0x95ed;
    undefined field5143_0x95ee;
    undefined field5144_0x95ef;
    undefined field5145_0x95f0;
    undefined field5146_0x95f1;
    undefined field5147_0x95f2;
    undefined field5148_0x95f3;
    undefined field5149_0x95f4;
    undefined field5150_0x95f5;
    undefined field5151_0x95f6;
    undefined field5152_0x95f7;
    undefined field5153_0x95f8;
    undefined field5154_0x95f9;
    undefined field5155_0x95fa;
    undefined field5156_0x95fb;
    undefined field5157_0x95fc;
    undefined field5158_0x95fd;
    undefined field5159_0x95fe;
    undefined field5160_0x95ff;
    undefined field5161_0x9600;
    undefined field5162_0x9601;
    undefined field5163_0x9602;
    undefined field5164_0x9603;
    undefined field5165_0x9604;
    undefined field5166_0x9605;
    undefined field5167_0x9606;
    undefined field5168_0x9607;
    undefined field5169_0x9608;
    undefined field5170_0x9609;
    undefined field5171_0x960a;
    undefined field5172_0x960b;
    undefined field5173_0x960c;
    undefined field5174_0x960d;
    undefined field5175_0x960e;
    undefined field5176_0x960f;
    undefined field5177_0x9610;
    undefined field5178_0x9611;
    undefined field5179_0x9612;
    undefined field5180_0x9613;
    undefined field5181_0x9614;
    undefined field5182_0x9615;
    undefined field5183_0x9616;
    undefined field5184_0x9617;
    undefined field5185_0x9618;
    undefined field5186_0x9619;
    undefined field5187_0x961a;
    undefined field5188_0x961b;
    undefined field5189_0x961c;
    undefined field5190_0x961d;
    undefined field5191_0x961e;
    undefined field5192_0x961f;
    undefined field5193_0x9620;
    undefined field5194_0x9621;
    undefined field5195_0x9622;
    undefined field5196_0x9623;
    undefined field5197_0x9624;
    undefined field5198_0x9625;
    undefined field5199_0x9626;
    undefined field5200_0x9627;
    undefined field5201_0x9628;
    undefined field5202_0x9629;
    undefined field5203_0x962a;
    undefined field5204_0x962b;
    undefined field5205_0x962c;
    undefined field5206_0x962d;
    undefined field5207_0x962e;
    undefined field5208_0x962f;
    undefined field5209_0x9630;
    undefined field5210_0x9631;
    undefined field5211_0x9632;
    undefined field5212_0x9633;
    undefined field5213_0x9634;
    undefined field5214_0x9635;
    undefined field5215_0x9636;
    undefined field5216_0x9637;
    undefined field5217_0x9638;
    undefined field5218_0x9639;
    undefined field5219_0x963a;
    undefined field5220_0x963b;
    undefined field5221_0x963c;
    undefined field5222_0x963d;
    undefined field5223_0x963e;
    undefined field5224_0x963f;
    undefined field5225_0x9640;
    undefined field5226_0x9641;
    undefined field5227_0x9642;
    undefined field5228_0x9643;
    undefined field5229_0x9644;
    undefined field5230_0x9645;
    undefined field5231_0x9646;
    undefined field5232_0x9647;
    undefined field5233_0x9648;
    undefined field5234_0x9649;
    undefined field5235_0x964a;
    undefined field5236_0x964b;
    undefined field5237_0x964c;
    undefined field5238_0x964d;
    undefined field5239_0x964e;
    undefined field5240_0x964f;
    undefined field5241_0x9650;
    undefined field5242_0x9651;
    undefined field5243_0x9652;
    undefined field5244_0x9653;
    undefined field5245_0x9654;
    undefined field5246_0x9655;
    undefined field5247_0x9656;
    undefined field5248_0x9657;
    undefined field5249_0x9658;
    undefined field5250_0x9659;
    undefined field5251_0x965a;
    undefined field5252_0x965b;
    undefined field5253_0x965c;
    undefined field5254_0x965d;
    undefined field5255_0x965e;
    undefined field5256_0x965f;
    undefined field5257_0x9660;
    undefined field5258_0x9661;
    undefined field5259_0x9662;
    undefined field5260_0x9663;
    undefined field5261_0x9664;
    undefined field5262_0x9665;
    undefined field5263_0x9666;
    undefined field5264_0x9667;
    undefined field5265_0x9668;
    undefined field5266_0x9669;
    undefined field5267_0x966a;
    undefined field5268_0x966b;
    undefined field5269_0x966c;
    undefined field5270_0x966d;
    undefined field5271_0x966e;
    undefined field5272_0x966f;
    undefined field5273_0x9670;
    undefined field5274_0x9671;
    undefined field5275_0x9672;
    undefined field5276_0x9673;
    undefined field5277_0x9674;
    undefined field5278_0x9675;
    undefined field5279_0x9676;
    undefined field5280_0x9677;
    undefined field5281_0x9678;
    undefined field5282_0x9679;
    undefined field5283_0x967a;
    undefined field5284_0x967b;
    undefined field5285_0x967c;
    undefined field5286_0x967d;
    undefined field5287_0x967e;
    undefined field5288_0x967f;
    undefined field5289_0x9680;
    undefined field5290_0x9681;
    undefined field5291_0x9682;
    undefined field5292_0x9683;
    undefined field5293_0x9684;
    undefined field5294_0x9685;
    undefined field5295_0x9686;
    undefined field5296_0x9687;
    undefined field5297_0x9688;
    undefined field5298_0x9689;
    undefined field5299_0x968a;
    undefined field5300_0x968b;
    undefined field5301_0x968c;
    undefined field5302_0x968d;
    undefined field5303_0x968e;
    undefined field5304_0x968f;
    undefined field5305_0x9690;
    undefined field5306_0x9691;
    undefined field5307_0x9692;
    undefined field5308_0x9693;
    undefined field5309_0x9694;
    undefined field5310_0x9695;
    undefined field5311_0x9696;
    undefined field5312_0x9697;
    undefined field5313_0x9698;
    undefined field5314_0x9699;
    undefined field5315_0x969a;
    undefined field5316_0x969b;
    undefined field5317_0x969c;
    undefined field5318_0x969d;
    undefined field5319_0x969e;
    undefined field5320_0x969f;
    undefined field5321_0x96a0;
    undefined field5322_0x96a1;
    undefined field5323_0x96a2;
    undefined field5324_0x96a3;
    undefined field5325_0x96a4;
    undefined field5326_0x96a5;
    undefined field5327_0x96a6;
    undefined field5328_0x96a7;
    undefined field5329_0x96a8;
    undefined field5330_0x96a9;
    undefined field5331_0x96aa;
    undefined field5332_0x96ab;
    undefined field5333_0x96ac;
    undefined field5334_0x96ad;
    undefined field5335_0x96ae;
    undefined field5336_0x96af;
    undefined field5337_0x96b0;
    undefined field5338_0x96b1;
    undefined field5339_0x96b2;
    undefined field5340_0x96b3;
    undefined field5341_0x96b4;
    undefined field5342_0x96b5;
    undefined field5343_0x96b6;
    undefined field5344_0x96b7;
    undefined field5345_0x96b8;
    undefined field5346_0x96b9;
    undefined field5347_0x96ba;
    undefined field5348_0x96bb;
    undefined field5349_0x96bc;
    undefined field5350_0x96bd;
    undefined field5351_0x96be;
    undefined field5352_0x96bf;
    undefined field5353_0x96c0;
    undefined field5354_0x96c1;
    undefined field5355_0x96c2;
    undefined field5356_0x96c3;
    undefined field5357_0x96c4;
    undefined field5358_0x96c5;
    undefined field5359_0x96c6;
    undefined field5360_0x96c7;
    undefined field5361_0x96c8;
    undefined field5362_0x96c9;
    undefined field5363_0x96ca;
    undefined field5364_0x96cb;
    undefined field5365_0x96cc;
    undefined field5366_0x96cd;
    undefined field5367_0x96ce;
    undefined field5368_0x96cf;
    undefined field5369_0x96d0;
    undefined field5370_0x96d1;
    undefined field5371_0x96d2;
    undefined field5372_0x96d3;
    undefined field5373_0x96d4;
    undefined field5374_0x96d5;
    undefined field5375_0x96d6;
    undefined field5376_0x96d7;
    undefined field5377_0x96d8;
    undefined field5378_0x96d9;
    undefined field5379_0x96da;
    undefined field5380_0x96db;
    undefined field5381_0x96dc;
    undefined field5382_0x96dd;
    undefined field5383_0x96de;
    undefined field5384_0x96df;
    undefined field5385_0x96e0;
    undefined field5386_0x96e1;
    undefined field5387_0x96e2;
    undefined field5388_0x96e3;
    undefined field5389_0x96e4;
    undefined field5390_0x96e5;
    undefined field5391_0x96e6;
    undefined field5392_0x96e7;
    undefined field5393_0x96e8;
    undefined field5394_0x96e9;
    undefined field5395_0x96ea;
    undefined field5396_0x96eb;
    undefined field5397_0x96ec;
    undefined field5398_0x96ed;
    undefined field5399_0x96ee;
    undefined field5400_0x96ef;
    undefined field5401_0x96f0;
    undefined field5402_0x96f1;
    undefined field5403_0x96f2;
    undefined field5404_0x96f3;
    undefined field5405_0x96f4;
    undefined field5406_0x96f5;
    undefined field5407_0x96f6;
    undefined field5408_0x96f7;
    undefined field5409_0x96f8;
    undefined field5410_0x96f9;
    undefined field5411_0x96fa;
    undefined field5412_0x96fb;
    undefined field5413_0x96fc;
    undefined field5414_0x96fd;
    undefined field5415_0x96fe;
    undefined field5416_0x96ff;
    undefined field5417_0x9700;
    undefined field5418_0x9701;
    undefined field5419_0x9702;
    undefined field5420_0x9703;
    undefined field5421_0x9704;
    undefined field5422_0x9705;
    undefined field5423_0x9706;
    undefined field5424_0x9707;
    undefined field5425_0x9708;
    undefined field5426_0x9709;
    undefined field5427_0x970a;
    undefined field5428_0x970b;
    undefined field5429_0x970c;
    undefined field5430_0x970d;
    undefined field5431_0x970e;
    undefined field5432_0x970f;
    undefined field5433_0x9710;
    undefined field5434_0x9711;
    undefined field5435_0x9712;
    undefined field5436_0x9713;
    undefined field5437_0x9714;
    undefined field5438_0x9715;
    undefined field5439_0x9716;
    undefined field5440_0x9717;
    undefined field5441_0x9718;
    undefined field5442_0x9719;
    undefined field5443_0x971a;
    undefined field5444_0x971b;
    undefined field5445_0x971c;
    undefined field5446_0x971d;
    undefined field5447_0x971e;
    undefined field5448_0x971f;
    undefined field5449_0x9720;
    undefined field5450_0x9721;
    undefined field5451_0x9722;
    undefined field5452_0x9723;
    undefined field5453_0x9724;
    undefined field5454_0x9725;
    undefined field5455_0x9726;
    undefined field5456_0x9727;
    undefined field5457_0x9728;
    undefined field5458_0x9729;
    undefined field5459_0x972a;
    undefined field5460_0x972b;
    undefined field5461_0x972c;
    undefined field5462_0x972d;
    undefined field5463_0x972e;
    undefined field5464_0x972f;
    undefined field5465_0x9730;
    undefined field5466_0x9731;
    undefined field5467_0x9732;
    undefined field5468_0x9733;
    undefined field5469_0x9734;
    undefined field5470_0x9735;
    undefined field5471_0x9736;
    undefined field5472_0x9737;
    undefined field5473_0x9738;
    undefined field5474_0x9739;
    undefined field5475_0x973a;
    undefined field5476_0x973b;
    undefined field5477_0x973c;
    undefined field5478_0x973d;
    undefined field5479_0x973e;
    undefined field5480_0x973f;
    undefined field5481_0x9740;
    undefined field5482_0x9741;
    undefined field5483_0x9742;
    undefined field5484_0x9743;
    undefined field5485_0x9744;
    undefined field5486_0x9745;
    undefined field5487_0x9746;
    undefined field5488_0x9747;
    undefined field5489_0x9748;
    undefined field5490_0x9749;
    undefined field5491_0x974a;
    undefined field5492_0x974b;
    undefined field5493_0x974c;
    undefined field5494_0x974d;
    undefined field5495_0x974e;
    undefined field5496_0x974f;
    undefined field5497_0x9750;
    undefined field5498_0x9751;
    undefined field5499_0x9752;
    undefined field5500_0x9753;
    undefined field5501_0x9754;
    undefined field5502_0x9755;
    undefined field5503_0x9756;
    undefined field5504_0x9757;
    undefined field5505_0x9758;
    undefined field5506_0x9759;
    undefined field5507_0x975a;
    undefined field5508_0x975b;
    undefined field5509_0x975c;
    undefined field5510_0x975d;
    undefined field5511_0x975e;
    undefined field5512_0x975f;
    undefined field5513_0x9760;
    undefined field5514_0x9761;
    undefined field5515_0x9762;
    undefined field5516_0x9763;
    undefined field5517_0x9764;
    undefined field5518_0x9765;
    undefined field5519_0x9766;
    undefined field5520_0x9767;
    undefined field5521_0x9768;
    undefined field5522_0x9769;
    undefined field5523_0x976a;
    undefined field5524_0x976b;
    undefined field5525_0x976c;
    undefined field5526_0x976d;
    undefined field5527_0x976e;
    undefined field5528_0x976f;
    undefined field5529_0x9770;
    undefined field5530_0x9771;
    undefined field5531_0x9772;
    undefined field5532_0x9773;
    undefined field5533_0x9774;
    undefined field5534_0x9775;
    undefined field5535_0x9776;
    undefined field5536_0x9777;
    undefined field5537_0x9778;
    undefined field5538_0x9779;
    undefined field5539_0x977a;
    undefined field5540_0x977b;
    undefined field5541_0x977c;
    undefined field5542_0x977d;
    undefined field5543_0x977e;
    undefined field5544_0x977f;
    undefined field5545_0x9780;
    undefined field5546_0x9781;
    undefined field5547_0x9782;
    undefined field5548_0x9783;
    undefined field5549_0x9784;
    undefined field5550_0x9785;
    undefined field5551_0x9786;
    undefined field5552_0x9787;
    undefined field5553_0x9788;
    undefined field5554_0x9789;
    undefined field5555_0x978a;
    undefined field5556_0x978b;
    undefined field5557_0x978c;
    undefined field5558_0x978d;
    undefined field5559_0x978e;
    undefined field5560_0x978f;
    undefined field5561_0x9790;
    undefined field5562_0x9791;
    undefined field5563_0x9792;
    undefined field5564_0x9793;
    undefined field5565_0x9794;
    undefined field5566_0x9795;
    undefined field5567_0x9796;
    undefined field5568_0x9797;
    undefined field5569_0x9798;
    undefined field5570_0x9799;
    undefined field5571_0x979a;
    undefined field5572_0x979b;
    undefined field5573_0x979c;
    undefined field5574_0x979d;
    undefined field5575_0x979e;
    undefined field5576_0x979f;
    undefined field5577_0x97a0;
    undefined field5578_0x97a1;
    undefined field5579_0x97a2;
    undefined field5580_0x97a3;
    undefined field5581_0x97a4;
    undefined field5582_0x97a5;
    undefined field5583_0x97a6;
    undefined field5584_0x97a7;
    undefined field5585_0x97a8;
    undefined field5586_0x97a9;
    undefined field5587_0x97aa;
    undefined field5588_0x97ab;
    undefined field5589_0x97ac;
    undefined field5590_0x97ad;
    undefined field5591_0x97ae;
    undefined field5592_0x97af;
    undefined field5593_0x97b0;
    undefined field5594_0x97b1;
    undefined field5595_0x97b2;
    undefined field5596_0x97b3;
    undefined field5597_0x97b4;
    undefined field5598_0x97b5;
    undefined field5599_0x97b6;
    undefined field5600_0x97b7;
    undefined field5601_0x97b8;
    undefined field5602_0x97b9;
    undefined field5603_0x97ba;
    undefined field5604_0x97bb;
    undefined field5605_0x97bc;
    undefined field5606_0x97bd;
    undefined field5607_0x97be;
    undefined field5608_0x97bf;
    undefined field5609_0x97c0;
    undefined field5610_0x97c1;
    undefined field5611_0x97c2;
    undefined field5612_0x97c3;
    undefined field5613_0x97c4;
    undefined field5614_0x97c5;
    undefined field5615_0x97c6;
    undefined field5616_0x97c7;
    undefined field5617_0x97c8;
    undefined field5618_0x97c9;
    undefined field5619_0x97ca;
    undefined field5620_0x97cb;
    undefined field5621_0x97cc;
    undefined field5622_0x97cd;
    undefined field5623_0x97ce;
    undefined field5624_0x97cf;
    undefined field5625_0x97d0;
    undefined field5626_0x97d1;
    undefined field5627_0x97d2;
    undefined field5628_0x97d3;
    undefined field5629_0x97d4;
    undefined field5630_0x97d5;
    undefined field5631_0x97d6;
    undefined field5632_0x97d7;
    undefined field5633_0x97d8;
    undefined field5634_0x97d9;
    undefined field5635_0x97da;
    undefined field5636_0x97db;
    undefined field5637_0x97dc;
    undefined field5638_0x97dd;
    undefined field5639_0x97de;
    undefined field5640_0x97df;
    undefined field5641_0x97e0;
    undefined field5642_0x97e1;
    undefined field5643_0x97e2;
    undefined field5644_0x97e3;
    undefined field5645_0x97e4;
    undefined field5646_0x97e5;
    undefined field5647_0x97e6;
    undefined field5648_0x97e7;
    undefined field5649_0x97e8;
    undefined field5650_0x97e9;
    undefined field5651_0x97ea;
    undefined field5652_0x97eb;
    undefined field5653_0x97ec;
    undefined field5654_0x97ed;
    undefined field5655_0x97ee;
    undefined field5656_0x97ef;
    undefined field5657_0x97f0;
    undefined field5658_0x97f1;
    undefined field5659_0x97f2;
    undefined field5660_0x97f3;
    undefined field5661_0x97f4;
    undefined field5662_0x97f5;
    undefined field5663_0x97f6;
    undefined field5664_0x97f7;
    undefined field5665_0x97f8;
    undefined field5666_0x97f9;
    undefined field5667_0x97fa;
    undefined field5668_0x97fb;
    undefined field5669_0x97fc;
    undefined field5670_0x97fd;
    undefined field5671_0x97fe;
    undefined field5672_0x97ff;
    undefined field5673_0x9800;
    undefined field5674_0x9801;
    undefined field5675_0x9802;
    undefined field5676_0x9803;
    undefined field5677_0x9804;
    undefined field5678_0x9805;
    undefined field5679_0x9806;
    undefined field5680_0x9807;
    undefined field5681_0x9808;
    undefined field5682_0x9809;
    undefined field5683_0x980a;
    undefined field5684_0x980b;
    undefined field5685_0x980c;
    undefined field5686_0x980d;
    undefined field5687_0x980e;
    undefined field5688_0x980f;
    undefined field5689_0x9810;
    undefined field5690_0x9811;
    undefined field5691_0x9812;
    undefined field5692_0x9813;
    undefined field5693_0x9814;
    undefined field5694_0x9815;
    undefined field5695_0x9816;
    undefined field5696_0x9817;
    undefined field5697_0x9818;
    undefined field5698_0x9819;
    undefined field5699_0x981a;
    undefined field5700_0x981b;
    undefined field5701_0x981c;
    undefined field5702_0x981d;
    undefined field5703_0x981e;
    undefined field5704_0x981f;
    undefined field5705_0x9820;
    undefined field5706_0x9821;
    undefined field5707_0x9822;
    undefined field5708_0x9823;
    undefined field5709_0x9824;
    undefined field5710_0x9825;
    undefined field5711_0x9826;
    undefined field5712_0x9827;
    undefined field5713_0x9828;
    undefined field5714_0x9829;
    undefined field5715_0x982a;
    undefined field5716_0x982b;
    undefined field5717_0x982c;
    undefined field5718_0x982d;
    undefined field5719_0x982e;
    undefined field5720_0x982f;
    undefined field5721_0x9830;
    undefined field5722_0x9831;
    undefined field5723_0x9832;
    undefined field5724_0x9833;
    undefined field5725_0x9834;
    undefined field5726_0x9835;
    undefined field5727_0x9836;
    undefined field5728_0x9837;
    undefined field5729_0x9838;
    undefined field5730_0x9839;
    undefined field5731_0x983a;
    undefined field5732_0x983b;
    undefined field5733_0x983c;
    undefined field5734_0x983d;
    undefined field5735_0x983e;
    undefined field5736_0x983f;
    undefined field5737_0x9840;
    undefined field5738_0x9841;
    undefined field5739_0x9842;
    undefined field5740_0x9843;
    undefined field5741_0x9844;
    undefined field5742_0x9845;
    undefined field5743_0x9846;
    undefined field5744_0x9847;
    undefined field5745_0x9848;
    undefined field5746_0x9849;
    undefined field5747_0x984a;
    undefined field5748_0x984b;
    undefined field5749_0x984c;
    undefined field5750_0x984d;
    undefined field5751_0x984e;
    undefined field5752_0x984f;
    undefined field5753_0x9850;
    undefined field5754_0x9851;
    undefined field5755_0x9852;
    undefined field5756_0x9853;
    undefined field5757_0x9854;
    undefined field5758_0x9855;
    undefined field5759_0x9856;
    undefined field5760_0x9857;
    undefined field5761_0x9858;
    undefined field5762_0x9859;
    undefined field5763_0x985a;
    undefined field5764_0x985b;
    undefined field5765_0x985c;
    undefined field5766_0x985d;
    undefined field5767_0x985e;
    undefined field5768_0x985f;
    undefined field5769_0x9860;
    undefined field5770_0x9861;
    undefined field5771_0x9862;
    undefined field5772_0x9863;
    undefined field5773_0x9864;
    undefined field5774_0x9865;
    undefined field5775_0x9866;
    undefined field5776_0x9867;
    undefined field5777_0x9868;
    undefined field5778_0x9869;
    undefined field5779_0x986a;
    undefined field5780_0x986b;
    undefined field5781_0x986c;
    undefined field5782_0x986d;
    undefined field5783_0x986e;
    undefined field5784_0x986f;
    undefined field5785_0x9870;
    undefined field5786_0x9871;
    undefined field5787_0x9872;
    undefined field5788_0x9873;
    undefined field5789_0x9874;
    undefined field5790_0x9875;
    undefined field5791_0x9876;
    undefined field5792_0x9877;
    undefined field5793_0x9878;
    undefined field5794_0x9879;
    undefined field5795_0x987a;
    undefined field5796_0x987b;
    undefined field5797_0x987c;
    undefined field5798_0x987d;
    undefined field5799_0x987e;
    undefined field5800_0x987f;
    undefined field5801_0x9880;
    undefined field5802_0x9881;
    undefined field5803_0x9882;
    undefined field5804_0x9883;
    undefined field5805_0x9884;
    undefined field5806_0x9885;
    undefined field5807_0x9886;
    undefined field5808_0x9887;
    undefined field5809_0x9888;
    undefined field5810_0x9889;
    undefined field5811_0x988a;
    undefined field5812_0x988b;
    undefined field5813_0x988c;
    undefined field5814_0x988d;
    undefined field5815_0x988e;
    undefined field5816_0x988f;
    undefined field5817_0x9890;
    undefined field5818_0x9891;
    undefined field5819_0x9892;
    undefined field5820_0x9893;
    undefined field5821_0x9894;
    undefined field5822_0x9895;
    undefined field5823_0x9896;
    undefined field5824_0x9897;
    undefined field5825_0x9898;
    undefined field5826_0x9899;
    undefined field5827_0x989a;
    undefined field5828_0x989b;
    undefined field5829_0x989c;
    undefined field5830_0x989d;
    undefined field5831_0x989e;
    undefined field5832_0x989f;
    undefined field5833_0x98a0;
    undefined field5834_0x98a1;
    undefined field5835_0x98a2;
    undefined field5836_0x98a3;
    undefined field5837_0x98a4;
    undefined field5838_0x98a5;
    undefined field5839_0x98a6;
    undefined field5840_0x98a7;
    undefined field5841_0x98a8;
    undefined field5842_0x98a9;
    undefined field5843_0x98aa;
    undefined field5844_0x98ab;
    undefined field5845_0x98ac;
    undefined field5846_0x98ad;
    undefined field5847_0x98ae;
    undefined field5848_0x98af;
    undefined field5849_0x98b0;
    undefined field5850_0x98b1;
    undefined field5851_0x98b2;
    undefined field5852_0x98b3;
    undefined field5853_0x98b4;
    undefined field5854_0x98b5;
    undefined field5855_0x98b6;
    undefined field5856_0x98b7;
    undefined field5857_0x98b8;
    undefined field5858_0x98b9;
    undefined field5859_0x98ba;
    undefined field5860_0x98bb;
    undefined field5861_0x98bc;
    undefined field5862_0x98bd;
    undefined field5863_0x98be;
    undefined field5864_0x98bf;
    undefined field5865_0x98c0;
    undefined field5866_0x98c1;
    undefined field5867_0x98c2;
    undefined field5868_0x98c3;
    undefined field5869_0x98c4;
    undefined field5870_0x98c5;
    undefined field5871_0x98c6;
    undefined field5872_0x98c7;
    undefined field5873_0x98c8;
    undefined field5874_0x98c9;
    undefined field5875_0x98ca;
    undefined field5876_0x98cb;
    undefined field5877_0x98cc;
    undefined field5878_0x98cd;
    undefined field5879_0x98ce;
    undefined field5880_0x98cf;
    undefined field5881_0x98d0;
    undefined field5882_0x98d1;
    undefined field5883_0x98d2;
    undefined field5884_0x98d3;
    undefined field5885_0x98d4;
    undefined field5886_0x98d5;
    undefined field5887_0x98d6;
    undefined field5888_0x98d7;
    undefined field5889_0x98d8;
    undefined field5890_0x98d9;
    undefined field5891_0x98da;
    undefined field5892_0x98db;
    undefined field5893_0x98dc;
    undefined field5894_0x98dd;
    undefined field5895_0x98de;
    undefined field5896_0x98df;
    undefined field5897_0x98e0;
    undefined field5898_0x98e1;
    undefined field5899_0x98e2;
    undefined field5900_0x98e3;
    undefined field5901_0x98e4;
    undefined field5902_0x98e5;
    undefined field5903_0x98e6;
    undefined field5904_0x98e7;
    undefined field5905_0x98e8;
    undefined field5906_0x98e9;
    undefined field5907_0x98ea;
    undefined field5908_0x98eb;
    undefined field5909_0x98ec;
    undefined field5910_0x98ed;
    undefined field5911_0x98ee;
    undefined field5912_0x98ef;
    undefined field5913_0x98f0;
    undefined field5914_0x98f1;
    undefined field5915_0x98f2;
    undefined field5916_0x98f3;
    undefined field5917_0x98f4;
    undefined field5918_0x98f5;
    undefined field5919_0x98f6;
    undefined field5920_0x98f7;
    undefined field5921_0x98f8;
    undefined field5922_0x98f9;
    undefined field5923_0x98fa;
    undefined field5924_0x98fb;
    undefined field5925_0x98fc;
    undefined field5926_0x98fd;
    undefined field5927_0x98fe;
    undefined field5928_0x98ff;
    undefined field5929_0x9900;
    undefined field5930_0x9901;
    undefined field5931_0x9902;
    undefined field5932_0x9903;
    undefined field5933_0x9904;
    undefined field5934_0x9905;
    undefined field5935_0x9906;
    undefined field5936_0x9907;
    undefined field5937_0x9908;
    undefined field5938_0x9909;
    undefined field5939_0x990a;
    undefined field5940_0x990b;
    undefined field5941_0x990c;
    undefined field5942_0x990d;
    undefined field5943_0x990e;
    undefined field5944_0x990f;
    undefined field5945_0x9910;
    undefined field5946_0x9911;
    undefined field5947_0x9912;
    undefined field5948_0x9913;
    undefined field5949_0x9914;
    undefined field5950_0x9915;
    undefined field5951_0x9916;
    undefined field5952_0x9917;
    undefined field5953_0x9918;
    undefined field5954_0x9919;
    undefined field5955_0x991a;
    undefined field5956_0x991b;
    undefined field5957_0x991c;
    undefined field5958_0x991d;
    undefined field5959_0x991e;
    undefined field5960_0x991f;
    undefined field5961_0x9920;
    undefined field5962_0x9921;
    undefined field5963_0x9922;
    undefined field5964_0x9923;
    undefined field5965_0x9924;
    undefined field5966_0x9925;
    undefined field5967_0x9926;
    undefined field5968_0x9927;
    undefined field5969_0x9928;
    undefined field5970_0x9929;
    undefined field5971_0x992a;
    undefined field5972_0x992b;
    undefined field5973_0x992c;
    undefined field5974_0x992d;
    undefined field5975_0x992e;
    undefined field5976_0x992f;
    undefined field5977_0x9930;
    undefined field5978_0x9931;
    undefined field5979_0x9932;
    undefined field5980_0x9933;
    undefined field5981_0x9934;
    undefined field5982_0x9935;
    undefined field5983_0x9936;
    undefined field5984_0x9937;
    undefined field5985_0x9938;
    undefined field5986_0x9939;
    undefined field5987_0x993a;
    undefined field5988_0x993b;
    undefined field5989_0x993c;
    undefined field5990_0x993d;
    undefined field5991_0x993e;
    undefined field5992_0x993f;
    undefined field5993_0x9940;
    undefined field5994_0x9941;
    undefined field5995_0x9942;
    undefined field5996_0x9943;
    undefined field5997_0x9944;
    undefined field5998_0x9945;
    undefined field5999_0x9946;
    undefined field6000_0x9947;
    undefined field6001_0x9948;
    undefined field6002_0x9949;
    undefined field6003_0x994a;
    undefined field6004_0x994b;
    undefined field6005_0x994c;
    undefined field6006_0x994d;
    undefined field6007_0x994e;
    undefined field6008_0x994f;
    undefined field6009_0x9950;
    undefined field6010_0x9951;
    undefined field6011_0x9952;
    undefined field6012_0x9953;
    undefined field6013_0x9954;
    undefined field6014_0x9955;
    undefined field6015_0x9956;
    undefined field6016_0x9957;
    undefined field6017_0x9958;
    undefined field6018_0x9959;
    undefined field6019_0x995a;
    undefined field6020_0x995b;
    undefined field6021_0x995c;
    undefined field6022_0x995d;
    undefined field6023_0x995e;
    undefined field6024_0x995f;
    undefined field6025_0x9960;
    undefined field6026_0x9961;
    undefined field6027_0x9962;
    undefined field6028_0x9963;
    undefined field6029_0x9964;
    undefined field6030_0x9965;
    undefined field6031_0x9966;
    undefined field6032_0x9967;
    undefined field6033_0x9968;
    undefined field6034_0x9969;
    undefined field6035_0x996a;
    undefined field6036_0x996b;
    undefined field6037_0x996c;
    undefined field6038_0x996d;
    undefined field6039_0x996e;
    undefined field6040_0x996f;
    undefined field6041_0x9970;
    undefined field6042_0x9971;
    undefined field6043_0x9972;
    undefined field6044_0x9973;
    undefined field6045_0x9974;
    undefined field6046_0x9975;
    undefined field6047_0x9976;
    undefined field6048_0x9977;
    undefined field6049_0x9978;
    undefined field6050_0x9979;
    undefined field6051_0x997a;
    undefined field6052_0x997b;
    undefined field6053_0x997c;
    undefined field6054_0x997d;
    undefined field6055_0x997e;
    undefined field6056_0x997f;
    undefined field6057_0x9980;
    undefined field6058_0x9981;
    undefined field6059_0x9982;
    undefined field6060_0x9983;
    undefined field6061_0x9984;
    undefined field6062_0x9985;
    undefined field6063_0x9986;
    undefined field6064_0x9987;
    undefined field6065_0x9988;
    undefined field6066_0x9989;
    undefined field6067_0x998a;
    undefined field6068_0x998b;
    undefined field6069_0x998c;
    undefined field6070_0x998d;
    undefined field6071_0x998e;
    undefined field6072_0x998f;
    undefined field6073_0x9990;
    undefined field6074_0x9991;
    undefined field6075_0x9992;
    undefined field6076_0x9993;
    undefined field6077_0x9994;
    undefined field6078_0x9995;
    undefined field6079_0x9996;
    undefined field6080_0x9997;
    undefined field6081_0x9998;
    undefined field6082_0x9999;
    undefined field6083_0x999a;
    undefined field6084_0x999b;
    undefined field6085_0x999c;
    undefined field6086_0x999d;
    undefined field6087_0x999e;
    undefined field6088_0x999f;
    undefined field6089_0x99a0;
    undefined field6090_0x99a1;
    undefined field6091_0x99a2;
    undefined field6092_0x99a3;
    undefined field6093_0x99a4;
    undefined field6094_0x99a5;
    undefined field6095_0x99a6;
    undefined field6096_0x99a7;
    undefined field6097_0x99a8;
    undefined field6098_0x99a9;
    undefined field6099_0x99aa;
    undefined field6100_0x99ab;
    undefined field6101_0x99ac;
    undefined field6102_0x99ad;
    undefined field6103_0x99ae;
    undefined field6104_0x99af;
    undefined field6105_0x99b0;
    undefined field6106_0x99b1;
    undefined field6107_0x99b2;
    undefined field6108_0x99b3;
    undefined field6109_0x99b4;
    undefined field6110_0x99b5;
    undefined field6111_0x99b6;
    undefined field6112_0x99b7;
    undefined field6113_0x99b8;
    undefined field6114_0x99b9;
    undefined field6115_0x99ba;
    undefined field6116_0x99bb;
    undefined field6117_0x99bc;
    undefined field6118_0x99bd;
    undefined field6119_0x99be;
    undefined field6120_0x99bf;
    undefined field6121_0x99c0;
    undefined field6122_0x99c1;
    undefined field6123_0x99c2;
    undefined field6124_0x99c3;
    undefined field6125_0x99c4;
    undefined field6126_0x99c5;
    undefined field6127_0x99c6;
    undefined field6128_0x99c7;
    undefined field6129_0x99c8;
    undefined field6130_0x99c9;
    undefined field6131_0x99ca;
    undefined field6132_0x99cb;
    undefined field6133_0x99cc;
    undefined field6134_0x99cd;
    undefined field6135_0x99ce;
    undefined field6136_0x99cf;
    undefined field6137_0x99d0;
    undefined field6138_0x99d1;
    undefined field6139_0x99d2;
    undefined field6140_0x99d3;
    undefined field6141_0x99d4;
    undefined field6142_0x99d5;
    undefined field6143_0x99d6;
    undefined field6144_0x99d7;
    undefined field6145_0x99d8;
    undefined field6146_0x99d9;
    undefined field6147_0x99da;
    undefined field6148_0x99db;
    undefined field6149_0x99dc;
    undefined field6150_0x99dd;
    undefined field6151_0x99de;
    undefined field6152_0x99df;
    undefined field6153_0x99e0;
    undefined field6154_0x99e1;
    undefined field6155_0x99e2;
    undefined field6156_0x99e3;
    undefined field6157_0x99e4;
    undefined field6158_0x99e5;
    undefined field6159_0x99e6;
    undefined field6160_0x99e7;
    undefined field6161_0x99e8;
    undefined field6162_0x99e9;
    undefined field6163_0x99ea;
    undefined field6164_0x99eb;
    undefined field6165_0x99ec;
    undefined field6166_0x99ed;
    undefined field6167_0x99ee;
    undefined field6168_0x99ef;
    undefined field6169_0x99f0;
    undefined field6170_0x99f1;
    undefined field6171_0x99f2;
    undefined field6172_0x99f3;
    undefined field6173_0x99f4;
    undefined field6174_0x99f5;
    undefined field6175_0x99f6;
    undefined field6176_0x99f7;
    undefined field6177_0x99f8;
    undefined field6178_0x99f9;
    undefined field6179_0x99fa;
    undefined field6180_0x99fb;
    undefined field6181_0x99fc;
    undefined field6182_0x99fd;
    undefined field6183_0x99fe;
    undefined field6184_0x99ff;
    undefined field6185_0x9a00;
    undefined field6186_0x9a01;
    undefined field6187_0x9a02;
    undefined field6188_0x9a03;
    undefined field6189_0x9a04;
    undefined field6190_0x9a05;
    undefined field6191_0x9a06;
    undefined field6192_0x9a07;
    undefined field6193_0x9a08;
    undefined field6194_0x9a09;
    undefined field6195_0x9a0a;
    undefined field6196_0x9a0b;
    undefined field6197_0x9a0c;
    undefined field6198_0x9a0d;
    undefined field6199_0x9a0e;
    undefined field6200_0x9a0f;
    undefined field6201_0x9a10;
    undefined field6202_0x9a11;
    undefined field6203_0x9a12;
    undefined field6204_0x9a13;
    undefined field6205_0x9a14;
    undefined field6206_0x9a15;
    undefined field6207_0x9a16;
    undefined field6208_0x9a17;
    undefined field6209_0x9a18;
    undefined field6210_0x9a19;
    undefined field6211_0x9a1a;
    undefined field6212_0x9a1b;
    undefined field6213_0x9a1c;
    undefined field6214_0x9a1d;
    undefined field6215_0x9a1e;
    undefined field6216_0x9a1f;
    undefined field6217_0x9a20;
    undefined field6218_0x9a21;
    undefined field6219_0x9a22;
    undefined field6220_0x9a23;
    undefined field6221_0x9a24;
    undefined field6222_0x9a25;
    undefined field6223_0x9a26;
    undefined field6224_0x9a27;
    undefined field6225_0x9a28;
    undefined field6226_0x9a29;
    undefined field6227_0x9a2a;
    undefined field6228_0x9a2b;
    undefined field6229_0x9a2c;
    undefined field6230_0x9a2d;
    undefined field6231_0x9a2e;
    undefined field6232_0x9a2f;
    undefined field6233_0x9a30;
    undefined field6234_0x9a31;
    undefined field6235_0x9a32;
    undefined field6236_0x9a33;
    undefined field6237_0x9a34;
    undefined field6238_0x9a35;
    undefined field6239_0x9a36;
    undefined field6240_0x9a37;
    undefined field6241_0x9a38;
    undefined field6242_0x9a39;
    undefined field6243_0x9a3a;
    undefined field6244_0x9a3b;
    undefined field6245_0x9a3c;
    undefined field6246_0x9a3d;
    undefined field6247_0x9a3e;
    undefined field6248_0x9a3f;
    undefined field6249_0x9a40;
    undefined field6250_0x9a41;
    undefined field6251_0x9a42;
    undefined field6252_0x9a43;
    undefined field6253_0x9a44;
    undefined field6254_0x9a45;
    undefined field6255_0x9a46;
    undefined field6256_0x9a47;
    undefined field6257_0x9a48;
    undefined field6258_0x9a49;
    undefined field6259_0x9a4a;
    undefined field6260_0x9a4b;
    undefined field6261_0x9a4c;
    undefined field6262_0x9a4d;
    undefined field6263_0x9a4e;
    undefined field6264_0x9a4f;
    undefined field6265_0x9a50;
    undefined field6266_0x9a51;
    undefined field6267_0x9a52;
    undefined field6268_0x9a53;
    undefined field6269_0x9a54;
    undefined field6270_0x9a55;
    undefined field6271_0x9a56;
    undefined field6272_0x9a57;
    undefined field6273_0x9a58;
    undefined field6274_0x9a59;
    undefined field6275_0x9a5a;
    undefined field6276_0x9a5b;
    undefined field6277_0x9a5c;
    undefined field6278_0x9a5d;
    undefined field6279_0x9a5e;
    undefined field6280_0x9a5f;
    undefined field6281_0x9a60;
    undefined field6282_0x9a61;
    undefined field6283_0x9a62;
    undefined field6284_0x9a63;
    undefined field6285_0x9a64;
    undefined field6286_0x9a65;
    undefined field6287_0x9a66;
    undefined field6288_0x9a67;
    undefined field6289_0x9a68;
    undefined field6290_0x9a69;
    undefined field6291_0x9a6a;
    undefined field6292_0x9a6b;
    undefined field6293_0x9a6c;
    undefined field6294_0x9a6d;
    undefined field6295_0x9a6e;
    undefined field6296_0x9a6f;
    undefined field6297_0x9a70;
    undefined field6298_0x9a71;
    undefined field6299_0x9a72;
    undefined field6300_0x9a73;
    undefined field6301_0x9a74;
    undefined field6302_0x9a75;
    undefined field6303_0x9a76;
    undefined field6304_0x9a77;
    undefined field6305_0x9a78;
    undefined field6306_0x9a79;
    undefined field6307_0x9a7a;
    undefined field6308_0x9a7b;
    undefined field6309_0x9a7c;
    undefined field6310_0x9a7d;
    undefined field6311_0x9a7e;
    undefined field6312_0x9a7f;
    undefined field6313_0x9a80;
    undefined field6314_0x9a81;
    undefined field6315_0x9a82;
    undefined field6316_0x9a83;
    undefined field6317_0x9a84;
    undefined field6318_0x9a85;
    undefined field6319_0x9a86;
    undefined field6320_0x9a87;
    undefined field6321_0x9a88;
    undefined field6322_0x9a89;
    undefined field6323_0x9a8a;
    undefined field6324_0x9a8b;
    undefined field6325_0x9a8c;
    undefined field6326_0x9a8d;
    undefined field6327_0x9a8e;
    undefined field6328_0x9a8f;
    undefined field6329_0x9a90;
    undefined field6330_0x9a91;
    undefined field6331_0x9a92;
    undefined field6332_0x9a93;
    undefined field6333_0x9a94;
    undefined field6334_0x9a95;
    undefined field6335_0x9a96;
    undefined field6336_0x9a97;
    undefined field6337_0x9a98;
    undefined field6338_0x9a99;
    undefined field6339_0x9a9a;
    undefined field6340_0x9a9b;
    undefined field6341_0x9a9c;
    undefined field6342_0x9a9d;
    undefined field6343_0x9a9e;
    undefined field6344_0x9a9f;
    undefined field6345_0x9aa0;
    undefined field6346_0x9aa1;
    undefined field6347_0x9aa2;
    undefined field6348_0x9aa3;
    undefined field6349_0x9aa4;
    undefined field6350_0x9aa5;
    undefined field6351_0x9aa6;
    undefined field6352_0x9aa7;
    undefined field6353_0x9aa8;
    undefined field6354_0x9aa9;
    undefined field6355_0x9aaa;
    undefined field6356_0x9aab;
    undefined field6357_0x9aac;
    undefined field6358_0x9aad;
    undefined field6359_0x9aae;
    undefined field6360_0x9aaf;
    undefined field6361_0x9ab0;
    undefined field6362_0x9ab1;
    undefined field6363_0x9ab2;
    undefined field6364_0x9ab3;
    undefined field6365_0x9ab4;
    undefined field6366_0x9ab5;
    undefined field6367_0x9ab6;
    undefined field6368_0x9ab7;
    undefined field6369_0x9ab8;
    undefined field6370_0x9ab9;
    undefined field6371_0x9aba;
    undefined field6372_0x9abb;
    undefined field6373_0x9abc;
    undefined field6374_0x9abd;
    undefined field6375_0x9abe;
    undefined field6376_0x9abf;
    undefined field6377_0x9ac0;
    undefined field6378_0x9ac1;
    undefined field6379_0x9ac2;
    undefined field6380_0x9ac3;
    undefined field6381_0x9ac4;
    undefined field6382_0x9ac5;
    undefined field6383_0x9ac6;
    undefined field6384_0x9ac7;
    undefined field6385_0x9ac8;
    undefined field6386_0x9ac9;
    undefined field6387_0x9aca;
    undefined field6388_0x9acb;
    undefined field6389_0x9acc;
    undefined field6390_0x9acd;
    undefined field6391_0x9ace;
    undefined field6392_0x9acf;
    undefined field6393_0x9ad0;
    undefined field6394_0x9ad1;
    undefined field6395_0x9ad2;
    undefined field6396_0x9ad3;
    undefined field6397_0x9ad4;
    undefined field6398_0x9ad5;
    undefined field6399_0x9ad6;
    undefined field6400_0x9ad7;
    undefined field6401_0x9ad8;
    undefined field6402_0x9ad9;
    undefined field6403_0x9ada;
    undefined field6404_0x9adb;
    undefined field6405_0x9adc;
    undefined field6406_0x9add;
    undefined field6407_0x9ade;
    undefined field6408_0x9adf;
    undefined field6409_0x9ae0;
    undefined field6410_0x9ae1;
    undefined field6411_0x9ae2;
    undefined field6412_0x9ae3;
    undefined field6413_0x9ae4;
    undefined field6414_0x9ae5;
    undefined field6415_0x9ae6;
    undefined field6416_0x9ae7;
    undefined field6417_0x9ae8;
    undefined field6418_0x9ae9;
    undefined field6419_0x9aea;
    undefined field6420_0x9aeb;
    undefined field6421_0x9aec;
    undefined field6422_0x9aed;
    undefined field6423_0x9aee;
    undefined field6424_0x9aef;
    undefined field6425_0x9af0;
    undefined field6426_0x9af1;
    undefined field6427_0x9af2;
    undefined field6428_0x9af3;
    undefined field6429_0x9af4;
    undefined field6430_0x9af5;
    undefined field6431_0x9af6;
    undefined field6432_0x9af7;
    undefined field6433_0x9af8;
    undefined field6434_0x9af9;
    undefined field6435_0x9afa;
    undefined field6436_0x9afb;
    undefined field6437_0x9afc;
    undefined field6438_0x9afd;
    undefined field6439_0x9afe;
    undefined field6440_0x9aff;
    undefined field6441_0x9b00;
    undefined field6442_0x9b01;
    undefined field6443_0x9b02;
    undefined field6444_0x9b03;
    undefined field6445_0x9b04;
    undefined field6446_0x9b05;
    undefined field6447_0x9b06;
    undefined field6448_0x9b07;
    undefined field6449_0x9b08;
    undefined field6450_0x9b09;
    undefined field6451_0x9b0a;
    undefined field6452_0x9b0b;
    undefined field6453_0x9b0c;
    undefined field6454_0x9b0d;
    undefined field6455_0x9b0e;
    undefined field6456_0x9b0f;
    undefined field6457_0x9b10;
    undefined field6458_0x9b11;
    undefined field6459_0x9b12;
    undefined field6460_0x9b13;
    undefined field6461_0x9b14;
    undefined field6462_0x9b15;
    undefined field6463_0x9b16;
    undefined field6464_0x9b17;
    undefined field6465_0x9b18;
    undefined field6466_0x9b19;
    undefined field6467_0x9b1a;
    undefined field6468_0x9b1b;
    undefined field6469_0x9b1c;
    undefined field6470_0x9b1d;
    undefined field6471_0x9b1e;
    undefined field6472_0x9b1f;
    undefined field6473_0x9b20;
    undefined field6474_0x9b21;
    undefined field6475_0x9b22;
    undefined field6476_0x9b23;
    undefined field6477_0x9b24;
    undefined field6478_0x9b25;
    undefined field6479_0x9b26;
    undefined field6480_0x9b27;
    undefined field6481_0x9b28;
    undefined field6482_0x9b29;
    undefined field6483_0x9b2a;
    undefined field6484_0x9b2b;
    undefined field6485_0x9b2c;
    undefined field6486_0x9b2d;
    undefined field6487_0x9b2e;
    undefined field6488_0x9b2f;
    undefined field6489_0x9b30;
    undefined field6490_0x9b31;
    undefined field6491_0x9b32;
    undefined field6492_0x9b33;
    undefined field6493_0x9b34;
    undefined field6494_0x9b35;
    undefined field6495_0x9b36;
    undefined field6496_0x9b37;
    undefined field6497_0x9b38;
    undefined field6498_0x9b39;
    undefined field6499_0x9b3a;
    undefined field6500_0x9b3b;
    undefined field6501_0x9b3c;
    undefined field6502_0x9b3d;
    undefined field6503_0x9b3e;
    undefined field6504_0x9b3f;
    undefined field6505_0x9b40;
    undefined field6506_0x9b41;
    undefined field6507_0x9b42;
    undefined field6508_0x9b43;
    undefined field6509_0x9b44;
    undefined field6510_0x9b45;
    undefined field6511_0x9b46;
    undefined field6512_0x9b47;
    undefined field6513_0x9b48;
    undefined field6514_0x9b49;
    undefined field6515_0x9b4a;
    undefined field6516_0x9b4b;
    undefined field6517_0x9b4c;
    undefined field6518_0x9b4d;
    undefined field6519_0x9b4e;
    undefined field6520_0x9b4f;
    undefined field6521_0x9b50;
    undefined field6522_0x9b51;
    undefined field6523_0x9b52;
    undefined field6524_0x9b53;
    undefined field6525_0x9b54;
    undefined field6526_0x9b55;
    undefined field6527_0x9b56;
    undefined field6528_0x9b57;
    undefined field6529_0x9b58;
    undefined field6530_0x9b59;
    undefined field6531_0x9b5a;
    undefined field6532_0x9b5b;
    undefined field6533_0x9b5c;
    undefined field6534_0x9b5d;
    undefined field6535_0x9b5e;
    undefined field6536_0x9b5f;
    undefined field6537_0x9b60;
    undefined field6538_0x9b61;
    undefined field6539_0x9b62;
    undefined field6540_0x9b63;
    undefined field6541_0x9b64;
    undefined field6542_0x9b65;
    undefined field6543_0x9b66;
    undefined field6544_0x9b67;
    undefined field6545_0x9b68;
    undefined field6546_0x9b69;
    undefined field6547_0x9b6a;
    undefined field6548_0x9b6b;
    undefined field6549_0x9b6c;
    undefined field6550_0x9b6d;
    undefined field6551_0x9b6e;
    undefined field6552_0x9b6f;
    undefined field6553_0x9b70;
    undefined field6554_0x9b71;
    undefined field6555_0x9b72;
    undefined field6556_0x9b73;
    undefined field6557_0x9b74;
    undefined field6558_0x9b75;
    undefined field6559_0x9b76;
    undefined field6560_0x9b77;
    undefined field6561_0x9b78;
    undefined field6562_0x9b79;
    undefined field6563_0x9b7a;
    undefined field6564_0x9b7b;
    undefined field6565_0x9b7c;
    undefined field6566_0x9b7d;
    undefined field6567_0x9b7e;
    undefined field6568_0x9b7f;
    undefined field6569_0x9b80;
    undefined field6570_0x9b81;
    undefined field6571_0x9b82;
    undefined field6572_0x9b83;
    undefined field6573_0x9b84;
    undefined field6574_0x9b85;
    undefined field6575_0x9b86;
    undefined field6576_0x9b87;
    undefined field6577_0x9b88;
    undefined field6578_0x9b89;
    undefined field6579_0x9b8a;
    undefined field6580_0x9b8b;
    undefined field6581_0x9b8c;
    undefined field6582_0x9b8d;
    undefined field6583_0x9b8e;
    undefined field6584_0x9b8f;
    undefined field6585_0x9b90;
    undefined field6586_0x9b91;
    undefined field6587_0x9b92;
    undefined field6588_0x9b93;
    undefined field6589_0x9b94;
    undefined field6590_0x9b95;
    undefined field6591_0x9b96;
    undefined field6592_0x9b97;
    undefined field6593_0x9b98;
    undefined field6594_0x9b99;
    undefined field6595_0x9b9a;
    undefined field6596_0x9b9b;
    undefined field6597_0x9b9c;
    undefined field6598_0x9b9d;
    undefined field6599_0x9b9e;
    undefined field6600_0x9b9f;
    undefined field6601_0x9ba0;
    undefined field6602_0x9ba1;
    undefined field6603_0x9ba2;
    undefined field6604_0x9ba3;
    undefined field6605_0x9ba4;
    undefined field6606_0x9ba5;
    undefined field6607_0x9ba6;
    undefined field6608_0x9ba7;
    undefined field6609_0x9ba8;
    undefined field6610_0x9ba9;
    undefined field6611_0x9baa;
    undefined field6612_0x9bab;
    undefined field6613_0x9bac;
    undefined field6614_0x9bad;
    undefined field6615_0x9bae;
    undefined field6616_0x9baf;
    undefined field6617_0x9bb0;
    undefined field6618_0x9bb1;
    undefined field6619_0x9bb2;
    undefined field6620_0x9bb3;
    undefined field6621_0x9bb4;
    undefined field6622_0x9bb5;
    undefined field6623_0x9bb6;
    undefined field6624_0x9bb7;
    undefined field6625_0x9bb8;
    undefined field6626_0x9bb9;
    undefined field6627_0x9bba;
    undefined field6628_0x9bbb;
    undefined field6629_0x9bbc;
    undefined field6630_0x9bbd;
    undefined field6631_0x9bbe;
    undefined field6632_0x9bbf;
    undefined field6633_0x9bc0;
    undefined field6634_0x9bc1;
    undefined field6635_0x9bc2;
    undefined field6636_0x9bc3;
    undefined field6637_0x9bc4;
    undefined field6638_0x9bc5;
    undefined field6639_0x9bc6;
    undefined field6640_0x9bc7;
    undefined field6641_0x9bc8;
    undefined field6642_0x9bc9;
    undefined field6643_0x9bca;
    undefined field6644_0x9bcb;
    undefined field6645_0x9bcc;
    undefined field6646_0x9bcd;
    undefined field6647_0x9bce;
    undefined field6648_0x9bcf;
    undefined field6649_0x9bd0;
    undefined field6650_0x9bd1;
    undefined field6651_0x9bd2;
    undefined field6652_0x9bd3;
    undefined field6653_0x9bd4;
    undefined field6654_0x9bd5;
    undefined field6655_0x9bd6;
    undefined field6656_0x9bd7;
    undefined field6657_0x9bd8;
    undefined field6658_0x9bd9;
    undefined field6659_0x9bda;
    undefined field6660_0x9bdb;
    undefined field6661_0x9bdc;
    undefined field6662_0x9bdd;
    undefined field6663_0x9bde;
    undefined field6664_0x9bdf;
    undefined field6665_0x9be0;
    undefined field6666_0x9be1;
    undefined field6667_0x9be2;
    undefined field6668_0x9be3;
    undefined field6669_0x9be4;
    undefined field6670_0x9be5;
    undefined field6671_0x9be6;
    undefined field6672_0x9be7;
    undefined field6673_0x9be8;
    undefined field6674_0x9be9;
    undefined field6675_0x9bea;
    undefined field6676_0x9beb;
    undefined field6677_0x9bec;
    undefined field6678_0x9bed;
    undefined field6679_0x9bee;
    undefined field6680_0x9bef;
    undefined field6681_0x9bf0;
    undefined field6682_0x9bf1;
    undefined field6683_0x9bf2;
    undefined field6684_0x9bf3;
    undefined field6685_0x9bf4;
    undefined field6686_0x9bf5;
    undefined field6687_0x9bf6;
    undefined field6688_0x9bf7;
    undefined field6689_0x9bf8;
    undefined field6690_0x9bf9;
    undefined field6691_0x9bfa;
    undefined field6692_0x9bfb;
    undefined field6693_0x9bfc;
    undefined field6694_0x9bfd;
    undefined field6695_0x9bfe;
    undefined field6696_0x9bff;
    undefined field6697_0x9c00;
    undefined field6698_0x9c01;
    undefined field6699_0x9c02;
    undefined field6700_0x9c03;
    undefined field6701_0x9c04;
    undefined field6702_0x9c05;
    undefined field6703_0x9c06;
    undefined field6704_0x9c07;
    undefined field6705_0x9c08;
    undefined field6706_0x9c09;
    undefined field6707_0x9c0a;
    undefined field6708_0x9c0b;
    undefined field6709_0x9c0c;
    undefined field6710_0x9c0d;
    undefined field6711_0x9c0e;
    undefined field6712_0x9c0f;
    undefined field6713_0x9c10;
    undefined field6714_0x9c11;
    undefined field6715_0x9c12;
    undefined field6716_0x9c13;
    undefined field6717_0x9c14;
    undefined field6718_0x9c15;
    undefined field6719_0x9c16;
    undefined field6720_0x9c17;
    undefined field6721_0x9c18;
    undefined field6722_0x9c19;
    undefined field6723_0x9c1a;
    undefined field6724_0x9c1b;
    undefined field6725_0x9c1c;
    undefined field6726_0x9c1d;
    undefined field6727_0x9c1e;
    undefined field6728_0x9c1f;
    undefined field6729_0x9c20;
    undefined field6730_0x9c21;
    undefined field6731_0x9c22;
    undefined field6732_0x9c23;
    undefined field6733_0x9c24;
    undefined field6734_0x9c25;
    undefined field6735_0x9c26;
    undefined field6736_0x9c27;
    undefined field6737_0x9c28;
    undefined field6738_0x9c29;
    undefined field6739_0x9c2a;
    undefined field6740_0x9c2b;
    undefined field6741_0x9c2c;
    undefined field6742_0x9c2d;
    undefined field6743_0x9c2e;
    undefined field6744_0x9c2f;
    undefined field6745_0x9c30;
    undefined field6746_0x9c31;
    undefined field6747_0x9c32;
    undefined field6748_0x9c33;
    undefined field6749_0x9c34;
    undefined field6750_0x9c35;
    undefined field6751_0x9c36;
    undefined field6752_0x9c37;
    undefined field6753_0x9c38;
    undefined field6754_0x9c39;
    undefined field6755_0x9c3a;
    undefined field6756_0x9c3b;
    undefined field6757_0x9c3c;
    undefined field6758_0x9c3d;
    undefined field6759_0x9c3e;
    undefined field6760_0x9c3f;
    undefined field6761_0x9c40;
    undefined field6762_0x9c41;
    undefined field6763_0x9c42;
    undefined field6764_0x9c43;
    undefined field6765_0x9c44;
    undefined field6766_0x9c45;
    undefined field6767_0x9c46;
    undefined field6768_0x9c47;
    undefined field6769_0x9c48;
    undefined field6770_0x9c49;
    undefined field6771_0x9c4a;
    undefined field6772_0x9c4b;
    undefined field6773_0x9c4c;
    undefined field6774_0x9c4d;
    undefined field6775_0x9c4e;
    undefined field6776_0x9c4f;
    undefined field6777_0x9c50;
    undefined field6778_0x9c51;
    undefined field6779_0x9c52;
    undefined field6780_0x9c53;
    undefined field6781_0x9c54;
    undefined field6782_0x9c55;
    undefined field6783_0x9c56;
    undefined field6784_0x9c57;
    undefined field6785_0x9c58;
    undefined field6786_0x9c59;
    undefined field6787_0x9c5a;
    undefined field6788_0x9c5b;
    undefined field6789_0x9c5c;
    undefined field6790_0x9c5d;
    undefined field6791_0x9c5e;
    undefined field6792_0x9c5f;
    undefined field6793_0x9c60;
    undefined field6794_0x9c61;
    undefined field6795_0x9c62;
    undefined field6796_0x9c63;
    undefined field6797_0x9c64;
    undefined field6798_0x9c65;
    undefined field6799_0x9c66;
    undefined field6800_0x9c67;
    undefined field6801_0x9c68;
    undefined field6802_0x9c69;
    undefined field6803_0x9c6a;
    undefined field6804_0x9c6b;
    undefined field6805_0x9c6c;
    undefined field6806_0x9c6d;
    undefined field6807_0x9c6e;
    undefined field6808_0x9c6f;
    undefined field6809_0x9c70;
    undefined field6810_0x9c71;
    undefined field6811_0x9c72;
    undefined field6812_0x9c73;
    undefined field6813_0x9c74;
    undefined field6814_0x9c75;
    undefined field6815_0x9c76;
    undefined field6816_0x9c77;
    undefined field6817_0x9c78;
    undefined field6818_0x9c79;
    undefined field6819_0x9c7a;
    undefined field6820_0x9c7b;
    undefined field6821_0x9c7c;
    undefined field6822_0x9c7d;
    undefined field6823_0x9c7e;
    undefined field6824_0x9c7f;
    undefined field6825_0x9c80;
    undefined field6826_0x9c81;
    undefined field6827_0x9c82;
    undefined field6828_0x9c83;
    undefined field6829_0x9c84;
    undefined field6830_0x9c85;
    undefined field6831_0x9c86;
    undefined field6832_0x9c87;
    undefined field6833_0x9c88;
    undefined field6834_0x9c89;
    undefined field6835_0x9c8a;
    undefined field6836_0x9c8b;
    undefined field6837_0x9c8c;
    undefined field6838_0x9c8d;
    undefined field6839_0x9c8e;
    undefined field6840_0x9c8f;
    undefined field6841_0x9c90;
    undefined field6842_0x9c91;
    undefined field6843_0x9c92;
    undefined field6844_0x9c93;
    undefined field6845_0x9c94;
    undefined field6846_0x9c95;
    undefined field6847_0x9c96;
    undefined field6848_0x9c97;
    undefined field6849_0x9c98;
    undefined field6850_0x9c99;
    undefined field6851_0x9c9a;
    undefined field6852_0x9c9b;
    undefined field6853_0x9c9c;
    undefined field6854_0x9c9d;
    undefined field6855_0x9c9e;
    undefined field6856_0x9c9f;
    undefined field6857_0x9ca0;
    undefined field6858_0x9ca1;
    undefined field6859_0x9ca2;
    undefined field6860_0x9ca3;
    undefined field6861_0x9ca4;
    undefined field6862_0x9ca5;
    undefined field6863_0x9ca6;
    undefined field6864_0x9ca7;
    undefined field6865_0x9ca8;
    undefined field6866_0x9ca9;
    undefined field6867_0x9caa;
    undefined field6868_0x9cab;
    undefined field6869_0x9cac;
    undefined field6870_0x9cad;
    undefined field6871_0x9cae;
    undefined field6872_0x9caf;
    undefined field6873_0x9cb0;
    undefined field6874_0x9cb1;
    undefined field6875_0x9cb2;
    undefined field6876_0x9cb3;
    undefined field6877_0x9cb4;
    undefined field6878_0x9cb5;
    undefined field6879_0x9cb6;
    undefined field6880_0x9cb7;
    undefined field6881_0x9cb8;
    undefined field6882_0x9cb9;
    undefined field6883_0x9cba;
    undefined field6884_0x9cbb;
    undefined field6885_0x9cbc;
    undefined field6886_0x9cbd;
    undefined field6887_0x9cbe;
    undefined field6888_0x9cbf;
    undefined field6889_0x9cc0;
    undefined field6890_0x9cc1;
    undefined field6891_0x9cc2;
    undefined field6892_0x9cc3;
    undefined field6893_0x9cc4;
    undefined field6894_0x9cc5;
    undefined field6895_0x9cc6;
    undefined field6896_0x9cc7;
    undefined field6897_0x9cc8;
    undefined field6898_0x9cc9;
    undefined field6899_0x9cca;
    undefined field6900_0x9ccb;
    undefined field6901_0x9ccc;
    undefined field6902_0x9ccd;
    undefined field6903_0x9cce;
    undefined field6904_0x9ccf;
    undefined field6905_0x9cd0;
    undefined field6906_0x9cd1;
    undefined field6907_0x9cd2;
    undefined field6908_0x9cd3;
    undefined field6909_0x9cd4;
    undefined field6910_0x9cd5;
    undefined field6911_0x9cd6;
    undefined field6912_0x9cd7;
    undefined field6913_0x9cd8;
    undefined field6914_0x9cd9;
    undefined field6915_0x9cda;
    undefined field6916_0x9cdb;
    undefined field6917_0x9cdc;
    undefined field6918_0x9cdd;
    undefined field6919_0x9cde;
    undefined field6920_0x9cdf;
    undefined field6921_0x9ce0;
    undefined field6922_0x9ce1;
    undefined field6923_0x9ce2;
    undefined field6924_0x9ce3;
    undefined field6925_0x9ce4;
    undefined field6926_0x9ce5;
    undefined field6927_0x9ce6;
    undefined field6928_0x9ce7;
    undefined field6929_0x9ce8;
    undefined field6930_0x9ce9;
    undefined field6931_0x9cea;
    undefined field6932_0x9ceb;
    undefined field6933_0x9cec;
    undefined field6934_0x9ced;
    undefined field6935_0x9cee;
    undefined field6936_0x9cef;
    undefined field6937_0x9cf0;
    undefined field6938_0x9cf1;
    undefined field6939_0x9cf2;
    undefined field6940_0x9cf3;
    undefined field6941_0x9cf4;
    undefined field6942_0x9cf5;
    undefined field6943_0x9cf6;
    undefined field6944_0x9cf7;
    undefined field6945_0x9cf8;
    undefined field6946_0x9cf9;
    undefined field6947_0x9cfa;
    undefined field6948_0x9cfb;
    undefined field6949_0x9cfc;
    undefined field6950_0x9cfd;
    undefined field6951_0x9cfe;
    undefined field6952_0x9cff;
    undefined field6953_0x9d00;
    undefined field6954_0x9d01;
    undefined field6955_0x9d02;
    undefined field6956_0x9d03;
    undefined field6957_0x9d04;
    undefined field6958_0x9d05;
    undefined field6959_0x9d06;
    undefined field6960_0x9d07;
    undefined field6961_0x9d08;
    undefined field6962_0x9d09;
    undefined field6963_0x9d0a;
    undefined field6964_0x9d0b;
    undefined field6965_0x9d0c;
    undefined field6966_0x9d0d;
    undefined field6967_0x9d0e;
    undefined field6968_0x9d0f;
    undefined field6969_0x9d10;
    undefined field6970_0x9d11;
    undefined field6971_0x9d12;
    undefined field6972_0x9d13;
    undefined field6973_0x9d14;
    undefined field6974_0x9d15;
    undefined field6975_0x9d16;
    undefined field6976_0x9d17;
    undefined field6977_0x9d18;
    undefined field6978_0x9d19;
    undefined field6979_0x9d1a;
    undefined field6980_0x9d1b;
    undefined field6981_0x9d1c;
    undefined field6982_0x9d1d;
    undefined field6983_0x9d1e;
    undefined field6984_0x9d1f;
    undefined field6985_0x9d20;
    undefined field6986_0x9d21;
    undefined field6987_0x9d22;
    undefined field6988_0x9d23;
    undefined field6989_0x9d24;
    undefined field6990_0x9d25;
    undefined field6991_0x9d26;
    undefined field6992_0x9d27;
    undefined field6993_0x9d28;
    undefined field6994_0x9d29;
    undefined field6995_0x9d2a;
    undefined field6996_0x9d2b;
    undefined field6997_0x9d2c;
    undefined field6998_0x9d2d;
    undefined field6999_0x9d2e;
    undefined field7000_0x9d2f;
    undefined field7001_0x9d30;
    undefined field7002_0x9d31;
    undefined field7003_0x9d32;
    undefined field7004_0x9d33;
    undefined field7005_0x9d34;
    undefined field7006_0x9d35;
    undefined field7007_0x9d36;
    undefined field7008_0x9d37;
    undefined field7009_0x9d38;
    undefined field7010_0x9d39;
    undefined field7011_0x9d3a;
    undefined field7012_0x9d3b;
    undefined field7013_0x9d3c;
    undefined field7014_0x9d3d;
    undefined field7015_0x9d3e;
    undefined field7016_0x9d3f;
    undefined field7017_0x9d40;
    undefined field7018_0x9d41;
    undefined field7019_0x9d42;
    undefined field7020_0x9d43;
    undefined field7021_0x9d44;
    undefined field7022_0x9d45;
    undefined field7023_0x9d46;
    undefined field7024_0x9d47;
    undefined field7025_0x9d48;
    undefined field7026_0x9d49;
    undefined field7027_0x9d4a;
    undefined field7028_0x9d4b;
    undefined field7029_0x9d4c;
    undefined field7030_0x9d4d;
    undefined field7031_0x9d4e;
    undefined field7032_0x9d4f;
    undefined field7033_0x9d50;
    undefined field7034_0x9d51;
    undefined field7035_0x9d52;
    undefined field7036_0x9d53;
    undefined field7037_0x9d54;
    undefined field7038_0x9d55;
    undefined field7039_0x9d56;
    undefined field7040_0x9d57;
    undefined field7041_0x9d58;
    undefined field7042_0x9d59;
    undefined field7043_0x9d5a;
    undefined field7044_0x9d5b;
    undefined field7045_0x9d5c;
    undefined field7046_0x9d5d;
    undefined field7047_0x9d5e;
    undefined field7048_0x9d5f;
    undefined field7049_0x9d60;
    undefined field7050_0x9d61;
    undefined field7051_0x9d62;
    undefined field7052_0x9d63;
    undefined field7053_0x9d64;
    undefined field7054_0x9d65;
    undefined field7055_0x9d66;
    undefined field7056_0x9d67;
    undefined field7057_0x9d68;
    undefined field7058_0x9d69;
    undefined field7059_0x9d6a;
    undefined field7060_0x9d6b;
    undefined field7061_0x9d6c;
    undefined field7062_0x9d6d;
    undefined field7063_0x9d6e;
    undefined field7064_0x9d6f;
    undefined field7065_0x9d70;
    undefined field7066_0x9d71;
    undefined field7067_0x9d72;
    undefined field7068_0x9d73;
    undefined field7069_0x9d74;
    undefined field7070_0x9d75;
    undefined field7071_0x9d76;
    undefined field7072_0x9d77;
    undefined field7073_0x9d78;
    undefined field7074_0x9d79;
    undefined field7075_0x9d7a;
    undefined field7076_0x9d7b;
    undefined field7077_0x9d7c;
    undefined field7078_0x9d7d;
    undefined field7079_0x9d7e;
    undefined field7080_0x9d7f;
    undefined field7081_0x9d80;
    undefined field7082_0x9d81;
    undefined field7083_0x9d82;
    undefined field7084_0x9d83;
    undefined field7085_0x9d84;
    undefined field7086_0x9d85;
    undefined field7087_0x9d86;
    undefined field7088_0x9d87;
    undefined field7089_0x9d88;
    undefined field7090_0x9d89;
    undefined field7091_0x9d8a;
    undefined field7092_0x9d8b;
    undefined field7093_0x9d8c;
    undefined field7094_0x9d8d;
    undefined field7095_0x9d8e;
    undefined field7096_0x9d8f;
    undefined field7097_0x9d90;
    undefined field7098_0x9d91;
    undefined field7099_0x9d92;
    undefined field7100_0x9d93;
    undefined field7101_0x9d94;
    undefined field7102_0x9d95;
    undefined field7103_0x9d96;
    undefined field7104_0x9d97;
    undefined field7105_0x9d98;
    undefined field7106_0x9d99;
    undefined field7107_0x9d9a;
    undefined field7108_0x9d9b;
    undefined field7109_0x9d9c;
    undefined field7110_0x9d9d;
    undefined field7111_0x9d9e;
    undefined field7112_0x9d9f;
    undefined field7113_0x9da0;
    undefined field7114_0x9da1;
    undefined field7115_0x9da2;
    undefined field7116_0x9da3;
    undefined field7117_0x9da4;
    undefined field7118_0x9da5;
    undefined field7119_0x9da6;
    undefined field7120_0x9da7;
    undefined field7121_0x9da8;
    undefined field7122_0x9da9;
    undefined field7123_0x9daa;
    undefined field7124_0x9dab;
    undefined field7125_0x9dac;
    undefined field7126_0x9dad;
    undefined field7127_0x9dae;
    undefined field7128_0x9daf;
    undefined field7129_0x9db0;
    undefined field7130_0x9db1;
    undefined field7131_0x9db2;
    undefined field7132_0x9db3;
    undefined field7133_0x9db4;
    undefined field7134_0x9db5;
    undefined field7135_0x9db6;
    undefined field7136_0x9db7;
    undefined field7137_0x9db8;
    undefined field7138_0x9db9;
    undefined field7139_0x9dba;
    undefined field7140_0x9dbb;
    undefined field7141_0x9dbc;
    undefined field7142_0x9dbd;
    undefined field7143_0x9dbe;
    undefined field7144_0x9dbf;
    undefined field7145_0x9dc0;
    undefined field7146_0x9dc1;
    undefined field7147_0x9dc2;
    undefined field7148_0x9dc3;
    undefined field7149_0x9dc4;
    undefined field7150_0x9dc5;
    undefined field7151_0x9dc6;
    undefined field7152_0x9dc7;
    undefined field7153_0x9dc8;
    undefined field7154_0x9dc9;
    undefined field7155_0x9dca;
    undefined field7156_0x9dcb;
    undefined field7157_0x9dcc;
    undefined field7158_0x9dcd;
    undefined field7159_0x9dce;
    undefined field7160_0x9dcf;
    undefined field7161_0x9dd0;
    undefined field7162_0x9dd1;
    undefined field7163_0x9dd2;
    undefined field7164_0x9dd3;
    undefined field7165_0x9dd4;
    undefined field7166_0x9dd5;
    undefined field7167_0x9dd6;
    undefined field7168_0x9dd7;
    undefined field7169_0x9dd8;
    undefined field7170_0x9dd9;
    undefined field7171_0x9dda;
    undefined field7172_0x9ddb;
    undefined field7173_0x9ddc;
    undefined field7174_0x9ddd;
    undefined field7175_0x9dde;
    undefined field7176_0x9ddf;
    undefined field7177_0x9de0;
    undefined field7178_0x9de1;
    undefined field7179_0x9de2;
    undefined field7180_0x9de3;
    undefined field7181_0x9de4;
    undefined field7182_0x9de5;
    undefined field7183_0x9de6;
    undefined field7184_0x9de7;
    undefined field7185_0x9de8;
    undefined field7186_0x9de9;
    undefined field7187_0x9dea;
    undefined field7188_0x9deb;
    undefined field7189_0x9dec;
    undefined field7190_0x9ded;
    undefined field7191_0x9dee;
    undefined field7192_0x9def;
    undefined field7193_0x9df0;
    undefined field7194_0x9df1;
    undefined field7195_0x9df2;
    undefined field7196_0x9df3;
    undefined field7197_0x9df4;
    undefined field7198_0x9df5;
    undefined field7199_0x9df6;
    undefined field7200_0x9df7;
    undefined field7201_0x9df8;
    undefined field7202_0x9df9;
    undefined field7203_0x9dfa;
    undefined field7204_0x9dfb;
    undefined field7205_0x9dfc;
    undefined field7206_0x9dfd;
    undefined field7207_0x9dfe;
    undefined field7208_0x9dff;
    undefined field7209_0x9e00;
    undefined field7210_0x9e01;
    undefined field7211_0x9e02;
    undefined field7212_0x9e03;
    undefined field7213_0x9e04;
    undefined field7214_0x9e05;
    undefined field7215_0x9e06;
    undefined field7216_0x9e07;
    undefined field7217_0x9e08;
    undefined field7218_0x9e09;
    undefined field7219_0x9e0a;
    undefined field7220_0x9e0b;
    undefined field7221_0x9e0c;
    undefined field7222_0x9e0d;
    undefined field7223_0x9e0e;
    undefined field7224_0x9e0f;
    undefined field7225_0x9e10;
    undefined field7226_0x9e11;
    undefined field7227_0x9e12;
    undefined field7228_0x9e13;
    undefined field7229_0x9e14;
    undefined field7230_0x9e15;
    undefined field7231_0x9e16;
    undefined field7232_0x9e17;
    undefined field7233_0x9e18;
    undefined field7234_0x9e19;
    undefined field7235_0x9e1a;
    undefined field7236_0x9e1b;
    undefined field7237_0x9e1c;
    undefined field7238_0x9e1d;
    undefined field7239_0x9e1e;
    undefined field7240_0x9e1f;
    undefined field7241_0x9e20;
    undefined field7242_0x9e21;
    undefined field7243_0x9e22;
    undefined field7244_0x9e23;
    undefined field7245_0x9e24;
    undefined field7246_0x9e25;
    undefined field7247_0x9e26;
    undefined field7248_0x9e27;
    undefined field7249_0x9e28;
    undefined field7250_0x9e29;
    undefined field7251_0x9e2a;
    undefined field7252_0x9e2b;
    undefined field7253_0x9e2c;
    undefined field7254_0x9e2d;
    undefined field7255_0x9e2e;
    undefined field7256_0x9e2f;
    undefined field7257_0x9e30;
    undefined field7258_0x9e31;
    undefined field7259_0x9e32;
    undefined field7260_0x9e33;
    undefined field7261_0x9e34;
    undefined field7262_0x9e35;
    undefined field7263_0x9e36;
    undefined field7264_0x9e37;
    undefined field7265_0x9e38;
    undefined field7266_0x9e39;
    undefined field7267_0x9e3a;
    undefined field7268_0x9e3b;
    undefined field7269_0x9e3c;
    undefined field7270_0x9e3d;
    undefined field7271_0x9e3e;
    undefined field7272_0x9e3f;
    undefined field7273_0x9e40;
    undefined field7274_0x9e41;
    undefined field7275_0x9e42;
    undefined field7276_0x9e43;
    undefined field7277_0x9e44;
    undefined field7278_0x9e45;
    undefined field7279_0x9e46;
    undefined field7280_0x9e47;
    undefined field7281_0x9e48;
    undefined field7282_0x9e49;
    undefined field7283_0x9e4a;
    undefined field7284_0x9e4b;
    undefined field7285_0x9e4c;
    undefined field7286_0x9e4d;
    undefined field7287_0x9e4e;
    undefined field7288_0x9e4f;
    undefined field7289_0x9e50;
    undefined field7290_0x9e51;
    undefined field7291_0x9e52;
    undefined field7292_0x9e53;
    undefined field7293_0x9e54;
    undefined field7294_0x9e55;
    undefined field7295_0x9e56;
    undefined field7296_0x9e57;
    undefined field7297_0x9e58;
    undefined field7298_0x9e59;
    undefined field7299_0x9e5a;
    undefined field7300_0x9e5b;
    undefined field7301_0x9e5c;
    undefined field7302_0x9e5d;
    undefined field7303_0x9e5e;
    undefined field7304_0x9e5f;
    undefined field7305_0x9e60;
    undefined field7306_0x9e61;
    undefined field7307_0x9e62;
    undefined field7308_0x9e63;
    undefined field7309_0x9e64;
    undefined field7310_0x9e65;
    undefined field7311_0x9e66;
    undefined field7312_0x9e67;
    undefined field7313_0x9e68;
    undefined field7314_0x9e69;
    undefined field7315_0x9e6a;
    undefined field7316_0x9e6b;
    undefined field7317_0x9e6c;
    undefined field7318_0x9e6d;
    undefined field7319_0x9e6e;
    undefined field7320_0x9e6f;
    undefined field7321_0x9e70;
    undefined field7322_0x9e71;
    undefined field7323_0x9e72;
    undefined field7324_0x9e73;
    undefined field7325_0x9e74;
    undefined field7326_0x9e75;
    undefined field7327_0x9e76;
    undefined field7328_0x9e77;
    undefined field7329_0x9e78;
    undefined field7330_0x9e79;
    undefined field7331_0x9e7a;
    undefined field7332_0x9e7b;
    undefined field7333_0x9e7c;
    undefined field7334_0x9e7d;
    undefined field7335_0x9e7e;
    undefined field7336_0x9e7f;
    undefined field7337_0x9e80;
    undefined field7338_0x9e81;
    undefined field7339_0x9e82;
    undefined field7340_0x9e83;
    undefined field7341_0x9e84;
    undefined field7342_0x9e85;
    undefined field7343_0x9e86;
    undefined field7344_0x9e87;
    undefined field7345_0x9e88;
    undefined field7346_0x9e89;
    undefined field7347_0x9e8a;
    undefined field7348_0x9e8b;
    undefined field7349_0x9e8c;
    undefined field7350_0x9e8d;
    undefined field7351_0x9e8e;
    undefined field7352_0x9e8f;
    undefined field7353_0x9e90;
    undefined field7354_0x9e91;
    undefined field7355_0x9e92;
    undefined field7356_0x9e93;
    undefined field7357_0x9e94;
    undefined field7358_0x9e95;
    undefined field7359_0x9e96;
    undefined field7360_0x9e97;
    undefined field7361_0x9e98;
    undefined field7362_0x9e99;
    undefined field7363_0x9e9a;
    undefined field7364_0x9e9b;
    undefined field7365_0x9e9c;
    undefined field7366_0x9e9d;
    undefined field7367_0x9e9e;
    undefined field7368_0x9e9f;
    undefined field7369_0x9ea0;
    undefined field7370_0x9ea1;
    undefined field7371_0x9ea2;
    undefined field7372_0x9ea3;
    undefined field7373_0x9ea4;
    undefined field7374_0x9ea5;
    undefined field7375_0x9ea6;
    undefined field7376_0x9ea7;
    undefined field7377_0x9ea8;
    undefined field7378_0x9ea9;
    undefined field7379_0x9eaa;
    undefined field7380_0x9eab;
    undefined field7381_0x9eac;
    undefined field7382_0x9ead;
    undefined field7383_0x9eae;
    undefined field7384_0x9eaf;
    undefined field7385_0x9eb0;
    undefined field7386_0x9eb1;
    undefined field7387_0x9eb2;
    undefined field7388_0x9eb3;
    undefined field7389_0x9eb4;
    undefined field7390_0x9eb5;
    undefined field7391_0x9eb6;
    undefined field7392_0x9eb7;
    undefined field7393_0x9eb8;
    undefined field7394_0x9eb9;
    undefined field7395_0x9eba;
    undefined field7396_0x9ebb;
    undefined field7397_0x9ebc;
    undefined field7398_0x9ebd;
    undefined field7399_0x9ebe;
    undefined field7400_0x9ebf;
    undefined field7401_0x9ec0;
    undefined field7402_0x9ec1;
    undefined field7403_0x9ec2;
    undefined field7404_0x9ec3;
    undefined field7405_0x9ec4;
    undefined field7406_0x9ec5;
    undefined field7407_0x9ec6;
    undefined field7408_0x9ec7;
    undefined field7409_0x9ec8;
    undefined field7410_0x9ec9;
    undefined field7411_0x9eca;
    undefined field7412_0x9ecb;
    undefined field7413_0x9ecc;
    undefined field7414_0x9ecd;
    undefined field7415_0x9ece;
    undefined field7416_0x9ecf;
    undefined field7417_0x9ed0;
    undefined field7418_0x9ed1;
    undefined field7419_0x9ed2;
    undefined field7420_0x9ed3;
    undefined field7421_0x9ed4;
    undefined field7422_0x9ed5;
    undefined field7423_0x9ed6;
    undefined field7424_0x9ed7;
    undefined field7425_0x9ed8;
    undefined field7426_0x9ed9;
    undefined field7427_0x9eda;
    undefined field7428_0x9edb;
    undefined field7429_0x9edc;
    undefined field7430_0x9edd;
    undefined field7431_0x9ede;
    undefined field7432_0x9edf;
    undefined field7433_0x9ee0;
    undefined field7434_0x9ee1;
    undefined field7435_0x9ee2;
    undefined field7436_0x9ee3;
    undefined field7437_0x9ee4;
    undefined field7438_0x9ee5;
    undefined field7439_0x9ee6;
    undefined field7440_0x9ee7;
    undefined field7441_0x9ee8;
    undefined field7442_0x9ee9;
    undefined field7443_0x9eea;
    undefined field7444_0x9eeb;
    undefined field7445_0x9eec;
    undefined field7446_0x9eed;
    undefined field7447_0x9eee;
    undefined field7448_0x9eef;
    undefined field7449_0x9ef0;
    undefined field7450_0x9ef1;
    undefined field7451_0x9ef2;
    undefined field7452_0x9ef3;
    undefined field7453_0x9ef4;
    undefined field7454_0x9ef5;
    undefined field7455_0x9ef6;
    undefined field7456_0x9ef7;
    undefined field7457_0x9ef8;
    undefined field7458_0x9ef9;
    undefined field7459_0x9efa;
    undefined field7460_0x9efb;
    undefined field7461_0x9efc;
    undefined field7462_0x9efd;
    undefined field7463_0x9efe;
    undefined field7464_0x9eff;
    undefined field7465_0x9f00;
    undefined field7466_0x9f01;
    undefined field7467_0x9f02;
    undefined field7468_0x9f03;
    undefined field7469_0x9f04;
    undefined field7470_0x9f05;
    undefined field7471_0x9f06;
    undefined field7472_0x9f07;
    undefined field7473_0x9f08;
    undefined field7474_0x9f09;
    undefined field7475_0x9f0a;
    undefined field7476_0x9f0b;
    undefined field7477_0x9f0c;
    undefined field7478_0x9f0d;
    undefined field7479_0x9f0e;
    undefined field7480_0x9f0f;
    undefined field7481_0x9f10;
    undefined field7482_0x9f11;
    undefined field7483_0x9f12;
    undefined field7484_0x9f13;
    undefined field7485_0x9f14;
    undefined field7486_0x9f15;
    undefined field7487_0x9f16;
    undefined field7488_0x9f17;
    undefined field7489_0x9f18;
    undefined field7490_0x9f19;
    undefined field7491_0x9f1a;
    undefined field7492_0x9f1b;
    undefined field7493_0x9f1c;
    undefined field7494_0x9f1d;
    undefined field7495_0x9f1e;
    undefined field7496_0x9f1f;
    undefined field7497_0x9f20;
    undefined field7498_0x9f21;
    undefined field7499_0x9f22;
    undefined field7500_0x9f23;
    undefined field7501_0x9f24;
    undefined field7502_0x9f25;
    undefined field7503_0x9f26;
    undefined field7504_0x9f27;
    undefined field7505_0x9f28;
    undefined field7506_0x9f29;
    undefined field7507_0x9f2a;
    undefined field7508_0x9f2b;
    undefined field7509_0x9f2c;
    undefined field7510_0x9f2d;
    undefined field7511_0x9f2e;
    undefined field7512_0x9f2f;
    undefined field7513_0x9f30;
    undefined field7514_0x9f31;
    undefined field7515_0x9f32;
    undefined field7516_0x9f33;
    undefined field7517_0x9f34;
    undefined field7518_0x9f35;
    undefined field7519_0x9f36;
    undefined field7520_0x9f37;
    undefined field7521_0x9f38;
    undefined field7522_0x9f39;
    undefined field7523_0x9f3a;
    undefined field7524_0x9f3b;
    undefined field7525_0x9f3c;
    undefined field7526_0x9f3d;
    undefined field7527_0x9f3e;
    undefined field7528_0x9f3f;
    undefined field7529_0x9f40;
    undefined field7530_0x9f41;
    undefined field7531_0x9f42;
    undefined field7532_0x9f43;
    undefined field7533_0x9f44;
    undefined field7534_0x9f45;
    undefined field7535_0x9f46;
    undefined field7536_0x9f47;
    undefined field7537_0x9f48;
    undefined field7538_0x9f49;
    undefined field7539_0x9f4a;
    undefined field7540_0x9f4b;
    undefined field7541_0x9f4c;
    undefined field7542_0x9f4d;
    undefined field7543_0x9f4e;
    undefined field7544_0x9f4f;
    undefined field7545_0x9f50;
    undefined field7546_0x9f51;
    undefined field7547_0x9f52;
    undefined field7548_0x9f53;
    undefined field7549_0x9f54;
    undefined field7550_0x9f55;
    undefined field7551_0x9f56;
    undefined field7552_0x9f57;
    undefined field7553_0x9f58;
    undefined field7554_0x9f59;
    undefined field7555_0x9f5a;
    undefined field7556_0x9f5b;
    undefined field7557_0x9f5c;
    undefined field7558_0x9f5d;
    undefined field7559_0x9f5e;
    undefined field7560_0x9f5f;
    undefined field7561_0x9f60;
    undefined field7562_0x9f61;
    undefined field7563_0x9f62;
    undefined field7564_0x9f63;
    undefined field7565_0x9f64;
    undefined field7566_0x9f65;
    undefined field7567_0x9f66;
    undefined field7568_0x9f67;
    undefined field7569_0x9f68;
    undefined field7570_0x9f69;
    undefined field7571_0x9f6a;
    undefined field7572_0x9f6b;
    undefined field7573_0x9f6c;
    undefined field7574_0x9f6d;
    undefined field7575_0x9f6e;
    undefined field7576_0x9f6f;
    undefined field7577_0x9f70;
    undefined field7578_0x9f71;
    undefined field7579_0x9f72;
    undefined field7580_0x9f73;
    undefined field7581_0x9f74;
    undefined field7582_0x9f75;
    undefined field7583_0x9f76;
    undefined field7584_0x9f77;
    undefined field7585_0x9f78;
    undefined field7586_0x9f79;
    undefined field7587_0x9f7a;
    undefined field7588_0x9f7b;
    undefined field7589_0x9f7c;
    undefined field7590_0x9f7d;
    undefined field7591_0x9f7e;
    undefined field7592_0x9f7f;
    undefined field7593_0x9f80;
    undefined field7594_0x9f81;
    undefined field7595_0x9f82;
    undefined field7596_0x9f83;
    undefined field7597_0x9f84;
    undefined field7598_0x9f85;
    undefined field7599_0x9f86;
    undefined field7600_0x9f87;
    undefined field7601_0x9f88;
    undefined field7602_0x9f89;
    undefined field7603_0x9f8a;
    undefined field7604_0x9f8b;
    undefined field7605_0x9f8c;
    undefined field7606_0x9f8d;
    undefined field7607_0x9f8e;
    undefined field7608_0x9f8f;
    undefined field7609_0x9f90;
    undefined field7610_0x9f91;
    undefined field7611_0x9f92;
    undefined field7612_0x9f93;
    undefined field7613_0x9f94;
    undefined field7614_0x9f95;
    undefined field7615_0x9f96;
    undefined field7616_0x9f97;
    undefined field7617_0x9f98;
    undefined field7618_0x9f99;
    undefined field7619_0x9f9a;
    undefined field7620_0x9f9b;
    undefined field7621_0x9f9c;
    undefined field7622_0x9f9d;
    undefined field7623_0x9f9e;
    undefined field7624_0x9f9f;
    undefined field7625_0x9fa0;
    undefined field7626_0x9fa1;
    undefined field7627_0x9fa2;
    undefined field7628_0x9fa3;
    undefined field7629_0x9fa4;
    undefined field7630_0x9fa5;
    undefined field7631_0x9fa6;
    undefined field7632_0x9fa7;
    undefined field7633_0x9fa8;
    undefined field7634_0x9fa9;
    undefined field7635_0x9faa;
    undefined field7636_0x9fab;
    undefined field7637_0x9fac;
    undefined field7638_0x9fad;
    undefined field7639_0x9fae;
    undefined field7640_0x9faf;
    undefined field7641_0x9fb0;
    undefined field7642_0x9fb1;
    undefined field7643_0x9fb2;
    undefined field7644_0x9fb3;
    undefined field7645_0x9fb4;
    undefined field7646_0x9fb5;
    undefined field7647_0x9fb6;
    undefined field7648_0x9fb7;
    undefined field7649_0x9fb8;
    undefined field7650_0x9fb9;
    undefined field7651_0x9fba;
    undefined field7652_0x9fbb;
    undefined field7653_0x9fbc;
    undefined field7654_0x9fbd;
    undefined field7655_0x9fbe;
    undefined field7656_0x9fbf;
    undefined field7657_0x9fc0;
    undefined field7658_0x9fc1;
    undefined field7659_0x9fc2;
    undefined field7660_0x9fc3;
    undefined field7661_0x9fc4;
    undefined field7662_0x9fc5;
    undefined field7663_0x9fc6;
    undefined field7664_0x9fc7;
    undefined field7665_0x9fc8;
    undefined field7666_0x9fc9;
    undefined field7667_0x9fca;
    undefined field7668_0x9fcb;
    undefined field7669_0x9fcc;
    undefined field7670_0x9fcd;
    undefined field7671_0x9fce;
    undefined field7672_0x9fcf;
    undefined field7673_0x9fd0;
    undefined field7674_0x9fd1;
    undefined field7675_0x9fd2;
    undefined field7676_0x9fd3;
    undefined field7677_0x9fd4;
    undefined field7678_0x9fd5;
    undefined field7679_0x9fd6;
    undefined field7680_0x9fd7;
    undefined field7681_0x9fd8;
    undefined field7682_0x9fd9;
    undefined field7683_0x9fda;
    undefined field7684_0x9fdb;
    undefined field7685_0x9fdc;
    undefined field7686_0x9fdd;
    undefined field7687_0x9fde;
    undefined field7688_0x9fdf;
    undefined field7689_0x9fe0;
    undefined field7690_0x9fe1;
    undefined field7691_0x9fe2;
    undefined field7692_0x9fe3;
    undefined field7693_0x9fe4;
    undefined field7694_0x9fe5;
    undefined field7695_0x9fe6;
    undefined field7696_0x9fe7;
    undefined field7697_0x9fe8;
    undefined field7698_0x9fe9;
    undefined field7699_0x9fea;
    undefined field7700_0x9feb;
    undefined field7701_0x9fec;
    undefined field7702_0x9fed;
    undefined field7703_0x9fee;
    undefined field7704_0x9fef;
    undefined field7705_0x9ff0;
    undefined field7706_0x9ff1;
    undefined field7707_0x9ff2;
    undefined field7708_0x9ff3;
    undefined field7709_0x9ff4;
    undefined field7710_0x9ff5;
    undefined field7711_0x9ff6;
    undefined field7712_0x9ff7;
    undefined field7713_0x9ff8;
    undefined field7714_0x9ff9;
    undefined field7715_0x9ffa;
    undefined field7716_0x9ffb;
    undefined field7717_0x9ffc;
    undefined field7718_0x9ffd;
    undefined field7719_0x9ffe;
    undefined field7720_0x9fff;
    undefined field7721_0xa000;
    undefined field7722_0xa001;
    undefined field7723_0xa002;
    undefined field7724_0xa003;
    undefined field7725_0xa004;
    undefined field7726_0xa005;
    undefined field7727_0xa006;
    undefined field7728_0xa007;
    undefined field7729_0xa008;
    undefined field7730_0xa009;
    undefined field7731_0xa00a;
    undefined field7732_0xa00b;
    undefined field7733_0xa00c;
    undefined field7734_0xa00d;
    undefined field7735_0xa00e;
    undefined field7736_0xa00f;
    undefined field7737_0xa010;
    undefined field7738_0xa011;
    undefined field7739_0xa012;
    undefined field7740_0xa013;
    undefined field7741_0xa014;
    undefined field7742_0xa015;
    undefined field7743_0xa016;
    undefined field7744_0xa017;
    undefined field7745_0xa018;
    undefined field7746_0xa019;
    undefined field7747_0xa01a;
    undefined field7748_0xa01b;
    undefined field7749_0xa01c;
    undefined field7750_0xa01d;
    undefined field7751_0xa01e;
    undefined field7752_0xa01f;
    undefined field7753_0xa020;
    undefined field7754_0xa021;
    undefined field7755_0xa022;
    undefined field7756_0xa023;
    undefined field7757_0xa024;
    undefined field7758_0xa025;
    undefined field7759_0xa026;
    undefined field7760_0xa027;
    undefined field7761_0xa028;
    undefined field7762_0xa029;
    undefined field7763_0xa02a;
    undefined field7764_0xa02b;
    undefined field7765_0xa02c;
    undefined field7766_0xa02d;
    undefined field7767_0xa02e;
    undefined field7768_0xa02f;
    undefined field7769_0xa030;
    undefined field7770_0xa031;
    undefined field7771_0xa032;
    undefined field7772_0xa033;
    undefined field7773_0xa034;
    undefined field7774_0xa035;
    undefined field7775_0xa036;
    undefined field7776_0xa037;
    undefined field7777_0xa038;
    undefined field7778_0xa039;
    undefined field7779_0xa03a;
    undefined field7780_0xa03b;
    undefined field7781_0xa03c;
    undefined field7782_0xa03d;
    undefined field7783_0xa03e;
    undefined field7784_0xa03f;
    undefined field7785_0xa040;
    undefined field7786_0xa041;
    undefined field7787_0xa042;
    undefined field7788_0xa043;
    undefined field7789_0xa044;
    undefined field7790_0xa045;
    undefined field7791_0xa046;
    undefined field7792_0xa047;
    undefined field7793_0xa048;
    undefined field7794_0xa049;
    undefined field7795_0xa04a;
    undefined field7796_0xa04b;
    undefined field7797_0xa04c;
    undefined field7798_0xa04d;
    undefined field7799_0xa04e;
    undefined field7800_0xa04f;
    undefined field7801_0xa050;
    undefined field7802_0xa051;
    undefined field7803_0xa052;
    undefined field7804_0xa053;
    undefined field7805_0xa054;
    undefined field7806_0xa055;
    undefined field7807_0xa056;
    undefined field7808_0xa057;
    undefined field7809_0xa058;
    undefined field7810_0xa059;
    undefined field7811_0xa05a;
    undefined field7812_0xa05b;
    undefined field7813_0xa05c;
    undefined field7814_0xa05d;
    undefined field7815_0xa05e;
    undefined field7816_0xa05f;
    undefined field7817_0xa060;
    undefined field7818_0xa061;
    undefined field7819_0xa062;
    undefined field7820_0xa063;
    undefined field7821_0xa064;
    undefined field7822_0xa065;
    undefined field7823_0xa066;
    undefined field7824_0xa067;
    undefined field7825_0xa068;
    undefined field7826_0xa069;
    undefined field7827_0xa06a;
    undefined field7828_0xa06b;
    undefined field7829_0xa06c;
    undefined field7830_0xa06d;
    undefined field7831_0xa06e;
    undefined field7832_0xa06f;
    undefined field7833_0xa070;
    undefined field7834_0xa071;
    undefined field7835_0xa072;
    undefined field7836_0xa073;
    undefined field7837_0xa074;
    undefined field7838_0xa075;
    undefined field7839_0xa076;
    undefined field7840_0xa077;
    undefined field7841_0xa078;
    undefined field7842_0xa079;
    undefined field7843_0xa07a;
    undefined field7844_0xa07b;
    undefined field7845_0xa07c;
    undefined field7846_0xa07d;
    undefined field7847_0xa07e;
    undefined field7848_0xa07f;
    undefined field7849_0xa080;
    undefined field7850_0xa081;
    undefined field7851_0xa082;
    undefined field7852_0xa083;
    undefined field7853_0xa084;
    undefined field7854_0xa085;
    undefined field7855_0xa086;
    undefined field7856_0xa087;
    undefined field7857_0xa088;
    undefined field7858_0xa089;
    undefined field7859_0xa08a;
    undefined field7860_0xa08b;
    undefined field7861_0xa08c;
    undefined field7862_0xa08d;
    undefined field7863_0xa08e;
    undefined field7864_0xa08f;
    undefined field7865_0xa090;
    undefined field7866_0xa091;
    undefined field7867_0xa092;
    undefined field7868_0xa093;
    undefined field7869_0xa094;
    undefined field7870_0xa095;
    undefined field7871_0xa096;
    undefined field7872_0xa097;
    undefined field7873_0xa098;
    undefined field7874_0xa099;
    undefined field7875_0xa09a;
    undefined field7876_0xa09b;
    undefined field7877_0xa09c;
    undefined field7878_0xa09d;
    undefined field7879_0xa09e;
    undefined field7880_0xa09f;
    undefined field7881_0xa0a0;
    undefined field7882_0xa0a1;
    undefined field7883_0xa0a2;
    undefined field7884_0xa0a3;
    undefined field7885_0xa0a4;
    undefined field7886_0xa0a5;
    undefined field7887_0xa0a6;
    undefined field7888_0xa0a7;
    undefined field7889_0xa0a8;
    undefined field7890_0xa0a9;
    undefined field7891_0xa0aa;
    undefined field7892_0xa0ab;
    undefined field7893_0xa0ac;
    undefined field7894_0xa0ad;
    undefined field7895_0xa0ae;
    undefined field7896_0xa0af;
    undefined field7897_0xa0b0;
    undefined field7898_0xa0b1;
    undefined field7899_0xa0b2;
    undefined field7900_0xa0b3;
    undefined field7901_0xa0b4;
    undefined field7902_0xa0b5;
    undefined field7903_0xa0b6;
    undefined field7904_0xa0b7;
    undefined field7905_0xa0b8;
    undefined field7906_0xa0b9;
    undefined field7907_0xa0ba;
    undefined field7908_0xa0bb;
    undefined field7909_0xa0bc;
    undefined field7910_0xa0bd;
    undefined field7911_0xa0be;
    undefined field7912_0xa0bf;
    undefined field7913_0xa0c0;
    undefined field7914_0xa0c1;
    undefined field7915_0xa0c2;
    undefined field7916_0xa0c3;
    undefined field7917_0xa0c4;
    undefined field7918_0xa0c5;
    undefined field7919_0xa0c6;
    undefined field7920_0xa0c7;
    undefined field7921_0xa0c8;
    undefined field7922_0xa0c9;
    undefined field7923_0xa0ca;
    undefined field7924_0xa0cb;
    undefined field7925_0xa0cc;
    undefined field7926_0xa0cd;
    undefined field7927_0xa0ce;
    undefined field7928_0xa0cf;
    undefined field7929_0xa0d0;
    undefined field7930_0xa0d1;
    undefined field7931_0xa0d2;
    undefined field7932_0xa0d3;
    undefined field7933_0xa0d4;
    undefined field7934_0xa0d5;
    undefined field7935_0xa0d6;
    undefined field7936_0xa0d7;
    undefined field7937_0xa0d8;
    undefined field7938_0xa0d9;
    undefined field7939_0xa0da;
    undefined field7940_0xa0db;
    undefined field7941_0xa0dc;
    undefined field7942_0xa0dd;
    undefined field7943_0xa0de;
    undefined field7944_0xa0df;
    undefined field7945_0xa0e0;
    undefined field7946_0xa0e1;
    undefined field7947_0xa0e2;
    undefined field7948_0xa0e3;
    undefined field7949_0xa0e4;
    undefined field7950_0xa0e5;
    undefined field7951_0xa0e6;
    undefined field7952_0xa0e7;
    undefined field7953_0xa0e8;
    undefined field7954_0xa0e9;
    undefined field7955_0xa0ea;
    undefined field7956_0xa0eb;
    undefined field7957_0xa0ec;
    undefined field7958_0xa0ed;
    undefined field7959_0xa0ee;
    undefined field7960_0xa0ef;
    undefined field7961_0xa0f0;
    undefined field7962_0xa0f1;
    undefined field7963_0xa0f2;
    undefined field7964_0xa0f3;
    undefined field7965_0xa0f4;
    undefined field7966_0xa0f5;
    undefined field7967_0xa0f6;
    undefined field7968_0xa0f7;
    undefined field7969_0xa0f8;
    undefined field7970_0xa0f9;
    undefined field7971_0xa0fa;
    undefined field7972_0xa0fb;
    undefined field7973_0xa0fc;
    undefined field7974_0xa0fd;
    undefined field7975_0xa0fe;
    undefined field7976_0xa0ff;
    undefined field7977_0xa100;
    undefined field7978_0xa101;
    undefined field7979_0xa102;
    undefined field7980_0xa103;
    undefined field7981_0xa104;
    undefined field7982_0xa105;
    undefined field7983_0xa106;
    undefined field7984_0xa107;
    undefined field7985_0xa108;
    undefined field7986_0xa109;
    undefined field7987_0xa10a;
    undefined field7988_0xa10b;
    undefined field7989_0xa10c;
    undefined field7990_0xa10d;
    undefined field7991_0xa10e;
    undefined field7992_0xa10f;
    undefined field7993_0xa110;
    undefined field7994_0xa111;
    undefined field7995_0xa112;
    undefined field7996_0xa113;
    undefined field7997_0xa114;
    undefined field7998_0xa115;
    undefined field7999_0xa116;
    undefined field8000_0xa117;
    undefined field8001_0xa118;
    undefined field8002_0xa119;
    undefined field8003_0xa11a;
    undefined field8004_0xa11b;
    undefined field8005_0xa11c;
    undefined field8006_0xa11d;
    undefined field8007_0xa11e;
    undefined field8008_0xa11f;
    undefined field8009_0xa120;
    undefined field8010_0xa121;
    undefined field8011_0xa122;
    undefined field8012_0xa123;
    undefined field8013_0xa124;
    undefined field8014_0xa125;
    undefined field8015_0xa126;
    undefined field8016_0xa127;
    undefined field8017_0xa128;
    undefined field8018_0xa129;
    undefined field8019_0xa12a;
    undefined field8020_0xa12b;
    undefined field8021_0xa12c;
    undefined field8022_0xa12d;
    undefined field8023_0xa12e;
    undefined field8024_0xa12f;
    undefined field8025_0xa130;
    undefined field8026_0xa131;
    undefined field8027_0xa132;
    undefined field8028_0xa133;
    undefined field8029_0xa134;
    undefined field8030_0xa135;
    undefined field8031_0xa136;
    undefined field8032_0xa137;
    undefined field8033_0xa138;
    undefined field8034_0xa139;
    undefined field8035_0xa13a;
    undefined field8036_0xa13b;
    undefined field8037_0xa13c;
    undefined field8038_0xa13d;
    undefined field8039_0xa13e;
    undefined field8040_0xa13f;
    undefined field8041_0xa140;
    undefined field8042_0xa141;
    undefined field8043_0xa142;
    undefined field8044_0xa143;
    undefined field8045_0xa144;
    undefined field8046_0xa145;
    undefined field8047_0xa146;
    undefined field8048_0xa147;
    undefined field8049_0xa148;
    undefined field8050_0xa149;
    undefined field8051_0xa14a;
    undefined field8052_0xa14b;
    undefined field8053_0xa14c;
    undefined field8054_0xa14d;
    undefined field8055_0xa14e;
    undefined field8056_0xa14f;
    undefined field8057_0xa150;
    undefined field8058_0xa151;
    undefined field8059_0xa152;
    undefined field8060_0xa153;
    undefined field8061_0xa154;
    undefined field8062_0xa155;
    undefined field8063_0xa156;
    undefined field8064_0xa157;
    undefined field8065_0xa158;
    undefined field8066_0xa159;
    undefined field8067_0xa15a;
    undefined field8068_0xa15b;
    undefined field8069_0xa15c;
    undefined field8070_0xa15d;
    undefined field8071_0xa15e;
    undefined field8072_0xa15f;
    undefined field8073_0xa160;
    undefined field8074_0xa161;
    undefined field8075_0xa162;
    undefined field8076_0xa163;
    undefined field8077_0xa164;
    undefined field8078_0xa165;
    undefined field8079_0xa166;
    undefined field8080_0xa167;
    undefined field8081_0xa168;
    undefined field8082_0xa169;
    undefined field8083_0xa16a;
    undefined field8084_0xa16b;
    undefined field8085_0xa16c;
    undefined field8086_0xa16d;
    undefined field8087_0xa16e;
    undefined field8088_0xa16f;
    undefined field8089_0xa170;
    undefined field8090_0xa171;
    undefined field8091_0xa172;
    undefined field8092_0xa173;
    undefined field8093_0xa174;
    undefined field8094_0xa175;
    undefined field8095_0xa176;
    undefined field8096_0xa177;
    undefined field8097_0xa178;
    undefined field8098_0xa179;
    undefined field8099_0xa17a;
    undefined field8100_0xa17b;
    undefined field8101_0xa17c;
    undefined field8102_0xa17d;
    undefined field8103_0xa17e;
    undefined field8104_0xa17f;
    undefined field8105_0xa180;
    undefined field8106_0xa181;
    undefined field8107_0xa182;
    undefined field8108_0xa183;
    undefined field8109_0xa184;
    undefined field8110_0xa185;
    undefined field8111_0xa186;
    undefined field8112_0xa187;
    undefined field8113_0xa188;
    undefined field8114_0xa189;
    undefined field8115_0xa18a;
    undefined field8116_0xa18b;
    undefined field8117_0xa18c;
    undefined field8118_0xa18d;
    undefined field8119_0xa18e;
    undefined field8120_0xa18f;
    undefined field8121_0xa190;
    undefined field8122_0xa191;
    undefined field8123_0xa192;
    undefined field8124_0xa193;
    undefined field8125_0xa194;
    undefined field8126_0xa195;
    undefined field8127_0xa196;
    undefined field8128_0xa197;
    undefined field8129_0xa198;
    undefined field8130_0xa199;
    undefined field8131_0xa19a;
    undefined field8132_0xa19b;
    undefined field8133_0xa19c;
    undefined field8134_0xa19d;
    undefined field8135_0xa19e;
    undefined field8136_0xa19f;
    undefined field8137_0xa1a0;
    undefined field8138_0xa1a1;
    undefined field8139_0xa1a2;
    undefined field8140_0xa1a3;
    undefined field8141_0xa1a4;
    undefined field8142_0xa1a5;
    undefined field8143_0xa1a6;
    undefined field8144_0xa1a7;
    undefined field8145_0xa1a8;
    undefined field8146_0xa1a9;
    undefined field8147_0xa1aa;
    undefined field8148_0xa1ab;
    undefined field8149_0xa1ac;
    undefined field8150_0xa1ad;
    undefined field8151_0xa1ae;
    undefined field8152_0xa1af;
    undefined field8153_0xa1b0;
    undefined field8154_0xa1b1;
    undefined field8155_0xa1b2;
    undefined field8156_0xa1b3;
    undefined field8157_0xa1b4;
    undefined field8158_0xa1b5;
    undefined field8159_0xa1b6;
    undefined field8160_0xa1b7;
    undefined field8161_0xa1b8;
    undefined field8162_0xa1b9;
    undefined field8163_0xa1ba;
    undefined field8164_0xa1bb;
    undefined field8165_0xa1bc;
    undefined field8166_0xa1bd;
    undefined field8167_0xa1be;
    undefined field8168_0xa1bf;
    undefined field8169_0xa1c0;
    undefined field8170_0xa1c1;
    undefined field8171_0xa1c2;
    undefined field8172_0xa1c3;
    undefined field8173_0xa1c4;
    undefined field8174_0xa1c5;
    undefined field8175_0xa1c6;
    undefined field8176_0xa1c7;
    undefined field8177_0xa1c8;
    undefined field8178_0xa1c9;
    undefined field8179_0xa1ca;
    undefined field8180_0xa1cb;
    undefined field8181_0xa1cc;
    undefined field8182_0xa1cd;
    undefined field8183_0xa1ce;
    undefined field8184_0xa1cf;
    undefined field8185_0xa1d0;
    undefined field8186_0xa1d1;
    undefined field8187_0xa1d2;
    undefined field8188_0xa1d3;
    undefined field8189_0xa1d4;
    undefined field8190_0xa1d5;
    undefined field8191_0xa1d6;
    undefined field8192_0xa1d7;
    undefined field8193_0xa1d8;
    undefined field8194_0xa1d9;
    undefined field8195_0xa1da;
    undefined field8196_0xa1db;
    undefined field8197_0xa1dc;
    undefined field8198_0xa1dd;
    undefined field8199_0xa1de;
    undefined field8200_0xa1df;
    undefined field8201_0xa1e0;
    undefined field8202_0xa1e1;
    undefined field8203_0xa1e2;
    undefined field8204_0xa1e3;
    undefined field8205_0xa1e4;
    undefined field8206_0xa1e5;
    undefined field8207_0xa1e6;
    undefined field8208_0xa1e7;
    undefined field8209_0xa1e8;
    undefined field8210_0xa1e9;
    undefined field8211_0xa1ea;
    undefined field8212_0xa1eb;
    undefined field8213_0xa1ec;
    undefined field8214_0xa1ed;
    undefined field8215_0xa1ee;
    undefined field8216_0xa1ef;
    undefined field8217_0xa1f0;
    undefined field8218_0xa1f1;
    undefined field8219_0xa1f2;
    undefined field8220_0xa1f3;
    undefined field8221_0xa1f4;
    undefined field8222_0xa1f5;
    undefined field8223_0xa1f6;
    undefined field8224_0xa1f7;
    undefined field8225_0xa1f8;
    undefined field8226_0xa1f9;
    undefined field8227_0xa1fa;
    undefined field8228_0xa1fb;
    undefined field8229_0xa1fc;
    undefined field8230_0xa1fd;
    undefined field8231_0xa1fe;
    undefined field8232_0xa1ff;
    undefined field8233_0xa200;
    undefined field8234_0xa201;
    undefined field8235_0xa202;
    undefined field8236_0xa203;
    undefined field8237_0xa204;
    undefined field8238_0xa205;
    undefined field8239_0xa206;
    undefined field8240_0xa207;
    undefined field8241_0xa208;
    undefined field8242_0xa209;
    undefined field8243_0xa20a;
    undefined field8244_0xa20b;
    undefined field8245_0xa20c;
    undefined field8246_0xa20d;
    undefined field8247_0xa20e;
    undefined field8248_0xa20f;
    undefined field8249_0xa210;
    undefined field8250_0xa211;
    undefined field8251_0xa212;
    undefined field8252_0xa213;
    undefined field8253_0xa214;
    undefined field8254_0xa215;
    undefined field8255_0xa216;
    undefined field8256_0xa217;
    undefined field8257_0xa218;
    undefined field8258_0xa219;
    undefined field8259_0xa21a;
    undefined field8260_0xa21b;
    undefined field8261_0xa21c;
    undefined field8262_0xa21d;
    undefined field8263_0xa21e;
    undefined field8264_0xa21f;
    undefined field8265_0xa220;
    undefined field8266_0xa221;
    undefined field8267_0xa222;
    undefined field8268_0xa223;
    undefined field8269_0xa224;
    undefined field8270_0xa225;
    undefined field8271_0xa226;
    undefined field8272_0xa227;
    undefined field8273_0xa228;
    undefined field8274_0xa229;
    undefined field8275_0xa22a;
    undefined field8276_0xa22b;
    undefined field8277_0xa22c;
    undefined field8278_0xa22d;
    undefined field8279_0xa22e;
    undefined field8280_0xa22f;
    undefined field8281_0xa230;
    undefined field8282_0xa231;
    undefined field8283_0xa232;
    undefined field8284_0xa233;
    undefined field8285_0xa234;
    undefined field8286_0xa235;
    undefined field8287_0xa236;
    undefined field8288_0xa237;
    undefined field8289_0xa238;
    undefined field8290_0xa239;
    undefined field8291_0xa23a;
    undefined field8292_0xa23b;
    undefined field8293_0xa23c;
    undefined field8294_0xa23d;
    undefined field8295_0xa23e;
    undefined field8296_0xa23f;
    undefined field8297_0xa240;
    undefined field8298_0xa241;
    undefined field8299_0xa242;
    undefined field8300_0xa243;
    undefined field8301_0xa244;
    undefined field8302_0xa245;
    undefined field8303_0xa246;
    undefined field8304_0xa247;
    undefined field8305_0xa248;
    undefined field8306_0xa249;
    undefined field8307_0xa24a;
    undefined field8308_0xa24b;
    undefined field8309_0xa24c;
    undefined field8310_0xa24d;
    undefined field8311_0xa24e;
    undefined field8312_0xa24f;
    undefined field8313_0xa250;
    undefined field8314_0xa251;
    undefined field8315_0xa252;
    undefined field8316_0xa253;
    undefined field8317_0xa254;
    undefined field8318_0xa255;
    undefined field8319_0xa256;
    undefined field8320_0xa257;
    undefined field8321_0xa258;
    undefined field8322_0xa259;
    undefined field8323_0xa25a;
    undefined field8324_0xa25b;
    undefined field8325_0xa25c;
    undefined field8326_0xa25d;
    undefined field8327_0xa25e;
    undefined field8328_0xa25f;
    undefined field8329_0xa260;
    undefined field8330_0xa261;
    undefined field8331_0xa262;
    undefined field8332_0xa263;
    undefined field8333_0xa264;
    undefined field8334_0xa265;
    undefined field8335_0xa266;
    undefined field8336_0xa267;
    undefined field8337_0xa268;
    undefined field8338_0xa269;
    undefined field8339_0xa26a;
    undefined field8340_0xa26b;
    undefined field8341_0xa26c;
    undefined field8342_0xa26d;
    undefined field8343_0xa26e;
    undefined field8344_0xa26f;
    undefined field8345_0xa270;
    undefined field8346_0xa271;
    undefined field8347_0xa272;
    undefined field8348_0xa273;
    undefined field8349_0xa274;
    undefined field8350_0xa275;
    undefined field8351_0xa276;
    undefined field8352_0xa277;
    undefined field8353_0xa278;
    undefined field8354_0xa279;
    undefined field8355_0xa27a;
    undefined field8356_0xa27b;
    undefined field8357_0xa27c;
    undefined field8358_0xa27d;
    undefined field8359_0xa27e;
    undefined field8360_0xa27f;
    undefined field8361_0xa280;
    undefined field8362_0xa281;
    undefined field8363_0xa282;
    undefined field8364_0xa283;
    undefined field8365_0xa284;
    undefined field8366_0xa285;
    undefined field8367_0xa286;
    undefined field8368_0xa287;
    undefined field8369_0xa288;
    undefined field8370_0xa289;
    undefined field8371_0xa28a;
    undefined field8372_0xa28b;
    undefined field8373_0xa28c;
    undefined field8374_0xa28d;
    undefined field8375_0xa28e;
    undefined field8376_0xa28f;
    undefined field8377_0xa290;
    undefined field8378_0xa291;
    undefined field8379_0xa292;
    undefined field8380_0xa293;
    undefined field8381_0xa294;
    undefined field8382_0xa295;
    undefined field8383_0xa296;
    undefined field8384_0xa297;
    undefined field8385_0xa298;
    undefined field8386_0xa299;
    undefined field8387_0xa29a;
    undefined field8388_0xa29b;
    undefined field8389_0xa29c;
    undefined field8390_0xa29d;
    undefined field8391_0xa29e;
    undefined field8392_0xa29f;
    undefined field8393_0xa2a0;
    undefined field8394_0xa2a1;
    undefined field8395_0xa2a2;
    undefined field8396_0xa2a3;
    undefined field8397_0xa2a4;
    undefined field8398_0xa2a5;
    undefined field8399_0xa2a6;
    undefined field8400_0xa2a7;
    undefined field8401_0xa2a8;
    undefined field8402_0xa2a9;
    undefined field8403_0xa2aa;
    undefined field8404_0xa2ab;
    undefined field8405_0xa2ac;
    undefined field8406_0xa2ad;
    undefined field8407_0xa2ae;
    undefined field8408_0xa2af;
    undefined field8409_0xa2b0;
    undefined field8410_0xa2b1;
    undefined field8411_0xa2b2;
    undefined field8412_0xa2b3;
    undefined field8413_0xa2b4;
    undefined field8414_0xa2b5;
    undefined field8415_0xa2b6;
    undefined field8416_0xa2b7;
    undefined field8417_0xa2b8;
    undefined field8418_0xa2b9;
    undefined field8419_0xa2ba;
    undefined field8420_0xa2bb;
    undefined field8421_0xa2bc;
    undefined field8422_0xa2bd;
    undefined field8423_0xa2be;
    undefined field8424_0xa2bf;
    undefined field8425_0xa2c0;
    undefined field8426_0xa2c1;
    undefined field8427_0xa2c2;
    undefined field8428_0xa2c3;
    undefined field8429_0xa2c4;
    undefined field8430_0xa2c5;
    undefined field8431_0xa2c6;
    undefined field8432_0xa2c7;
    undefined field8433_0xa2c8;
    undefined field8434_0xa2c9;
    undefined field8435_0xa2ca;
    undefined field8436_0xa2cb;
    undefined field8437_0xa2cc;
    undefined field8438_0xa2cd;
    undefined field8439_0xa2ce;
    undefined field8440_0xa2cf;
    undefined field8441_0xa2d0;
    undefined field8442_0xa2d1;
    undefined field8443_0xa2d2;
    undefined field8444_0xa2d3;
    undefined field8445_0xa2d4;
    undefined field8446_0xa2d5;
    undefined field8447_0xa2d6;
    undefined field8448_0xa2d7;
    undefined field8449_0xa2d8;
    undefined field8450_0xa2d9;
    undefined field8451_0xa2da;
    undefined field8452_0xa2db;
    undefined field8453_0xa2dc;
    undefined field8454_0xa2dd;
    undefined field8455_0xa2de;
    undefined field8456_0xa2df;
    undefined field8457_0xa2e0;
    undefined field8458_0xa2e1;
    undefined field8459_0xa2e2;
    undefined field8460_0xa2e3;
    undefined field8461_0xa2e4;
    undefined field8462_0xa2e5;
    undefined field8463_0xa2e6;
    undefined field8464_0xa2e7;
    undefined field8465_0xa2e8;
    undefined field8466_0xa2e9;
    undefined field8467_0xa2ea;
    undefined field8468_0xa2eb;
    undefined field8469_0xa2ec;
    undefined field8470_0xa2ed;
    undefined field8471_0xa2ee;
    undefined field8472_0xa2ef;
    undefined field8473_0xa2f0;
    undefined field8474_0xa2f1;
    undefined field8475_0xa2f2;
    undefined field8476_0xa2f3;
    undefined field8477_0xa2f4;
    undefined field8478_0xa2f5;
    undefined field8479_0xa2f6;
    undefined field8480_0xa2f7;
    undefined field8481_0xa2f8;
    undefined field8482_0xa2f9;
    undefined field8483_0xa2fa;
    undefined field8484_0xa2fb;
    undefined field8485_0xa2fc;
    undefined field8486_0xa2fd;
    undefined field8487_0xa2fe;
    undefined field8488_0xa2ff;
    undefined field8489_0xa300;
    undefined field8490_0xa301;
    undefined field8491_0xa302;
    undefined field8492_0xa303;
    undefined field8493_0xa304;
    undefined field8494_0xa305;
    undefined field8495_0xa306;
    undefined field8496_0xa307;
    undefined field8497_0xa308;
    undefined field8498_0xa309;
    undefined field8499_0xa30a;
    undefined field8500_0xa30b;
    undefined field8501_0xa30c;
    undefined field8502_0xa30d;
    undefined field8503_0xa30e;
    undefined field8504_0xa30f;
    undefined field8505_0xa310;
    undefined field8506_0xa311;
    undefined field8507_0xa312;
    undefined field8508_0xa313;
    undefined field8509_0xa314;
    undefined field8510_0xa315;
    undefined field8511_0xa316;
    undefined field8512_0xa317;
    undefined field8513_0xa318;
    undefined field8514_0xa319;
    undefined field8515_0xa31a;
    undefined field8516_0xa31b;
    undefined field8517_0xa31c;
    undefined field8518_0xa31d;
    undefined field8519_0xa31e;
    undefined field8520_0xa31f;
    undefined field8521_0xa320;
    undefined field8522_0xa321;
    undefined field8523_0xa322;
    undefined field8524_0xa323;
    undefined field8525_0xa324;
    undefined field8526_0xa325;
    undefined field8527_0xa326;
    undefined field8528_0xa327;
    undefined field8529_0xa328;
    undefined field8530_0xa329;
    undefined field8531_0xa32a;
    undefined field8532_0xa32b;
    undefined field8533_0xa32c;
    undefined field8534_0xa32d;
    undefined field8535_0xa32e;
    undefined field8536_0xa32f;
    undefined field8537_0xa330;
    undefined field8538_0xa331;
    undefined field8539_0xa332;
    undefined field8540_0xa333;
    undefined field8541_0xa334;
    undefined field8542_0xa335;
    undefined field8543_0xa336;
    undefined field8544_0xa337;
    undefined field8545_0xa338;
    undefined field8546_0xa339;
    undefined field8547_0xa33a;
    undefined field8548_0xa33b;
    undefined field8549_0xa33c;
    undefined field8550_0xa33d;
    undefined field8551_0xa33e;
    undefined field8552_0xa33f;
    undefined field8553_0xa340;
    undefined field8554_0xa341;
    undefined field8555_0xa342;
    undefined field8556_0xa343;
    undefined field8557_0xa344;
    undefined field8558_0xa345;
    undefined field8559_0xa346;
    undefined field8560_0xa347;
    undefined field8561_0xa348;
    undefined field8562_0xa349;
    undefined field8563_0xa34a;
    undefined field8564_0xa34b;
    undefined field8565_0xa34c;
    undefined field8566_0xa34d;
    undefined field8567_0xa34e;
    undefined field8568_0xa34f;
    undefined field8569_0xa350;
    undefined field8570_0xa351;
    undefined field8571_0xa352;
    undefined field8572_0xa353;
    undefined field8573_0xa354;
    undefined field8574_0xa355;
    undefined field8575_0xa356;
    undefined field8576_0xa357;
    undefined field8577_0xa358;
    undefined field8578_0xa359;
    undefined field8579_0xa35a;
    undefined field8580_0xa35b;
    undefined field8581_0xa35c;
    undefined field8582_0xa35d;
    undefined field8583_0xa35e;
    undefined field8584_0xa35f;
    undefined field8585_0xa360;
    undefined field8586_0xa361;
    undefined field8587_0xa362;
    undefined field8588_0xa363;
    undefined field8589_0xa364;
    undefined field8590_0xa365;
    undefined field8591_0xa366;
    undefined field8592_0xa367;
    undefined field8593_0xa368;
    undefined field8594_0xa369;
    undefined field8595_0xa36a;
    undefined field8596_0xa36b;
    undefined field8597_0xa36c;
    undefined field8598_0xa36d;
    undefined field8599_0xa36e;
    undefined field8600_0xa36f;
    undefined field8601_0xa370;
    undefined field8602_0xa371;
    undefined field8603_0xa372;
    undefined field8604_0xa373;
    undefined field8605_0xa374;
    undefined field8606_0xa375;
    undefined field8607_0xa376;
    undefined field8608_0xa377;
    undefined field8609_0xa378;
    undefined field8610_0xa379;
    undefined field8611_0xa37a;
    undefined field8612_0xa37b;
    undefined field8613_0xa37c;
    undefined field8614_0xa37d;
    undefined field8615_0xa37e;
    undefined field8616_0xa37f;
    undefined field8617_0xa380;
    undefined field8618_0xa381;
    undefined field8619_0xa382;
    undefined field8620_0xa383;
    undefined field8621_0xa384;
    undefined field8622_0xa385;
    undefined field8623_0xa386;
    undefined field8624_0xa387;
    undefined field8625_0xa388;
    undefined field8626_0xa389;
    undefined field8627_0xa38a;
    undefined field8628_0xa38b;
    undefined field8629_0xa38c;
    undefined field8630_0xa38d;
    undefined field8631_0xa38e;
    undefined field8632_0xa38f;
    undefined field8633_0xa390;
    undefined field8634_0xa391;
    undefined field8635_0xa392;
    undefined field8636_0xa393;
    undefined field8637_0xa394;
    undefined field8638_0xa395;
    undefined field8639_0xa396;
    undefined field8640_0xa397;
    undefined field8641_0xa398;
    undefined field8642_0xa399;
    undefined field8643_0xa39a;
    undefined field8644_0xa39b;
    undefined field8645_0xa39c;
    undefined field8646_0xa39d;
    undefined field8647_0xa39e;
    undefined field8648_0xa39f;
    undefined field8649_0xa3a0;
    undefined field8650_0xa3a1;
    undefined field8651_0xa3a2;
    undefined field8652_0xa3a3;
    undefined field8653_0xa3a4;
    undefined field8654_0xa3a5;
    undefined field8655_0xa3a6;
    undefined field8656_0xa3a7;
    undefined field8657_0xa3a8;
    undefined field8658_0xa3a9;
    undefined field8659_0xa3aa;
    undefined field8660_0xa3ab;
    undefined field8661_0xa3ac;
    undefined field8662_0xa3ad;
    undefined field8663_0xa3ae;
    undefined field8664_0xa3af;
    undefined field8665_0xa3b0;
    undefined field8666_0xa3b1;
    undefined field8667_0xa3b2;
    undefined field8668_0xa3b3;
    undefined field8669_0xa3b4;
    undefined field8670_0xa3b5;
    undefined field8671_0xa3b6;
    undefined field8672_0xa3b7;
    undefined field8673_0xa3b8;
    undefined field8674_0xa3b9;
    undefined field8675_0xa3ba;
    undefined field8676_0xa3bb;
    undefined field8677_0xa3bc;
    undefined field8678_0xa3bd;
    undefined field8679_0xa3be;
    undefined field8680_0xa3bf;
    undefined field8681_0xa3c0;
    undefined field8682_0xa3c1;
    undefined field8683_0xa3c2;
    undefined field8684_0xa3c3;
    undefined field8685_0xa3c4;
    undefined field8686_0xa3c5;
    undefined field8687_0xa3c6;
    undefined field8688_0xa3c7;
    undefined field8689_0xa3c8;
    undefined field8690_0xa3c9;
    undefined field8691_0xa3ca;
    undefined field8692_0xa3cb;
    undefined field8693_0xa3cc;
    undefined field8694_0xa3cd;
    undefined field8695_0xa3ce;
    undefined field8696_0xa3cf;
    undefined field8697_0xa3d0;
    undefined field8698_0xa3d1;
    undefined field8699_0xa3d2;
    undefined field8700_0xa3d3;
    undefined field8701_0xa3d4;
    undefined field8702_0xa3d5;
    undefined field8703_0xa3d6;
    undefined field8704_0xa3d7;
    undefined field8705_0xa3d8;
    undefined field8706_0xa3d9;
    undefined field8707_0xa3da;
    undefined field8708_0xa3db;
    undefined field8709_0xa3dc;
    undefined field8710_0xa3dd;
    undefined field8711_0xa3de;
    undefined field8712_0xa3df;
    undefined field8713_0xa3e0;
    undefined field8714_0xa3e1;
    undefined field8715_0xa3e2;
    undefined field8716_0xa3e3;
    undefined field8717_0xa3e4;
    undefined field8718_0xa3e5;
    undefined field8719_0xa3e6;
    undefined field8720_0xa3e7;
    undefined field8721_0xa3e8;
    undefined field8722_0xa3e9;
    undefined field8723_0xa3ea;
    undefined field8724_0xa3eb;
    undefined field8725_0xa3ec;
    undefined field8726_0xa3ed;
    undefined field8727_0xa3ee;
    undefined field8728_0xa3ef;
    undefined field8729_0xa3f0;
    undefined field8730_0xa3f1;
    undefined field8731_0xa3f2;
    undefined field8732_0xa3f3;
    undefined field8733_0xa3f4;
    undefined field8734_0xa3f5;
    undefined field8735_0xa3f6;
    undefined field8736_0xa3f7;
    undefined field8737_0xa3f8;
    undefined field8738_0xa3f9;
    undefined field8739_0xa3fa;
    undefined field8740_0xa3fb;
    undefined field8741_0xa3fc;
    undefined field8742_0xa3fd;
    undefined field8743_0xa3fe;
    undefined field8744_0xa3ff;
    undefined field8745_0xa400;
    undefined field8746_0xa401;
    undefined field8747_0xa402;
    undefined field8748_0xa403;
    undefined field8749_0xa404;
    undefined field8750_0xa405;
    undefined field8751_0xa406;
    undefined field8752_0xa407;
    undefined field8753_0xa408;
    undefined field8754_0xa409;
    undefined field8755_0xa40a;
    undefined field8756_0xa40b;
    undefined field8757_0xa40c;
    undefined field8758_0xa40d;
    undefined field8759_0xa40e;
    undefined field8760_0xa40f;
    undefined field8761_0xa410;
    undefined field8762_0xa411;
    undefined field8763_0xa412;
    undefined field8764_0xa413;
    undefined field8765_0xa414;
    undefined field8766_0xa415;
    undefined field8767_0xa416;
    undefined field8768_0xa417;
    undefined field8769_0xa418;
    undefined field8770_0xa419;
    undefined field8771_0xa41a;
    undefined field8772_0xa41b;
    undefined field8773_0xa41c;
    undefined field8774_0xa41d;
    undefined field8775_0xa41e;
    undefined field8776_0xa41f;
    undefined field8777_0xa420;
    undefined field8778_0xa421;
    undefined field8779_0xa422;
    undefined field8780_0xa423;
    undefined field8781_0xa424;
    undefined field8782_0xa425;
    undefined field8783_0xa426;
    undefined field8784_0xa427;
    undefined field8785_0xa428;
    undefined field8786_0xa429;
    undefined field8787_0xa42a;
    undefined field8788_0xa42b;
    undefined field8789_0xa42c;
    undefined field8790_0xa42d;
    undefined field8791_0xa42e;
    undefined field8792_0xa42f;
    undefined field8793_0xa430;
    undefined field8794_0xa431;
    undefined field8795_0xa432;
    undefined field8796_0xa433;
    undefined field8797_0xa434;
    undefined field8798_0xa435;
    undefined field8799_0xa436;
    undefined field8800_0xa437;
    undefined field8801_0xa438;
    undefined field8802_0xa439;
    undefined field8803_0xa43a;
    undefined field8804_0xa43b;
    undefined field8805_0xa43c;
    undefined field8806_0xa43d;
    undefined field8807_0xa43e;
    undefined field8808_0xa43f;
    undefined field8809_0xa440;
    undefined field8810_0xa441;
    undefined field8811_0xa442;
    undefined field8812_0xa443;
    undefined field8813_0xa444;
    undefined field8814_0xa445;
    undefined field8815_0xa446;
    undefined field8816_0xa447;
    undefined field8817_0xa448;
    undefined field8818_0xa449;
    undefined field8819_0xa44a;
    undefined field8820_0xa44b;
    undefined field8821_0xa44c;
    undefined field8822_0xa44d;
    undefined field8823_0xa44e;
    undefined field8824_0xa44f;
    undefined field8825_0xa450;
    undefined field8826_0xa451;
    undefined field8827_0xa452;
    undefined field8828_0xa453;
    undefined field8829_0xa454;
    undefined field8830_0xa455;
    undefined field8831_0xa456;
    undefined field8832_0xa457;
    undefined field8833_0xa458;
    undefined field8834_0xa459;
    undefined field8835_0xa45a;
    undefined field8836_0xa45b;
    undefined field8837_0xa45c;
    undefined field8838_0xa45d;
    undefined field8839_0xa45e;
    undefined field8840_0xa45f;
    undefined field8841_0xa460;
    undefined field8842_0xa461;
    undefined field8843_0xa462;
    undefined field8844_0xa463;
    undefined field8845_0xa464;
    undefined field8846_0xa465;
    undefined field8847_0xa466;
    undefined field8848_0xa467;
    undefined field8849_0xa468;
    undefined field8850_0xa469;
    undefined field8851_0xa46a;
    undefined field8852_0xa46b;
    undefined field8853_0xa46c;
    undefined field8854_0xa46d;
    undefined field8855_0xa46e;
    undefined field8856_0xa46f;
    undefined field8857_0xa470;
    undefined field8858_0xa471;
    undefined field8859_0xa472;
    undefined field8860_0xa473;
    undefined field8861_0xa474;
    undefined field8862_0xa475;
    undefined field8863_0xa476;
    undefined field8864_0xa477;
    undefined field8865_0xa478;
    undefined field8866_0xa479;
    undefined field8867_0xa47a;
    undefined field8868_0xa47b;
    undefined field8869_0xa47c;
    undefined field8870_0xa47d;
    undefined field8871_0xa47e;
    undefined field8872_0xa47f;
    undefined field8873_0xa480;
    undefined field8874_0xa481;
    undefined field8875_0xa482;
    undefined field8876_0xa483;
    undefined field8877_0xa484;
    undefined field8878_0xa485;
    undefined field8879_0xa486;
    undefined field8880_0xa487;
    undefined field8881_0xa488;
    undefined field8882_0xa489;
    undefined field8883_0xa48a;
    undefined field8884_0xa48b;
    undefined field8885_0xa48c;
    undefined field8886_0xa48d;
    undefined field8887_0xa48e;
    undefined field8888_0xa48f;
    undefined field8889_0xa490;
    undefined field8890_0xa491;
    undefined field8891_0xa492;
    undefined field8892_0xa493;
    undefined field8893_0xa494;
    undefined field8894_0xa495;
    undefined field8895_0xa496;
    undefined field8896_0xa497;
    undefined field8897_0xa498;
    undefined field8898_0xa499;
    undefined field8899_0xa49a;
    undefined field8900_0xa49b;
    undefined field8901_0xa49c;
    undefined field8902_0xa49d;
    undefined field8903_0xa49e;
    undefined field8904_0xa49f;
    undefined field8905_0xa4a0;
    undefined field8906_0xa4a1;
    undefined field8907_0xa4a2;
    undefined field8908_0xa4a3;
    undefined field8909_0xa4a4;
    undefined field8910_0xa4a5;
    undefined field8911_0xa4a6;
    undefined field8912_0xa4a7;
    undefined field8913_0xa4a8;
    undefined field8914_0xa4a9;
    undefined field8915_0xa4aa;
    undefined field8916_0xa4ab;
    undefined field8917_0xa4ac;
    undefined field8918_0xa4ad;
    undefined field8919_0xa4ae;
    undefined field8920_0xa4af;
    undefined field8921_0xa4b0;
    undefined field8922_0xa4b1;
    undefined field8923_0xa4b2;
    undefined field8924_0xa4b3;
    undefined field8925_0xa4b4;
    undefined field8926_0xa4b5;
    undefined field8927_0xa4b6;
    undefined field8928_0xa4b7;
    undefined field8929_0xa4b8;
    undefined field8930_0xa4b9;
    undefined field8931_0xa4ba;
    undefined field8932_0xa4bb;
    undefined field8933_0xa4bc;
    undefined field8934_0xa4bd;
    undefined field8935_0xa4be;
    undefined field8936_0xa4bf;
    undefined field8937_0xa4c0;
    undefined field8938_0xa4c1;
    undefined field8939_0xa4c2;
    undefined field8940_0xa4c3;
    undefined field8941_0xa4c4;
    undefined field8942_0xa4c5;
    undefined field8943_0xa4c6;
    undefined field8944_0xa4c7;
    undefined field8945_0xa4c8;
    undefined field8946_0xa4c9;
    undefined field8947_0xa4ca;
    undefined field8948_0xa4cb;
    undefined field8949_0xa4cc;
    undefined field8950_0xa4cd;
    undefined field8951_0xa4ce;
    undefined field8952_0xa4cf;
    undefined field8953_0xa4d0;
    undefined field8954_0xa4d1;
    undefined field8955_0xa4d2;
    undefined field8956_0xa4d3;
    undefined field8957_0xa4d4;
    undefined field8958_0xa4d5;
    undefined field8959_0xa4d6;
    undefined field8960_0xa4d7;
    undefined field8961_0xa4d8;
    undefined field8962_0xa4d9;
    undefined field8963_0xa4da;
    undefined field8964_0xa4db;
    undefined field8965_0xa4dc;
    undefined field8966_0xa4dd;
    undefined field8967_0xa4de;
    undefined field8968_0xa4df;
    undefined field8969_0xa4e0;
    undefined field8970_0xa4e1;
    undefined field8971_0xa4e2;
    undefined field8972_0xa4e3;
    undefined field8973_0xa4e4;
    undefined field8974_0xa4e5;
    undefined field8975_0xa4e6;
    undefined field8976_0xa4e7;
    undefined field8977_0xa4e8;
    undefined field8978_0xa4e9;
    undefined field8979_0xa4ea;
    undefined field8980_0xa4eb;
    undefined field8981_0xa4ec;
    undefined field8982_0xa4ed;
    undefined field8983_0xa4ee;
    undefined field8984_0xa4ef;
    undefined field8985_0xa4f0;
    undefined field8986_0xa4f1;
    undefined field8987_0xa4f2;
    undefined field8988_0xa4f3;
    undefined field8989_0xa4f4;
    undefined field8990_0xa4f5;
    undefined field8991_0xa4f6;
    undefined field8992_0xa4f7;
    undefined field8993_0xa4f8;
    undefined field8994_0xa4f9;
    undefined field8995_0xa4fa;
    undefined field8996_0xa4fb;
    undefined field8997_0xa4fc;
    undefined field8998_0xa4fd;
    undefined field8999_0xa4fe;
    undefined field9000_0xa4ff;
    undefined field9001_0xa500;
    undefined field9002_0xa501;
    undefined field9003_0xa502;
    undefined field9004_0xa503;
    undefined field9005_0xa504;
    undefined field9006_0xa505;
    undefined field9007_0xa506;
    undefined field9008_0xa507;
    undefined field9009_0xa508;
    undefined field9010_0xa509;
    undefined field9011_0xa50a;
    undefined field9012_0xa50b;
    undefined field9013_0xa50c;
    undefined field9014_0xa50d;
    undefined field9015_0xa50e;
    undefined field9016_0xa50f;
    undefined field9017_0xa510;
    undefined field9018_0xa511;
    undefined field9019_0xa512;
    undefined field9020_0xa513;
    undefined field9021_0xa514;
    undefined field9022_0xa515;
    undefined field9023_0xa516;
    undefined field9024_0xa517;
    undefined field9025_0xa518;
    undefined field9026_0xa519;
    undefined field9027_0xa51a;
    undefined field9028_0xa51b;
    undefined field9029_0xa51c;
    undefined field9030_0xa51d;
    undefined field9031_0xa51e;
    undefined field9032_0xa51f;
    undefined field9033_0xa520;
    undefined field9034_0xa521;
    undefined field9035_0xa522;
    undefined field9036_0xa523;
    undefined field9037_0xa524;
    undefined field9038_0xa525;
    undefined field9039_0xa526;
    undefined field9040_0xa527;
    undefined field9041_0xa528;
    undefined field9042_0xa529;
    undefined field9043_0xa52a;
    undefined field9044_0xa52b;
    undefined field9045_0xa52c;
    undefined field9046_0xa52d;
    undefined field9047_0xa52e;
    undefined field9048_0xa52f;
    undefined field9049_0xa530;
    undefined field9050_0xa531;
    undefined field9051_0xa532;
    undefined field9052_0xa533;
    undefined field9053_0xa534;
    undefined field9054_0xa535;
    undefined field9055_0xa536;
    undefined field9056_0xa537;
    undefined field9057_0xa538;
    undefined field9058_0xa539;
    undefined field9059_0xa53a;
    undefined field9060_0xa53b;
    undefined field9061_0xa53c;
    undefined field9062_0xa53d;
    undefined field9063_0xa53e;
    undefined field9064_0xa53f;
    undefined field9065_0xa540;
    undefined field9066_0xa541;
    undefined field9067_0xa542;
    undefined field9068_0xa543;
    undefined field9069_0xa544;
    undefined field9070_0xa545;
    undefined field9071_0xa546;
    undefined field9072_0xa547;
    undefined field9073_0xa548;
    undefined field9074_0xa549;
    undefined field9075_0xa54a;
    undefined field9076_0xa54b;
    undefined field9077_0xa54c;
    undefined field9078_0xa54d;
    undefined field9079_0xa54e;
    undefined field9080_0xa54f;
    undefined field9081_0xa550;
    undefined field9082_0xa551;
    undefined field9083_0xa552;
    undefined field9084_0xa553;
    undefined field9085_0xa554;
    undefined field9086_0xa555;
    undefined field9087_0xa556;
    undefined field9088_0xa557;
    undefined field9089_0xa558;
    undefined field9090_0xa559;
    undefined field9091_0xa55a;
    undefined field9092_0xa55b;
    undefined field9093_0xa55c;
    undefined field9094_0xa55d;
    undefined field9095_0xa55e;
    undefined field9096_0xa55f;
    undefined field9097_0xa560;
    undefined field9098_0xa561;
    undefined field9099_0xa562;
    undefined field9100_0xa563;
    undefined field9101_0xa564;
    undefined field9102_0xa565;
    undefined field9103_0xa566;
    undefined field9104_0xa567;
    undefined field9105_0xa568;
    undefined field9106_0xa569;
    undefined field9107_0xa56a;
    undefined field9108_0xa56b;
    undefined field9109_0xa56c;
    undefined field9110_0xa56d;
    undefined field9111_0xa56e;
    undefined field9112_0xa56f;
    undefined field9113_0xa570;
    undefined field9114_0xa571;
    undefined field9115_0xa572;
    undefined field9116_0xa573;
    undefined field9117_0xa574;
    undefined field9118_0xa575;
    undefined field9119_0xa576;
    undefined field9120_0xa577;
    undefined field9121_0xa578;
    undefined field9122_0xa579;
    undefined field9123_0xa57a;
    undefined field9124_0xa57b;
    undefined field9125_0xa57c;
    undefined field9126_0xa57d;
    undefined field9127_0xa57e;
    undefined field9128_0xa57f;
    undefined field9129_0xa580;
    undefined field9130_0xa581;
    undefined field9131_0xa582;
    undefined field9132_0xa583;
    undefined field9133_0xa584;
    undefined field9134_0xa585;
    undefined field9135_0xa586;
    undefined field9136_0xa587;
    undefined field9137_0xa588;
    undefined field9138_0xa589;
    undefined field9139_0xa58a;
    undefined field9140_0xa58b;
    undefined field9141_0xa58c;
    undefined field9142_0xa58d;
    undefined field9143_0xa58e;
    undefined field9144_0xa58f;
    undefined field9145_0xa590;
    undefined field9146_0xa591;
    undefined field9147_0xa592;
    undefined field9148_0xa593;
    undefined field9149_0xa594;
    undefined field9150_0xa595;
    undefined field9151_0xa596;
    undefined field9152_0xa597;
    undefined field9153_0xa598;
    undefined field9154_0xa599;
    undefined field9155_0xa59a;
    undefined field9156_0xa59b;
    undefined field9157_0xa59c;
    undefined field9158_0xa59d;
    undefined field9159_0xa59e;
    undefined field9160_0xa59f;
    undefined field9161_0xa5a0;
    undefined field9162_0xa5a1;
    undefined field9163_0xa5a2;
    undefined field9164_0xa5a3;
    undefined field9165_0xa5a4;
    undefined field9166_0xa5a5;
    undefined field9167_0xa5a6;
    undefined field9168_0xa5a7;
    undefined field9169_0xa5a8;
    undefined field9170_0xa5a9;
    undefined field9171_0xa5aa;
    undefined field9172_0xa5ab;
    undefined field9173_0xa5ac;
    undefined field9174_0xa5ad;
    undefined field9175_0xa5ae;
    undefined field9176_0xa5af;
    undefined field9177_0xa5b0;
    undefined field9178_0xa5b1;
    undefined field9179_0xa5b2;
    undefined field9180_0xa5b3;
    undefined field9181_0xa5b4;
    undefined field9182_0xa5b5;
    undefined field9183_0xa5b6;
    undefined field9184_0xa5b7;
    undefined field9185_0xa5b8;
    undefined field9186_0xa5b9;
    undefined field9187_0xa5ba;
    undefined field9188_0xa5bb;
    undefined field9189_0xa5bc;
    undefined field9190_0xa5bd;
    undefined field9191_0xa5be;
    undefined field9192_0xa5bf;
    undefined field9193_0xa5c0;
    undefined field9194_0xa5c1;
    undefined field9195_0xa5c2;
    undefined field9196_0xa5c3;
    undefined field9197_0xa5c4;
    undefined field9198_0xa5c5;
    undefined field9199_0xa5c6;
    undefined field9200_0xa5c7;
    undefined field9201_0xa5c8;
    undefined field9202_0xa5c9;
    undefined field9203_0xa5ca;
    undefined field9204_0xa5cb;
    undefined field9205_0xa5cc;
    undefined field9206_0xa5cd;
    undefined field9207_0xa5ce;
    undefined field9208_0xa5cf;
    undefined field9209_0xa5d0;
    undefined field9210_0xa5d1;
    undefined field9211_0xa5d2;
    undefined field9212_0xa5d3;
    undefined field9213_0xa5d4;
    undefined field9214_0xa5d5;
    undefined field9215_0xa5d6;
    undefined field9216_0xa5d7;
    undefined field9217_0xa5d8;
    undefined field9218_0xa5d9;
    undefined field9219_0xa5da;
    undefined field9220_0xa5db;
    undefined field9221_0xa5dc;
    undefined field9222_0xa5dd;
    undefined field9223_0xa5de;
    undefined field9224_0xa5df;
    undefined field9225_0xa5e0;
    undefined field9226_0xa5e1;
    undefined field9227_0xa5e2;
    undefined field9228_0xa5e3;
    undefined field9229_0xa5e4;
    undefined field9230_0xa5e5;
    undefined field9231_0xa5e6;
    undefined field9232_0xa5e7;
    undefined field9233_0xa5e8;
    undefined field9234_0xa5e9;
    undefined field9235_0xa5ea;
    undefined field9236_0xa5eb;
    undefined field9237_0xa5ec;
    undefined field9238_0xa5ed;
    undefined field9239_0xa5ee;
    undefined field9240_0xa5ef;
    undefined field9241_0xa5f0;
    undefined field9242_0xa5f1;
    undefined field9243_0xa5f2;
    undefined field9244_0xa5f3;
    undefined field9245_0xa5f4;
    undefined field9246_0xa5f5;
    undefined field9247_0xa5f6;
    undefined field9248_0xa5f7;
    undefined field9249_0xa5f8;
    undefined field9250_0xa5f9;
    undefined field9251_0xa5fa;
    undefined field9252_0xa5fb;
    undefined field9253_0xa5fc;
    undefined field9254_0xa5fd;
    undefined field9255_0xa5fe;
    undefined field9256_0xa5ff;
    undefined field9257_0xa600;
    undefined field9258_0xa601;
    undefined field9259_0xa602;
    undefined field9260_0xa603;
    undefined field9261_0xa604;
    undefined field9262_0xa605;
    undefined field9263_0xa606;
    undefined field9264_0xa607;
    undefined field9265_0xa608;
    undefined field9266_0xa609;
    undefined field9267_0xa60a;
    undefined field9268_0xa60b;
    undefined field9269_0xa60c;
    undefined field9270_0xa60d;
    undefined field9271_0xa60e;
    undefined field9272_0xa60f;
    undefined field9273_0xa610;
    undefined field9274_0xa611;
    undefined field9275_0xa612;
    undefined field9276_0xa613;
    undefined field9277_0xa614;
    undefined field9278_0xa615;
    undefined field9279_0xa616;
    undefined field9280_0xa617;
    undefined field9281_0xa618;
    undefined field9282_0xa619;
    undefined field9283_0xa61a;
    undefined field9284_0xa61b;
    undefined field9285_0xa61c;
    undefined field9286_0xa61d;
    undefined field9287_0xa61e;
    undefined field9288_0xa61f;
    undefined field9289_0xa620;
    undefined field9290_0xa621;
    undefined field9291_0xa622;
    undefined field9292_0xa623;
    undefined field9293_0xa624;
    undefined field9294_0xa625;
    undefined field9295_0xa626;
    undefined field9296_0xa627;
    undefined field9297_0xa628;
    undefined field9298_0xa629;
    undefined field9299_0xa62a;
    undefined field9300_0xa62b;
    undefined field9301_0xa62c;
    undefined field9302_0xa62d;
    undefined field9303_0xa62e;
    undefined field9304_0xa62f;
    undefined field9305_0xa630;
    undefined field9306_0xa631;
    undefined field9307_0xa632;
    undefined field9308_0xa633;
    undefined field9309_0xa634;
    undefined field9310_0xa635;
    undefined field9311_0xa636;
    undefined field9312_0xa637;
    undefined field9313_0xa638;
    undefined field9314_0xa639;
    undefined field9315_0xa63a;
    undefined field9316_0xa63b;
    undefined field9317_0xa63c;
    undefined field9318_0xa63d;
    undefined field9319_0xa63e;
    undefined field9320_0xa63f;
    undefined field9321_0xa640;
    undefined field9322_0xa641;
    undefined field9323_0xa642;
    undefined field9324_0xa643;
    undefined field9325_0xa644;
    undefined field9326_0xa645;
    undefined field9327_0xa646;
    undefined field9328_0xa647;
    undefined field9329_0xa648;
    undefined field9330_0xa649;
    undefined field9331_0xa64a;
    undefined field9332_0xa64b;
    undefined field9333_0xa64c;
    undefined field9334_0xa64d;
    undefined field9335_0xa64e;
    undefined field9336_0xa64f;
    undefined field9337_0xa650;
    undefined field9338_0xa651;
    undefined field9339_0xa652;
    undefined field9340_0xa653;
    undefined field9341_0xa654;
    undefined field9342_0xa655;
    undefined field9343_0xa656;
    undefined field9344_0xa657;
    undefined field9345_0xa658;
    undefined field9346_0xa659;
    undefined field9347_0xa65a;
    undefined field9348_0xa65b;
    undefined field9349_0xa65c;
    undefined field9350_0xa65d;
    undefined field9351_0xa65e;
    undefined field9352_0xa65f;
    undefined field9353_0xa660;
    undefined field9354_0xa661;
    undefined field9355_0xa662;
    undefined field9356_0xa663;
    undefined field9357_0xa664;
    undefined field9358_0xa665;
    undefined field9359_0xa666;
    undefined field9360_0xa667;
    undefined field9361_0xa668;
    undefined field9362_0xa669;
    undefined field9363_0xa66a;
    undefined field9364_0xa66b;
    undefined field9365_0xa66c;
    undefined field9366_0xa66d;
    undefined field9367_0xa66e;
    undefined field9368_0xa66f;
    undefined field9369_0xa670;
    undefined field9370_0xa671;
    undefined field9371_0xa672;
    undefined field9372_0xa673;
    undefined field9373_0xa674;
    undefined field9374_0xa675;
    undefined field9375_0xa676;
    undefined field9376_0xa677;
    undefined field9377_0xa678;
    undefined field9378_0xa679;
    undefined field9379_0xa67a;
    undefined field9380_0xa67b;
    undefined field9381_0xa67c;
    undefined field9382_0xa67d;
    undefined field9383_0xa67e;
    undefined field9384_0xa67f;
    undefined field9385_0xa680;
    undefined field9386_0xa681;
    undefined field9387_0xa682;
    undefined field9388_0xa683;
    undefined field9389_0xa684;
    undefined field9390_0xa685;
    undefined field9391_0xa686;
    undefined field9392_0xa687;
    undefined field9393_0xa688;
    undefined field9394_0xa689;
    undefined field9395_0xa68a;
    undefined field9396_0xa68b;
    undefined field9397_0xa68c;
    undefined field9398_0xa68d;
    undefined field9399_0xa68e;
    undefined field9400_0xa68f;
    undefined field9401_0xa690;
    undefined field9402_0xa691;
    undefined field9403_0xa692;
    undefined field9404_0xa693;
    undefined field9405_0xa694;
    undefined field9406_0xa695;
    undefined field9407_0xa696;
    undefined field9408_0xa697;
    undefined field9409_0xa698;
    undefined field9410_0xa699;
    undefined field9411_0xa69a;
    undefined field9412_0xa69b;
    undefined field9413_0xa69c;
    undefined field9414_0xa69d;
    undefined field9415_0xa69e;
    undefined field9416_0xa69f;
    undefined field9417_0xa6a0;
    undefined field9418_0xa6a1;
    undefined field9419_0xa6a2;
    undefined field9420_0xa6a3;
    undefined field9421_0xa6a4;
    undefined field9422_0xa6a5;
    undefined field9423_0xa6a6;
    undefined field9424_0xa6a7;
    undefined field9425_0xa6a8;
    undefined field9426_0xa6a9;
    undefined field9427_0xa6aa;
    undefined field9428_0xa6ab;
    undefined field9429_0xa6ac;
    undefined field9430_0xa6ad;
    undefined field9431_0xa6ae;
    undefined field9432_0xa6af;
    undefined field9433_0xa6b0;
    undefined field9434_0xa6b1;
    undefined field9435_0xa6b2;
    undefined field9436_0xa6b3;
    undefined field9437_0xa6b4;
    undefined field9438_0xa6b5;
    undefined field9439_0xa6b6;
    undefined field9440_0xa6b7;
    undefined field9441_0xa6b8;
    undefined field9442_0xa6b9;
    undefined field9443_0xa6ba;
    undefined field9444_0xa6bb;
    undefined field9445_0xa6bc;
    undefined field9446_0xa6bd;
    undefined field9447_0xa6be;
    undefined field9448_0xa6bf;
    undefined field9449_0xa6c0;
    undefined field9450_0xa6c1;
    undefined field9451_0xa6c2;
    undefined field9452_0xa6c3;
    undefined field9453_0xa6c4;
    undefined field9454_0xa6c5;
    undefined field9455_0xa6c6;
    undefined field9456_0xa6c7;
    undefined field9457_0xa6c8;
    undefined field9458_0xa6c9;
    undefined field9459_0xa6ca;
    undefined field9460_0xa6cb;
    undefined field9461_0xa6cc;
    undefined field9462_0xa6cd;
    undefined field9463_0xa6ce;
    undefined field9464_0xa6cf;
    undefined field9465_0xa6d0;
    undefined field9466_0xa6d1;
    undefined field9467_0xa6d2;
    undefined field9468_0xa6d3;
    undefined field9469_0xa6d4;
    undefined field9470_0xa6d5;
    undefined field9471_0xa6d6;
    undefined field9472_0xa6d7;
    undefined field9473_0xa6d8;
    undefined field9474_0xa6d9;
    undefined field9475_0xa6da;
    undefined field9476_0xa6db;
    undefined field9477_0xa6dc;
    undefined field9478_0xa6dd;
    undefined field9479_0xa6de;
    undefined field9480_0xa6df;
    undefined field9481_0xa6e0;
    undefined field9482_0xa6e1;
    undefined field9483_0xa6e2;
    undefined field9484_0xa6e3;
    undefined field9485_0xa6e4;
    undefined field9486_0xa6e5;
    undefined field9487_0xa6e6;
    undefined field9488_0xa6e7;
    undefined field9489_0xa6e8;
    undefined field9490_0xa6e9;
    undefined field9491_0xa6ea;
    undefined field9492_0xa6eb;
    undefined field9493_0xa6ec;
    undefined field9494_0xa6ed;
    undefined field9495_0xa6ee;
    undefined field9496_0xa6ef;
    undefined field9497_0xa6f0;
    undefined field9498_0xa6f1;
    undefined field9499_0xa6f2;
    undefined field9500_0xa6f3;
    undefined field9501_0xa6f4;
    undefined field9502_0xa6f5;
    undefined field9503_0xa6f6;
    undefined field9504_0xa6f7;
    undefined field9505_0xa6f8;
    undefined field9506_0xa6f9;
    undefined field9507_0xa6fa;
    undefined field9508_0xa6fb;
    undefined field9509_0xa6fc;
    undefined field9510_0xa6fd;
    undefined field9511_0xa6fe;
    undefined field9512_0xa6ff;
    undefined field9513_0xa700;
    undefined field9514_0xa701;
    undefined field9515_0xa702;
    undefined field9516_0xa703;
    undefined field9517_0xa704;
    undefined field9518_0xa705;
    undefined field9519_0xa706;
    undefined field9520_0xa707;
    undefined field9521_0xa708;
    undefined field9522_0xa709;
    undefined field9523_0xa70a;
    undefined field9524_0xa70b;
    undefined field9525_0xa70c;
    undefined field9526_0xa70d;
    undefined field9527_0xa70e;
    undefined field9528_0xa70f;
    undefined field9529_0xa710;
    undefined field9530_0xa711;
    undefined field9531_0xa712;
    undefined field9532_0xa713;
    undefined field9533_0xa714;
    undefined field9534_0xa715;
    undefined field9535_0xa716;
    undefined field9536_0xa717;
    undefined field9537_0xa718;
    undefined field9538_0xa719;
    undefined field9539_0xa71a;
    undefined field9540_0xa71b;
    undefined field9541_0xa71c;
    undefined field9542_0xa71d;
    undefined field9543_0xa71e;
    undefined field9544_0xa71f;
    undefined field9545_0xa720;
    undefined field9546_0xa721;
    undefined field9547_0xa722;
    undefined field9548_0xa723;
    undefined field9549_0xa724;
    undefined field9550_0xa725;
    undefined field9551_0xa726;
    undefined field9552_0xa727;
    undefined field9553_0xa728;
    undefined field9554_0xa729;
    undefined field9555_0xa72a;
    undefined field9556_0xa72b;
    undefined field9557_0xa72c;
    undefined field9558_0xa72d;
    undefined field9559_0xa72e;
    undefined field9560_0xa72f;
    undefined field9561_0xa730;
    undefined field9562_0xa731;
    undefined field9563_0xa732;
    undefined field9564_0xa733;
    undefined field9565_0xa734;
    undefined field9566_0xa735;
    undefined field9567_0xa736;
    undefined field9568_0xa737;
    undefined field9569_0xa738;
    undefined field9570_0xa739;
    undefined field9571_0xa73a;
    undefined field9572_0xa73b;
    undefined field9573_0xa73c;
    undefined field9574_0xa73d;
    undefined field9575_0xa73e;
    undefined field9576_0xa73f;
    undefined field9577_0xa740;
    undefined field9578_0xa741;
    undefined field9579_0xa742;
    undefined field9580_0xa743;
    undefined field9581_0xa744;
    undefined field9582_0xa745;
    undefined field9583_0xa746;
    undefined field9584_0xa747;
    undefined field9585_0xa748;
    undefined field9586_0xa749;
    undefined field9587_0xa74a;
    undefined field9588_0xa74b;
    undefined field9589_0xa74c;
    undefined field9590_0xa74d;
    undefined field9591_0xa74e;
    undefined field9592_0xa74f;
    undefined field9593_0xa750;
    undefined field9594_0xa751;
    undefined field9595_0xa752;
    undefined field9596_0xa753;
    undefined field9597_0xa754;
    undefined field9598_0xa755;
    undefined field9599_0xa756;
    undefined field9600_0xa757;
    undefined field9601_0xa758;
    undefined field9602_0xa759;
    undefined field9603_0xa75a;
    undefined field9604_0xa75b;
    undefined field9605_0xa75c;
    undefined field9606_0xa75d;
    undefined field9607_0xa75e;
    undefined field9608_0xa75f;
    undefined field9609_0xa760;
    undefined field9610_0xa761;
    undefined field9611_0xa762;
    undefined field9612_0xa763;
    undefined field9613_0xa764;
    undefined field9614_0xa765;
    undefined field9615_0xa766;
    undefined field9616_0xa767;
    undefined field9617_0xa768;
    undefined field9618_0xa769;
    undefined field9619_0xa76a;
    undefined field9620_0xa76b;
    undefined field9621_0xa76c;
    undefined field9622_0xa76d;
    undefined field9623_0xa76e;
    undefined field9624_0xa76f;
    undefined field9625_0xa770;
    undefined field9626_0xa771;
    undefined field9627_0xa772;
    undefined field9628_0xa773;
    undefined field9629_0xa774;
    undefined field9630_0xa775;
    undefined field9631_0xa776;
    undefined field9632_0xa777;
    undefined field9633_0xa778;
    undefined field9634_0xa779;
    undefined field9635_0xa77a;
    undefined field9636_0xa77b;
    undefined field9637_0xa77c;
    undefined field9638_0xa77d;
    undefined field9639_0xa77e;
    undefined field9640_0xa77f;
    undefined field9641_0xa780;
    undefined field9642_0xa781;
    undefined field9643_0xa782;
    undefined field9644_0xa783;
    undefined field9645_0xa784;
    undefined field9646_0xa785;
    undefined field9647_0xa786;
    undefined field9648_0xa787;
    undefined field9649_0xa788;
    undefined field9650_0xa789;
    undefined field9651_0xa78a;
    undefined field9652_0xa78b;
    undefined field9653_0xa78c;
    undefined field9654_0xa78d;
    undefined field9655_0xa78e;
    undefined field9656_0xa78f;
    undefined field9657_0xa790;
    undefined field9658_0xa791;
    undefined field9659_0xa792;
    undefined field9660_0xa793;
    undefined field9661_0xa794;
    undefined field9662_0xa795;
    undefined field9663_0xa796;
    undefined field9664_0xa797;
    undefined field9665_0xa798;
    undefined field9666_0xa799;
    undefined field9667_0xa79a;
    undefined field9668_0xa79b;
    undefined field9669_0xa79c;
    undefined field9670_0xa79d;
    undefined field9671_0xa79e;
    undefined field9672_0xa79f;
    undefined field9673_0xa7a0;
    undefined field9674_0xa7a1;
    undefined field9675_0xa7a2;
    undefined field9676_0xa7a3;
    undefined field9677_0xa7a4;
    undefined field9678_0xa7a5;
    undefined field9679_0xa7a6;
    undefined field9680_0xa7a7;
    undefined field9681_0xa7a8;
    undefined field9682_0xa7a9;
    undefined field9683_0xa7aa;
    undefined field9684_0xa7ab;
    undefined field9685_0xa7ac;
    undefined field9686_0xa7ad;
    undefined field9687_0xa7ae;
    undefined field9688_0xa7af;
    undefined field9689_0xa7b0;
    undefined field9690_0xa7b1;
    undefined field9691_0xa7b2;
    undefined field9692_0xa7b3;
    undefined field9693_0xa7b4;
    undefined field9694_0xa7b5;
    undefined field9695_0xa7b6;
    undefined field9696_0xa7b7;
    undefined field9697_0xa7b8;
    undefined field9698_0xa7b9;
    undefined field9699_0xa7ba;
    undefined field9700_0xa7bb;
    undefined field9701_0xa7bc;
    undefined field9702_0xa7bd;
    undefined field9703_0xa7be;
    undefined field9704_0xa7bf;
    undefined field9705_0xa7c0;
    undefined field9706_0xa7c1;
    undefined field9707_0xa7c2;
    undefined field9708_0xa7c3;
    undefined field9709_0xa7c4;
    undefined field9710_0xa7c5;
    undefined field9711_0xa7c6;
    undefined field9712_0xa7c7;
    undefined field9713_0xa7c8;
    undefined field9714_0xa7c9;
    undefined field9715_0xa7ca;
    undefined field9716_0xa7cb;
    undefined field9717_0xa7cc;
    undefined field9718_0xa7cd;
    undefined field9719_0xa7ce;
    undefined field9720_0xa7cf;
    undefined field9721_0xa7d0;
    undefined field9722_0xa7d1;
    undefined field9723_0xa7d2;
    undefined field9724_0xa7d3;
    undefined field9725_0xa7d4;
    undefined field9726_0xa7d5;
    undefined field9727_0xa7d6;
    undefined field9728_0xa7d7;
    undefined field9729_0xa7d8;
    undefined field9730_0xa7d9;
    undefined field9731_0xa7da;
    undefined field9732_0xa7db;
    undefined field9733_0xa7dc;
    undefined field9734_0xa7dd;
    undefined field9735_0xa7de;
    undefined field9736_0xa7df;
    undefined field9737_0xa7e0;
    undefined field9738_0xa7e1;
    undefined field9739_0xa7e2;
    undefined field9740_0xa7e3;
    undefined field9741_0xa7e4;
    undefined field9742_0xa7e5;
    undefined field9743_0xa7e6;
    undefined field9744_0xa7e7;
    undefined field9745_0xa7e8;
    undefined field9746_0xa7e9;
    undefined field9747_0xa7ea;
    undefined field9748_0xa7eb;
    undefined field9749_0xa7ec;
    undefined field9750_0xa7ed;
    undefined field9751_0xa7ee;
    undefined field9752_0xa7ef;
    undefined field9753_0xa7f0;
    undefined field9754_0xa7f1;
    undefined field9755_0xa7f2;
    undefined field9756_0xa7f3;
    undefined field9757_0xa7f4;
    undefined field9758_0xa7f5;
    undefined field9759_0xa7f6;
    undefined field9760_0xa7f7;
    undefined field9761_0xa7f8;
    undefined field9762_0xa7f9;
    undefined field9763_0xa7fa;
    undefined field9764_0xa7fb;
    undefined field9765_0xa7fc;
    undefined field9766_0xa7fd;
    undefined field9767_0xa7fe;
    undefined field9768_0xa7ff;
    undefined field9769_0xa800;
    undefined field9770_0xa801;
    undefined field9771_0xa802;
    undefined field9772_0xa803;
    undefined field9773_0xa804;
    undefined field9774_0xa805;
    undefined field9775_0xa806;
    undefined field9776_0xa807;
    undefined field9777_0xa808;
    undefined field9778_0xa809;
    undefined field9779_0xa80a;
    undefined field9780_0xa80b;
    undefined field9781_0xa80c;
    undefined field9782_0xa80d;
    undefined field9783_0xa80e;
    undefined field9784_0xa80f;
    undefined field9785_0xa810;
    undefined field9786_0xa811;
    undefined field9787_0xa812;
    undefined field9788_0xa813;
    undefined field9789_0xa814;
    undefined field9790_0xa815;
    undefined field9791_0xa816;
    undefined field9792_0xa817;
    undefined field9793_0xa818;
    undefined field9794_0xa819;
    undefined field9795_0xa81a;
    undefined field9796_0xa81b;
    undefined field9797_0xa81c;
    undefined field9798_0xa81d;
    undefined field9799_0xa81e;
    undefined field9800_0xa81f;
    undefined field9801_0xa820;
    undefined field9802_0xa821;
    undefined field9803_0xa822;
    undefined field9804_0xa823;
    undefined field9805_0xa824;
    undefined field9806_0xa825;
    undefined field9807_0xa826;
    undefined field9808_0xa827;
    undefined field9809_0xa828;
    undefined field9810_0xa829;
    undefined field9811_0xa82a;
    undefined field9812_0xa82b;
    undefined field9813_0xa82c;
    undefined field9814_0xa82d;
    undefined field9815_0xa82e;
    undefined field9816_0xa82f;
    undefined field9817_0xa830;
    undefined field9818_0xa831;
    undefined field9819_0xa832;
    undefined field9820_0xa833;
    undefined field9821_0xa834;
    undefined field9822_0xa835;
    undefined field9823_0xa836;
    undefined field9824_0xa837;
    undefined field9825_0xa838;
    undefined field9826_0xa839;
    undefined field9827_0xa83a;
    undefined field9828_0xa83b;
    undefined field9829_0xa83c;
    undefined field9830_0xa83d;
    undefined field9831_0xa83e;
    undefined field9832_0xa83f;
    undefined field9833_0xa840;
    undefined field9834_0xa841;
    undefined field9835_0xa842;
    undefined field9836_0xa843;
    undefined field9837_0xa844;
    undefined field9838_0xa845;
    undefined field9839_0xa846;
    undefined field9840_0xa847;
    undefined field9841_0xa848;
    undefined field9842_0xa849;
    undefined field9843_0xa84a;
    undefined field9844_0xa84b;
    undefined field9845_0xa84c;
    undefined field9846_0xa84d;
    undefined field9847_0xa84e;
    undefined field9848_0xa84f;
    undefined field9849_0xa850;
    undefined field9850_0xa851;
    undefined field9851_0xa852;
    undefined field9852_0xa853;
    undefined field9853_0xa854;
    undefined field9854_0xa855;
    undefined field9855_0xa856;
    undefined field9856_0xa857;
    undefined field9857_0xa858;
    undefined field9858_0xa859;
    undefined field9859_0xa85a;
    undefined field9860_0xa85b;
    undefined field9861_0xa85c;
    undefined field9862_0xa85d;
    undefined field9863_0xa85e;
    undefined field9864_0xa85f;
    undefined field9865_0xa860;
    undefined field9866_0xa861;
    undefined field9867_0xa862;
    undefined field9868_0xa863;
    undefined field9869_0xa864;
    undefined field9870_0xa865;
    undefined field9871_0xa866;
    undefined field9872_0xa867;
    undefined field9873_0xa868;
    undefined field9874_0xa869;
    undefined field9875_0xa86a;
    undefined field9876_0xa86b;
    undefined field9877_0xa86c;
    undefined field9878_0xa86d;
    undefined field9879_0xa86e;
    undefined field9880_0xa86f;
    undefined field9881_0xa870;
    undefined field9882_0xa871;
    undefined field9883_0xa872;
    undefined field9884_0xa873;
    undefined field9885_0xa874;
    undefined field9886_0xa875;
    undefined field9887_0xa876;
    undefined field9888_0xa877;
    undefined field9889_0xa878;
    undefined field9890_0xa879;
    undefined field9891_0xa87a;
    undefined field9892_0xa87b;
    undefined field9893_0xa87c;
    undefined field9894_0xa87d;
    undefined field9895_0xa87e;
    undefined field9896_0xa87f;
    undefined field9897_0xa880;
    undefined field9898_0xa881;
    undefined field9899_0xa882;
    undefined field9900_0xa883;
    undefined field9901_0xa884;
    undefined field9902_0xa885;
    undefined field9903_0xa886;
    undefined field9904_0xa887;
    undefined field9905_0xa888;
    undefined field9906_0xa889;
    undefined field9907_0xa88a;
    undefined field9908_0xa88b;
    undefined field9909_0xa88c;
    undefined field9910_0xa88d;
    undefined field9911_0xa88e;
    undefined field9912_0xa88f;
    undefined field9913_0xa890;
    undefined field9914_0xa891;
    undefined field9915_0xa892;
    undefined field9916_0xa893;
    undefined field9917_0xa894;
    undefined field9918_0xa895;
    undefined field9919_0xa896;
    undefined field9920_0xa897;
    undefined field9921_0xa898;
    undefined field9922_0xa899;
    undefined field9923_0xa89a;
    undefined field9924_0xa89b;
    undefined field9925_0xa89c;
    undefined field9926_0xa89d;
    undefined field9927_0xa89e;
    undefined field9928_0xa89f;
    undefined field9929_0xa8a0;
    undefined field9930_0xa8a1;
    undefined field9931_0xa8a2;
    undefined field9932_0xa8a3;
    undefined field9933_0xa8a4;
    undefined field9934_0xa8a5;
    undefined field9935_0xa8a6;
    undefined field9936_0xa8a7;
    undefined field9937_0xa8a8;
    undefined field9938_0xa8a9;
    undefined field9939_0xa8aa;
    undefined field9940_0xa8ab;
    undefined field9941_0xa8ac;
    undefined field9942_0xa8ad;
    undefined field9943_0xa8ae;
    undefined field9944_0xa8af;
    undefined field9945_0xa8b0;
    undefined field9946_0xa8b1;
    undefined field9947_0xa8b2;
    undefined field9948_0xa8b3;
    undefined field9949_0xa8b4;
    undefined field9950_0xa8b5;
    undefined field9951_0xa8b6;
    undefined field9952_0xa8b7;
    undefined field9953_0xa8b8;
    undefined field9954_0xa8b9;
    undefined field9955_0xa8ba;
    undefined field9956_0xa8bb;
    undefined field9957_0xa8bc;
    undefined field9958_0xa8bd;
    undefined field9959_0xa8be;
    undefined field9960_0xa8bf;
    undefined field9961_0xa8c0;
    undefined field9962_0xa8c1;
    undefined field9963_0xa8c2;
    undefined field9964_0xa8c3;
    undefined field9965_0xa8c4;
    undefined field9966_0xa8c5;
    undefined field9967_0xa8c6;
    undefined field9968_0xa8c7;
    undefined field9969_0xa8c8;
    undefined field9970_0xa8c9;
    undefined field9971_0xa8ca;
    undefined field9972_0xa8cb;
    undefined field9973_0xa8cc;
    undefined field9974_0xa8cd;
    undefined field9975_0xa8ce;
    undefined field9976_0xa8cf;
    undefined field9977_0xa8d0;
    undefined field9978_0xa8d1;
    undefined field9979_0xa8d2;
    undefined field9980_0xa8d3;
    undefined field9981_0xa8d4;
    undefined field9982_0xa8d5;
    undefined field9983_0xa8d6;
    undefined field9984_0xa8d7;
    undefined field9985_0xa8d8;
    undefined field9986_0xa8d9;
    undefined field9987_0xa8da;
    undefined field9988_0xa8db;
    undefined field9989_0xa8dc;
    undefined field9990_0xa8dd;
    undefined field9991_0xa8de;
    undefined field9992_0xa8df;
    undefined field9993_0xa8e0;
    undefined field9994_0xa8e1;
    undefined field9995_0xa8e2;
    undefined field9996_0xa8e3;
    undefined field9997_0xa8e4;
    undefined field9998_0xa8e5;
    undefined field9999_0xa8e6;
    undefined field10000_0xa8e7;
    undefined field10001_0xa8e8;
    undefined field10002_0xa8e9;
    undefined field10003_0xa8ea;
    undefined field10004_0xa8eb;
    undefined field10005_0xa8ec;
    undefined field10006_0xa8ed;
    undefined field10007_0xa8ee;
    undefined field10008_0xa8ef;
    undefined field10009_0xa8f0;
    undefined field10010_0xa8f1;
    undefined field10011_0xa8f2;
    undefined field10012_0xa8f3;
    undefined field10013_0xa8f4;
    undefined field10014_0xa8f5;
    undefined field10015_0xa8f6;
    undefined field10016_0xa8f7;
    undefined field10017_0xa8f8;
    undefined field10018_0xa8f9;
    undefined field10019_0xa8fa;
    undefined field10020_0xa8fb;
    undefined field10021_0xa8fc;
    undefined field10022_0xa8fd;
    undefined field10023_0xa8fe;
    undefined field10024_0xa8ff;
    undefined field10025_0xa900;
    undefined field10026_0xa901;
    undefined field10027_0xa902;
    undefined field10028_0xa903;
    undefined field10029_0xa904;
    undefined field10030_0xa905;
    undefined field10031_0xa906;
    undefined field10032_0xa907;
    undefined field10033_0xa908;
    undefined field10034_0xa909;
    undefined field10035_0xa90a;
    undefined field10036_0xa90b;
    undefined field10037_0xa90c;
    undefined field10038_0xa90d;
    undefined field10039_0xa90e;
    undefined field10040_0xa90f;
    undefined field10041_0xa910;
    undefined field10042_0xa911;
    undefined field10043_0xa912;
    undefined field10044_0xa913;
    undefined field10045_0xa914;
    undefined field10046_0xa915;
    undefined field10047_0xa916;
    undefined field10048_0xa917;
    undefined field10049_0xa918;
    undefined field10050_0xa919;
    undefined field10051_0xa91a;
    undefined field10052_0xa91b;
    undefined field10053_0xa91c;
    undefined field10054_0xa91d;
    undefined field10055_0xa91e;
    undefined field10056_0xa91f;
    undefined field10057_0xa920;
    undefined field10058_0xa921;
    undefined field10059_0xa922;
    undefined field10060_0xa923;
    undefined field10061_0xa924;
    undefined field10062_0xa925;
    undefined field10063_0xa926;
    undefined field10064_0xa927;
    undefined field10065_0xa928;
    undefined field10066_0xa929;
    undefined field10067_0xa92a;
    undefined field10068_0xa92b;
    undefined field10069_0xa92c;
    undefined field10070_0xa92d;
    undefined field10071_0xa92e;
    undefined field10072_0xa92f;
    undefined field10073_0xa930;
    undefined field10074_0xa931;
    undefined field10075_0xa932;
    undefined field10076_0xa933;
    undefined field10077_0xa934;
    undefined field10078_0xa935;
    undefined field10079_0xa936;
    undefined field10080_0xa937;
    undefined field10081_0xa938;
    undefined field10082_0xa939;
    undefined field10083_0xa93a;
    undefined field10084_0xa93b;
    undefined field10085_0xa93c;
    undefined field10086_0xa93d;
    undefined field10087_0xa93e;
    undefined field10088_0xa93f;
    undefined field10089_0xa940;
    undefined field10090_0xa941;
    undefined field10091_0xa942;
    undefined field10092_0xa943;
    undefined field10093_0xa944;
    undefined field10094_0xa945;
    undefined field10095_0xa946;
    undefined field10096_0xa947;
    undefined field10097_0xa948;
    undefined field10098_0xa949;
    undefined field10099_0xa94a;
    undefined field10100_0xa94b;
    undefined field10101_0xa94c;
    undefined field10102_0xa94d;
    undefined field10103_0xa94e;
    undefined field10104_0xa94f;
    undefined field10105_0xa950;
    undefined field10106_0xa951;
    undefined field10107_0xa952;
    undefined field10108_0xa953;
    undefined field10109_0xa954;
    undefined field10110_0xa955;
    undefined field10111_0xa956;
    undefined field10112_0xa957;
    undefined field10113_0xa958;
    undefined field10114_0xa959;
    undefined field10115_0xa95a;
    undefined field10116_0xa95b;
    undefined field10117_0xa95c;
    undefined field10118_0xa95d;
    undefined field10119_0xa95e;
    undefined field10120_0xa95f;
    undefined field10121_0xa960;
    undefined field10122_0xa961;
    undefined field10123_0xa962;
    undefined field10124_0xa963;
    undefined field10125_0xa964;
    undefined field10126_0xa965;
    undefined field10127_0xa966;
    undefined field10128_0xa967;
    undefined field10129_0xa968;
    undefined field10130_0xa969;
    undefined field10131_0xa96a;
    undefined field10132_0xa96b;
    undefined field10133_0xa96c;
    undefined field10134_0xa96d;
    undefined field10135_0xa96e;
    undefined field10136_0xa96f;
    undefined field10137_0xa970;
    undefined field10138_0xa971;
    undefined field10139_0xa972;
    undefined field10140_0xa973;
    undefined field10141_0xa974;
    undefined field10142_0xa975;
    undefined field10143_0xa976;
    undefined field10144_0xa977;
    undefined field10145_0xa978;
    undefined field10146_0xa979;
    undefined field10147_0xa97a;
    undefined field10148_0xa97b;
    undefined field10149_0xa97c;
    undefined field10150_0xa97d;
    undefined field10151_0xa97e;
    undefined field10152_0xa97f;
    undefined field10153_0xa980;
    undefined field10154_0xa981;
    undefined field10155_0xa982;
    undefined field10156_0xa983;
    undefined field10157_0xa984;
    undefined field10158_0xa985;
    undefined field10159_0xa986;
    undefined field10160_0xa987;
    undefined field10161_0xa988;
    undefined field10162_0xa989;
    undefined field10163_0xa98a;
    undefined field10164_0xa98b;
    undefined field10165_0xa98c;
    undefined field10166_0xa98d;
    undefined field10167_0xa98e;
    undefined field10168_0xa98f;
    undefined field10169_0xa990;
    undefined field10170_0xa991;
    undefined field10171_0xa992;
    undefined field10172_0xa993;
    undefined field10173_0xa994;
    undefined field10174_0xa995;
    undefined field10175_0xa996;
    undefined field10176_0xa997;
    undefined field10177_0xa998;
    undefined field10178_0xa999;
    undefined field10179_0xa99a;
    undefined field10180_0xa99b;
    undefined field10181_0xa99c;
    undefined field10182_0xa99d;
    undefined field10183_0xa99e;
    undefined field10184_0xa99f;
    undefined field10185_0xa9a0;
    undefined field10186_0xa9a1;
    undefined field10187_0xa9a2;
    undefined field10188_0xa9a3;
    undefined field10189_0xa9a4;
    undefined field10190_0xa9a5;
    undefined field10191_0xa9a6;
    undefined field10192_0xa9a7;
    undefined field10193_0xa9a8;
    undefined field10194_0xa9a9;
    undefined field10195_0xa9aa;
    undefined field10196_0xa9ab;
    undefined field10197_0xa9ac;
    undefined field10198_0xa9ad;
    undefined field10199_0xa9ae;
    undefined field10200_0xa9af;
    undefined field10201_0xa9b0;
    undefined field10202_0xa9b1;
    undefined field10203_0xa9b2;
    undefined field10204_0xa9b3;
    undefined field10205_0xa9b4;
    undefined field10206_0xa9b5;
    undefined field10207_0xa9b6;
    undefined field10208_0xa9b7;
    undefined field10209_0xa9b8;
    undefined field10210_0xa9b9;
    undefined field10211_0xa9ba;
    undefined field10212_0xa9bb;
    undefined field10213_0xa9bc;
    undefined field10214_0xa9bd;
    undefined field10215_0xa9be;
    undefined field10216_0xa9bf;
    undefined field10217_0xa9c0;
    undefined field10218_0xa9c1;
    undefined field10219_0xa9c2;
    undefined field10220_0xa9c3;
    undefined field10221_0xa9c4;
    undefined field10222_0xa9c5;
    undefined field10223_0xa9c6;
    undefined field10224_0xa9c7;
    undefined field10225_0xa9c8;
    undefined field10226_0xa9c9;
    undefined field10227_0xa9ca;
    undefined field10228_0xa9cb;
    undefined field10229_0xa9cc;
    undefined field10230_0xa9cd;
    undefined field10231_0xa9ce;
    undefined field10232_0xa9cf;
    undefined field10233_0xa9d0;
    undefined field10234_0xa9d1;
    undefined field10235_0xa9d2;
    undefined field10236_0xa9d3;
    undefined field10237_0xa9d4;
    undefined field10238_0xa9d5;
    undefined field10239_0xa9d6;
    undefined field10240_0xa9d7;
    undefined field10241_0xa9d8;
    undefined field10242_0xa9d9;
    undefined field10243_0xa9da;
    undefined field10244_0xa9db;
    undefined field10245_0xa9dc;
    undefined field10246_0xa9dd;
    undefined field10247_0xa9de;
    undefined field10248_0xa9df;
    undefined field10249_0xa9e0;
    undefined field10250_0xa9e1;
    undefined field10251_0xa9e2;
    undefined field10252_0xa9e3;
    undefined field10253_0xa9e4;
    undefined field10254_0xa9e5;
    undefined field10255_0xa9e6;
    undefined field10256_0xa9e7;
    undefined field10257_0xa9e8;
    undefined field10258_0xa9e9;
    undefined field10259_0xa9ea;
    undefined field10260_0xa9eb;
    undefined field10261_0xa9ec;
    undefined field10262_0xa9ed;
    undefined field10263_0xa9ee;
    undefined field10264_0xa9ef;
    undefined field10265_0xa9f0;
    undefined field10266_0xa9f1;
    undefined field10267_0xa9f2;
    undefined field10268_0xa9f3;
    undefined field10269_0xa9f4;
    undefined field10270_0xa9f5;
    undefined field10271_0xa9f6;
    undefined field10272_0xa9f7;
    undefined field10273_0xa9f8;
    undefined field10274_0xa9f9;
    undefined field10275_0xa9fa;
    undefined field10276_0xa9fb;
    undefined field10277_0xa9fc;
    undefined field10278_0xa9fd;
    undefined field10279_0xa9fe;
    undefined field10280_0xa9ff;
    undefined field10281_0xaa00;
    undefined field10282_0xaa01;
    undefined field10283_0xaa02;
    undefined field10284_0xaa03;
    undefined field10285_0xaa04;
    undefined field10286_0xaa05;
    undefined field10287_0xaa06;
    undefined field10288_0xaa07;
    undefined field10289_0xaa08;
    undefined field10290_0xaa09;
    undefined field10291_0xaa0a;
    undefined field10292_0xaa0b;
    undefined field10293_0xaa0c;
    undefined field10294_0xaa0d;
    undefined field10295_0xaa0e;
    undefined field10296_0xaa0f;
    undefined field10297_0xaa10;
    undefined field10298_0xaa11;
    undefined field10299_0xaa12;
    undefined field10300_0xaa13;
    undefined field10301_0xaa14;
    undefined field10302_0xaa15;
    undefined field10303_0xaa16;
    undefined field10304_0xaa17;
    undefined field10305_0xaa18;
    undefined field10306_0xaa19;
    undefined field10307_0xaa1a;
    undefined field10308_0xaa1b;
    undefined field10309_0xaa1c;
    undefined field10310_0xaa1d;
    undefined field10311_0xaa1e;
    undefined field10312_0xaa1f;
    undefined field10313_0xaa20;
    undefined field10314_0xaa21;
    undefined field10315_0xaa22;
    undefined field10316_0xaa23;
    undefined field10317_0xaa24;
    undefined field10318_0xaa25;
    undefined field10319_0xaa26;
    undefined field10320_0xaa27;
    undefined field10321_0xaa28;
    undefined field10322_0xaa29;
    undefined field10323_0xaa2a;
    undefined field10324_0xaa2b;
    undefined field10325_0xaa2c;
    undefined field10326_0xaa2d;
    undefined field10327_0xaa2e;
    undefined field10328_0xaa2f;
    undefined field10329_0xaa30;
    undefined field10330_0xaa31;
    undefined field10331_0xaa32;
    undefined field10332_0xaa33;
    undefined field10333_0xaa34;
    undefined field10334_0xaa35;
    undefined field10335_0xaa36;
    undefined field10336_0xaa37;
    undefined field10337_0xaa38;
    undefined field10338_0xaa39;
    undefined field10339_0xaa3a;
    undefined field10340_0xaa3b;
    undefined field10341_0xaa3c;
    undefined field10342_0xaa3d;
    undefined field10343_0xaa3e;
    undefined field10344_0xaa3f;
    undefined field10345_0xaa40;
    undefined field10346_0xaa41;
    undefined field10347_0xaa42;
    undefined field10348_0xaa43;
    undefined field10349_0xaa44;
    undefined field10350_0xaa45;
    undefined field10351_0xaa46;
    undefined field10352_0xaa47;
    undefined field10353_0xaa48;
    undefined field10354_0xaa49;
    undefined field10355_0xaa4a;
    undefined field10356_0xaa4b;
    undefined field10357_0xaa4c;
    undefined field10358_0xaa4d;
    undefined field10359_0xaa4e;
    undefined field10360_0xaa4f;
    undefined field10361_0xaa50;
    undefined field10362_0xaa51;
    undefined field10363_0xaa52;
    undefined field10364_0xaa53;
    undefined field10365_0xaa54;
    undefined field10366_0xaa55;
    undefined field10367_0xaa56;
    undefined field10368_0xaa57;
    undefined field10369_0xaa58;
    undefined field10370_0xaa59;
    undefined field10371_0xaa5a;
    undefined field10372_0xaa5b;
    undefined field10373_0xaa5c;
    undefined field10374_0xaa5d;
    undefined field10375_0xaa5e;
    undefined field10376_0xaa5f;
    undefined field10377_0xaa60;
    undefined field10378_0xaa61;
    undefined field10379_0xaa62;
    undefined field10380_0xaa63;
    undefined field10381_0xaa64;
    undefined field10382_0xaa65;
    undefined field10383_0xaa66;
    undefined field10384_0xaa67;
    undefined field10385_0xaa68;
    undefined field10386_0xaa69;
    undefined field10387_0xaa6a;
    undefined field10388_0xaa6b;
    undefined field10389_0xaa6c;
    undefined field10390_0xaa6d;
    undefined field10391_0xaa6e;
    undefined field10392_0xaa6f;
    undefined field10393_0xaa70;
    undefined field10394_0xaa71;
    undefined field10395_0xaa72;
    undefined field10396_0xaa73;
    undefined field10397_0xaa74;
    undefined field10398_0xaa75;
    undefined field10399_0xaa76;
    undefined field10400_0xaa77;
    undefined field10401_0xaa78;
    undefined field10402_0xaa79;
    undefined field10403_0xaa7a;
    undefined field10404_0xaa7b;
    undefined field10405_0xaa7c;
    undefined field10406_0xaa7d;
    undefined field10407_0xaa7e;
    undefined field10408_0xaa7f;
    undefined field10409_0xaa80;
    undefined field10410_0xaa81;
    undefined field10411_0xaa82;
    undefined field10412_0xaa83;
    undefined field10413_0xaa84;
    undefined field10414_0xaa85;
    undefined field10415_0xaa86;
    undefined field10416_0xaa87;
    undefined field10417_0xaa88;
    undefined field10418_0xaa89;
    undefined field10419_0xaa8a;
    undefined field10420_0xaa8b;
    undefined field10421_0xaa8c;
    undefined field10422_0xaa8d;
    undefined field10423_0xaa8e;
    undefined field10424_0xaa8f;
    undefined field10425_0xaa90;
    undefined field10426_0xaa91;
    undefined field10427_0xaa92;
    undefined field10428_0xaa93;
    undefined field10429_0xaa94;
    undefined field10430_0xaa95;
    undefined field10431_0xaa96;
    undefined field10432_0xaa97;
    undefined field10433_0xaa98;
    undefined field10434_0xaa99;
    undefined field10435_0xaa9a;
    undefined field10436_0xaa9b;
    undefined field10437_0xaa9c;
    undefined field10438_0xaa9d;
    undefined field10439_0xaa9e;
    undefined field10440_0xaa9f;
    undefined field10441_0xaaa0;
    undefined field10442_0xaaa1;
    undefined field10443_0xaaa2;
    undefined field10444_0xaaa3;
    undefined field10445_0xaaa4;
    undefined field10446_0xaaa5;
    undefined field10447_0xaaa6;
    undefined field10448_0xaaa7;
    undefined field10449_0xaaa8;
    undefined field10450_0xaaa9;
    undefined field10451_0xaaaa;
    undefined field10452_0xaaab;
    undefined field10453_0xaaac;
    undefined field10454_0xaaad;
    undefined field10455_0xaaae;
    undefined field10456_0xaaaf;
    undefined field10457_0xaab0;
    undefined field10458_0xaab1;
    undefined field10459_0xaab2;
    undefined field10460_0xaab3;
    undefined field10461_0xaab4;
    undefined field10462_0xaab5;
    undefined field10463_0xaab6;
    undefined field10464_0xaab7;
    undefined field10465_0xaab8;
    undefined field10466_0xaab9;
    undefined field10467_0xaaba;
    undefined field10468_0xaabb;
    undefined field10469_0xaabc;
    undefined field10470_0xaabd;
    undefined field10471_0xaabe;
    undefined field10472_0xaabf;
    undefined field10473_0xaac0;
    undefined field10474_0xaac1;
    undefined field10475_0xaac2;
    undefined field10476_0xaac3;
    undefined field10477_0xaac4;
    undefined field10478_0xaac5;
    undefined field10479_0xaac6;
    undefined field10480_0xaac7;
    undefined field10481_0xaac8;
    undefined field10482_0xaac9;
    undefined field10483_0xaaca;
    undefined field10484_0xaacb;
    undefined field10485_0xaacc;
    undefined field10486_0xaacd;
    undefined field10487_0xaace;
    undefined field10488_0xaacf;
    undefined field10489_0xaad0;
    undefined field10490_0xaad1;
    undefined field10491_0xaad2;
    undefined field10492_0xaad3;
    undefined field10493_0xaad4;
    undefined field10494_0xaad5;
    undefined field10495_0xaad6;
    undefined field10496_0xaad7;
    undefined field10497_0xaad8;
    undefined field10498_0xaad9;
    undefined field10499_0xaada;
    undefined field10500_0xaadb;
    undefined field10501_0xaadc;
    undefined field10502_0xaadd;
    undefined field10503_0xaade;
    undefined field10504_0xaadf;
    undefined field10505_0xaae0;
    undefined field10506_0xaae1;
    undefined field10507_0xaae2;
    undefined field10508_0xaae3;
    undefined field10509_0xaae4;
    undefined field10510_0xaae5;
    undefined field10511_0xaae6;
    undefined field10512_0xaae7;
    undefined field10513_0xaae8;
    undefined field10514_0xaae9;
    undefined field10515_0xaaea;
    undefined field10516_0xaaeb;
    undefined field10517_0xaaec;
    undefined field10518_0xaaed;
    undefined field10519_0xaaee;
    undefined field10520_0xaaef;
    undefined field10521_0xaaf0;
    undefined field10522_0xaaf1;
    undefined field10523_0xaaf2;
    undefined field10524_0xaaf3;
    undefined field10525_0xaaf4;
    undefined field10526_0xaaf5;
    undefined field10527_0xaaf6;
    undefined field10528_0xaaf7;
    undefined field10529_0xaaf8;
    undefined field10530_0xaaf9;
    undefined field10531_0xaafa;
    undefined field10532_0xaafb;
    undefined field10533_0xaafc;
    undefined field10534_0xaafd;
    undefined field10535_0xaafe;
    undefined field10536_0xaaff;
    undefined field10537_0xab00;
    undefined field10538_0xab01;
    undefined field10539_0xab02;
    undefined field10540_0xab03;
    undefined field10541_0xab04;
    undefined field10542_0xab05;
    undefined field10543_0xab06;
    undefined field10544_0xab07;
    undefined field10545_0xab08;
    undefined field10546_0xab09;
    undefined field10547_0xab0a;
    undefined field10548_0xab0b;
    undefined field10549_0xab0c;
    undefined field10550_0xab0d;
    undefined field10551_0xab0e;
    undefined field10552_0xab0f;
    undefined field10553_0xab10;
    undefined field10554_0xab11;
    undefined field10555_0xab12;
    undefined field10556_0xab13;
    undefined field10557_0xab14;
    undefined field10558_0xab15;
    undefined field10559_0xab16;
    undefined field10560_0xab17;
    undefined field10561_0xab18;
    undefined field10562_0xab19;
    undefined field10563_0xab1a;
    undefined field10564_0xab1b;
    undefined field10565_0xab1c;
    undefined field10566_0xab1d;
    undefined field10567_0xab1e;
    undefined field10568_0xab1f;
    undefined field10569_0xab20;
    undefined field10570_0xab21;
    undefined field10571_0xab22;
    undefined field10572_0xab23;
    undefined field10573_0xab24;
    undefined field10574_0xab25;
    undefined field10575_0xab26;
    undefined field10576_0xab27;
    undefined field10577_0xab28;
    undefined field10578_0xab29;
    undefined field10579_0xab2a;
    undefined field10580_0xab2b;
    undefined field10581_0xab2c;
    undefined field10582_0xab2d;
    undefined field10583_0xab2e;
    undefined field10584_0xab2f;
    undefined field10585_0xab30;
    undefined field10586_0xab31;
    undefined field10587_0xab32;
    undefined field10588_0xab33;
    undefined field10589_0xab34;
    undefined field10590_0xab35;
    undefined field10591_0xab36;
    undefined field10592_0xab37;
    undefined field10593_0xab38;
    undefined field10594_0xab39;
    undefined field10595_0xab3a;
    undefined field10596_0xab3b;
    undefined field10597_0xab3c;
    undefined field10598_0xab3d;
    undefined field10599_0xab3e;
    undefined field10600_0xab3f;
    undefined field10601_0xab40;
    undefined field10602_0xab41;
    undefined field10603_0xab42;
    undefined field10604_0xab43;
    undefined field10605_0xab44;
    undefined field10606_0xab45;
    undefined field10607_0xab46;
    undefined field10608_0xab47;
    undefined field10609_0xab48;
    undefined field10610_0xab49;
    undefined field10611_0xab4a;
    undefined field10612_0xab4b;
    undefined field10613_0xab4c;
    undefined field10614_0xab4d;
    undefined field10615_0xab4e;
    undefined field10616_0xab4f;
    undefined field10617_0xab50;
    undefined field10618_0xab51;
    undefined field10619_0xab52;
    undefined field10620_0xab53;
    undefined field10621_0xab54;
    undefined field10622_0xab55;
    undefined field10623_0xab56;
    undefined field10624_0xab57;
    undefined field10625_0xab58;
    undefined field10626_0xab59;
    undefined field10627_0xab5a;
    undefined field10628_0xab5b;
    undefined field10629_0xab5c;
    undefined field10630_0xab5d;
    undefined field10631_0xab5e;
    undefined field10632_0xab5f;
    undefined field10633_0xab60;
    undefined field10634_0xab61;
    undefined field10635_0xab62;
    undefined field10636_0xab63;
    undefined field10637_0xab64;
    undefined field10638_0xab65;
    undefined field10639_0xab66;
    undefined field10640_0xab67;
    undefined field10641_0xab68;
    undefined field10642_0xab69;
    undefined field10643_0xab6a;
    undefined field10644_0xab6b;
    undefined field10645_0xab6c;
    undefined field10646_0xab6d;
    undefined field10647_0xab6e;
    undefined field10648_0xab6f;
    undefined field10649_0xab70;
    undefined field10650_0xab71;
    undefined field10651_0xab72;
    undefined field10652_0xab73;
    undefined field10653_0xab74;
    undefined field10654_0xab75;
    undefined field10655_0xab76;
    undefined field10656_0xab77;
    undefined field10657_0xab78;
    undefined field10658_0xab79;
    undefined field10659_0xab7a;
    undefined field10660_0xab7b;
    undefined field10661_0xab7c;
    undefined field10662_0xab7d;
    undefined field10663_0xab7e;
    undefined field10664_0xab7f;
    undefined field10665_0xab80;
    undefined field10666_0xab81;
    undefined field10667_0xab82;
    undefined field10668_0xab83;
    undefined field10669_0xab84;
    undefined field10670_0xab85;
    undefined field10671_0xab86;
    undefined field10672_0xab87;
    undefined field10673_0xab88;
    undefined field10674_0xab89;
    undefined field10675_0xab8a;
    undefined field10676_0xab8b;
    undefined field10677_0xab8c;
    undefined field10678_0xab8d;
    undefined field10679_0xab8e;
    undefined field10680_0xab8f;
    undefined field10681_0xab90;
    undefined field10682_0xab91;
    undefined field10683_0xab92;
    undefined field10684_0xab93;
    undefined field10685_0xab94;
    undefined field10686_0xab95;
    undefined field10687_0xab96;
    undefined field10688_0xab97;
    undefined field10689_0xab98;
    undefined field10690_0xab99;
    undefined field10691_0xab9a;
    undefined field10692_0xab9b;
    undefined field10693_0xab9c;
    undefined field10694_0xab9d;
    undefined field10695_0xab9e;
    undefined field10696_0xab9f;
    undefined field10697_0xaba0;
    undefined field10698_0xaba1;
    undefined field10699_0xaba2;
    undefined field10700_0xaba3;
    undefined field10701_0xaba4;
    undefined field10702_0xaba5;
    undefined field10703_0xaba6;
    undefined field10704_0xaba7;
    undefined field10705_0xaba8;
    undefined field10706_0xaba9;
    undefined field10707_0xabaa;
    undefined field10708_0xabab;
    undefined field10709_0xabac;
    undefined field10710_0xabad;
    undefined field10711_0xabae;
    undefined field10712_0xabaf;
    undefined field10713_0xabb0;
    undefined field10714_0xabb1;
    undefined field10715_0xabb2;
    undefined field10716_0xabb3;
    undefined field10717_0xabb4;
    undefined field10718_0xabb5;
    undefined field10719_0xabb6;
    undefined field10720_0xabb7;
    undefined field10721_0xabb8;
    undefined field10722_0xabb9;
    undefined field10723_0xabba;
    undefined field10724_0xabbb;
    undefined field10725_0xabbc;
    undefined field10726_0xabbd;
    undefined field10727_0xabbe;
    undefined field10728_0xabbf;
    undefined field10729_0xabc0;
    undefined field10730_0xabc1;
    undefined field10731_0xabc2;
    undefined field10732_0xabc3;
    undefined field10733_0xabc4;
    undefined field10734_0xabc5;
    undefined field10735_0xabc6;
    undefined field10736_0xabc7;
    undefined field10737_0xabc8;
    undefined field10738_0xabc9;
    undefined field10739_0xabca;
    undefined field10740_0xabcb;
    undefined field10741_0xabcc;
    undefined field10742_0xabcd;
    undefined field10743_0xabce;
    undefined field10744_0xabcf;
    undefined field10745_0xabd0;
    undefined field10746_0xabd1;
    undefined field10747_0xabd2;
    undefined field10748_0xabd3;
    undefined field10749_0xabd4;
    undefined field10750_0xabd5;
    undefined field10751_0xabd6;
    undefined field10752_0xabd7;
    undefined field10753_0xabd8;
    undefined field10754_0xabd9;
    undefined field10755_0xabda;
    undefined field10756_0xabdb;
    undefined field10757_0xabdc;
    undefined field10758_0xabdd;
    undefined field10759_0xabde;
    undefined field10760_0xabdf;
    undefined field10761_0xabe0;
    undefined field10762_0xabe1;
    undefined field10763_0xabe2;
    undefined field10764_0xabe3;
    undefined field10765_0xabe4;
    undefined field10766_0xabe5;
    undefined field10767_0xabe6;
    undefined field10768_0xabe7;
    undefined field10769_0xabe8;
    undefined field10770_0xabe9;
    undefined field10771_0xabea;
    undefined field10772_0xabeb;
    undefined field10773_0xabec;
    undefined field10774_0xabed;
    undefined field10775_0xabee;
    undefined field10776_0xabef;
    undefined field10777_0xabf0;
    undefined field10778_0xabf1;
    undefined field10779_0xabf2;
    undefined field10780_0xabf3;
    undefined field10781_0xabf4;
    undefined field10782_0xabf5;
    undefined field10783_0xabf6;
    undefined field10784_0xabf7;
    undefined field10785_0xabf8;
    undefined field10786_0xabf9;
    undefined field10787_0xabfa;
    undefined field10788_0xabfb;
    undefined field10789_0xabfc;
    undefined field10790_0xabfd;
    undefined field10791_0xabfe;
    undefined field10792_0xabff;
    undefined field10793_0xac00;
    undefined field10794_0xac01;
    undefined field10795_0xac02;
    undefined field10796_0xac03;
    undefined field10797_0xac04;
    undefined field10798_0xac05;
    undefined field10799_0xac06;
    undefined field10800_0xac07;
    undefined field10801_0xac08;
    undefined field10802_0xac09;
    undefined field10803_0xac0a;
    undefined field10804_0xac0b;
    undefined field10805_0xac0c;
    undefined field10806_0xac0d;
    undefined field10807_0xac0e;
    undefined field10808_0xac0f;
    undefined field10809_0xac10;
    undefined field10810_0xac11;
    undefined field10811_0xac12;
    undefined field10812_0xac13;
    undefined field10813_0xac14;
    undefined field10814_0xac15;
    undefined field10815_0xac16;
    undefined field10816_0xac17;
    undefined field10817_0xac18;
    undefined field10818_0xac19;
    undefined field10819_0xac1a;
    undefined field10820_0xac1b;
    undefined field10821_0xac1c;
    undefined field10822_0xac1d;
    undefined field10823_0xac1e;
    undefined field10824_0xac1f;
    undefined field10825_0xac20;
    undefined field10826_0xac21;
    undefined field10827_0xac22;
    undefined field10828_0xac23;
    undefined field10829_0xac24;
    undefined field10830_0xac25;
    undefined field10831_0xac26;
    undefined field10832_0xac27;
    undefined field10833_0xac28;
    undefined field10834_0xac29;
    undefined field10835_0xac2a;
    undefined field10836_0xac2b;
    undefined field10837_0xac2c;
    undefined field10838_0xac2d;
    undefined field10839_0xac2e;
    undefined field10840_0xac2f;
    undefined field10841_0xac30;
    undefined field10842_0xac31;
    undefined field10843_0xac32;
    undefined field10844_0xac33;
    undefined field10845_0xac34;
    undefined field10846_0xac35;
    undefined field10847_0xac36;
    undefined field10848_0xac37;
    undefined field10849_0xac38;
    undefined field10850_0xac39;
    undefined field10851_0xac3a;
    undefined field10852_0xac3b;
    undefined field10853_0xac3c;
    undefined field10854_0xac3d;
    undefined field10855_0xac3e;
    undefined field10856_0xac3f;
    undefined field10857_0xac40;
    undefined field10858_0xac41;
    undefined field10859_0xac42;
    undefined field10860_0xac43;
    undefined field10861_0xac44;
    undefined field10862_0xac45;
    undefined field10863_0xac46;
    undefined field10864_0xac47;
    undefined field10865_0xac48;
    undefined field10866_0xac49;
    undefined field10867_0xac4a;
    undefined field10868_0xac4b;
    undefined field10869_0xac4c;
    undefined field10870_0xac4d;
    undefined field10871_0xac4e;
    undefined field10872_0xac4f;
    undefined field10873_0xac50;
    undefined field10874_0xac51;
    undefined field10875_0xac52;
    undefined field10876_0xac53;
    undefined field10877_0xac54;
    undefined field10878_0xac55;
    undefined field10879_0xac56;
    undefined field10880_0xac57;
    undefined field10881_0xac58;
    undefined field10882_0xac59;
    undefined field10883_0xac5a;
    undefined field10884_0xac5b;
    undefined field10885_0xac5c;
    undefined field10886_0xac5d;
    undefined field10887_0xac5e;
    undefined field10888_0xac5f;
    undefined field10889_0xac60;
    undefined field10890_0xac61;
    undefined field10891_0xac62;
    undefined field10892_0xac63;
    undefined field10893_0xac64;
    undefined field10894_0xac65;
    undefined field10895_0xac66;
    undefined field10896_0xac67;
    undefined field10897_0xac68;
    undefined field10898_0xac69;
    undefined field10899_0xac6a;
    undefined field10900_0xac6b;
    undefined field10901_0xac6c;
    undefined field10902_0xac6d;
    undefined field10903_0xac6e;
    undefined field10904_0xac6f;
    undefined field10905_0xac70;
    undefined field10906_0xac71;
    undefined field10907_0xac72;
    undefined field10908_0xac73;
    undefined field10909_0xac74;
    undefined field10910_0xac75;
    undefined field10911_0xac76;
    undefined field10912_0xac77;
    undefined field10913_0xac78;
    undefined field10914_0xac79;
    undefined field10915_0xac7a;
    undefined field10916_0xac7b;
    undefined field10917_0xac7c;
    undefined field10918_0xac7d;
    undefined field10919_0xac7e;
    undefined field10920_0xac7f;
    undefined field10921_0xac80;
    undefined field10922_0xac81;
    undefined field10923_0xac82;
    undefined field10924_0xac83;
    undefined field10925_0xac84;
    undefined field10926_0xac85;
    undefined field10927_0xac86;
    undefined field10928_0xac87;
    undefined field10929_0xac88;
    undefined field10930_0xac89;
    undefined field10931_0xac8a;
    undefined field10932_0xac8b;
    undefined field10933_0xac8c;
    undefined field10934_0xac8d;
    undefined field10935_0xac8e;
    undefined field10936_0xac8f;
    undefined field10937_0xac90;
    undefined field10938_0xac91;
    undefined field10939_0xac92;
    undefined field10940_0xac93;
    undefined field10941_0xac94;
    undefined field10942_0xac95;
    undefined field10943_0xac96;
    undefined field10944_0xac97;
    undefined field10945_0xac98;
    undefined field10946_0xac99;
    undefined field10947_0xac9a;
    undefined field10948_0xac9b;
    undefined field10949_0xac9c;
    undefined field10950_0xac9d;
    undefined field10951_0xac9e;
    undefined field10952_0xac9f;
    undefined field10953_0xaca0;
    undefined field10954_0xaca1;
    undefined field10955_0xaca2;
    undefined field10956_0xaca3;
    undefined field10957_0xaca4;
    undefined field10958_0xaca5;
    undefined field10959_0xaca6;
    undefined field10960_0xaca7;
    undefined field10961_0xaca8;
    undefined field10962_0xaca9;
    undefined field10963_0xacaa;
    undefined field10964_0xacab;
    undefined field10965_0xacac;
    undefined field10966_0xacad;
    undefined field10967_0xacae;
    undefined field10968_0xacaf;
    undefined field10969_0xacb0;
    undefined field10970_0xacb1;
    undefined field10971_0xacb2;
    undefined field10972_0xacb3;
    undefined field10973_0xacb4;
    undefined field10974_0xacb5;
    undefined field10975_0xacb6;
    undefined field10976_0xacb7;
    undefined field10977_0xacb8;
    undefined field10978_0xacb9;
    undefined field10979_0xacba;
    undefined field10980_0xacbb;
    undefined field10981_0xacbc;
    undefined field10982_0xacbd;
    undefined field10983_0xacbe;
    undefined field10984_0xacbf;
    undefined field10985_0xacc0;
    undefined field10986_0xacc1;
    undefined field10987_0xacc2;
    undefined field10988_0xacc3;
    undefined field10989_0xacc4;
    undefined field10990_0xacc5;
    undefined field10991_0xacc6;
    undefined field10992_0xacc7;
    undefined field10993_0xacc8;
    undefined field10994_0xacc9;
    undefined field10995_0xacca;
    undefined field10996_0xaccb;
    undefined field10997_0xaccc;
    undefined field10998_0xaccd;
    undefined field10999_0xacce;
    undefined field11000_0xaccf;
    undefined field11001_0xacd0;
    undefined field11002_0xacd1;
    undefined field11003_0xacd2;
    undefined field11004_0xacd3;
    undefined field11005_0xacd4;
    undefined field11006_0xacd5;
    undefined field11007_0xacd6;
    undefined field11008_0xacd7;
    undefined field11009_0xacd8;
    undefined field11010_0xacd9;
    undefined field11011_0xacda;
    undefined field11012_0xacdb;
    undefined field11013_0xacdc;
    undefined field11014_0xacdd;
    undefined field11015_0xacde;
    undefined field11016_0xacdf;
    undefined field11017_0xace0;
    undefined field11018_0xace1;
    undefined field11019_0xace2;
    undefined field11020_0xace3;
    undefined field11021_0xace4;
    undefined field11022_0xace5;
    undefined field11023_0xace6;
    undefined field11024_0xace7;
    undefined field11025_0xace8;
    undefined field11026_0xace9;
    undefined field11027_0xacea;
    undefined field11028_0xaceb;
    undefined field11029_0xacec;
    undefined field11030_0xaced;
    undefined field11031_0xacee;
    undefined field11032_0xacef;
    undefined field11033_0xacf0;
    undefined field11034_0xacf1;
    undefined field11035_0xacf2;
    undefined field11036_0xacf3;
    undefined field11037_0xacf4;
    undefined field11038_0xacf5;
    undefined field11039_0xacf6;
    undefined field11040_0xacf7;
    undefined field11041_0xacf8;
    undefined field11042_0xacf9;
    undefined field11043_0xacfa;
    undefined field11044_0xacfb;
    undefined field11045_0xacfc;
    undefined field11046_0xacfd;
    undefined field11047_0xacfe;
    undefined field11048_0xacff;
    undefined field11049_0xad00;
    undefined field11050_0xad01;
    undefined field11051_0xad02;
    undefined field11052_0xad03;
    undefined field11053_0xad04;
    undefined field11054_0xad05;
    undefined field11055_0xad06;
    undefined field11056_0xad07;
    undefined field11057_0xad08;
    undefined field11058_0xad09;
    undefined field11059_0xad0a;
    undefined field11060_0xad0b;
    undefined field11061_0xad0c;
    undefined field11062_0xad0d;
    undefined field11063_0xad0e;
    undefined field11064_0xad0f;
    undefined field11065_0xad10;
    undefined field11066_0xad11;
    undefined field11067_0xad12;
    undefined field11068_0xad13;
    undefined field11069_0xad14;
    undefined field11070_0xad15;
    undefined field11071_0xad16;
    undefined field11072_0xad17;
    undefined field11073_0xad18;
    undefined field11074_0xad19;
    undefined field11075_0xad1a;
    undefined field11076_0xad1b;
    undefined field11077_0xad1c;
    undefined field11078_0xad1d;
    undefined field11079_0xad1e;
    undefined field11080_0xad1f;
    undefined field11081_0xad20;
    undefined field11082_0xad21;
    undefined field11083_0xad22;
    undefined field11084_0xad23;
    undefined field11085_0xad24;
    undefined field11086_0xad25;
    undefined field11087_0xad26;
    undefined field11088_0xad27;
    undefined field11089_0xad28;
    undefined field11090_0xad29;
    undefined field11091_0xad2a;
    undefined field11092_0xad2b;
    undefined field11093_0xad2c;
    undefined field11094_0xad2d;
    undefined field11095_0xad2e;
    undefined field11096_0xad2f;
    undefined field11097_0xad30;
    undefined field11098_0xad31;
    undefined field11099_0xad32;
    undefined field11100_0xad33;
    undefined field11101_0xad34;
    undefined field11102_0xad35;
    undefined field11103_0xad36;
    undefined field11104_0xad37;
    undefined field11105_0xad38;
    undefined field11106_0xad39;
    undefined field11107_0xad3a;
    undefined field11108_0xad3b;
    undefined field11109_0xad3c;
    undefined field11110_0xad3d;
    undefined field11111_0xad3e;
    undefined field11112_0xad3f;
    undefined field11113_0xad40;
    undefined field11114_0xad41;
    undefined field11115_0xad42;
    undefined field11116_0xad43;
    undefined field11117_0xad44;
    undefined field11118_0xad45;
    undefined field11119_0xad46;
    undefined field11120_0xad47;
    undefined field11121_0xad48;
    undefined field11122_0xad49;
    undefined field11123_0xad4a;
    undefined field11124_0xad4b;
    undefined field11125_0xad4c;
    undefined field11126_0xad4d;
    undefined field11127_0xad4e;
    undefined field11128_0xad4f;
    undefined field11129_0xad50;
    undefined field11130_0xad51;
    undefined field11131_0xad52;
    undefined field11132_0xad53;
    undefined field11133_0xad54;
    undefined field11134_0xad55;
    undefined field11135_0xad56;
    undefined field11136_0xad57;
    undefined field11137_0xad58;
    undefined field11138_0xad59;
    undefined field11139_0xad5a;
    undefined field11140_0xad5b;
    undefined field11141_0xad5c;
    undefined field11142_0xad5d;
    undefined field11143_0xad5e;
    undefined field11144_0xad5f;
    undefined field11145_0xad60;
    undefined field11146_0xad61;
    undefined field11147_0xad62;
    undefined field11148_0xad63;
    undefined field11149_0xad64;
    undefined field11150_0xad65;
    undefined field11151_0xad66;
    undefined field11152_0xad67;
    undefined field11153_0xad68;
    undefined field11154_0xad69;
    undefined field11155_0xad6a;
    undefined field11156_0xad6b;
    undefined field11157_0xad6c;
    undefined field11158_0xad6d;
    undefined field11159_0xad6e;
    undefined field11160_0xad6f;
    undefined field11161_0xad70;
    undefined field11162_0xad71;
    undefined field11163_0xad72;
    undefined field11164_0xad73;
    undefined field11165_0xad74;
    undefined field11166_0xad75;
    undefined field11167_0xad76;
    undefined field11168_0xad77;
    undefined field11169_0xad78;
    undefined field11170_0xad79;
    undefined field11171_0xad7a;
    undefined field11172_0xad7b;
    undefined field11173_0xad7c;
    undefined field11174_0xad7d;
    undefined field11175_0xad7e;
    undefined field11176_0xad7f;
    undefined field11177_0xad80;
    undefined field11178_0xad81;
    undefined field11179_0xad82;
    undefined field11180_0xad83;
    undefined field11181_0xad84;
    undefined field11182_0xad85;
    undefined field11183_0xad86;
    undefined field11184_0xad87;
    undefined field11185_0xad88;
    undefined field11186_0xad89;
    undefined field11187_0xad8a;
    undefined field11188_0xad8b;
    undefined field11189_0xad8c;
    undefined field11190_0xad8d;
    undefined field11191_0xad8e;
    undefined field11192_0xad8f;
    undefined field11193_0xad90;
    undefined field11194_0xad91;
    undefined field11195_0xad92;
    undefined field11196_0xad93;
    undefined field11197_0xad94;
    undefined field11198_0xad95;
    undefined field11199_0xad96;
    undefined field11200_0xad97;
    undefined field11201_0xad98;
    undefined field11202_0xad99;
    undefined field11203_0xad9a;
    undefined field11204_0xad9b;
    undefined field11205_0xad9c;
    undefined field11206_0xad9d;
    undefined field11207_0xad9e;
    undefined field11208_0xad9f;
    undefined field11209_0xada0;
    undefined field11210_0xada1;
    undefined field11211_0xada2;
    undefined field11212_0xada3;
    undefined field11213_0xada4;
    undefined field11214_0xada5;
    undefined field11215_0xada6;
    undefined field11216_0xada7;
    undefined field11217_0xada8;
    undefined field11218_0xada9;
    undefined field11219_0xadaa;
    undefined field11220_0xadab;
    undefined field11221_0xadac;
    undefined field11222_0xadad;
    undefined field11223_0xadae;
    undefined field11224_0xadaf;
    undefined field11225_0xadb0;
    undefined field11226_0xadb1;
    undefined field11227_0xadb2;
    undefined field11228_0xadb3;
    undefined field11229_0xadb4;
    undefined field11230_0xadb5;
    undefined field11231_0xadb6;
    undefined field11232_0xadb7;
    undefined field11233_0xadb8;
    undefined field11234_0xadb9;
    undefined field11235_0xadba;
    undefined field11236_0xadbb;
    undefined field11237_0xadbc;
    undefined field11238_0xadbd;
    undefined field11239_0xadbe;
    undefined field11240_0xadbf;
    undefined field11241_0xadc0;
    undefined field11242_0xadc1;
    undefined field11243_0xadc2;
    undefined field11244_0xadc3;
    undefined field11245_0xadc4;
    undefined field11246_0xadc5;
    undefined field11247_0xadc6;
    undefined field11248_0xadc7;
    undefined field11249_0xadc8;
    undefined field11250_0xadc9;
    undefined field11251_0xadca;
    undefined field11252_0xadcb;
    undefined field11253_0xadcc;
    undefined field11254_0xadcd;
    undefined field11255_0xadce;
    undefined field11256_0xadcf;
    undefined field11257_0xadd0;
    undefined field11258_0xadd1;
    undefined field11259_0xadd2;
    undefined field11260_0xadd3;
    undefined field11261_0xadd4;
    undefined field11262_0xadd5;
    undefined field11263_0xadd6;
    undefined field11264_0xadd7;
    undefined field11265_0xadd8;
    undefined field11266_0xadd9;
    undefined field11267_0xadda;
    undefined field11268_0xaddb;
    undefined field11269_0xaddc;
    undefined field11270_0xaddd;
    undefined field11271_0xadde;
    undefined field11272_0xaddf;
    undefined field11273_0xade0;
    undefined field11274_0xade1;
    undefined field11275_0xade2;
    undefined field11276_0xade3;
    undefined field11277_0xade4;
    undefined field11278_0xade5;
    undefined field11279_0xade6;
    undefined field11280_0xade7;
    undefined field11281_0xade8;
    undefined field11282_0xade9;
    undefined field11283_0xadea;
    undefined field11284_0xadeb;
    undefined field11285_0xadec;
    undefined field11286_0xaded;
    undefined field11287_0xadee;
    undefined field11288_0xadef;
    undefined field11289_0xadf0;
    undefined field11290_0xadf1;
    undefined field11291_0xadf2;
    undefined field11292_0xadf3;
    undefined field11293_0xadf4;
    undefined field11294_0xadf5;
    undefined field11295_0xadf6;
    undefined field11296_0xadf7;
    undefined field11297_0xadf8;
    undefined field11298_0xadf9;
    undefined field11299_0xadfa;
    undefined field11300_0xadfb;
    undefined field11301_0xadfc;
    undefined field11302_0xadfd;
    undefined field11303_0xadfe;
    undefined field11304_0xadff;
    undefined field11305_0xae00;
    undefined field11306_0xae01;
    undefined field11307_0xae02;
    undefined field11308_0xae03;
    undefined field11309_0xae04;
    undefined field11310_0xae05;
    undefined field11311_0xae06;
    undefined field11312_0xae07;
    undefined field11313_0xae08;
    undefined field11314_0xae09;
    undefined field11315_0xae0a;
    undefined field11316_0xae0b;
    undefined field11317_0xae0c;
    undefined field11318_0xae0d;
    undefined field11319_0xae0e;
    undefined field11320_0xae0f;
    undefined field11321_0xae10;
    undefined field11322_0xae11;
    undefined field11323_0xae12;
    undefined field11324_0xae13;
    undefined field11325_0xae14;
    undefined field11326_0xae15;
    undefined field11327_0xae16;
    undefined field11328_0xae17;
    undefined field11329_0xae18;
    undefined field11330_0xae19;
    undefined field11331_0xae1a;
    undefined field11332_0xae1b;
    undefined field11333_0xae1c;
    undefined field11334_0xae1d;
    undefined field11335_0xae1e;
    undefined field11336_0xae1f;
    undefined field11337_0xae20;
    undefined field11338_0xae21;
    undefined field11339_0xae22;
    undefined field11340_0xae23;
    undefined field11341_0xae24;
    undefined field11342_0xae25;
    undefined field11343_0xae26;
    undefined field11344_0xae27;
    undefined field11345_0xae28;
    undefined field11346_0xae29;
    undefined field11347_0xae2a;
    undefined field11348_0xae2b;
    undefined field11349_0xae2c;
    undefined field11350_0xae2d;
    undefined field11351_0xae2e;
    undefined field11352_0xae2f;
    undefined field11353_0xae30;
    undefined field11354_0xae31;
    undefined field11355_0xae32;
    undefined field11356_0xae33;
    undefined field11357_0xae34;
    undefined field11358_0xae35;
    undefined field11359_0xae36;
    undefined field11360_0xae37;
    undefined field11361_0xae38;
    undefined field11362_0xae39;
    undefined field11363_0xae3a;
    undefined field11364_0xae3b;
    undefined field11365_0xae3c;
    undefined field11366_0xae3d;
    undefined field11367_0xae3e;
    undefined field11368_0xae3f;
    undefined field11369_0xae40;
    undefined field11370_0xae41;
    undefined field11371_0xae42;
    undefined field11372_0xae43;
    undefined field11373_0xae44;
    undefined field11374_0xae45;
    undefined field11375_0xae46;
    undefined field11376_0xae47;
    undefined field11377_0xae48;
    undefined field11378_0xae49;
    undefined field11379_0xae4a;
    undefined field11380_0xae4b;
    undefined field11381_0xae4c;
    undefined field11382_0xae4d;
    undefined field11383_0xae4e;
    undefined field11384_0xae4f;
    undefined field11385_0xae50;
    undefined field11386_0xae51;
    undefined field11387_0xae52;
    undefined field11388_0xae53;
    undefined field11389_0xae54;
    undefined field11390_0xae55;
    undefined field11391_0xae56;
    undefined field11392_0xae57;
    undefined field11393_0xae58;
    undefined field11394_0xae59;
    undefined field11395_0xae5a;
    undefined field11396_0xae5b;
    undefined field11397_0xae5c;
    undefined field11398_0xae5d;
    undefined field11399_0xae5e;
    undefined field11400_0xae5f;
    undefined field11401_0xae60;
    undefined field11402_0xae61;
    undefined field11403_0xae62;
    undefined field11404_0xae63;
    undefined field11405_0xae64;
    undefined field11406_0xae65;
    undefined field11407_0xae66;
    undefined field11408_0xae67;
    undefined field11409_0xae68;
    undefined field11410_0xae69;
    undefined field11411_0xae6a;
    undefined field11412_0xae6b;
    undefined field11413_0xae6c;
    undefined field11414_0xae6d;
    undefined field11415_0xae6e;
    undefined field11416_0xae6f;
    undefined field11417_0xae70;
    undefined field11418_0xae71;
    undefined field11419_0xae72;
    undefined field11420_0xae73;
    undefined field11421_0xae74;
    undefined field11422_0xae75;
    undefined field11423_0xae76;
    undefined field11424_0xae77;
    undefined field11425_0xae78;
    undefined field11426_0xae79;
    undefined field11427_0xae7a;
    undefined field11428_0xae7b;
    undefined field11429_0xae7c;
    undefined field11430_0xae7d;
    undefined field11431_0xae7e;
    undefined field11432_0xae7f;
    undefined field11433_0xae80;
    undefined field11434_0xae81;
    undefined field11435_0xae82;
    undefined field11436_0xae83;
    undefined field11437_0xae84;
    undefined field11438_0xae85;
    undefined field11439_0xae86;
    undefined field11440_0xae87;
    undefined field11441_0xae88;
    undefined field11442_0xae89;
    undefined field11443_0xae8a;
    undefined field11444_0xae8b;
    undefined field11445_0xae8c;
    undefined field11446_0xae8d;
    undefined field11447_0xae8e;
    undefined field11448_0xae8f;
    undefined field11449_0xae90;
    undefined field11450_0xae91;
    undefined field11451_0xae92;
    undefined field11452_0xae93;
    undefined field11453_0xae94;
    undefined field11454_0xae95;
    undefined field11455_0xae96;
    undefined field11456_0xae97;
    undefined field11457_0xae98;
    undefined field11458_0xae99;
    undefined field11459_0xae9a;
    undefined field11460_0xae9b;
    undefined field11461_0xae9c;
    undefined field11462_0xae9d;
    undefined field11463_0xae9e;
    undefined field11464_0xae9f;
    undefined field11465_0xaea0;
    undefined field11466_0xaea1;
    undefined field11467_0xaea2;
    undefined field11468_0xaea3;
    undefined field11469_0xaea4;
    undefined field11470_0xaea5;
    undefined field11471_0xaea6;
    undefined field11472_0xaea7;
    undefined field11473_0xaea8;
    undefined field11474_0xaea9;
    undefined field11475_0xaeaa;
    undefined field11476_0xaeab;
    undefined field11477_0xaeac;
    undefined field11478_0xaead;
    undefined field11479_0xaeae;
    undefined field11480_0xaeaf;
    undefined field11481_0xaeb0;
    undefined field11482_0xaeb1;
    undefined field11483_0xaeb2;
    undefined field11484_0xaeb3;
    undefined field11485_0xaeb4;
    undefined field11486_0xaeb5;
    undefined field11487_0xaeb6;
    undefined field11488_0xaeb7;
    undefined field11489_0xaeb8;
    undefined field11490_0xaeb9;
    undefined field11491_0xaeba;
    undefined field11492_0xaebb;
    undefined field11493_0xaebc;
    undefined field11494_0xaebd;
    undefined field11495_0xaebe;
    undefined field11496_0xaebf;
    undefined field11497_0xaec0;
    undefined field11498_0xaec1;
    undefined field11499_0xaec2;
    undefined field11500_0xaec3;
    undefined field11501_0xaec4;
    undefined field11502_0xaec5;
    undefined field11503_0xaec6;
    undefined field11504_0xaec7;
    undefined field11505_0xaec8;
    undefined field11506_0xaec9;
    undefined field11507_0xaeca;
    undefined field11508_0xaecb;
    undefined field11509_0xaecc;
    undefined field11510_0xaecd;
    undefined field11511_0xaece;
    undefined field11512_0xaecf;
    undefined field11513_0xaed0;
    undefined field11514_0xaed1;
    undefined field11515_0xaed2;
    undefined field11516_0xaed3;
    undefined field11517_0xaed4;
    undefined field11518_0xaed5;
    undefined field11519_0xaed6;
    undefined field11520_0xaed7;
    undefined field11521_0xaed8;
    undefined field11522_0xaed9;
    undefined field11523_0xaeda;
    undefined field11524_0xaedb;
    undefined field11525_0xaedc;
    undefined field11526_0xaedd;
    undefined field11527_0xaede;
    undefined field11528_0xaedf;
    undefined field11529_0xaee0;
    undefined field11530_0xaee1;
    undefined field11531_0xaee2;
    undefined field11532_0xaee3;
    undefined field11533_0xaee4;
    undefined field11534_0xaee5;
    undefined field11535_0xaee6;
    undefined field11536_0xaee7;
    undefined field11537_0xaee8;
    undefined field11538_0xaee9;
    undefined field11539_0xaeea;
    undefined field11540_0xaeeb;
    undefined field11541_0xaeec;
    undefined field11542_0xaeed;
    undefined field11543_0xaeee;
    undefined field11544_0xaeef;
    undefined field11545_0xaef0;
    undefined field11546_0xaef1;
    undefined field11547_0xaef2;
    undefined field11548_0xaef3;
    undefined field11549_0xaef4;
    undefined field11550_0xaef5;
    undefined field11551_0xaef6;
    undefined field11552_0xaef7;
    undefined field11553_0xaef8;
    undefined field11554_0xaef9;
    undefined field11555_0xaefa;
    undefined field11556_0xaefb;
    undefined field11557_0xaefc;
    undefined field11558_0xaefd;
    undefined field11559_0xaefe;
    undefined field11560_0xaeff;
    undefined field11561_0xaf00;
    undefined field11562_0xaf01;
    undefined field11563_0xaf02;
    undefined field11564_0xaf03;
    undefined field11565_0xaf04;
    undefined field11566_0xaf05;
    undefined field11567_0xaf06;
    undefined field11568_0xaf07;
    undefined field11569_0xaf08;
    undefined field11570_0xaf09;
    undefined field11571_0xaf0a;
    undefined field11572_0xaf0b;
    undefined field11573_0xaf0c;
    undefined field11574_0xaf0d;
    undefined field11575_0xaf0e;
    undefined field11576_0xaf0f;
    undefined field11577_0xaf10;
    undefined field11578_0xaf11;
    undefined field11579_0xaf12;
    undefined field11580_0xaf13;
    undefined field11581_0xaf14;
    undefined field11582_0xaf15;
    undefined field11583_0xaf16;
    undefined field11584_0xaf17;
    undefined field11585_0xaf18;
    undefined field11586_0xaf19;
    undefined field11587_0xaf1a;
    undefined field11588_0xaf1b;
    undefined field11589_0xaf1c;
    undefined field11590_0xaf1d;
    undefined field11591_0xaf1e;
    undefined field11592_0xaf1f;
    undefined field11593_0xaf20;
    undefined field11594_0xaf21;
    undefined field11595_0xaf22;
    undefined field11596_0xaf23;
    undefined field11597_0xaf24;
    undefined field11598_0xaf25;
    undefined field11599_0xaf26;
    undefined field11600_0xaf27;
    undefined field11601_0xaf28;
    undefined field11602_0xaf29;
    undefined field11603_0xaf2a;
    undefined field11604_0xaf2b;
    undefined field11605_0xaf2c;
    undefined field11606_0xaf2d;
    undefined field11607_0xaf2e;
    undefined field11608_0xaf2f;
    undefined field11609_0xaf30;
    undefined field11610_0xaf31;
    undefined field11611_0xaf32;
    undefined field11612_0xaf33;
    undefined field11613_0xaf34;
    undefined field11614_0xaf35;
    undefined field11615_0xaf36;
    undefined field11616_0xaf37;
    undefined field11617_0xaf38;
    undefined field11618_0xaf39;
    undefined field11619_0xaf3a;
    undefined field11620_0xaf3b;
    undefined field11621_0xaf3c;
    undefined field11622_0xaf3d;
    undefined field11623_0xaf3e;
    undefined field11624_0xaf3f;
    undefined field11625_0xaf40;
    undefined field11626_0xaf41;
    undefined field11627_0xaf42;
    undefined field11628_0xaf43;
    undefined field11629_0xaf44;
    undefined field11630_0xaf45;
    undefined field11631_0xaf46;
    undefined field11632_0xaf47;
    undefined field11633_0xaf48;
    undefined field11634_0xaf49;
    undefined field11635_0xaf4a;
    undefined field11636_0xaf4b;
    undefined field11637_0xaf4c;
    undefined field11638_0xaf4d;
    undefined field11639_0xaf4e;
    undefined field11640_0xaf4f;
    undefined field11641_0xaf50;
    undefined field11642_0xaf51;
    undefined field11643_0xaf52;
    undefined field11644_0xaf53;
    undefined field11645_0xaf54;
    undefined field11646_0xaf55;
    undefined field11647_0xaf56;
    undefined field11648_0xaf57;
    undefined field11649_0xaf58;
    undefined field11650_0xaf59;
    undefined field11651_0xaf5a;
    undefined field11652_0xaf5b;
    undefined field11653_0xaf5c;
    undefined field11654_0xaf5d;
    undefined field11655_0xaf5e;
    undefined field11656_0xaf5f;
    undefined field11657_0xaf60;
    undefined field11658_0xaf61;
    undefined field11659_0xaf62;
    undefined field11660_0xaf63;
    undefined field11661_0xaf64;
    undefined field11662_0xaf65;
    undefined field11663_0xaf66;
    undefined field11664_0xaf67;
    undefined field11665_0xaf68;
    undefined field11666_0xaf69;
    undefined field11667_0xaf6a;
    undefined field11668_0xaf6b;
    undefined field11669_0xaf6c;
    undefined field11670_0xaf6d;
    undefined field11671_0xaf6e;
    undefined field11672_0xaf6f;
    undefined field11673_0xaf70;
    undefined field11674_0xaf71;
    undefined field11675_0xaf72;
    undefined field11676_0xaf73;
    undefined field11677_0xaf74;
    undefined field11678_0xaf75;
    undefined field11679_0xaf76;
    undefined field11680_0xaf77;
    undefined field11681_0xaf78;
    undefined field11682_0xaf79;
    undefined field11683_0xaf7a;
    undefined field11684_0xaf7b;
    undefined field11685_0xaf7c;
    undefined field11686_0xaf7d;
    undefined field11687_0xaf7e;
    undefined field11688_0xaf7f;
    undefined field11689_0xaf80;
    undefined field11690_0xaf81;
    undefined field11691_0xaf82;
    undefined field11692_0xaf83;
    undefined field11693_0xaf84;
    undefined field11694_0xaf85;
    undefined field11695_0xaf86;
    undefined field11696_0xaf87;
    undefined field11697_0xaf88;
    undefined field11698_0xaf89;
    undefined field11699_0xaf8a;
    undefined field11700_0xaf8b;
    undefined field11701_0xaf8c;
    undefined field11702_0xaf8d;
    undefined field11703_0xaf8e;
    undefined field11704_0xaf8f;
    undefined field11705_0xaf90;
    undefined field11706_0xaf91;
    undefined field11707_0xaf92;
    undefined field11708_0xaf93;
    undefined field11709_0xaf94;
    undefined field11710_0xaf95;
    undefined field11711_0xaf96;
    undefined field11712_0xaf97;
    undefined field11713_0xaf98;
    undefined field11714_0xaf99;
    undefined field11715_0xaf9a;
    undefined field11716_0xaf9b;
    undefined field11717_0xaf9c;
    undefined field11718_0xaf9d;
    undefined field11719_0xaf9e;
    undefined field11720_0xaf9f;
    undefined field11721_0xafa0;
    undefined field11722_0xafa1;
    undefined field11723_0xafa2;
    undefined field11724_0xafa3;
    undefined field11725_0xafa4;
    undefined field11726_0xafa5;
    undefined field11727_0xafa6;
    undefined field11728_0xafa7;
    undefined field11729_0xafa8;
    undefined field11730_0xafa9;
    undefined field11731_0xafaa;
    undefined field11732_0xafab;
    undefined field11733_0xafac;
    undefined field11734_0xafad;
    undefined field11735_0xafae;
    undefined field11736_0xafaf;
    undefined field11737_0xafb0;
    undefined field11738_0xafb1;
    undefined field11739_0xafb2;
    undefined field11740_0xafb3;
    undefined field11741_0xafb4;
    undefined field11742_0xafb5;
    undefined field11743_0xafb6;
    undefined field11744_0xafb7;
    undefined field11745_0xafb8;
    undefined field11746_0xafb9;
    undefined field11747_0xafba;
    undefined field11748_0xafbb;
    undefined field11749_0xafbc;
    undefined field11750_0xafbd;
    undefined field11751_0xafbe;
    undefined field11752_0xafbf;
    undefined field11753_0xafc0;
    undefined field11754_0xafc1;
    undefined field11755_0xafc2;
    undefined field11756_0xafc3;
    undefined field11757_0xafc4;
    undefined field11758_0xafc5;
    undefined field11759_0xafc6;
    undefined field11760_0xafc7;
    undefined field11761_0xafc8;
    undefined field11762_0xafc9;
    undefined field11763_0xafca;
    undefined field11764_0xafcb;
    undefined field11765_0xafcc;
    undefined field11766_0xafcd;
    undefined field11767_0xafce;
    undefined field11768_0xafcf;
    undefined field11769_0xafd0;
    undefined field11770_0xafd1;
    undefined field11771_0xafd2;
    undefined field11772_0xafd3;
    undefined field11773_0xafd4;
    undefined field11774_0xafd5;
    undefined field11775_0xafd6;
    undefined field11776_0xafd7;
    undefined field11777_0xafd8;
    undefined field11778_0xafd9;
    undefined field11779_0xafda;
    undefined field11780_0xafdb;
    undefined field11781_0xafdc;
    undefined field11782_0xafdd;
    undefined field11783_0xafde;
    undefined field11784_0xafdf;
    undefined field11785_0xafe0;
    undefined field11786_0xafe1;
    undefined field11787_0xafe2;
    undefined field11788_0xafe3;
    undefined field11789_0xafe4;
    undefined field11790_0xafe5;
    undefined field11791_0xafe6;
    undefined field11792_0xafe7;
    undefined field11793_0xafe8;
    undefined field11794_0xafe9;
    undefined field11795_0xafea;
    undefined field11796_0xafeb;
    undefined field11797_0xafec;
    undefined field11798_0xafed;
    undefined field11799_0xafee;
    undefined field11800_0xafef;
    undefined field11801_0xaff0;
    undefined field11802_0xaff1;
    undefined field11803_0xaff2;
    undefined field11804_0xaff3;
    undefined field11805_0xaff4;
    undefined field11806_0xaff5;
    undefined field11807_0xaff6;
    undefined field11808_0xaff7;
    undefined field11809_0xaff8;
    undefined field11810_0xaff9;
    undefined field11811_0xaffa;
    undefined field11812_0xaffb;
    undefined field11813_0xaffc;
    undefined field11814_0xaffd;
    undefined field11815_0xaffe;
    undefined field11816_0xafff;
    undefined field11817_0xb000;
    undefined field11818_0xb001;
    undefined field11819_0xb002;
    undefined field11820_0xb003;
    undefined field11821_0xb004;
    undefined field11822_0xb005;
    undefined field11823_0xb006;
    undefined field11824_0xb007;
    undefined field11825_0xb008;
    undefined field11826_0xb009;
    undefined field11827_0xb00a;
    undefined field11828_0xb00b;
    undefined field11829_0xb00c;
    undefined field11830_0xb00d;
    undefined field11831_0xb00e;
    undefined field11832_0xb00f;
    undefined field11833_0xb010;
    undefined field11834_0xb011;
    undefined field11835_0xb012;
    undefined field11836_0xb013;
    undefined field11837_0xb014;
    undefined field11838_0xb015;
    undefined field11839_0xb016;
    undefined field11840_0xb017;
    undefined field11841_0xb018;
    undefined field11842_0xb019;
    undefined field11843_0xb01a;
    undefined field11844_0xb01b;
    undefined field11845_0xb01c;
    undefined field11846_0xb01d;
    undefined field11847_0xb01e;
    undefined field11848_0xb01f;
    undefined field11849_0xb020;
    undefined field11850_0xb021;
    undefined field11851_0xb022;
    undefined field11852_0xb023;
    undefined field11853_0xb024;
    undefined field11854_0xb025;
    undefined field11855_0xb026;
    undefined field11856_0xb027;
    undefined field11857_0xb028;
    undefined field11858_0xb029;
    undefined field11859_0xb02a;
    undefined field11860_0xb02b;
    undefined field11861_0xb02c;
    undefined field11862_0xb02d;
    undefined field11863_0xb02e;
    undefined field11864_0xb02f;
    undefined field11865_0xb030;
    undefined field11866_0xb031;
    undefined field11867_0xb032;
    undefined field11868_0xb033;
    undefined field11869_0xb034;
    undefined field11870_0xb035;
    undefined field11871_0xb036;
    undefined field11872_0xb037;
    undefined field11873_0xb038;
    undefined field11874_0xb039;
    undefined field11875_0xb03a;
    undefined field11876_0xb03b;
    undefined field11877_0xb03c;
    undefined field11878_0xb03d;
    undefined field11879_0xb03e;
    undefined field11880_0xb03f;
    undefined field11881_0xb040;
    undefined field11882_0xb041;
    undefined field11883_0xb042;
    undefined field11884_0xb043;
    undefined field11885_0xb044;
    undefined field11886_0xb045;
    undefined field11887_0xb046;
    undefined field11888_0xb047;
    undefined field11889_0xb048;
    undefined field11890_0xb049;
    undefined field11891_0xb04a;
    undefined field11892_0xb04b;
    undefined field11893_0xb04c;
    undefined field11894_0xb04d;
    undefined field11895_0xb04e;
    undefined field11896_0xb04f;
    undefined field11897_0xb050;
    undefined field11898_0xb051;
    undefined field11899_0xb052;
    undefined field11900_0xb053;
    undefined field11901_0xb054;
    undefined field11902_0xb055;
    undefined field11903_0xb056;
    undefined field11904_0xb057;
    undefined field11905_0xb058;
    undefined field11906_0xb059;
    undefined field11907_0xb05a;
    undefined field11908_0xb05b;
    undefined field11909_0xb05c;
    undefined field11910_0xb05d;
    undefined field11911_0xb05e;
    undefined field11912_0xb05f;
    undefined field11913_0xb060;
    undefined field11914_0xb061;
    undefined field11915_0xb062;
    undefined field11916_0xb063;
    undefined field11917_0xb064;
    undefined field11918_0xb065;
    undefined field11919_0xb066;
    undefined field11920_0xb067;
    undefined field11921_0xb068;
    undefined field11922_0xb069;
    undefined field11923_0xb06a;
    undefined field11924_0xb06b;
    undefined field11925_0xb06c;
    undefined field11926_0xb06d;
    undefined field11927_0xb06e;
    undefined field11928_0xb06f;
    undefined field11929_0xb070;
    undefined field11930_0xb071;
    undefined field11931_0xb072;
    undefined field11932_0xb073;
    undefined field11933_0xb074;
    undefined field11934_0xb075;
    undefined field11935_0xb076;
    undefined field11936_0xb077;
    undefined field11937_0xb078;
    undefined field11938_0xb079;
    undefined field11939_0xb07a;
    undefined field11940_0xb07b;
    undefined field11941_0xb07c;
    undefined field11942_0xb07d;
    undefined field11943_0xb07e;
    undefined field11944_0xb07f;
    undefined field11945_0xb080;
    undefined field11946_0xb081;
    undefined field11947_0xb082;
    undefined field11948_0xb083;
    undefined field11949_0xb084;
    undefined field11950_0xb085;
    undefined field11951_0xb086;
    undefined field11952_0xb087;
    undefined field11953_0xb088;
    undefined field11954_0xb089;
    undefined field11955_0xb08a;
    undefined field11956_0xb08b;
    undefined field11957_0xb08c;
    undefined field11958_0xb08d;
    undefined field11959_0xb08e;
    undefined field11960_0xb08f;
    undefined field11961_0xb090;
    undefined field11962_0xb091;
    undefined field11963_0xb092;
    undefined field11964_0xb093;
    undefined field11965_0xb094;
    undefined field11966_0xb095;
    undefined field11967_0xb096;
    undefined field11968_0xb097;
    undefined field11969_0xb098;
    undefined field11970_0xb099;
    undefined field11971_0xb09a;
    undefined field11972_0xb09b;
    undefined field11973_0xb09c;
    undefined field11974_0xb09d;
    undefined field11975_0xb09e;
    undefined field11976_0xb09f;
    undefined field11977_0xb0a0;
    undefined field11978_0xb0a1;
    undefined field11979_0xb0a2;
    undefined field11980_0xb0a3;
    undefined field11981_0xb0a4;
    undefined field11982_0xb0a5;
    undefined field11983_0xb0a6;
    undefined field11984_0xb0a7;
    undefined field11985_0xb0a8;
    undefined field11986_0xb0a9;
    undefined field11987_0xb0aa;
    undefined field11988_0xb0ab;
    undefined field11989_0xb0ac;
    undefined field11990_0xb0ad;
    undefined field11991_0xb0ae;
    undefined field11992_0xb0af;
    undefined field11993_0xb0b0;
    undefined field11994_0xb0b1;
    undefined field11995_0xb0b2;
    undefined field11996_0xb0b3;
    undefined field11997_0xb0b4;
    undefined field11998_0xb0b5;
    undefined field11999_0xb0b6;
    undefined field12000_0xb0b7;
    undefined field12001_0xb0b8;
    undefined field12002_0xb0b9;
    undefined field12003_0xb0ba;
    undefined field12004_0xb0bb;
    undefined field12005_0xb0bc;
    undefined field12006_0xb0bd;
    undefined field12007_0xb0be;
    undefined field12008_0xb0bf;
    undefined field12009_0xb0c0;
    undefined field12010_0xb0c1;
    undefined field12011_0xb0c2;
    undefined field12012_0xb0c3;
    undefined field12013_0xb0c4;
    undefined field12014_0xb0c5;
    undefined field12015_0xb0c6;
    undefined field12016_0xb0c7;
    undefined field12017_0xb0c8;
    undefined field12018_0xb0c9;
    undefined field12019_0xb0ca;
    undefined field12020_0xb0cb;
    undefined field12021_0xb0cc;
    undefined field12022_0xb0cd;
    undefined field12023_0xb0ce;
    undefined field12024_0xb0cf;
    undefined field12025_0xb0d0;
    undefined field12026_0xb0d1;
    undefined field12027_0xb0d2;
    undefined field12028_0xb0d3;
    undefined field12029_0xb0d4;
    undefined field12030_0xb0d5;
    undefined field12031_0xb0d6;
    undefined field12032_0xb0d7;
    undefined field12033_0xb0d8;
    undefined field12034_0xb0d9;
    undefined field12035_0xb0da;
    undefined field12036_0xb0db;
    undefined field12037_0xb0dc;
    undefined field12038_0xb0dd;
    undefined field12039_0xb0de;
    undefined field12040_0xb0df;
    undefined field12041_0xb0e0;
    undefined field12042_0xb0e1;
    undefined field12043_0xb0e2;
    undefined field12044_0xb0e3;
    undefined field12045_0xb0e4;
    undefined field12046_0xb0e5;
    undefined field12047_0xb0e6;
    undefined field12048_0xb0e7;
    undefined field12049_0xb0e8;
    undefined field12050_0xb0e9;
    undefined field12051_0xb0ea;
    undefined field12052_0xb0eb;
    undefined field12053_0xb0ec;
    undefined field12054_0xb0ed;
    undefined field12055_0xb0ee;
    undefined field12056_0xb0ef;
    undefined field12057_0xb0f0;
    undefined field12058_0xb0f1;
    undefined field12059_0xb0f2;
    undefined field12060_0xb0f3;
    undefined field12061_0xb0f4;
    undefined field12062_0xb0f5;
    undefined field12063_0xb0f6;
    undefined field12064_0xb0f7;
    undefined field12065_0xb0f8;
    undefined field12066_0xb0f9;
    undefined field12067_0xb0fa;
    undefined field12068_0xb0fb;
    undefined field12069_0xb0fc;
    undefined field12070_0xb0fd;
    undefined field12071_0xb0fe;
    undefined field12072_0xb0ff;
    undefined field12073_0xb100;
    undefined field12074_0xb101;
    undefined field12075_0xb102;
    undefined field12076_0xb103;
    undefined field12077_0xb104;
    undefined field12078_0xb105;
    undefined field12079_0xb106;
    undefined field12080_0xb107;
    undefined field12081_0xb108;
    undefined field12082_0xb109;
    undefined field12083_0xb10a;
    undefined field12084_0xb10b;
    undefined field12085_0xb10c;
    undefined field12086_0xb10d;
    undefined field12087_0xb10e;
    undefined field12088_0xb10f;
    undefined field12089_0xb110;
    undefined field12090_0xb111;
    undefined field12091_0xb112;
    undefined field12092_0xb113;
    undefined field12093_0xb114;
    undefined field12094_0xb115;
    undefined field12095_0xb116;
    undefined field12096_0xb117;
    undefined field12097_0xb118;
    undefined field12098_0xb119;
    undefined field12099_0xb11a;
    undefined field12100_0xb11b;
    undefined field12101_0xb11c;
    undefined field12102_0xb11d;
    undefined field12103_0xb11e;
    undefined field12104_0xb11f;
    undefined field12105_0xb120;
    undefined field12106_0xb121;
    undefined field12107_0xb122;
    undefined field12108_0xb123;
    undefined field12109_0xb124;
    undefined field12110_0xb125;
    undefined field12111_0xb126;
    undefined field12112_0xb127;
    undefined field12113_0xb128;
    undefined field12114_0xb129;
    undefined field12115_0xb12a;
    undefined field12116_0xb12b;
    undefined field12117_0xb12c;
    undefined field12118_0xb12d;
    undefined field12119_0xb12e;
    undefined field12120_0xb12f;
    undefined field12121_0xb130;
    undefined field12122_0xb131;
    undefined field12123_0xb132;
    undefined field12124_0xb133;
    undefined field12125_0xb134;
    undefined field12126_0xb135;
    undefined field12127_0xb136;
    undefined field12128_0xb137;
    undefined field12129_0xb138;
    undefined field12130_0xb139;
    undefined field12131_0xb13a;
    undefined field12132_0xb13b;
    undefined field12133_0xb13c;
    undefined field12134_0xb13d;
    undefined field12135_0xb13e;
    undefined field12136_0xb13f;
    undefined field12137_0xb140;
    undefined field12138_0xb141;
    undefined field12139_0xb142;
    undefined field12140_0xb143;
    undefined field12141_0xb144;
    undefined field12142_0xb145;
    undefined field12143_0xb146;
    undefined field12144_0xb147;
    undefined field12145_0xb148;
    undefined field12146_0xb149;
    undefined field12147_0xb14a;
    undefined field12148_0xb14b;
    undefined field12149_0xb14c;
    undefined field12150_0xb14d;
    undefined field12151_0xb14e;
    undefined field12152_0xb14f;
    undefined field12153_0xb150;
    undefined field12154_0xb151;
    undefined field12155_0xb152;
    undefined field12156_0xb153;
    undefined field12157_0xb154;
    undefined field12158_0xb155;
    undefined field12159_0xb156;
    undefined field12160_0xb157;
    undefined field12161_0xb158;
    undefined field12162_0xb159;
    undefined field12163_0xb15a;
    undefined field12164_0xb15b;
    undefined field12165_0xb15c;
    undefined field12166_0xb15d;
    undefined field12167_0xb15e;
    undefined field12168_0xb15f;
    undefined field12169_0xb160;
    undefined field12170_0xb161;
    undefined field12171_0xb162;
    undefined field12172_0xb163;
    undefined field12173_0xb164;
    undefined field12174_0xb165;
    undefined field12175_0xb166;
    undefined field12176_0xb167;
    undefined field12177_0xb168;
    undefined field12178_0xb169;
    undefined field12179_0xb16a;
    undefined field12180_0xb16b;
    undefined field12181_0xb16c;
    undefined field12182_0xb16d;
    undefined field12183_0xb16e;
    undefined field12184_0xb16f;
    undefined field12185_0xb170;
    undefined field12186_0xb171;
    undefined field12187_0xb172;
    undefined field12188_0xb173;
    undefined field12189_0xb174;
    undefined field12190_0xb175;
    undefined field12191_0xb176;
    undefined field12192_0xb177;
    undefined field12193_0xb178;
    undefined field12194_0xb179;
    undefined field12195_0xb17a;
    undefined field12196_0xb17b;
    undefined field12197_0xb17c;
    undefined field12198_0xb17d;
    undefined field12199_0xb17e;
    undefined field12200_0xb17f;
    undefined field12201_0xb180;
    undefined field12202_0xb181;
    undefined field12203_0xb182;
    undefined field12204_0xb183;
    undefined field12205_0xb184;
    undefined field12206_0xb185;
    undefined field12207_0xb186;
    undefined field12208_0xb187;
    undefined field12209_0xb188;
    undefined field12210_0xb189;
    undefined field12211_0xb18a;
    undefined field12212_0xb18b;
    undefined field12213_0xb18c;
    undefined field12214_0xb18d;
    undefined field12215_0xb18e;
    undefined field12216_0xb18f;
    undefined field12217_0xb190;
    undefined field12218_0xb191;
    undefined field12219_0xb192;
    undefined field12220_0xb193;
    undefined field12221_0xb194;
    undefined field12222_0xb195;
    undefined field12223_0xb196;
    undefined field12224_0xb197;
    undefined field12225_0xb198;
    undefined field12226_0xb199;
    undefined field12227_0xb19a;
    undefined field12228_0xb19b;
    undefined field12229_0xb19c;
    undefined field12230_0xb19d;
    undefined field12231_0xb19e;
    undefined field12232_0xb19f;
    undefined field12233_0xb1a0;
    undefined field12234_0xb1a1;
    undefined field12235_0xb1a2;
    undefined field12236_0xb1a3;
    undefined field12237_0xb1a4;
    undefined field12238_0xb1a5;
    undefined field12239_0xb1a6;
    undefined field12240_0xb1a7;
    undefined field12241_0xb1a8;
    undefined field12242_0xb1a9;
    undefined field12243_0xb1aa;
    undefined field12244_0xb1ab;
    undefined field12245_0xb1ac;
    undefined field12246_0xb1ad;
    undefined field12247_0xb1ae;
    undefined field12248_0xb1af;
    undefined field12249_0xb1b0;
    undefined field12250_0xb1b1;
    undefined field12251_0xb1b2;
    undefined field12252_0xb1b3;
    undefined field12253_0xb1b4;
    undefined field12254_0xb1b5;
    undefined field12255_0xb1b6;
    undefined field12256_0xb1b7;
    undefined field12257_0xb1b8;
    undefined field12258_0xb1b9;
    undefined field12259_0xb1ba;
    undefined field12260_0xb1bb;
    undefined field12261_0xb1bc;
    undefined field12262_0xb1bd;
    undefined field12263_0xb1be;
    undefined field12264_0xb1bf;
    undefined field12265_0xb1c0;
    undefined field12266_0xb1c1;
    undefined field12267_0xb1c2;
    undefined field12268_0xb1c3;
    undefined field12269_0xb1c4;
    undefined field12270_0xb1c5;
    undefined field12271_0xb1c6;
    undefined field12272_0xb1c7;
    undefined field12273_0xb1c8;
    undefined field12274_0xb1c9;
    undefined field12275_0xb1ca;
    undefined field12276_0xb1cb;
    undefined field12277_0xb1cc;
    undefined field12278_0xb1cd;
    undefined field12279_0xb1ce;
    undefined field12280_0xb1cf;
    undefined field12281_0xb1d0;
    undefined field12282_0xb1d1;
    undefined field12283_0xb1d2;
    undefined field12284_0xb1d3;
    undefined field12285_0xb1d4;
    undefined field12286_0xb1d5;
    undefined field12287_0xb1d6;
    undefined field12288_0xb1d7;
    undefined field12289_0xb1d8;
    undefined field12290_0xb1d9;
    undefined field12291_0xb1da;
    undefined field12292_0xb1db;
    undefined field12293_0xb1dc;
    undefined field12294_0xb1dd;
    undefined field12295_0xb1de;
    undefined field12296_0xb1df;
    undefined field12297_0xb1e0;
    undefined field12298_0xb1e1;
    undefined field12299_0xb1e2;
    undefined field12300_0xb1e3;
    undefined field12301_0xb1e4;
    undefined field12302_0xb1e5;
    undefined field12303_0xb1e6;
    undefined field12304_0xb1e7;
    undefined field12305_0xb1e8;
    undefined field12306_0xb1e9;
    undefined field12307_0xb1ea;
    undefined field12308_0xb1eb;
    undefined field12309_0xb1ec;
    undefined field12310_0xb1ed;
    undefined field12311_0xb1ee;
    undefined field12312_0xb1ef;
    undefined field12313_0xb1f0;
    undefined field12314_0xb1f1;
    undefined field12315_0xb1f2;
    undefined field12316_0xb1f3;
    undefined field12317_0xb1f4;
    undefined field12318_0xb1f5;
    undefined field12319_0xb1f6;
    undefined field12320_0xb1f7;
    undefined field12321_0xb1f8;
    undefined field12322_0xb1f9;
    undefined field12323_0xb1fa;
    undefined field12324_0xb1fb;
    undefined field12325_0xb1fc;
    undefined field12326_0xb1fd;
    undefined field12327_0xb1fe;
    undefined field12328_0xb1ff;
    undefined field12329_0xb200;
    undefined field12330_0xb201;
    undefined field12331_0xb202;
    undefined field12332_0xb203;
    undefined field12333_0xb204;
    undefined field12334_0xb205;
    undefined field12335_0xb206;
    undefined field12336_0xb207;
    undefined field12337_0xb208;
    undefined field12338_0xb209;
    undefined field12339_0xb20a;
    undefined field12340_0xb20b;
    undefined field12341_0xb20c;
    undefined field12342_0xb20d;
    undefined field12343_0xb20e;
    undefined field12344_0xb20f;
    undefined field12345_0xb210;
    undefined field12346_0xb211;
    undefined field12347_0xb212;
    undefined field12348_0xb213;
    undefined field12349_0xb214;
    undefined field12350_0xb215;
    undefined field12351_0xb216;
    undefined field12352_0xb217;
    undefined field12353_0xb218;
    undefined field12354_0xb219;
    undefined field12355_0xb21a;
    undefined field12356_0xb21b;
    undefined field12357_0xb21c;
    undefined field12358_0xb21d;
    undefined field12359_0xb21e;
    undefined field12360_0xb21f;
    undefined field12361_0xb220;
    undefined field12362_0xb221;
    undefined field12363_0xb222;
    undefined field12364_0xb223;
    undefined field12365_0xb224;
    undefined field12366_0xb225;
    undefined field12367_0xb226;
    undefined field12368_0xb227;
    undefined field12369_0xb228;
    undefined field12370_0xb229;
    undefined field12371_0xb22a;
    undefined field12372_0xb22b;
    undefined field12373_0xb22c;
    undefined field12374_0xb22d;
    undefined field12375_0xb22e;
    undefined field12376_0xb22f;
    undefined field12377_0xb230;
    undefined field12378_0xb231;
    undefined field12379_0xb232;
    undefined field12380_0xb233;
    undefined field12381_0xb234;
    undefined field12382_0xb235;
    undefined field12383_0xb236;
    undefined field12384_0xb237;
    undefined field12385_0xb238;
    undefined field12386_0xb239;
    undefined field12387_0xb23a;
    undefined field12388_0xb23b;
    undefined field12389_0xb23c;
    undefined field12390_0xb23d;
    undefined field12391_0xb23e;
    undefined field12392_0xb23f;
    undefined field12393_0xb240;
    undefined field12394_0xb241;
    undefined field12395_0xb242;
    undefined field12396_0xb243;
    undefined field12397_0xb244;
    undefined field12398_0xb245;
    undefined field12399_0xb246;
    undefined field12400_0xb247;
    undefined field12401_0xb248;
    undefined field12402_0xb249;
    undefined field12403_0xb24a;
    undefined field12404_0xb24b;
    undefined field12405_0xb24c;
    undefined field12406_0xb24d;
    undefined field12407_0xb24e;
    undefined field12408_0xb24f;
    undefined field12409_0xb250;
    undefined field12410_0xb251;
    undefined field12411_0xb252;
    undefined field12412_0xb253;
    undefined field12413_0xb254;
    undefined field12414_0xb255;
    undefined field12415_0xb256;
    undefined field12416_0xb257;
    undefined field12417_0xb258;
    undefined field12418_0xb259;
    undefined field12419_0xb25a;
    undefined field12420_0xb25b;
    undefined field12421_0xb25c;
    undefined field12422_0xb25d;
    undefined field12423_0xb25e;
    undefined field12424_0xb25f;
    undefined field12425_0xb260;
    undefined field12426_0xb261;
    undefined field12427_0xb262;
    undefined field12428_0xb263;
    undefined field12429_0xb264;
    undefined field12430_0xb265;
    undefined field12431_0xb266;
    undefined field12432_0xb267;
    undefined field12433_0xb268;
    undefined field12434_0xb269;
    undefined field12435_0xb26a;
    undefined field12436_0xb26b;
    undefined field12437_0xb26c;
    undefined field12438_0xb26d;
    undefined field12439_0xb26e;
    undefined field12440_0xb26f;
    undefined field12441_0xb270;
    undefined field12442_0xb271;
    undefined field12443_0xb272;
    undefined field12444_0xb273;
    undefined field12445_0xb274;
    undefined field12446_0xb275;
    undefined field12447_0xb276;
    undefined field12448_0xb277;
    undefined field12449_0xb278;
    undefined field12450_0xb279;
    undefined field12451_0xb27a;
    undefined field12452_0xb27b;
    undefined field12453_0xb27c;
    undefined field12454_0xb27d;
    undefined field12455_0xb27e;
    undefined field12456_0xb27f;
    undefined field12457_0xb280;
    undefined field12458_0xb281;
    undefined field12459_0xb282;
    undefined field12460_0xb283;
    undefined field12461_0xb284;
    undefined field12462_0xb285;
    undefined field12463_0xb286;
    undefined field12464_0xb287;
    undefined field12465_0xb288;
    undefined field12466_0xb289;
    undefined field12467_0xb28a;
    undefined field12468_0xb28b;
    undefined field12469_0xb28c;
    undefined field12470_0xb28d;
    undefined field12471_0xb28e;
    undefined field12472_0xb28f;
    undefined field12473_0xb290;
    undefined field12474_0xb291;
    undefined field12475_0xb292;
    undefined field12476_0xb293;
    undefined field12477_0xb294;
    undefined field12478_0xb295;
    undefined field12479_0xb296;
    undefined field12480_0xb297;
    undefined field12481_0xb298;
    undefined field12482_0xb299;
    undefined field12483_0xb29a;
    undefined field12484_0xb29b;
    undefined field12485_0xb29c;
    undefined field12486_0xb29d;
    undefined field12487_0xb29e;
    undefined field12488_0xb29f;
    undefined field12489_0xb2a0;
    undefined field12490_0xb2a1;
    undefined field12491_0xb2a2;
    undefined field12492_0xb2a3;
    undefined field12493_0xb2a4;
    undefined field12494_0xb2a5;
    undefined field12495_0xb2a6;
    undefined field12496_0xb2a7;
    undefined field12497_0xb2a8;
    undefined field12498_0xb2a9;
    undefined field12499_0xb2aa;
    undefined field12500_0xb2ab;
    undefined field12501_0xb2ac;
    undefined field12502_0xb2ad;
    undefined field12503_0xb2ae;
    undefined field12504_0xb2af;
    undefined field12505_0xb2b0;
    undefined field12506_0xb2b1;
    undefined field12507_0xb2b2;
    undefined field12508_0xb2b3;
    undefined field12509_0xb2b4;
    undefined field12510_0xb2b5;
    undefined field12511_0xb2b6;
    undefined field12512_0xb2b7;
    undefined field12513_0xb2b8;
    undefined field12514_0xb2b9;
    undefined field12515_0xb2ba;
    undefined field12516_0xb2bb;
    undefined field12517_0xb2bc;
    undefined field12518_0xb2bd;
    undefined field12519_0xb2be;
    undefined field12520_0xb2bf;
    undefined field12521_0xb2c0;
    undefined field12522_0xb2c1;
    undefined field12523_0xb2c2;
    undefined field12524_0xb2c3;
    undefined field12525_0xb2c4;
    undefined field12526_0xb2c5;
    undefined field12527_0xb2c6;
    undefined field12528_0xb2c7;
    undefined field12529_0xb2c8;
    undefined field12530_0xb2c9;
    undefined field12531_0xb2ca;
    undefined field12532_0xb2cb;
    undefined field12533_0xb2cc;
    undefined field12534_0xb2cd;
    undefined field12535_0xb2ce;
    undefined field12536_0xb2cf;
    undefined field12537_0xb2d0;
    undefined field12538_0xb2d1;
    undefined field12539_0xb2d2;
    undefined field12540_0xb2d3;
    undefined field12541_0xb2d4;
    undefined field12542_0xb2d5;
    undefined field12543_0xb2d6;
    undefined field12544_0xb2d7;
    undefined field12545_0xb2d8;
    undefined field12546_0xb2d9;
    undefined field12547_0xb2da;
    undefined field12548_0xb2db;
    undefined field12549_0xb2dc;
    undefined field12550_0xb2dd;
    undefined field12551_0xb2de;
    undefined field12552_0xb2df;
    undefined field12553_0xb2e0;
    undefined field12554_0xb2e1;
    undefined field12555_0xb2e2;
    undefined field12556_0xb2e3;
    undefined field12557_0xb2e4;
    undefined field12558_0xb2e5;
    undefined field12559_0xb2e6;
    undefined field12560_0xb2e7;
    undefined field12561_0xb2e8;
    undefined field12562_0xb2e9;
    undefined field12563_0xb2ea;
    undefined field12564_0xb2eb;
    undefined field12565_0xb2ec;
    undefined field12566_0xb2ed;
    undefined field12567_0xb2ee;
    undefined field12568_0xb2ef;
    undefined field12569_0xb2f0;
    undefined field12570_0xb2f1;
    undefined field12571_0xb2f2;
    undefined field12572_0xb2f3;
    undefined field12573_0xb2f4;
    undefined field12574_0xb2f5;
    undefined field12575_0xb2f6;
    undefined field12576_0xb2f7;
    undefined field12577_0xb2f8;
    undefined field12578_0xb2f9;
    undefined field12579_0xb2fa;
    undefined field12580_0xb2fb;
    undefined field12581_0xb2fc;
    undefined field12582_0xb2fd;
    undefined field12583_0xb2fe;
    undefined field12584_0xb2ff;
    undefined field12585_0xb300;
    undefined field12586_0xb301;
    undefined field12587_0xb302;
    undefined field12588_0xb303;
    undefined field12589_0xb304;
    undefined field12590_0xb305;
    undefined field12591_0xb306;
    undefined field12592_0xb307;
    undefined field12593_0xb308;
    undefined field12594_0xb309;
    undefined field12595_0xb30a;
    undefined field12596_0xb30b;
    undefined field12597_0xb30c;
    undefined field12598_0xb30d;
    undefined field12599_0xb30e;
    undefined field12600_0xb30f;
    undefined field12601_0xb310;
    undefined field12602_0xb311;
    undefined field12603_0xb312;
    undefined field12604_0xb313;
    undefined field12605_0xb314;
    undefined field12606_0xb315;
    undefined field12607_0xb316;
    undefined field12608_0xb317;
    undefined field12609_0xb318;
    undefined field12610_0xb319;
    undefined field12611_0xb31a;
    undefined field12612_0xb31b;
    undefined field12613_0xb31c;
    undefined field12614_0xb31d;
    undefined field12615_0xb31e;
    undefined field12616_0xb31f;
    undefined field12617_0xb320;
    undefined field12618_0xb321;
    undefined field12619_0xb322;
    undefined field12620_0xb323;
    undefined field12621_0xb324;
    undefined field12622_0xb325;
    undefined field12623_0xb326;
    undefined field12624_0xb327;
    undefined field12625_0xb328;
    undefined field12626_0xb329;
    undefined field12627_0xb32a;
    undefined field12628_0xb32b;
    undefined field12629_0xb32c;
    undefined field12630_0xb32d;
    undefined field12631_0xb32e;
    undefined field12632_0xb32f;
    undefined field12633_0xb330;
    undefined field12634_0xb331;
    undefined field12635_0xb332;
    undefined field12636_0xb333;
    undefined field12637_0xb334;
    undefined field12638_0xb335;
    undefined field12639_0xb336;
    undefined field12640_0xb337;
    undefined field12641_0xb338;
    undefined field12642_0xb339;
    undefined field12643_0xb33a;
    undefined field12644_0xb33b;
    undefined field12645_0xb33c;
    undefined field12646_0xb33d;
    undefined field12647_0xb33e;
    undefined field12648_0xb33f;
    undefined field12649_0xb340;
    undefined field12650_0xb341;
    undefined field12651_0xb342;
    undefined field12652_0xb343;
    undefined field12653_0xb344;
    undefined field12654_0xb345;
    undefined field12655_0xb346;
    undefined field12656_0xb347;
    undefined field12657_0xb348;
    undefined field12658_0xb349;
    undefined field12659_0xb34a;
    undefined field12660_0xb34b;
    undefined field12661_0xb34c;
    undefined field12662_0xb34d;
    undefined field12663_0xb34e;
    undefined field12664_0xb34f;
    undefined field12665_0xb350;
    undefined field12666_0xb351;
    undefined field12667_0xb352;
    undefined field12668_0xb353;
    undefined field12669_0xb354;
    undefined field12670_0xb355;
    undefined field12671_0xb356;
    undefined field12672_0xb357;
    undefined field12673_0xb358;
    undefined field12674_0xb359;
    undefined field12675_0xb35a;
    undefined field12676_0xb35b;
    undefined field12677_0xb35c;
    undefined field12678_0xb35d;
    undefined field12679_0xb35e;
    undefined field12680_0xb35f;
    undefined field12681_0xb360;
    undefined field12682_0xb361;
    undefined field12683_0xb362;
    undefined field12684_0xb363;
    undefined field12685_0xb364;
    undefined field12686_0xb365;
    undefined field12687_0xb366;
    undefined field12688_0xb367;
    undefined field12689_0xb368;
    undefined field12690_0xb369;
    undefined field12691_0xb36a;
    undefined field12692_0xb36b;
    undefined field12693_0xb36c;
    undefined field12694_0xb36d;
    undefined field12695_0xb36e;
    undefined field12696_0xb36f;
    undefined field12697_0xb370;
    undefined field12698_0xb371;
    undefined field12699_0xb372;
    undefined field12700_0xb373;
    undefined field12701_0xb374;
    undefined field12702_0xb375;
    undefined field12703_0xb376;
    undefined field12704_0xb377;
    undefined field12705_0xb378;
    undefined field12706_0xb379;
    undefined field12707_0xb37a;
    undefined field12708_0xb37b;
    undefined field12709_0xb37c;
    undefined field12710_0xb37d;
    undefined field12711_0xb37e;
    undefined field12712_0xb37f;
    undefined field12713_0xb380;
    undefined field12714_0xb381;
    undefined field12715_0xb382;
    undefined field12716_0xb383;
    undefined field12717_0xb384;
    undefined field12718_0xb385;
    undefined field12719_0xb386;
    undefined field12720_0xb387;
    undefined field12721_0xb388;
    undefined field12722_0xb389;
    undefined field12723_0xb38a;
    undefined field12724_0xb38b;
    undefined field12725_0xb38c;
    undefined field12726_0xb38d;
    undefined field12727_0xb38e;
    undefined field12728_0xb38f;
    undefined field12729_0xb390;
    undefined field12730_0xb391;
    undefined field12731_0xb392;
    undefined field12732_0xb393;
    undefined field12733_0xb394;
    undefined field12734_0xb395;
    undefined field12735_0xb396;
    undefined field12736_0xb397;
    undefined field12737_0xb398;
    undefined field12738_0xb399;
    undefined field12739_0xb39a;
    undefined field12740_0xb39b;
    undefined field12741_0xb39c;
    undefined field12742_0xb39d;
    undefined field12743_0xb39e;
    undefined field12744_0xb39f;
    undefined field12745_0xb3a0;
    undefined field12746_0xb3a1;
    undefined field12747_0xb3a2;
    undefined field12748_0xb3a3;
    undefined field12749_0xb3a4;
    undefined field12750_0xb3a5;
    undefined field12751_0xb3a6;
    undefined field12752_0xb3a7;
    undefined field12753_0xb3a8;
    undefined field12754_0xb3a9;
    undefined field12755_0xb3aa;
    undefined field12756_0xb3ab;
    undefined field12757_0xb3ac;
    undefined field12758_0xb3ad;
    undefined field12759_0xb3ae;
    undefined field12760_0xb3af;
    undefined field12761_0xb3b0;
    undefined field12762_0xb3b1;
    undefined field12763_0xb3b2;
    undefined field12764_0xb3b3;
    undefined field12765_0xb3b4;
    undefined field12766_0xb3b5;
    undefined field12767_0xb3b6;
    undefined field12768_0xb3b7;
    undefined field12769_0xb3b8;
    undefined field12770_0xb3b9;
    undefined field12771_0xb3ba;
    undefined field12772_0xb3bb;
    undefined field12773_0xb3bc;
    undefined field12774_0xb3bd;
    undefined field12775_0xb3be;
    undefined field12776_0xb3bf;
    undefined field12777_0xb3c0;
    undefined field12778_0xb3c1;
    undefined field12779_0xb3c2;
    undefined field12780_0xb3c3;
    undefined field12781_0xb3c4;
    undefined field12782_0xb3c5;
    undefined field12783_0xb3c6;
    undefined field12784_0xb3c7;
    undefined field12785_0xb3c8;
    undefined field12786_0xb3c9;
    undefined field12787_0xb3ca;
    undefined field12788_0xb3cb;
    undefined field12789_0xb3cc;
    undefined field12790_0xb3cd;
    undefined field12791_0xb3ce;
    undefined field12792_0xb3cf;
    undefined field12793_0xb3d0;
    undefined field12794_0xb3d1;
    undefined field12795_0xb3d2;
    undefined field12796_0xb3d3;
    undefined field12797_0xb3d4;
    undefined field12798_0xb3d5;
    undefined field12799_0xb3d6;
    undefined field12800_0xb3d7;
    undefined field12801_0xb3d8;
    undefined field12802_0xb3d9;
    undefined field12803_0xb3da;
    undefined field12804_0xb3db;
    undefined field12805_0xb3dc;
    undefined field12806_0xb3dd;
    undefined field12807_0xb3de;
    undefined field12808_0xb3df;
    undefined field12809_0xb3e0;
    undefined field12810_0xb3e1;
    undefined field12811_0xb3e2;
    undefined field12812_0xb3e3;
    undefined field12813_0xb3e4;
    undefined field12814_0xb3e5;
    undefined field12815_0xb3e6;
    undefined field12816_0xb3e7;
    undefined field12817_0xb3e8;
    undefined field12818_0xb3e9;
    undefined field12819_0xb3ea;
    undefined field12820_0xb3eb;
    undefined field12821_0xb3ec;
    undefined field12822_0xb3ed;
    undefined field12823_0xb3ee;
    undefined field12824_0xb3ef;
    undefined field12825_0xb3f0;
    undefined field12826_0xb3f1;
    undefined field12827_0xb3f2;
    undefined field12828_0xb3f3;
    undefined field12829_0xb3f4;
    undefined field12830_0xb3f5;
    undefined field12831_0xb3f6;
    undefined field12832_0xb3f7;
    undefined field12833_0xb3f8;
    undefined field12834_0xb3f9;
    undefined field12835_0xb3fa;
    undefined field12836_0xb3fb;
    undefined field12837_0xb3fc;
    undefined field12838_0xb3fd;
    undefined field12839_0xb3fe;
    undefined field12840_0xb3ff;
    undefined field12841_0xb400;
    undefined field12842_0xb401;
    undefined field12843_0xb402;
    undefined field12844_0xb403;
    undefined field12845_0xb404;
    undefined field12846_0xb405;
    undefined field12847_0xb406;
    undefined field12848_0xb407;
    undefined field12849_0xb408;
    undefined field12850_0xb409;
    undefined field12851_0xb40a;
    undefined field12852_0xb40b;
    undefined field12853_0xb40c;
    undefined field12854_0xb40d;
    undefined field12855_0xb40e;
    undefined field12856_0xb40f;
    undefined field12857_0xb410;
    undefined field12858_0xb411;
    undefined field12859_0xb412;
    undefined field12860_0xb413;
    undefined field12861_0xb414;
    undefined field12862_0xb415;
    undefined field12863_0xb416;
    undefined field12864_0xb417;
    undefined field12865_0xb418;
    undefined field12866_0xb419;
    undefined field12867_0xb41a;
    undefined field12868_0xb41b;
    undefined field12869_0xb41c;
    undefined field12870_0xb41d;
    undefined field12871_0xb41e;
    undefined field12872_0xb41f;
    undefined field12873_0xb420;
    undefined field12874_0xb421;
    undefined field12875_0xb422;
    undefined field12876_0xb423;
    undefined field12877_0xb424;
    undefined field12878_0xb425;
    undefined field12879_0xb426;
    undefined field12880_0xb427;
    undefined field12881_0xb428;
    undefined field12882_0xb429;
    undefined field12883_0xb42a;
    undefined field12884_0xb42b;
    undefined field12885_0xb42c;
    undefined field12886_0xb42d;
    undefined field12887_0xb42e;
    undefined field12888_0xb42f;
    undefined field12889_0xb430;
    undefined field12890_0xb431;
    undefined field12891_0xb432;
    undefined field12892_0xb433;
    undefined field12893_0xb434;
    undefined field12894_0xb435;
    undefined field12895_0xb436;
    undefined field12896_0xb437;
    undefined field12897_0xb438;
    undefined field12898_0xb439;
    undefined field12899_0xb43a;
    undefined field12900_0xb43b;
    undefined field12901_0xb43c;
    undefined field12902_0xb43d;
    undefined field12903_0xb43e;
    undefined field12904_0xb43f;
    undefined field12905_0xb440;
    undefined field12906_0xb441;
    undefined field12907_0xb442;
    undefined field12908_0xb443;
    undefined field12909_0xb444;
    undefined field12910_0xb445;
    undefined field12911_0xb446;
    undefined field12912_0xb447;
    undefined field12913_0xb448;
    undefined field12914_0xb449;
    undefined field12915_0xb44a;
    undefined field12916_0xb44b;
    undefined field12917_0xb44c;
    undefined field12918_0xb44d;
    undefined field12919_0xb44e;
    undefined field12920_0xb44f;
    undefined field12921_0xb450;
    undefined field12922_0xb451;
    undefined field12923_0xb452;
    undefined field12924_0xb453;
    undefined field12925_0xb454;
    undefined field12926_0xb455;
    undefined field12927_0xb456;
    undefined field12928_0xb457;
    undefined field12929_0xb458;
    undefined field12930_0xb459;
    undefined field12931_0xb45a;
    undefined field12932_0xb45b;
    undefined field12933_0xb45c;
    undefined field12934_0xb45d;
    undefined field12935_0xb45e;
    undefined field12936_0xb45f;
    undefined field12937_0xb460;
    undefined field12938_0xb461;
    undefined field12939_0xb462;
    undefined field12940_0xb463;
    undefined field12941_0xb464;
    undefined field12942_0xb465;
    undefined field12943_0xb466;
    undefined field12944_0xb467;
    undefined field12945_0xb468;
    undefined field12946_0xb469;
    undefined field12947_0xb46a;
    undefined field12948_0xb46b;
    undefined field12949_0xb46c;
    undefined field12950_0xb46d;
    undefined field12951_0xb46e;
    undefined field12952_0xb46f;
    undefined field12953_0xb470;
    undefined field12954_0xb471;
    undefined field12955_0xb472;
    undefined field12956_0xb473;
    undefined field12957_0xb474;
    undefined field12958_0xb475;
    undefined field12959_0xb476;
    undefined field12960_0xb477;
    undefined field12961_0xb478;
    undefined field12962_0xb479;
    undefined field12963_0xb47a;
    undefined field12964_0xb47b;
    undefined field12965_0xb47c;
    undefined field12966_0xb47d;
    undefined field12967_0xb47e;
    undefined field12968_0xb47f;
    undefined field12969_0xb480;
    undefined field12970_0xb481;
    undefined field12971_0xb482;
    undefined field12972_0xb483;
    undefined field12973_0xb484;
    undefined field12974_0xb485;
    undefined field12975_0xb486;
    undefined field12976_0xb487;
    undefined field12977_0xb488;
    undefined field12978_0xb489;
    undefined field12979_0xb48a;
    undefined field12980_0xb48b;
    undefined field12981_0xb48c;
    undefined field12982_0xb48d;
    undefined field12983_0xb48e;
    undefined field12984_0xb48f;
    undefined field12985_0xb490;
    undefined field12986_0xb491;
    undefined field12987_0xb492;
    undefined field12988_0xb493;
    undefined field12989_0xb494;
    undefined field12990_0xb495;
    undefined field12991_0xb496;
    undefined field12992_0xb497;
    undefined field12993_0xb498;
    undefined field12994_0xb499;
    undefined field12995_0xb49a;
    undefined field12996_0xb49b;
    undefined field12997_0xb49c;
    undefined field12998_0xb49d;
    undefined field12999_0xb49e;
    undefined field13000_0xb49f;
    undefined field13001_0xb4a0;
    undefined field13002_0xb4a1;
    undefined field13003_0xb4a2;
    undefined field13004_0xb4a3;
    undefined field13005_0xb4a4;
    undefined field13006_0xb4a5;
    undefined field13007_0xb4a6;
    undefined field13008_0xb4a7;
    undefined field13009_0xb4a8;
    undefined field13010_0xb4a9;
    undefined field13011_0xb4aa;
    undefined field13012_0xb4ab;
    undefined field13013_0xb4ac;
    undefined field13014_0xb4ad;
    undefined field13015_0xb4ae;
    undefined field13016_0xb4af;
    undefined field13017_0xb4b0;
    undefined field13018_0xb4b1;
    undefined field13019_0xb4b2;
    undefined field13020_0xb4b3;
    undefined field13021_0xb4b4;
    undefined field13022_0xb4b5;
    undefined field13023_0xb4b6;
    undefined field13024_0xb4b7;
    undefined field13025_0xb4b8;
    undefined field13026_0xb4b9;
    undefined field13027_0xb4ba;
    undefined field13028_0xb4bb;
    undefined field13029_0xb4bc;
    undefined field13030_0xb4bd;
    undefined field13031_0xb4be;
    undefined field13032_0xb4bf;
    undefined field13033_0xb4c0;
    undefined field13034_0xb4c1;
    undefined field13035_0xb4c2;
    undefined field13036_0xb4c3;
    undefined field13037_0xb4c4;
    undefined field13038_0xb4c5;
    undefined field13039_0xb4c6;
    undefined field13040_0xb4c7;
    undefined field13041_0xb4c8;
    undefined field13042_0xb4c9;
    undefined field13043_0xb4ca;
    undefined field13044_0xb4cb;
    undefined field13045_0xb4cc;
    undefined field13046_0xb4cd;
    undefined field13047_0xb4ce;
    undefined field13048_0xb4cf;
    undefined field13049_0xb4d0;
    undefined field13050_0xb4d1;
    undefined field13051_0xb4d2;
    undefined field13052_0xb4d3;
    undefined field13053_0xb4d4;
    undefined field13054_0xb4d5;
    undefined field13055_0xb4d6;
    undefined field13056_0xb4d7;
    undefined field13057_0xb4d8;
    undefined field13058_0xb4d9;
    undefined field13059_0xb4da;
    undefined field13060_0xb4db;
    undefined field13061_0xb4dc;
    undefined field13062_0xb4dd;
    undefined field13063_0xb4de;
    undefined field13064_0xb4df;
    undefined field13065_0xb4e0;
    undefined field13066_0xb4e1;
    undefined field13067_0xb4e2;
    undefined field13068_0xb4e3;
    undefined field13069_0xb4e4;
    undefined field13070_0xb4e5;
    undefined field13071_0xb4e6;
    undefined field13072_0xb4e7;
    undefined field13073_0xb4e8;
    undefined field13074_0xb4e9;
    undefined field13075_0xb4ea;
    undefined field13076_0xb4eb;
    undefined field13077_0xb4ec;
    undefined field13078_0xb4ed;
    undefined field13079_0xb4ee;
    undefined field13080_0xb4ef;
    undefined field13081_0xb4f0;
    undefined field13082_0xb4f1;
    undefined field13083_0xb4f2;
    undefined field13084_0xb4f3;
    undefined field13085_0xb4f4;
    undefined field13086_0xb4f5;
    undefined field13087_0xb4f6;
    undefined field13088_0xb4f7;
    undefined field13089_0xb4f8;
    undefined field13090_0xb4f9;
    undefined field13091_0xb4fa;
    undefined field13092_0xb4fb;
    undefined field13093_0xb4fc;
    undefined field13094_0xb4fd;
    undefined field13095_0xb4fe;
    undefined field13096_0xb4ff;
    undefined field13097_0xb500;
    undefined field13098_0xb501;
    undefined field13099_0xb502;
    undefined field13100_0xb503;
    undefined field13101_0xb504;
    undefined field13102_0xb505;
    undefined field13103_0xb506;
    undefined field13104_0xb507;
    undefined field13105_0xb508;
    undefined field13106_0xb509;
    undefined field13107_0xb50a;
    undefined field13108_0xb50b;
    undefined field13109_0xb50c;
    undefined field13110_0xb50d;
    undefined field13111_0xb50e;
    undefined field13112_0xb50f;
    undefined field13113_0xb510;
    undefined field13114_0xb511;
    undefined field13115_0xb512;
    undefined field13116_0xb513;
    undefined field13117_0xb514;
    undefined field13118_0xb515;
    undefined field13119_0xb516;
    undefined field13120_0xb517;
    undefined field13121_0xb518;
    undefined field13122_0xb519;
    undefined field13123_0xb51a;
    undefined field13124_0xb51b;
    undefined field13125_0xb51c;
    undefined field13126_0xb51d;
    undefined field13127_0xb51e;
    undefined field13128_0xb51f;
    undefined field13129_0xb520;
    undefined field13130_0xb521;
    undefined field13131_0xb522;
    undefined field13132_0xb523;
    undefined field13133_0xb524;
    undefined field13134_0xb525;
    undefined field13135_0xb526;
    undefined field13136_0xb527;
    undefined field13137_0xb528;
    undefined field13138_0xb529;
    undefined field13139_0xb52a;
    undefined field13140_0xb52b;
    undefined field13141_0xb52c;
    undefined field13142_0xb52d;
    undefined field13143_0xb52e;
    undefined field13144_0xb52f;
    undefined field13145_0xb530;
    undefined field13146_0xb531;
    undefined field13147_0xb532;
    undefined field13148_0xb533;
    undefined field13149_0xb534;
    undefined field13150_0xb535;
    undefined field13151_0xb536;
    undefined field13152_0xb537;
    undefined field13153_0xb538;
    undefined field13154_0xb539;
    undefined field13155_0xb53a;
    undefined field13156_0xb53b;
    undefined field13157_0xb53c;
    undefined field13158_0xb53d;
    undefined field13159_0xb53e;
    undefined field13160_0xb53f;
    undefined field13161_0xb540;
    undefined field13162_0xb541;
    undefined field13163_0xb542;
    undefined field13164_0xb543;
    undefined field13165_0xb544;
    undefined field13166_0xb545;
    undefined field13167_0xb546;
    undefined field13168_0xb547;
    undefined field13169_0xb548;
    undefined field13170_0xb549;
    undefined field13171_0xb54a;
    undefined field13172_0xb54b;
    undefined field13173_0xb54c;
    undefined field13174_0xb54d;
    undefined field13175_0xb54e;
    undefined field13176_0xb54f;
    undefined field13177_0xb550;
    undefined field13178_0xb551;
    undefined field13179_0xb552;
    undefined field13180_0xb553;
    undefined field13181_0xb554;
    undefined field13182_0xb555;
    undefined field13183_0xb556;
    undefined field13184_0xb557;
    undefined field13185_0xb558;
    undefined field13186_0xb559;
    undefined field13187_0xb55a;
    undefined field13188_0xb55b;
    undefined field13189_0xb55c;
    undefined field13190_0xb55d;
    undefined field13191_0xb55e;
    undefined field13192_0xb55f;
    undefined field13193_0xb560;
    undefined field13194_0xb561;
    undefined field13195_0xb562;
    undefined field13196_0xb563;
    undefined field13197_0xb564;
    undefined field13198_0xb565;
    undefined field13199_0xb566;
    undefined field13200_0xb567;
    undefined field13201_0xb568;
    undefined field13202_0xb569;
    undefined field13203_0xb56a;
    undefined field13204_0xb56b;
    undefined field13205_0xb56c;
    undefined field13206_0xb56d;
    undefined field13207_0xb56e;
    undefined field13208_0xb56f;
    undefined field13209_0xb570;
    undefined field13210_0xb571;
    undefined field13211_0xb572;
    undefined field13212_0xb573;
    undefined field13213_0xb574;
    undefined field13214_0xb575;
    undefined field13215_0xb576;
    undefined field13216_0xb577;
    undefined field13217_0xb578;
    undefined field13218_0xb579;
    undefined field13219_0xb57a;
    undefined field13220_0xb57b;
    undefined field13221_0xb57c;
    undefined field13222_0xb57d;
    undefined field13223_0xb57e;
    undefined field13224_0xb57f;
    undefined field13225_0xb580;
    undefined field13226_0xb581;
    undefined field13227_0xb582;
    undefined field13228_0xb583;
    undefined field13229_0xb584;
    undefined field13230_0xb585;
    undefined field13231_0xb586;
    undefined field13232_0xb587;
    undefined field13233_0xb588;
    undefined field13234_0xb589;
    undefined field13235_0xb58a;
    undefined field13236_0xb58b;
    undefined field13237_0xb58c;
    undefined field13238_0xb58d;
    undefined field13239_0xb58e;
    undefined field13240_0xb58f;
    undefined field13241_0xb590;
    undefined field13242_0xb591;
    undefined field13243_0xb592;
    undefined field13244_0xb593;
    undefined field13245_0xb594;
    undefined field13246_0xb595;
    undefined field13247_0xb596;
    undefined field13248_0xb597;
    undefined field13249_0xb598;
    undefined field13250_0xb599;
    undefined field13251_0xb59a;
    undefined field13252_0xb59b;
    undefined field13253_0xb59c;
    undefined field13254_0xb59d;
    undefined field13255_0xb59e;
    undefined field13256_0xb59f;
    undefined field13257_0xb5a0;
    undefined field13258_0xb5a1;
    undefined field13259_0xb5a2;
    undefined field13260_0xb5a3;
    undefined field13261_0xb5a4;
    undefined field13262_0xb5a5;
    undefined field13263_0xb5a6;
    undefined field13264_0xb5a7;
    undefined field13265_0xb5a8;
    undefined field13266_0xb5a9;
    undefined field13267_0xb5aa;
    undefined field13268_0xb5ab;
    undefined field13269_0xb5ac;
    undefined field13270_0xb5ad;
    undefined field13271_0xb5ae;
    undefined field13272_0xb5af;
    undefined field13273_0xb5b0;
    undefined field13274_0xb5b1;
    undefined field13275_0xb5b2;
    undefined field13276_0xb5b3;
    undefined field13277_0xb5b4;
    undefined field13278_0xb5b5;
    undefined field13279_0xb5b6;
    undefined field13280_0xb5b7;
    undefined field13281_0xb5b8;
    undefined field13282_0xb5b9;
    undefined field13283_0xb5ba;
    undefined field13284_0xb5bb;
    undefined field13285_0xb5bc;
    undefined field13286_0xb5bd;
    undefined field13287_0xb5be;
    undefined field13288_0xb5bf;
    undefined field13289_0xb5c0;
    undefined field13290_0xb5c1;
    undefined field13291_0xb5c2;
    undefined field13292_0xb5c3;
    undefined field13293_0xb5c4;
    undefined field13294_0xb5c5;
    undefined field13295_0xb5c6;
    undefined field13296_0xb5c7;
    undefined field13297_0xb5c8;
    undefined field13298_0xb5c9;
    undefined field13299_0xb5ca;
    undefined field13300_0xb5cb;
    undefined field13301_0xb5cc;
    undefined field13302_0xb5cd;
    undefined field13303_0xb5ce;
    undefined field13304_0xb5cf;
    undefined field13305_0xb5d0;
    undefined field13306_0xb5d1;
    undefined field13307_0xb5d2;
    undefined field13308_0xb5d3;
    undefined field13309_0xb5d4;
    undefined field13310_0xb5d5;
    undefined field13311_0xb5d6;
    undefined field13312_0xb5d7;
    undefined field13313_0xb5d8;
    undefined field13314_0xb5d9;
    undefined field13315_0xb5da;
    undefined field13316_0xb5db;
    undefined field13317_0xb5dc;
    undefined field13318_0xb5dd;
    undefined field13319_0xb5de;
    undefined field13320_0xb5df;
    undefined field13321_0xb5e0;
    undefined field13322_0xb5e1;
    undefined field13323_0xb5e2;
    undefined field13324_0xb5e3;
    undefined field13325_0xb5e4;
    undefined field13326_0xb5e5;
    undefined field13327_0xb5e6;
    undefined field13328_0xb5e7;
    undefined field13329_0xb5e8;
    undefined field13330_0xb5e9;
    undefined field13331_0xb5ea;
    undefined field13332_0xb5eb;
    undefined field13333_0xb5ec;
    undefined field13334_0xb5ed;
    undefined field13335_0xb5ee;
    undefined field13336_0xb5ef;
    undefined field13337_0xb5f0;
    undefined field13338_0xb5f1;
    undefined field13339_0xb5f2;
    undefined field13340_0xb5f3;
    undefined field13341_0xb5f4;
    undefined field13342_0xb5f5;
    undefined field13343_0xb5f6;
    undefined field13344_0xb5f7;
    undefined field13345_0xb5f8;
    undefined field13346_0xb5f9;
    undefined field13347_0xb5fa;
    undefined field13348_0xb5fb;
    undefined field13349_0xb5fc;
    undefined field13350_0xb5fd;
    undefined field13351_0xb5fe;
    undefined field13352_0xb5ff;
    undefined field13353_0xb600;
    undefined field13354_0xb601;
    undefined field13355_0xb602;
    undefined field13356_0xb603;
    undefined field13357_0xb604;
    undefined field13358_0xb605;
    undefined field13359_0xb606;
    undefined field13360_0xb607;
    undefined field13361_0xb608;
    undefined field13362_0xb609;
    undefined field13363_0xb60a;
    undefined field13364_0xb60b;
    undefined field13365_0xb60c;
    undefined field13366_0xb60d;
    undefined field13367_0xb60e;
    undefined field13368_0xb60f;
    undefined field13369_0xb610;
    undefined field13370_0xb611;
    undefined field13371_0xb612;
    undefined field13372_0xb613;
    undefined field13373_0xb614;
    undefined field13374_0xb615;
    undefined field13375_0xb616;
    undefined field13376_0xb617;
    undefined field13377_0xb618;
    undefined field13378_0xb619;
    undefined field13379_0xb61a;
    undefined field13380_0xb61b;
    undefined field13381_0xb61c;
    undefined field13382_0xb61d;
    undefined field13383_0xb61e;
    undefined field13384_0xb61f;
    undefined field13385_0xb620;
    undefined field13386_0xb621;
    undefined field13387_0xb622;
    undefined field13388_0xb623;
    undefined field13389_0xb624;
    undefined field13390_0xb625;
    undefined field13391_0xb626;
    undefined field13392_0xb627;
    undefined field13393_0xb628;
    undefined field13394_0xb629;
    undefined field13395_0xb62a;
    undefined field13396_0xb62b;
    undefined field13397_0xb62c;
    undefined field13398_0xb62d;
    undefined field13399_0xb62e;
    undefined field13400_0xb62f;
    undefined field13401_0xb630;
    undefined field13402_0xb631;
    undefined field13403_0xb632;
    undefined field13404_0xb633;
    undefined field13405_0xb634;
    undefined field13406_0xb635;
    undefined field13407_0xb636;
    undefined field13408_0xb637;
    undefined field13409_0xb638;
    undefined field13410_0xb639;
    undefined field13411_0xb63a;
    undefined field13412_0xb63b;
    undefined field13413_0xb63c;
    undefined field13414_0xb63d;
    undefined field13415_0xb63e;
    undefined field13416_0xb63f;
    undefined field13417_0xb640;
    undefined field13418_0xb641;
    undefined field13419_0xb642;
    undefined field13420_0xb643;
    undefined field13421_0xb644;
    undefined field13422_0xb645;
    undefined field13423_0xb646;
    undefined field13424_0xb647;
    undefined field13425_0xb648;
    undefined field13426_0xb649;
    undefined field13427_0xb64a;
    undefined field13428_0xb64b;
    undefined field13429_0xb64c;
    undefined field13430_0xb64d;
    undefined field13431_0xb64e;
    undefined field13432_0xb64f;
    undefined field13433_0xb650;
    undefined field13434_0xb651;
    undefined field13435_0xb652;
    undefined field13436_0xb653;
    undefined field13437_0xb654;
    undefined field13438_0xb655;
    undefined field13439_0xb656;
    undefined field13440_0xb657;
    undefined field13441_0xb658;
    undefined field13442_0xb659;
    undefined field13443_0xb65a;
    undefined field13444_0xb65b;
    undefined field13445_0xb65c;
    undefined field13446_0xb65d;
    undefined field13447_0xb65e;
    undefined field13448_0xb65f;
    undefined field13449_0xb660;
    undefined field13450_0xb661;
    undefined field13451_0xb662;
    undefined field13452_0xb663;
    undefined field13453_0xb664;
    undefined field13454_0xb665;
    undefined field13455_0xb666;
    undefined field13456_0xb667;
    undefined field13457_0xb668;
    undefined field13458_0xb669;
    undefined field13459_0xb66a;
    undefined field13460_0xb66b;
    undefined field13461_0xb66c;
    undefined field13462_0xb66d;
    undefined field13463_0xb66e;
    undefined field13464_0xb66f;
    undefined field13465_0xb670;
    undefined field13466_0xb671;
    undefined field13467_0xb672;
    undefined field13468_0xb673;
    undefined field13469_0xb674;
    undefined field13470_0xb675;
    undefined field13471_0xb676;
    undefined field13472_0xb677;
    undefined field13473_0xb678;
    undefined field13474_0xb679;
    undefined field13475_0xb67a;
    undefined field13476_0xb67b;
    undefined field13477_0xb67c;
    undefined field13478_0xb67d;
    undefined field13479_0xb67e;
    undefined field13480_0xb67f;
    undefined field13481_0xb680;
    undefined field13482_0xb681;
    undefined field13483_0xb682;
    undefined field13484_0xb683;
    undefined field13485_0xb684;
    undefined field13486_0xb685;
    undefined field13487_0xb686;
    undefined field13488_0xb687;
    undefined field13489_0xb688;
    undefined field13490_0xb689;
    undefined field13491_0xb68a;
    undefined field13492_0xb68b;
    undefined field13493_0xb68c;
    undefined field13494_0xb68d;
    undefined field13495_0xb68e;
    undefined field13496_0xb68f;
    undefined field13497_0xb690;
    undefined field13498_0xb691;
    undefined field13499_0xb692;
    undefined field13500_0xb693;
    undefined field13501_0xb694;
    undefined field13502_0xb695;
    undefined field13503_0xb696;
    undefined field13504_0xb697;
    undefined field13505_0xb698;
    undefined field13506_0xb699;
    undefined field13507_0xb69a;
    undefined field13508_0xb69b;
    undefined field13509_0xb69c;
    undefined field13510_0xb69d;
    undefined field13511_0xb69e;
    undefined field13512_0xb69f;
    undefined field13513_0xb6a0;
    undefined field13514_0xb6a1;
    undefined field13515_0xb6a2;
    undefined field13516_0xb6a3;
    undefined field13517_0xb6a4;
    undefined field13518_0xb6a5;
    undefined field13519_0xb6a6;
    undefined field13520_0xb6a7;
    undefined field13521_0xb6a8;
    undefined field13522_0xb6a9;
    undefined field13523_0xb6aa;
    undefined field13524_0xb6ab;
    undefined field13525_0xb6ac;
    undefined field13526_0xb6ad;
    undefined field13527_0xb6ae;
    undefined field13528_0xb6af;
    undefined field13529_0xb6b0;
    undefined field13530_0xb6b1;
    undefined field13531_0xb6b2;
    undefined field13532_0xb6b3;
    undefined field13533_0xb6b4;
    undefined field13534_0xb6b5;
    undefined field13535_0xb6b6;
    undefined field13536_0xb6b7;
    undefined field13537_0xb6b8;
    undefined field13538_0xb6b9;
    undefined field13539_0xb6ba;
    undefined field13540_0xb6bb;
    undefined field13541_0xb6bc;
    undefined field13542_0xb6bd;
    undefined field13543_0xb6be;
    undefined field13544_0xb6bf;
    undefined field13545_0xb6c0;
    undefined field13546_0xb6c1;
    undefined field13547_0xb6c2;
    undefined field13548_0xb6c3;
    undefined field13549_0xb6c4;
    undefined field13550_0xb6c5;
    undefined field13551_0xb6c6;
    undefined field13552_0xb6c7;
    undefined field13553_0xb6c8;
    undefined field13554_0xb6c9;
    undefined field13555_0xb6ca;
    undefined field13556_0xb6cb;
    undefined field13557_0xb6cc;
    undefined field13558_0xb6cd;
    undefined field13559_0xb6ce;
    undefined field13560_0xb6cf;
    undefined field13561_0xb6d0;
    undefined field13562_0xb6d1;
    undefined field13563_0xb6d2;
    undefined field13564_0xb6d3;
    undefined field13565_0xb6d4;
    undefined field13566_0xb6d5;
    undefined field13567_0xb6d6;
    undefined field13568_0xb6d7;
    undefined field13569_0xb6d8;
    undefined field13570_0xb6d9;
    undefined field13571_0xb6da;
    undefined field13572_0xb6db;
    undefined field13573_0xb6dc;
    undefined field13574_0xb6dd;
    undefined field13575_0xb6de;
    undefined field13576_0xb6df;
    undefined field13577_0xb6e0;
    undefined field13578_0xb6e1;
    undefined field13579_0xb6e2;
    undefined field13580_0xb6e3;
    undefined field13581_0xb6e4;
    undefined field13582_0xb6e5;
    undefined field13583_0xb6e6;
    undefined field13584_0xb6e7;
    undefined field13585_0xb6e8;
    undefined field13586_0xb6e9;
    undefined field13587_0xb6ea;
    undefined field13588_0xb6eb;
    undefined field13589_0xb6ec;
    undefined field13590_0xb6ed;
    undefined field13591_0xb6ee;
    undefined field13592_0xb6ef;
    undefined field13593_0xb6f0;
    undefined field13594_0xb6f1;
    undefined field13595_0xb6f2;
    undefined field13596_0xb6f3;
    undefined field13597_0xb6f4;
    undefined field13598_0xb6f5;
    undefined field13599_0xb6f6;
    undefined field13600_0xb6f7;
    undefined field13601_0xb6f8;
    undefined field13602_0xb6f9;
    undefined field13603_0xb6fa;
    undefined field13604_0xb6fb;
    undefined field13605_0xb6fc;
    undefined field13606_0xb6fd;
    undefined field13607_0xb6fe;
    undefined field13608_0xb6ff;
    undefined field13609_0xb700;
    undefined field13610_0xb701;
    undefined field13611_0xb702;
    undefined field13612_0xb703;
    undefined field13613_0xb704;
    undefined field13614_0xb705;
    undefined field13615_0xb706;
    undefined field13616_0xb707;
    undefined field13617_0xb708;
    undefined field13618_0xb709;
    undefined field13619_0xb70a;
    undefined field13620_0xb70b;
    undefined field13621_0xb70c;
    undefined field13622_0xb70d;
    undefined field13623_0xb70e;
    undefined field13624_0xb70f;
    undefined field13625_0xb710;
    undefined field13626_0xb711;
    undefined field13627_0xb712;
    undefined field13628_0xb713;
    undefined field13629_0xb714;
    undefined field13630_0xb715;
    undefined field13631_0xb716;
    undefined field13632_0xb717;
    undefined field13633_0xb718;
    undefined field13634_0xb719;
    undefined field13635_0xb71a;
    undefined field13636_0xb71b;
    undefined field13637_0xb71c;
    undefined field13638_0xb71d;
    undefined field13639_0xb71e;
    undefined field13640_0xb71f;
    undefined field13641_0xb720;
    undefined field13642_0xb721;
    undefined field13643_0xb722;
    undefined field13644_0xb723;
    undefined field13645_0xb724;
    undefined field13646_0xb725;
    undefined field13647_0xb726;
    undefined field13648_0xb727;
    undefined field13649_0xb728;
    undefined field13650_0xb729;
    undefined field13651_0xb72a;
    undefined field13652_0xb72b;
    undefined field13653_0xb72c;
    undefined field13654_0xb72d;
    undefined field13655_0xb72e;
    undefined field13656_0xb72f;
    undefined field13657_0xb730;
    undefined field13658_0xb731;
    undefined field13659_0xb732;
    undefined field13660_0xb733;
    undefined field13661_0xb734;
    undefined field13662_0xb735;
    undefined field13663_0xb736;
    undefined field13664_0xb737;
    undefined field13665_0xb738;
    undefined field13666_0xb739;
    undefined field13667_0xb73a;
    undefined field13668_0xb73b;
    undefined field13669_0xb73c;
    undefined field13670_0xb73d;
    undefined field13671_0xb73e;
    undefined field13672_0xb73f;
    undefined field13673_0xb740;
    undefined field13674_0xb741;
    undefined field13675_0xb742;
    undefined field13676_0xb743;
    undefined field13677_0xb744;
    undefined field13678_0xb745;
    undefined field13679_0xb746;
    undefined field13680_0xb747;
    undefined field13681_0xb748;
    undefined field13682_0xb749;
    undefined field13683_0xb74a;
    undefined field13684_0xb74b;
    undefined field13685_0xb74c;
    undefined field13686_0xb74d;
    undefined field13687_0xb74e;
    undefined field13688_0xb74f;
    undefined field13689_0xb750;
    undefined field13690_0xb751;
    undefined field13691_0xb752;
    undefined field13692_0xb753;
    undefined field13693_0xb754;
    undefined field13694_0xb755;
    undefined field13695_0xb756;
    undefined field13696_0xb757;
    undefined field13697_0xb758;
    undefined field13698_0xb759;
    undefined field13699_0xb75a;
    undefined field13700_0xb75b;
    undefined field13701_0xb75c;
    undefined field13702_0xb75d;
    undefined field13703_0xb75e;
    undefined field13704_0xb75f;
    undefined field13705_0xb760;
    undefined field13706_0xb761;
    undefined field13707_0xb762;
    undefined field13708_0xb763;
    undefined field13709_0xb764;
    undefined field13710_0xb765;
    undefined field13711_0xb766;
    undefined field13712_0xb767;
    undefined field13713_0xb768;
    undefined field13714_0xb769;
    undefined field13715_0xb76a;
    undefined field13716_0xb76b;
    undefined field13717_0xb76c;
    undefined field13718_0xb76d;
    undefined field13719_0xb76e;
    undefined field13720_0xb76f;
    undefined field13721_0xb770;
    undefined field13722_0xb771;
    undefined field13723_0xb772;
    undefined field13724_0xb773;
    undefined field13725_0xb774;
    undefined field13726_0xb775;
    undefined field13727_0xb776;
    undefined field13728_0xb777;
    undefined field13729_0xb778;
    undefined field13730_0xb779;
    undefined field13731_0xb77a;
    undefined field13732_0xb77b;
    undefined field13733_0xb77c;
    undefined field13734_0xb77d;
    undefined field13735_0xb77e;
    undefined field13736_0xb77f;
    undefined field13737_0xb780;
    undefined field13738_0xb781;
    undefined field13739_0xb782;
    undefined field13740_0xb783;
    undefined field13741_0xb784;
    undefined field13742_0xb785;
    undefined field13743_0xb786;
    undefined field13744_0xb787;
    undefined field13745_0xb788;
    undefined field13746_0xb789;
    undefined field13747_0xb78a;
    undefined field13748_0xb78b;
    undefined field13749_0xb78c;
    undefined field13750_0xb78d;
    undefined field13751_0xb78e;
    undefined field13752_0xb78f;
    undefined field13753_0xb790;
    undefined field13754_0xb791;
    undefined field13755_0xb792;
    undefined field13756_0xb793;
    undefined field13757_0xb794;
    undefined field13758_0xb795;
    undefined field13759_0xb796;
    undefined field13760_0xb797;
    undefined field13761_0xb798;
    undefined field13762_0xb799;
    undefined field13763_0xb79a;
    undefined field13764_0xb79b;
    undefined field13765_0xb79c;
    undefined field13766_0xb79d;
    undefined field13767_0xb79e;
    undefined field13768_0xb79f;
    undefined field13769_0xb7a0;
    undefined field13770_0xb7a1;
    undefined field13771_0xb7a2;
    undefined field13772_0xb7a3;
    undefined field13773_0xb7a4;
    undefined field13774_0xb7a5;
    undefined field13775_0xb7a6;
    undefined field13776_0xb7a7;
    undefined field13777_0xb7a8;
    undefined field13778_0xb7a9;
    undefined field13779_0xb7aa;
    undefined field13780_0xb7ab;
    undefined field13781_0xb7ac;
    undefined field13782_0xb7ad;
    undefined field13783_0xb7ae;
    undefined field13784_0xb7af;
    undefined field13785_0xb7b0;
    undefined field13786_0xb7b1;
    undefined field13787_0xb7b2;
    undefined field13788_0xb7b3;
    undefined field13789_0xb7b4;
    undefined field13790_0xb7b5;
    undefined field13791_0xb7b6;
    undefined field13792_0xb7b7;
    undefined field13793_0xb7b8;
    undefined field13794_0xb7b9;
    undefined field13795_0xb7ba;
    undefined field13796_0xb7bb;
    undefined field13797_0xb7bc;
    undefined field13798_0xb7bd;
    undefined field13799_0xb7be;
    undefined field13800_0xb7bf;
    undefined field13801_0xb7c0;
    undefined field13802_0xb7c1;
    undefined field13803_0xb7c2;
    undefined field13804_0xb7c3;
    undefined field13805_0xb7c4;
    undefined field13806_0xb7c5;
    undefined field13807_0xb7c6;
    undefined field13808_0xb7c7;
    undefined field13809_0xb7c8;
    undefined field13810_0xb7c9;
    undefined field13811_0xb7ca;
    undefined field13812_0xb7cb;
    undefined field13813_0xb7cc;
    undefined field13814_0xb7cd;
    undefined field13815_0xb7ce;
    undefined field13816_0xb7cf;
    undefined field13817_0xb7d0;
    undefined field13818_0xb7d1;
    undefined field13819_0xb7d2;
    undefined field13820_0xb7d3;
    undefined field13821_0xb7d4;
    undefined field13822_0xb7d5;
    undefined field13823_0xb7d6;
    undefined field13824_0xb7d7;
    undefined field13825_0xb7d8;
    undefined field13826_0xb7d9;
    undefined field13827_0xb7da;
    undefined field13828_0xb7db;
    undefined field13829_0xb7dc;
    undefined field13830_0xb7dd;
    undefined field13831_0xb7de;
    undefined field13832_0xb7df;
    undefined field13833_0xb7e0;
    undefined field13834_0xb7e1;
    undefined field13835_0xb7e2;
    undefined field13836_0xb7e3;
    undefined field13837_0xb7e4;
    undefined field13838_0xb7e5;
    undefined field13839_0xb7e6;
    undefined field13840_0xb7e7;
    undefined field13841_0xb7e8;
    undefined field13842_0xb7e9;
    undefined field13843_0xb7ea;
    undefined field13844_0xb7eb;
    undefined field13845_0xb7ec;
    undefined field13846_0xb7ed;
    undefined field13847_0xb7ee;
    undefined field13848_0xb7ef;
    undefined field13849_0xb7f0;
    undefined field13850_0xb7f1;
    undefined field13851_0xb7f2;
    undefined field13852_0xb7f3;
    undefined field13853_0xb7f4;
    undefined field13854_0xb7f5;
    undefined field13855_0xb7f6;
    undefined field13856_0xb7f7;
    undefined field13857_0xb7f8;
    undefined field13858_0xb7f9;
    undefined field13859_0xb7fa;
    undefined field13860_0xb7fb;
    undefined field13861_0xb7fc;
    undefined field13862_0xb7fd;
    undefined field13863_0xb7fe;
    undefined field13864_0xb7ff;
    undefined field13865_0xb800;
    undefined field13866_0xb801;
    undefined field13867_0xb802;
    undefined field13868_0xb803;
    undefined field13869_0xb804;
    undefined field13870_0xb805;
    undefined field13871_0xb806;
    undefined field13872_0xb807;
    undefined field13873_0xb808;
    undefined field13874_0xb809;
    undefined field13875_0xb80a;
    undefined field13876_0xb80b;
    undefined field13877_0xb80c;
    undefined field13878_0xb80d;
    undefined field13879_0xb80e;
    undefined field13880_0xb80f;
    undefined field13881_0xb810;
    undefined field13882_0xb811;
    undefined field13883_0xb812;
    undefined field13884_0xb813;
    undefined field13885_0xb814;
    undefined field13886_0xb815;
    undefined field13887_0xb816;
    undefined field13888_0xb817;
    undefined field13889_0xb818;
    undefined field13890_0xb819;
    undefined field13891_0xb81a;
    undefined field13892_0xb81b;
    undefined field13893_0xb81c;
    undefined field13894_0xb81d;
    undefined field13895_0xb81e;
    undefined field13896_0xb81f;
    undefined field13897_0xb820;
    undefined field13898_0xb821;
    undefined field13899_0xb822;
    undefined field13900_0xb823;
    undefined field13901_0xb824;
    undefined field13902_0xb825;
    undefined field13903_0xb826;
    undefined field13904_0xb827;
    undefined field13905_0xb828;
    undefined field13906_0xb829;
    undefined field13907_0xb82a;
    undefined field13908_0xb82b;
    undefined field13909_0xb82c;
    undefined field13910_0xb82d;
    undefined field13911_0xb82e;
    undefined field13912_0xb82f;
    undefined field13913_0xb830;
    undefined field13914_0xb831;
    undefined field13915_0xb832;
    undefined field13916_0xb833;
    undefined field13917_0xb834;
    undefined field13918_0xb835;
    undefined field13919_0xb836;
    undefined field13920_0xb837;
    undefined field13921_0xb838;
    undefined field13922_0xb839;
    undefined field13923_0xb83a;
    undefined field13924_0xb83b;
    undefined field13925_0xb83c;
    undefined field13926_0xb83d;
    undefined field13927_0xb83e;
    undefined field13928_0xb83f;
    undefined field13929_0xb840;
    undefined field13930_0xb841;
    undefined field13931_0xb842;
    undefined field13932_0xb843;
    undefined field13933_0xb844;
    undefined field13934_0xb845;
    undefined field13935_0xb846;
    undefined field13936_0xb847;
    undefined field13937_0xb848;
    undefined field13938_0xb849;
    undefined field13939_0xb84a;
    undefined field13940_0xb84b;
    undefined field13941_0xb84c;
    undefined field13942_0xb84d;
    undefined field13943_0xb84e;
    undefined field13944_0xb84f;
    undefined field13945_0xb850;
    undefined field13946_0xb851;
    undefined field13947_0xb852;
    undefined field13948_0xb853;
    undefined field13949_0xb854;
    undefined field13950_0xb855;
    undefined field13951_0xb856;
    undefined field13952_0xb857;
    undefined field13953_0xb858;
    undefined field13954_0xb859;
    undefined field13955_0xb85a;
    undefined field13956_0xb85b;
    undefined field13957_0xb85c;
    undefined field13958_0xb85d;
    undefined field13959_0xb85e;
    undefined field13960_0xb85f;
    undefined field13961_0xb860;
    undefined field13962_0xb861;
    undefined field13963_0xb862;
    undefined field13964_0xb863;
    undefined field13965_0xb864;
    undefined field13966_0xb865;
    undefined field13967_0xb866;
    undefined field13968_0xb867;
    undefined field13969_0xb868;
    undefined field13970_0xb869;
    undefined field13971_0xb86a;
    undefined field13972_0xb86b;
    undefined field13973_0xb86c;
    undefined field13974_0xb86d;
    undefined field13975_0xb86e;
    undefined field13976_0xb86f;
    undefined field13977_0xb870;
    undefined field13978_0xb871;
    undefined field13979_0xb872;
    undefined field13980_0xb873;
    undefined field13981_0xb874;
    undefined field13982_0xb875;
    undefined field13983_0xb876;
    undefined field13984_0xb877;
    undefined field13985_0xb878;
    undefined field13986_0xb879;
    undefined field13987_0xb87a;
    undefined field13988_0xb87b;
    undefined field13989_0xb87c;
    undefined field13990_0xb87d;
    undefined field13991_0xb87e;
    undefined field13992_0xb87f;
    undefined field13993_0xb880;
    undefined field13994_0xb881;
    undefined field13995_0xb882;
    undefined field13996_0xb883;
    undefined field13997_0xb884;
    undefined field13998_0xb885;
    undefined field13999_0xb886;
    undefined field14000_0xb887;
    undefined field14001_0xb888;
    undefined field14002_0xb889;
    undefined field14003_0xb88a;
    undefined field14004_0xb88b;
    undefined field14005_0xb88c;
    undefined field14006_0xb88d;
    undefined field14007_0xb88e;
    undefined field14008_0xb88f;
    undefined field14009_0xb890;
    undefined field14010_0xb891;
    undefined field14011_0xb892;
    undefined field14012_0xb893;
    undefined field14013_0xb894;
    undefined field14014_0xb895;
    undefined field14015_0xb896;
    undefined field14016_0xb897;
    undefined field14017_0xb898;
    undefined field14018_0xb899;
    undefined field14019_0xb89a;
    undefined field14020_0xb89b;
    undefined field14021_0xb89c;
    undefined field14022_0xb89d;
    undefined field14023_0xb89e;
    undefined field14024_0xb89f;
    undefined field14025_0xb8a0;
    undefined field14026_0xb8a1;
    undefined field14027_0xb8a2;
    undefined field14028_0xb8a3;
    undefined field14029_0xb8a4;
    undefined field14030_0xb8a5;
    undefined field14031_0xb8a6;
    undefined field14032_0xb8a7;
    undefined field14033_0xb8a8;
    undefined field14034_0xb8a9;
    undefined field14035_0xb8aa;
    undefined field14036_0xb8ab;
    undefined field14037_0xb8ac;
    undefined field14038_0xb8ad;
    undefined field14039_0xb8ae;
    undefined field14040_0xb8af;
    undefined field14041_0xb8b0;
    undefined field14042_0xb8b1;
    undefined field14043_0xb8b2;
    undefined field14044_0xb8b3;
    undefined field14045_0xb8b4;
    undefined field14046_0xb8b5;
    undefined field14047_0xb8b6;
    undefined field14048_0xb8b7;
    undefined field14049_0xb8b8;
    undefined field14050_0xb8b9;
    undefined field14051_0xb8ba;
    undefined field14052_0xb8bb;
    undefined field14053_0xb8bc;
    undefined field14054_0xb8bd;
    undefined field14055_0xb8be;
    undefined field14056_0xb8bf;
    undefined field14057_0xb8c0;
    undefined field14058_0xb8c1;
    undefined field14059_0xb8c2;
    undefined field14060_0xb8c3;
    undefined field14061_0xb8c4;
    undefined field14062_0xb8c5;
    undefined field14063_0xb8c6;
    undefined field14064_0xb8c7;
    undefined field14065_0xb8c8;
    undefined field14066_0xb8c9;
    undefined field14067_0xb8ca;
    undefined field14068_0xb8cb;
    undefined field14069_0xb8cc;
    undefined field14070_0xb8cd;
    undefined field14071_0xb8ce;
    undefined field14072_0xb8cf;
    undefined field14073_0xb8d0;
    undefined field14074_0xb8d1;
    undefined field14075_0xb8d2;
    undefined field14076_0xb8d3;
    undefined field14077_0xb8d4;
    undefined field14078_0xb8d5;
    undefined field14079_0xb8d6;
    undefined field14080_0xb8d7;
    undefined field14081_0xb8d8;
    undefined field14082_0xb8d9;
    undefined field14083_0xb8da;
    undefined field14084_0xb8db;
    undefined field14085_0xb8dc;
    undefined field14086_0xb8dd;
    undefined field14087_0xb8de;
    undefined field14088_0xb8df;
    undefined field14089_0xb8e0;
    undefined field14090_0xb8e1;
    undefined field14091_0xb8e2;
    undefined field14092_0xb8e3;
    undefined field14093_0xb8e4;
    undefined field14094_0xb8e5;
    undefined field14095_0xb8e6;
    undefined field14096_0xb8e7;
    undefined field14097_0xb8e8;
    undefined field14098_0xb8e9;
    undefined field14099_0xb8ea;
    undefined field14100_0xb8eb;
    undefined field14101_0xb8ec;
    undefined field14102_0xb8ed;
    undefined field14103_0xb8ee;
    undefined field14104_0xb8ef;
    undefined field14105_0xb8f0;
    undefined field14106_0xb8f1;
    undefined field14107_0xb8f2;
    undefined field14108_0xb8f3;
    undefined field14109_0xb8f4;
    undefined field14110_0xb8f5;
    undefined field14111_0xb8f6;
    undefined field14112_0xb8f7;
    undefined field14113_0xb8f8;
    undefined field14114_0xb8f9;
    undefined field14115_0xb8fa;
    undefined field14116_0xb8fb;
    undefined field14117_0xb8fc;
    undefined field14118_0xb8fd;
    undefined field14119_0xb8fe;
    undefined field14120_0xb8ff;
    undefined field14121_0xb900;
    undefined field14122_0xb901;
    undefined field14123_0xb902;
    undefined field14124_0xb903;
    undefined field14125_0xb904;
    undefined field14126_0xb905;
    undefined field14127_0xb906;
    undefined field14128_0xb907;
    undefined field14129_0xb908;
    undefined field14130_0xb909;
    undefined field14131_0xb90a;
    undefined field14132_0xb90b;
    undefined field14133_0xb90c;
    undefined field14134_0xb90d;
    undefined field14135_0xb90e;
    undefined field14136_0xb90f;
    undefined field14137_0xb910;
    undefined field14138_0xb911;
    undefined field14139_0xb912;
    undefined field14140_0xb913;
    undefined field14141_0xb914;
    undefined field14142_0xb915;
    undefined field14143_0xb916;
    undefined field14144_0xb917;
    undefined field14145_0xb918;
    undefined field14146_0xb919;
    undefined field14147_0xb91a;
    undefined field14148_0xb91b;
    undefined field14149_0xb91c;
    undefined field14150_0xb91d;
    undefined field14151_0xb91e;
    undefined field14152_0xb91f;
    undefined field14153_0xb920;
    undefined field14154_0xb921;
    undefined field14155_0xb922;
    undefined field14156_0xb923;
    undefined field14157_0xb924;
    undefined field14158_0xb925;
    undefined field14159_0xb926;
    undefined field14160_0xb927;
    undefined field14161_0xb928;
    undefined field14162_0xb929;
    undefined field14163_0xb92a;
    undefined field14164_0xb92b;
    undefined field14165_0xb92c;
    undefined field14166_0xb92d;
    undefined field14167_0xb92e;
    undefined field14168_0xb92f;
    undefined field14169_0xb930;
    undefined field14170_0xb931;
    undefined field14171_0xb932;
    undefined field14172_0xb933;
    undefined field14173_0xb934;
    undefined field14174_0xb935;
    undefined field14175_0xb936;
    undefined field14176_0xb937;
    undefined field14177_0xb938;
    undefined field14178_0xb939;
    undefined field14179_0xb93a;
    undefined field14180_0xb93b;
    undefined field14181_0xb93c;
    undefined field14182_0xb93d;
    undefined field14183_0xb93e;
    undefined field14184_0xb93f;
    undefined field14185_0xb940;
    undefined field14186_0xb941;
    undefined field14187_0xb942;
    undefined field14188_0xb943;
    undefined field14189_0xb944;
    undefined field14190_0xb945;
    undefined field14191_0xb946;
    undefined field14192_0xb947;
    undefined field14193_0xb948;
    undefined field14194_0xb949;
    undefined field14195_0xb94a;
    undefined field14196_0xb94b;
    undefined field14197_0xb94c;
    undefined field14198_0xb94d;
    undefined field14199_0xb94e;
    undefined field14200_0xb94f;
    undefined field14201_0xb950;
    undefined field14202_0xb951;
    undefined field14203_0xb952;
    undefined field14204_0xb953;
    undefined field14205_0xb954;
    undefined field14206_0xb955;
    undefined field14207_0xb956;
    undefined field14208_0xb957;
    undefined field14209_0xb958;
    undefined field14210_0xb959;
    undefined field14211_0xb95a;
    undefined field14212_0xb95b;
    undefined field14213_0xb95c;
    undefined field14214_0xb95d;
    undefined field14215_0xb95e;
    undefined field14216_0xb95f;
    undefined field14217_0xb960;
    undefined field14218_0xb961;
    undefined field14219_0xb962;
    undefined field14220_0xb963;
    undefined field14221_0xb964;
    undefined field14222_0xb965;
    undefined field14223_0xb966;
    undefined field14224_0xb967;
    undefined field14225_0xb968;
    undefined field14226_0xb969;
    undefined field14227_0xb96a;
    undefined field14228_0xb96b;
    undefined field14229_0xb96c;
    undefined field14230_0xb96d;
    undefined field14231_0xb96e;
    undefined field14232_0xb96f;
    undefined field14233_0xb970;
    undefined field14234_0xb971;
    undefined field14235_0xb972;
    undefined field14236_0xb973;
    undefined field14237_0xb974;
    undefined field14238_0xb975;
    undefined field14239_0xb976;
    undefined field14240_0xb977;
    undefined field14241_0xb978;
    undefined field14242_0xb979;
    undefined field14243_0xb97a;
    undefined field14244_0xb97b;
    undefined field14245_0xb97c;
    undefined field14246_0xb97d;
    undefined field14247_0xb97e;
    undefined field14248_0xb97f;
    undefined field14249_0xb980;
    undefined field14250_0xb981;
    undefined field14251_0xb982;
    undefined field14252_0xb983;
    undefined field14253_0xb984;
    undefined field14254_0xb985;
    undefined field14255_0xb986;
    undefined field14256_0xb987;
    undefined field14257_0xb988;
    undefined field14258_0xb989;
    undefined field14259_0xb98a;
    undefined field14260_0xb98b;
    undefined field14261_0xb98c;
    undefined field14262_0xb98d;
    undefined field14263_0xb98e;
    undefined field14264_0xb98f;
    undefined field14265_0xb990;
    undefined field14266_0xb991;
    undefined field14267_0xb992;
    undefined field14268_0xb993;
    undefined field14269_0xb994;
    undefined field14270_0xb995;
    undefined field14271_0xb996;
    undefined field14272_0xb997;
    undefined field14273_0xb998;
    undefined field14274_0xb999;
    undefined field14275_0xb99a;
    undefined field14276_0xb99b;
    undefined field14277_0xb99c;
    undefined field14278_0xb99d;
    undefined field14279_0xb99e;
    undefined field14280_0xb99f;
    undefined field14281_0xb9a0;
    undefined field14282_0xb9a1;
    undefined field14283_0xb9a2;
    undefined field14284_0xb9a3;
    undefined field14285_0xb9a4;
    undefined field14286_0xb9a5;
    undefined field14287_0xb9a6;
    undefined field14288_0xb9a7;
    undefined field14289_0xb9a8;
    undefined field14290_0xb9a9;
    undefined field14291_0xb9aa;
    undefined field14292_0xb9ab;
    undefined field14293_0xb9ac;
    undefined field14294_0xb9ad;
    undefined field14295_0xb9ae;
    undefined field14296_0xb9af;
    undefined field14297_0xb9b0;
    undefined field14298_0xb9b1;
    undefined field14299_0xb9b2;
    undefined field14300_0xb9b3;
    undefined field14301_0xb9b4;
    undefined field14302_0xb9b5;
    undefined field14303_0xb9b6;
    undefined field14304_0xb9b7;
    undefined field14305_0xb9b8;
    undefined field14306_0xb9b9;
    undefined field14307_0xb9ba;
    undefined field14308_0xb9bb;
    undefined field14309_0xb9bc;
    undefined field14310_0xb9bd;
    undefined field14311_0xb9be;
    undefined field14312_0xb9bf;
    undefined field14313_0xb9c0;
    undefined field14314_0xb9c1;
    undefined field14315_0xb9c2;
    undefined field14316_0xb9c3;
    undefined field14317_0xb9c4;
    undefined field14318_0xb9c5;
    undefined field14319_0xb9c6;
    undefined field14320_0xb9c7;
    undefined field14321_0xb9c8;
    undefined field14322_0xb9c9;
    undefined field14323_0xb9ca;
    undefined field14324_0xb9cb;
    undefined field14325_0xb9cc;
    undefined field14326_0xb9cd;
    undefined field14327_0xb9ce;
    undefined field14328_0xb9cf;
    undefined field14329_0xb9d0;
    undefined field14330_0xb9d1;
    undefined field14331_0xb9d2;
    undefined field14332_0xb9d3;
    undefined field14333_0xb9d4;
    undefined field14334_0xb9d5;
    undefined field14335_0xb9d6;
    undefined field14336_0xb9d7;
    undefined field14337_0xb9d8;
    undefined field14338_0xb9d9;
    undefined field14339_0xb9da;
    undefined field14340_0xb9db;
    undefined field14341_0xb9dc;
    undefined field14342_0xb9dd;
    undefined field14343_0xb9de;
    undefined field14344_0xb9df;
    undefined field14345_0xb9e0;
    undefined field14346_0xb9e1;
    undefined field14347_0xb9e2;
    undefined field14348_0xb9e3;
    undefined field14349_0xb9e4;
    undefined field14350_0xb9e5;
    undefined field14351_0xb9e6;
    undefined field14352_0xb9e7;
    undefined field14353_0xb9e8;
    undefined field14354_0xb9e9;
    undefined field14355_0xb9ea;
    undefined field14356_0xb9eb;
    undefined field14357_0xb9ec;
    undefined field14358_0xb9ed;
    undefined field14359_0xb9ee;
    undefined field14360_0xb9ef;
    undefined field14361_0xb9f0;
    undefined field14362_0xb9f1;
    undefined field14363_0xb9f2;
    undefined field14364_0xb9f3;
    undefined field14365_0xb9f4;
    undefined field14366_0xb9f5;
    undefined field14367_0xb9f6;
    undefined field14368_0xb9f7;
    undefined field14369_0xb9f8;
    undefined field14370_0xb9f9;
    undefined field14371_0xb9fa;
    undefined field14372_0xb9fb;
    undefined field14373_0xb9fc;
    undefined field14374_0xb9fd;
    undefined field14375_0xb9fe;
    undefined field14376_0xb9ff;
    undefined field14377_0xba00;
    undefined field14378_0xba01;
    undefined field14379_0xba02;
    undefined field14380_0xba03;
    undefined field14381_0xba04;
    undefined field14382_0xba05;
    undefined field14383_0xba06;
    undefined field14384_0xba07;
    undefined field14385_0xba08;
    undefined field14386_0xba09;
    undefined field14387_0xba0a;
    undefined field14388_0xba0b;
    undefined field14389_0xba0c;
    undefined field14390_0xba0d;
    undefined field14391_0xba0e;
    undefined field14392_0xba0f;
    undefined field14393_0xba10;
    undefined field14394_0xba11;
    undefined field14395_0xba12;
    undefined field14396_0xba13;
    undefined field14397_0xba14;
    undefined field14398_0xba15;
    undefined field14399_0xba16;
    undefined field14400_0xba17;
    undefined field14401_0xba18;
    undefined field14402_0xba19;
    undefined field14403_0xba1a;
    undefined field14404_0xba1b;
    undefined field14405_0xba1c;
    undefined field14406_0xba1d;
    undefined field14407_0xba1e;
    undefined field14408_0xba1f;
    undefined field14409_0xba20;
    undefined field14410_0xba21;
    undefined field14411_0xba22;
    undefined field14412_0xba23;
    undefined field14413_0xba24;
    undefined field14414_0xba25;
    undefined field14415_0xba26;
    undefined field14416_0xba27;
    undefined field14417_0xba28;
    undefined field14418_0xba29;
    undefined field14419_0xba2a;
    undefined field14420_0xba2b;
    undefined field14421_0xba2c;
    undefined field14422_0xba2d;
    undefined field14423_0xba2e;
    undefined field14424_0xba2f;
    undefined field14425_0xba30;
    undefined field14426_0xba31;
    undefined field14427_0xba32;
    undefined field14428_0xba33;
    undefined field14429_0xba34;
    undefined field14430_0xba35;
    undefined field14431_0xba36;
    undefined field14432_0xba37;
    undefined field14433_0xba38;
    undefined field14434_0xba39;
    undefined field14435_0xba3a;
    undefined field14436_0xba3b;
    undefined field14437_0xba3c;
    undefined field14438_0xba3d;
    undefined field14439_0xba3e;
    undefined field14440_0xba3f;
    undefined field14441_0xba40;
    undefined field14442_0xba41;
    undefined field14443_0xba42;
    undefined field14444_0xba43;
    undefined field14445_0xba44;
    undefined field14446_0xba45;
    undefined field14447_0xba46;
    undefined field14448_0xba47;
    undefined field14449_0xba48;
    undefined field14450_0xba49;
    undefined field14451_0xba4a;
    undefined field14452_0xba4b;
    undefined field14453_0xba4c;
    undefined field14454_0xba4d;
    undefined field14455_0xba4e;
    undefined field14456_0xba4f;
    undefined field14457_0xba50;
    undefined field14458_0xba51;
    undefined field14459_0xba52;
    undefined field14460_0xba53;
    undefined field14461_0xba54;
    undefined field14462_0xba55;
    undefined field14463_0xba56;
    undefined field14464_0xba57;
    undefined field14465_0xba58;
    undefined field14466_0xba59;
    undefined field14467_0xba5a;
    undefined field14468_0xba5b;
    undefined field14469_0xba5c;
    undefined field14470_0xba5d;
    undefined field14471_0xba5e;
    undefined field14472_0xba5f;
    undefined field14473_0xba60;
    undefined field14474_0xba61;
    undefined field14475_0xba62;
    undefined field14476_0xba63;
    undefined field14477_0xba64;
    undefined field14478_0xba65;
    undefined field14479_0xba66;
    undefined field14480_0xba67;
    undefined field14481_0xba68;
    undefined field14482_0xba69;
    undefined field14483_0xba6a;
    undefined field14484_0xba6b;
    undefined field14485_0xba6c;
    undefined field14486_0xba6d;
    undefined field14487_0xba6e;
    undefined field14488_0xba6f;
    undefined field14489_0xba70;
    undefined field14490_0xba71;
    undefined field14491_0xba72;
    undefined field14492_0xba73;
    undefined field14493_0xba74;
    undefined field14494_0xba75;
    undefined field14495_0xba76;
    undefined field14496_0xba77;
    undefined field14497_0xba78;
    undefined field14498_0xba79;
    undefined field14499_0xba7a;
    undefined field14500_0xba7b;
    undefined field14501_0xba7c;
    undefined field14502_0xba7d;
    undefined field14503_0xba7e;
    undefined field14504_0xba7f;
    undefined field14505_0xba80;
    undefined field14506_0xba81;
    undefined field14507_0xba82;
    undefined field14508_0xba83;
    undefined field14509_0xba84;
    undefined field14510_0xba85;
    undefined field14511_0xba86;
    undefined field14512_0xba87;
    undefined field14513_0xba88;
    undefined field14514_0xba89;
    undefined field14515_0xba8a;
    undefined field14516_0xba8b;
    undefined field14517_0xba8c;
    undefined field14518_0xba8d;
    undefined field14519_0xba8e;
    undefined field14520_0xba8f;
    undefined field14521_0xba90;
    undefined field14522_0xba91;
    undefined field14523_0xba92;
    undefined field14524_0xba93;
    undefined field14525_0xba94;
    undefined field14526_0xba95;
    undefined field14527_0xba96;
    undefined field14528_0xba97;
    undefined field14529_0xba98;
    undefined field14530_0xba99;
    undefined field14531_0xba9a;
    undefined field14532_0xba9b;
    undefined field14533_0xba9c;
    undefined field14534_0xba9d;
    undefined field14535_0xba9e;
    undefined field14536_0xba9f;
    undefined field14537_0xbaa0;
    undefined field14538_0xbaa1;
    undefined field14539_0xbaa2;
    undefined field14540_0xbaa3;
    undefined field14541_0xbaa4;
    undefined field14542_0xbaa5;
    undefined field14543_0xbaa6;
    undefined field14544_0xbaa7;
    undefined field14545_0xbaa8;
    undefined field14546_0xbaa9;
    undefined field14547_0xbaaa;
    undefined field14548_0xbaab;
    undefined field14549_0xbaac;
    undefined field14550_0xbaad;
    undefined field14551_0xbaae;
    undefined field14552_0xbaaf;
    undefined field14553_0xbab0;
    undefined field14554_0xbab1;
    undefined field14555_0xbab2;
    undefined field14556_0xbab3;
    undefined field14557_0xbab4;
    undefined field14558_0xbab5;
    undefined field14559_0xbab6;
    undefined field14560_0xbab7;
    undefined field14561_0xbab8;
    undefined field14562_0xbab9;
    undefined field14563_0xbaba;
    undefined field14564_0xbabb;
    undefined field14565_0xbabc;
    undefined field14566_0xbabd;
    undefined field14567_0xbabe;
    undefined field14568_0xbabf;
    undefined field14569_0xbac0;
    undefined field14570_0xbac1;
    undefined field14571_0xbac2;
    undefined field14572_0xbac3;
    undefined field14573_0xbac4;
    undefined field14574_0xbac5;
    undefined field14575_0xbac6;
    undefined field14576_0xbac7;
    undefined field14577_0xbac8;
    undefined field14578_0xbac9;
    undefined field14579_0xbaca;
    undefined field14580_0xbacb;
    undefined field14581_0xbacc;
    undefined field14582_0xbacd;
    undefined field14583_0xbace;
    undefined field14584_0xbacf;
    undefined field14585_0xbad0;
    undefined field14586_0xbad1;
    undefined field14587_0xbad2;
    undefined field14588_0xbad3;
    undefined field14589_0xbad4;
    undefined field14590_0xbad5;
    undefined field14591_0xbad6;
    undefined field14592_0xbad7;
    undefined field14593_0xbad8;
    undefined field14594_0xbad9;
    undefined field14595_0xbada;
    undefined field14596_0xbadb;
    undefined field14597_0xbadc;
    undefined field14598_0xbadd;
    undefined field14599_0xbade;
    undefined field14600_0xbadf;
    undefined field14601_0xbae0;
    undefined field14602_0xbae1;
    undefined field14603_0xbae2;
    undefined field14604_0xbae3;
    undefined field14605_0xbae4;
    undefined field14606_0xbae5;
    undefined field14607_0xbae6;
    undefined field14608_0xbae7;
    undefined field14609_0xbae8;
    undefined field14610_0xbae9;
    undefined field14611_0xbaea;
    undefined field14612_0xbaeb;
    undefined field14613_0xbaec;
    undefined field14614_0xbaed;
    undefined field14615_0xbaee;
    undefined field14616_0xbaef;
    undefined field14617_0xbaf0;
    undefined field14618_0xbaf1;
    undefined field14619_0xbaf2;
    undefined field14620_0xbaf3;
    undefined field14621_0xbaf4;
    undefined field14622_0xbaf5;
    undefined field14623_0xbaf6;
    undefined field14624_0xbaf7;
    undefined field14625_0xbaf8;
    undefined field14626_0xbaf9;
    undefined field14627_0xbafa;
    undefined field14628_0xbafb;
    undefined field14629_0xbafc;
    undefined field14630_0xbafd;
    undefined field14631_0xbafe;
    undefined field14632_0xbaff;
    undefined field14633_0xbb00;
    undefined field14634_0xbb01;
    undefined field14635_0xbb02;
    undefined field14636_0xbb03;
    undefined field14637_0xbb04;
    undefined field14638_0xbb05;
    undefined field14639_0xbb06;
    undefined field14640_0xbb07;
    undefined field14641_0xbb08;
    undefined field14642_0xbb09;
    undefined field14643_0xbb0a;
    undefined field14644_0xbb0b;
    undefined field14645_0xbb0c;
    undefined field14646_0xbb0d;
    undefined field14647_0xbb0e;
    undefined field14648_0xbb0f;
    undefined field14649_0xbb10;
    undefined field14650_0xbb11;
    undefined field14651_0xbb12;
    undefined field14652_0xbb13;
    undefined field14653_0xbb14;
    undefined field14654_0xbb15;
    undefined field14655_0xbb16;
    undefined field14656_0xbb17;
    undefined field14657_0xbb18;
    undefined field14658_0xbb19;
    undefined field14659_0xbb1a;
    undefined field14660_0xbb1b;
    undefined field14661_0xbb1c;
    undefined field14662_0xbb1d;
    undefined field14663_0xbb1e;
    undefined field14664_0xbb1f;
    undefined field14665_0xbb20;
    undefined field14666_0xbb21;
    undefined field14667_0xbb22;
    undefined field14668_0xbb23;
    undefined field14669_0xbb24;
    undefined field14670_0xbb25;
    undefined field14671_0xbb26;
    undefined field14672_0xbb27;
    undefined field14673_0xbb28;
    undefined field14674_0xbb29;
    undefined field14675_0xbb2a;
    undefined field14676_0xbb2b;
    undefined field14677_0xbb2c;
    undefined field14678_0xbb2d;
    undefined field14679_0xbb2e;
    undefined field14680_0xbb2f;
    undefined field14681_0xbb30;
    undefined field14682_0xbb31;
    undefined field14683_0xbb32;
    undefined field14684_0xbb33;
    undefined field14685_0xbb34;
    undefined field14686_0xbb35;
    undefined field14687_0xbb36;
    undefined field14688_0xbb37;
    undefined field14689_0xbb38;
    undefined field14690_0xbb39;
    undefined field14691_0xbb3a;
    undefined field14692_0xbb3b;
    undefined field14693_0xbb3c;
    undefined field14694_0xbb3d;
    undefined field14695_0xbb3e;
    undefined field14696_0xbb3f;
    undefined field14697_0xbb40;
    undefined field14698_0xbb41;
    undefined field14699_0xbb42;
    undefined field14700_0xbb43;
    undefined field14701_0xbb44;
    undefined field14702_0xbb45;
    undefined field14703_0xbb46;
    undefined field14704_0xbb47;
    undefined field14705_0xbb48;
    undefined field14706_0xbb49;
    undefined field14707_0xbb4a;
    undefined field14708_0xbb4b;
    undefined field14709_0xbb4c;
    undefined field14710_0xbb4d;
    undefined field14711_0xbb4e;
    undefined field14712_0xbb4f;
    undefined field14713_0xbb50;
    undefined field14714_0xbb51;
    undefined field14715_0xbb52;
    undefined field14716_0xbb53;
    undefined field14717_0xbb54;
    undefined field14718_0xbb55;
    undefined field14719_0xbb56;
    undefined field14720_0xbb57;
    undefined field14721_0xbb58;
    undefined field14722_0xbb59;
    undefined field14723_0xbb5a;
    undefined field14724_0xbb5b;
    undefined field14725_0xbb5c;
    undefined field14726_0xbb5d;
    undefined field14727_0xbb5e;
    undefined field14728_0xbb5f;
    undefined field14729_0xbb60;
    undefined field14730_0xbb61;
    undefined field14731_0xbb62;
    undefined field14732_0xbb63;
    undefined field14733_0xbb64;
    undefined field14734_0xbb65;
    undefined field14735_0xbb66;
    undefined field14736_0xbb67;
    undefined field14737_0xbb68;
    undefined field14738_0xbb69;
    undefined field14739_0xbb6a;
    undefined field14740_0xbb6b;
    undefined field14741_0xbb6c;
    undefined field14742_0xbb6d;
    undefined field14743_0xbb6e;
    undefined field14744_0xbb6f;
    undefined field14745_0xbb70;
    undefined field14746_0xbb71;
    undefined field14747_0xbb72;
    undefined field14748_0xbb73;
    undefined field14749_0xbb74;
    undefined field14750_0xbb75;
    undefined field14751_0xbb76;
    undefined field14752_0xbb77;
    undefined field14753_0xbb78;
    undefined field14754_0xbb79;
    undefined field14755_0xbb7a;
    undefined field14756_0xbb7b;
    undefined field14757_0xbb7c;
    undefined field14758_0xbb7d;
    undefined field14759_0xbb7e;
    undefined field14760_0xbb7f;
    undefined field14761_0xbb80;
    undefined field14762_0xbb81;
    undefined field14763_0xbb82;
    undefined field14764_0xbb83;
    undefined field14765_0xbb84;
    undefined field14766_0xbb85;
    undefined field14767_0xbb86;
    undefined field14768_0xbb87;
    undefined field14769_0xbb88;
    undefined field14770_0xbb89;
    undefined field14771_0xbb8a;
    undefined field14772_0xbb8b;
    undefined field14773_0xbb8c;
    undefined field14774_0xbb8d;
    undefined field14775_0xbb8e;
    undefined field14776_0xbb8f;
    undefined field14777_0xbb90;
    undefined field14778_0xbb91;
    undefined field14779_0xbb92;
    undefined field14780_0xbb93;
    undefined field14781_0xbb94;
    undefined field14782_0xbb95;
    undefined field14783_0xbb96;
    undefined field14784_0xbb97;
    undefined field14785_0xbb98;
    undefined field14786_0xbb99;
    undefined field14787_0xbb9a;
    undefined field14788_0xbb9b;
    undefined field14789_0xbb9c;
    undefined field14790_0xbb9d;
    undefined field14791_0xbb9e;
    undefined field14792_0xbb9f;
    undefined field14793_0xbba0;
    undefined field14794_0xbba1;
    undefined field14795_0xbba2;
    undefined field14796_0xbba3;
    undefined field14797_0xbba4;
    undefined field14798_0xbba5;
    undefined field14799_0xbba6;
    undefined field14800_0xbba7;
    undefined field14801_0xbba8;
    undefined field14802_0xbba9;
    undefined field14803_0xbbaa;
    undefined field14804_0xbbab;
    undefined field14805_0xbbac;
    undefined field14806_0xbbad;
    undefined field14807_0xbbae;
    undefined field14808_0xbbaf;
    undefined field14809_0xbbb0;
    undefined field14810_0xbbb1;
    undefined field14811_0xbbb2;
    undefined field14812_0xbbb3;
    undefined field14813_0xbbb4;
    undefined field14814_0xbbb5;
    undefined field14815_0xbbb6;
    undefined field14816_0xbbb7;
    undefined field14817_0xbbb8;
    undefined field14818_0xbbb9;
    undefined field14819_0xbbba;
    undefined field14820_0xbbbb;
    undefined field14821_0xbbbc;
    undefined field14822_0xbbbd;
    undefined field14823_0xbbbe;
    undefined field14824_0xbbbf;
    undefined field14825_0xbbc0;
    undefined field14826_0xbbc1;
    undefined field14827_0xbbc2;
    undefined field14828_0xbbc3;
    undefined field14829_0xbbc4;
    undefined field14830_0xbbc5;
    undefined field14831_0xbbc6;
    undefined field14832_0xbbc7;
    undefined field14833_0xbbc8;
    undefined field14834_0xbbc9;
    undefined field14835_0xbbca;
    undefined field14836_0xbbcb;
    undefined field14837_0xbbcc;
    undefined field14838_0xbbcd;
    undefined field14839_0xbbce;
    undefined field14840_0xbbcf;
    undefined field14841_0xbbd0;
    undefined field14842_0xbbd1;
    undefined field14843_0xbbd2;
    undefined field14844_0xbbd3;
    undefined field14845_0xbbd4;
    undefined field14846_0xbbd5;
    undefined field14847_0xbbd6;
    undefined field14848_0xbbd7;
    undefined field14849_0xbbd8;
    undefined field14850_0xbbd9;
    undefined field14851_0xbbda;
    undefined field14852_0xbbdb;
    undefined field14853_0xbbdc;
    undefined field14854_0xbbdd;
    undefined field14855_0xbbde;
    undefined field14856_0xbbdf;
    undefined field14857_0xbbe0;
    undefined field14858_0xbbe1;
    undefined field14859_0xbbe2;
    undefined field14860_0xbbe3;
    undefined field14861_0xbbe4;
    undefined field14862_0xbbe5;
    undefined field14863_0xbbe6;
    undefined field14864_0xbbe7;
    undefined field14865_0xbbe8;
    undefined field14866_0xbbe9;
    undefined field14867_0xbbea;
    undefined field14868_0xbbeb;
    undefined field14869_0xbbec;
    undefined field14870_0xbbed;
    undefined field14871_0xbbee;
    undefined field14872_0xbbef;
    undefined field14873_0xbbf0;
    undefined field14874_0xbbf1;
    undefined field14875_0xbbf2;
    undefined field14876_0xbbf3;
    undefined field14877_0xbbf4;
    undefined field14878_0xbbf5;
    undefined field14879_0xbbf6;
    undefined field14880_0xbbf7;
    undefined field14881_0xbbf8;
    undefined field14882_0xbbf9;
    undefined field14883_0xbbfa;
    undefined field14884_0xbbfb;
    undefined field14885_0xbbfc;
    undefined field14886_0xbbfd;
    undefined field14887_0xbbfe;
    undefined field14888_0xbbff;
    undefined field14889_0xbc00;
    undefined field14890_0xbc01;
    undefined field14891_0xbc02;
    undefined field14892_0xbc03;
    undefined field14893_0xbc04;
    undefined field14894_0xbc05;
    undefined field14895_0xbc06;
    undefined field14896_0xbc07;
    undefined field14897_0xbc08;
    undefined field14898_0xbc09;
    undefined field14899_0xbc0a;
    undefined field14900_0xbc0b;
    undefined field14901_0xbc0c;
    undefined field14902_0xbc0d;
    undefined field14903_0xbc0e;
    undefined field14904_0xbc0f;
    undefined field14905_0xbc10;
    undefined field14906_0xbc11;
    undefined field14907_0xbc12;
    undefined field14908_0xbc13;
    undefined field14909_0xbc14;
    undefined field14910_0xbc15;
    undefined field14911_0xbc16;
    undefined field14912_0xbc17;
    undefined field14913_0xbc18;
    undefined field14914_0xbc19;
    undefined field14915_0xbc1a;
    undefined field14916_0xbc1b;
    undefined field14917_0xbc1c;
    undefined field14918_0xbc1d;
    undefined field14919_0xbc1e;
    undefined field14920_0xbc1f;
    undefined field14921_0xbc20;
    undefined field14922_0xbc21;
    undefined field14923_0xbc22;
    undefined field14924_0xbc23;
    undefined field14925_0xbc24;
    undefined field14926_0xbc25;
    undefined field14927_0xbc26;
    undefined field14928_0xbc27;
    undefined field14929_0xbc28;
    undefined field14930_0xbc29;
    undefined field14931_0xbc2a;
    undefined field14932_0xbc2b;
    undefined field14933_0xbc2c;
    undefined field14934_0xbc2d;
    undefined field14935_0xbc2e;
    undefined field14936_0xbc2f;
    undefined field14937_0xbc30;
    undefined field14938_0xbc31;
    undefined field14939_0xbc32;
    undefined field14940_0xbc33;
    undefined field14941_0xbc34;
    undefined field14942_0xbc35;
    undefined field14943_0xbc36;
    undefined field14944_0xbc37;
    undefined field14945_0xbc38;
    undefined field14946_0xbc39;
    undefined field14947_0xbc3a;
    undefined field14948_0xbc3b;
    undefined field14949_0xbc3c;
    undefined field14950_0xbc3d;
    undefined field14951_0xbc3e;
    undefined field14952_0xbc3f;
    undefined field14953_0xbc40;
    undefined field14954_0xbc41;
    undefined field14955_0xbc42;
    undefined field14956_0xbc43;
    undefined field14957_0xbc44;
    undefined field14958_0xbc45;
    undefined field14959_0xbc46;
    undefined field14960_0xbc47;
    undefined field14961_0xbc48;
    undefined field14962_0xbc49;
    undefined field14963_0xbc4a;
    undefined field14964_0xbc4b;
    undefined field14965_0xbc4c;
    undefined field14966_0xbc4d;
    undefined field14967_0xbc4e;
    undefined field14968_0xbc4f;
    undefined field14969_0xbc50;
    undefined field14970_0xbc51;
    undefined field14971_0xbc52;
    undefined field14972_0xbc53;
    undefined field14973_0xbc54;
    undefined field14974_0xbc55;
    undefined field14975_0xbc56;
    undefined field14976_0xbc57;
    undefined field14977_0xbc58;
    undefined field14978_0xbc59;
    undefined field14979_0xbc5a;
    undefined field14980_0xbc5b;
    undefined field14981_0xbc5c;
    undefined field14982_0xbc5d;
    undefined field14983_0xbc5e;
    undefined field14984_0xbc5f;
    undefined field14985_0xbc60;
    undefined field14986_0xbc61;
    undefined field14987_0xbc62;
    undefined field14988_0xbc63;
    undefined field14989_0xbc64;
    undefined field14990_0xbc65;
    undefined field14991_0xbc66;
    undefined field14992_0xbc67;
    undefined field14993_0xbc68;
    undefined field14994_0xbc69;
    undefined field14995_0xbc6a;
    undefined field14996_0xbc6b;
    undefined field14997_0xbc6c;
    undefined field14998_0xbc6d;
    undefined field14999_0xbc6e;
    undefined field15000_0xbc6f;
    undefined field15001_0xbc70;
    undefined field15002_0xbc71;
    undefined field15003_0xbc72;
    undefined field15004_0xbc73;
    undefined field15005_0xbc74;
    undefined field15006_0xbc75;
    undefined field15007_0xbc76;
    undefined field15008_0xbc77;
    undefined field15009_0xbc78;
    undefined field15010_0xbc79;
    undefined field15011_0xbc7a;
    undefined field15012_0xbc7b;
    undefined field15013_0xbc7c;
    undefined field15014_0xbc7d;
    undefined field15015_0xbc7e;
    undefined field15016_0xbc7f;
    undefined field15017_0xbc80;
    undefined field15018_0xbc81;
    undefined field15019_0xbc82;
    undefined field15020_0xbc83;
    undefined field15021_0xbc84;
    undefined field15022_0xbc85;
    undefined field15023_0xbc86;
    undefined field15024_0xbc87;
    undefined field15025_0xbc88;
    undefined field15026_0xbc89;
    undefined field15027_0xbc8a;
    undefined field15028_0xbc8b;
    undefined field15029_0xbc8c;
    undefined field15030_0xbc8d;
    undefined field15031_0xbc8e;
    undefined field15032_0xbc8f;
    undefined field15033_0xbc90;
    undefined field15034_0xbc91;
    undefined field15035_0xbc92;
    undefined field15036_0xbc93;
    undefined field15037_0xbc94;
    undefined field15038_0xbc95;
    undefined field15039_0xbc96;
    undefined field15040_0xbc97;
    undefined field15041_0xbc98;
    undefined field15042_0xbc99;
    undefined field15043_0xbc9a;
    undefined field15044_0xbc9b;
    undefined field15045_0xbc9c;
    undefined field15046_0xbc9d;
    undefined field15047_0xbc9e;
    undefined field15048_0xbc9f;
    undefined field15049_0xbca0;
    undefined field15050_0xbca1;
    undefined field15051_0xbca2;
    undefined field15052_0xbca3;
    undefined field15053_0xbca4;
    undefined field15054_0xbca5;
    undefined field15055_0xbca6;
    undefined field15056_0xbca7;
    undefined field15057_0xbca8;
    undefined field15058_0xbca9;
    undefined field15059_0xbcaa;
    undefined field15060_0xbcab;
    undefined field15061_0xbcac;
    undefined field15062_0xbcad;
    undefined field15063_0xbcae;
    undefined field15064_0xbcaf;
    undefined field15065_0xbcb0;
    undefined field15066_0xbcb1;
    undefined field15067_0xbcb2;
    undefined field15068_0xbcb3;
    undefined field15069_0xbcb4;
    undefined field15070_0xbcb5;
    undefined field15071_0xbcb6;
    undefined field15072_0xbcb7;
    undefined field15073_0xbcb8;
    undefined field15074_0xbcb9;
    undefined field15075_0xbcba;
    undefined field15076_0xbcbb;
    undefined field15077_0xbcbc;
    undefined field15078_0xbcbd;
    undefined field15079_0xbcbe;
    undefined field15080_0xbcbf;
    undefined field15081_0xbcc0;
    undefined field15082_0xbcc1;
    undefined field15083_0xbcc2;
    undefined field15084_0xbcc3;
    undefined field15085_0xbcc4;
    undefined field15086_0xbcc5;
    undefined field15087_0xbcc6;
    undefined field15088_0xbcc7;
    undefined field15089_0xbcc8;
    undefined field15090_0xbcc9;
    undefined field15091_0xbcca;
    undefined field15092_0xbccb;
    undefined field15093_0xbccc;
    undefined field15094_0xbccd;
    undefined field15095_0xbcce;
    undefined field15096_0xbccf;
    undefined field15097_0xbcd0;
    undefined field15098_0xbcd1;
    undefined field15099_0xbcd2;
    undefined field15100_0xbcd3;
    undefined field15101_0xbcd4;
    undefined field15102_0xbcd5;
    undefined field15103_0xbcd6;
    undefined field15104_0xbcd7;
    undefined field15105_0xbcd8;
    undefined field15106_0xbcd9;
    undefined field15107_0xbcda;
    undefined field15108_0xbcdb;
    undefined field15109_0xbcdc;
    undefined field15110_0xbcdd;
    undefined field15111_0xbcde;
    undefined field15112_0xbcdf;
    undefined field15113_0xbce0;
    undefined field15114_0xbce1;
    undefined field15115_0xbce2;
    undefined field15116_0xbce3;
    undefined field15117_0xbce4;
    undefined field15118_0xbce5;
    undefined field15119_0xbce6;
    undefined field15120_0xbce7;
    undefined field15121_0xbce8;
    undefined field15122_0xbce9;
    undefined field15123_0xbcea;
    undefined field15124_0xbceb;
    undefined field15125_0xbcec;
    undefined field15126_0xbced;
    undefined field15127_0xbcee;
    undefined field15128_0xbcef;
    undefined field15129_0xbcf0;
    undefined field15130_0xbcf1;
    undefined field15131_0xbcf2;
    undefined field15132_0xbcf3;
    undefined field15133_0xbcf4;
    undefined field15134_0xbcf5;
    undefined field15135_0xbcf6;
    undefined field15136_0xbcf7;
    undefined field15137_0xbcf8;
    undefined field15138_0xbcf9;
    undefined field15139_0xbcfa;
    undefined field15140_0xbcfb;
    undefined field15141_0xbcfc;
    undefined field15142_0xbcfd;
    undefined field15143_0xbcfe;
    undefined field15144_0xbcff;
    undefined field15145_0xbd00;
    undefined field15146_0xbd01;
    undefined field15147_0xbd02;
    undefined field15148_0xbd03;
    undefined field15149_0xbd04;
    undefined field15150_0xbd05;
    undefined field15151_0xbd06;
    undefined field15152_0xbd07;
    undefined field15153_0xbd08;
    undefined field15154_0xbd09;
    undefined field15155_0xbd0a;
    undefined field15156_0xbd0b;
    undefined field15157_0xbd0c;
    undefined field15158_0xbd0d;
    undefined field15159_0xbd0e;
    undefined field15160_0xbd0f;
    undefined field15161_0xbd10;
    undefined field15162_0xbd11;
    undefined field15163_0xbd12;
    undefined field15164_0xbd13;
    undefined field15165_0xbd14;
    undefined field15166_0xbd15;
    undefined field15167_0xbd16;
    undefined field15168_0xbd17;
    undefined field15169_0xbd18;
    undefined field15170_0xbd19;
    undefined field15171_0xbd1a;
    undefined field15172_0xbd1b;
    undefined field15173_0xbd1c;
    undefined field15174_0xbd1d;
    undefined field15175_0xbd1e;
    undefined field15176_0xbd1f;
    undefined field15177_0xbd20;
    undefined field15178_0xbd21;
    undefined field15179_0xbd22;
    undefined field15180_0xbd23;
    undefined field15181_0xbd24;
    undefined field15182_0xbd25;
    undefined field15183_0xbd26;
    undefined field15184_0xbd27;
    undefined field15185_0xbd28;
    undefined field15186_0xbd29;
    undefined field15187_0xbd2a;
    undefined field15188_0xbd2b;
    undefined field15189_0xbd2c;
    undefined field15190_0xbd2d;
    undefined field15191_0xbd2e;
    undefined field15192_0xbd2f;
    undefined field15193_0xbd30;
    undefined field15194_0xbd31;
    undefined field15195_0xbd32;
    undefined field15196_0xbd33;
    undefined field15197_0xbd34;
    undefined field15198_0xbd35;
    undefined field15199_0xbd36;
    undefined field15200_0xbd37;
    undefined field15201_0xbd38;
    undefined field15202_0xbd39;
    undefined field15203_0xbd3a;
    undefined field15204_0xbd3b;
    undefined field15205_0xbd3c;
    undefined field15206_0xbd3d;
    undefined field15207_0xbd3e;
    undefined field15208_0xbd3f;
    undefined field15209_0xbd40;
    undefined field15210_0xbd41;
    undefined field15211_0xbd42;
    undefined field15212_0xbd43;
    undefined field15213_0xbd44;
    undefined field15214_0xbd45;
    undefined field15215_0xbd46;
    undefined field15216_0xbd47;
    undefined field15217_0xbd48;
    undefined field15218_0xbd49;
    undefined field15219_0xbd4a;
    undefined field15220_0xbd4b;
    undefined field15221_0xbd4c;
    undefined field15222_0xbd4d;
    undefined field15223_0xbd4e;
    undefined field15224_0xbd4f;
    undefined field15225_0xbd50;
    undefined field15226_0xbd51;
    undefined field15227_0xbd52;
    undefined field15228_0xbd53;
    undefined field15229_0xbd54;
    undefined field15230_0xbd55;
    undefined field15231_0xbd56;
    undefined field15232_0xbd57;
    undefined field15233_0xbd58;
    undefined field15234_0xbd59;
    undefined field15235_0xbd5a;
    undefined field15236_0xbd5b;
    undefined field15237_0xbd5c;
    undefined field15238_0xbd5d;
    undefined field15239_0xbd5e;
    undefined field15240_0xbd5f;
    undefined field15241_0xbd60;
    undefined field15242_0xbd61;
    undefined field15243_0xbd62;
    undefined field15244_0xbd63;
    undefined field15245_0xbd64;
    undefined field15246_0xbd65;
    undefined field15247_0xbd66;
    undefined field15248_0xbd67;
    undefined field15249_0xbd68;
    undefined field15250_0xbd69;
    undefined field15251_0xbd6a;
    undefined field15252_0xbd6b;
    undefined field15253_0xbd6c;
    undefined field15254_0xbd6d;
    undefined field15255_0xbd6e;
    undefined field15256_0xbd6f;
    undefined field15257_0xbd70;
    undefined field15258_0xbd71;
    undefined field15259_0xbd72;
    undefined field15260_0xbd73;
    undefined field15261_0xbd74;
    undefined field15262_0xbd75;
    undefined field15263_0xbd76;
    undefined field15264_0xbd77;
    undefined field15265_0xbd78;
    undefined field15266_0xbd79;
    undefined field15267_0xbd7a;
    undefined field15268_0xbd7b;
    undefined field15269_0xbd7c;
    undefined field15270_0xbd7d;
    undefined field15271_0xbd7e;
    undefined field15272_0xbd7f;
    undefined field15273_0xbd80;
    undefined field15274_0xbd81;
    undefined field15275_0xbd82;
    undefined field15276_0xbd83;
    undefined field15277_0xbd84;
    undefined field15278_0xbd85;
    undefined field15279_0xbd86;
    undefined field15280_0xbd87;
    undefined field15281_0xbd88;
    undefined field15282_0xbd89;
    undefined field15283_0xbd8a;
    undefined field15284_0xbd8b;
    undefined field15285_0xbd8c;
    undefined field15286_0xbd8d;
    undefined field15287_0xbd8e;
    undefined field15288_0xbd8f;
    undefined field15289_0xbd90;
    undefined field15290_0xbd91;
    undefined field15291_0xbd92;
    undefined field15292_0xbd93;
    undefined field15293_0xbd94;
    undefined field15294_0xbd95;
    undefined field15295_0xbd96;
    undefined field15296_0xbd97;
    undefined field15297_0xbd98;
    undefined field15298_0xbd99;
    undefined field15299_0xbd9a;
    undefined field15300_0xbd9b;
    undefined field15301_0xbd9c;
    undefined field15302_0xbd9d;
    undefined field15303_0xbd9e;
    undefined field15304_0xbd9f;
    undefined field15305_0xbda0;
    undefined field15306_0xbda1;
    undefined field15307_0xbda2;
    undefined field15308_0xbda3;
    undefined field15309_0xbda4;
    undefined field15310_0xbda5;
    undefined field15311_0xbda6;
    undefined field15312_0xbda7;
    undefined field15313_0xbda8;
    undefined field15314_0xbda9;
    undefined field15315_0xbdaa;
    undefined field15316_0xbdab;
    undefined field15317_0xbdac;
    undefined field15318_0xbdad;
    undefined field15319_0xbdae;
    undefined field15320_0xbdaf;
    undefined field15321_0xbdb0;
    undefined field15322_0xbdb1;
    undefined field15323_0xbdb2;
    undefined field15324_0xbdb3;
    undefined field15325_0xbdb4;
    undefined field15326_0xbdb5;
    undefined field15327_0xbdb6;
    undefined field15328_0xbdb7;
    undefined field15329_0xbdb8;
    undefined field15330_0xbdb9;
    undefined field15331_0xbdba;
    undefined field15332_0xbdbb;
    undefined field15333_0xbdbc;
    undefined field15334_0xbdbd;
    undefined field15335_0xbdbe;
    undefined field15336_0xbdbf;
    undefined field15337_0xbdc0;
    undefined field15338_0xbdc1;
    undefined field15339_0xbdc2;
    undefined field15340_0xbdc3;
    undefined field15341_0xbdc4;
    undefined field15342_0xbdc5;
    undefined field15343_0xbdc6;
    undefined field15344_0xbdc7;
    undefined field15345_0xbdc8;
    undefined field15346_0xbdc9;
    undefined field15347_0xbdca;
    undefined field15348_0xbdcb;
    undefined field15349_0xbdcc;
    undefined field15350_0xbdcd;
    undefined field15351_0xbdce;
    undefined field15352_0xbdcf;
    undefined field15353_0xbdd0;
    undefined field15354_0xbdd1;
    undefined field15355_0xbdd2;
    undefined field15356_0xbdd3;
    undefined field15357_0xbdd4;
    undefined field15358_0xbdd5;
    undefined field15359_0xbdd6;
    undefined field15360_0xbdd7;
    undefined field15361_0xbdd8;
    undefined field15362_0xbdd9;
    undefined field15363_0xbdda;
    undefined field15364_0xbddb;
    undefined field15365_0xbddc;
    undefined field15366_0xbddd;
    undefined field15367_0xbdde;
    undefined field15368_0xbddf;
    undefined field15369_0xbde0;
    undefined field15370_0xbde1;
    undefined field15371_0xbde2;
    undefined field15372_0xbde3;
    undefined field15373_0xbde4;
    undefined field15374_0xbde5;
    undefined field15375_0xbde6;
    undefined field15376_0xbde7;
    undefined field15377_0xbde8;
    undefined field15378_0xbde9;
    undefined field15379_0xbdea;
    undefined field15380_0xbdeb;
    undefined field15381_0xbdec;
    undefined field15382_0xbded;
    undefined field15383_0xbdee;
    undefined field15384_0xbdef;
    undefined field15385_0xbdf0;
    undefined field15386_0xbdf1;
    undefined field15387_0xbdf2;
    undefined field15388_0xbdf3;
    undefined field15389_0xbdf4;
    undefined field15390_0xbdf5;
    undefined field15391_0xbdf6;
    undefined field15392_0xbdf7;
    undefined field15393_0xbdf8;
    undefined field15394_0xbdf9;
    undefined field15395_0xbdfa;
    undefined field15396_0xbdfb;
    undefined field15397_0xbdfc;
    undefined field15398_0xbdfd;
    undefined field15399_0xbdfe;
    undefined field15400_0xbdff;
    undefined field15401_0xbe00;
    undefined field15402_0xbe01;
    undefined field15403_0xbe02;
    undefined field15404_0xbe03;
    undefined field15405_0xbe04;
    undefined field15406_0xbe05;
    undefined field15407_0xbe06;
    undefined field15408_0xbe07;
    undefined field15409_0xbe08;
    undefined field15410_0xbe09;
    undefined field15411_0xbe0a;
    undefined field15412_0xbe0b;
    undefined field15413_0xbe0c;
    undefined field15414_0xbe0d;
    undefined field15415_0xbe0e;
    undefined field15416_0xbe0f;
    undefined field15417_0xbe10;
    undefined field15418_0xbe11;
    undefined field15419_0xbe12;
    undefined field15420_0xbe13;
    undefined field15421_0xbe14;
    undefined field15422_0xbe15;
    undefined field15423_0xbe16;
    undefined field15424_0xbe17;
    undefined field15425_0xbe18;
    undefined field15426_0xbe19;
    undefined field15427_0xbe1a;
    undefined field15428_0xbe1b;
    undefined field15429_0xbe1c;
    undefined field15430_0xbe1d;
    undefined field15431_0xbe1e;
    undefined field15432_0xbe1f;
    undefined field15433_0xbe20;
    undefined field15434_0xbe21;
    undefined field15435_0xbe22;
    undefined field15436_0xbe23;
    undefined field15437_0xbe24;
    undefined field15438_0xbe25;
    undefined field15439_0xbe26;
    undefined field15440_0xbe27;
    undefined field15441_0xbe28;
    undefined field15442_0xbe29;
    undefined field15443_0xbe2a;
    undefined field15444_0xbe2b;
    undefined field15445_0xbe2c;
    undefined field15446_0xbe2d;
    undefined field15447_0xbe2e;
    undefined field15448_0xbe2f;
    undefined field15449_0xbe30;
    undefined field15450_0xbe31;
    undefined field15451_0xbe32;
    undefined field15452_0xbe33;
    undefined field15453_0xbe34;
    undefined field15454_0xbe35;
    undefined field15455_0xbe36;
    undefined field15456_0xbe37;
    undefined field15457_0xbe38;
    undefined field15458_0xbe39;
    undefined field15459_0xbe3a;
    undefined field15460_0xbe3b;
    undefined field15461_0xbe3c;
    undefined field15462_0xbe3d;
    undefined field15463_0xbe3e;
    undefined field15464_0xbe3f;
    undefined field15465_0xbe40;
    undefined field15466_0xbe41;
    undefined field15467_0xbe42;
    undefined field15468_0xbe43;
    undefined field15469_0xbe44;
    undefined field15470_0xbe45;
    undefined field15471_0xbe46;
    undefined field15472_0xbe47;
    undefined field15473_0xbe48;
    undefined field15474_0xbe49;
    undefined field15475_0xbe4a;
    undefined field15476_0xbe4b;
    undefined field15477_0xbe4c;
    undefined field15478_0xbe4d;
    undefined field15479_0xbe4e;
    undefined field15480_0xbe4f;
    undefined field15481_0xbe50;
    undefined field15482_0xbe51;
    undefined field15483_0xbe52;
    undefined field15484_0xbe53;
    undefined field15485_0xbe54;
    undefined field15486_0xbe55;
    undefined field15487_0xbe56;
    undefined field15488_0xbe57;
    undefined field15489_0xbe58;
    undefined field15490_0xbe59;
    undefined field15491_0xbe5a;
    undefined field15492_0xbe5b;
    undefined field15493_0xbe5c;
    undefined field15494_0xbe5d;
    undefined field15495_0xbe5e;
    undefined field15496_0xbe5f;
    undefined field15497_0xbe60;
    undefined field15498_0xbe61;
    undefined field15499_0xbe62;
    undefined field15500_0xbe63;
    undefined field15501_0xbe64;
    undefined field15502_0xbe65;
    undefined field15503_0xbe66;
    undefined field15504_0xbe67;
    undefined field15505_0xbe68;
    undefined field15506_0xbe69;
    undefined field15507_0xbe6a;
    undefined field15508_0xbe6b;
    undefined field15509_0xbe6c;
    undefined field15510_0xbe6d;
    undefined field15511_0xbe6e;
    undefined field15512_0xbe6f;
    undefined field15513_0xbe70;
    undefined field15514_0xbe71;
    undefined field15515_0xbe72;
    undefined field15516_0xbe73;
    undefined field15517_0xbe74;
    undefined field15518_0xbe75;
    undefined field15519_0xbe76;
    undefined field15520_0xbe77;
    undefined field15521_0xbe78;
    undefined field15522_0xbe79;
    undefined field15523_0xbe7a;
    undefined field15524_0xbe7b;
    undefined field15525_0xbe7c;
    undefined field15526_0xbe7d;
    undefined field15527_0xbe7e;
    undefined field15528_0xbe7f;
    undefined field15529_0xbe80;
    undefined field15530_0xbe81;
    undefined field15531_0xbe82;
    undefined field15532_0xbe83;
    undefined field15533_0xbe84;
    undefined field15534_0xbe85;
    undefined field15535_0xbe86;
    undefined field15536_0xbe87;
    undefined field15537_0xbe88;
    undefined field15538_0xbe89;
    undefined field15539_0xbe8a;
    undefined field15540_0xbe8b;
    undefined field15541_0xbe8c;
    undefined field15542_0xbe8d;
    undefined field15543_0xbe8e;
    undefined field15544_0xbe8f;
    undefined field15545_0xbe90;
    undefined field15546_0xbe91;
    undefined field15547_0xbe92;
    undefined field15548_0xbe93;
    undefined field15549_0xbe94;
    undefined field15550_0xbe95;
    undefined field15551_0xbe96;
    undefined field15552_0xbe97;
    undefined field15553_0xbe98;
    undefined field15554_0xbe99;
    undefined field15555_0xbe9a;
    undefined field15556_0xbe9b;
    undefined field15557_0xbe9c;
    undefined field15558_0xbe9d;
    undefined field15559_0xbe9e;
    undefined field15560_0xbe9f;
    undefined field15561_0xbea0;
    undefined field15562_0xbea1;
    undefined field15563_0xbea2;
    undefined field15564_0xbea3;
    undefined field15565_0xbea4;
    undefined field15566_0xbea5;
    undefined field15567_0xbea6;
    undefined field15568_0xbea7;
    undefined field15569_0xbea8;
    undefined field15570_0xbea9;
    undefined field15571_0xbeaa;
    undefined field15572_0xbeab;
    undefined field15573_0xbeac;
    undefined field15574_0xbead;
    undefined field15575_0xbeae;
    undefined field15576_0xbeaf;
    undefined field15577_0xbeb0;
    undefined field15578_0xbeb1;
    undefined field15579_0xbeb2;
    undefined field15580_0xbeb3;
    undefined field15581_0xbeb4;
    undefined field15582_0xbeb5;
    undefined field15583_0xbeb6;
    undefined field15584_0xbeb7;
    undefined field15585_0xbeb8;
    undefined field15586_0xbeb9;
    undefined field15587_0xbeba;
    undefined field15588_0xbebb;
    undefined field15589_0xbebc;
    undefined field15590_0xbebd;
    undefined field15591_0xbebe;
    undefined field15592_0xbebf;
    undefined field15593_0xbec0;
    undefined field15594_0xbec1;
    undefined field15595_0xbec2;
    undefined field15596_0xbec3;
    undefined field15597_0xbec4;
    undefined field15598_0xbec5;
    undefined field15599_0xbec6;
    undefined field15600_0xbec7;
    undefined field15601_0xbec8;
    undefined field15602_0xbec9;
    undefined field15603_0xbeca;
    undefined field15604_0xbecb;
    undefined field15605_0xbecc;
    undefined field15606_0xbecd;
    undefined field15607_0xbece;
    undefined field15608_0xbecf;
    undefined field15609_0xbed0;
    undefined field15610_0xbed1;
    undefined field15611_0xbed2;
    undefined field15612_0xbed3;
    undefined field15613_0xbed4;
    undefined field15614_0xbed5;
    undefined field15615_0xbed6;
    undefined field15616_0xbed7;
    undefined field15617_0xbed8;
    undefined field15618_0xbed9;
    undefined field15619_0xbeda;
    undefined field15620_0xbedb;
    undefined field15621_0xbedc;
    undefined field15622_0xbedd;
    undefined field15623_0xbede;
    undefined field15624_0xbedf;
    undefined field15625_0xbee0;
    undefined field15626_0xbee1;
    undefined field15627_0xbee2;
    undefined field15628_0xbee3;
    undefined field15629_0xbee4;
    undefined field15630_0xbee5;
    undefined field15631_0xbee6;
    undefined field15632_0xbee7;
    undefined field15633_0xbee8;
    undefined field15634_0xbee9;
    undefined field15635_0xbeea;
    undefined field15636_0xbeeb;
    undefined field15637_0xbeec;
    undefined field15638_0xbeed;
    undefined field15639_0xbeee;
    undefined field15640_0xbeef;
    undefined field15641_0xbef0;
    undefined field15642_0xbef1;
    undefined field15643_0xbef2;
    undefined field15644_0xbef3;
    undefined field15645_0xbef4;
    undefined field15646_0xbef5;
    undefined field15647_0xbef6;
    undefined field15648_0xbef7;
    undefined field15649_0xbef8;
    undefined field15650_0xbef9;
    undefined field15651_0xbefa;
    undefined field15652_0xbefb;
    undefined field15653_0xbefc;
    undefined field15654_0xbefd;
    undefined field15655_0xbefe;
    undefined field15656_0xbeff;
    undefined field15657_0xbf00;
    undefined field15658_0xbf01;
    undefined field15659_0xbf02;
    undefined field15660_0xbf03;
    undefined field15661_0xbf04;
    undefined field15662_0xbf05;
    undefined field15663_0xbf06;
    undefined field15664_0xbf07;
    undefined field15665_0xbf08;
    undefined field15666_0xbf09;
    undefined field15667_0xbf0a;
    undefined field15668_0xbf0b;
    undefined field15669_0xbf0c;
    undefined field15670_0xbf0d;
    undefined field15671_0xbf0e;
    undefined field15672_0xbf0f;
    undefined field15673_0xbf10;
    undefined field15674_0xbf11;
    undefined field15675_0xbf12;
    undefined field15676_0xbf13;
    undefined field15677_0xbf14;
    undefined field15678_0xbf15;
    undefined field15679_0xbf16;
    undefined field15680_0xbf17;
    undefined field15681_0xbf18;
    undefined field15682_0xbf19;
    undefined field15683_0xbf1a;
    undefined field15684_0xbf1b;
    undefined field15685_0xbf1c;
    undefined field15686_0xbf1d;
    undefined field15687_0xbf1e;
    undefined field15688_0xbf1f;
    undefined field15689_0xbf20;
    undefined field15690_0xbf21;
    undefined field15691_0xbf22;
    undefined field15692_0xbf23;
    undefined field15693_0xbf24;
    undefined field15694_0xbf25;
    undefined field15695_0xbf26;
    undefined field15696_0xbf27;
    undefined field15697_0xbf28;
    undefined field15698_0xbf29;
    undefined field15699_0xbf2a;
    undefined field15700_0xbf2b;
    undefined field15701_0xbf2c;
    undefined field15702_0xbf2d;
    undefined field15703_0xbf2e;
    undefined field15704_0xbf2f;
    undefined field15705_0xbf30;
    undefined field15706_0xbf31;
    undefined field15707_0xbf32;
    undefined field15708_0xbf33;
    undefined field15709_0xbf34;
    undefined field15710_0xbf35;
    undefined field15711_0xbf36;
    undefined field15712_0xbf37;
    undefined field15713_0xbf38;
    undefined field15714_0xbf39;
    undefined field15715_0xbf3a;
    undefined field15716_0xbf3b;
    undefined field15717_0xbf3c;
    undefined field15718_0xbf3d;
    undefined field15719_0xbf3e;
    undefined field15720_0xbf3f;
    undefined field15721_0xbf40;
    undefined field15722_0xbf41;
    undefined field15723_0xbf42;
    undefined field15724_0xbf43;
    undefined field15725_0xbf44;
    undefined field15726_0xbf45;
    undefined field15727_0xbf46;
    undefined field15728_0xbf47;
    undefined field15729_0xbf48;
    undefined field15730_0xbf49;
    undefined field15731_0xbf4a;
    undefined field15732_0xbf4b;
    undefined field15733_0xbf4c;
    undefined field15734_0xbf4d;
    undefined field15735_0xbf4e;
    undefined field15736_0xbf4f;
    undefined field15737_0xbf50;
    undefined field15738_0xbf51;
    undefined field15739_0xbf52;
    undefined field15740_0xbf53;
    undefined field15741_0xbf54;
    undefined field15742_0xbf55;
    undefined field15743_0xbf56;
    undefined field15744_0xbf57;
    undefined field15745_0xbf58;
    undefined field15746_0xbf59;
    undefined field15747_0xbf5a;
    undefined field15748_0xbf5b;
    undefined field15749_0xbf5c;
    undefined field15750_0xbf5d;
    undefined field15751_0xbf5e;
    undefined field15752_0xbf5f;
    undefined field15753_0xbf60;
    undefined field15754_0xbf61;
    undefined field15755_0xbf62;
    undefined field15756_0xbf63;
    undefined field15757_0xbf64;
    undefined field15758_0xbf65;
    undefined field15759_0xbf66;
    undefined field15760_0xbf67;
    undefined field15761_0xbf68;
    undefined field15762_0xbf69;
    undefined field15763_0xbf6a;
    undefined field15764_0xbf6b;
    undefined field15765_0xbf6c;
    undefined field15766_0xbf6d;
    undefined field15767_0xbf6e;
    undefined field15768_0xbf6f;
    undefined field15769_0xbf70;
    undefined field15770_0xbf71;
    undefined field15771_0xbf72;
    undefined field15772_0xbf73;
    undefined field15773_0xbf74;
    undefined field15774_0xbf75;
    undefined field15775_0xbf76;
    undefined field15776_0xbf77;
    undefined field15777_0xbf78;
    undefined field15778_0xbf79;
    undefined field15779_0xbf7a;
    undefined field15780_0xbf7b;
    undefined field15781_0xbf7c;
    undefined field15782_0xbf7d;
    undefined field15783_0xbf7e;
    undefined field15784_0xbf7f;
    undefined field15785_0xbf80;
    undefined field15786_0xbf81;
    undefined field15787_0xbf82;
    undefined field15788_0xbf83;
    undefined field15789_0xbf84;
    undefined field15790_0xbf85;
    undefined field15791_0xbf86;
    undefined field15792_0xbf87;
    undefined field15793_0xbf88;
    undefined field15794_0xbf89;
    undefined field15795_0xbf8a;
    undefined field15796_0xbf8b;
    undefined field15797_0xbf8c;
    undefined field15798_0xbf8d;
    undefined field15799_0xbf8e;
    undefined field15800_0xbf8f;
    undefined field15801_0xbf90;
    undefined field15802_0xbf91;
    undefined field15803_0xbf92;
    undefined field15804_0xbf93;
    undefined field15805_0xbf94;
    undefined field15806_0xbf95;
    undefined field15807_0xbf96;
    undefined field15808_0xbf97;
    undefined field15809_0xbf98;
    undefined field15810_0xbf99;
    undefined field15811_0xbf9a;
    undefined field15812_0xbf9b;
    undefined field15813_0xbf9c;
    undefined field15814_0xbf9d;
    undefined field15815_0xbf9e;
    undefined field15816_0xbf9f;
    undefined field15817_0xbfa0;
    undefined field15818_0xbfa1;
    undefined field15819_0xbfa2;
    undefined field15820_0xbfa3;
    undefined field15821_0xbfa4;
    undefined field15822_0xbfa5;
    undefined field15823_0xbfa6;
    undefined field15824_0xbfa7;
    undefined field15825_0xbfa8;
    undefined field15826_0xbfa9;
    undefined field15827_0xbfaa;
    undefined field15828_0xbfab;
    undefined field15829_0xbfac;
    undefined field15830_0xbfad;
    undefined field15831_0xbfae;
    undefined field15832_0xbfaf;
    undefined field15833_0xbfb0;
    undefined field15834_0xbfb1;
    undefined field15835_0xbfb2;
    undefined field15836_0xbfb3;
    undefined field15837_0xbfb4;
    undefined field15838_0xbfb5;
    undefined field15839_0xbfb6;
    undefined field15840_0xbfb7;
    undefined field15841_0xbfb8;
    undefined field15842_0xbfb9;
    undefined field15843_0xbfba;
    undefined field15844_0xbfbb;
    undefined field15845_0xbfbc;
    undefined field15846_0xbfbd;
    undefined field15847_0xbfbe;
    undefined field15848_0xbfbf;
    undefined field15849_0xbfc0;
    undefined field15850_0xbfc1;
    undefined field15851_0xbfc2;
    undefined field15852_0xbfc3;
    undefined field15853_0xbfc4;
    undefined field15854_0xbfc5;
    undefined field15855_0xbfc6;
    undefined field15856_0xbfc7;
    undefined field15857_0xbfc8;
    undefined field15858_0xbfc9;
    undefined field15859_0xbfca;
    undefined field15860_0xbfcb;
    undefined field15861_0xbfcc;
    undefined field15862_0xbfcd;
    undefined field15863_0xbfce;
    undefined field15864_0xbfcf;
    undefined field15865_0xbfd0;
    undefined field15866_0xbfd1;
    undefined field15867_0xbfd2;
    undefined field15868_0xbfd3;
    undefined field15869_0xbfd4;
    undefined field15870_0xbfd5;
    undefined field15871_0xbfd6;
    undefined field15872_0xbfd7;
    undefined field15873_0xbfd8;
    undefined field15874_0xbfd9;
    undefined field15875_0xbfda;
    undefined field15876_0xbfdb;
    undefined field15877_0xbfdc;
    undefined field15878_0xbfdd;
    undefined field15879_0xbfde;
    undefined field15880_0xbfdf;
    undefined field15881_0xbfe0;
    undefined field15882_0xbfe1;
    undefined field15883_0xbfe2;
    undefined field15884_0xbfe3;
    undefined field15885_0xbfe4;
    undefined field15886_0xbfe5;
    undefined field15887_0xbfe6;
    undefined field15888_0xbfe7;
    undefined field15889_0xbfe8;
    undefined field15890_0xbfe9;
    undefined field15891_0xbfea;
    undefined field15892_0xbfeb;
    undefined field15893_0xbfec;
    undefined field15894_0xbfed;
    undefined field15895_0xbfee;
    undefined field15896_0xbfef;
    undefined field15897_0xbff0;
    undefined field15898_0xbff1;
    undefined field15899_0xbff2;
    undefined field15900_0xbff3;
    undefined field15901_0xbff4;
    undefined field15902_0xbff5;
    undefined field15903_0xbff6;
    undefined field15904_0xbff7;
    undefined field15905_0xbff8;
    undefined field15906_0xbff9;
    undefined field15907_0xbffa;
    undefined field15908_0xbffb;
    undefined field15909_0xbffc;
    undefined field15910_0xbffd;
    undefined field15911_0xbffe;
    undefined field15912_0xbfff;
    undefined field15913_0xc000;
    undefined field15914_0xc001;
    undefined field15915_0xc002;
    undefined field15916_0xc003;
    undefined field15917_0xc004;
    undefined field15918_0xc005;
    undefined field15919_0xc006;
    undefined field15920_0xc007;
    undefined field15921_0xc008;
    undefined field15922_0xc009;
    undefined field15923_0xc00a;
    undefined field15924_0xc00b;
    undefined field15925_0xc00c;
    undefined field15926_0xc00d;
    undefined field15927_0xc00e;
    undefined field15928_0xc00f;
    undefined field15929_0xc010;
    undefined field15930_0xc011;
    undefined field15931_0xc012;
    undefined field15932_0xc013;
    undefined field15933_0xc014;
    undefined field15934_0xc015;
    undefined field15935_0xc016;
    undefined field15936_0xc017;
    undefined field15937_0xc018;
    undefined field15938_0xc019;
    undefined field15939_0xc01a;
    undefined field15940_0xc01b;
    undefined field15941_0xc01c;
    undefined field15942_0xc01d;
    undefined field15943_0xc01e;
    undefined field15944_0xc01f;
    undefined field15945_0xc020;
    undefined field15946_0xc021;
    undefined field15947_0xc022;
    undefined field15948_0xc023;
    undefined field15949_0xc024;
    undefined field15950_0xc025;
    undefined field15951_0xc026;
    undefined field15952_0xc027;
    undefined field15953_0xc028;
    undefined field15954_0xc029;
    undefined field15955_0xc02a;
    undefined field15956_0xc02b;
    undefined field15957_0xc02c;
    undefined field15958_0xc02d;
    undefined field15959_0xc02e;
    undefined field15960_0xc02f;
    undefined field15961_0xc030;
    undefined field15962_0xc031;
    undefined field15963_0xc032;
    undefined field15964_0xc033;
    undefined field15965_0xc034;
    undefined field15966_0xc035;
    undefined field15967_0xc036;
    undefined field15968_0xc037;
    undefined field15969_0xc038;
    undefined field15970_0xc039;
    undefined field15971_0xc03a;
    undefined field15972_0xc03b;
    undefined field15973_0xc03c;
    undefined field15974_0xc03d;
    undefined field15975_0xc03e;
    undefined field15976_0xc03f;
    undefined field15977_0xc040;
    undefined field15978_0xc041;
    undefined field15979_0xc042;
    undefined field15980_0xc043;
    undefined field15981_0xc044;
    undefined field15982_0xc045;
    undefined field15983_0xc046;
    undefined field15984_0xc047;
    undefined field15985_0xc048;
    undefined field15986_0xc049;
    undefined field15987_0xc04a;
    undefined field15988_0xc04b;
    undefined field15989_0xc04c;
    undefined field15990_0xc04d;
    undefined field15991_0xc04e;
    undefined field15992_0xc04f;
    undefined field15993_0xc050;
    undefined field15994_0xc051;
    undefined field15995_0xc052;
    undefined field15996_0xc053;
    undefined field15997_0xc054;
    undefined field15998_0xc055;
    undefined field15999_0xc056;
    undefined field16000_0xc057;
    undefined field16001_0xc058;
    undefined field16002_0xc059;
    undefined field16003_0xc05a;
    undefined field16004_0xc05b;
    undefined field16005_0xc05c;
    undefined field16006_0xc05d;
    undefined field16007_0xc05e;
    undefined field16008_0xc05f;
    undefined field16009_0xc060;
    undefined field16010_0xc061;
    undefined field16011_0xc062;
    undefined field16012_0xc063;
    undefined field16013_0xc064;
    undefined field16014_0xc065;
    undefined field16015_0xc066;
    undefined field16016_0xc067;
    undefined field16017_0xc068;
    undefined field16018_0xc069;
    undefined field16019_0xc06a;
    undefined field16020_0xc06b;
    undefined field16021_0xc06c;
    undefined field16022_0xc06d;
    undefined field16023_0xc06e;
    undefined field16024_0xc06f;
    undefined field16025_0xc070;
    undefined field16026_0xc071;
    undefined field16027_0xc072;
    undefined field16028_0xc073;
    undefined field16029_0xc074;
    undefined field16030_0xc075;
    undefined field16031_0xc076;
    undefined field16032_0xc077;
    undefined field16033_0xc078;
    undefined field16034_0xc079;
    undefined field16035_0xc07a;
    undefined field16036_0xc07b;
    undefined field16037_0xc07c;
    undefined field16038_0xc07d;
    undefined field16039_0xc07e;
    undefined field16040_0xc07f;
    undefined field16041_0xc080;
    undefined field16042_0xc081;
    undefined field16043_0xc082;
    undefined field16044_0xc083;
    undefined field16045_0xc084;
    undefined field16046_0xc085;
    undefined field16047_0xc086;
    undefined field16048_0xc087;
    undefined field16049_0xc088;
    undefined field16050_0xc089;
    undefined field16051_0xc08a;
    undefined field16052_0xc08b;
    undefined field16053_0xc08c;
    undefined field16054_0xc08d;
    undefined field16055_0xc08e;
    undefined field16056_0xc08f;
    undefined field16057_0xc090;
    undefined field16058_0xc091;
    undefined field16059_0xc092;
    undefined field16060_0xc093;
    undefined field16061_0xc094;
    undefined field16062_0xc095;
    undefined field16063_0xc096;
    undefined field16064_0xc097;
    undefined field16065_0xc098;
    undefined field16066_0xc099;
    undefined field16067_0xc09a;
    undefined field16068_0xc09b;
    undefined field16069_0xc09c;
    undefined field16070_0xc09d;
    undefined field16071_0xc09e;
    undefined field16072_0xc09f;
    undefined field16073_0xc0a0;
    undefined field16074_0xc0a1;
    undefined field16075_0xc0a2;
    undefined field16076_0xc0a3;
    undefined field16077_0xc0a4;
    undefined field16078_0xc0a5;
    undefined field16079_0xc0a6;
    undefined field16080_0xc0a7;
    undefined field16081_0xc0a8;
    undefined field16082_0xc0a9;
    undefined field16083_0xc0aa;
    undefined field16084_0xc0ab;
    undefined field16085_0xc0ac;
    undefined field16086_0xc0ad;
    undefined field16087_0xc0ae;
    undefined field16088_0xc0af;
    undefined field16089_0xc0b0;
    undefined field16090_0xc0b1;
    undefined field16091_0xc0b2;
    undefined field16092_0xc0b3;
    undefined field16093_0xc0b4;
    undefined field16094_0xc0b5;
    undefined field16095_0xc0b6;
    undefined field16096_0xc0b7;
    undefined field16097_0xc0b8;
    undefined field16098_0xc0b9;
    undefined field16099_0xc0ba;
    undefined field16100_0xc0bb;
    undefined field16101_0xc0bc;
    undefined field16102_0xc0bd;
    undefined field16103_0xc0be;
    undefined field16104_0xc0bf;
    undefined field16105_0xc0c0;
    undefined field16106_0xc0c1;
    undefined field16107_0xc0c2;
    undefined field16108_0xc0c3;
    undefined field16109_0xc0c4;
    undefined field16110_0xc0c5;
    undefined field16111_0xc0c6;
    undefined field16112_0xc0c7;
    undefined field16113_0xc0c8;
    undefined field16114_0xc0c9;
    undefined field16115_0xc0ca;
    undefined field16116_0xc0cb;
    undefined field16117_0xc0cc;
    undefined field16118_0xc0cd;
    undefined field16119_0xc0ce;
    undefined field16120_0xc0cf;
    undefined field16121_0xc0d0;
    undefined field16122_0xc0d1;
    undefined field16123_0xc0d2;
    undefined field16124_0xc0d3;
    undefined field16125_0xc0d4;
    undefined field16126_0xc0d5;
    undefined field16127_0xc0d6;
    undefined field16128_0xc0d7;
    undefined field16129_0xc0d8;
    undefined field16130_0xc0d9;
    undefined field16131_0xc0da;
    undefined field16132_0xc0db;
    undefined field16133_0xc0dc;
    undefined field16134_0xc0dd;
    undefined field16135_0xc0de;
    undefined field16136_0xc0df;
    undefined field16137_0xc0e0;
    undefined field16138_0xc0e1;
    undefined field16139_0xc0e2;
    undefined field16140_0xc0e3;
    undefined field16141_0xc0e4;
    undefined field16142_0xc0e5;
    undefined field16143_0xc0e6;
    undefined field16144_0xc0e7;
    undefined field16145_0xc0e8;
    undefined field16146_0xc0e9;
    undefined field16147_0xc0ea;
    undefined field16148_0xc0eb;
    undefined field16149_0xc0ec;
    undefined field16150_0xc0ed;
    undefined field16151_0xc0ee;
    undefined field16152_0xc0ef;
    undefined field16153_0xc0f0;
    undefined field16154_0xc0f1;
    undefined field16155_0xc0f2;
    undefined field16156_0xc0f3;
    undefined field16157_0xc0f4;
    undefined field16158_0xc0f5;
    undefined field16159_0xc0f6;
    undefined field16160_0xc0f7;
    undefined field16161_0xc0f8;
    undefined field16162_0xc0f9;
    undefined field16163_0xc0fa;
    undefined field16164_0xc0fb;
    undefined field16165_0xc0fc;
    undefined field16166_0xc0fd;
    undefined field16167_0xc0fe;
    undefined field16168_0xc0ff;
    undefined field16169_0xc100;
    undefined field16170_0xc101;
    undefined field16171_0xc102;
    undefined field16172_0xc103;
    undefined field16173_0xc104;
    undefined field16174_0xc105;
    undefined field16175_0xc106;
    undefined field16176_0xc107;
    undefined field16177_0xc108;
    undefined field16178_0xc109;
    undefined field16179_0xc10a;
    undefined field16180_0xc10b;
    undefined field16181_0xc10c;
    undefined field16182_0xc10d;
    undefined field16183_0xc10e;
    undefined field16184_0xc10f;
    undefined field16185_0xc110;
    undefined field16186_0xc111;
    undefined field16187_0xc112;
    undefined field16188_0xc113;
    undefined field16189_0xc114;
    undefined field16190_0xc115;
    undefined field16191_0xc116;
    undefined field16192_0xc117;
    undefined field16193_0xc118;
    undefined field16194_0xc119;
    undefined field16195_0xc11a;
    undefined field16196_0xc11b;
    undefined field16197_0xc11c;
    undefined field16198_0xc11d;
    undefined field16199_0xc11e;
    undefined field16200_0xc11f;
    undefined field16201_0xc120;
    undefined field16202_0xc121;
    undefined field16203_0xc122;
    undefined field16204_0xc123;
    undefined field16205_0xc124;
    undefined field16206_0xc125;
    undefined field16207_0xc126;
    undefined field16208_0xc127;
    undefined field16209_0xc128;
    undefined field16210_0xc129;
    undefined field16211_0xc12a;
    undefined field16212_0xc12b;
    undefined field16213_0xc12c;
    undefined field16214_0xc12d;
    undefined field16215_0xc12e;
    undefined field16216_0xc12f;
    undefined field16217_0xc130;
    undefined field16218_0xc131;
    undefined field16219_0xc132;
    undefined field16220_0xc133;
    undefined field16221_0xc134;
    undefined field16222_0xc135;
    undefined field16223_0xc136;
    undefined field16224_0xc137;
    undefined field16225_0xc138;
    undefined field16226_0xc139;
    undefined field16227_0xc13a;
    undefined field16228_0xc13b;
    undefined field16229_0xc13c;
    undefined field16230_0xc13d;
    undefined field16231_0xc13e;
    undefined field16232_0xc13f;
    undefined field16233_0xc140;
    undefined field16234_0xc141;
    undefined field16235_0xc142;
    undefined field16236_0xc143;
    undefined field16237_0xc144;
    undefined field16238_0xc145;
    undefined field16239_0xc146;
    undefined field16240_0xc147;
    undefined field16241_0xc148;
    undefined field16242_0xc149;
    undefined field16243_0xc14a;
    undefined field16244_0xc14b;
    undefined field16245_0xc14c;
    undefined field16246_0xc14d;
    undefined field16247_0xc14e;
    undefined field16248_0xc14f;
    undefined field16249_0xc150;
    undefined field16250_0xc151;
    undefined field16251_0xc152;
    undefined field16252_0xc153;
    undefined field16253_0xc154;
    undefined field16254_0xc155;
    undefined field16255_0xc156;
    undefined field16256_0xc157;
    undefined field16257_0xc158;
    undefined field16258_0xc159;
    undefined field16259_0xc15a;
    undefined field16260_0xc15b;
    undefined field16261_0xc15c;
    undefined field16262_0xc15d;
    undefined field16263_0xc15e;
    undefined field16264_0xc15f;
    undefined field16265_0xc160;
    undefined field16266_0xc161;
    undefined field16267_0xc162;
    undefined field16268_0xc163;
    undefined field16269_0xc164;
    undefined field16270_0xc165;
    undefined field16271_0xc166;
    undefined field16272_0xc167;
    undefined field16273_0xc168;
    undefined field16274_0xc169;
    undefined field16275_0xc16a;
    undefined field16276_0xc16b;
    undefined field16277_0xc16c;
    undefined field16278_0xc16d;
    undefined field16279_0xc16e;
    undefined field16280_0xc16f;
    undefined field16281_0xc170;
    undefined field16282_0xc171;
    undefined field16283_0xc172;
    undefined field16284_0xc173;
    undefined field16285_0xc174;
    undefined field16286_0xc175;
    undefined field16287_0xc176;
    undefined field16288_0xc177;
    undefined field16289_0xc178;
    undefined field16290_0xc179;
    undefined field16291_0xc17a;
    undefined field16292_0xc17b;
    undefined field16293_0xc17c;
    undefined field16294_0xc17d;
    undefined field16295_0xc17e;
    undefined field16296_0xc17f;
    undefined field16297_0xc180;
    undefined field16298_0xc181;
    undefined field16299_0xc182;
    undefined field16300_0xc183;
    undefined field16301_0xc184;
    undefined field16302_0xc185;
    undefined field16303_0xc186;
    undefined field16304_0xc187;
    undefined field16305_0xc188;
    undefined field16306_0xc189;
    undefined field16307_0xc18a;
    undefined field16308_0xc18b;
    undefined field16309_0xc18c;
    undefined field16310_0xc18d;
    undefined field16311_0xc18e;
    undefined field16312_0xc18f;
    undefined field16313_0xc190;
    undefined field16314_0xc191;
    undefined field16315_0xc192;
    undefined field16316_0xc193;
    undefined field16317_0xc194;
    undefined field16318_0xc195;
    undefined field16319_0xc196;
    undefined field16320_0xc197;
    undefined field16321_0xc198;
    undefined field16322_0xc199;
    undefined field16323_0xc19a;
    undefined field16324_0xc19b;
    undefined field16325_0xc19c;
    undefined field16326_0xc19d;
    undefined field16327_0xc19e;
    undefined field16328_0xc19f;
    undefined field16329_0xc1a0;
    undefined field16330_0xc1a1;
    undefined field16331_0xc1a2;
    undefined field16332_0xc1a3;
    undefined field16333_0xc1a4;
    undefined field16334_0xc1a5;
    undefined field16335_0xc1a6;
    undefined field16336_0xc1a7;
    undefined field16337_0xc1a8;
    undefined field16338_0xc1a9;
    undefined field16339_0xc1aa;
    undefined field16340_0xc1ab;
    undefined field16341_0xc1ac;
    undefined field16342_0xc1ad;
    undefined field16343_0xc1ae;
    undefined field16344_0xc1af;
    undefined field16345_0xc1b0;
    undefined field16346_0xc1b1;
    undefined field16347_0xc1b2;
    undefined field16348_0xc1b3;
    undefined field16349_0xc1b4;
    undefined field16350_0xc1b5;
    undefined field16351_0xc1b6;
    undefined field16352_0xc1b7;
    undefined field16353_0xc1b8;
    undefined field16354_0xc1b9;
    undefined field16355_0xc1ba;
    undefined field16356_0xc1bb;
    undefined field16357_0xc1bc;
    undefined field16358_0xc1bd;
    undefined field16359_0xc1be;
    undefined field16360_0xc1bf;
    undefined field16361_0xc1c0;
    undefined field16362_0xc1c1;
    undefined field16363_0xc1c2;
    undefined field16364_0xc1c3;
    undefined field16365_0xc1c4;
    undefined field16366_0xc1c5;
    undefined field16367_0xc1c6;
    undefined field16368_0xc1c7;
    undefined field16369_0xc1c8;
    undefined field16370_0xc1c9;
    undefined field16371_0xc1ca;
    undefined field16372_0xc1cb;
    undefined field16373_0xc1cc;
    undefined field16374_0xc1cd;
    undefined field16375_0xc1ce;
    undefined field16376_0xc1cf;
    undefined field16377_0xc1d0;
    undefined field16378_0xc1d1;
    undefined field16379_0xc1d2;
    undefined field16380_0xc1d3;
    undefined field16381_0xc1d4;
    undefined field16382_0xc1d5;
    undefined field16383_0xc1d6;
    undefined field16384_0xc1d7;
    undefined field16385_0xc1d8;
    undefined field16386_0xc1d9;
    undefined field16387_0xc1da;
    undefined field16388_0xc1db;
    undefined field16389_0xc1dc;
    undefined field16390_0xc1dd;
    undefined field16391_0xc1de;
    undefined field16392_0xc1df;
    undefined field16393_0xc1e0;
    undefined field16394_0xc1e1;
    undefined field16395_0xc1e2;
    undefined field16396_0xc1e3;
    undefined field16397_0xc1e4;
    undefined field16398_0xc1e5;
    undefined field16399_0xc1e6;
    undefined field16400_0xc1e7;
    undefined field16401_0xc1e8;
    undefined field16402_0xc1e9;
    undefined field16403_0xc1ea;
    undefined field16404_0xc1eb;
    undefined field16405_0xc1ec;
    undefined field16406_0xc1ed;
    undefined field16407_0xc1ee;
    undefined field16408_0xc1ef;
    undefined field16409_0xc1f0;
    undefined field16410_0xc1f1;
    undefined field16411_0xc1f2;
    undefined field16412_0xc1f3;
    undefined field16413_0xc1f4;
    undefined field16414_0xc1f5;
    undefined field16415_0xc1f6;
    undefined field16416_0xc1f7;
    undefined field16417_0xc1f8;
    undefined field16418_0xc1f9;
    undefined field16419_0xc1fa;
    undefined field16420_0xc1fb;
    undefined field16421_0xc1fc;
    undefined field16422_0xc1fd;
    undefined field16423_0xc1fe;
    undefined field16424_0xc1ff;
    undefined field16425_0xc200;
    undefined field16426_0xc201;
    undefined field16427_0xc202;
    undefined field16428_0xc203;
    undefined field16429_0xc204;
    undefined field16430_0xc205;
    undefined field16431_0xc206;
    undefined field16432_0xc207;
    undefined field16433_0xc208;
    undefined field16434_0xc209;
    undefined field16435_0xc20a;
    undefined field16436_0xc20b;
    undefined field16437_0xc20c;
    undefined field16438_0xc20d;
    undefined field16439_0xc20e;
    undefined field16440_0xc20f;
    undefined field16441_0xc210;
    undefined field16442_0xc211;
    undefined field16443_0xc212;
    undefined field16444_0xc213;
    undefined field16445_0xc214;
    undefined field16446_0xc215;
    undefined field16447_0xc216;
    undefined field16448_0xc217;
    undefined field16449_0xc218;
    undefined field16450_0xc219;
    undefined field16451_0xc21a;
    undefined field16452_0xc21b;
    undefined field16453_0xc21c;
    undefined field16454_0xc21d;
    undefined field16455_0xc21e;
    undefined field16456_0xc21f;
    undefined field16457_0xc220;
    undefined field16458_0xc221;
    undefined field16459_0xc222;
    undefined field16460_0xc223;
    undefined field16461_0xc224;
    undefined field16462_0xc225;
    undefined field16463_0xc226;
    undefined field16464_0xc227;
    undefined field16465_0xc228;
    undefined field16466_0xc229;
    undefined field16467_0xc22a;
    undefined field16468_0xc22b;
    undefined field16469_0xc22c;
    undefined field16470_0xc22d;
    undefined field16471_0xc22e;
    undefined field16472_0xc22f;
    undefined field16473_0xc230;
    undefined field16474_0xc231;
    undefined field16475_0xc232;
    undefined field16476_0xc233;
    undefined field16477_0xc234;
    undefined field16478_0xc235;
    undefined field16479_0xc236;
    undefined field16480_0xc237;
    undefined field16481_0xc238;
    undefined field16482_0xc239;
    undefined field16483_0xc23a;
    undefined field16484_0xc23b;
    undefined field16485_0xc23c;
    undefined field16486_0xc23d;
    undefined field16487_0xc23e;
    undefined field16488_0xc23f;
    undefined field16489_0xc240;
    undefined field16490_0xc241;
    undefined field16491_0xc242;
    undefined field16492_0xc243;
    undefined field16493_0xc244;
    undefined field16494_0xc245;
    undefined field16495_0xc246;
    undefined field16496_0xc247;
    undefined field16497_0xc248;
    undefined field16498_0xc249;
    undefined field16499_0xc24a;
    undefined field16500_0xc24b;
    undefined field16501_0xc24c;
    undefined field16502_0xc24d;
    undefined field16503_0xc24e;
    undefined field16504_0xc24f;
    undefined field16505_0xc250;
    undefined field16506_0xc251;
    undefined field16507_0xc252;
    undefined field16508_0xc253;
    undefined field16509_0xc254;
    undefined field16510_0xc255;
    undefined field16511_0xc256;
    undefined field16512_0xc257;
    undefined field16513_0xc258;
    undefined field16514_0xc259;
    undefined field16515_0xc25a;
    undefined field16516_0xc25b;
    undefined field16517_0xc25c;
    undefined field16518_0xc25d;
    undefined field16519_0xc25e;
    undefined field16520_0xc25f;
    undefined field16521_0xc260;
    undefined field16522_0xc261;
    undefined field16523_0xc262;
    undefined field16524_0xc263;
    undefined field16525_0xc264;
    undefined field16526_0xc265;
    undefined field16527_0xc266;
    undefined field16528_0xc267;
    undefined field16529_0xc268;
    undefined field16530_0xc269;
    undefined field16531_0xc26a;
    undefined field16532_0xc26b;
    undefined field16533_0xc26c;
    undefined field16534_0xc26d;
    undefined field16535_0xc26e;
    undefined field16536_0xc26f;
    undefined field16537_0xc270;
    undefined field16538_0xc271;
    undefined field16539_0xc272;
    undefined field16540_0xc273;
    undefined field16541_0xc274;
    undefined field16542_0xc275;
    undefined field16543_0xc276;
    undefined field16544_0xc277;
    undefined field16545_0xc278;
    undefined field16546_0xc279;
    undefined field16547_0xc27a;
    undefined field16548_0xc27b;
    undefined field16549_0xc27c;
    undefined field16550_0xc27d;
    undefined field16551_0xc27e;
    undefined field16552_0xc27f;
    undefined field16553_0xc280;
    undefined field16554_0xc281;
    undefined field16555_0xc282;
    undefined field16556_0xc283;
    undefined field16557_0xc284;
    undefined field16558_0xc285;
    undefined field16559_0xc286;
    undefined field16560_0xc287;
    undefined field16561_0xc288;
    undefined field16562_0xc289;
    undefined field16563_0xc28a;
    undefined field16564_0xc28b;
    undefined field16565_0xc28c;
    undefined field16566_0xc28d;
    undefined field16567_0xc28e;
    undefined field16568_0xc28f;
    undefined field16569_0xc290;
    undefined field16570_0xc291;
    undefined field16571_0xc292;
    undefined field16572_0xc293;
    undefined field16573_0xc294;
    undefined field16574_0xc295;
    undefined field16575_0xc296;
    undefined field16576_0xc297;
    undefined field16577_0xc298;
    undefined field16578_0xc299;
    undefined field16579_0xc29a;
    undefined field16580_0xc29b;
    undefined field16581_0xc29c;
    undefined field16582_0xc29d;
    undefined field16583_0xc29e;
    undefined field16584_0xc29f;
    undefined field16585_0xc2a0;
    undefined field16586_0xc2a1;
    undefined field16587_0xc2a2;
    undefined field16588_0xc2a3;
    undefined field16589_0xc2a4;
    undefined field16590_0xc2a5;
    undefined field16591_0xc2a6;
    undefined field16592_0xc2a7;
    undefined field16593_0xc2a8;
    undefined field16594_0xc2a9;
    undefined field16595_0xc2aa;
    undefined field16596_0xc2ab;
    undefined field16597_0xc2ac;
    undefined field16598_0xc2ad;
    undefined field16599_0xc2ae;
    undefined field16600_0xc2af;
    undefined field16601_0xc2b0;
    undefined field16602_0xc2b1;
    undefined field16603_0xc2b2;
    undefined field16604_0xc2b3;
    undefined field16605_0xc2b4;
    undefined field16606_0xc2b5;
    undefined field16607_0xc2b6;
    undefined field16608_0xc2b7;
    undefined field16609_0xc2b8;
    undefined field16610_0xc2b9;
    undefined field16611_0xc2ba;
    undefined field16612_0xc2bb;
    undefined field16613_0xc2bc;
    undefined field16614_0xc2bd;
    undefined field16615_0xc2be;
    undefined field16616_0xc2bf;
    undefined field16617_0xc2c0;
    undefined field16618_0xc2c1;
    undefined field16619_0xc2c2;
    undefined field16620_0xc2c3;
    undefined field16621_0xc2c4;
    undefined field16622_0xc2c5;
    undefined field16623_0xc2c6;
    undefined field16624_0xc2c7;
    undefined field16625_0xc2c8;
    undefined field16626_0xc2c9;
    undefined field16627_0xc2ca;
    undefined field16628_0xc2cb;
    undefined field16629_0xc2cc;
    undefined field16630_0xc2cd;
    undefined field16631_0xc2ce;
    undefined field16632_0xc2cf;
    undefined field16633_0xc2d0;
    undefined field16634_0xc2d1;
    undefined field16635_0xc2d2;
    undefined field16636_0xc2d3;
    undefined field16637_0xc2d4;
    undefined field16638_0xc2d5;
    undefined field16639_0xc2d6;
    undefined field16640_0xc2d7;
    undefined field16641_0xc2d8;
    undefined field16642_0xc2d9;
    undefined field16643_0xc2da;
    undefined field16644_0xc2db;
    undefined field16645_0xc2dc;
    undefined field16646_0xc2dd;
    undefined field16647_0xc2de;
    undefined field16648_0xc2df;
    undefined field16649_0xc2e0;
    undefined field16650_0xc2e1;
    undefined field16651_0xc2e2;
    undefined field16652_0xc2e3;
    undefined field16653_0xc2e4;
    undefined field16654_0xc2e5;
    undefined field16655_0xc2e6;
    undefined field16656_0xc2e7;
    undefined field16657_0xc2e8;
    undefined field16658_0xc2e9;
    undefined field16659_0xc2ea;
    undefined field16660_0xc2eb;
    undefined field16661_0xc2ec;
    undefined field16662_0xc2ed;
    undefined field16663_0xc2ee;
    undefined field16664_0xc2ef;
    undefined field16665_0xc2f0;
    undefined field16666_0xc2f1;
    undefined field16667_0xc2f2;
    undefined field16668_0xc2f3;
    undefined field16669_0xc2f4;
    undefined field16670_0xc2f5;
    undefined field16671_0xc2f6;
    undefined field16672_0xc2f7;
    undefined field16673_0xc2f8;
    undefined field16674_0xc2f9;
    undefined field16675_0xc2fa;
    undefined field16676_0xc2fb;
    undefined field16677_0xc2fc;
    undefined field16678_0xc2fd;
    undefined field16679_0xc2fe;
    undefined field16680_0xc2ff;
    undefined field16681_0xc300;
    undefined field16682_0xc301;
    undefined field16683_0xc302;
    undefined field16684_0xc303;
    undefined field16685_0xc304;
    undefined field16686_0xc305;
    undefined field16687_0xc306;
    undefined field16688_0xc307;
    undefined field16689_0xc308;
    undefined field16690_0xc309;
    undefined field16691_0xc30a;
    undefined field16692_0xc30b;
    undefined field16693_0xc30c;
    undefined field16694_0xc30d;
    undefined field16695_0xc30e;
    undefined field16696_0xc30f;
    undefined field16697_0xc310;
    undefined field16698_0xc311;
    undefined field16699_0xc312;
    undefined field16700_0xc313;
    undefined field16701_0xc314;
    undefined field16702_0xc315;
    undefined field16703_0xc316;
    undefined field16704_0xc317;
    undefined field16705_0xc318;
    undefined field16706_0xc319;
    undefined field16707_0xc31a;
    undefined field16708_0xc31b;
    undefined field16709_0xc31c;
    undefined field16710_0xc31d;
    undefined field16711_0xc31e;
    undefined field16712_0xc31f;
    undefined field16713_0xc320;
    undefined field16714_0xc321;
    undefined field16715_0xc322;
    undefined field16716_0xc323;
    undefined field16717_0xc324;
    undefined field16718_0xc325;
    undefined field16719_0xc326;
    undefined field16720_0xc327;
    undefined field16721_0xc328;
    undefined field16722_0xc329;
    undefined field16723_0xc32a;
    undefined field16724_0xc32b;
    undefined field16725_0xc32c;
    undefined field16726_0xc32d;
    undefined field16727_0xc32e;
    undefined field16728_0xc32f;
    undefined field16729_0xc330;
    undefined field16730_0xc331;
    undefined field16731_0xc332;
    undefined field16732_0xc333;
    undefined field16733_0xc334;
    undefined field16734_0xc335;
    undefined field16735_0xc336;
    undefined field16736_0xc337;
    undefined field16737_0xc338;
    undefined field16738_0xc339;
    undefined field16739_0xc33a;
    undefined field16740_0xc33b;
    undefined field16741_0xc33c;
    undefined field16742_0xc33d;
    undefined field16743_0xc33e;
    undefined field16744_0xc33f;
    undefined field16745_0xc340;
    undefined field16746_0xc341;
    undefined field16747_0xc342;
    undefined field16748_0xc343;
    undefined field16749_0xc344;
    undefined field16750_0xc345;
    undefined field16751_0xc346;
    undefined field16752_0xc347;
    undefined field16753_0xc348;
    undefined field16754_0xc349;
    undefined field16755_0xc34a;
    undefined field16756_0xc34b;
    undefined field16757_0xc34c;
    undefined field16758_0xc34d;
    undefined field16759_0xc34e;
    undefined field16760_0xc34f;
    undefined field16761_0xc350;
    undefined field16762_0xc351;
    undefined field16763_0xc352;
    undefined field16764_0xc353;
    undefined field16765_0xc354;
    undefined field16766_0xc355;
    undefined field16767_0xc356;
    undefined field16768_0xc357;
    undefined field16769_0xc358;
    undefined field16770_0xc359;
    undefined field16771_0xc35a;
    undefined field16772_0xc35b;
    undefined field16773_0xc35c;
    undefined field16774_0xc35d;
    undefined field16775_0xc35e;
    undefined field16776_0xc35f;
    undefined field16777_0xc360;
    undefined field16778_0xc361;
    undefined field16779_0xc362;
    undefined field16780_0xc363;
    undefined field16781_0xc364;
    undefined field16782_0xc365;
    undefined field16783_0xc366;
    undefined field16784_0xc367;
    undefined field16785_0xc368;
    undefined field16786_0xc369;
    undefined field16787_0xc36a;
    undefined field16788_0xc36b;
    undefined field16789_0xc36c;
    undefined field16790_0xc36d;
    undefined field16791_0xc36e;
    undefined field16792_0xc36f;
    undefined field16793_0xc370;
    undefined field16794_0xc371;
    undefined field16795_0xc372;
    undefined field16796_0xc373;
    undefined field16797_0xc374;
    undefined field16798_0xc375;
    undefined field16799_0xc376;
    undefined field16800_0xc377;
    undefined field16801_0xc378;
    undefined field16802_0xc379;
    undefined field16803_0xc37a;
    undefined field16804_0xc37b;
    undefined field16805_0xc37c;
    undefined field16806_0xc37d;
    undefined field16807_0xc37e;
    undefined field16808_0xc37f;
    undefined field16809_0xc380;
    undefined field16810_0xc381;
    undefined field16811_0xc382;
    undefined field16812_0xc383;
    undefined field16813_0xc384;
    undefined field16814_0xc385;
    undefined field16815_0xc386;
    undefined field16816_0xc387;
    undefined field16817_0xc388;
    undefined field16818_0xc389;
    undefined field16819_0xc38a;
    undefined field16820_0xc38b;
    undefined field16821_0xc38c;
    undefined field16822_0xc38d;
    undefined field16823_0xc38e;
    undefined field16824_0xc38f;
    undefined field16825_0xc390;
    undefined field16826_0xc391;
    undefined field16827_0xc392;
    undefined field16828_0xc393;
    undefined field16829_0xc394;
    undefined field16830_0xc395;
    undefined field16831_0xc396;
    undefined field16832_0xc397;
    undefined field16833_0xc398;
    undefined field16834_0xc399;
    undefined field16835_0xc39a;
    undefined field16836_0xc39b;
    undefined field16837_0xc39c;
    undefined field16838_0xc39d;
    undefined field16839_0xc39e;
    undefined field16840_0xc39f;
    undefined field16841_0xc3a0;
    undefined field16842_0xc3a1;
    undefined field16843_0xc3a2;
    undefined field16844_0xc3a3;
    undefined field16845_0xc3a4;
    undefined field16846_0xc3a5;
    undefined field16847_0xc3a6;
    undefined field16848_0xc3a7;
    undefined field16849_0xc3a8;
    undefined field16850_0xc3a9;
    undefined field16851_0xc3aa;
    undefined field16852_0xc3ab;
    undefined field16853_0xc3ac;
    undefined field16854_0xc3ad;
    undefined field16855_0xc3ae;
    undefined field16856_0xc3af;
    undefined field16857_0xc3b0;
    undefined field16858_0xc3b1;
    undefined field16859_0xc3b2;
    undefined field16860_0xc3b3;
    undefined field16861_0xc3b4;
    undefined field16862_0xc3b5;
    undefined field16863_0xc3b6;
    undefined field16864_0xc3b7;
    undefined field16865_0xc3b8;
    undefined field16866_0xc3b9;
    undefined field16867_0xc3ba;
    undefined field16868_0xc3bb;
    undefined field16869_0xc3bc;
    undefined field16870_0xc3bd;
    undefined field16871_0xc3be;
    undefined field16872_0xc3bf;
    undefined field16873_0xc3c0;
    undefined field16874_0xc3c1;
    undefined field16875_0xc3c2;
    undefined field16876_0xc3c3;
    undefined field16877_0xc3c4;
    undefined field16878_0xc3c5;
    undefined field16879_0xc3c6;
    undefined field16880_0xc3c7;
    undefined field16881_0xc3c8;
    undefined field16882_0xc3c9;
    undefined field16883_0xc3ca;
    undefined field16884_0xc3cb;
    undefined field16885_0xc3cc;
    undefined field16886_0xc3cd;
    undefined field16887_0xc3ce;
    undefined field16888_0xc3cf;
    undefined field16889_0xc3d0;
    undefined field16890_0xc3d1;
    undefined field16891_0xc3d2;
    undefined field16892_0xc3d3;
    undefined field16893_0xc3d4;
    undefined field16894_0xc3d5;
    undefined field16895_0xc3d6;
    undefined field16896_0xc3d7;
    undefined field16897_0xc3d8;
    undefined field16898_0xc3d9;
    undefined field16899_0xc3da;
    undefined field16900_0xc3db;
    undefined field16901_0xc3dc;
    undefined field16902_0xc3dd;
    undefined field16903_0xc3de;
    undefined field16904_0xc3df;
    undefined field16905_0xc3e0;
    undefined field16906_0xc3e1;
    undefined field16907_0xc3e2;
    undefined field16908_0xc3e3;
    undefined field16909_0xc3e4;
    undefined field16910_0xc3e5;
    undefined field16911_0xc3e6;
    undefined field16912_0xc3e7;
    undefined field16913_0xc3e8;
    undefined field16914_0xc3e9;
    undefined field16915_0xc3ea;
    undefined field16916_0xc3eb;
    undefined field16917_0xc3ec;
    undefined field16918_0xc3ed;
    undefined field16919_0xc3ee;
    undefined field16920_0xc3ef;
    undefined field16921_0xc3f0;
    undefined field16922_0xc3f1;
    undefined field16923_0xc3f2;
    undefined field16924_0xc3f3;
    undefined field16925_0xc3f4;
    undefined field16926_0xc3f5;
    undefined field16927_0xc3f6;
    undefined field16928_0xc3f7;
    undefined field16929_0xc3f8;
    undefined field16930_0xc3f9;
    undefined field16931_0xc3fa;
    undefined field16932_0xc3fb;
    undefined field16933_0xc3fc;
    undefined field16934_0xc3fd;
    undefined field16935_0xc3fe;
    undefined field16936_0xc3ff;
    undefined field16937_0xc400;
    undefined field16938_0xc401;
    undefined field16939_0xc402;
    undefined field16940_0xc403;
    undefined field16941_0xc404;
    undefined field16942_0xc405;
    undefined field16943_0xc406;
    undefined field16944_0xc407;
    undefined field16945_0xc408;
    undefined field16946_0xc409;
    undefined field16947_0xc40a;
    undefined field16948_0xc40b;
    undefined field16949_0xc40c;
    undefined field16950_0xc40d;
    undefined field16951_0xc40e;
    undefined field16952_0xc40f;
    undefined field16953_0xc410;
    undefined field16954_0xc411;
    undefined field16955_0xc412;
    undefined field16956_0xc413;
    undefined field16957_0xc414;
    undefined field16958_0xc415;
    undefined field16959_0xc416;
    undefined field16960_0xc417;
    undefined field16961_0xc418;
    undefined field16962_0xc419;
    undefined field16963_0xc41a;
    undefined field16964_0xc41b;
    undefined field16965_0xc41c;
    undefined field16966_0xc41d;
    undefined field16967_0xc41e;
    undefined field16968_0xc41f;
    undefined field16969_0xc420;
    undefined field16970_0xc421;
    undefined field16971_0xc422;
    undefined field16972_0xc423;
    undefined field16973_0xc424;
    undefined field16974_0xc425;
    undefined field16975_0xc426;
    undefined field16976_0xc427;
    undefined field16977_0xc428;
    undefined field16978_0xc429;
    undefined field16979_0xc42a;
    undefined field16980_0xc42b;
    undefined field16981_0xc42c;
    undefined field16982_0xc42d;
    undefined field16983_0xc42e;
    undefined field16984_0xc42f;
    undefined field16985_0xc430;
    undefined field16986_0xc431;
    undefined field16987_0xc432;
    undefined field16988_0xc433;
    undefined field16989_0xc434;
    undefined field16990_0xc435;
    undefined field16991_0xc436;
    undefined field16992_0xc437;
    undefined field16993_0xc438;
    undefined field16994_0xc439;
    undefined field16995_0xc43a;
    undefined field16996_0xc43b;
    undefined field16997_0xc43c;
    undefined field16998_0xc43d;
    undefined field16999_0xc43e;
    undefined field17000_0xc43f;
    undefined field17001_0xc440;
    undefined field17002_0xc441;
    undefined field17003_0xc442;
    undefined field17004_0xc443;
    undefined field17005_0xc444;
    undefined field17006_0xc445;
    undefined field17007_0xc446;
    undefined field17008_0xc447;
    undefined field17009_0xc448;
    undefined field17010_0xc449;
    undefined field17011_0xc44a;
    undefined field17012_0xc44b;
    undefined field17013_0xc44c;
    undefined field17014_0xc44d;
    undefined field17015_0xc44e;
    undefined field17016_0xc44f;
    undefined field17017_0xc450;
    undefined field17018_0xc451;
    undefined field17019_0xc452;
    undefined field17020_0xc453;
    undefined field17021_0xc454;
    undefined field17022_0xc455;
    undefined field17023_0xc456;
    undefined field17024_0xc457;
    undefined field17025_0xc458;
    undefined field17026_0xc459;
    undefined field17027_0xc45a;
    undefined field17028_0xc45b;
    undefined field17029_0xc45c;
    undefined field17030_0xc45d;
    undefined field17031_0xc45e;
    undefined field17032_0xc45f;
    undefined field17033_0xc460;
    undefined field17034_0xc461;
    undefined field17035_0xc462;
    undefined field17036_0xc463;
    undefined field17037_0xc464;
    undefined field17038_0xc465;
    undefined field17039_0xc466;
    undefined field17040_0xc467;
    undefined field17041_0xc468;
    undefined field17042_0xc469;
    undefined field17043_0xc46a;
    undefined field17044_0xc46b;
    undefined field17045_0xc46c;
    undefined field17046_0xc46d;
    undefined field17047_0xc46e;
    undefined field17048_0xc46f;
    undefined field17049_0xc470;
    undefined field17050_0xc471;
    undefined field17051_0xc472;
    undefined field17052_0xc473;
    undefined field17053_0xc474;
    undefined field17054_0xc475;
    undefined field17055_0xc476;
    undefined field17056_0xc477;
    undefined field17057_0xc478;
    undefined field17058_0xc479;
    undefined field17059_0xc47a;
    undefined field17060_0xc47b;
    undefined field17061_0xc47c;
    undefined field17062_0xc47d;
    undefined field17063_0xc47e;
    undefined field17064_0xc47f;
    undefined field17065_0xc480;
    undefined field17066_0xc481;
    undefined field17067_0xc482;
    undefined field17068_0xc483;
    undefined field17069_0xc484;
    undefined field17070_0xc485;
    undefined field17071_0xc486;
    undefined field17072_0xc487;
    undefined field17073_0xc488;
    undefined field17074_0xc489;
    undefined field17075_0xc48a;
    undefined field17076_0xc48b;
    undefined field17077_0xc48c;
    undefined field17078_0xc48d;
    undefined field17079_0xc48e;
    undefined field17080_0xc48f;
    undefined field17081_0xc490;
    undefined field17082_0xc491;
    undefined field17083_0xc492;
    undefined field17084_0xc493;
    undefined field17085_0xc494;
    undefined field17086_0xc495;
    undefined field17087_0xc496;
    undefined field17088_0xc497;
    undefined field17089_0xc498;
    undefined field17090_0xc499;
    undefined field17091_0xc49a;
    undefined field17092_0xc49b;
    undefined field17093_0xc49c;
    undefined field17094_0xc49d;
    undefined field17095_0xc49e;
    undefined field17096_0xc49f;
    undefined field17097_0xc4a0;
    undefined field17098_0xc4a1;
    undefined field17099_0xc4a2;
    undefined field17100_0xc4a3;
    undefined field17101_0xc4a4;
    undefined field17102_0xc4a5;
    undefined field17103_0xc4a6;
    undefined field17104_0xc4a7;
    undefined field17105_0xc4a8;
    undefined field17106_0xc4a9;
    undefined field17107_0xc4aa;
    undefined field17108_0xc4ab;
    undefined field17109_0xc4ac;
    undefined field17110_0xc4ad;
    undefined field17111_0xc4ae;
    undefined field17112_0xc4af;
    undefined field17113_0xc4b0;
    undefined field17114_0xc4b1;
    undefined field17115_0xc4b2;
    undefined field17116_0xc4b3;
    undefined field17117_0xc4b4;
    undefined field17118_0xc4b5;
    undefined field17119_0xc4b6;
    undefined field17120_0xc4b7;
    undefined field17121_0xc4b8;
    undefined field17122_0xc4b9;
    undefined field17123_0xc4ba;
    undefined field17124_0xc4bb;
    undefined field17125_0xc4bc;
    undefined field17126_0xc4bd;
    undefined field17127_0xc4be;
    undefined field17128_0xc4bf;
    undefined field17129_0xc4c0;
    undefined field17130_0xc4c1;
    undefined field17131_0xc4c2;
    undefined field17132_0xc4c3;
    undefined field17133_0xc4c4;
    undefined field17134_0xc4c5;
    undefined field17135_0xc4c6;
    undefined field17136_0xc4c7;
    undefined field17137_0xc4c8;
    undefined field17138_0xc4c9;
    undefined field17139_0xc4ca;
    undefined field17140_0xc4cb;
    undefined field17141_0xc4cc;
    undefined field17142_0xc4cd;
    undefined field17143_0xc4ce;
    undefined field17144_0xc4cf;
    undefined field17145_0xc4d0;
    undefined field17146_0xc4d1;
    undefined field17147_0xc4d2;
    undefined field17148_0xc4d3;
    undefined field17149_0xc4d4;
    undefined field17150_0xc4d5;
    undefined field17151_0xc4d6;
    undefined field17152_0xc4d7;
    undefined field17153_0xc4d8;
    undefined field17154_0xc4d9;
    undefined field17155_0xc4da;
    undefined field17156_0xc4db;
    undefined field17157_0xc4dc;
    undefined field17158_0xc4dd;
    undefined field17159_0xc4de;
    undefined field17160_0xc4df;
    undefined field17161_0xc4e0;
    undefined field17162_0xc4e1;
    undefined field17163_0xc4e2;
    undefined field17164_0xc4e3;
    undefined field17165_0xc4e4;
    undefined field17166_0xc4e5;
    undefined field17167_0xc4e6;
    undefined field17168_0xc4e7;
    undefined field17169_0xc4e8;
    undefined field17170_0xc4e9;
    undefined field17171_0xc4ea;
    undefined field17172_0xc4eb;
    undefined field17173_0xc4ec;
    undefined field17174_0xc4ed;
    undefined field17175_0xc4ee;
    undefined field17176_0xc4ef;
    undefined field17177_0xc4f0;
    undefined field17178_0xc4f1;
    undefined field17179_0xc4f2;
    undefined field17180_0xc4f3;
    undefined field17181_0xc4f4;
    undefined field17182_0xc4f5;
    undefined field17183_0xc4f6;
    undefined field17184_0xc4f7;
    undefined field17185_0xc4f8;
    undefined field17186_0xc4f9;
    undefined field17187_0xc4fa;
    undefined field17188_0xc4fb;
    undefined field17189_0xc4fc;
    undefined field17190_0xc4fd;
    undefined field17191_0xc4fe;
    undefined field17192_0xc4ff;
    undefined field17193_0xc500;
    undefined field17194_0xc501;
    undefined field17195_0xc502;
    undefined field17196_0xc503;
    undefined field17197_0xc504;
    undefined field17198_0xc505;
    undefined field17199_0xc506;
    undefined field17200_0xc507;
    undefined field17201_0xc508;
    undefined field17202_0xc509;
    undefined field17203_0xc50a;
    undefined field17204_0xc50b;
    undefined field17205_0xc50c;
    undefined field17206_0xc50d;
    undefined field17207_0xc50e;
    undefined field17208_0xc50f;
    undefined field17209_0xc510;
    undefined field17210_0xc511;
    undefined field17211_0xc512;
    undefined field17212_0xc513;
    undefined field17213_0xc514;
    undefined field17214_0xc515;
    undefined field17215_0xc516;
    undefined field17216_0xc517;
    undefined field17217_0xc518;
    undefined field17218_0xc519;
    undefined field17219_0xc51a;
    undefined field17220_0xc51b;
    undefined field17221_0xc51c;
    undefined field17222_0xc51d;
    undefined field17223_0xc51e;
    undefined field17224_0xc51f;
    undefined field17225_0xc520;
    undefined field17226_0xc521;
    undefined field17227_0xc522;
    undefined field17228_0xc523;
    undefined field17229_0xc524;
    undefined field17230_0xc525;
    undefined field17231_0xc526;
    undefined field17232_0xc527;
    undefined field17233_0xc528;
    undefined field17234_0xc529;
    undefined field17235_0xc52a;
    undefined field17236_0xc52b;
    undefined field17237_0xc52c;
    undefined field17238_0xc52d;
    undefined field17239_0xc52e;
    undefined field17240_0xc52f;
    undefined field17241_0xc530;
    undefined field17242_0xc531;
    undefined field17243_0xc532;
    undefined field17244_0xc533;
    undefined field17245_0xc534;
    undefined field17246_0xc535;
    undefined field17247_0xc536;
    undefined field17248_0xc537;
    undefined field17249_0xc538;
    undefined field17250_0xc539;
    undefined field17251_0xc53a;
    undefined field17252_0xc53b;
    undefined field17253_0xc53c;
    undefined field17254_0xc53d;
    undefined field17255_0xc53e;
    undefined field17256_0xc53f;
    undefined field17257_0xc540;
    undefined field17258_0xc541;
    undefined field17259_0xc542;
    undefined field17260_0xc543;
    undefined field17261_0xc544;
    undefined field17262_0xc545;
    undefined field17263_0xc546;
    undefined field17264_0xc547;
    undefined field17265_0xc548;
    undefined field17266_0xc549;
    undefined field17267_0xc54a;
    undefined field17268_0xc54b;
    undefined field17269_0xc54c;
    undefined field17270_0xc54d;
    undefined field17271_0xc54e;
    undefined field17272_0xc54f;
    undefined field17273_0xc550;
    undefined field17274_0xc551;
    undefined field17275_0xc552;
    undefined field17276_0xc553;
    undefined field17277_0xc554;
    undefined field17278_0xc555;
    undefined field17279_0xc556;
    undefined field17280_0xc557;
    undefined field17281_0xc558;
    undefined field17282_0xc559;
    undefined field17283_0xc55a;
    undefined field17284_0xc55b;
    undefined field17285_0xc55c;
    undefined field17286_0xc55d;
    undefined field17287_0xc55e;
    undefined field17288_0xc55f;
    undefined field17289_0xc560;
    undefined field17290_0xc561;
    undefined field17291_0xc562;
    undefined field17292_0xc563;
    undefined field17293_0xc564;
    undefined field17294_0xc565;
    undefined field17295_0xc566;
    undefined field17296_0xc567;
    undefined field17297_0xc568;
    undefined field17298_0xc569;
    undefined field17299_0xc56a;
    undefined field17300_0xc56b;
    undefined field17301_0xc56c;
    undefined field17302_0xc56d;
    undefined field17303_0xc56e;
    undefined field17304_0xc56f;
    undefined field17305_0xc570;
    undefined field17306_0xc571;
    undefined field17307_0xc572;
    undefined field17308_0xc573;
    undefined field17309_0xc574;
    undefined field17310_0xc575;
    undefined field17311_0xc576;
    undefined field17312_0xc577;
    undefined field17313_0xc578;
    undefined field17314_0xc579;
    undefined field17315_0xc57a;
    undefined field17316_0xc57b;
    undefined field17317_0xc57c;
    undefined field17318_0xc57d;
    undefined field17319_0xc57e;
    undefined field17320_0xc57f;
    undefined field17321_0xc580;
    undefined field17322_0xc581;
    undefined field17323_0xc582;
    undefined field17324_0xc583;
    undefined field17325_0xc584;
    undefined field17326_0xc585;
    undefined field17327_0xc586;
    undefined field17328_0xc587;
    undefined field17329_0xc588;
    undefined field17330_0xc589;
    undefined field17331_0xc58a;
    undefined field17332_0xc58b;
    undefined field17333_0xc58c;
    undefined field17334_0xc58d;
    undefined field17335_0xc58e;
    undefined field17336_0xc58f;
    undefined field17337_0xc590;
    undefined field17338_0xc591;
    undefined field17339_0xc592;
    undefined field17340_0xc593;
    undefined field17341_0xc594;
    undefined field17342_0xc595;
    undefined field17343_0xc596;
    undefined field17344_0xc597;
    undefined field17345_0xc598;
    undefined field17346_0xc599;
    undefined field17347_0xc59a;
    undefined field17348_0xc59b;
    undefined field17349_0xc59c;
    undefined field17350_0xc59d;
    undefined field17351_0xc59e;
    undefined field17352_0xc59f;
    undefined field17353_0xc5a0;
    undefined field17354_0xc5a1;
    undefined field17355_0xc5a2;
    undefined field17356_0xc5a3;
    undefined field17357_0xc5a4;
    undefined field17358_0xc5a5;
    undefined field17359_0xc5a6;
    undefined field17360_0xc5a7;
    undefined field17361_0xc5a8;
    undefined field17362_0xc5a9;
    undefined field17363_0xc5aa;
    undefined field17364_0xc5ab;
    undefined field17365_0xc5ac;
    undefined field17366_0xc5ad;
    undefined field17367_0xc5ae;
    undefined field17368_0xc5af;
    undefined field17369_0xc5b0;
    undefined field17370_0xc5b1;
    undefined field17371_0xc5b2;
    undefined field17372_0xc5b3;
    undefined field17373_0xc5b4;
    undefined field17374_0xc5b5;
    undefined field17375_0xc5b6;
    undefined field17376_0xc5b7;
    undefined field17377_0xc5b8;
    undefined field17378_0xc5b9;
    undefined field17379_0xc5ba;
    undefined field17380_0xc5bb;
    undefined field17381_0xc5bc;
    undefined field17382_0xc5bd;
    undefined field17383_0xc5be;
    undefined field17384_0xc5bf;
    undefined field17385_0xc5c0;
    undefined field17386_0xc5c1;
    undefined field17387_0xc5c2;
    undefined field17388_0xc5c3;
    undefined field17389_0xc5c4;
    undefined field17390_0xc5c5;
    undefined field17391_0xc5c6;
    undefined field17392_0xc5c7;
    undefined field17393_0xc5c8;
    undefined field17394_0xc5c9;
    undefined field17395_0xc5ca;
    undefined field17396_0xc5cb;
    undefined field17397_0xc5cc;
    undefined field17398_0xc5cd;
    undefined field17399_0xc5ce;
    undefined field17400_0xc5cf;
    undefined field17401_0xc5d0;
    undefined field17402_0xc5d1;
    undefined field17403_0xc5d2;
    undefined field17404_0xc5d3;
    undefined field17405_0xc5d4;
    undefined field17406_0xc5d5;
    undefined field17407_0xc5d6;
    undefined field17408_0xc5d7;
    undefined field17409_0xc5d8;
    undefined field17410_0xc5d9;
    undefined field17411_0xc5da;
    undefined field17412_0xc5db;
    undefined field17413_0xc5dc;
    undefined field17414_0xc5dd;
    undefined field17415_0xc5de;
    undefined field17416_0xc5df;
    undefined field17417_0xc5e0;
    undefined field17418_0xc5e1;
    undefined field17419_0xc5e2;
    undefined field17420_0xc5e3;
    undefined field17421_0xc5e4;
    undefined field17422_0xc5e5;
    undefined field17423_0xc5e6;
    undefined field17424_0xc5e7;
    undefined field17425_0xc5e8;
    undefined field17426_0xc5e9;
    undefined field17427_0xc5ea;
    undefined field17428_0xc5eb;
    undefined field17429_0xc5ec;
    undefined field17430_0xc5ed;
    undefined field17431_0xc5ee;
    undefined field17432_0xc5ef;
    undefined field17433_0xc5f0;
    undefined field17434_0xc5f1;
    undefined field17435_0xc5f2;
    undefined field17436_0xc5f3;
    undefined field17437_0xc5f4;
    undefined field17438_0xc5f5;
    undefined field17439_0xc5f6;
    undefined field17440_0xc5f7;
    undefined field17441_0xc5f8;
    undefined field17442_0xc5f9;
    undefined field17443_0xc5fa;
    undefined field17444_0xc5fb;
    undefined field17445_0xc5fc;
    undefined field17446_0xc5fd;
    undefined field17447_0xc5fe;
    undefined field17448_0xc5ff;
    undefined field17449_0xc600;
    undefined field17450_0xc601;
    undefined field17451_0xc602;
    undefined field17452_0xc603;
    undefined field17453_0xc604;
    undefined field17454_0xc605;
    undefined field17455_0xc606;
    undefined field17456_0xc607;
    undefined field17457_0xc608;
    undefined field17458_0xc609;
    undefined field17459_0xc60a;
    undefined field17460_0xc60b;
    undefined field17461_0xc60c;
    undefined field17462_0xc60d;
    undefined field17463_0xc60e;
    undefined field17464_0xc60f;
    undefined field17465_0xc610;
    undefined field17466_0xc611;
    undefined field17467_0xc612;
    undefined field17468_0xc613;
    undefined field17469_0xc614;
    undefined field17470_0xc615;
    undefined field17471_0xc616;
    undefined field17472_0xc617;
    undefined field17473_0xc618;
    undefined field17474_0xc619;
    undefined field17475_0xc61a;
    undefined field17476_0xc61b;
    undefined field17477_0xc61c;
    undefined field17478_0xc61d;
    undefined field17479_0xc61e;
    undefined field17480_0xc61f;
    undefined field17481_0xc620;
    undefined field17482_0xc621;
    undefined field17483_0xc622;
    undefined field17484_0xc623;
    undefined field17485_0xc624;
    undefined field17486_0xc625;
    undefined field17487_0xc626;
    undefined field17488_0xc627;
    undefined field17489_0xc628;
    undefined field17490_0xc629;
    undefined field17491_0xc62a;
    undefined field17492_0xc62b;
    undefined field17493_0xc62c;
    undefined field17494_0xc62d;
    undefined field17495_0xc62e;
    undefined field17496_0xc62f;
    undefined field17497_0xc630;
    undefined field17498_0xc631;
    undefined field17499_0xc632;
    undefined field17500_0xc633;
    undefined field17501_0xc634;
    undefined field17502_0xc635;
    undefined field17503_0xc636;
    undefined field17504_0xc637;
    undefined field17505_0xc638;
    undefined field17506_0xc639;
    undefined field17507_0xc63a;
    undefined field17508_0xc63b;
    undefined field17509_0xc63c;
    undefined field17510_0xc63d;
    undefined field17511_0xc63e;
    undefined field17512_0xc63f;
    undefined field17513_0xc640;
    undefined field17514_0xc641;
    undefined field17515_0xc642;
    undefined field17516_0xc643;
    undefined field17517_0xc644;
    undefined field17518_0xc645;
    undefined field17519_0xc646;
    undefined field17520_0xc647;
    undefined field17521_0xc648;
    undefined field17522_0xc649;
    undefined field17523_0xc64a;
    undefined field17524_0xc64b;
    undefined field17525_0xc64c;
    undefined field17526_0xc64d;
    undefined field17527_0xc64e;
    undefined field17528_0xc64f;
    undefined field17529_0xc650;
    undefined field17530_0xc651;
    undefined field17531_0xc652;
    undefined field17532_0xc653;
    undefined field17533_0xc654;
    undefined field17534_0xc655;
    undefined field17535_0xc656;
    undefined field17536_0xc657;
    undefined field17537_0xc658;
    undefined field17538_0xc659;
    undefined field17539_0xc65a;
    undefined field17540_0xc65b;
    undefined field17541_0xc65c;
    undefined field17542_0xc65d;
    undefined field17543_0xc65e;
    undefined field17544_0xc65f;
    undefined field17545_0xc660;
    undefined field17546_0xc661;
    undefined field17547_0xc662;
    undefined field17548_0xc663;
    undefined field17549_0xc664;
    undefined field17550_0xc665;
    undefined field17551_0xc666;
    undefined field17552_0xc667;
    undefined field17553_0xc668;
    undefined field17554_0xc669;
    undefined field17555_0xc66a;
    undefined field17556_0xc66b;
    undefined field17557_0xc66c;
    undefined field17558_0xc66d;
    undefined field17559_0xc66e;
    undefined field17560_0xc66f;
    undefined field17561_0xc670;
    undefined field17562_0xc671;
    undefined field17563_0xc672;
    undefined field17564_0xc673;
    undefined field17565_0xc674;
    undefined field17566_0xc675;
    undefined field17567_0xc676;
    undefined field17568_0xc677;
    undefined field17569_0xc678;
    undefined field17570_0xc679;
    undefined field17571_0xc67a;
    undefined field17572_0xc67b;
    undefined field17573_0xc67c;
    undefined field17574_0xc67d;
    undefined field17575_0xc67e;
    undefined field17576_0xc67f;
    undefined field17577_0xc680;
    undefined field17578_0xc681;
    undefined field17579_0xc682;
    undefined field17580_0xc683;
    undefined field17581_0xc684;
    undefined field17582_0xc685;
    undefined field17583_0xc686;
    undefined field17584_0xc687;
    undefined field17585_0xc688;
    undefined field17586_0xc689;
    undefined field17587_0xc68a;
    undefined field17588_0xc68b;
    undefined field17589_0xc68c;
    undefined field17590_0xc68d;
    undefined field17591_0xc68e;
    undefined field17592_0xc68f;
    undefined field17593_0xc690;
    undefined field17594_0xc691;
    undefined field17595_0xc692;
    undefined field17596_0xc693;
    undefined field17597_0xc694;
    undefined field17598_0xc695;
    undefined field17599_0xc696;
    undefined field17600_0xc697;
    undefined field17601_0xc698;
    undefined field17602_0xc699;
    undefined field17603_0xc69a;
    undefined field17604_0xc69b;
    undefined field17605_0xc69c;
    undefined field17606_0xc69d;
    undefined field17607_0xc69e;
    undefined field17608_0xc69f;
    undefined field17609_0xc6a0;
    undefined field17610_0xc6a1;
    undefined field17611_0xc6a2;
    undefined field17612_0xc6a3;
    undefined field17613_0xc6a4;
    undefined field17614_0xc6a5;
    undefined field17615_0xc6a6;
    undefined field17616_0xc6a7;
    undefined field17617_0xc6a8;
    undefined field17618_0xc6a9;
    undefined field17619_0xc6aa;
    undefined field17620_0xc6ab;
    undefined field17621_0xc6ac;
    undefined field17622_0xc6ad;
    undefined field17623_0xc6ae;
    undefined field17624_0xc6af;
    undefined field17625_0xc6b0;
    undefined field17626_0xc6b1;
    undefined field17627_0xc6b2;
    undefined field17628_0xc6b3;
    undefined field17629_0xc6b4;
    undefined field17630_0xc6b5;
    undefined field17631_0xc6b6;
    undefined field17632_0xc6b7;
    undefined field17633_0xc6b8;
    undefined field17634_0xc6b9;
    undefined field17635_0xc6ba;
    undefined field17636_0xc6bb;
    undefined field17637_0xc6bc;
    undefined field17638_0xc6bd;
    undefined field17639_0xc6be;
    undefined field17640_0xc6bf;
    undefined field17641_0xc6c0;
    undefined field17642_0xc6c1;
    undefined field17643_0xc6c2;
    undefined field17644_0xc6c3;
    undefined field17645_0xc6c4;
    undefined field17646_0xc6c5;
    undefined field17647_0xc6c6;
    undefined field17648_0xc6c7;
    undefined field17649_0xc6c8;
    undefined field17650_0xc6c9;
    undefined field17651_0xc6ca;
    undefined field17652_0xc6cb;
    undefined field17653_0xc6cc;
    undefined field17654_0xc6cd;
    undefined field17655_0xc6ce;
    undefined field17656_0xc6cf;
    undefined field17657_0xc6d0;
    undefined field17658_0xc6d1;
    undefined field17659_0xc6d2;
    undefined field17660_0xc6d3;
    undefined field17661_0xc6d4;
    undefined field17662_0xc6d5;
    undefined field17663_0xc6d6;
    undefined field17664_0xc6d7;
    undefined field17665_0xc6d8;
    undefined field17666_0xc6d9;
    undefined field17667_0xc6da;
    undefined field17668_0xc6db;
    undefined field17669_0xc6dc;
    undefined field17670_0xc6dd;
    undefined field17671_0xc6de;
    undefined field17672_0xc6df;
    undefined field17673_0xc6e0;
    undefined field17674_0xc6e1;
    undefined field17675_0xc6e2;
    undefined field17676_0xc6e3;
    undefined field17677_0xc6e4;
    undefined field17678_0xc6e5;
    undefined field17679_0xc6e6;
    undefined field17680_0xc6e7;
    undefined field17681_0xc6e8;
    undefined field17682_0xc6e9;
    undefined field17683_0xc6ea;
    undefined field17684_0xc6eb;
    undefined field17685_0xc6ec;
    undefined field17686_0xc6ed;
    undefined field17687_0xc6ee;
    undefined field17688_0xc6ef;
    undefined field17689_0xc6f0;
    undefined field17690_0xc6f1;
    undefined field17691_0xc6f2;
    undefined field17692_0xc6f3;
    undefined field17693_0xc6f4;
    undefined field17694_0xc6f5;
    undefined field17695_0xc6f6;
    undefined field17696_0xc6f7;
    undefined field17697_0xc6f8;
    undefined field17698_0xc6f9;
    undefined field17699_0xc6fa;
    undefined field17700_0xc6fb;
    undefined field17701_0xc6fc;
    undefined field17702_0xc6fd;
    undefined field17703_0xc6fe;
    undefined field17704_0xc6ff;
    undefined field17705_0xc700;
    undefined field17706_0xc701;
    undefined field17707_0xc702;
    undefined field17708_0xc703;
    undefined field17709_0xc704;
    undefined field17710_0xc705;
    undefined field17711_0xc706;
    undefined field17712_0xc707;
    undefined field17713_0xc708;
    undefined field17714_0xc709;
    undefined field17715_0xc70a;
    undefined field17716_0xc70b;
    undefined field17717_0xc70c;
    undefined field17718_0xc70d;
    undefined field17719_0xc70e;
    undefined field17720_0xc70f;
    undefined field17721_0xc710;
    undefined field17722_0xc711;
    undefined field17723_0xc712;
    undefined field17724_0xc713;
    undefined field17725_0xc714;
    undefined field17726_0xc715;
    undefined field17727_0xc716;
    undefined field17728_0xc717;
    undefined field17729_0xc718;
    undefined field17730_0xc719;
    undefined field17731_0xc71a;
    undefined field17732_0xc71b;
    undefined field17733_0xc71c;
    undefined field17734_0xc71d;
    undefined field17735_0xc71e;
    undefined field17736_0xc71f;
    undefined field17737_0xc720;
    undefined field17738_0xc721;
    undefined field17739_0xc722;
    undefined field17740_0xc723;
    undefined field17741_0xc724;
    undefined field17742_0xc725;
    undefined field17743_0xc726;
    undefined field17744_0xc727;
    undefined field17745_0xc728;
    undefined field17746_0xc729;
    undefined field17747_0xc72a;
    undefined field17748_0xc72b;
    undefined field17749_0xc72c;
    undefined field17750_0xc72d;
    undefined field17751_0xc72e;
    undefined field17752_0xc72f;
    undefined field17753_0xc730;
    undefined field17754_0xc731;
    undefined field17755_0xc732;
    undefined field17756_0xc733;
    undefined field17757_0xc734;
    undefined field17758_0xc735;
    undefined field17759_0xc736;
    undefined field17760_0xc737;
    undefined field17761_0xc738;
    undefined field17762_0xc739;
    undefined field17763_0xc73a;
    undefined field17764_0xc73b;
    undefined field17765_0xc73c;
    undefined field17766_0xc73d;
    undefined field17767_0xc73e;
    undefined field17768_0xc73f;
    undefined field17769_0xc740;
    undefined field17770_0xc741;
    undefined field17771_0xc742;
    undefined field17772_0xc743;
    undefined field17773_0xc744;
    undefined field17774_0xc745;
    undefined field17775_0xc746;
    undefined field17776_0xc747;
    undefined field17777_0xc748;
    undefined field17778_0xc749;
    undefined field17779_0xc74a;
    undefined field17780_0xc74b;
    undefined field17781_0xc74c;
    undefined field17782_0xc74d;
    undefined field17783_0xc74e;
    undefined field17784_0xc74f;
    undefined field17785_0xc750;
    undefined field17786_0xc751;
    undefined field17787_0xc752;
    undefined field17788_0xc753;
    undefined field17789_0xc754;
    undefined field17790_0xc755;
    undefined field17791_0xc756;
    undefined field17792_0xc757;
    undefined field17793_0xc758;
    undefined field17794_0xc759;
    undefined field17795_0xc75a;
    undefined field17796_0xc75b;
    undefined field17797_0xc75c;
    undefined field17798_0xc75d;
    undefined field17799_0xc75e;
    undefined field17800_0xc75f;
    undefined field17801_0xc760;
    undefined field17802_0xc761;
    undefined field17803_0xc762;
    undefined field17804_0xc763;
    undefined field17805_0xc764;
    undefined field17806_0xc765;
    undefined field17807_0xc766;
    undefined field17808_0xc767;
    undefined field17809_0xc768;
    undefined field17810_0xc769;
    undefined field17811_0xc76a;
    undefined field17812_0xc76b;
    undefined field17813_0xc76c;
    undefined field17814_0xc76d;
    undefined field17815_0xc76e;
    undefined field17816_0xc76f;
    undefined field17817_0xc770;
    undefined field17818_0xc771;
    undefined field17819_0xc772;
    undefined field17820_0xc773;
    undefined field17821_0xc774;
    undefined field17822_0xc775;
    undefined field17823_0xc776;
    undefined field17824_0xc777;
    undefined field17825_0xc778;
    undefined field17826_0xc779;
    undefined field17827_0xc77a;
    undefined field17828_0xc77b;
    undefined field17829_0xc77c;
    undefined field17830_0xc77d;
    undefined field17831_0xc77e;
    undefined field17832_0xc77f;
    undefined field17833_0xc780;
    undefined field17834_0xc781;
    undefined field17835_0xc782;
    undefined field17836_0xc783;
    undefined field17837_0xc784;
    undefined field17838_0xc785;
    undefined field17839_0xc786;
    undefined field17840_0xc787;
    undefined field17841_0xc788;
    undefined field17842_0xc789;
    undefined field17843_0xc78a;
    undefined field17844_0xc78b;
    undefined field17845_0xc78c;
    undefined field17846_0xc78d;
    undefined field17847_0xc78e;
    undefined field17848_0xc78f;
    undefined field17849_0xc790;
    undefined field17850_0xc791;
    undefined field17851_0xc792;
    undefined field17852_0xc793;
    undefined field17853_0xc794;
    undefined field17854_0xc795;
    undefined field17855_0xc796;
    undefined field17856_0xc797;
    undefined field17857_0xc798;
    undefined field17858_0xc799;
    undefined field17859_0xc79a;
    undefined field17860_0xc79b;
    undefined field17861_0xc79c;
    undefined field17862_0xc79d;
    undefined field17863_0xc79e;
    undefined field17864_0xc79f;
    undefined field17865_0xc7a0;
    undefined field17866_0xc7a1;
    undefined field17867_0xc7a2;
    undefined field17868_0xc7a3;
    undefined field17869_0xc7a4;
    undefined field17870_0xc7a5;
    undefined field17871_0xc7a6;
    undefined field17872_0xc7a7;
    undefined field17873_0xc7a8;
    undefined field17874_0xc7a9;
    undefined field17875_0xc7aa;
    undefined field17876_0xc7ab;
    undefined field17877_0xc7ac;
    undefined field17878_0xc7ad;
    undefined field17879_0xc7ae;
    undefined field17880_0xc7af;
    undefined field17881_0xc7b0;
    undefined field17882_0xc7b1;
    undefined field17883_0xc7b2;
    undefined field17884_0xc7b3;
    undefined field17885_0xc7b4;
    undefined field17886_0xc7b5;
    undefined field17887_0xc7b6;
    undefined field17888_0xc7b7;
    undefined field17889_0xc7b8;
    undefined field17890_0xc7b9;
    undefined field17891_0xc7ba;
    undefined field17892_0xc7bb;
    undefined field17893_0xc7bc;
    undefined field17894_0xc7bd;
    undefined field17895_0xc7be;
    undefined field17896_0xc7bf;
    undefined field17897_0xc7c0;
    undefined field17898_0xc7c1;
    undefined field17899_0xc7c2;
    undefined field17900_0xc7c3;
    undefined field17901_0xc7c4;
    undefined field17902_0xc7c5;
    undefined field17903_0xc7c6;
    undefined field17904_0xc7c7;
    undefined field17905_0xc7c8;
    undefined field17906_0xc7c9;
    undefined field17907_0xc7ca;
    undefined field17908_0xc7cb;
    undefined field17909_0xc7cc;
    undefined field17910_0xc7cd;
    undefined field17911_0xc7ce;
    undefined field17912_0xc7cf;
    undefined field17913_0xc7d0;
    undefined field17914_0xc7d1;
    undefined field17915_0xc7d2;
    undefined field17916_0xc7d3;
    undefined field17917_0xc7d4;
    undefined field17918_0xc7d5;
    undefined field17919_0xc7d6;
    undefined field17920_0xc7d7;
    undefined field17921_0xc7d8;
    undefined field17922_0xc7d9;
    undefined field17923_0xc7da;
    undefined field17924_0xc7db;
    undefined field17925_0xc7dc;
    undefined field17926_0xc7dd;
    undefined field17927_0xc7de;
    undefined field17928_0xc7df;
    undefined field17929_0xc7e0;
    undefined field17930_0xc7e1;
    undefined field17931_0xc7e2;
    undefined field17932_0xc7e3;
    undefined field17933_0xc7e4;
    undefined field17934_0xc7e5;
    undefined field17935_0xc7e6;
    undefined field17936_0xc7e7;
    undefined field17937_0xc7e8;
    undefined field17938_0xc7e9;
    undefined field17939_0xc7ea;
    undefined field17940_0xc7eb;
    undefined field17941_0xc7ec;
    undefined field17942_0xc7ed;
    undefined field17943_0xc7ee;
    undefined field17944_0xc7ef;
    undefined field17945_0xc7f0;
    undefined field17946_0xc7f1;
    undefined field17947_0xc7f2;
    undefined field17948_0xc7f3;
    undefined field17949_0xc7f4;
    undefined field17950_0xc7f5;
    undefined field17951_0xc7f6;
    undefined field17952_0xc7f7;
    undefined field17953_0xc7f8;
    undefined field17954_0xc7f9;
    undefined field17955_0xc7fa;
    undefined field17956_0xc7fb;
    undefined field17957_0xc7fc;
    undefined field17958_0xc7fd;
    undefined field17959_0xc7fe;
    undefined field17960_0xc7ff;
    undefined field17961_0xc800;
    undefined field17962_0xc801;
    undefined field17963_0xc802;
    undefined field17964_0xc803;
    undefined field17965_0xc804;
    undefined field17966_0xc805;
    undefined field17967_0xc806;
    undefined field17968_0xc807;
    undefined field17969_0xc808;
    undefined field17970_0xc809;
    undefined field17971_0xc80a;
    undefined field17972_0xc80b;
    undefined field17973_0xc80c;
    undefined field17974_0xc80d;
    undefined field17975_0xc80e;
    undefined field17976_0xc80f;
    undefined field17977_0xc810;
    undefined field17978_0xc811;
    undefined field17979_0xc812;
    undefined field17980_0xc813;
    undefined field17981_0xc814;
    undefined field17982_0xc815;
    undefined field17983_0xc816;
    undefined field17984_0xc817;
    undefined field17985_0xc818;
    undefined field17986_0xc819;
    undefined field17987_0xc81a;
    undefined field17988_0xc81b;
    undefined field17989_0xc81c;
    undefined field17990_0xc81d;
    undefined field17991_0xc81e;
    undefined field17992_0xc81f;
    undefined field17993_0xc820;
    undefined field17994_0xc821;
    undefined field17995_0xc822;
    undefined field17996_0xc823;
    undefined field17997_0xc824;
    undefined field17998_0xc825;
    undefined field17999_0xc826;
    undefined field18000_0xc827;
    undefined field18001_0xc828;
    undefined field18002_0xc829;
    undefined field18003_0xc82a;
    undefined field18004_0xc82b;
    undefined field18005_0xc82c;
    undefined field18006_0xc82d;
    undefined field18007_0xc82e;
    undefined field18008_0xc82f;
    undefined field18009_0xc830;
    undefined field18010_0xc831;
    undefined field18011_0xc832;
    undefined field18012_0xc833;
    undefined field18013_0xc834;
    undefined field18014_0xc835;
    undefined field18015_0xc836;
    undefined field18016_0xc837;
    undefined field18017_0xc838;
    undefined field18018_0xc839;
    undefined field18019_0xc83a;
    undefined field18020_0xc83b;
    undefined field18021_0xc83c;
    undefined field18022_0xc83d;
    undefined field18023_0xc83e;
    undefined field18024_0xc83f;
    undefined field18025_0xc840;
    undefined field18026_0xc841;
    undefined field18027_0xc842;
    undefined field18028_0xc843;
    undefined field18029_0xc844;
    undefined field18030_0xc845;
    undefined field18031_0xc846;
    undefined field18032_0xc847;
    undefined field18033_0xc848;
    undefined field18034_0xc849;
    undefined field18035_0xc84a;
    undefined field18036_0xc84b;
    undefined field18037_0xc84c;
    undefined field18038_0xc84d;
    undefined field18039_0xc84e;
    undefined field18040_0xc84f;
    undefined field18041_0xc850;
    undefined field18042_0xc851;
    undefined field18043_0xc852;
    undefined field18044_0xc853;
    undefined field18045_0xc854;
    undefined field18046_0xc855;
    undefined field18047_0xc856;
    undefined field18048_0xc857;
    undefined field18049_0xc858;
    undefined field18050_0xc859;
    undefined field18051_0xc85a;
    undefined field18052_0xc85b;
    undefined field18053_0xc85c;
    undefined field18054_0xc85d;
    undefined field18055_0xc85e;
    undefined field18056_0xc85f;
    undefined field18057_0xc860;
    undefined field18058_0xc861;
    undefined field18059_0xc862;
    undefined field18060_0xc863;
    undefined field18061_0xc864;
    undefined field18062_0xc865;
    undefined field18063_0xc866;
    undefined field18064_0xc867;
    undefined field18065_0xc868;
    undefined field18066_0xc869;
    undefined field18067_0xc86a;
    undefined field18068_0xc86b;
    undefined field18069_0xc86c;
    undefined field18070_0xc86d;
    undefined field18071_0xc86e;
    undefined field18072_0xc86f;
    undefined field18073_0xc870;
    undefined field18074_0xc871;
    undefined field18075_0xc872;
    undefined field18076_0xc873;
    undefined field18077_0xc874;
    undefined field18078_0xc875;
    undefined field18079_0xc876;
    undefined field18080_0xc877;
    undefined field18081_0xc878;
    undefined field18082_0xc879;
    undefined field18083_0xc87a;
    undefined field18084_0xc87b;
    undefined field18085_0xc87c;
    undefined field18086_0xc87d;
    undefined field18087_0xc87e;
    undefined field18088_0xc87f;
    undefined field18089_0xc880;
    undefined field18090_0xc881;
    undefined field18091_0xc882;
    undefined field18092_0xc883;
    undefined field18093_0xc884;
    undefined field18094_0xc885;
    undefined field18095_0xc886;
    undefined field18096_0xc887;
    undefined field18097_0xc888;
    undefined field18098_0xc889;
    undefined field18099_0xc88a;
    undefined field18100_0xc88b;
    undefined field18101_0xc88c;
    undefined field18102_0xc88d;
    undefined field18103_0xc88e;
    undefined field18104_0xc88f;
    undefined field18105_0xc890;
    undefined field18106_0xc891;
    undefined field18107_0xc892;
    undefined field18108_0xc893;
    undefined field18109_0xc894;
    undefined field18110_0xc895;
    undefined field18111_0xc896;
    undefined field18112_0xc897;
    undefined field18113_0xc898;
    undefined field18114_0xc899;
    undefined field18115_0xc89a;
    undefined field18116_0xc89b;
    undefined field18117_0xc89c;
    undefined field18118_0xc89d;
    undefined field18119_0xc89e;
    undefined field18120_0xc89f;
    undefined field18121_0xc8a0;
    undefined field18122_0xc8a1;
    undefined field18123_0xc8a2;
    undefined field18124_0xc8a3;
    undefined field18125_0xc8a4;
    undefined field18126_0xc8a5;
    undefined field18127_0xc8a6;
    undefined field18128_0xc8a7;
    undefined field18129_0xc8a8;
    undefined field18130_0xc8a9;
    undefined field18131_0xc8aa;
    undefined field18132_0xc8ab;
    undefined field18133_0xc8ac;
    undefined field18134_0xc8ad;
    undefined field18135_0xc8ae;
    undefined field18136_0xc8af;
    undefined field18137_0xc8b0;
    undefined field18138_0xc8b1;
    undefined field18139_0xc8b2;
    undefined field18140_0xc8b3;
    undefined field18141_0xc8b4;
    undefined field18142_0xc8b5;
    undefined field18143_0xc8b6;
    undefined field18144_0xc8b7;
    undefined field18145_0xc8b8;
    undefined field18146_0xc8b9;
    undefined field18147_0xc8ba;
    undefined field18148_0xc8bb;
    undefined field18149_0xc8bc;
    undefined field18150_0xc8bd;
    undefined field18151_0xc8be;
    undefined field18152_0xc8bf;
    undefined field18153_0xc8c0;
    undefined field18154_0xc8c1;
    undefined field18155_0xc8c2;
    undefined field18156_0xc8c3;
    undefined field18157_0xc8c4;
    undefined field18158_0xc8c5;
    undefined field18159_0xc8c6;
    undefined field18160_0xc8c7;
    undefined field18161_0xc8c8;
    undefined field18162_0xc8c9;
    undefined field18163_0xc8ca;
    undefined field18164_0xc8cb;
    undefined field18165_0xc8cc;
    undefined field18166_0xc8cd;
    undefined field18167_0xc8ce;
    undefined field18168_0xc8cf;
    undefined field18169_0xc8d0;
    undefined field18170_0xc8d1;
    undefined field18171_0xc8d2;
    undefined field18172_0xc8d3;
    undefined field18173_0xc8d4;
    undefined field18174_0xc8d5;
    undefined field18175_0xc8d6;
    undefined field18176_0xc8d7;
    undefined field18177_0xc8d8;
    undefined field18178_0xc8d9;
    undefined field18179_0xc8da;
    undefined field18180_0xc8db;
    undefined field18181_0xc8dc;
    undefined field18182_0xc8dd;
    undefined field18183_0xc8de;
    undefined field18184_0xc8df;
    undefined field18185_0xc8e0;
    undefined field18186_0xc8e1;
    undefined field18187_0xc8e2;
    undefined field18188_0xc8e3;
    undefined field18189_0xc8e4;
    undefined field18190_0xc8e5;
    undefined field18191_0xc8e6;
    undefined field18192_0xc8e7;
    undefined field18193_0xc8e8;
    undefined field18194_0xc8e9;
    undefined field18195_0xc8ea;
    undefined field18196_0xc8eb;
    undefined field18197_0xc8ec;
    undefined field18198_0xc8ed;
    undefined field18199_0xc8ee;
    undefined field18200_0xc8ef;
    undefined field18201_0xc8f0;
    undefined field18202_0xc8f1;
    undefined field18203_0xc8f2;
    undefined field18204_0xc8f3;
    undefined field18205_0xc8f4;
    undefined field18206_0xc8f5;
    undefined field18207_0xc8f6;
    undefined field18208_0xc8f7;
    undefined field18209_0xc8f8;
    undefined field18210_0xc8f9;
    undefined field18211_0xc8fa;
    undefined field18212_0xc8fb;
    undefined field18213_0xc8fc;
    undefined field18214_0xc8fd;
    undefined field18215_0xc8fe;
    undefined field18216_0xc8ff;
    undefined field18217_0xc900;
    undefined field18218_0xc901;
    undefined field18219_0xc902;
    undefined field18220_0xc903;
    undefined field18221_0xc904;
    undefined field18222_0xc905;
    undefined field18223_0xc906;
    undefined field18224_0xc907;
    undefined field18225_0xc908;
    undefined field18226_0xc909;
    undefined field18227_0xc90a;
    undefined field18228_0xc90b;
    undefined field18229_0xc90c;
    undefined field18230_0xc90d;
    undefined field18231_0xc90e;
    undefined field18232_0xc90f;
    undefined field18233_0xc910;
    undefined field18234_0xc911;
    undefined field18235_0xc912;
    undefined field18236_0xc913;
    undefined field18237_0xc914;
    undefined field18238_0xc915;
    undefined field18239_0xc916;
    undefined field18240_0xc917;
    undefined field18241_0xc918;
    undefined field18242_0xc919;
    undefined field18243_0xc91a;
    undefined field18244_0xc91b;
    undefined field18245_0xc91c;
    undefined field18246_0xc91d;
    undefined field18247_0xc91e;
    undefined field18248_0xc91f;
    undefined field18249_0xc920;
    undefined field18250_0xc921;
    undefined field18251_0xc922;
    undefined field18252_0xc923;
    undefined field18253_0xc924;
    undefined field18254_0xc925;
    undefined field18255_0xc926;
    undefined field18256_0xc927;
    undefined field18257_0xc928;
    undefined field18258_0xc929;
    undefined field18259_0xc92a;
    undefined field18260_0xc92b;
    undefined field18261_0xc92c;
    undefined field18262_0xc92d;
    undefined field18263_0xc92e;
    undefined field18264_0xc92f;
    undefined field18265_0xc930;
    undefined field18266_0xc931;
    undefined field18267_0xc932;
    undefined field18268_0xc933;
    undefined field18269_0xc934;
    undefined field18270_0xc935;
    undefined field18271_0xc936;
    undefined field18272_0xc937;
    undefined field18273_0xc938;
    undefined field18274_0xc939;
    undefined field18275_0xc93a;
    undefined field18276_0xc93b;
    undefined field18277_0xc93c;
    undefined field18278_0xc93d;
    undefined field18279_0xc93e;
    undefined field18280_0xc93f;
    undefined field18281_0xc940;
    undefined field18282_0xc941;
    undefined field18283_0xc942;
    undefined field18284_0xc943;
    undefined field18285_0xc944;
    undefined field18286_0xc945;
    undefined field18287_0xc946;
    undefined field18288_0xc947;
    undefined field18289_0xc948;
    undefined field18290_0xc949;
    undefined field18291_0xc94a;
    undefined field18292_0xc94b;
    undefined field18293_0xc94c;
    undefined field18294_0xc94d;
    undefined field18295_0xc94e;
    undefined field18296_0xc94f;
    undefined field18297_0xc950;
    undefined field18298_0xc951;
    undefined field18299_0xc952;
    undefined field18300_0xc953;
    undefined field18301_0xc954;
    undefined field18302_0xc955;
    undefined field18303_0xc956;
    undefined field18304_0xc957;
    undefined field18305_0xc958;
    undefined field18306_0xc959;
    undefined field18307_0xc95a;
    undefined field18308_0xc95b;
    undefined field18309_0xc95c;
    undefined field18310_0xc95d;
    undefined field18311_0xc95e;
    undefined field18312_0xc95f;
    undefined field18313_0xc960;
    undefined field18314_0xc961;
    undefined field18315_0xc962;
    undefined field18316_0xc963;
    undefined field18317_0xc964;
    undefined field18318_0xc965;
    undefined field18319_0xc966;
    undefined field18320_0xc967;
    undefined field18321_0xc968;
    undefined field18322_0xc969;
    undefined field18323_0xc96a;
    undefined field18324_0xc96b;
    undefined field18325_0xc96c;
    undefined field18326_0xc96d;
    undefined field18327_0xc96e;
    undefined field18328_0xc96f;
    undefined field18329_0xc970;
    undefined field18330_0xc971;
    undefined field18331_0xc972;
    undefined field18332_0xc973;
    undefined field18333_0xc974;
    undefined field18334_0xc975;
    undefined field18335_0xc976;
    undefined field18336_0xc977;
    undefined field18337_0xc978;
    undefined field18338_0xc979;
    undefined field18339_0xc97a;
    undefined field18340_0xc97b;
    undefined field18341_0xc97c;
    undefined field18342_0xc97d;
    undefined field18343_0xc97e;
    undefined field18344_0xc97f;
    undefined field18345_0xc980;
    undefined field18346_0xc981;
    undefined field18347_0xc982;
    undefined field18348_0xc983;
    undefined field18349_0xc984;
    undefined field18350_0xc985;
    undefined field18351_0xc986;
    undefined field18352_0xc987;
    undefined field18353_0xc988;
    undefined field18354_0xc989;
    undefined field18355_0xc98a;
    undefined field18356_0xc98b;
    undefined field18357_0xc98c;
    undefined field18358_0xc98d;
    undefined field18359_0xc98e;
    undefined field18360_0xc98f;
    undefined field18361_0xc990;
    undefined field18362_0xc991;
    undefined field18363_0xc992;
    undefined field18364_0xc993;
    undefined field18365_0xc994;
    undefined field18366_0xc995;
    undefined field18367_0xc996;
    undefined field18368_0xc997;
    undefined field18369_0xc998;
    undefined field18370_0xc999;
    undefined field18371_0xc99a;
    undefined field18372_0xc99b;
    undefined field18373_0xc99c;
    undefined field18374_0xc99d;
    undefined field18375_0xc99e;
    undefined field18376_0xc99f;
    undefined field18377_0xc9a0;
    undefined field18378_0xc9a1;
    undefined field18379_0xc9a2;
    undefined field18380_0xc9a3;
    undefined field18381_0xc9a4;
    undefined field18382_0xc9a5;
    undefined field18383_0xc9a6;
    undefined field18384_0xc9a7;
    undefined field18385_0xc9a8;
    undefined field18386_0xc9a9;
    undefined field18387_0xc9aa;
    undefined field18388_0xc9ab;
    undefined field18389_0xc9ac;
    undefined field18390_0xc9ad;
    undefined field18391_0xc9ae;
    undefined field18392_0xc9af;
    undefined field18393_0xc9b0;
    undefined field18394_0xc9b1;
    undefined field18395_0xc9b2;
    undefined field18396_0xc9b3;
    undefined field18397_0xc9b4;
    undefined field18398_0xc9b5;
    undefined field18399_0xc9b6;
    undefined field18400_0xc9b7;
    undefined field18401_0xc9b8;
    undefined field18402_0xc9b9;
    undefined field18403_0xc9ba;
    undefined field18404_0xc9bb;
    undefined field18405_0xc9bc;
    undefined field18406_0xc9bd;
    undefined field18407_0xc9be;
    undefined field18408_0xc9bf;
    undefined field18409_0xc9c0;
    undefined field18410_0xc9c1;
    undefined field18411_0xc9c2;
    undefined field18412_0xc9c3;
    undefined field18413_0xc9c4;
    undefined field18414_0xc9c5;
    undefined field18415_0xc9c6;
    undefined field18416_0xc9c7;
    undefined field18417_0xc9c8;
    undefined field18418_0xc9c9;
    undefined field18419_0xc9ca;
    undefined field18420_0xc9cb;
    undefined field18421_0xc9cc;
    undefined field18422_0xc9cd;
    undefined field18423_0xc9ce;
    undefined field18424_0xc9cf;
    undefined field18425_0xc9d0;
    undefined field18426_0xc9d1;
    undefined field18427_0xc9d2;
    undefined field18428_0xc9d3;
    undefined field18429_0xc9d4;
    undefined field18430_0xc9d5;
    undefined field18431_0xc9d6;
    undefined field18432_0xc9d7;
    undefined field18433_0xc9d8;
    undefined field18434_0xc9d9;
    undefined field18435_0xc9da;
    undefined field18436_0xc9db;
    undefined field18437_0xc9dc;
    undefined field18438_0xc9dd;
    undefined field18439_0xc9de;
    undefined field18440_0xc9df;
    undefined field18441_0xc9e0;
    undefined field18442_0xc9e1;
    undefined field18443_0xc9e2;
    undefined field18444_0xc9e3;
    undefined field18445_0xc9e4;
    undefined field18446_0xc9e5;
    undefined field18447_0xc9e6;
    undefined field18448_0xc9e7;
    undefined field18449_0xc9e8;
    undefined field18450_0xc9e9;
    undefined field18451_0xc9ea;
    undefined field18452_0xc9eb;
    undefined field18453_0xc9ec;
    undefined field18454_0xc9ed;
    undefined field18455_0xc9ee;
    undefined field18456_0xc9ef;
    undefined field18457_0xc9f0;
    undefined field18458_0xc9f1;
    undefined field18459_0xc9f2;
    undefined field18460_0xc9f3;
    undefined field18461_0xc9f4;
    undefined field18462_0xc9f5;
    undefined field18463_0xc9f6;
    undefined field18464_0xc9f7;
    undefined field18465_0xc9f8;
    undefined field18466_0xc9f9;
    undefined field18467_0xc9fa;
    undefined field18468_0xc9fb;
    undefined field18469_0xc9fc;
    undefined field18470_0xc9fd;
    undefined field18471_0xc9fe;
    undefined field18472_0xc9ff;
    undefined field18473_0xca00;
    undefined field18474_0xca01;
    undefined field18475_0xca02;
    undefined field18476_0xca03;
    undefined field18477_0xca04;
    undefined field18478_0xca05;
    undefined field18479_0xca06;
    undefined field18480_0xca07;
    undefined field18481_0xca08;
    undefined field18482_0xca09;
    undefined field18483_0xca0a;
    undefined field18484_0xca0b;
    undefined field18485_0xca0c;
    undefined field18486_0xca0d;
    undefined field18487_0xca0e;
    undefined field18488_0xca0f;
    undefined field18489_0xca10;
    undefined field18490_0xca11;
    undefined field18491_0xca12;
    undefined field18492_0xca13;
    undefined field18493_0xca14;
    undefined field18494_0xca15;
    undefined field18495_0xca16;
    undefined field18496_0xca17;
    undefined field18497_0xca18;
    undefined field18498_0xca19;
    undefined field18499_0xca1a;
    undefined field18500_0xca1b;
    undefined field18501_0xca1c;
    undefined field18502_0xca1d;
    undefined field18503_0xca1e;
    undefined field18504_0xca1f;
    undefined field18505_0xca20;
    undefined field18506_0xca21;
    undefined field18507_0xca22;
    undefined field18508_0xca23;
    undefined field18509_0xca24;
    undefined field18510_0xca25;
    undefined field18511_0xca26;
    undefined field18512_0xca27;
    undefined field18513_0xca28;
    undefined field18514_0xca29;
    undefined field18515_0xca2a;
    undefined field18516_0xca2b;
    undefined field18517_0xca2c;
    undefined field18518_0xca2d;
    undefined field18519_0xca2e;
    undefined field18520_0xca2f;
    undefined field18521_0xca30;
    undefined field18522_0xca31;
    undefined field18523_0xca32;
    undefined field18524_0xca33;
    undefined field18525_0xca34;
    undefined field18526_0xca35;
    undefined field18527_0xca36;
    undefined field18528_0xca37;
    undefined field18529_0xca38;
    undefined field18530_0xca39;
    undefined field18531_0xca3a;
    undefined field18532_0xca3b;
    undefined field18533_0xca3c;
    undefined field18534_0xca3d;
    undefined field18535_0xca3e;
    undefined field18536_0xca3f;
    undefined field18537_0xca40;
    undefined field18538_0xca41;
    undefined field18539_0xca42;
    undefined field18540_0xca43;
    undefined field18541_0xca44;
    undefined field18542_0xca45;
    undefined field18543_0xca46;
    undefined field18544_0xca47;
    undefined field18545_0xca48;
    undefined field18546_0xca49;
    undefined field18547_0xca4a;
    undefined field18548_0xca4b;
    undefined field18549_0xca4c;
    undefined field18550_0xca4d;
    undefined field18551_0xca4e;
    undefined field18552_0xca4f;
    undefined field18553_0xca50;
    undefined field18554_0xca51;
    undefined field18555_0xca52;
    undefined field18556_0xca53;
    undefined field18557_0xca54;
    undefined field18558_0xca55;
    undefined field18559_0xca56;
    undefined field18560_0xca57;
    undefined field18561_0xca58;
    undefined field18562_0xca59;
    undefined field18563_0xca5a;
    undefined field18564_0xca5b;
    undefined field18565_0xca5c;
    undefined field18566_0xca5d;
    undefined field18567_0xca5e;
    undefined field18568_0xca5f;
    undefined field18569_0xca60;
    undefined field18570_0xca61;
    undefined field18571_0xca62;
    undefined field18572_0xca63;
    undefined field18573_0xca64;
    undefined field18574_0xca65;
    undefined field18575_0xca66;
    undefined field18576_0xca67;
    undefined field18577_0xca68;
    undefined field18578_0xca69;
    undefined field18579_0xca6a;
    undefined field18580_0xca6b;
    undefined field18581_0xca6c;
    undefined field18582_0xca6d;
    undefined field18583_0xca6e;
    undefined field18584_0xca6f;
    undefined field18585_0xca70;
    undefined field18586_0xca71;
    undefined field18587_0xca72;
    undefined field18588_0xca73;
    undefined field18589_0xca74;
    undefined field18590_0xca75;
    undefined field18591_0xca76;
    undefined field18592_0xca77;
    undefined field18593_0xca78;
    undefined field18594_0xca79;
    undefined field18595_0xca7a;
    undefined field18596_0xca7b;
    undefined field18597_0xca7c;
    undefined field18598_0xca7d;
    undefined field18599_0xca7e;
    undefined field18600_0xca7f;
    undefined field18601_0xca80;
    undefined field18602_0xca81;
    undefined field18603_0xca82;
    undefined field18604_0xca83;
    undefined field18605_0xca84;
    undefined field18606_0xca85;
    undefined field18607_0xca86;
    undefined field18608_0xca87;
    undefined field18609_0xca88;
    undefined field18610_0xca89;
    undefined field18611_0xca8a;
    undefined field18612_0xca8b;
    undefined field18613_0xca8c;
    undefined field18614_0xca8d;
    undefined field18615_0xca8e;
    undefined field18616_0xca8f;
    undefined field18617_0xca90;
    undefined field18618_0xca91;
    undefined field18619_0xca92;
    undefined field18620_0xca93;
    undefined field18621_0xca94;
    undefined field18622_0xca95;
    undefined field18623_0xca96;
    undefined field18624_0xca97;
    undefined field18625_0xca98;
    undefined field18626_0xca99;
    undefined field18627_0xca9a;
    undefined field18628_0xca9b;
    undefined field18629_0xca9c;
    undefined field18630_0xca9d;
    undefined field18631_0xca9e;
    undefined field18632_0xca9f;
    undefined field18633_0xcaa0;
    undefined field18634_0xcaa1;
    undefined field18635_0xcaa2;
    undefined field18636_0xcaa3;
    undefined field18637_0xcaa4;
    undefined field18638_0xcaa5;
    undefined field18639_0xcaa6;
    undefined field18640_0xcaa7;
    undefined field18641_0xcaa8;
    undefined field18642_0xcaa9;
    undefined field18643_0xcaaa;
    undefined field18644_0xcaab;
    undefined field18645_0xcaac;
    undefined field18646_0xcaad;
    undefined field18647_0xcaae;
    undefined field18648_0xcaaf;
    undefined field18649_0xcab0;
    undefined field18650_0xcab1;
    undefined field18651_0xcab2;
    undefined field18652_0xcab3;
    undefined field18653_0xcab4;
    undefined field18654_0xcab5;
    undefined field18655_0xcab6;
    undefined field18656_0xcab7;
    undefined field18657_0xcab8;
    undefined field18658_0xcab9;
    undefined field18659_0xcaba;
    undefined field18660_0xcabb;
    undefined field18661_0xcabc;
    undefined field18662_0xcabd;
    undefined field18663_0xcabe;
    undefined field18664_0xcabf;
    undefined field18665_0xcac0;
    undefined field18666_0xcac1;
    undefined field18667_0xcac2;
    undefined field18668_0xcac3;
    undefined field18669_0xcac4;
    undefined field18670_0xcac5;
    undefined field18671_0xcac6;
    undefined field18672_0xcac7;
    undefined field18673_0xcac8;
    undefined field18674_0xcac9;
    undefined field18675_0xcaca;
    undefined field18676_0xcacb;
    undefined field18677_0xcacc;
    undefined field18678_0xcacd;
    undefined field18679_0xcace;
    undefined field18680_0xcacf;
    undefined field18681_0xcad0;
    undefined field18682_0xcad1;
    undefined field18683_0xcad2;
    undefined field18684_0xcad3;
    undefined field18685_0xcad4;
    undefined field18686_0xcad5;
    undefined field18687_0xcad6;
    undefined field18688_0xcad7;
    undefined field18689_0xcad8;
    undefined field18690_0xcad9;
    undefined field18691_0xcada;
    undefined field18692_0xcadb;
    undefined field18693_0xcadc;
    undefined field18694_0xcadd;
    undefined field18695_0xcade;
    undefined field18696_0xcadf;
    undefined field18697_0xcae0;
    undefined field18698_0xcae1;
    undefined field18699_0xcae2;
    undefined field18700_0xcae3;
    undefined field18701_0xcae4;
    undefined field18702_0xcae5;
    undefined field18703_0xcae6;
    undefined field18704_0xcae7;
    undefined field18705_0xcae8;
    undefined field18706_0xcae9;
    undefined field18707_0xcaea;
    undefined field18708_0xcaeb;
    undefined field18709_0xcaec;
    undefined field18710_0xcaed;
    undefined field18711_0xcaee;
    undefined field18712_0xcaef;
    undefined field18713_0xcaf0;
    undefined field18714_0xcaf1;
    undefined field18715_0xcaf2;
    undefined field18716_0xcaf3;
    undefined field18717_0xcaf4;
    undefined field18718_0xcaf5;
    undefined field18719_0xcaf6;
    undefined field18720_0xcaf7;
    undefined field18721_0xcaf8;
    undefined field18722_0xcaf9;
    undefined field18723_0xcafa;
    undefined field18724_0xcafb;
    undefined field18725_0xcafc;
    undefined field18726_0xcafd;
    undefined field18727_0xcafe;
    undefined field18728_0xcaff;
    undefined field18729_0xcb00;
    undefined field18730_0xcb01;
    undefined field18731_0xcb02;
    undefined field18732_0xcb03;
    undefined field18733_0xcb04;
    undefined field18734_0xcb05;
    undefined field18735_0xcb06;
    undefined field18736_0xcb07;
    undefined field18737_0xcb08;
    undefined field18738_0xcb09;
    undefined field18739_0xcb0a;
    undefined field18740_0xcb0b;
    undefined field18741_0xcb0c;
    undefined field18742_0xcb0d;
    undefined field18743_0xcb0e;
    undefined field18744_0xcb0f;
    undefined field18745_0xcb10;
    undefined field18746_0xcb11;
    undefined field18747_0xcb12;
    undefined field18748_0xcb13;
    undefined field18749_0xcb14;
    undefined field18750_0xcb15;
    undefined field18751_0xcb16;
    undefined field18752_0xcb17;
    undefined field18753_0xcb18;
    undefined field18754_0xcb19;
    undefined field18755_0xcb1a;
    undefined field18756_0xcb1b;
    undefined field18757_0xcb1c;
    undefined field18758_0xcb1d;
    undefined field18759_0xcb1e;
    undefined field18760_0xcb1f;
    undefined field18761_0xcb20;
    undefined field18762_0xcb21;
    undefined field18763_0xcb22;
    undefined field18764_0xcb23;
    undefined field18765_0xcb24;
    undefined field18766_0xcb25;
    undefined field18767_0xcb26;
    undefined field18768_0xcb27;
    undefined field18769_0xcb28;
    undefined field18770_0xcb29;
    undefined field18771_0xcb2a;
    undefined field18772_0xcb2b;
    undefined field18773_0xcb2c;
    undefined field18774_0xcb2d;
    undefined field18775_0xcb2e;
    undefined field18776_0xcb2f;
    undefined field18777_0xcb30;
    undefined field18778_0xcb31;
    undefined field18779_0xcb32;
    undefined field18780_0xcb33;
    undefined field18781_0xcb34;
    undefined field18782_0xcb35;
    undefined field18783_0xcb36;
    undefined field18784_0xcb37;
    undefined field18785_0xcb38;
    undefined field18786_0xcb39;
    undefined field18787_0xcb3a;
    undefined field18788_0xcb3b;
    undefined field18789_0xcb3c;
    undefined field18790_0xcb3d;
    undefined field18791_0xcb3e;
    undefined field18792_0xcb3f;
    undefined field18793_0xcb40;
    undefined field18794_0xcb41;
    undefined field18795_0xcb42;
    undefined field18796_0xcb43;
    undefined field18797_0xcb44;
    undefined field18798_0xcb45;
    undefined field18799_0xcb46;
    undefined field18800_0xcb47;
    undefined field18801_0xcb48;
    undefined field18802_0xcb49;
    undefined field18803_0xcb4a;
    undefined field18804_0xcb4b;
    undefined field18805_0xcb4c;
    undefined field18806_0xcb4d;
    undefined field18807_0xcb4e;
    undefined field18808_0xcb4f;
    undefined field18809_0xcb50;
    undefined field18810_0xcb51;
    undefined field18811_0xcb52;
    undefined field18812_0xcb53;
    undefined field18813_0xcb54;
    undefined field18814_0xcb55;
    undefined field18815_0xcb56;
    undefined field18816_0xcb57;
    undefined field18817_0xcb58;
    undefined field18818_0xcb59;
    undefined field18819_0xcb5a;
    undefined field18820_0xcb5b;
    undefined field18821_0xcb5c;
    undefined field18822_0xcb5d;
    undefined field18823_0xcb5e;
    undefined field18824_0xcb5f;
    undefined field18825_0xcb60;
    undefined field18826_0xcb61;
    undefined field18827_0xcb62;
    undefined field18828_0xcb63;
    undefined field18829_0xcb64;
    undefined field18830_0xcb65;
    undefined field18831_0xcb66;
    undefined field18832_0xcb67;
    undefined field18833_0xcb68;
    undefined field18834_0xcb69;
    undefined field18835_0xcb6a;
    undefined field18836_0xcb6b;
    undefined field18837_0xcb6c;
    undefined field18838_0xcb6d;
    undefined field18839_0xcb6e;
    undefined field18840_0xcb6f;
    undefined field18841_0xcb70;
    undefined field18842_0xcb71;
    undefined field18843_0xcb72;
    undefined field18844_0xcb73;
    undefined field18845_0xcb74;
    undefined field18846_0xcb75;
    undefined field18847_0xcb76;
    undefined field18848_0xcb77;
    undefined field18849_0xcb78;
    undefined field18850_0xcb79;
    undefined field18851_0xcb7a;
    undefined field18852_0xcb7b;
    undefined field18853_0xcb7c;
    undefined field18854_0xcb7d;
    undefined field18855_0xcb7e;
    undefined field18856_0xcb7f;
    undefined field18857_0xcb80;
    undefined field18858_0xcb81;
    undefined field18859_0xcb82;
    undefined field18860_0xcb83;
    undefined field18861_0xcb84;
    undefined field18862_0xcb85;
    undefined field18863_0xcb86;
    undefined field18864_0xcb87;
    undefined field18865_0xcb88;
    undefined field18866_0xcb89;
    undefined field18867_0xcb8a;
    undefined field18868_0xcb8b;
    undefined field18869_0xcb8c;
    undefined field18870_0xcb8d;
    undefined field18871_0xcb8e;
    undefined field18872_0xcb8f;
    undefined field18873_0xcb90;
    undefined field18874_0xcb91;
    undefined field18875_0xcb92;
    undefined field18876_0xcb93;
    undefined field18877_0xcb94;
    undefined field18878_0xcb95;
    undefined field18879_0xcb96;
    undefined field18880_0xcb97;
    undefined field18881_0xcb98;
    undefined field18882_0xcb99;
    undefined field18883_0xcb9a;
    undefined field18884_0xcb9b;
    undefined field18885_0xcb9c;
    undefined field18886_0xcb9d;
    undefined field18887_0xcb9e;
    undefined field18888_0xcb9f;
    undefined field18889_0xcba0;
    undefined field18890_0xcba1;
    undefined field18891_0xcba2;
    undefined field18892_0xcba3;
    undefined field18893_0xcba4;
    undefined field18894_0xcba5;
    undefined field18895_0xcba6;
    undefined field18896_0xcba7;
    undefined field18897_0xcba8;
    undefined field18898_0xcba9;
    undefined field18899_0xcbaa;
    undefined field18900_0xcbab;
    undefined field18901_0xcbac;
    undefined field18902_0xcbad;
    undefined field18903_0xcbae;
    undefined field18904_0xcbaf;
    undefined field18905_0xcbb0;
    undefined field18906_0xcbb1;
    undefined field18907_0xcbb2;
    undefined field18908_0xcbb3;
    undefined field18909_0xcbb4;
    undefined field18910_0xcbb5;
    undefined field18911_0xcbb6;
    undefined field18912_0xcbb7;
    undefined field18913_0xcbb8;
    undefined field18914_0xcbb9;
    undefined field18915_0xcbba;
    undefined field18916_0xcbbb;
    undefined field18917_0xcbbc;
    undefined field18918_0xcbbd;
    undefined field18919_0xcbbe;
    undefined field18920_0xcbbf;
    undefined field18921_0xcbc0;
    undefined field18922_0xcbc1;
    undefined field18923_0xcbc2;
    undefined field18924_0xcbc3;
    undefined field18925_0xcbc4;
    undefined field18926_0xcbc5;
    undefined field18927_0xcbc6;
    undefined field18928_0xcbc7;
    undefined field18929_0xcbc8;
    undefined field18930_0xcbc9;
    undefined field18931_0xcbca;
    undefined field18932_0xcbcb;
    undefined field18933_0xcbcc;
    undefined field18934_0xcbcd;
    undefined field18935_0xcbce;
    undefined field18936_0xcbcf;
    undefined field18937_0xcbd0;
    undefined field18938_0xcbd1;
    undefined field18939_0xcbd2;
    undefined field18940_0xcbd3;
    undefined field18941_0xcbd4;
    undefined field18942_0xcbd5;
    undefined field18943_0xcbd6;
    undefined field18944_0xcbd7;
    undefined field18945_0xcbd8;
    undefined field18946_0xcbd9;
    undefined field18947_0xcbda;
    undefined field18948_0xcbdb;
    undefined field18949_0xcbdc;
    undefined field18950_0xcbdd;
    undefined field18951_0xcbde;
    undefined field18952_0xcbdf;
    undefined field18953_0xcbe0;
    undefined field18954_0xcbe1;
    undefined field18955_0xcbe2;
    undefined field18956_0xcbe3;
    undefined field18957_0xcbe4;
    undefined field18958_0xcbe5;
    undefined field18959_0xcbe6;
    undefined field18960_0xcbe7;
    undefined field18961_0xcbe8;
    undefined field18962_0xcbe9;
    undefined field18963_0xcbea;
    undefined field18964_0xcbeb;
    undefined field18965_0xcbec;
    undefined field18966_0xcbed;
    undefined field18967_0xcbee;
    undefined field18968_0xcbef;
    undefined field18969_0xcbf0;
    undefined field18970_0xcbf1;
    undefined field18971_0xcbf2;
    undefined field18972_0xcbf3;
    undefined field18973_0xcbf4;
    undefined field18974_0xcbf5;
    undefined field18975_0xcbf6;
    undefined field18976_0xcbf7;
    undefined field18977_0xcbf8;
    undefined field18978_0xcbf9;
    undefined field18979_0xcbfa;
    undefined field18980_0xcbfb;
    undefined field18981_0xcbfc;
    undefined field18982_0xcbfd;
    undefined field18983_0xcbfe;
    undefined field18984_0xcbff;
    undefined field18985_0xcc00;
    undefined field18986_0xcc01;
    undefined field18987_0xcc02;
    undefined field18988_0xcc03;
    undefined field18989_0xcc04;
    undefined field18990_0xcc05;
    undefined field18991_0xcc06;
    undefined field18992_0xcc07;
    undefined field18993_0xcc08;
    undefined field18994_0xcc09;
    undefined field18995_0xcc0a;
    undefined field18996_0xcc0b;
    undefined field18997_0xcc0c;
    undefined field18998_0xcc0d;
    undefined field18999_0xcc0e;
    undefined field19000_0xcc0f;
    undefined field19001_0xcc10;
    undefined field19002_0xcc11;
    undefined field19003_0xcc12;
    undefined field19004_0xcc13;
    undefined field19005_0xcc14;
    undefined field19006_0xcc15;
    undefined field19007_0xcc16;
    undefined field19008_0xcc17;
    undefined field19009_0xcc18;
    undefined field19010_0xcc19;
    undefined field19011_0xcc1a;
    undefined field19012_0xcc1b;
    undefined field19013_0xcc1c;
    undefined field19014_0xcc1d;
    undefined field19015_0xcc1e;
    undefined field19016_0xcc1f;
    undefined field19017_0xcc20;
    undefined field19018_0xcc21;
    undefined field19019_0xcc22;
    undefined field19020_0xcc23;
    undefined field19021_0xcc24;
    undefined field19022_0xcc25;
    undefined field19023_0xcc26;
    undefined field19024_0xcc27;
    undefined field19025_0xcc28;
    undefined field19026_0xcc29;
    undefined field19027_0xcc2a;
    undefined field19028_0xcc2b;
    undefined field19029_0xcc2c;
    undefined field19030_0xcc2d;
    undefined field19031_0xcc2e;
    undefined field19032_0xcc2f;
    undefined field19033_0xcc30;
    undefined field19034_0xcc31;
    undefined field19035_0xcc32;
    undefined field19036_0xcc33;
    undefined field19037_0xcc34;
    undefined field19038_0xcc35;
    undefined field19039_0xcc36;
    undefined field19040_0xcc37;
    undefined field19041_0xcc38;
    undefined field19042_0xcc39;
    undefined field19043_0xcc3a;
    undefined field19044_0xcc3b;
    undefined field19045_0xcc3c;
    undefined field19046_0xcc3d;
    undefined field19047_0xcc3e;
    undefined field19048_0xcc3f;
    undefined field19049_0xcc40;
    undefined field19050_0xcc41;
    undefined field19051_0xcc42;
    undefined field19052_0xcc43;
    undefined field19053_0xcc44;
    undefined field19054_0xcc45;
    undefined field19055_0xcc46;
    undefined field19056_0xcc47;
    undefined field19057_0xcc48;
    undefined field19058_0xcc49;
    undefined field19059_0xcc4a;
    undefined field19060_0xcc4b;
    undefined field19061_0xcc4c;
    undefined field19062_0xcc4d;
    undefined field19063_0xcc4e;
    undefined field19064_0xcc4f;
    undefined field19065_0xcc50;
    undefined field19066_0xcc51;
    undefined field19067_0xcc52;
    undefined field19068_0xcc53;
    undefined field19069_0xcc54;
    undefined field19070_0xcc55;
    undefined field19071_0xcc56;
    undefined field19072_0xcc57;
    undefined field19073_0xcc58;
    undefined field19074_0xcc59;
    undefined field19075_0xcc5a;
    undefined field19076_0xcc5b;
    undefined field19077_0xcc5c;
    undefined field19078_0xcc5d;
    undefined field19079_0xcc5e;
    undefined field19080_0xcc5f;
    undefined field19081_0xcc60;
    undefined field19082_0xcc61;
    undefined field19083_0xcc62;
    undefined field19084_0xcc63;
    undefined field19085_0xcc64;
    undefined field19086_0xcc65;
    undefined field19087_0xcc66;
    undefined field19088_0xcc67;
    undefined field19089_0xcc68;
    undefined field19090_0xcc69;
    undefined field19091_0xcc6a;
    undefined field19092_0xcc6b;
    undefined field19093_0xcc6c;
    undefined field19094_0xcc6d;
    undefined field19095_0xcc6e;
    undefined field19096_0xcc6f;
    undefined field19097_0xcc70;
    undefined field19098_0xcc71;
    undefined field19099_0xcc72;
    undefined field19100_0xcc73;
    undefined field19101_0xcc74;
    undefined field19102_0xcc75;
    undefined field19103_0xcc76;
    undefined field19104_0xcc77;
    undefined field19105_0xcc78;
    undefined field19106_0xcc79;
    undefined field19107_0xcc7a;
    undefined field19108_0xcc7b;
    undefined field19109_0xcc7c;
    undefined field19110_0xcc7d;
    undefined field19111_0xcc7e;
    undefined field19112_0xcc7f;
    undefined field19113_0xcc80;
    undefined field19114_0xcc81;
    undefined field19115_0xcc82;
    undefined field19116_0xcc83;
    undefined field19117_0xcc84;
    undefined field19118_0xcc85;
    undefined field19119_0xcc86;
    undefined field19120_0xcc87;
    undefined field19121_0xcc88;
    undefined field19122_0xcc89;
    undefined field19123_0xcc8a;
    undefined field19124_0xcc8b;
    undefined field19125_0xcc8c;
    undefined field19126_0xcc8d;
    undefined field19127_0xcc8e;
    undefined field19128_0xcc8f;
    undefined field19129_0xcc90;
    undefined field19130_0xcc91;
    undefined field19131_0xcc92;
    undefined field19132_0xcc93;
    undefined field19133_0xcc94;
    undefined field19134_0xcc95;
    undefined field19135_0xcc96;
    undefined field19136_0xcc97;
    undefined field19137_0xcc98;
    undefined field19138_0xcc99;
    undefined field19139_0xcc9a;
    undefined field19140_0xcc9b;
    undefined field19141_0xcc9c;
    undefined field19142_0xcc9d;
    undefined field19143_0xcc9e;
    undefined field19144_0xcc9f;
    undefined field19145_0xcca0;
    undefined field19146_0xcca1;
    undefined field19147_0xcca2;
    undefined field19148_0xcca3;
    undefined field19149_0xcca4;
    undefined field19150_0xcca5;
    undefined field19151_0xcca6;
    undefined field19152_0xcca7;
    undefined field19153_0xcca8;
    undefined field19154_0xcca9;
    undefined field19155_0xccaa;
    undefined field19156_0xccab;
    undefined field19157_0xccac;
    undefined field19158_0xccad;
    undefined field19159_0xccae;
    undefined field19160_0xccaf;
    undefined field19161_0xccb0;
    undefined field19162_0xccb1;
    undefined field19163_0xccb2;
    undefined field19164_0xccb3;
    undefined field19165_0xccb4;
    undefined field19166_0xccb5;
    undefined field19167_0xccb6;
    undefined field19168_0xccb7;
    undefined field19169_0xccb8;
    undefined field19170_0xccb9;
    undefined field19171_0xccba;
    undefined field19172_0xccbb;
    undefined field19173_0xccbc;
    undefined field19174_0xccbd;
    undefined field19175_0xccbe;
    undefined field19176_0xccbf;
    undefined field19177_0xccc0;
    undefined field19178_0xccc1;
    undefined field19179_0xccc2;
    undefined field19180_0xccc3;
    undefined field19181_0xccc4;
    undefined field19182_0xccc5;
    undefined field19183_0xccc6;
    undefined field19184_0xccc7;
    undefined field19185_0xccc8;
    undefined field19186_0xccc9;
    undefined field19187_0xccca;
    undefined field19188_0xcccb;
    undefined field19189_0xcccc;
    undefined field19190_0xcccd;
    undefined field19191_0xccce;
    undefined field19192_0xcccf;
    undefined field19193_0xccd0;
    undefined field19194_0xccd1;
    undefined field19195_0xccd2;
    undefined field19196_0xccd3;
    undefined field19197_0xccd4;
    undefined field19198_0xccd5;
    undefined field19199_0xccd6;
    undefined field19200_0xccd7;
    undefined field19201_0xccd8;
    undefined field19202_0xccd9;
    undefined field19203_0xccda;
    undefined field19204_0xccdb;
    undefined field19205_0xccdc;
    undefined field19206_0xccdd;
    undefined field19207_0xccde;
    undefined field19208_0xccdf;
    undefined field19209_0xcce0;
    undefined field19210_0xcce1;
    undefined field19211_0xcce2;
    undefined field19212_0xcce3;
    undefined field19213_0xcce4;
    undefined field19214_0xcce5;
    undefined field19215_0xcce6;
    undefined field19216_0xcce7;
    undefined field19217_0xcce8;
    undefined field19218_0xcce9;
    undefined field19219_0xccea;
    undefined field19220_0xcceb;
    undefined field19221_0xccec;
    undefined field19222_0xcced;
    undefined field19223_0xccee;
    undefined field19224_0xccef;
    undefined field19225_0xccf0;
    undefined field19226_0xccf1;
    undefined field19227_0xccf2;
    undefined field19228_0xccf3;
    undefined field19229_0xccf4;
    undefined field19230_0xccf5;
    undefined field19231_0xccf6;
    undefined field19232_0xccf7;
    undefined field19233_0xccf8;
    undefined field19234_0xccf9;
    undefined field19235_0xccfa;
    undefined field19236_0xccfb;
    undefined field19237_0xccfc;
    undefined field19238_0xccfd;
    undefined field19239_0xccfe;
    undefined field19240_0xccff;
    undefined field19241_0xcd00;
    undefined field19242_0xcd01;
    undefined field19243_0xcd02;
    undefined field19244_0xcd03;
    undefined field19245_0xcd04;
    undefined field19246_0xcd05;
    undefined field19247_0xcd06;
    undefined field19248_0xcd07;
    undefined field19249_0xcd08;
    undefined field19250_0xcd09;
    undefined field19251_0xcd0a;
    undefined field19252_0xcd0b;
    undefined field19253_0xcd0c;
    undefined field19254_0xcd0d;
    undefined field19255_0xcd0e;
    undefined field19256_0xcd0f;
    undefined field19257_0xcd10;
    undefined field19258_0xcd11;
    undefined field19259_0xcd12;
    undefined field19260_0xcd13;
    undefined field19261_0xcd14;
    undefined field19262_0xcd15;
    undefined field19263_0xcd16;
    undefined field19264_0xcd17;
    undefined field19265_0xcd18;
    undefined field19266_0xcd19;
    undefined field19267_0xcd1a;
    undefined field19268_0xcd1b;
    undefined field19269_0xcd1c;
    undefined field19270_0xcd1d;
    undefined field19271_0xcd1e;
    undefined field19272_0xcd1f;
    undefined field19273_0xcd20;
    undefined field19274_0xcd21;
    undefined field19275_0xcd22;
    undefined field19276_0xcd23;
    undefined field19277_0xcd24;
    undefined field19278_0xcd25;
    undefined field19279_0xcd26;
    undefined field19280_0xcd27;
    undefined field19281_0xcd28;
    undefined field19282_0xcd29;
    undefined field19283_0xcd2a;
    undefined field19284_0xcd2b;
    undefined field19285_0xcd2c;
    undefined field19286_0xcd2d;
    undefined field19287_0xcd2e;
    undefined field19288_0xcd2f;
    undefined field19289_0xcd30;
    undefined field19290_0xcd31;
    undefined field19291_0xcd32;
    undefined field19292_0xcd33;
    undefined field19293_0xcd34;
    undefined field19294_0xcd35;
    undefined field19295_0xcd36;
    undefined field19296_0xcd37;
    undefined field19297_0xcd38;
    undefined field19298_0xcd39;
    undefined field19299_0xcd3a;
    undefined field19300_0xcd3b;
    undefined field19301_0xcd3c;
    undefined field19302_0xcd3d;
    undefined field19303_0xcd3e;
    undefined field19304_0xcd3f;
    undefined field19305_0xcd40;
    undefined field19306_0xcd41;
    undefined field19307_0xcd42;
    undefined field19308_0xcd43;
    undefined field19309_0xcd44;
    undefined field19310_0xcd45;
    undefined field19311_0xcd46;
    undefined field19312_0xcd47;
    undefined field19313_0xcd48;
    undefined field19314_0xcd49;
    undefined field19315_0xcd4a;
    undefined field19316_0xcd4b;
    undefined field19317_0xcd4c;
    undefined field19318_0xcd4d;
    undefined field19319_0xcd4e;
    undefined field19320_0xcd4f;
    undefined field19321_0xcd50;
    undefined field19322_0xcd51;
    undefined field19323_0xcd52;
    undefined field19324_0xcd53;
    undefined field19325_0xcd54;
    undefined field19326_0xcd55;
    undefined field19327_0xcd56;
    undefined field19328_0xcd57;
    undefined field19329_0xcd58;
    undefined field19330_0xcd59;
    undefined field19331_0xcd5a;
    undefined field19332_0xcd5b;
    undefined field19333_0xcd5c;
    undefined field19334_0xcd5d;
    undefined field19335_0xcd5e;
    undefined field19336_0xcd5f;
    undefined field19337_0xcd60;
    undefined field19338_0xcd61;
    undefined field19339_0xcd62;
    undefined field19340_0xcd63;
    undefined field19341_0xcd64;
    undefined field19342_0xcd65;
    undefined field19343_0xcd66;
    undefined field19344_0xcd67;
    undefined field19345_0xcd68;
    undefined field19346_0xcd69;
    undefined field19347_0xcd6a;
    undefined field19348_0xcd6b;
    undefined field19349_0xcd6c;
    undefined field19350_0xcd6d;
    undefined field19351_0xcd6e;
    undefined field19352_0xcd6f;
    undefined field19353_0xcd70;
    undefined field19354_0xcd71;
    undefined field19355_0xcd72;
    undefined field19356_0xcd73;
    undefined field19357_0xcd74;
    undefined field19358_0xcd75;
    undefined field19359_0xcd76;
    undefined field19360_0xcd77;
    undefined field19361_0xcd78;
    undefined field19362_0xcd79;
    undefined field19363_0xcd7a;
    undefined field19364_0xcd7b;
    undefined field19365_0xcd7c;
    undefined field19366_0xcd7d;
    undefined field19367_0xcd7e;
    undefined field19368_0xcd7f;
    undefined field19369_0xcd80;
    undefined field19370_0xcd81;
    undefined field19371_0xcd82;
    undefined field19372_0xcd83;
    undefined field19373_0xcd84;
    undefined field19374_0xcd85;
    undefined field19375_0xcd86;
    undefined field19376_0xcd87;
    undefined field19377_0xcd88;
    undefined field19378_0xcd89;
    undefined field19379_0xcd8a;
    undefined field19380_0xcd8b;
    undefined field19381_0xcd8c;
    undefined field19382_0xcd8d;
    undefined field19383_0xcd8e;
    undefined field19384_0xcd8f;
    undefined field19385_0xcd90;
    undefined field19386_0xcd91;
    undefined field19387_0xcd92;
    undefined field19388_0xcd93;
    undefined field19389_0xcd94;
    undefined field19390_0xcd95;
    undefined field19391_0xcd96;
    undefined field19392_0xcd97;
    undefined field19393_0xcd98;
    undefined field19394_0xcd99;
    undefined field19395_0xcd9a;
    undefined field19396_0xcd9b;
    undefined field19397_0xcd9c;
    undefined field19398_0xcd9d;
    undefined field19399_0xcd9e;
    undefined field19400_0xcd9f;
    undefined field19401_0xcda0;
    undefined field19402_0xcda1;
    undefined field19403_0xcda2;
    undefined field19404_0xcda3;
    undefined field19405_0xcda4;
    undefined field19406_0xcda5;
    undefined field19407_0xcda6;
    undefined field19408_0xcda7;
    undefined field19409_0xcda8;
    undefined field19410_0xcda9;
    undefined field19411_0xcdaa;
    undefined field19412_0xcdab;
    undefined field19413_0xcdac;
    undefined field19414_0xcdad;
    undefined field19415_0xcdae;
    undefined field19416_0xcdaf;
    undefined field19417_0xcdb0;
    undefined field19418_0xcdb1;
    undefined field19419_0xcdb2;
    undefined field19420_0xcdb3;
    undefined field19421_0xcdb4;
    undefined field19422_0xcdb5;
    undefined field19423_0xcdb6;
    undefined field19424_0xcdb7;
    undefined field19425_0xcdb8;
    undefined field19426_0xcdb9;
    undefined field19427_0xcdba;
    undefined field19428_0xcdbb;
    undefined field19429_0xcdbc;
    undefined field19430_0xcdbd;
    undefined field19431_0xcdbe;
    undefined field19432_0xcdbf;
    undefined field19433_0xcdc0;
    undefined field19434_0xcdc1;
    undefined field19435_0xcdc2;
    undefined field19436_0xcdc3;
    undefined field19437_0xcdc4;
    undefined field19438_0xcdc5;
    undefined field19439_0xcdc6;
    undefined field19440_0xcdc7;
    undefined field19441_0xcdc8;
    undefined field19442_0xcdc9;
    undefined field19443_0xcdca;
    undefined field19444_0xcdcb;
    undefined field19445_0xcdcc;
    undefined field19446_0xcdcd;
    undefined field19447_0xcdce;
    undefined field19448_0xcdcf;
    undefined field19449_0xcdd0;
    undefined field19450_0xcdd1;
    undefined field19451_0xcdd2;
    undefined field19452_0xcdd3;
    undefined field19453_0xcdd4;
    undefined field19454_0xcdd5;
    undefined field19455_0xcdd6;
    undefined field19456_0xcdd7;
    undefined field19457_0xcdd8;
    undefined field19458_0xcdd9;
    undefined field19459_0xcdda;
    undefined field19460_0xcddb;
    undefined field19461_0xcddc;
    undefined field19462_0xcddd;
    undefined field19463_0xcdde;
    undefined field19464_0xcddf;
    undefined field19465_0xcde0;
    undefined field19466_0xcde1;
    undefined field19467_0xcde2;
    undefined field19468_0xcde3;
    undefined field19469_0xcde4;
    undefined field19470_0xcde5;
    undefined field19471_0xcde6;
    undefined field19472_0xcde7;
    undefined field19473_0xcde8;
    undefined field19474_0xcde9;
    undefined field19475_0xcdea;
    undefined field19476_0xcdeb;
    undefined field19477_0xcdec;
    undefined field19478_0xcded;
    undefined field19479_0xcdee;
    undefined field19480_0xcdef;
    undefined field19481_0xcdf0;
    undefined field19482_0xcdf1;
    undefined field19483_0xcdf2;
    undefined field19484_0xcdf3;
    undefined field19485_0xcdf4;
    undefined field19486_0xcdf5;
    undefined field19487_0xcdf6;
    undefined field19488_0xcdf7;
    undefined field19489_0xcdf8;
    undefined field19490_0xcdf9;
    undefined field19491_0xcdfa;
    undefined field19492_0xcdfb;
    undefined field19493_0xcdfc;
    undefined field19494_0xcdfd;
    undefined field19495_0xcdfe;
    undefined field19496_0xcdff;
    undefined field19497_0xce00;
    undefined field19498_0xce01;
    undefined field19499_0xce02;
    undefined field19500_0xce03;
    undefined field19501_0xce04;
    undefined field19502_0xce05;
    undefined field19503_0xce06;
    undefined field19504_0xce07;
    undefined field19505_0xce08;
    undefined field19506_0xce09;
    undefined field19507_0xce0a;
    undefined field19508_0xce0b;
    undefined field19509_0xce0c;
    undefined field19510_0xce0d;
    undefined field19511_0xce0e;
    undefined field19512_0xce0f;
    undefined field19513_0xce10;
    undefined field19514_0xce11;
    undefined field19515_0xce12;
    undefined field19516_0xce13;
    undefined field19517_0xce14;
    undefined field19518_0xce15;
    undefined field19519_0xce16;
    undefined field19520_0xce17;
    undefined field19521_0xce18;
    undefined field19522_0xce19;
    undefined field19523_0xce1a;
    undefined field19524_0xce1b;
    undefined field19525_0xce1c;
    undefined field19526_0xce1d;
    undefined field19527_0xce1e;
    undefined field19528_0xce1f;
    undefined field19529_0xce20;
    undefined field19530_0xce21;
    undefined field19531_0xce22;
    undefined field19532_0xce23;
    undefined field19533_0xce24;
    undefined field19534_0xce25;
    undefined field19535_0xce26;
    undefined field19536_0xce27;
    undefined field19537_0xce28;
    undefined field19538_0xce29;
    undefined field19539_0xce2a;
    undefined field19540_0xce2b;
    undefined field19541_0xce2c;
    undefined field19542_0xce2d;
    undefined field19543_0xce2e;
    undefined field19544_0xce2f;
    undefined field19545_0xce30;
    undefined field19546_0xce31;
    undefined field19547_0xce32;
    undefined field19548_0xce33;
    undefined field19549_0xce34;
    undefined field19550_0xce35;
    undefined field19551_0xce36;
    undefined field19552_0xce37;
    undefined field19553_0xce38;
    undefined field19554_0xce39;
    undefined field19555_0xce3a;
    undefined field19556_0xce3b;
    undefined field19557_0xce3c;
    undefined field19558_0xce3d;
    undefined field19559_0xce3e;
    undefined field19560_0xce3f;
    undefined field19561_0xce40;
    undefined field19562_0xce41;
    undefined field19563_0xce42;
    undefined field19564_0xce43;
    undefined field19565_0xce44;
    undefined field19566_0xce45;
    undefined field19567_0xce46;
    undefined field19568_0xce47;
    undefined field19569_0xce48;
    undefined field19570_0xce49;
    undefined field19571_0xce4a;
    undefined field19572_0xce4b;
    undefined field19573_0xce4c;
    undefined field19574_0xce4d;
    undefined field19575_0xce4e;
    undefined field19576_0xce4f;
    undefined field19577_0xce50;
    undefined field19578_0xce51;
    undefined field19579_0xce52;
    undefined field19580_0xce53;
    undefined field19581_0xce54;
    undefined field19582_0xce55;
    undefined field19583_0xce56;
    undefined field19584_0xce57;
    undefined field19585_0xce58;
    undefined field19586_0xce59;
    undefined field19587_0xce5a;
    undefined field19588_0xce5b;
    undefined field19589_0xce5c;
    undefined field19590_0xce5d;
    undefined field19591_0xce5e;
    undefined field19592_0xce5f;
    undefined field19593_0xce60;
    undefined field19594_0xce61;
    undefined field19595_0xce62;
    undefined field19596_0xce63;
    undefined field19597_0xce64;
    undefined field19598_0xce65;
    undefined field19599_0xce66;
    undefined field19600_0xce67;
    undefined field19601_0xce68;
    undefined field19602_0xce69;
    undefined field19603_0xce6a;
    undefined field19604_0xce6b;
    undefined field19605_0xce6c;
    undefined field19606_0xce6d;
    undefined field19607_0xce6e;
    undefined field19608_0xce6f;
    undefined field19609_0xce70;
    undefined field19610_0xce71;
    undefined field19611_0xce72;
    undefined field19612_0xce73;
    undefined field19613_0xce74;
    undefined field19614_0xce75;
    undefined field19615_0xce76;
    undefined field19616_0xce77;
    undefined field19617_0xce78;
    undefined field19618_0xce79;
    undefined field19619_0xce7a;
    undefined field19620_0xce7b;
    undefined field19621_0xce7c;
    undefined field19622_0xce7d;
    undefined field19623_0xce7e;
    undefined field19624_0xce7f;
    undefined field19625_0xce80;
    undefined field19626_0xce81;
    undefined field19627_0xce82;
    undefined field19628_0xce83;
    undefined field19629_0xce84;
    undefined field19630_0xce85;
    undefined field19631_0xce86;
    undefined field19632_0xce87;
    undefined field19633_0xce88;
    undefined field19634_0xce89;
    undefined field19635_0xce8a;
    undefined field19636_0xce8b;
    undefined field19637_0xce8c;
    undefined field19638_0xce8d;
    undefined field19639_0xce8e;
    undefined field19640_0xce8f;
    undefined field19641_0xce90;
    undefined field19642_0xce91;
    undefined field19643_0xce92;
    undefined field19644_0xce93;
    undefined field19645_0xce94;
    undefined field19646_0xce95;
    undefined field19647_0xce96;
    undefined field19648_0xce97;
    undefined field19649_0xce98;
    undefined field19650_0xce99;
    undefined field19651_0xce9a;
    undefined field19652_0xce9b;
    undefined field19653_0xce9c;
    undefined field19654_0xce9d;
    undefined field19655_0xce9e;
    undefined field19656_0xce9f;
    undefined field19657_0xcea0;
    undefined field19658_0xcea1;
    undefined field19659_0xcea2;
    undefined field19660_0xcea3;
    undefined field19661_0xcea4;
    undefined field19662_0xcea5;
    undefined field19663_0xcea6;
    undefined field19664_0xcea7;
    undefined field19665_0xcea8;
    undefined field19666_0xcea9;
    undefined field19667_0xceaa;
    undefined field19668_0xceab;
    undefined field19669_0xceac;
    undefined field19670_0xcead;
    undefined field19671_0xceae;
    undefined field19672_0xceaf;
    undefined field19673_0xceb0;
    undefined field19674_0xceb1;
    undefined field19675_0xceb2;
    undefined field19676_0xceb3;
    undefined field19677_0xceb4;
    undefined field19678_0xceb5;
    undefined field19679_0xceb6;
    undefined field19680_0xceb7;
    undefined field19681_0xceb8;
    undefined field19682_0xceb9;
    undefined field19683_0xceba;
    undefined field19684_0xcebb;
    undefined field19685_0xcebc;
    undefined field19686_0xcebd;
    undefined field19687_0xcebe;
    undefined field19688_0xcebf;
    undefined field19689_0xcec0;
    undefined field19690_0xcec1;
    undefined field19691_0xcec2;
    undefined field19692_0xcec3;
    undefined field19693_0xcec4;
    undefined field19694_0xcec5;
    undefined field19695_0xcec6;
    undefined field19696_0xcec7;
    undefined field19697_0xcec8;
    undefined field19698_0xcec9;
    undefined field19699_0xceca;
    undefined field19700_0xcecb;
    undefined field19701_0xcecc;
    undefined field19702_0xcecd;
    undefined field19703_0xcece;
    undefined field19704_0xcecf;
    undefined field19705_0xced0;
    undefined field19706_0xced1;
    undefined field19707_0xced2;
    undefined field19708_0xced3;
    undefined field19709_0xced4;
    undefined field19710_0xced5;
    undefined field19711_0xced6;
    undefined field19712_0xced7;
    undefined field19713_0xced8;
    undefined field19714_0xced9;
    undefined field19715_0xceda;
    undefined field19716_0xcedb;
    undefined field19717_0xcedc;
    undefined field19718_0xcedd;
    undefined field19719_0xcede;
    undefined field19720_0xcedf;
    undefined field19721_0xcee0;
    undefined field19722_0xcee1;
    undefined field19723_0xcee2;
    undefined field19724_0xcee3;
    undefined field19725_0xcee4;
    undefined field19726_0xcee5;
    undefined field19727_0xcee6;
    undefined field19728_0xcee7;
    undefined field19729_0xcee8;
    undefined field19730_0xcee9;
    undefined field19731_0xceea;
    undefined field19732_0xceeb;
    undefined field19733_0xceec;
    undefined field19734_0xceed;
    undefined field19735_0xceee;
    undefined field19736_0xceef;
    undefined field19737_0xcef0;
    undefined field19738_0xcef1;
    undefined field19739_0xcef2;
    undefined field19740_0xcef3;
    undefined field19741_0xcef4;
    undefined field19742_0xcef5;
    undefined field19743_0xcef6;
    undefined field19744_0xcef7;
    undefined field19745_0xcef8;
    undefined field19746_0xcef9;
    undefined field19747_0xcefa;
    undefined field19748_0xcefb;
    undefined field19749_0xcefc;
    undefined field19750_0xcefd;
    undefined field19751_0xcefe;
    undefined field19752_0xceff;
    undefined field19753_0xcf00;
    undefined field19754_0xcf01;
    undefined field19755_0xcf02;
    undefined field19756_0xcf03;
    undefined field19757_0xcf04;
    undefined field19758_0xcf05;
    undefined field19759_0xcf06;
    undefined field19760_0xcf07;
    undefined field19761_0xcf08;
    undefined field19762_0xcf09;
    undefined field19763_0xcf0a;
    undefined field19764_0xcf0b;
    undefined field19765_0xcf0c;
    undefined field19766_0xcf0d;
    undefined field19767_0xcf0e;
    undefined field19768_0xcf0f;
    undefined field19769_0xcf10;
    undefined field19770_0xcf11;
    undefined field19771_0xcf12;
    undefined field19772_0xcf13;
    undefined field19773_0xcf14;
    undefined field19774_0xcf15;
    undefined field19775_0xcf16;
    undefined field19776_0xcf17;
    undefined field19777_0xcf18;
    undefined field19778_0xcf19;
    undefined field19779_0xcf1a;
    undefined field19780_0xcf1b;
    undefined field19781_0xcf1c;
    undefined field19782_0xcf1d;
    undefined field19783_0xcf1e;
    undefined field19784_0xcf1f;
    undefined field19785_0xcf20;
    undefined field19786_0xcf21;
    undefined field19787_0xcf22;
    undefined field19788_0xcf23;
    undefined field19789_0xcf24;
    undefined field19790_0xcf25;
    undefined field19791_0xcf26;
    undefined field19792_0xcf27;
    undefined field19793_0xcf28;
    undefined field19794_0xcf29;
    undefined field19795_0xcf2a;
    undefined field19796_0xcf2b;
    undefined field19797_0xcf2c;
    undefined field19798_0xcf2d;
    undefined field19799_0xcf2e;
    undefined field19800_0xcf2f;
    undefined field19801_0xcf30;
    undefined field19802_0xcf31;
    undefined field19803_0xcf32;
    undefined field19804_0xcf33;
    undefined field19805_0xcf34;
    undefined field19806_0xcf35;
    undefined field19807_0xcf36;
    undefined field19808_0xcf37;
    undefined field19809_0xcf38;
    undefined field19810_0xcf39;
    undefined field19811_0xcf3a;
    undefined field19812_0xcf3b;
    undefined field19813_0xcf3c;
    undefined field19814_0xcf3d;
    undefined field19815_0xcf3e;
    undefined field19816_0xcf3f;
    undefined field19817_0xcf40;
    undefined field19818_0xcf41;
    undefined field19819_0xcf42;
    undefined field19820_0xcf43;
    undefined field19821_0xcf44;
    undefined field19822_0xcf45;
    undefined field19823_0xcf46;
    undefined field19824_0xcf47;
    undefined field19825_0xcf48;
    undefined field19826_0xcf49;
    undefined field19827_0xcf4a;
    undefined field19828_0xcf4b;
    undefined field19829_0xcf4c;
    undefined field19830_0xcf4d;
    undefined field19831_0xcf4e;
    undefined field19832_0xcf4f;
    undefined field19833_0xcf50;
    undefined field19834_0xcf51;
    undefined field19835_0xcf52;
    undefined field19836_0xcf53;
    undefined field19837_0xcf54;
    undefined field19838_0xcf55;
    undefined field19839_0xcf56;
    undefined field19840_0xcf57;
    undefined field19841_0xcf58;
    undefined field19842_0xcf59;
    undefined field19843_0xcf5a;
    undefined field19844_0xcf5b;
    undefined field19845_0xcf5c;
    undefined field19846_0xcf5d;
    undefined field19847_0xcf5e;
    undefined field19848_0xcf5f;
    undefined field19849_0xcf60;
    undefined field19850_0xcf61;
    undefined field19851_0xcf62;
    undefined field19852_0xcf63;
    undefined field19853_0xcf64;
    undefined field19854_0xcf65;
    undefined field19855_0xcf66;
    undefined field19856_0xcf67;
    undefined field19857_0xcf68;
    undefined field19858_0xcf69;
    undefined field19859_0xcf6a;
    undefined field19860_0xcf6b;
    undefined field19861_0xcf6c;
    undefined field19862_0xcf6d;
    undefined field19863_0xcf6e;
    undefined field19864_0xcf6f;
    undefined field19865_0xcf70;
    undefined field19866_0xcf71;
    undefined field19867_0xcf72;
    undefined field19868_0xcf73;
    undefined field19869_0xcf74;
    undefined field19870_0xcf75;
    undefined field19871_0xcf76;
    undefined field19872_0xcf77;
    undefined field19873_0xcf78;
    undefined field19874_0xcf79;
    undefined field19875_0xcf7a;
    undefined field19876_0xcf7b;
    undefined field19877_0xcf7c;
    undefined field19878_0xcf7d;
    undefined field19879_0xcf7e;
    undefined field19880_0xcf7f;
    undefined field19881_0xcf80;
    undefined field19882_0xcf81;
    undefined field19883_0xcf82;
    undefined field19884_0xcf83;
    undefined field19885_0xcf84;
    undefined field19886_0xcf85;
    undefined field19887_0xcf86;
    undefined field19888_0xcf87;
    undefined field19889_0xcf88;
    undefined field19890_0xcf89;
    undefined field19891_0xcf8a;
    undefined field19892_0xcf8b;
    undefined field19893_0xcf8c;
    undefined field19894_0xcf8d;
    undefined field19895_0xcf8e;
    undefined field19896_0xcf8f;
    undefined field19897_0xcf90;
    undefined field19898_0xcf91;
    undefined field19899_0xcf92;
    undefined field19900_0xcf93;
    undefined field19901_0xcf94;
    undefined field19902_0xcf95;
    undefined field19903_0xcf96;
    undefined field19904_0xcf97;
    undefined field19905_0xcf98;
    undefined field19906_0xcf99;
    undefined field19907_0xcf9a;
    undefined field19908_0xcf9b;
    undefined field19909_0xcf9c;
    undefined field19910_0xcf9d;
    undefined field19911_0xcf9e;
    undefined field19912_0xcf9f;
    undefined field19913_0xcfa0;
    undefined field19914_0xcfa1;
    undefined field19915_0xcfa2;
    undefined field19916_0xcfa3;
    undefined field19917_0xcfa4;
    undefined field19918_0xcfa5;
    undefined field19919_0xcfa6;
    undefined field19920_0xcfa7;
    undefined field19921_0xcfa8;
    undefined field19922_0xcfa9;
    undefined field19923_0xcfaa;
    undefined field19924_0xcfab;
    undefined field19925_0xcfac;
    undefined field19926_0xcfad;
    undefined field19927_0xcfae;
    undefined field19928_0xcfaf;
    undefined field19929_0xcfb0;
    undefined field19930_0xcfb1;
    undefined field19931_0xcfb2;
    undefined field19932_0xcfb3;
    undefined field19933_0xcfb4;
    undefined field19934_0xcfb5;
    undefined field19935_0xcfb6;
    undefined field19936_0xcfb7;
    undefined field19937_0xcfb8;
    undefined field19938_0xcfb9;
    undefined field19939_0xcfba;
    undefined field19940_0xcfbb;
    undefined field19941_0xcfbc;
    undefined field19942_0xcfbd;
    undefined field19943_0xcfbe;
    undefined field19944_0xcfbf;
    undefined field19945_0xcfc0;
    undefined field19946_0xcfc1;
    undefined field19947_0xcfc2;
    undefined field19948_0xcfc3;
    undefined field19949_0xcfc4;
    undefined field19950_0xcfc5;
    undefined field19951_0xcfc6;
    undefined field19952_0xcfc7;
    undefined field19953_0xcfc8;
    undefined field19954_0xcfc9;
    undefined field19955_0xcfca;
    undefined field19956_0xcfcb;
    undefined field19957_0xcfcc;
    undefined field19958_0xcfcd;
    undefined field19959_0xcfce;
    undefined field19960_0xcfcf;
    undefined field19961_0xcfd0;
    undefined field19962_0xcfd1;
    undefined field19963_0xcfd2;
    undefined field19964_0xcfd3;
    undefined field19965_0xcfd4;
    undefined field19966_0xcfd5;
    undefined field19967_0xcfd6;
    undefined field19968_0xcfd7;
    undefined field19969_0xcfd8;
    undefined field19970_0xcfd9;
    undefined field19971_0xcfda;
    undefined field19972_0xcfdb;
    undefined field19973_0xcfdc;
    undefined field19974_0xcfdd;
    undefined field19975_0xcfde;
    undefined field19976_0xcfdf;
    undefined field19977_0xcfe0;
    undefined field19978_0xcfe1;
    undefined field19979_0xcfe2;
    undefined field19980_0xcfe3;
    undefined field19981_0xcfe4;
    undefined field19982_0xcfe5;
    undefined field19983_0xcfe6;
    undefined field19984_0xcfe7;
    undefined field19985_0xcfe8;
    undefined field19986_0xcfe9;
    undefined field19987_0xcfea;
    undefined field19988_0xcfeb;
    undefined field19989_0xcfec;
    undefined field19990_0xcfed;
    undefined field19991_0xcfee;
    undefined field19992_0xcfef;
    undefined field19993_0xcff0;
    undefined field19994_0xcff1;
    undefined field19995_0xcff2;
    undefined field19996_0xcff3;
    undefined field19997_0xcff4;
    undefined field19998_0xcff5;
    undefined field19999_0xcff6;
    undefined field20000_0xcff7;
    undefined field20001_0xcff8;
    undefined field20002_0xcff9;
    undefined field20003_0xcffa;
    undefined field20004_0xcffb;
    undefined field20005_0xcffc;
    undefined field20006_0xcffd;
    undefined field20007_0xcffe;
    undefined field20008_0xcfff;
    undefined field20009_0xd000;
    undefined field20010_0xd001;
    undefined field20011_0xd002;
    undefined field20012_0xd003;
    undefined field20013_0xd004;
    undefined field20014_0xd005;
    undefined field20015_0xd006;
    undefined field20016_0xd007;
    undefined field20017_0xd008;
    undefined field20018_0xd009;
    undefined field20019_0xd00a;
    undefined field20020_0xd00b;
    undefined field20021_0xd00c;
    undefined field20022_0xd00d;
    undefined field20023_0xd00e;
    undefined field20024_0xd00f;
    undefined field20025_0xd010;
    undefined field20026_0xd011;
    undefined field20027_0xd012;
    undefined field20028_0xd013;
    undefined field20029_0xd014;
    undefined field20030_0xd015;
    undefined field20031_0xd016;
    undefined field20032_0xd017;
    undefined field20033_0xd018;
    undefined field20034_0xd019;
    undefined field20035_0xd01a;
    undefined field20036_0xd01b;
    undefined field20037_0xd01c;
    undefined field20038_0xd01d;
    undefined field20039_0xd01e;
    undefined field20040_0xd01f;
    undefined field20041_0xd020;
    undefined field20042_0xd021;
    undefined field20043_0xd022;
    undefined field20044_0xd023;
    undefined field20045_0xd024;
    undefined field20046_0xd025;
    undefined field20047_0xd026;
    undefined field20048_0xd027;
    undefined field20049_0xd028;
    undefined field20050_0xd029;
    undefined field20051_0xd02a;
    undefined field20052_0xd02b;
    undefined field20053_0xd02c;
    undefined field20054_0xd02d;
    undefined field20055_0xd02e;
    undefined field20056_0xd02f;
    undefined field20057_0xd030;
    undefined field20058_0xd031;
    undefined field20059_0xd032;
    undefined field20060_0xd033;
    undefined field20061_0xd034;
    undefined field20062_0xd035;
    undefined field20063_0xd036;
    undefined field20064_0xd037;
    undefined field20065_0xd038;
    undefined field20066_0xd039;
    undefined field20067_0xd03a;
    undefined field20068_0xd03b;
    undefined field20069_0xd03c;
    undefined field20070_0xd03d;
    undefined field20071_0xd03e;
    undefined field20072_0xd03f;
    undefined field20073_0xd040;
    undefined field20074_0xd041;
    undefined field20075_0xd042;
    undefined field20076_0xd043;
    undefined field20077_0xd044;
    undefined field20078_0xd045;
    undefined field20079_0xd046;
    undefined field20080_0xd047;
    undefined field20081_0xd048;
    undefined field20082_0xd049;
    undefined field20083_0xd04a;
    undefined field20084_0xd04b;
    undefined field20085_0xd04c;
    undefined field20086_0xd04d;
    undefined field20087_0xd04e;
    undefined field20088_0xd04f;
    undefined field20089_0xd050;
    undefined field20090_0xd051;
    undefined field20091_0xd052;
    undefined field20092_0xd053;
    undefined field20093_0xd054;
    undefined field20094_0xd055;
    undefined field20095_0xd056;
    undefined field20096_0xd057;
    undefined field20097_0xd058;
    undefined field20098_0xd059;
    undefined field20099_0xd05a;
    undefined field20100_0xd05b;
    undefined field20101_0xd05c;
    undefined field20102_0xd05d;
    undefined field20103_0xd05e;
    undefined field20104_0xd05f;
    undefined field20105_0xd060;
    undefined field20106_0xd061;
    undefined field20107_0xd062;
    undefined field20108_0xd063;
    undefined field20109_0xd064;
    undefined field20110_0xd065;
    undefined field20111_0xd066;
    undefined field20112_0xd067;
    undefined field20113_0xd068;
    undefined field20114_0xd069;
    undefined field20115_0xd06a;
    undefined field20116_0xd06b;
    undefined field20117_0xd06c;
    undefined field20118_0xd06d;
    undefined field20119_0xd06e;
    undefined field20120_0xd06f;
    undefined field20121_0xd070;
    undefined field20122_0xd071;
    undefined field20123_0xd072;
    undefined field20124_0xd073;
    undefined field20125_0xd074;
    undefined field20126_0xd075;
    undefined field20127_0xd076;
    undefined field20128_0xd077;
    undefined field20129_0xd078;
    undefined field20130_0xd079;
    undefined field20131_0xd07a;
    undefined field20132_0xd07b;
    undefined field20133_0xd07c;
    undefined field20134_0xd07d;
    undefined field20135_0xd07e;
    undefined field20136_0xd07f;
    undefined field20137_0xd080;
    undefined field20138_0xd081;
    undefined field20139_0xd082;
    undefined field20140_0xd083;
    undefined field20141_0xd084;
    undefined field20142_0xd085;
    undefined field20143_0xd086;
    undefined field20144_0xd087;
    undefined field20145_0xd088;
    undefined field20146_0xd089;
    undefined field20147_0xd08a;
    undefined field20148_0xd08b;
    undefined field20149_0xd08c;
    undefined field20150_0xd08d;
    undefined field20151_0xd08e;
    undefined field20152_0xd08f;
    undefined field20153_0xd090;
    undefined field20154_0xd091;
    undefined field20155_0xd092;
    undefined field20156_0xd093;
    undefined field20157_0xd094;
    undefined field20158_0xd095;
    undefined field20159_0xd096;
    undefined field20160_0xd097;
    undefined field20161_0xd098;
    undefined field20162_0xd099;
    undefined field20163_0xd09a;
    undefined field20164_0xd09b;
    undefined field20165_0xd09c;
    undefined field20166_0xd09d;
    undefined field20167_0xd09e;
    undefined field20168_0xd09f;
    undefined field20169_0xd0a0;
    undefined field20170_0xd0a1;
    undefined field20171_0xd0a2;
    undefined field20172_0xd0a3;
    undefined field20173_0xd0a4;
    undefined field20174_0xd0a5;
    undefined field20175_0xd0a6;
    undefined field20176_0xd0a7;
    undefined field20177_0xd0a8;
    undefined field20178_0xd0a9;
    undefined field20179_0xd0aa;
    undefined field20180_0xd0ab;
    undefined field20181_0xd0ac;
    undefined field20182_0xd0ad;
    undefined field20183_0xd0ae;
    undefined field20184_0xd0af;
    undefined field20185_0xd0b0;
    undefined field20186_0xd0b1;
    undefined field20187_0xd0b2;
    undefined field20188_0xd0b3;
    undefined field20189_0xd0b4;
    undefined field20190_0xd0b5;
    undefined field20191_0xd0b6;
    undefined field20192_0xd0b7;
    undefined field20193_0xd0b8;
    undefined field20194_0xd0b9;
    undefined field20195_0xd0ba;
    undefined field20196_0xd0bb;
    undefined field20197_0xd0bc;
    undefined field20198_0xd0bd;
    undefined field20199_0xd0be;
    undefined field20200_0xd0bf;
    undefined field20201_0xd0c0;
    undefined field20202_0xd0c1;
    undefined field20203_0xd0c2;
    undefined field20204_0xd0c3;
    undefined field20205_0xd0c4;
    undefined field20206_0xd0c5;
    undefined field20207_0xd0c6;
    undefined field20208_0xd0c7;
    undefined field20209_0xd0c8;
    undefined field20210_0xd0c9;
    undefined field20211_0xd0ca;
    undefined field20212_0xd0cb;
    undefined field20213_0xd0cc;
    undefined field20214_0xd0cd;
    undefined field20215_0xd0ce;
    undefined field20216_0xd0cf;
    undefined field20217_0xd0d0;
    undefined field20218_0xd0d1;
    undefined field20219_0xd0d2;
    undefined field20220_0xd0d3;
    undefined field20221_0xd0d4;
    undefined field20222_0xd0d5;
    undefined field20223_0xd0d6;
    undefined field20224_0xd0d7;
    undefined field20225_0xd0d8;
    undefined field20226_0xd0d9;
    undefined field20227_0xd0da;
    undefined field20228_0xd0db;
    undefined field20229_0xd0dc;
    undefined field20230_0xd0dd;
    undefined field20231_0xd0de;
    undefined field20232_0xd0df;
    undefined field20233_0xd0e0;
    undefined field20234_0xd0e1;
    undefined field20235_0xd0e2;
    undefined field20236_0xd0e3;
    undefined field20237_0xd0e4;
    undefined field20238_0xd0e5;
    undefined field20239_0xd0e6;
    undefined field20240_0xd0e7;
    undefined field20241_0xd0e8;
    undefined field20242_0xd0e9;
    undefined field20243_0xd0ea;
    undefined field20244_0xd0eb;
    undefined field20245_0xd0ec;
    undefined field20246_0xd0ed;
    undefined field20247_0xd0ee;
    undefined field20248_0xd0ef;
    undefined field20249_0xd0f0;
    undefined field20250_0xd0f1;
    undefined field20251_0xd0f2;
    undefined field20252_0xd0f3;
    undefined field20253_0xd0f4;
    undefined field20254_0xd0f5;
    undefined field20255_0xd0f6;
    undefined field20256_0xd0f7;
    undefined field20257_0xd0f8;
    undefined field20258_0xd0f9;
    undefined field20259_0xd0fa;
    undefined field20260_0xd0fb;
    undefined field20261_0xd0fc;
    undefined field20262_0xd0fd;
    undefined field20263_0xd0fe;
    undefined field20264_0xd0ff;
    undefined field20265_0xd100;
    undefined field20266_0xd101;
    undefined field20267_0xd102;
    undefined field20268_0xd103;
    undefined field20269_0xd104;
    undefined field20270_0xd105;
    undefined field20271_0xd106;
    undefined field20272_0xd107;
    undefined field20273_0xd108;
    undefined field20274_0xd109;
    undefined field20275_0xd10a;
    undefined field20276_0xd10b;
    undefined field20277_0xd10c;
    undefined field20278_0xd10d;
    undefined field20279_0xd10e;
    undefined field20280_0xd10f;
    undefined field20281_0xd110;
    undefined field20282_0xd111;
    undefined field20283_0xd112;
    undefined field20284_0xd113;
    undefined field20285_0xd114;
    undefined field20286_0xd115;
    undefined field20287_0xd116;
    undefined field20288_0xd117;
    undefined field20289_0xd118;
    undefined field20290_0xd119;
    undefined field20291_0xd11a;
    undefined field20292_0xd11b;
    undefined field20293_0xd11c;
    undefined field20294_0xd11d;
    undefined field20295_0xd11e;
    undefined field20296_0xd11f;
    undefined field20297_0xd120;
    undefined field20298_0xd121;
    undefined field20299_0xd122;
    undefined field20300_0xd123;
    undefined field20301_0xd124;
    undefined field20302_0xd125;
    undefined field20303_0xd126;
    undefined field20304_0xd127;
    undefined field20305_0xd128;
    undefined field20306_0xd129;
    undefined field20307_0xd12a;
    undefined field20308_0xd12b;
    undefined field20309_0xd12c;
    undefined field20310_0xd12d;
    undefined field20311_0xd12e;
    undefined field20312_0xd12f;
    undefined field20313_0xd130;
    undefined field20314_0xd131;
    undefined field20315_0xd132;
    undefined field20316_0xd133;
    undefined field20317_0xd134;
    undefined field20318_0xd135;
    undefined field20319_0xd136;
    undefined field20320_0xd137;
    undefined field20321_0xd138;
    undefined field20322_0xd139;
    undefined field20323_0xd13a;
    undefined field20324_0xd13b;
    undefined field20325_0xd13c;
    undefined field20326_0xd13d;
    undefined field20327_0xd13e;
    undefined field20328_0xd13f;
    undefined field20329_0xd140;
    undefined field20330_0xd141;
    undefined field20331_0xd142;
    undefined field20332_0xd143;
    undefined field20333_0xd144;
    undefined field20334_0xd145;
    undefined field20335_0xd146;
    undefined field20336_0xd147;
    undefined field20337_0xd148;
    undefined field20338_0xd149;
    undefined field20339_0xd14a;
    undefined field20340_0xd14b;
    undefined field20341_0xd14c;
    undefined field20342_0xd14d;
    undefined field20343_0xd14e;
    undefined field20344_0xd14f;
    undefined field20345_0xd150;
    undefined field20346_0xd151;
    undefined field20347_0xd152;
    undefined field20348_0xd153;
    undefined field20349_0xd154;
    undefined field20350_0xd155;
    undefined field20351_0xd156;
    undefined field20352_0xd157;
    undefined field20353_0xd158;
    undefined field20354_0xd159;
    undefined field20355_0xd15a;
    undefined field20356_0xd15b;
    undefined field20357_0xd15c;
    undefined field20358_0xd15d;
    undefined field20359_0xd15e;
    undefined field20360_0xd15f;
    undefined field20361_0xd160;
    undefined field20362_0xd161;
    undefined field20363_0xd162;
    undefined field20364_0xd163;
    undefined field20365_0xd164;
    undefined field20366_0xd165;
    undefined field20367_0xd166;
    undefined field20368_0xd167;
    undefined field20369_0xd168;
    undefined field20370_0xd169;
    undefined field20371_0xd16a;
    undefined field20372_0xd16b;
    undefined field20373_0xd16c;
    undefined field20374_0xd16d;
    undefined field20375_0xd16e;
    undefined field20376_0xd16f;
    undefined field20377_0xd170;
    undefined field20378_0xd171;
    undefined field20379_0xd172;
    undefined field20380_0xd173;
    undefined field20381_0xd174;
    undefined field20382_0xd175;
    undefined field20383_0xd176;
    undefined field20384_0xd177;
    undefined field20385_0xd178;
    undefined field20386_0xd179;
    undefined field20387_0xd17a;
    undefined field20388_0xd17b;
    undefined field20389_0xd17c;
    undefined field20390_0xd17d;
    undefined field20391_0xd17e;
    undefined field20392_0xd17f;
    undefined field20393_0xd180;
    undefined field20394_0xd181;
    undefined field20395_0xd182;
    undefined field20396_0xd183;
    undefined field20397_0xd184;
    undefined field20398_0xd185;
    undefined field20399_0xd186;
    undefined field20400_0xd187;
    undefined field20401_0xd188;
    undefined field20402_0xd189;
    undefined field20403_0xd18a;
    undefined field20404_0xd18b;
    undefined field20405_0xd18c;
    undefined field20406_0xd18d;
    undefined field20407_0xd18e;
    undefined field20408_0xd18f;
    undefined field20409_0xd190;
    undefined field20410_0xd191;
    undefined field20411_0xd192;
    undefined field20412_0xd193;
    undefined field20413_0xd194;
    undefined field20414_0xd195;
    undefined field20415_0xd196;
    undefined field20416_0xd197;
    undefined field20417_0xd198;
    undefined field20418_0xd199;
    undefined field20419_0xd19a;
    undefined field20420_0xd19b;
    undefined field20421_0xd19c;
    undefined field20422_0xd19d;
    undefined field20423_0xd19e;
    undefined field20424_0xd19f;
    undefined field20425_0xd1a0;
    undefined field20426_0xd1a1;
    undefined field20427_0xd1a2;
    undefined field20428_0xd1a3;
    undefined field20429_0xd1a4;
    undefined field20430_0xd1a5;
    undefined field20431_0xd1a6;
    undefined field20432_0xd1a7;
    undefined field20433_0xd1a8;
    undefined field20434_0xd1a9;
    undefined field20435_0xd1aa;
    undefined field20436_0xd1ab;
    undefined field20437_0xd1ac;
    undefined field20438_0xd1ad;
    undefined field20439_0xd1ae;
    undefined field20440_0xd1af;
    undefined field20441_0xd1b0;
    undefined field20442_0xd1b1;
    undefined field20443_0xd1b2;
    undefined field20444_0xd1b3;
    undefined field20445_0xd1b4;
    undefined field20446_0xd1b5;
    undefined field20447_0xd1b6;
    undefined field20448_0xd1b7;
    undefined field20449_0xd1b8;
    undefined field20450_0xd1b9;
    undefined field20451_0xd1ba;
    undefined field20452_0xd1bb;
    undefined field20453_0xd1bc;
    undefined field20454_0xd1bd;
    undefined field20455_0xd1be;
    undefined field20456_0xd1bf;
    undefined field20457_0xd1c0;
    undefined field20458_0xd1c1;
    undefined field20459_0xd1c2;
    undefined field20460_0xd1c3;
    undefined field20461_0xd1c4;
    undefined field20462_0xd1c5;
    undefined field20463_0xd1c6;
    undefined field20464_0xd1c7;
    undefined field20465_0xd1c8;
    undefined field20466_0xd1c9;
    undefined field20467_0xd1ca;
    undefined field20468_0xd1cb;
    undefined field20469_0xd1cc;
    undefined field20470_0xd1cd;
    undefined field20471_0xd1ce;
    undefined field20472_0xd1cf;
    undefined field20473_0xd1d0;
    undefined field20474_0xd1d1;
    undefined field20475_0xd1d2;
    undefined field20476_0xd1d3;
    undefined field20477_0xd1d4;
    undefined field20478_0xd1d5;
    undefined field20479_0xd1d6;
    undefined field20480_0xd1d7;
    undefined field20481_0xd1d8;
    undefined field20482_0xd1d9;
    undefined field20483_0xd1da;
    undefined field20484_0xd1db;
    undefined field20485_0xd1dc;
    undefined field20486_0xd1dd;
    undefined field20487_0xd1de;
    undefined field20488_0xd1df;
    undefined field20489_0xd1e0;
    undefined field20490_0xd1e1;
    undefined field20491_0xd1e2;
    undefined field20492_0xd1e3;
    undefined field20493_0xd1e4;
    undefined field20494_0xd1e5;
    undefined field20495_0xd1e6;
    undefined field20496_0xd1e7;
    undefined field20497_0xd1e8;
    undefined field20498_0xd1e9;
    undefined field20499_0xd1ea;
    undefined field20500_0xd1eb;
    undefined field20501_0xd1ec;
    undefined field20502_0xd1ed;
    undefined field20503_0xd1ee;
    undefined field20504_0xd1ef;
    undefined field20505_0xd1f0;
    undefined field20506_0xd1f1;
    undefined field20507_0xd1f2;
    undefined field20508_0xd1f3;
    undefined field20509_0xd1f4;
    undefined field20510_0xd1f5;
    undefined field20511_0xd1f6;
    undefined field20512_0xd1f7;
    undefined field20513_0xd1f8;
    undefined field20514_0xd1f9;
    undefined field20515_0xd1fa;
    undefined field20516_0xd1fb;
    undefined field20517_0xd1fc;
    undefined field20518_0xd1fd;
    undefined field20519_0xd1fe;
    undefined field20520_0xd1ff;
    undefined field20521_0xd200;
    undefined field20522_0xd201;
    undefined field20523_0xd202;
    undefined field20524_0xd203;
    undefined field20525_0xd204;
    undefined field20526_0xd205;
    undefined field20527_0xd206;
    undefined field20528_0xd207;
    undefined field20529_0xd208;
    undefined field20530_0xd209;
    undefined field20531_0xd20a;
    undefined field20532_0xd20b;
    undefined field20533_0xd20c;
    undefined field20534_0xd20d;
    undefined field20535_0xd20e;
    undefined field20536_0xd20f;
    undefined field20537_0xd210;
    undefined field20538_0xd211;
    undefined field20539_0xd212;
    undefined field20540_0xd213;
    undefined field20541_0xd214;
    undefined field20542_0xd215;
    undefined field20543_0xd216;
    undefined field20544_0xd217;
    undefined field20545_0xd218;
    undefined field20546_0xd219;
    undefined field20547_0xd21a;
    undefined field20548_0xd21b;
    undefined field20549_0xd21c;
    undefined field20550_0xd21d;
    undefined field20551_0xd21e;
    undefined field20552_0xd21f;
    undefined field20553_0xd220;
    undefined field20554_0xd221;
    undefined field20555_0xd222;
    undefined field20556_0xd223;
    undefined field20557_0xd224;
    undefined field20558_0xd225;
    undefined field20559_0xd226;
    undefined field20560_0xd227;
    undefined field20561_0xd228;
    undefined field20562_0xd229;
    undefined field20563_0xd22a;
    undefined field20564_0xd22b;
    undefined field20565_0xd22c;
    undefined field20566_0xd22d;
    undefined field20567_0xd22e;
    undefined field20568_0xd22f;
    undefined field20569_0xd230;
    undefined field20570_0xd231;
    undefined field20571_0xd232;
    undefined field20572_0xd233;
    undefined field20573_0xd234;
    undefined field20574_0xd235;
    undefined field20575_0xd236;
    undefined field20576_0xd237;
    undefined field20577_0xd238;
    undefined field20578_0xd239;
    undefined field20579_0xd23a;
    undefined field20580_0xd23b;
    undefined field20581_0xd23c;
    undefined field20582_0xd23d;
    undefined field20583_0xd23e;
    undefined field20584_0xd23f;
    undefined field20585_0xd240;
    undefined field20586_0xd241;
    undefined field20587_0xd242;
    undefined field20588_0xd243;
    undefined field20589_0xd244;
    undefined field20590_0xd245;
    undefined field20591_0xd246;
    undefined field20592_0xd247;
    undefined field20593_0xd248;
    undefined field20594_0xd249;
    undefined field20595_0xd24a;
    undefined field20596_0xd24b;
    undefined field20597_0xd24c;
    undefined field20598_0xd24d;
    undefined field20599_0xd24e;
    undefined field20600_0xd24f;
    undefined field20601_0xd250;
    undefined field20602_0xd251;
    undefined field20603_0xd252;
    undefined field20604_0xd253;
    undefined field20605_0xd254;
    undefined field20606_0xd255;
    undefined field20607_0xd256;
    undefined field20608_0xd257;
    undefined field20609_0xd258;
    undefined field20610_0xd259;
    undefined field20611_0xd25a;
    undefined field20612_0xd25b;
    undefined field20613_0xd25c;
    undefined field20614_0xd25d;
    undefined field20615_0xd25e;
    undefined field20616_0xd25f;
    undefined field20617_0xd260;
    undefined field20618_0xd261;
    undefined field20619_0xd262;
    undefined field20620_0xd263;
    undefined field20621_0xd264;
    undefined field20622_0xd265;
    undefined field20623_0xd266;
    undefined field20624_0xd267;
    undefined field20625_0xd268;
    undefined field20626_0xd269;
    undefined field20627_0xd26a;
    undefined field20628_0xd26b;
    undefined field20629_0xd26c;
    undefined field20630_0xd26d;
    undefined field20631_0xd26e;
    undefined field20632_0xd26f;
    undefined field20633_0xd270;
    undefined field20634_0xd271;
    undefined field20635_0xd272;
    undefined field20636_0xd273;
    undefined field20637_0xd274;
    undefined field20638_0xd275;
    undefined field20639_0xd276;
    undefined field20640_0xd277;
    undefined field20641_0xd278;
    undefined field20642_0xd279;
    undefined field20643_0xd27a;
    undefined field20644_0xd27b;
    undefined field20645_0xd27c;
    undefined field20646_0xd27d;
    undefined field20647_0xd27e;
    undefined field20648_0xd27f;
    undefined field20649_0xd280;
    undefined field20650_0xd281;
    undefined field20651_0xd282;
    undefined field20652_0xd283;
    undefined field20653_0xd284;
    undefined field20654_0xd285;
    undefined field20655_0xd286;
    undefined field20656_0xd287;
    undefined field20657_0xd288;
    undefined field20658_0xd289;
    undefined field20659_0xd28a;
    undefined field20660_0xd28b;
    undefined field20661_0xd28c;
    undefined field20662_0xd28d;
    undefined field20663_0xd28e;
    undefined field20664_0xd28f;
    undefined field20665_0xd290;
    undefined field20666_0xd291;
    undefined field20667_0xd292;
    undefined field20668_0xd293;
    undefined field20669_0xd294;
    undefined field20670_0xd295;
    undefined field20671_0xd296;
    undefined field20672_0xd297;
    undefined field20673_0xd298;
    undefined field20674_0xd299;
    undefined field20675_0xd29a;
    undefined field20676_0xd29b;
    undefined field20677_0xd29c;
    undefined field20678_0xd29d;
    undefined field20679_0xd29e;
    undefined field20680_0xd29f;
    undefined field20681_0xd2a0;
    undefined field20682_0xd2a1;
    undefined field20683_0xd2a2;
    undefined field20684_0xd2a3;
    undefined field20685_0xd2a4;
    undefined field20686_0xd2a5;
    undefined field20687_0xd2a6;
    undefined field20688_0xd2a7;
    undefined field20689_0xd2a8;
    undefined field20690_0xd2a9;
    undefined field20691_0xd2aa;
    undefined field20692_0xd2ab;
    undefined field20693_0xd2ac;
    undefined field20694_0xd2ad;
    undefined field20695_0xd2ae;
    undefined field20696_0xd2af;
    undefined field20697_0xd2b0;
    undefined field20698_0xd2b1;
    undefined field20699_0xd2b2;
    undefined field20700_0xd2b3;
    undefined field20701_0xd2b4;
    undefined field20702_0xd2b5;
    undefined field20703_0xd2b6;
    undefined field20704_0xd2b7;
    undefined field20705_0xd2b8;
    undefined field20706_0xd2b9;
    undefined field20707_0xd2ba;
    undefined field20708_0xd2bb;
    undefined field20709_0xd2bc;
    undefined field20710_0xd2bd;
    undefined field20711_0xd2be;
    undefined field20712_0xd2bf;
    undefined field20713_0xd2c0;
    undefined field20714_0xd2c1;
    undefined field20715_0xd2c2;
    undefined field20716_0xd2c3;
    undefined field20717_0xd2c4;
    undefined field20718_0xd2c5;
    undefined field20719_0xd2c6;
    undefined field20720_0xd2c7;
    undefined field20721_0xd2c8;
    undefined field20722_0xd2c9;
    undefined field20723_0xd2ca;
    undefined field20724_0xd2cb;
    undefined field20725_0xd2cc;
    undefined field20726_0xd2cd;
    undefined field20727_0xd2ce;
    undefined field20728_0xd2cf;
    undefined field20729_0xd2d0;
    undefined field20730_0xd2d1;
    undefined field20731_0xd2d2;
    undefined field20732_0xd2d3;
    undefined field20733_0xd2d4;
    undefined field20734_0xd2d5;
    undefined field20735_0xd2d6;
    undefined field20736_0xd2d7;
    undefined field20737_0xd2d8;
    undefined field20738_0xd2d9;
    undefined field20739_0xd2da;
    undefined field20740_0xd2db;
    undefined field20741_0xd2dc;
    undefined field20742_0xd2dd;
    undefined field20743_0xd2de;
    undefined field20744_0xd2df;
    undefined field20745_0xd2e0;
    undefined field20746_0xd2e1;
    undefined field20747_0xd2e2;
    undefined field20748_0xd2e3;
    undefined field20749_0xd2e4;
    undefined field20750_0xd2e5;
    undefined field20751_0xd2e6;
    undefined field20752_0xd2e7;
    undefined field20753_0xd2e8;
    undefined field20754_0xd2e9;
    undefined field20755_0xd2ea;
    undefined field20756_0xd2eb;
    undefined field20757_0xd2ec;
    undefined field20758_0xd2ed;
    undefined field20759_0xd2ee;
    undefined field20760_0xd2ef;
    undefined field20761_0xd2f0;
    undefined field20762_0xd2f1;
    undefined field20763_0xd2f2;
    undefined field20764_0xd2f3;
    undefined field20765_0xd2f4;
    undefined field20766_0xd2f5;
    undefined field20767_0xd2f6;
    undefined field20768_0xd2f7;
    undefined field20769_0xd2f8;
    undefined field20770_0xd2f9;
    undefined field20771_0xd2fa;
    undefined field20772_0xd2fb;
    undefined field20773_0xd2fc;
    undefined field20774_0xd2fd;
    undefined field20775_0xd2fe;
    undefined field20776_0xd2ff;
    undefined field20777_0xd300;
    undefined field20778_0xd301;
    undefined field20779_0xd302;
    undefined field20780_0xd303;
    undefined field20781_0xd304;
    undefined field20782_0xd305;
    undefined field20783_0xd306;
    undefined field20784_0xd307;
    undefined field20785_0xd308;
    undefined field20786_0xd309;
    undefined field20787_0xd30a;
    undefined field20788_0xd30b;
    undefined field20789_0xd30c;
    undefined field20790_0xd30d;
    undefined field20791_0xd30e;
    undefined field20792_0xd30f;
    undefined field20793_0xd310;
    undefined field20794_0xd311;
    undefined field20795_0xd312;
    undefined field20796_0xd313;
    undefined field20797_0xd314;
    undefined field20798_0xd315;
    undefined field20799_0xd316;
    undefined field20800_0xd317;
    undefined field20801_0xd318;
    undefined field20802_0xd319;
    undefined field20803_0xd31a;
    undefined field20804_0xd31b;
    undefined field20805_0xd31c;
    undefined field20806_0xd31d;
    undefined field20807_0xd31e;
    undefined field20808_0xd31f;
    undefined field20809_0xd320;
    undefined field20810_0xd321;
    undefined field20811_0xd322;
    undefined field20812_0xd323;
    undefined field20813_0xd324;
    undefined field20814_0xd325;
    undefined field20815_0xd326;
    undefined field20816_0xd327;
    undefined field20817_0xd328;
    undefined field20818_0xd329;
    undefined field20819_0xd32a;
    undefined field20820_0xd32b;
    undefined field20821_0xd32c;
    undefined field20822_0xd32d;
    undefined field20823_0xd32e;
    undefined field20824_0xd32f;
    undefined field20825_0xd330;
    undefined field20826_0xd331;
    undefined field20827_0xd332;
    undefined field20828_0xd333;
    undefined field20829_0xd334;
    undefined field20830_0xd335;
    undefined field20831_0xd336;
    undefined field20832_0xd337;
    undefined field20833_0xd338;
    undefined field20834_0xd339;
    undefined field20835_0xd33a;
    undefined field20836_0xd33b;
    undefined field20837_0xd33c;
    undefined field20838_0xd33d;
    undefined field20839_0xd33e;
    undefined field20840_0xd33f;
    undefined field20841_0xd340;
    undefined field20842_0xd341;
    undefined field20843_0xd342;
    undefined field20844_0xd343;
    undefined field20845_0xd344;
    undefined field20846_0xd345;
    undefined field20847_0xd346;
    undefined field20848_0xd347;
    undefined field20849_0xd348;
    undefined field20850_0xd349;
    undefined field20851_0xd34a;
    undefined field20852_0xd34b;
    undefined field20853_0xd34c;
    undefined field20854_0xd34d;
    undefined field20855_0xd34e;
    undefined field20856_0xd34f;
    undefined field20857_0xd350;
    undefined field20858_0xd351;
    undefined field20859_0xd352;
    undefined field20860_0xd353;
    undefined field20861_0xd354;
    undefined field20862_0xd355;
    undefined field20863_0xd356;
    undefined field20864_0xd357;
    undefined field20865_0xd358;
    undefined field20866_0xd359;
    undefined field20867_0xd35a;
    undefined field20868_0xd35b;
    undefined field20869_0xd35c;
    undefined field20870_0xd35d;
    undefined field20871_0xd35e;
    undefined field20872_0xd35f;
    undefined field20873_0xd360;
    undefined field20874_0xd361;
    undefined field20875_0xd362;
    undefined field20876_0xd363;
    undefined field20877_0xd364;
    undefined field20878_0xd365;
    undefined field20879_0xd366;
    undefined field20880_0xd367;
    undefined field20881_0xd368;
    undefined field20882_0xd369;
    undefined field20883_0xd36a;
    undefined field20884_0xd36b;
    undefined field20885_0xd36c;
    undefined field20886_0xd36d;
    undefined field20887_0xd36e;
    undefined field20888_0xd36f;
    undefined field20889_0xd370;
    undefined field20890_0xd371;
    undefined field20891_0xd372;
    undefined field20892_0xd373;
    undefined field20893_0xd374;
    undefined field20894_0xd375;
    undefined field20895_0xd376;
    undefined field20896_0xd377;
    undefined field20897_0xd378;
    undefined field20898_0xd379;
    undefined field20899_0xd37a;
    undefined field20900_0xd37b;
    undefined field20901_0xd37c;
    undefined field20902_0xd37d;
    undefined field20903_0xd37e;
    undefined field20904_0xd37f;
    undefined field20905_0xd380;
    undefined field20906_0xd381;
    undefined field20907_0xd382;
    undefined field20908_0xd383;
    undefined field20909_0xd384;
    undefined field20910_0xd385;
    undefined field20911_0xd386;
    undefined field20912_0xd387;
    undefined field20913_0xd388;
    undefined field20914_0xd389;
    undefined field20915_0xd38a;
    undefined field20916_0xd38b;
    undefined field20917_0xd38c;
    undefined field20918_0xd38d;
    undefined field20919_0xd38e;
    undefined field20920_0xd38f;
    undefined field20921_0xd390;
    undefined field20922_0xd391;
    undefined field20923_0xd392;
    undefined field20924_0xd393;
    undefined field20925_0xd394;
    undefined field20926_0xd395;
    undefined field20927_0xd396;
    undefined field20928_0xd397;
    undefined field20929_0xd398;
    undefined field20930_0xd399;
    undefined field20931_0xd39a;
    undefined field20932_0xd39b;
    undefined field20933_0xd39c;
    undefined field20934_0xd39d;
    undefined field20935_0xd39e;
    undefined field20936_0xd39f;
    undefined field20937_0xd3a0;
    undefined field20938_0xd3a1;
    undefined field20939_0xd3a2;
    undefined field20940_0xd3a3;
    undefined field20941_0xd3a4;
    undefined field20942_0xd3a5;
    undefined field20943_0xd3a6;
    undefined field20944_0xd3a7;
    undefined field20945_0xd3a8;
    undefined field20946_0xd3a9;
    undefined field20947_0xd3aa;
    undefined field20948_0xd3ab;
    undefined field20949_0xd3ac;
    undefined field20950_0xd3ad;
    undefined field20951_0xd3ae;
    undefined field20952_0xd3af;
    undefined field20953_0xd3b0;
    undefined field20954_0xd3b1;
    undefined field20955_0xd3b2;
    undefined field20956_0xd3b3;
    undefined field20957_0xd3b4;
    undefined field20958_0xd3b5;
    undefined field20959_0xd3b6;
    undefined field20960_0xd3b7;
    undefined field20961_0xd3b8;
    undefined field20962_0xd3b9;
    undefined field20963_0xd3ba;
    undefined field20964_0xd3bb;
    undefined field20965_0xd3bc;
    undefined field20966_0xd3bd;
    undefined field20967_0xd3be;
    undefined field20968_0xd3bf;
    undefined field20969_0xd3c0;
    undefined field20970_0xd3c1;
    undefined field20971_0xd3c2;
    undefined field20972_0xd3c3;
    undefined field20973_0xd3c4;
    undefined field20974_0xd3c5;
    undefined field20975_0xd3c6;
    undefined field20976_0xd3c7;
    undefined field20977_0xd3c8;
    undefined field20978_0xd3c9;
    undefined field20979_0xd3ca;
    undefined field20980_0xd3cb;
    undefined field20981_0xd3cc;
    undefined field20982_0xd3cd;
    undefined field20983_0xd3ce;
    undefined field20984_0xd3cf;
    undefined field20985_0xd3d0;
    undefined field20986_0xd3d1;
    undefined field20987_0xd3d2;
    undefined field20988_0xd3d3;
    undefined field20989_0xd3d4;
    undefined field20990_0xd3d5;
    undefined field20991_0xd3d6;
    undefined field20992_0xd3d7;
    undefined field20993_0xd3d8;
    undefined field20994_0xd3d9;
    undefined field20995_0xd3da;
    undefined field20996_0xd3db;
    undefined field20997_0xd3dc;
    undefined field20998_0xd3dd;
    undefined field20999_0xd3de;
    undefined field21000_0xd3df;
    undefined field21001_0xd3e0;
    undefined field21002_0xd3e1;
    undefined field21003_0xd3e2;
    undefined field21004_0xd3e3;
    undefined field21005_0xd3e4;
    undefined field21006_0xd3e5;
    undefined field21007_0xd3e6;
    undefined field21008_0xd3e7;
    undefined field21009_0xd3e8;
    undefined field21010_0xd3e9;
    undefined field21011_0xd3ea;
    undefined field21012_0xd3eb;
    undefined field21013_0xd3ec;
    undefined field21014_0xd3ed;
    undefined field21015_0xd3ee;
    undefined field21016_0xd3ef;
    undefined field21017_0xd3f0;
    undefined field21018_0xd3f1;
    undefined field21019_0xd3f2;
    undefined field21020_0xd3f3;
    undefined field21021_0xd3f4;
    undefined field21022_0xd3f5;
    undefined field21023_0xd3f6;
    undefined field21024_0xd3f7;
    undefined field21025_0xd3f8;
    undefined field21026_0xd3f9;
    undefined field21027_0xd3fa;
    undefined field21028_0xd3fb;
    undefined field21029_0xd3fc;
    undefined field21030_0xd3fd;
    undefined field21031_0xd3fe;
    undefined field21032_0xd3ff;
    undefined field21033_0xd400;
    undefined field21034_0xd401;
    undefined field21035_0xd402;
    undefined field21036_0xd403;
    undefined field21037_0xd404;
    undefined field21038_0xd405;
    undefined field21039_0xd406;
    undefined field21040_0xd407;
    undefined field21041_0xd408;
    undefined field21042_0xd409;
    undefined field21043_0xd40a;
    undefined field21044_0xd40b;
    undefined field21045_0xd40c;
    undefined field21046_0xd40d;
    undefined field21047_0xd40e;
    undefined field21048_0xd40f;
    undefined field21049_0xd410;
    undefined field21050_0xd411;
    undefined field21051_0xd412;
    undefined field21052_0xd413;
    undefined field21053_0xd414;
    undefined field21054_0xd415;
    undefined field21055_0xd416;
    undefined field21056_0xd417;
    undefined field21057_0xd418;
    undefined field21058_0xd419;
    undefined field21059_0xd41a;
    undefined field21060_0xd41b;
    undefined field21061_0xd41c;
    undefined field21062_0xd41d;
    undefined field21063_0xd41e;
    undefined field21064_0xd41f;
    undefined field21065_0xd420;
    undefined field21066_0xd421;
    undefined field21067_0xd422;
    undefined field21068_0xd423;
    undefined field21069_0xd424;
    undefined field21070_0xd425;
    undefined field21071_0xd426;
    undefined field21072_0xd427;
    undefined field21073_0xd428;
    undefined field21074_0xd429;
    undefined field21075_0xd42a;
    undefined field21076_0xd42b;
    undefined field21077_0xd42c;
    undefined field21078_0xd42d;
    undefined field21079_0xd42e;
    undefined field21080_0xd42f;
    undefined field21081_0xd430;
    undefined field21082_0xd431;
    undefined field21083_0xd432;
    undefined field21084_0xd433;
    undefined field21085_0xd434;
    undefined field21086_0xd435;
    undefined field21087_0xd436;
    undefined field21088_0xd437;
    undefined field21089_0xd438;
    undefined field21090_0xd439;
    undefined field21091_0xd43a;
    undefined field21092_0xd43b;
    undefined field21093_0xd43c;
    undefined field21094_0xd43d;
    undefined field21095_0xd43e;
    undefined field21096_0xd43f;
    undefined field21097_0xd440;
    undefined field21098_0xd441;
    undefined field21099_0xd442;
    undefined field21100_0xd443;
    undefined field21101_0xd444;
    undefined field21102_0xd445;
    undefined field21103_0xd446;
    undefined field21104_0xd447;
    undefined field21105_0xd448;
    undefined field21106_0xd449;
    undefined field21107_0xd44a;
    undefined field21108_0xd44b;
    undefined field21109_0xd44c;
    undefined field21110_0xd44d;
    undefined field21111_0xd44e;
    undefined field21112_0xd44f;
    undefined field21113_0xd450;
    undefined field21114_0xd451;
    undefined field21115_0xd452;
    undefined field21116_0xd453;
    undefined field21117_0xd454;
    undefined field21118_0xd455;
    undefined field21119_0xd456;
    undefined field21120_0xd457;
    undefined field21121_0xd458;
    undefined field21122_0xd459;
    undefined field21123_0xd45a;
    undefined field21124_0xd45b;
    undefined field21125_0xd45c;
    undefined field21126_0xd45d;
    undefined field21127_0xd45e;
    undefined field21128_0xd45f;
    undefined field21129_0xd460;
    undefined field21130_0xd461;
    undefined field21131_0xd462;
    undefined field21132_0xd463;
    undefined field21133_0xd464;
    undefined field21134_0xd465;
    undefined field21135_0xd466;
    undefined field21136_0xd467;
    undefined field21137_0xd468;
    undefined field21138_0xd469;
    undefined field21139_0xd46a;
    undefined field21140_0xd46b;
    undefined field21141_0xd46c;
    undefined field21142_0xd46d;
    undefined field21143_0xd46e;
    undefined field21144_0xd46f;
    undefined field21145_0xd470;
    undefined field21146_0xd471;
    undefined field21147_0xd472;
    undefined field21148_0xd473;
    undefined field21149_0xd474;
    undefined field21150_0xd475;
    undefined field21151_0xd476;
    undefined field21152_0xd477;
    undefined field21153_0xd478;
    undefined field21154_0xd479;
    undefined field21155_0xd47a;
    undefined field21156_0xd47b;
    undefined field21157_0xd47c;
    undefined field21158_0xd47d;
    undefined field21159_0xd47e;
    undefined field21160_0xd47f;
    undefined field21161_0xd480;
    undefined field21162_0xd481;
    undefined field21163_0xd482;
    undefined field21164_0xd483;
    undefined field21165_0xd484;
    undefined field21166_0xd485;
    undefined field21167_0xd486;
    undefined field21168_0xd487;
    undefined field21169_0xd488;
    undefined field21170_0xd489;
    undefined field21171_0xd48a;
    undefined field21172_0xd48b;
    undefined field21173_0xd48c;
    undefined field21174_0xd48d;
    undefined field21175_0xd48e;
    undefined field21176_0xd48f;
    undefined field21177_0xd490;
    undefined field21178_0xd491;
    undefined field21179_0xd492;
    undefined field21180_0xd493;
    undefined field21181_0xd494;
    undefined field21182_0xd495;
    undefined field21183_0xd496;
    undefined field21184_0xd497;
    undefined field21185_0xd498;
    undefined field21186_0xd499;
    undefined field21187_0xd49a;
    undefined field21188_0xd49b;
    undefined field21189_0xd49c;
    undefined field21190_0xd49d;
    undefined field21191_0xd49e;
    undefined field21192_0xd49f;
    undefined field21193_0xd4a0;
    undefined field21194_0xd4a1;
    undefined field21195_0xd4a2;
    undefined field21196_0xd4a3;
    undefined field21197_0xd4a4;
    undefined field21198_0xd4a5;
    undefined field21199_0xd4a6;
    undefined field21200_0xd4a7;
    undefined field21201_0xd4a8;
    undefined field21202_0xd4a9;
    undefined field21203_0xd4aa;
    undefined field21204_0xd4ab;
    undefined field21205_0xd4ac;
    undefined field21206_0xd4ad;
    undefined field21207_0xd4ae;
    undefined field21208_0xd4af;
    undefined field21209_0xd4b0;
    undefined field21210_0xd4b1;
    undefined field21211_0xd4b2;
    undefined field21212_0xd4b3;
    undefined field21213_0xd4b4;
    undefined field21214_0xd4b5;
    undefined field21215_0xd4b6;
    undefined field21216_0xd4b7;
    undefined field21217_0xd4b8;
    undefined field21218_0xd4b9;
    undefined field21219_0xd4ba;
    undefined field21220_0xd4bb;
    undefined field21221_0xd4bc;
    undefined field21222_0xd4bd;
    undefined field21223_0xd4be;
    undefined field21224_0xd4bf;
    undefined field21225_0xd4c0;
    undefined field21226_0xd4c1;
    undefined field21227_0xd4c2;
    undefined field21228_0xd4c3;
    undefined field21229_0xd4c4;
    undefined field21230_0xd4c5;
    undefined field21231_0xd4c6;
    undefined field21232_0xd4c7;
    undefined field21233_0xd4c8;
    undefined field21234_0xd4c9;
    undefined field21235_0xd4ca;
    undefined field21236_0xd4cb;
    undefined field21237_0xd4cc;
    undefined field21238_0xd4cd;
    undefined field21239_0xd4ce;
    undefined field21240_0xd4cf;
    undefined field21241_0xd4d0;
    undefined field21242_0xd4d1;
    undefined field21243_0xd4d2;
    undefined field21244_0xd4d3;
    undefined field21245_0xd4d4;
    undefined field21246_0xd4d5;
    undefined field21247_0xd4d6;
    undefined field21248_0xd4d7;
    undefined field21249_0xd4d8;
    undefined field21250_0xd4d9;
    undefined field21251_0xd4da;
    undefined field21252_0xd4db;
    undefined field21253_0xd4dc;
    undefined field21254_0xd4dd;
    undefined field21255_0xd4de;
    undefined field21256_0xd4df;
    undefined field21257_0xd4e0;
    undefined field21258_0xd4e1;
    undefined field21259_0xd4e2;
    undefined field21260_0xd4e3;
    undefined field21261_0xd4e4;
    undefined field21262_0xd4e5;
    undefined field21263_0xd4e6;
    undefined field21264_0xd4e7;
    undefined field21265_0xd4e8;
    undefined field21266_0xd4e9;
    undefined field21267_0xd4ea;
    undefined field21268_0xd4eb;
    undefined field21269_0xd4ec;
    undefined field21270_0xd4ed;
    undefined field21271_0xd4ee;
    undefined field21272_0xd4ef;
    undefined field21273_0xd4f0;
    undefined field21274_0xd4f1;
    undefined field21275_0xd4f2;
    undefined field21276_0xd4f3;
    undefined field21277_0xd4f4;
    undefined field21278_0xd4f5;
    undefined field21279_0xd4f6;
    undefined field21280_0xd4f7;
    undefined field21281_0xd4f8;
    undefined field21282_0xd4f9;
    undefined field21283_0xd4fa;
    undefined field21284_0xd4fb;
    undefined field21285_0xd4fc;
    undefined field21286_0xd4fd;
    undefined field21287_0xd4fe;
    undefined field21288_0xd4ff;
    undefined field21289_0xd500;
    undefined field21290_0xd501;
    undefined field21291_0xd502;
    undefined field21292_0xd503;
    undefined field21293_0xd504;
    undefined field21294_0xd505;
    undefined field21295_0xd506;
    undefined field21296_0xd507;
    undefined field21297_0xd508;
    undefined field21298_0xd509;
    undefined field21299_0xd50a;
    undefined field21300_0xd50b;
    undefined field21301_0xd50c;
    undefined field21302_0xd50d;
    undefined field21303_0xd50e;
    undefined field21304_0xd50f;
    undefined field21305_0xd510;
    undefined field21306_0xd511;
    undefined field21307_0xd512;
    undefined field21308_0xd513;
    undefined field21309_0xd514;
    undefined field21310_0xd515;
    undefined field21311_0xd516;
    undefined field21312_0xd517;
    undefined field21313_0xd518;
    undefined field21314_0xd519;
    undefined field21315_0xd51a;
    undefined field21316_0xd51b;
    undefined field21317_0xd51c;
    undefined field21318_0xd51d;
    undefined field21319_0xd51e;
    undefined field21320_0xd51f;
    undefined field21321_0xd520;
    undefined field21322_0xd521;
    undefined field21323_0xd522;
    undefined field21324_0xd523;
    undefined field21325_0xd524;
    undefined field21326_0xd525;
    undefined field21327_0xd526;
    undefined field21328_0xd527;
    undefined field21329_0xd528;
    undefined field21330_0xd529;
    undefined field21331_0xd52a;
    undefined field21332_0xd52b;
    undefined field21333_0xd52c;
    undefined field21334_0xd52d;
    undefined field21335_0xd52e;
    undefined field21336_0xd52f;
    undefined field21337_0xd530;
    undefined field21338_0xd531;
    undefined field21339_0xd532;
    undefined field21340_0xd533;
    undefined field21341_0xd534;
    undefined field21342_0xd535;
    undefined field21343_0xd536;
    undefined field21344_0xd537;
    undefined field21345_0xd538;
    undefined field21346_0xd539;
    undefined field21347_0xd53a;
    undefined field21348_0xd53b;
    undefined field21349_0xd53c;
    undefined field21350_0xd53d;
    undefined field21351_0xd53e;
    undefined field21352_0xd53f;
    undefined field21353_0xd540;
    undefined field21354_0xd541;
    undefined field21355_0xd542;
    undefined field21356_0xd543;
    undefined field21357_0xd544;
    undefined field21358_0xd545;
    undefined field21359_0xd546;
    undefined field21360_0xd547;
    undefined field21361_0xd548;
    undefined field21362_0xd549;
    undefined field21363_0xd54a;
    undefined field21364_0xd54b;
    undefined field21365_0xd54c;
    undefined field21366_0xd54d;
    undefined field21367_0xd54e;
    undefined field21368_0xd54f;
    undefined field21369_0xd550;
    undefined field21370_0xd551;
    undefined field21371_0xd552;
    undefined field21372_0xd553;
    undefined field21373_0xd554;
    undefined field21374_0xd555;
    undefined field21375_0xd556;
    undefined field21376_0xd557;
    undefined field21377_0xd558;
    undefined field21378_0xd559;
    undefined field21379_0xd55a;
    undefined field21380_0xd55b;
    undefined field21381_0xd55c;
    undefined field21382_0xd55d;
    undefined field21383_0xd55e;
    undefined field21384_0xd55f;
    undefined field21385_0xd560;
    undefined field21386_0xd561;
    undefined field21387_0xd562;
    undefined field21388_0xd563;
    undefined field21389_0xd564;
    undefined field21390_0xd565;
    undefined field21391_0xd566;
    undefined field21392_0xd567;
    undefined field21393_0xd568;
    undefined field21394_0xd569;
    undefined field21395_0xd56a;
    undefined field21396_0xd56b;
    undefined field21397_0xd56c;
    undefined field21398_0xd56d;
    undefined field21399_0xd56e;
    undefined field21400_0xd56f;
    undefined field21401_0xd570;
    undefined field21402_0xd571;
    undefined field21403_0xd572;
    undefined field21404_0xd573;
    undefined field21405_0xd574;
    undefined field21406_0xd575;
    undefined field21407_0xd576;
    undefined field21408_0xd577;
    undefined field21409_0xd578;
    undefined field21410_0xd579;
    undefined field21411_0xd57a;
    undefined field21412_0xd57b;
    undefined field21413_0xd57c;
    undefined field21414_0xd57d;
    undefined field21415_0xd57e;
    undefined field21416_0xd57f;
    undefined field21417_0xd580;
    undefined field21418_0xd581;
    undefined field21419_0xd582;
    undefined field21420_0xd583;
    undefined field21421_0xd584;
    undefined field21422_0xd585;
    undefined field21423_0xd586;
    undefined field21424_0xd587;
    undefined field21425_0xd588;
    undefined field21426_0xd589;
    undefined field21427_0xd58a;
    undefined field21428_0xd58b;
    undefined field21429_0xd58c;
    undefined field21430_0xd58d;
    undefined field21431_0xd58e;
    undefined field21432_0xd58f;
    undefined field21433_0xd590;
    undefined field21434_0xd591;
    undefined field21435_0xd592;
    undefined field21436_0xd593;
    undefined field21437_0xd594;
    undefined field21438_0xd595;
    undefined field21439_0xd596;
    undefined field21440_0xd597;
    undefined field21441_0xd598;
    undefined field21442_0xd599;
    undefined field21443_0xd59a;
    undefined field21444_0xd59b;
    undefined field21445_0xd59c;
    undefined field21446_0xd59d;
    undefined field21447_0xd59e;
    undefined field21448_0xd59f;
    undefined field21449_0xd5a0;
    undefined field21450_0xd5a1;
    undefined field21451_0xd5a2;
    undefined field21452_0xd5a3;
    undefined field21453_0xd5a4;
    undefined field21454_0xd5a5;
    undefined field21455_0xd5a6;
    undefined field21456_0xd5a7;
    undefined field21457_0xd5a8;
    undefined field21458_0xd5a9;
    undefined field21459_0xd5aa;
    undefined field21460_0xd5ab;
    undefined field21461_0xd5ac;
    undefined field21462_0xd5ad;
    undefined field21463_0xd5ae;
    undefined field21464_0xd5af;
    undefined field21465_0xd5b0;
    undefined field21466_0xd5b1;
    undefined field21467_0xd5b2;
    undefined field21468_0xd5b3;
    undefined field21469_0xd5b4;
    undefined field21470_0xd5b5;
    undefined field21471_0xd5b6;
    undefined field21472_0xd5b7;
    undefined field21473_0xd5b8;
    undefined field21474_0xd5b9;
    undefined field21475_0xd5ba;
    undefined field21476_0xd5bb;
    undefined field21477_0xd5bc;
    undefined field21478_0xd5bd;
    undefined field21479_0xd5be;
    undefined field21480_0xd5bf;
    undefined field21481_0xd5c0;
    undefined field21482_0xd5c1;
    undefined field21483_0xd5c2;
    undefined field21484_0xd5c3;
    undefined field21485_0xd5c4;
    undefined field21486_0xd5c5;
    undefined field21487_0xd5c6;
    undefined field21488_0xd5c7;
    undefined field21489_0xd5c8;
    undefined field21490_0xd5c9;
    undefined field21491_0xd5ca;
    undefined field21492_0xd5cb;
    undefined field21493_0xd5cc;
    undefined field21494_0xd5cd;
    undefined field21495_0xd5ce;
    undefined field21496_0xd5cf;
    undefined field21497_0xd5d0;
    undefined field21498_0xd5d1;
    undefined field21499_0xd5d2;
    undefined field21500_0xd5d3;
    undefined field21501_0xd5d4;
    undefined field21502_0xd5d5;
    undefined field21503_0xd5d6;
    undefined field21504_0xd5d7;
    undefined field21505_0xd5d8;
    undefined field21506_0xd5d9;
    undefined field21507_0xd5da;
    undefined field21508_0xd5db;
    undefined field21509_0xd5dc;
    undefined field21510_0xd5dd;
    undefined field21511_0xd5de;
    undefined field21512_0xd5df;
    undefined field21513_0xd5e0;
    undefined field21514_0xd5e1;
    undefined field21515_0xd5e2;
    undefined field21516_0xd5e3;
    undefined field21517_0xd5e4;
    undefined field21518_0xd5e5;
    undefined field21519_0xd5e6;
    undefined field21520_0xd5e7;
    undefined field21521_0xd5e8;
    undefined field21522_0xd5e9;
    undefined field21523_0xd5ea;
    undefined field21524_0xd5eb;
    undefined field21525_0xd5ec;
    undefined field21526_0xd5ed;
    undefined field21527_0xd5ee;
    undefined field21528_0xd5ef;
    undefined field21529_0xd5f0;
    undefined field21530_0xd5f1;
    undefined field21531_0xd5f2;
    undefined field21532_0xd5f3;
    undefined field21533_0xd5f4;
    undefined field21534_0xd5f5;
    undefined field21535_0xd5f6;
    undefined field21536_0xd5f7;
    undefined field21537_0xd5f8;
    undefined field21538_0xd5f9;
    undefined field21539_0xd5fa;
    undefined field21540_0xd5fb;
    undefined field21541_0xd5fc;
    undefined field21542_0xd5fd;
    undefined field21543_0xd5fe;
    undefined field21544_0xd5ff;
    undefined field21545_0xd600;
    undefined field21546_0xd601;
    undefined field21547_0xd602;
    undefined field21548_0xd603;
    undefined field21549_0xd604;
    undefined field21550_0xd605;
    undefined field21551_0xd606;
    undefined field21552_0xd607;
    undefined field21553_0xd608;
    undefined field21554_0xd609;
    undefined field21555_0xd60a;
    undefined field21556_0xd60b;
    undefined field21557_0xd60c;
    undefined field21558_0xd60d;
    undefined field21559_0xd60e;
    undefined field21560_0xd60f;
    undefined field21561_0xd610;
    undefined field21562_0xd611;
    undefined field21563_0xd612;
    undefined field21564_0xd613;
    undefined field21565_0xd614;
    undefined field21566_0xd615;
    undefined field21567_0xd616;
    undefined field21568_0xd617;
    undefined field21569_0xd618;
    undefined field21570_0xd619;
    undefined field21571_0xd61a;
    undefined field21572_0xd61b;
    undefined field21573_0xd61c;
    undefined field21574_0xd61d;
    undefined field21575_0xd61e;
    undefined field21576_0xd61f;
    undefined field21577_0xd620;
    undefined field21578_0xd621;
    undefined field21579_0xd622;
    undefined field21580_0xd623;
    undefined field21581_0xd624;
    undefined field21582_0xd625;
    undefined field21583_0xd626;
    undefined field21584_0xd627;
    undefined field21585_0xd628;
    undefined field21586_0xd629;
    undefined field21587_0xd62a;
    undefined field21588_0xd62b;
    undefined field21589_0xd62c;
    undefined field21590_0xd62d;
    undefined field21591_0xd62e;
    undefined field21592_0xd62f;
    undefined field21593_0xd630;
    undefined field21594_0xd631;
    undefined field21595_0xd632;
    undefined field21596_0xd633;
    undefined field21597_0xd634;
    undefined field21598_0xd635;
    undefined field21599_0xd636;
    undefined field21600_0xd637;
    undefined field21601_0xd638;
    undefined field21602_0xd639;
    undefined field21603_0xd63a;
    undefined field21604_0xd63b;
    undefined field21605_0xd63c;
    undefined field21606_0xd63d;
    undefined field21607_0xd63e;
    undefined field21608_0xd63f;
    undefined field21609_0xd640;
    undefined field21610_0xd641;
    undefined field21611_0xd642;
    undefined field21612_0xd643;
    undefined field21613_0xd644;
    undefined field21614_0xd645;
    undefined field21615_0xd646;
    undefined field21616_0xd647;
    undefined field21617_0xd648;
    undefined field21618_0xd649;
    undefined field21619_0xd64a;
    undefined field21620_0xd64b;
    undefined field21621_0xd64c;
    undefined field21622_0xd64d;
    undefined field21623_0xd64e;
    undefined field21624_0xd64f;
    undefined field21625_0xd650;
    undefined field21626_0xd651;
    undefined field21627_0xd652;
    undefined field21628_0xd653;
    undefined field21629_0xd654;
    undefined field21630_0xd655;
    undefined field21631_0xd656;
    undefined field21632_0xd657;
    undefined field21633_0xd658;
    undefined field21634_0xd659;
    undefined field21635_0xd65a;
    undefined field21636_0xd65b;
    undefined field21637_0xd65c;
    undefined field21638_0xd65d;
    undefined field21639_0xd65e;
    undefined field21640_0xd65f;
    undefined field21641_0xd660;
    undefined field21642_0xd661;
    undefined field21643_0xd662;
    undefined field21644_0xd663;
    undefined field21645_0xd664;
    undefined field21646_0xd665;
    undefined field21647_0xd666;
    undefined field21648_0xd667;
    undefined field21649_0xd668;
    undefined field21650_0xd669;
    undefined field21651_0xd66a;
    undefined field21652_0xd66b;
    undefined field21653_0xd66c;
    undefined field21654_0xd66d;
    undefined field21655_0xd66e;
    undefined field21656_0xd66f;
    undefined field21657_0xd670;
    undefined field21658_0xd671;
    undefined field21659_0xd672;
    undefined field21660_0xd673;
    undefined field21661_0xd674;
    undefined field21662_0xd675;
    undefined field21663_0xd676;
    undefined field21664_0xd677;
    undefined field21665_0xd678;
    undefined field21666_0xd679;
    undefined field21667_0xd67a;
    undefined field21668_0xd67b;
    undefined field21669_0xd67c;
    undefined field21670_0xd67d;
    undefined field21671_0xd67e;
    undefined field21672_0xd67f;
    undefined field21673_0xd680;
    undefined field21674_0xd681;
    undefined field21675_0xd682;
    undefined field21676_0xd683;
    undefined field21677_0xd684;
    undefined field21678_0xd685;
    undefined field21679_0xd686;
    undefined field21680_0xd687;
    undefined field21681_0xd688;
    undefined field21682_0xd689;
    undefined field21683_0xd68a;
    undefined field21684_0xd68b;
    undefined field21685_0xd68c;
    undefined field21686_0xd68d;
    undefined field21687_0xd68e;
    undefined field21688_0xd68f;
    undefined field21689_0xd690;
    undefined field21690_0xd691;
    undefined field21691_0xd692;
    undefined field21692_0xd693;
    undefined field21693_0xd694;
    undefined field21694_0xd695;
    undefined field21695_0xd696;
    undefined field21696_0xd697;
    undefined field21697_0xd698;
    undefined field21698_0xd699;
    undefined field21699_0xd69a;
    undefined field21700_0xd69b;
    undefined field21701_0xd69c;
    undefined field21702_0xd69d;
    undefined field21703_0xd69e;
    undefined field21704_0xd69f;
    undefined field21705_0xd6a0;
    undefined field21706_0xd6a1;
    undefined field21707_0xd6a2;
    undefined field21708_0xd6a3;
    undefined field21709_0xd6a4;
    undefined field21710_0xd6a5;
    undefined field21711_0xd6a6;
    undefined field21712_0xd6a7;
    undefined field21713_0xd6a8;
    undefined field21714_0xd6a9;
    undefined field21715_0xd6aa;
    undefined field21716_0xd6ab;
    undefined field21717_0xd6ac;
    undefined field21718_0xd6ad;
    undefined field21719_0xd6ae;
    undefined field21720_0xd6af;
    undefined field21721_0xd6b0;
    undefined field21722_0xd6b1;
    undefined field21723_0xd6b2;
    undefined field21724_0xd6b3;
    undefined field21725_0xd6b4;
    undefined field21726_0xd6b5;
    undefined field21727_0xd6b6;
    undefined field21728_0xd6b7;
    undefined field21729_0xd6b8;
    undefined field21730_0xd6b9;
    undefined field21731_0xd6ba;
    undefined field21732_0xd6bb;
    undefined field21733_0xd6bc;
    undefined field21734_0xd6bd;
    undefined field21735_0xd6be;
    undefined field21736_0xd6bf;
    undefined field21737_0xd6c0;
    undefined field21738_0xd6c1;
    undefined field21739_0xd6c2;
    undefined field21740_0xd6c3;
    undefined field21741_0xd6c4;
    undefined field21742_0xd6c5;
    undefined field21743_0xd6c6;
    undefined field21744_0xd6c7;
    undefined field21745_0xd6c8;
    undefined field21746_0xd6c9;
    undefined field21747_0xd6ca;
    undefined field21748_0xd6cb;
    undefined field21749_0xd6cc;
    undefined field21750_0xd6cd;
    undefined field21751_0xd6ce;
    undefined field21752_0xd6cf;
    undefined field21753_0xd6d0;
    undefined field21754_0xd6d1;
    undefined field21755_0xd6d2;
    undefined field21756_0xd6d3;
    undefined field21757_0xd6d4;
    undefined field21758_0xd6d5;
    undefined field21759_0xd6d6;
    undefined field21760_0xd6d7;
    undefined field21761_0xd6d8;
    undefined field21762_0xd6d9;
    undefined field21763_0xd6da;
    undefined field21764_0xd6db;
    undefined field21765_0xd6dc;
    undefined field21766_0xd6dd;
    undefined field21767_0xd6de;
    undefined field21768_0xd6df;
    undefined field21769_0xd6e0;
    undefined field21770_0xd6e1;
    undefined field21771_0xd6e2;
    undefined field21772_0xd6e3;
    undefined field21773_0xd6e4;
    undefined field21774_0xd6e5;
    undefined field21775_0xd6e6;
    undefined field21776_0xd6e7;
    undefined field21777_0xd6e8;
    undefined field21778_0xd6e9;
    undefined field21779_0xd6ea;
    undefined field21780_0xd6eb;
    undefined field21781_0xd6ec;
    undefined field21782_0xd6ed;
    undefined field21783_0xd6ee;
    undefined field21784_0xd6ef;
    undefined field21785_0xd6f0;
    undefined field21786_0xd6f1;
    undefined field21787_0xd6f2;
    undefined field21788_0xd6f3;
    undefined field21789_0xd6f4;
    undefined field21790_0xd6f5;
    undefined field21791_0xd6f6;
    undefined field21792_0xd6f7;
    undefined field21793_0xd6f8;
    undefined field21794_0xd6f9;
    undefined field21795_0xd6fa;
    undefined field21796_0xd6fb;
    undefined field21797_0xd6fc;
    undefined field21798_0xd6fd;
    undefined field21799_0xd6fe;
    undefined field21800_0xd6ff;
    undefined field21801_0xd700;
    undefined field21802_0xd701;
    undefined field21803_0xd702;
    undefined field21804_0xd703;
    undefined field21805_0xd704;
    undefined field21806_0xd705;
    undefined field21807_0xd706;
    undefined field21808_0xd707;
    undefined field21809_0xd708;
    undefined field21810_0xd709;
    undefined field21811_0xd70a;
    undefined field21812_0xd70b;
    undefined field21813_0xd70c;
    undefined field21814_0xd70d;
    undefined field21815_0xd70e;
    undefined field21816_0xd70f;
    undefined field21817_0xd710;
    undefined field21818_0xd711;
    undefined field21819_0xd712;
    undefined field21820_0xd713;
    undefined field21821_0xd714;
    undefined field21822_0xd715;
    undefined field21823_0xd716;
    undefined field21824_0xd717;
    undefined field21825_0xd718;
    undefined field21826_0xd719;
    undefined field21827_0xd71a;
    undefined field21828_0xd71b;
    undefined field21829_0xd71c;
    undefined field21830_0xd71d;
    undefined field21831_0xd71e;
    undefined field21832_0xd71f;
    undefined field21833_0xd720;
    undefined field21834_0xd721;
    undefined field21835_0xd722;
    undefined field21836_0xd723;
    undefined field21837_0xd724;
    undefined field21838_0xd725;
    undefined field21839_0xd726;
    undefined field21840_0xd727;
    undefined field21841_0xd728;
    undefined field21842_0xd729;
    undefined field21843_0xd72a;
    undefined field21844_0xd72b;
    undefined field21845_0xd72c;
    undefined field21846_0xd72d;
    undefined field21847_0xd72e;
    undefined field21848_0xd72f;
    undefined field21849_0xd730;
    undefined field21850_0xd731;
    undefined field21851_0xd732;
    undefined field21852_0xd733;
    undefined field21853_0xd734;
    undefined field21854_0xd735;
    undefined field21855_0xd736;
    undefined field21856_0xd737;
    undefined field21857_0xd738;
    undefined field21858_0xd739;
    undefined field21859_0xd73a;
    undefined field21860_0xd73b;
    undefined field21861_0xd73c;
    undefined field21862_0xd73d;
    undefined field21863_0xd73e;
    undefined field21864_0xd73f;
    undefined field21865_0xd740;
    undefined field21866_0xd741;
    undefined field21867_0xd742;
    undefined field21868_0xd743;
    undefined field21869_0xd744;
    undefined field21870_0xd745;
    undefined field21871_0xd746;
    undefined field21872_0xd747;
    undefined field21873_0xd748;
    undefined field21874_0xd749;
    undefined field21875_0xd74a;
    undefined field21876_0xd74b;
    undefined field21877_0xd74c;
    undefined field21878_0xd74d;
    undefined field21879_0xd74e;
    undefined field21880_0xd74f;
    undefined field21881_0xd750;
    undefined field21882_0xd751;
    undefined field21883_0xd752;
    undefined field21884_0xd753;
    undefined field21885_0xd754;
    undefined field21886_0xd755;
    undefined field21887_0xd756;
    undefined field21888_0xd757;
    undefined field21889_0xd758;
    undefined field21890_0xd759;
    undefined field21891_0xd75a;
    undefined field21892_0xd75b;
    undefined field21893_0xd75c;
    undefined field21894_0xd75d;
    undefined field21895_0xd75e;
    undefined field21896_0xd75f;
    undefined field21897_0xd760;
    undefined field21898_0xd761;
    undefined field21899_0xd762;
    undefined field21900_0xd763;
    undefined field21901_0xd764;
    undefined field21902_0xd765;
    undefined field21903_0xd766;
    undefined field21904_0xd767;
    undefined field21905_0xd768;
    undefined field21906_0xd769;
    undefined field21907_0xd76a;
    undefined field21908_0xd76b;
    undefined field21909_0xd76c;
    undefined field21910_0xd76d;
    undefined field21911_0xd76e;
    undefined field21912_0xd76f;
    undefined field21913_0xd770;
    undefined field21914_0xd771;
    undefined field21915_0xd772;
    undefined field21916_0xd773;
    undefined field21917_0xd774;
    undefined field21918_0xd775;
    undefined field21919_0xd776;
    undefined field21920_0xd777;
    undefined field21921_0xd778;
    undefined field21922_0xd779;
    undefined field21923_0xd77a;
    undefined field21924_0xd77b;
    undefined field21925_0xd77c;
    undefined field21926_0xd77d;
    undefined field21927_0xd77e;
    undefined field21928_0xd77f;
    undefined field21929_0xd780;
    undefined field21930_0xd781;
    undefined field21931_0xd782;
    undefined field21932_0xd783;
    undefined field21933_0xd784;
    undefined field21934_0xd785;
    undefined field21935_0xd786;
    undefined field21936_0xd787;
    undefined field21937_0xd788;
    undefined field21938_0xd789;
    undefined field21939_0xd78a;
    undefined field21940_0xd78b;
    undefined field21941_0xd78c;
    undefined field21942_0xd78d;
    undefined field21943_0xd78e;
    undefined field21944_0xd78f;
    undefined field21945_0xd790;
    undefined field21946_0xd791;
    undefined field21947_0xd792;
    undefined field21948_0xd793;
    undefined field21949_0xd794;
    undefined field21950_0xd795;
    undefined field21951_0xd796;
    undefined field21952_0xd797;
    undefined field21953_0xd798;
    undefined field21954_0xd799;
    undefined field21955_0xd79a;
    undefined field21956_0xd79b;
    undefined field21957_0xd79c;
    undefined field21958_0xd79d;
    undefined field21959_0xd79e;
    undefined field21960_0xd79f;
    undefined field21961_0xd7a0;
    undefined field21962_0xd7a1;
    undefined field21963_0xd7a2;
    undefined field21964_0xd7a3;
    undefined field21965_0xd7a4;
    undefined field21966_0xd7a5;
    undefined field21967_0xd7a6;
    undefined field21968_0xd7a7;
    undefined field21969_0xd7a8;
    undefined field21970_0xd7a9;
    undefined field21971_0xd7aa;
    undefined field21972_0xd7ab;
    undefined field21973_0xd7ac;
    undefined field21974_0xd7ad;
    undefined field21975_0xd7ae;
    undefined field21976_0xd7af;
    undefined field21977_0xd7b0;
    undefined field21978_0xd7b1;
    undefined field21979_0xd7b2;
    undefined field21980_0xd7b3;
    undefined field21981_0xd7b4;
    undefined field21982_0xd7b5;
    undefined field21983_0xd7b6;
    undefined field21984_0xd7b7;
    undefined field21985_0xd7b8;
    undefined field21986_0xd7b9;
    undefined field21987_0xd7ba;
    undefined field21988_0xd7bb;
    undefined field21989_0xd7bc;
    undefined field21990_0xd7bd;
    undefined field21991_0xd7be;
    undefined field21992_0xd7bf;
    undefined field21993_0xd7c0;
    undefined field21994_0xd7c1;
    undefined field21995_0xd7c2;
    undefined field21996_0xd7c3;
    undefined field21997_0xd7c4;
    undefined field21998_0xd7c5;
    undefined field21999_0xd7c6;
    undefined field22000_0xd7c7;
    undefined field22001_0xd7c8;
    undefined field22002_0xd7c9;
    undefined field22003_0xd7ca;
    undefined field22004_0xd7cb;
    undefined field22005_0xd7cc;
    undefined field22006_0xd7cd;
    undefined field22007_0xd7ce;
    undefined field22008_0xd7cf;
    undefined field22009_0xd7d0;
    undefined field22010_0xd7d1;
    undefined field22011_0xd7d2;
    undefined field22012_0xd7d3;
    undefined field22013_0xd7d4;
    undefined field22014_0xd7d5;
    undefined field22015_0xd7d6;
    undefined field22016_0xd7d7;
    undefined field22017_0xd7d8;
    undefined field22018_0xd7d9;
    undefined field22019_0xd7da;
    undefined field22020_0xd7db;
    undefined field22021_0xd7dc;
    undefined field22022_0xd7dd;
    undefined field22023_0xd7de;
    undefined field22024_0xd7df;
    undefined field22025_0xd7e0;
    undefined field22026_0xd7e1;
    undefined field22027_0xd7e2;
    undefined field22028_0xd7e3;
    undefined field22029_0xd7e4;
    undefined field22030_0xd7e5;
    undefined field22031_0xd7e6;
    undefined field22032_0xd7e7;
    undefined field22033_0xd7e8;
    undefined field22034_0xd7e9;
    undefined field22035_0xd7ea;
    undefined field22036_0xd7eb;
    undefined field22037_0xd7ec;
    undefined field22038_0xd7ed;
    undefined field22039_0xd7ee;
    undefined field22040_0xd7ef;
    undefined field22041_0xd7f0;
    undefined field22042_0xd7f1;
    undefined field22043_0xd7f2;
    undefined field22044_0xd7f3;
    undefined field22045_0xd7f4;
    undefined field22046_0xd7f5;
    undefined field22047_0xd7f6;
    undefined field22048_0xd7f7;
    undefined field22049_0xd7f8;
    undefined field22050_0xd7f9;
    undefined field22051_0xd7fa;
    undefined field22052_0xd7fb;
    undefined field22053_0xd7fc;
    undefined field22054_0xd7fd;
    undefined field22055_0xd7fe;
    undefined field22056_0xd7ff;
    undefined field22057_0xd800;
    undefined field22058_0xd801;
    undefined field22059_0xd802;
    undefined field22060_0xd803;
    undefined field22061_0xd804;
    undefined field22062_0xd805;
    undefined field22063_0xd806;
    undefined field22064_0xd807;
    undefined field22065_0xd808;
    undefined field22066_0xd809;
    undefined field22067_0xd80a;
    undefined field22068_0xd80b;
    undefined field22069_0xd80c;
    undefined field22070_0xd80d;
    undefined field22071_0xd80e;
    undefined field22072_0xd80f;
    undefined field22073_0xd810;
    undefined field22074_0xd811;
    undefined field22075_0xd812;
    undefined field22076_0xd813;
    undefined field22077_0xd814;
    undefined field22078_0xd815;
    undefined field22079_0xd816;
    undefined field22080_0xd817;
    undefined field22081_0xd818;
    undefined field22082_0xd819;
    undefined field22083_0xd81a;
    undefined field22084_0xd81b;
    undefined field22085_0xd81c;
    undefined field22086_0xd81d;
    undefined field22087_0xd81e;
    undefined field22088_0xd81f;
    undefined field22089_0xd820;
    undefined field22090_0xd821;
    undefined field22091_0xd822;
    undefined field22092_0xd823;
    undefined field22093_0xd824;
    undefined field22094_0xd825;
    undefined field22095_0xd826;
    undefined field22096_0xd827;
    undefined field22097_0xd828;
    undefined field22098_0xd829;
    undefined field22099_0xd82a;
    undefined field22100_0xd82b;
    undefined field22101_0xd82c;
    undefined field22102_0xd82d;
    undefined field22103_0xd82e;
    undefined field22104_0xd82f;
    undefined field22105_0xd830;
    undefined field22106_0xd831;
    undefined field22107_0xd832;
    undefined field22108_0xd833;
    undefined field22109_0xd834;
    undefined field22110_0xd835;
    undefined field22111_0xd836;
    undefined field22112_0xd837;
    undefined field22113_0xd838;
    undefined field22114_0xd839;
    undefined field22115_0xd83a;
    undefined field22116_0xd83b;
    undefined field22117_0xd83c;
    undefined field22118_0xd83d;
    undefined field22119_0xd83e;
    undefined field22120_0xd83f;
    undefined field22121_0xd840;
    undefined field22122_0xd841;
    undefined field22123_0xd842;
    undefined field22124_0xd843;
    undefined field22125_0xd844;
    undefined field22126_0xd845;
    undefined field22127_0xd846;
    undefined field22128_0xd847;
    undefined field22129_0xd848;
    undefined field22130_0xd849;
    undefined field22131_0xd84a;
    undefined field22132_0xd84b;
    undefined field22133_0xd84c;
    undefined field22134_0xd84d;
    undefined field22135_0xd84e;
    undefined field22136_0xd84f;
    undefined field22137_0xd850;
    undefined field22138_0xd851;
    undefined field22139_0xd852;
    undefined field22140_0xd853;
    undefined field22141_0xd854;
    undefined field22142_0xd855;
    undefined field22143_0xd856;
    undefined field22144_0xd857;
    undefined field22145_0xd858;
    undefined field22146_0xd859;
    undefined field22147_0xd85a;
    undefined field22148_0xd85b;
    undefined field22149_0xd85c;
    undefined field22150_0xd85d;
    undefined field22151_0xd85e;
    undefined field22152_0xd85f;
    undefined field22153_0xd860;
    undefined field22154_0xd861;
    undefined field22155_0xd862;
    undefined field22156_0xd863;
    undefined field22157_0xd864;
    undefined field22158_0xd865;
    undefined field22159_0xd866;
    undefined field22160_0xd867;
    undefined field22161_0xd868;
    undefined field22162_0xd869;
    undefined field22163_0xd86a;
    undefined field22164_0xd86b;
    undefined field22165_0xd86c;
    undefined field22166_0xd86d;
    undefined field22167_0xd86e;
    undefined field22168_0xd86f;
    undefined field22169_0xd870;
    undefined field22170_0xd871;
    undefined field22171_0xd872;
    undefined field22172_0xd873;
    undefined field22173_0xd874;
    undefined field22174_0xd875;
    undefined field22175_0xd876;
    undefined field22176_0xd877;
    undefined field22177_0xd878;
    undefined field22178_0xd879;
    undefined field22179_0xd87a;
    undefined field22180_0xd87b;
    undefined field22181_0xd87c;
    undefined field22182_0xd87d;
    undefined field22183_0xd87e;
    undefined field22184_0xd87f;
    undefined field22185_0xd880;
    undefined field22186_0xd881;
    undefined field22187_0xd882;
    undefined field22188_0xd883;
    undefined field22189_0xd884;
    undefined field22190_0xd885;
    undefined field22191_0xd886;
    undefined field22192_0xd887;
    undefined field22193_0xd888;
    undefined field22194_0xd889;
    undefined field22195_0xd88a;
    undefined field22196_0xd88b;
    undefined field22197_0xd88c;
    undefined field22198_0xd88d;
    undefined field22199_0xd88e;
    undefined field22200_0xd88f;
    undefined field22201_0xd890;
    undefined field22202_0xd891;
    undefined field22203_0xd892;
    undefined field22204_0xd893;
    undefined field22205_0xd894;
    undefined field22206_0xd895;
    undefined field22207_0xd896;
    undefined field22208_0xd897;
    undefined field22209_0xd898;
    undefined field22210_0xd899;
    undefined field22211_0xd89a;
    undefined field22212_0xd89b;
    undefined field22213_0xd89c;
    undefined field22214_0xd89d;
    undefined field22215_0xd89e;
    undefined field22216_0xd89f;
    undefined field22217_0xd8a0;
    undefined field22218_0xd8a1;
    undefined field22219_0xd8a2;
    undefined field22220_0xd8a3;
    undefined field22221_0xd8a4;
    undefined field22222_0xd8a5;
    undefined field22223_0xd8a6;
    undefined field22224_0xd8a7;
    undefined field22225_0xd8a8;
    undefined field22226_0xd8a9;
    undefined field22227_0xd8aa;
    undefined field22228_0xd8ab;
    undefined field22229_0xd8ac;
    undefined field22230_0xd8ad;
    undefined field22231_0xd8ae;
    undefined field22232_0xd8af;
    undefined field22233_0xd8b0;
    undefined field22234_0xd8b1;
    undefined field22235_0xd8b2;
    undefined field22236_0xd8b3;
    undefined field22237_0xd8b4;
    undefined field22238_0xd8b5;
    undefined field22239_0xd8b6;
    undefined field22240_0xd8b7;
    undefined field22241_0xd8b8;
    undefined field22242_0xd8b9;
    undefined field22243_0xd8ba;
    undefined field22244_0xd8bb;
    undefined field22245_0xd8bc;
    undefined field22246_0xd8bd;
    undefined field22247_0xd8be;
    undefined field22248_0xd8bf;
    undefined field22249_0xd8c0;
    undefined field22250_0xd8c1;
    undefined field22251_0xd8c2;
    undefined field22252_0xd8c3;
    undefined field22253_0xd8c4;
    undefined field22254_0xd8c5;
    undefined field22255_0xd8c6;
    undefined field22256_0xd8c7;
    undefined field22257_0xd8c8;
    undefined field22258_0xd8c9;
    undefined field22259_0xd8ca;
    undefined field22260_0xd8cb;
    undefined field22261_0xd8cc;
    undefined field22262_0xd8cd;
    undefined field22263_0xd8ce;
    undefined field22264_0xd8cf;
    undefined field22265_0xd8d0;
    undefined field22266_0xd8d1;
    undefined field22267_0xd8d2;
    undefined field22268_0xd8d3;
    undefined field22269_0xd8d4;
    undefined field22270_0xd8d5;
    undefined field22271_0xd8d6;
    undefined field22272_0xd8d7;
    undefined field22273_0xd8d8;
    undefined field22274_0xd8d9;
    undefined field22275_0xd8da;
    undefined field22276_0xd8db;
    undefined field22277_0xd8dc;
    undefined field22278_0xd8dd;
    undefined field22279_0xd8de;
    undefined field22280_0xd8df;
    undefined field22281_0xd8e0;
    undefined field22282_0xd8e1;
    undefined field22283_0xd8e2;
    undefined field22284_0xd8e3;
    undefined field22285_0xd8e4;
    undefined field22286_0xd8e5;
    undefined field22287_0xd8e6;
    undefined field22288_0xd8e7;
    undefined field22289_0xd8e8;
    undefined field22290_0xd8e9;
    undefined field22291_0xd8ea;
    undefined field22292_0xd8eb;
    undefined field22293_0xd8ec;
    undefined field22294_0xd8ed;
    undefined field22295_0xd8ee;
    undefined field22296_0xd8ef;
    undefined field22297_0xd8f0;
    undefined field22298_0xd8f1;
    undefined field22299_0xd8f2;
    undefined field22300_0xd8f3;
    undefined field22301_0xd8f4;
    undefined field22302_0xd8f5;
    undefined field22303_0xd8f6;
    undefined field22304_0xd8f7;
    undefined field22305_0xd8f8;
    undefined field22306_0xd8f9;
    undefined field22307_0xd8fa;
    undefined field22308_0xd8fb;
    undefined field22309_0xd8fc;
    undefined field22310_0xd8fd;
    undefined field22311_0xd8fe;
    undefined field22312_0xd8ff;
    undefined field22313_0xd900;
    undefined field22314_0xd901;
    undefined field22315_0xd902;
    undefined field22316_0xd903;
    undefined field22317_0xd904;
    undefined field22318_0xd905;
    undefined field22319_0xd906;
    undefined field22320_0xd907;
    undefined field22321_0xd908;
    undefined field22322_0xd909;
    undefined field22323_0xd90a;
    undefined field22324_0xd90b;
    undefined field22325_0xd90c;
    undefined field22326_0xd90d;
    undefined field22327_0xd90e;
    undefined field22328_0xd90f;
    undefined field22329_0xd910;
    undefined field22330_0xd911;
    undefined field22331_0xd912;
    undefined field22332_0xd913;
    undefined field22333_0xd914;
    undefined field22334_0xd915;
    undefined field22335_0xd916;
    undefined field22336_0xd917;
    undefined field22337_0xd918;
    undefined field22338_0xd919;
    undefined field22339_0xd91a;
    undefined field22340_0xd91b;
    undefined field22341_0xd91c;
    undefined field22342_0xd91d;
    undefined field22343_0xd91e;
    undefined field22344_0xd91f;
    undefined field22345_0xd920;
    undefined field22346_0xd921;
    undefined field22347_0xd922;
    undefined field22348_0xd923;
    undefined field22349_0xd924;
    undefined field22350_0xd925;
    undefined field22351_0xd926;
    undefined field22352_0xd927;
    undefined field22353_0xd928;
    undefined field22354_0xd929;
    undefined field22355_0xd92a;
    undefined field22356_0xd92b;
    undefined field22357_0xd92c;
    undefined field22358_0xd92d;
    undefined field22359_0xd92e;
    undefined field22360_0xd92f;
    undefined field22361_0xd930;
    undefined field22362_0xd931;
    undefined field22363_0xd932;
    undefined field22364_0xd933;
    undefined field22365_0xd934;
    undefined field22366_0xd935;
    undefined field22367_0xd936;
    undefined field22368_0xd937;
    undefined field22369_0xd938;
    undefined field22370_0xd939;
    undefined field22371_0xd93a;
    undefined field22372_0xd93b;
    undefined field22373_0xd93c;
    undefined field22374_0xd93d;
    undefined field22375_0xd93e;
    undefined field22376_0xd93f;
    undefined field22377_0xd940;
    undefined field22378_0xd941;
    undefined field22379_0xd942;
    undefined field22380_0xd943;
    undefined field22381_0xd944;
    undefined field22382_0xd945;
    undefined field22383_0xd946;
    undefined field22384_0xd947;
    undefined field22385_0xd948;
    undefined field22386_0xd949;
    undefined field22387_0xd94a;
    undefined field22388_0xd94b;
    undefined field22389_0xd94c;
    undefined field22390_0xd94d;
    undefined field22391_0xd94e;
    undefined field22392_0xd94f;
    undefined field22393_0xd950;
    undefined field22394_0xd951;
    undefined field22395_0xd952;
    undefined field22396_0xd953;
    undefined field22397_0xd954;
    undefined field22398_0xd955;
    undefined field22399_0xd956;
    undefined field22400_0xd957;
    undefined field22401_0xd958;
    undefined field22402_0xd959;
    undefined field22403_0xd95a;
    undefined field22404_0xd95b;
    undefined field22405_0xd95c;
    undefined field22406_0xd95d;
    undefined field22407_0xd95e;
    undefined field22408_0xd95f;
    undefined field22409_0xd960;
    undefined field22410_0xd961;
    undefined field22411_0xd962;
    undefined field22412_0xd963;
    undefined field22413_0xd964;
    undefined field22414_0xd965;
    undefined field22415_0xd966;
    undefined field22416_0xd967;
    undefined field22417_0xd968;
    undefined field22418_0xd969;
    undefined field22419_0xd96a;
    undefined field22420_0xd96b;
    undefined field22421_0xd96c;
    undefined field22422_0xd96d;
    undefined field22423_0xd96e;
    undefined field22424_0xd96f;
    undefined field22425_0xd970;
    undefined field22426_0xd971;
    undefined field22427_0xd972;
    undefined field22428_0xd973;
    undefined field22429_0xd974;
    undefined field22430_0xd975;
    undefined field22431_0xd976;
    undefined field22432_0xd977;
    undefined field22433_0xd978;
    undefined field22434_0xd979;
    undefined field22435_0xd97a;
    undefined field22436_0xd97b;
    undefined field22437_0xd97c;
    undefined field22438_0xd97d;
    undefined field22439_0xd97e;
    undefined field22440_0xd97f;
    undefined field22441_0xd980;
    undefined field22442_0xd981;
    undefined field22443_0xd982;
    undefined field22444_0xd983;
    undefined field22445_0xd984;
    undefined field22446_0xd985;
    undefined field22447_0xd986;
    undefined field22448_0xd987;
    undefined field22449_0xd988;
    undefined field22450_0xd989;
    undefined field22451_0xd98a;
    undefined field22452_0xd98b;
    undefined field22453_0xd98c;
    undefined field22454_0xd98d;
    undefined field22455_0xd98e;
    undefined field22456_0xd98f;
    undefined field22457_0xd990;
    undefined field22458_0xd991;
    undefined field22459_0xd992;
    undefined field22460_0xd993;
    undefined field22461_0xd994;
    undefined field22462_0xd995;
    undefined field22463_0xd996;
    undefined field22464_0xd997;
    undefined field22465_0xd998;
    undefined field22466_0xd999;
    undefined field22467_0xd99a;
    undefined field22468_0xd99b;
    undefined field22469_0xd99c;
    undefined field22470_0xd99d;
    undefined field22471_0xd99e;
    undefined field22472_0xd99f;
    undefined field22473_0xd9a0;
    undefined field22474_0xd9a1;
    undefined field22475_0xd9a2;
    undefined field22476_0xd9a3;
    undefined field22477_0xd9a4;
    undefined field22478_0xd9a5;
    undefined field22479_0xd9a6;
    undefined field22480_0xd9a7;
    undefined field22481_0xd9a8;
    undefined field22482_0xd9a9;
    undefined field22483_0xd9aa;
    undefined field22484_0xd9ab;
    undefined field22485_0xd9ac;
    undefined field22486_0xd9ad;
    undefined field22487_0xd9ae;
    undefined field22488_0xd9af;
    undefined field22489_0xd9b0;
    undefined field22490_0xd9b1;
    undefined field22491_0xd9b2;
    undefined field22492_0xd9b3;
    undefined field22493_0xd9b4;
    undefined field22494_0xd9b5;
    undefined field22495_0xd9b6;
    undefined field22496_0xd9b7;
    undefined field22497_0xd9b8;
    undefined field22498_0xd9b9;
    undefined field22499_0xd9ba;
    undefined field22500_0xd9bb;
    undefined field22501_0xd9bc;
    undefined field22502_0xd9bd;
    undefined field22503_0xd9be;
    undefined field22504_0xd9bf;
    undefined field22505_0xd9c0;
    undefined field22506_0xd9c1;
    undefined field22507_0xd9c2;
    undefined field22508_0xd9c3;
    undefined field22509_0xd9c4;
    undefined field22510_0xd9c5;
    undefined field22511_0xd9c6;
    undefined field22512_0xd9c7;
    undefined field22513_0xd9c8;
    undefined field22514_0xd9c9;
    undefined field22515_0xd9ca;
    undefined field22516_0xd9cb;
    undefined field22517_0xd9cc;
    undefined field22518_0xd9cd;
    undefined field22519_0xd9ce;
    undefined field22520_0xd9cf;
    undefined field22521_0xd9d0;
    undefined field22522_0xd9d1;
    undefined field22523_0xd9d2;
    undefined field22524_0xd9d3;
    undefined field22525_0xd9d4;
    undefined field22526_0xd9d5;
    undefined field22527_0xd9d6;
    undefined field22528_0xd9d7;
    undefined field22529_0xd9d8;
    undefined field22530_0xd9d9;
    undefined field22531_0xd9da;
    undefined field22532_0xd9db;
    undefined field22533_0xd9dc;
    undefined field22534_0xd9dd;
    undefined field22535_0xd9de;
    undefined field22536_0xd9df;
    undefined field22537_0xd9e0;
    undefined field22538_0xd9e1;
    undefined field22539_0xd9e2;
    undefined field22540_0xd9e3;
    undefined field22541_0xd9e4;
    undefined field22542_0xd9e5;
    undefined field22543_0xd9e6;
    undefined field22544_0xd9e7;
    undefined field22545_0xd9e8;
    undefined field22546_0xd9e9;
    undefined field22547_0xd9ea;
    undefined field22548_0xd9eb;
    undefined field22549_0xd9ec;
    undefined field22550_0xd9ed;
    undefined field22551_0xd9ee;
    undefined field22552_0xd9ef;
    undefined field22553_0xd9f0;
    undefined field22554_0xd9f1;
    undefined field22555_0xd9f2;
    undefined field22556_0xd9f3;
    undefined field22557_0xd9f4;
    undefined field22558_0xd9f5;
    undefined field22559_0xd9f6;
    undefined field22560_0xd9f7;
    undefined field22561_0xd9f8;
    undefined field22562_0xd9f9;
    undefined field22563_0xd9fa;
    undefined field22564_0xd9fb;
    undefined field22565_0xd9fc;
    undefined field22566_0xd9fd;
    undefined field22567_0xd9fe;
    undefined field22568_0xd9ff;
    undefined field22569_0xda00;
    undefined field22570_0xda01;
    undefined field22571_0xda02;
    undefined field22572_0xda03;
    undefined field22573_0xda04;
    undefined field22574_0xda05;
    undefined field22575_0xda06;
    undefined field22576_0xda07;
    undefined field22577_0xda08;
    undefined field22578_0xda09;
    undefined field22579_0xda0a;
    undefined field22580_0xda0b;
    undefined field22581_0xda0c;
    undefined field22582_0xda0d;
    undefined field22583_0xda0e;
    undefined field22584_0xda0f;
    undefined field22585_0xda10;
    undefined field22586_0xda11;
    undefined field22587_0xda12;
    undefined field22588_0xda13;
    undefined field22589_0xda14;
    undefined field22590_0xda15;
    undefined field22591_0xda16;
    undefined field22592_0xda17;
    undefined field22593_0xda18;
    undefined field22594_0xda19;
    undefined field22595_0xda1a;
    undefined field22596_0xda1b;
    undefined field22597_0xda1c;
    undefined field22598_0xda1d;
    undefined field22599_0xda1e;
    undefined field22600_0xda1f;
    undefined field22601_0xda20;
    undefined field22602_0xda21;
    undefined field22603_0xda22;
    undefined field22604_0xda23;
    undefined field22605_0xda24;
    undefined field22606_0xda25;
    undefined field22607_0xda26;
    undefined field22608_0xda27;
    undefined field22609_0xda28;
    undefined field22610_0xda29;
    undefined field22611_0xda2a;
    undefined field22612_0xda2b;
    undefined field22613_0xda2c;
    undefined field22614_0xda2d;
    undefined field22615_0xda2e;
    undefined field22616_0xda2f;
    undefined field22617_0xda30;
    undefined field22618_0xda31;
    undefined field22619_0xda32;
    undefined field22620_0xda33;
    undefined field22621_0xda34;
    undefined field22622_0xda35;
    undefined field22623_0xda36;
    undefined field22624_0xda37;
    undefined field22625_0xda38;
    undefined field22626_0xda39;
    undefined field22627_0xda3a;
    undefined field22628_0xda3b;
    undefined field22629_0xda3c;
    undefined field22630_0xda3d;
    undefined field22631_0xda3e;
    undefined field22632_0xda3f;
    undefined field22633_0xda40;
    undefined field22634_0xda41;
    undefined field22635_0xda42;
    undefined field22636_0xda43;
    undefined field22637_0xda44;
    undefined field22638_0xda45;
    undefined field22639_0xda46;
    undefined field22640_0xda47;
    undefined field22641_0xda48;
    undefined field22642_0xda49;
    undefined field22643_0xda4a;
    undefined field22644_0xda4b;
    undefined field22645_0xda4c;
    undefined field22646_0xda4d;
    undefined field22647_0xda4e;
    undefined field22648_0xda4f;
    undefined field22649_0xda50;
    undefined field22650_0xda51;
    undefined field22651_0xda52;
    undefined field22652_0xda53;
    undefined field22653_0xda54;
    undefined field22654_0xda55;
    undefined field22655_0xda56;
    undefined field22656_0xda57;
    undefined field22657_0xda58;
    undefined field22658_0xda59;
    undefined field22659_0xda5a;
    undefined field22660_0xda5b;
    undefined field22661_0xda5c;
    undefined field22662_0xda5d;
    undefined field22663_0xda5e;
    undefined field22664_0xda5f;
    undefined field22665_0xda60;
    undefined field22666_0xda61;
    undefined field22667_0xda62;
    undefined field22668_0xda63;
    undefined field22669_0xda64;
    undefined field22670_0xda65;
    undefined field22671_0xda66;
    undefined field22672_0xda67;
    undefined field22673_0xda68;
    undefined field22674_0xda69;
    undefined field22675_0xda6a;
    undefined field22676_0xda6b;
    undefined field22677_0xda6c;
    undefined field22678_0xda6d;
    undefined field22679_0xda6e;
    undefined field22680_0xda6f;
    undefined field22681_0xda70;
    undefined field22682_0xda71;
    undefined field22683_0xda72;
    undefined field22684_0xda73;
    undefined field22685_0xda74;
    undefined field22686_0xda75;
    undefined field22687_0xda76;
    undefined field22688_0xda77;
    undefined field22689_0xda78;
    undefined field22690_0xda79;
    undefined field22691_0xda7a;
    undefined field22692_0xda7b;
    undefined field22693_0xda7c;
    undefined field22694_0xda7d;
    undefined field22695_0xda7e;
    undefined field22696_0xda7f;
    undefined field22697_0xda80;
    undefined field22698_0xda81;
    undefined field22699_0xda82;
    undefined field22700_0xda83;
    undefined field22701_0xda84;
    undefined field22702_0xda85;
    undefined field22703_0xda86;
    undefined field22704_0xda87;
    undefined field22705_0xda88;
    undefined field22706_0xda89;
    undefined field22707_0xda8a;
    undefined field22708_0xda8b;
    undefined field22709_0xda8c;
    undefined field22710_0xda8d;
    undefined field22711_0xda8e;
    undefined field22712_0xda8f;
    undefined field22713_0xda90;
    undefined field22714_0xda91;
    undefined field22715_0xda92;
    undefined field22716_0xda93;
    undefined field22717_0xda94;
    undefined field22718_0xda95;
    undefined field22719_0xda96;
    undefined field22720_0xda97;
    undefined field22721_0xda98;
    undefined field22722_0xda99;
    undefined field22723_0xda9a;
    undefined field22724_0xda9b;
    undefined field22725_0xda9c;
    undefined field22726_0xda9d;
    undefined field22727_0xda9e;
    undefined field22728_0xda9f;
    undefined field22729_0xdaa0;
    undefined field22730_0xdaa1;
    undefined field22731_0xdaa2;
    undefined field22732_0xdaa3;
    undefined field22733_0xdaa4;
    undefined field22734_0xdaa5;
    undefined field22735_0xdaa6;
    undefined field22736_0xdaa7;
    undefined field22737_0xdaa8;
    undefined field22738_0xdaa9;
    undefined field22739_0xdaaa;
    undefined field22740_0xdaab;
    undefined field22741_0xdaac;
    undefined field22742_0xdaad;
    undefined field22743_0xdaae;
    undefined field22744_0xdaaf;
    undefined field22745_0xdab0;
    undefined field22746_0xdab1;
    undefined field22747_0xdab2;
    undefined field22748_0xdab3;
    undefined field22749_0xdab4;
    undefined field22750_0xdab5;
    undefined field22751_0xdab6;
    undefined field22752_0xdab7;
    undefined field22753_0xdab8;
    undefined field22754_0xdab9;
    undefined field22755_0xdaba;
    undefined field22756_0xdabb;
    undefined field22757_0xdabc;
    undefined field22758_0xdabd;
    undefined field22759_0xdabe;
    undefined field22760_0xdabf;
    undefined field22761_0xdac0;
    undefined field22762_0xdac1;
    undefined field22763_0xdac2;
    undefined field22764_0xdac3;
    undefined field22765_0xdac4;
    undefined field22766_0xdac5;
    undefined field22767_0xdac6;
    undefined field22768_0xdac7;
    undefined field22769_0xdac8;
    undefined field22770_0xdac9;
    undefined field22771_0xdaca;
    undefined field22772_0xdacb;
    undefined field22773_0xdacc;
    undefined field22774_0xdacd;
    undefined field22775_0xdace;
    undefined field22776_0xdacf;
    undefined field22777_0xdad0;
    undefined field22778_0xdad1;
    undefined field22779_0xdad2;
    undefined field22780_0xdad3;
    undefined field22781_0xdad4;
    undefined field22782_0xdad5;
    undefined field22783_0xdad6;
    undefined field22784_0xdad7;
    undefined field22785_0xdad8;
    undefined field22786_0xdad9;
    undefined field22787_0xdada;
    undefined field22788_0xdadb;
    undefined field22789_0xdadc;
    undefined field22790_0xdadd;
    undefined field22791_0xdade;
    undefined field22792_0xdadf;
    undefined field22793_0xdae0;
    undefined field22794_0xdae1;
    undefined field22795_0xdae2;
    undefined field22796_0xdae3;
    undefined field22797_0xdae4;
    undefined field22798_0xdae5;
    undefined field22799_0xdae6;
    undefined field22800_0xdae7;
    undefined field22801_0xdae8;
    undefined field22802_0xdae9;
    undefined field22803_0xdaea;
    undefined field22804_0xdaeb;
    undefined field22805_0xdaec;
    undefined field22806_0xdaed;
    undefined field22807_0xdaee;
    undefined field22808_0xdaef;
    undefined field22809_0xdaf0;
    undefined field22810_0xdaf1;
    undefined field22811_0xdaf2;
    undefined field22812_0xdaf3;
    undefined field22813_0xdaf4;
    undefined field22814_0xdaf5;
    undefined field22815_0xdaf6;
    undefined field22816_0xdaf7;
    undefined field22817_0xdaf8;
    undefined field22818_0xdaf9;
    undefined field22819_0xdafa;
    undefined field22820_0xdafb;
    undefined field22821_0xdafc;
    undefined field22822_0xdafd;
    undefined field22823_0xdafe;
    undefined field22824_0xdaff;
    undefined field22825_0xdb00;
    undefined field22826_0xdb01;
    undefined field22827_0xdb02;
    undefined field22828_0xdb03;
    undefined field22829_0xdb04;
    undefined field22830_0xdb05;
    undefined field22831_0xdb06;
    undefined field22832_0xdb07;
    undefined field22833_0xdb08;
    undefined field22834_0xdb09;
    undefined field22835_0xdb0a;
    undefined field22836_0xdb0b;
    undefined field22837_0xdb0c;
    undefined field22838_0xdb0d;
    undefined field22839_0xdb0e;
    undefined field22840_0xdb0f;
    undefined field22841_0xdb10;
    undefined field22842_0xdb11;
    undefined field22843_0xdb12;
    undefined field22844_0xdb13;
    undefined field22845_0xdb14;
    undefined field22846_0xdb15;
    undefined field22847_0xdb16;
    undefined field22848_0xdb17;
    undefined field22849_0xdb18;
    undefined field22850_0xdb19;
    undefined field22851_0xdb1a;
    undefined field22852_0xdb1b;
    undefined field22853_0xdb1c;
    undefined field22854_0xdb1d;
    undefined field22855_0xdb1e;
    undefined field22856_0xdb1f;
    undefined field22857_0xdb20;
    undefined field22858_0xdb21;
    undefined field22859_0xdb22;
    undefined field22860_0xdb23;
    undefined field22861_0xdb24;
    undefined field22862_0xdb25;
    undefined field22863_0xdb26;
    undefined field22864_0xdb27;
    undefined field22865_0xdb28;
    undefined field22866_0xdb29;
    undefined field22867_0xdb2a;
    undefined field22868_0xdb2b;
    undefined field22869_0xdb2c;
    undefined field22870_0xdb2d;
    undefined field22871_0xdb2e;
    undefined field22872_0xdb2f;
    undefined field22873_0xdb30;
    undefined field22874_0xdb31;
    undefined field22875_0xdb32;
    undefined field22876_0xdb33;
    undefined field22877_0xdb34;
    undefined field22878_0xdb35;
    undefined field22879_0xdb36;
    undefined field22880_0xdb37;
    undefined field22881_0xdb38;
    undefined field22882_0xdb39;
    undefined field22883_0xdb3a;
    undefined field22884_0xdb3b;
    undefined field22885_0xdb3c;
    undefined field22886_0xdb3d;
    undefined field22887_0xdb3e;
    undefined field22888_0xdb3f;
    undefined field22889_0xdb40;
    undefined field22890_0xdb41;
    undefined field22891_0xdb42;
    undefined field22892_0xdb43;
    undefined field22893_0xdb44;
    undefined field22894_0xdb45;
    undefined field22895_0xdb46;
    undefined field22896_0xdb47;
    undefined field22897_0xdb48;
    undefined field22898_0xdb49;
    undefined field22899_0xdb4a;
    undefined field22900_0xdb4b;
    undefined field22901_0xdb4c;
    undefined field22902_0xdb4d;
    undefined field22903_0xdb4e;
    undefined field22904_0xdb4f;
    undefined field22905_0xdb50;
    undefined field22906_0xdb51;
    undefined field22907_0xdb52;
    undefined field22908_0xdb53;
    undefined field22909_0xdb54;
    undefined field22910_0xdb55;
    undefined field22911_0xdb56;
    undefined field22912_0xdb57;
    undefined field22913_0xdb58;
    undefined field22914_0xdb59;
    undefined field22915_0xdb5a;
    undefined field22916_0xdb5b;
    undefined field22917_0xdb5c;
    undefined field22918_0xdb5d;
    undefined field22919_0xdb5e;
    undefined field22920_0xdb5f;
    undefined field22921_0xdb60;
    undefined field22922_0xdb61;
    undefined field22923_0xdb62;
    undefined field22924_0xdb63;
    undefined field22925_0xdb64;
    undefined field22926_0xdb65;
    undefined field22927_0xdb66;
    undefined field22928_0xdb67;
    undefined field22929_0xdb68;
    undefined field22930_0xdb69;
    undefined field22931_0xdb6a;
    undefined field22932_0xdb6b;
    undefined field22933_0xdb6c;
    undefined field22934_0xdb6d;
    undefined field22935_0xdb6e;
    undefined field22936_0xdb6f;
    undefined field22937_0xdb70;
    undefined field22938_0xdb71;
    undefined field22939_0xdb72;
    undefined field22940_0xdb73;
    undefined field22941_0xdb74;
    undefined field22942_0xdb75;
    undefined field22943_0xdb76;
    undefined field22944_0xdb77;
    undefined field22945_0xdb78;
    undefined field22946_0xdb79;
    undefined field22947_0xdb7a;
    undefined field22948_0xdb7b;
    undefined field22949_0xdb7c;
    undefined field22950_0xdb7d;
    undefined field22951_0xdb7e;
    undefined field22952_0xdb7f;
    undefined field22953_0xdb80;
    undefined field22954_0xdb81;
    undefined field22955_0xdb82;
    undefined field22956_0xdb83;
    undefined field22957_0xdb84;
    undefined field22958_0xdb85;
    undefined field22959_0xdb86;
    undefined field22960_0xdb87;
    undefined field22961_0xdb88;
    undefined field22962_0xdb89;
    undefined field22963_0xdb8a;
    undefined field22964_0xdb8b;
    undefined field22965_0xdb8c;
    undefined field22966_0xdb8d;
    undefined field22967_0xdb8e;
    undefined field22968_0xdb8f;
    undefined field22969_0xdb90;
    undefined field22970_0xdb91;
    undefined field22971_0xdb92;
    undefined field22972_0xdb93;
    undefined field22973_0xdb94;
    undefined field22974_0xdb95;
    undefined field22975_0xdb96;
    undefined field22976_0xdb97;
    undefined field22977_0xdb98;
    undefined field22978_0xdb99;
    undefined field22979_0xdb9a;
    undefined field22980_0xdb9b;
    undefined field22981_0xdb9c;
    undefined field22982_0xdb9d;
    undefined field22983_0xdb9e;
    undefined field22984_0xdb9f;
    undefined field22985_0xdba0;
    undefined field22986_0xdba1;
    undefined field22987_0xdba2;
    undefined field22988_0xdba3;
    undefined field22989_0xdba4;
    undefined field22990_0xdba5;
    undefined field22991_0xdba6;
    undefined field22992_0xdba7;
    undefined field22993_0xdba8;
    undefined field22994_0xdba9;
    undefined field22995_0xdbaa;
    undefined field22996_0xdbab;
    undefined field22997_0xdbac;
    undefined field22998_0xdbad;
    undefined field22999_0xdbae;
    undefined field23000_0xdbaf;
    undefined field23001_0xdbb0;
    undefined field23002_0xdbb1;
    undefined field23003_0xdbb2;
    undefined field23004_0xdbb3;
    undefined field23005_0xdbb4;
    undefined field23006_0xdbb5;
    undefined field23007_0xdbb6;
    undefined field23008_0xdbb7;
    undefined field23009_0xdbb8;
    undefined field23010_0xdbb9;
    undefined field23011_0xdbba;
    undefined field23012_0xdbbb;
    undefined field23013_0xdbbc;
    undefined field23014_0xdbbd;
    undefined field23015_0xdbbe;
    undefined field23016_0xdbbf;
    undefined field23017_0xdbc0;
    undefined field23018_0xdbc1;
    undefined field23019_0xdbc2;
    undefined field23020_0xdbc3;
    undefined field23021_0xdbc4;
    undefined field23022_0xdbc5;
    undefined field23023_0xdbc6;
    undefined field23024_0xdbc7;
    undefined field23025_0xdbc8;
    undefined field23026_0xdbc9;
    undefined field23027_0xdbca;
    undefined field23028_0xdbcb;
    undefined field23029_0xdbcc;
    undefined field23030_0xdbcd;
    undefined field23031_0xdbce;
    undefined field23032_0xdbcf;
    undefined field23033_0xdbd0;
    undefined field23034_0xdbd1;
    undefined field23035_0xdbd2;
    undefined field23036_0xdbd3;
    undefined field23037_0xdbd4;
    undefined field23038_0xdbd5;
    undefined field23039_0xdbd6;
    undefined field23040_0xdbd7;
    undefined field23041_0xdbd8;
    undefined field23042_0xdbd9;
    undefined field23043_0xdbda;
    undefined field23044_0xdbdb;
    undefined field23045_0xdbdc;
    undefined field23046_0xdbdd;
    undefined field23047_0xdbde;
    undefined field23048_0xdbdf;
    undefined field23049_0xdbe0;
    undefined field23050_0xdbe1;
    undefined field23051_0xdbe2;
    undefined field23052_0xdbe3;
    undefined field23053_0xdbe4;
    undefined field23054_0xdbe5;
    undefined field23055_0xdbe6;
    undefined field23056_0xdbe7;
    undefined field23057_0xdbe8;
    undefined field23058_0xdbe9;
    undefined field23059_0xdbea;
    undefined field23060_0xdbeb;
    undefined field23061_0xdbec;
    undefined field23062_0xdbed;
    undefined field23063_0xdbee;
    undefined field23064_0xdbef;
    undefined field23065_0xdbf0;
    undefined field23066_0xdbf1;
    undefined field23067_0xdbf2;
    undefined field23068_0xdbf3;
    undefined field23069_0xdbf4;
    undefined field23070_0xdbf5;
    undefined field23071_0xdbf6;
    undefined field23072_0xdbf7;
    undefined field23073_0xdbf8;
    undefined field23074_0xdbf9;
    undefined field23075_0xdbfa;
    undefined field23076_0xdbfb;
    undefined field23077_0xdbfc;
    undefined field23078_0xdbfd;
    undefined field23079_0xdbfe;
    undefined field23080_0xdbff;
    undefined field23081_0xdc00;
    undefined field23082_0xdc01;
    undefined field23083_0xdc02;
    undefined field23084_0xdc03;
    undefined field23085_0xdc04;
    undefined field23086_0xdc05;
    undefined field23087_0xdc06;
    undefined field23088_0xdc07;
    undefined field23089_0xdc08;
    undefined field23090_0xdc09;
    undefined field23091_0xdc0a;
    undefined field23092_0xdc0b;
    undefined field23093_0xdc0c;
    undefined field23094_0xdc0d;
    undefined field23095_0xdc0e;
    undefined field23096_0xdc0f;
    undefined field23097_0xdc10;
    undefined field23098_0xdc11;
    undefined field23099_0xdc12;
    undefined field23100_0xdc13;
    undefined field23101_0xdc14;
    undefined field23102_0xdc15;
    undefined field23103_0xdc16;
    undefined field23104_0xdc17;
    undefined field23105_0xdc18;
    undefined field23106_0xdc19;
    undefined field23107_0xdc1a;
    undefined field23108_0xdc1b;
    undefined field23109_0xdc1c;
    undefined field23110_0xdc1d;
    undefined field23111_0xdc1e;
    undefined field23112_0xdc1f;
    undefined field23113_0xdc20;
    undefined field23114_0xdc21;
    undefined field23115_0xdc22;
    undefined field23116_0xdc23;
    undefined field23117_0xdc24;
    undefined field23118_0xdc25;
    undefined field23119_0xdc26;
    undefined field23120_0xdc27;
    undefined field23121_0xdc28;
    undefined field23122_0xdc29;
    undefined field23123_0xdc2a;
    undefined field23124_0xdc2b;
    undefined field23125_0xdc2c;
    undefined field23126_0xdc2d;
    undefined field23127_0xdc2e;
    undefined field23128_0xdc2f;
    undefined field23129_0xdc30;
    undefined field23130_0xdc31;
    undefined field23131_0xdc32;
    undefined field23132_0xdc33;
    undefined field23133_0xdc34;
    undefined field23134_0xdc35;
    undefined field23135_0xdc36;
    undefined field23136_0xdc37;
    undefined field23137_0xdc38;
    undefined field23138_0xdc39;
    undefined field23139_0xdc3a;
    undefined field23140_0xdc3b;
    undefined field23141_0xdc3c;
    undefined field23142_0xdc3d;
    undefined field23143_0xdc3e;
    undefined field23144_0xdc3f;
    undefined field23145_0xdc40;
    undefined field23146_0xdc41;
    undefined field23147_0xdc42;
    undefined field23148_0xdc43;
    undefined field23149_0xdc44;
    undefined field23150_0xdc45;
    undefined field23151_0xdc46;
    undefined field23152_0xdc47;
    undefined field23153_0xdc48;
    undefined field23154_0xdc49;
    undefined field23155_0xdc4a;
    undefined field23156_0xdc4b;
    undefined field23157_0xdc4c;
    undefined field23158_0xdc4d;
    undefined field23159_0xdc4e;
    undefined field23160_0xdc4f;
    undefined field23161_0xdc50;
    undefined field23162_0xdc51;
    undefined field23163_0xdc52;
    undefined field23164_0xdc53;
    undefined field23165_0xdc54;
    undefined field23166_0xdc55;
    undefined field23167_0xdc56;
    undefined field23168_0xdc57;
    undefined field23169_0xdc58;
    undefined field23170_0xdc59;
    undefined field23171_0xdc5a;
    undefined field23172_0xdc5b;
    undefined field23173_0xdc5c;
    undefined field23174_0xdc5d;
    undefined field23175_0xdc5e;
    undefined field23176_0xdc5f;
    undefined field23177_0xdc60;
    undefined field23178_0xdc61;
    undefined field23179_0xdc62;
    undefined field23180_0xdc63;
    undefined field23181_0xdc64;
    undefined field23182_0xdc65;
    undefined field23183_0xdc66;
    undefined field23184_0xdc67;
    undefined field23185_0xdc68;
    undefined field23186_0xdc69;
    undefined field23187_0xdc6a;
    undefined field23188_0xdc6b;
    undefined field23189_0xdc6c;
    undefined field23190_0xdc6d;
    undefined field23191_0xdc6e;
    undefined field23192_0xdc6f;
    undefined field23193_0xdc70;
    undefined field23194_0xdc71;
    undefined field23195_0xdc72;
    undefined field23196_0xdc73;
    undefined field23197_0xdc74;
    undefined field23198_0xdc75;
    undefined field23199_0xdc76;
    undefined field23200_0xdc77;
    undefined field23201_0xdc78;
    undefined field23202_0xdc79;
    undefined field23203_0xdc7a;
    undefined field23204_0xdc7b;
    undefined field23205_0xdc7c;
    undefined field23206_0xdc7d;
    undefined field23207_0xdc7e;
    undefined field23208_0xdc7f;
    undefined field23209_0xdc80;
    undefined field23210_0xdc81;
    undefined field23211_0xdc82;
    undefined field23212_0xdc83;
    undefined field23213_0xdc84;
    undefined field23214_0xdc85;
    undefined field23215_0xdc86;
    undefined field23216_0xdc87;
    undefined field23217_0xdc88;
    undefined field23218_0xdc89;
    undefined field23219_0xdc8a;
    undefined field23220_0xdc8b;
    undefined field23221_0xdc8c;
    undefined field23222_0xdc8d;
    undefined field23223_0xdc8e;
    undefined field23224_0xdc8f;
    undefined field23225_0xdc90;
    undefined field23226_0xdc91;
    undefined field23227_0xdc92;
    undefined field23228_0xdc93;
    undefined field23229_0xdc94;
    undefined field23230_0xdc95;
    undefined field23231_0xdc96;
    undefined field23232_0xdc97;
    undefined field23233_0xdc98;
    undefined field23234_0xdc99;
    undefined field23235_0xdc9a;
    undefined field23236_0xdc9b;
    undefined field23237_0xdc9c;
    undefined field23238_0xdc9d;
    undefined field23239_0xdc9e;
    undefined field23240_0xdc9f;
    undefined field23241_0xdca0;
    undefined field23242_0xdca1;
    undefined field23243_0xdca2;
    undefined field23244_0xdca3;
    undefined field23245_0xdca4;
    undefined field23246_0xdca5;
    undefined field23247_0xdca6;
    undefined field23248_0xdca7;
    undefined field23249_0xdca8;
    undefined field23250_0xdca9;
    undefined field23251_0xdcaa;
    undefined field23252_0xdcab;
    undefined field23253_0xdcac;
    undefined field23254_0xdcad;
    undefined field23255_0xdcae;
    undefined field23256_0xdcaf;
    undefined field23257_0xdcb0;
    undefined field23258_0xdcb1;
    undefined field23259_0xdcb2;
    undefined field23260_0xdcb3;
    undefined field23261_0xdcb4;
    undefined field23262_0xdcb5;
    undefined field23263_0xdcb6;
    undefined field23264_0xdcb7;
    undefined field23265_0xdcb8;
    undefined field23266_0xdcb9;
    undefined field23267_0xdcba;
    undefined field23268_0xdcbb;
    undefined field23269_0xdcbc;
    undefined field23270_0xdcbd;
    undefined field23271_0xdcbe;
    undefined field23272_0xdcbf;
    undefined field23273_0xdcc0;
    undefined field23274_0xdcc1;
    undefined field23275_0xdcc2;
    undefined field23276_0xdcc3;
    undefined field23277_0xdcc4;
    undefined field23278_0xdcc5;
    undefined field23279_0xdcc6;
    undefined field23280_0xdcc7;
    undefined field23281_0xdcc8;
    undefined field23282_0xdcc9;
    undefined field23283_0xdcca;
    undefined field23284_0xdccb;
    undefined field23285_0xdccc;
    undefined field23286_0xdccd;
    undefined field23287_0xdcce;
    undefined field23288_0xdccf;
    undefined field23289_0xdcd0;
    undefined field23290_0xdcd1;
    undefined field23291_0xdcd2;
    undefined field23292_0xdcd3;
    undefined field23293_0xdcd4;
    undefined field23294_0xdcd5;
    undefined field23295_0xdcd6;
    undefined field23296_0xdcd7;
    undefined field23297_0xdcd8;
    undefined field23298_0xdcd9;
    undefined field23299_0xdcda;
    undefined field23300_0xdcdb;
    undefined field23301_0xdcdc;
    undefined field23302_0xdcdd;
    undefined field23303_0xdcde;
    undefined field23304_0xdcdf;
    undefined field23305_0xdce0;
    undefined field23306_0xdce1;
    undefined field23307_0xdce2;
    undefined field23308_0xdce3;
    undefined field23309_0xdce4;
    undefined field23310_0xdce5;
    undefined field23311_0xdce6;
    undefined field23312_0xdce7;
    undefined field23313_0xdce8;
    undefined field23314_0xdce9;
    undefined field23315_0xdcea;
    undefined field23316_0xdceb;
    undefined field23317_0xdcec;
    undefined field23318_0xdced;
    undefined field23319_0xdcee;
    undefined field23320_0xdcef;
    undefined field23321_0xdcf0;
    undefined field23322_0xdcf1;
    undefined field23323_0xdcf2;
    undefined field23324_0xdcf3;
    undefined field23325_0xdcf4;
    undefined field23326_0xdcf5;
    undefined field23327_0xdcf6;
    undefined field23328_0xdcf7;
    undefined field23329_0xdcf8;
    undefined field23330_0xdcf9;
    undefined field23331_0xdcfa;
    undefined field23332_0xdcfb;
    undefined field23333_0xdcfc;
    undefined field23334_0xdcfd;
    undefined field23335_0xdcfe;
    undefined field23336_0xdcff;
    undefined field23337_0xdd00;
    undefined field23338_0xdd01;
    undefined field23339_0xdd02;
    undefined field23340_0xdd03;
    undefined field23341_0xdd04;
    undefined field23342_0xdd05;
    undefined field23343_0xdd06;
    undefined field23344_0xdd07;
    undefined field23345_0xdd08;
    undefined field23346_0xdd09;
    undefined field23347_0xdd0a;
    undefined field23348_0xdd0b;
    undefined field23349_0xdd0c;
    undefined field23350_0xdd0d;
    undefined field23351_0xdd0e;
    undefined field23352_0xdd0f;
    undefined field23353_0xdd10;
    undefined field23354_0xdd11;
    undefined field23355_0xdd12;
    undefined field23356_0xdd13;
    undefined field23357_0xdd14;
    undefined field23358_0xdd15;
    undefined field23359_0xdd16;
    undefined field23360_0xdd17;
    undefined field23361_0xdd18;
    undefined field23362_0xdd19;
    undefined field23363_0xdd1a;
    undefined field23364_0xdd1b;
    undefined field23365_0xdd1c;
    undefined field23366_0xdd1d;
    undefined field23367_0xdd1e;
    undefined field23368_0xdd1f;
    undefined field23369_0xdd20;
    undefined field23370_0xdd21;
    undefined field23371_0xdd22;
    undefined field23372_0xdd23;
    undefined field23373_0xdd24;
    undefined field23374_0xdd25;
    undefined field23375_0xdd26;
    undefined field23376_0xdd27;
    undefined field23377_0xdd28;
    undefined field23378_0xdd29;
    undefined field23379_0xdd2a;
    undefined field23380_0xdd2b;
    undefined field23381_0xdd2c;
    undefined field23382_0xdd2d;
    undefined field23383_0xdd2e;
    undefined field23384_0xdd2f;
    undefined field23385_0xdd30;
    undefined field23386_0xdd31;
    undefined field23387_0xdd32;
    undefined field23388_0xdd33;
    undefined field23389_0xdd34;
    undefined field23390_0xdd35;
    undefined field23391_0xdd36;
    undefined field23392_0xdd37;
    undefined field23393_0xdd38;
    undefined field23394_0xdd39;
    undefined field23395_0xdd3a;
    undefined field23396_0xdd3b;
    undefined field23397_0xdd3c;
    undefined field23398_0xdd3d;
    undefined field23399_0xdd3e;
    undefined field23400_0xdd3f;
    undefined field23401_0xdd40;
    undefined field23402_0xdd41;
    undefined field23403_0xdd42;
    undefined field23404_0xdd43;
    undefined field23405_0xdd44;
    undefined field23406_0xdd45;
    undefined field23407_0xdd46;
    undefined field23408_0xdd47;
    undefined field23409_0xdd48;
    undefined field23410_0xdd49;
    undefined field23411_0xdd4a;
    undefined field23412_0xdd4b;
    undefined field23413_0xdd4c;
    undefined field23414_0xdd4d;
    undefined field23415_0xdd4e;
    undefined field23416_0xdd4f;
    undefined field23417_0xdd50;
    undefined field23418_0xdd51;
    undefined field23419_0xdd52;
    undefined field23420_0xdd53;
    undefined field23421_0xdd54;
    undefined field23422_0xdd55;
    undefined field23423_0xdd56;
    undefined field23424_0xdd57;
    undefined field23425_0xdd58;
    undefined field23426_0xdd59;
    undefined field23427_0xdd5a;
    undefined field23428_0xdd5b;
    undefined field23429_0xdd5c;
    undefined field23430_0xdd5d;
    undefined field23431_0xdd5e;
    undefined field23432_0xdd5f;
    undefined field23433_0xdd60;
    undefined field23434_0xdd61;
    undefined field23435_0xdd62;
    undefined field23436_0xdd63;
    undefined field23437_0xdd64;
    undefined field23438_0xdd65;
    undefined field23439_0xdd66;
    undefined field23440_0xdd67;
    undefined field23441_0xdd68;
    undefined field23442_0xdd69;
    undefined field23443_0xdd6a;
    undefined field23444_0xdd6b;
    undefined field23445_0xdd6c;
    undefined field23446_0xdd6d;
    undefined field23447_0xdd6e;
    undefined field23448_0xdd6f;
    undefined field23449_0xdd70;
    undefined field23450_0xdd71;
    undefined field23451_0xdd72;
    undefined field23452_0xdd73;
    undefined field23453_0xdd74;
    undefined field23454_0xdd75;
    undefined field23455_0xdd76;
    undefined field23456_0xdd77;
    undefined field23457_0xdd78;
    undefined field23458_0xdd79;
    undefined field23459_0xdd7a;
    undefined field23460_0xdd7b;
    undefined field23461_0xdd7c;
    undefined field23462_0xdd7d;
    undefined field23463_0xdd7e;
    undefined field23464_0xdd7f;
    undefined field23465_0xdd80;
    undefined field23466_0xdd81;
    undefined field23467_0xdd82;
    undefined field23468_0xdd83;
    undefined field23469_0xdd84;
    undefined field23470_0xdd85;
    undefined field23471_0xdd86;
    undefined field23472_0xdd87;
    undefined field23473_0xdd88;
    undefined field23474_0xdd89;
    undefined field23475_0xdd8a;
    undefined field23476_0xdd8b;
    undefined field23477_0xdd8c;
    undefined field23478_0xdd8d;
    undefined field23479_0xdd8e;
    undefined field23480_0xdd8f;
    undefined field23481_0xdd90;
    undefined field23482_0xdd91;
    undefined field23483_0xdd92;
    undefined field23484_0xdd93;
    undefined field23485_0xdd94;
    undefined field23486_0xdd95;
    undefined field23487_0xdd96;
    undefined field23488_0xdd97;
    undefined field23489_0xdd98;
    undefined field23490_0xdd99;
    undefined field23491_0xdd9a;
    undefined field23492_0xdd9b;
    undefined field23493_0xdd9c;
    undefined field23494_0xdd9d;
    undefined field23495_0xdd9e;
    undefined field23496_0xdd9f;
    undefined field23497_0xdda0;
    undefined field23498_0xdda1;
    undefined field23499_0xdda2;
    undefined field23500_0xdda3;
    undefined field23501_0xdda4;
    undefined field23502_0xdda5;
    undefined field23503_0xdda6;
    undefined field23504_0xdda7;
    undefined field23505_0xdda8;
    undefined field23506_0xdda9;
    undefined field23507_0xddaa;
    undefined field23508_0xddab;
    undefined field23509_0xddac;
    undefined field23510_0xddad;
    undefined field23511_0xddae;
    undefined field23512_0xddaf;
    undefined field23513_0xddb0;
    undefined field23514_0xddb1;
    undefined field23515_0xddb2;
    undefined field23516_0xddb3;
    undefined field23517_0xddb4;
    undefined field23518_0xddb5;
    undefined field23519_0xddb6;
    undefined field23520_0xddb7;
    undefined field23521_0xddb8;
    undefined field23522_0xddb9;
    undefined field23523_0xddba;
    undefined field23524_0xddbb;
    undefined field23525_0xddbc;
    undefined field23526_0xddbd;
    undefined field23527_0xddbe;
    undefined field23528_0xddbf;
    undefined field23529_0xddc0;
    undefined field23530_0xddc1;
    undefined field23531_0xddc2;
    undefined field23532_0xddc3;
    undefined field23533_0xddc4;
    undefined field23534_0xddc5;
    undefined field23535_0xddc6;
    undefined field23536_0xddc7;
    undefined field23537_0xddc8;
    undefined field23538_0xddc9;
    undefined field23539_0xddca;
    undefined field23540_0xddcb;
    undefined field23541_0xddcc;
    undefined field23542_0xddcd;
    undefined field23543_0xddce;
    undefined field23544_0xddcf;
    undefined field23545_0xddd0;
    undefined field23546_0xddd1;
    undefined field23547_0xddd2;
    undefined field23548_0xddd3;
    undefined field23549_0xddd4;
    undefined field23550_0xddd5;
    undefined field23551_0xddd6;
    undefined field23552_0xddd7;
    undefined field23553_0xddd8;
    undefined field23554_0xddd9;
    undefined field23555_0xddda;
    undefined field23556_0xdddb;
    undefined field23557_0xdddc;
    undefined field23558_0xdddd;
    undefined field23559_0xddde;
    undefined field23560_0xdddf;
    undefined field23561_0xdde0;
    undefined field23562_0xdde1;
    undefined field23563_0xdde2;
    undefined field23564_0xdde3;
    undefined field23565_0xdde4;
    undefined field23566_0xdde5;
    undefined field23567_0xdde6;
    undefined field23568_0xdde7;
    undefined field23569_0xdde8;
    undefined field23570_0xdde9;
    undefined field23571_0xddea;
    undefined field23572_0xddeb;
    undefined field23573_0xddec;
    undefined field23574_0xdded;
    undefined field23575_0xddee;
    undefined field23576_0xddef;
    undefined field23577_0xddf0;
    undefined field23578_0xddf1;
    undefined field23579_0xddf2;
    undefined field23580_0xddf3;
    undefined field23581_0xddf4;
    undefined field23582_0xddf5;
    undefined field23583_0xddf6;
    undefined field23584_0xddf7;
    undefined field23585_0xddf8;
    undefined field23586_0xddf9;
    undefined field23587_0xddfa;
    undefined field23588_0xddfb;
    undefined field23589_0xddfc;
    undefined field23590_0xddfd;
    undefined field23591_0xddfe;
    undefined field23592_0xddff;
    undefined field23593_0xde00;
    undefined field23594_0xde01;
    undefined field23595_0xde02;
    undefined field23596_0xde03;
    undefined field23597_0xde04;
    undefined field23598_0xde05;
    undefined field23599_0xde06;
    undefined field23600_0xde07;
    undefined field23601_0xde08;
    undefined field23602_0xde09;
    undefined field23603_0xde0a;
    undefined field23604_0xde0b;
    undefined field23605_0xde0c;
    undefined field23606_0xde0d;
    undefined field23607_0xde0e;
    undefined field23608_0xde0f;
    undefined field23609_0xde10;
    undefined field23610_0xde11;
    undefined field23611_0xde12;
    undefined field23612_0xde13;
    undefined field23613_0xde14;
    undefined field23614_0xde15;
    undefined field23615_0xde16;
    undefined field23616_0xde17;
    undefined field23617_0xde18;
    undefined field23618_0xde19;
    undefined field23619_0xde1a;
    undefined field23620_0xde1b;
    undefined field23621_0xde1c;
    undefined field23622_0xde1d;
    undefined field23623_0xde1e;
    undefined field23624_0xde1f;
    undefined field23625_0xde20;
    undefined field23626_0xde21;
    undefined field23627_0xde22;
    undefined field23628_0xde23;
    undefined field23629_0xde24;
    undefined field23630_0xde25;
    undefined field23631_0xde26;
    undefined field23632_0xde27;
    undefined field23633_0xde28;
    undefined field23634_0xde29;
    undefined field23635_0xde2a;
    undefined field23636_0xde2b;
    undefined field23637_0xde2c;
    undefined field23638_0xde2d;
    undefined field23639_0xde2e;
    undefined field23640_0xde2f;
    undefined field23641_0xde30;
    undefined field23642_0xde31;
    undefined field23643_0xde32;
    undefined field23644_0xde33;
    undefined field23645_0xde34;
    undefined field23646_0xde35;
    undefined field23647_0xde36;
    undefined field23648_0xde37;
    undefined field23649_0xde38;
    undefined field23650_0xde39;
    undefined field23651_0xde3a;
    undefined field23652_0xde3b;
    undefined field23653_0xde3c;
    undefined field23654_0xde3d;
    undefined field23655_0xde3e;
    undefined field23656_0xde3f;
    undefined field23657_0xde40;
    undefined field23658_0xde41;
    undefined field23659_0xde42;
    undefined field23660_0xde43;
    undefined field23661_0xde44;
    undefined field23662_0xde45;
    undefined field23663_0xde46;
    undefined field23664_0xde47;
    undefined field23665_0xde48;
    undefined field23666_0xde49;
    undefined field23667_0xde4a;
    undefined field23668_0xde4b;
    undefined field23669_0xde4c;
    undefined field23670_0xde4d;
    undefined field23671_0xde4e;
    undefined field23672_0xde4f;
    undefined field23673_0xde50;
    undefined field23674_0xde51;
    undefined field23675_0xde52;
    undefined field23676_0xde53;
    undefined field23677_0xde54;
    undefined field23678_0xde55;
    undefined field23679_0xde56;
    undefined field23680_0xde57;
    undefined field23681_0xde58;
    undefined field23682_0xde59;
    undefined field23683_0xde5a;
    undefined field23684_0xde5b;
    undefined field23685_0xde5c;
    undefined field23686_0xde5d;
    undefined field23687_0xde5e;
    undefined field23688_0xde5f;
    undefined field23689_0xde60;
    undefined field23690_0xde61;
    undefined field23691_0xde62;
    undefined field23692_0xde63;
    undefined field23693_0xde64;
    undefined field23694_0xde65;
    undefined field23695_0xde66;
    undefined field23696_0xde67;
    undefined field23697_0xde68;
    undefined field23698_0xde69;
    undefined field23699_0xde6a;
    undefined field23700_0xde6b;
    undefined field23701_0xde6c;
    undefined field23702_0xde6d;
    undefined field23703_0xde6e;
    undefined field23704_0xde6f;
    undefined field23705_0xde70;
    undefined field23706_0xde71;
    undefined field23707_0xde72;
    undefined field23708_0xde73;
    undefined field23709_0xde74;
    undefined field23710_0xde75;
    undefined field23711_0xde76;
    undefined field23712_0xde77;
    undefined field23713_0xde78;
    undefined field23714_0xde79;
    undefined field23715_0xde7a;
    undefined field23716_0xde7b;
    undefined field23717_0xde7c;
    undefined field23718_0xde7d;
    undefined field23719_0xde7e;
    undefined field23720_0xde7f;
    undefined field23721_0xde80;
    undefined field23722_0xde81;
    undefined field23723_0xde82;
    undefined field23724_0xde83;
    undefined field23725_0xde84;
    undefined field23726_0xde85;
    undefined field23727_0xde86;
    undefined field23728_0xde87;
    undefined field23729_0xde88;
    undefined field23730_0xde89;
    undefined field23731_0xde8a;
    undefined field23732_0xde8b;
    undefined field23733_0xde8c;
    undefined field23734_0xde8d;
    undefined field23735_0xde8e;
    undefined field23736_0xde8f;
    undefined field23737_0xde90;
    undefined field23738_0xde91;
    undefined field23739_0xde92;
    undefined field23740_0xde93;
    undefined field23741_0xde94;
    undefined field23742_0xde95;
    undefined field23743_0xde96;
    undefined field23744_0xde97;
    undefined field23745_0xde98;
    undefined field23746_0xde99;
    undefined field23747_0xde9a;
    undefined field23748_0xde9b;
    undefined field23749_0xde9c;
    undefined field23750_0xde9d;
    undefined field23751_0xde9e;
    undefined field23752_0xde9f;
    undefined field23753_0xdea0;
    undefined field23754_0xdea1;
    undefined field23755_0xdea2;
    undefined field23756_0xdea3;
    undefined field23757_0xdea4;
    undefined field23758_0xdea5;
    undefined field23759_0xdea6;
    undefined field23760_0xdea7;
    undefined field23761_0xdea8;
    undefined field23762_0xdea9;
    undefined field23763_0xdeaa;
    undefined field23764_0xdeab;
    undefined field23765_0xdeac;
    undefined field23766_0xdead;
    undefined field23767_0xdeae;
    undefined field23768_0xdeaf;
    undefined field23769_0xdeb0;
    undefined field23770_0xdeb1;
    undefined field23771_0xdeb2;
    undefined field23772_0xdeb3;
    undefined field23773_0xdeb4;
    undefined field23774_0xdeb5;
    undefined field23775_0xdeb6;
    undefined field23776_0xdeb7;
    undefined field23777_0xdeb8;
    undefined field23778_0xdeb9;
    undefined field23779_0xdeba;
    undefined field23780_0xdebb;
    undefined field23781_0xdebc;
    undefined field23782_0xdebd;
    undefined field23783_0xdebe;
    undefined field23784_0xdebf;
    undefined field23785_0xdec0;
    undefined field23786_0xdec1;
    undefined field23787_0xdec2;
    undefined field23788_0xdec3;
    undefined field23789_0xdec4;
    undefined field23790_0xdec5;
    undefined field23791_0xdec6;
    undefined field23792_0xdec7;
    undefined field23793_0xdec8;
    undefined field23794_0xdec9;
    undefined field23795_0xdeca;
    undefined field23796_0xdecb;
    undefined field23797_0xdecc;
    undefined field23798_0xdecd;
    undefined field23799_0xdece;
    undefined field23800_0xdecf;
    undefined field23801_0xded0;
    undefined field23802_0xded1;
    undefined field23803_0xded2;
    undefined field23804_0xded3;
    undefined field23805_0xded4;
    undefined field23806_0xded5;
    undefined field23807_0xded6;
    undefined field23808_0xded7;
    undefined field23809_0xded8;
    undefined field23810_0xded9;
    undefined field23811_0xdeda;
    undefined field23812_0xdedb;
    undefined field23813_0xdedc;
    undefined field23814_0xdedd;
    undefined field23815_0xdede;
    undefined field23816_0xdedf;
    undefined field23817_0xdee0;
    undefined field23818_0xdee1;
    undefined field23819_0xdee2;
    undefined field23820_0xdee3;
    undefined field23821_0xdee4;
    undefined field23822_0xdee5;
    undefined field23823_0xdee6;
    undefined field23824_0xdee7;
    undefined field23825_0xdee8;
    undefined field23826_0xdee9;
    undefined field23827_0xdeea;
    undefined field23828_0xdeeb;
    undefined field23829_0xdeec;
    undefined field23830_0xdeed;
    undefined field23831_0xdeee;
    undefined field23832_0xdeef;
    undefined field23833_0xdef0;
    undefined field23834_0xdef1;
    undefined field23835_0xdef2;
    undefined field23836_0xdef3;
    undefined field23837_0xdef4;
    undefined field23838_0xdef5;
    undefined field23839_0xdef6;
    undefined field23840_0xdef7;
    undefined field23841_0xdef8;
    undefined field23842_0xdef9;
    undefined field23843_0xdefa;
    undefined field23844_0xdefb;
    undefined field23845_0xdefc;
    undefined field23846_0xdefd;
    undefined field23847_0xdefe;
    undefined field23848_0xdeff;
    undefined field23849_0xdf00;
    undefined field23850_0xdf01;
    undefined field23851_0xdf02;
    undefined field23852_0xdf03;
    undefined field23853_0xdf04;
    undefined field23854_0xdf05;
    undefined field23855_0xdf06;
    undefined field23856_0xdf07;
    undefined field23857_0xdf08;
    undefined field23858_0xdf09;
    undefined field23859_0xdf0a;
    undefined field23860_0xdf0b;
    undefined field23861_0xdf0c;
    undefined field23862_0xdf0d;
    undefined field23863_0xdf0e;
    undefined field23864_0xdf0f;
    undefined field23865_0xdf10;
    undefined field23866_0xdf11;
    undefined field23867_0xdf12;
    undefined field23868_0xdf13;
    undefined field23869_0xdf14;
    undefined field23870_0xdf15;
    undefined field23871_0xdf16;
    undefined field23872_0xdf17;
    undefined field23873_0xdf18;
    undefined field23874_0xdf19;
    undefined field23875_0xdf1a;
    undefined field23876_0xdf1b;
    undefined field23877_0xdf1c;
    undefined field23878_0xdf1d;
    undefined field23879_0xdf1e;
    undefined field23880_0xdf1f;
    undefined field23881_0xdf20;
    undefined field23882_0xdf21;
    undefined field23883_0xdf22;
    undefined field23884_0xdf23;
    undefined field23885_0xdf24;
    undefined field23886_0xdf25;
    undefined field23887_0xdf26;
    undefined field23888_0xdf27;
    undefined field23889_0xdf28;
    undefined field23890_0xdf29;
    undefined field23891_0xdf2a;
    undefined field23892_0xdf2b;
    undefined field23893_0xdf2c;
    undefined field23894_0xdf2d;
    undefined field23895_0xdf2e;
    undefined field23896_0xdf2f;
    undefined field23897_0xdf30;
    undefined field23898_0xdf31;
    undefined field23899_0xdf32;
    undefined field23900_0xdf33;
    undefined field23901_0xdf34;
    undefined field23902_0xdf35;
    undefined field23903_0xdf36;
    undefined field23904_0xdf37;
    undefined field23905_0xdf38;
    undefined field23906_0xdf39;
    undefined field23907_0xdf3a;
    undefined field23908_0xdf3b;
    undefined field23909_0xdf3c;
    undefined field23910_0xdf3d;
    undefined field23911_0xdf3e;
    undefined field23912_0xdf3f;
    undefined field23913_0xdf40;
    undefined field23914_0xdf41;
    undefined field23915_0xdf42;
    undefined field23916_0xdf43;
    undefined field23917_0xdf44;
    undefined field23918_0xdf45;
    undefined field23919_0xdf46;
    undefined field23920_0xdf47;
    undefined field23921_0xdf48;
    undefined field23922_0xdf49;
    undefined field23923_0xdf4a;
    undefined field23924_0xdf4b;
    undefined field23925_0xdf4c;
    undefined field23926_0xdf4d;
    undefined field23927_0xdf4e;
    undefined field23928_0xdf4f;
    undefined field23929_0xdf50;
    undefined field23930_0xdf51;
    undefined field23931_0xdf52;
    undefined field23932_0xdf53;
    undefined field23933_0xdf54;
    undefined field23934_0xdf55;
    undefined field23935_0xdf56;
    undefined field23936_0xdf57;
    undefined field23937_0xdf58;
    undefined field23938_0xdf59;
    undefined field23939_0xdf5a;
    undefined field23940_0xdf5b;
    undefined field23941_0xdf5c;
    undefined field23942_0xdf5d;
    undefined field23943_0xdf5e;
    undefined field23944_0xdf5f;
    undefined field23945_0xdf60;
    undefined field23946_0xdf61;
    undefined field23947_0xdf62;
    undefined field23948_0xdf63;
    undefined field23949_0xdf64;
    undefined field23950_0xdf65;
    undefined field23951_0xdf66;
    undefined field23952_0xdf67;
    undefined field23953_0xdf68;
    undefined field23954_0xdf69;
    undefined field23955_0xdf6a;
    undefined field23956_0xdf6b;
    undefined field23957_0xdf6c;
    undefined field23958_0xdf6d;
    undefined field23959_0xdf6e;
    undefined field23960_0xdf6f;
    undefined field23961_0xdf70;
    undefined field23962_0xdf71;
    undefined field23963_0xdf72;
    undefined field23964_0xdf73;
    undefined field23965_0xdf74;
    undefined field23966_0xdf75;
    undefined field23967_0xdf76;
    undefined field23968_0xdf77;
    undefined field23969_0xdf78;
    undefined field23970_0xdf79;
    undefined field23971_0xdf7a;
    undefined field23972_0xdf7b;
    undefined field23973_0xdf7c;
    undefined field23974_0xdf7d;
    undefined field23975_0xdf7e;
    undefined field23976_0xdf7f;
    undefined field23977_0xdf80;
    undefined field23978_0xdf81;
    undefined field23979_0xdf82;
    undefined field23980_0xdf83;
    undefined field23981_0xdf84;
    undefined field23982_0xdf85;
    undefined field23983_0xdf86;
    undefined field23984_0xdf87;
    undefined field23985_0xdf88;
    undefined field23986_0xdf89;
    undefined field23987_0xdf8a;
    undefined field23988_0xdf8b;
    undefined field23989_0xdf8c;
    undefined field23990_0xdf8d;
    undefined field23991_0xdf8e;
    undefined field23992_0xdf8f;
    undefined field23993_0xdf90;
    undefined field23994_0xdf91;
    undefined field23995_0xdf92;
    undefined field23996_0xdf93;
    undefined field23997_0xdf94;
    undefined field23998_0xdf95;
    undefined field23999_0xdf96;
    undefined field24000_0xdf97;
    undefined field24001_0xdf98;
    undefined field24002_0xdf99;
    undefined field24003_0xdf9a;
    undefined field24004_0xdf9b;
    undefined field24005_0xdf9c;
    undefined field24006_0xdf9d;
    undefined field24007_0xdf9e;
    undefined field24008_0xdf9f;
    undefined field24009_0xdfa0;
    undefined field24010_0xdfa1;
    undefined field24011_0xdfa2;
    undefined field24012_0xdfa3;
    undefined field24013_0xdfa4;
    undefined field24014_0xdfa5;
    undefined field24015_0xdfa6;
    undefined field24016_0xdfa7;
    undefined field24017_0xdfa8;
    undefined field24018_0xdfa9;
    undefined field24019_0xdfaa;
    undefined field24020_0xdfab;
    undefined field24021_0xdfac;
    undefined field24022_0xdfad;
    undefined field24023_0xdfae;
    undefined field24024_0xdfaf;
    undefined field24025_0xdfb0;
    undefined field24026_0xdfb1;
    undefined field24027_0xdfb2;
    undefined field24028_0xdfb3;
    undefined field24029_0xdfb4;
    undefined field24030_0xdfb5;
    undefined field24031_0xdfb6;
    undefined field24032_0xdfb7;
    undefined field24033_0xdfb8;
    undefined field24034_0xdfb9;
    undefined field24035_0xdfba;
    undefined field24036_0xdfbb;
    undefined field24037_0xdfbc;
    undefined field24038_0xdfbd;
    undefined field24039_0xdfbe;
    undefined field24040_0xdfbf;
    undefined field24041_0xdfc0;
    undefined field24042_0xdfc1;
    undefined field24043_0xdfc2;
    undefined field24044_0xdfc3;
    undefined field24045_0xdfc4;
    undefined field24046_0xdfc5;
    undefined field24047_0xdfc6;
    undefined field24048_0xdfc7;
    undefined field24049_0xdfc8;
    undefined field24050_0xdfc9;
    undefined field24051_0xdfca;
    undefined field24052_0xdfcb;
    undefined field24053_0xdfcc;
    undefined field24054_0xdfcd;
    undefined field24055_0xdfce;
    undefined field24056_0xdfcf;
    undefined field24057_0xdfd0;
    undefined field24058_0xdfd1;
    undefined field24059_0xdfd2;
    undefined field24060_0xdfd3;
    undefined field24061_0xdfd4;
    undefined field24062_0xdfd5;
    undefined field24063_0xdfd6;
    undefined field24064_0xdfd7;
    undefined field24065_0xdfd8;
    undefined field24066_0xdfd9;
    undefined field24067_0xdfda;
    undefined field24068_0xdfdb;
    undefined field24069_0xdfdc;
    undefined field24070_0xdfdd;
    undefined field24071_0xdfde;
    undefined field24072_0xdfdf;
    undefined field24073_0xdfe0;
    undefined field24074_0xdfe1;
    undefined field24075_0xdfe2;
    undefined field24076_0xdfe3;
    undefined field24077_0xdfe4;
    undefined field24078_0xdfe5;
    undefined field24079_0xdfe6;
    undefined field24080_0xdfe7;
    undefined field24081_0xdfe8;
    undefined field24082_0xdfe9;
    undefined field24083_0xdfea;
    undefined field24084_0xdfeb;
    undefined field24085_0xdfec;
    undefined field24086_0xdfed;
    undefined field24087_0xdfee;
    undefined field24088_0xdfef;
    undefined field24089_0xdff0;
    undefined field24090_0xdff1;
    undefined field24091_0xdff2;
    undefined field24092_0xdff3;
    undefined field24093_0xdff4;
    undefined field24094_0xdff5;
    undefined field24095_0xdff6;
    undefined field24096_0xdff7;
    undefined field24097_0xdff8;
    undefined field24098_0xdff9;
    undefined field24099_0xdffa;
    undefined field24100_0xdffb;
    undefined field24101_0xdffc;
    undefined field24102_0xdffd;
    undefined field24103_0xdffe;
    undefined field24104_0xdfff;
    undefined field24105_0xe000;
    undefined field24106_0xe001;
    undefined field24107_0xe002;
    undefined field24108_0xe003;
    undefined field24109_0xe004;
    undefined field24110_0xe005;
    undefined field24111_0xe006;
    undefined field24112_0xe007;
    undefined field24113_0xe008;
    undefined field24114_0xe009;
    undefined field24115_0xe00a;
    undefined field24116_0xe00b;
    undefined field24117_0xe00c;
    undefined field24118_0xe00d;
    undefined field24119_0xe00e;
    undefined field24120_0xe00f;
    undefined field24121_0xe010;
    undefined field24122_0xe011;
    undefined field24123_0xe012;
    undefined field24124_0xe013;
    undefined field24125_0xe014;
    undefined field24126_0xe015;
    undefined field24127_0xe016;
    undefined field24128_0xe017;
    undefined field24129_0xe018;
    undefined field24130_0xe019;
    undefined field24131_0xe01a;
    undefined field24132_0xe01b;
    undefined field24133_0xe01c;
    undefined field24134_0xe01d;
    undefined field24135_0xe01e;
    undefined field24136_0xe01f;
    undefined field24137_0xe020;
    undefined field24138_0xe021;
    undefined field24139_0xe022;
    undefined field24140_0xe023;
    undefined field24141_0xe024;
    undefined field24142_0xe025;
    undefined field24143_0xe026;
    undefined field24144_0xe027;
    undefined field24145_0xe028;
    undefined field24146_0xe029;
    undefined field24147_0xe02a;
    undefined field24148_0xe02b;
    undefined field24149_0xe02c;
    undefined field24150_0xe02d;
    undefined field24151_0xe02e;
    undefined field24152_0xe02f;
    undefined field24153_0xe030;
    undefined field24154_0xe031;
    undefined field24155_0xe032;
    undefined field24156_0xe033;
    undefined field24157_0xe034;
    undefined field24158_0xe035;
    undefined field24159_0xe036;
    undefined field24160_0xe037;
    undefined field24161_0xe038;
    undefined field24162_0xe039;
    undefined field24163_0xe03a;
    undefined field24164_0xe03b;
    undefined field24165_0xe03c;
    undefined field24166_0xe03d;
    undefined field24167_0xe03e;
    undefined field24168_0xe03f;
    undefined field24169_0xe040;
    undefined field24170_0xe041;
    undefined field24171_0xe042;
    undefined field24172_0xe043;
    undefined field24173_0xe044;
    undefined field24174_0xe045;
    undefined field24175_0xe046;
    undefined field24176_0xe047;
    undefined field24177_0xe048;
    undefined field24178_0xe049;
    undefined field24179_0xe04a;
    undefined field24180_0xe04b;
    undefined field24181_0xe04c;
    undefined field24182_0xe04d;
    undefined field24183_0xe04e;
    undefined field24184_0xe04f;
    undefined field24185_0xe050;
    undefined field24186_0xe051;
    undefined field24187_0xe052;
    undefined field24188_0xe053;
    undefined field24189_0xe054;
    undefined field24190_0xe055;
    undefined field24191_0xe056;
    undefined field24192_0xe057;
    undefined field24193_0xe058;
    undefined field24194_0xe059;
    undefined field24195_0xe05a;
    undefined field24196_0xe05b;
    undefined field24197_0xe05c;
    undefined field24198_0xe05d;
    undefined field24199_0xe05e;
    undefined field24200_0xe05f;
    undefined field24201_0xe060;
    undefined field24202_0xe061;
    undefined field24203_0xe062;
    undefined field24204_0xe063;
    undefined field24205_0xe064;
    undefined field24206_0xe065;
    undefined field24207_0xe066;
    undefined field24208_0xe067;
    undefined field24209_0xe068;
    undefined field24210_0xe069;
    undefined field24211_0xe06a;
    undefined field24212_0xe06b;
    undefined field24213_0xe06c;
    undefined field24214_0xe06d;
    undefined field24215_0xe06e;
    undefined field24216_0xe06f;
    undefined field24217_0xe070;
    undefined field24218_0xe071;
    undefined field24219_0xe072;
    undefined field24220_0xe073;
    undefined field24221_0xe074;
    undefined field24222_0xe075;
    undefined field24223_0xe076;
    undefined field24224_0xe077;
    undefined field24225_0xe078;
    undefined field24226_0xe079;
    undefined field24227_0xe07a;
    undefined field24228_0xe07b;
    undefined field24229_0xe07c;
    undefined field24230_0xe07d;
    undefined field24231_0xe07e;
    undefined field24232_0xe07f;
    undefined field24233_0xe080;
    undefined field24234_0xe081;
    undefined field24235_0xe082;
    undefined field24236_0xe083;
    undefined field24237_0xe084;
    undefined field24238_0xe085;
    undefined field24239_0xe086;
    undefined field24240_0xe087;
    undefined field24241_0xe088;
    undefined field24242_0xe089;
    undefined field24243_0xe08a;
    undefined field24244_0xe08b;
    undefined field24245_0xe08c;
    undefined field24246_0xe08d;
    undefined field24247_0xe08e;
    undefined field24248_0xe08f;
    undefined field24249_0xe090;
    undefined field24250_0xe091;
    undefined field24251_0xe092;
    undefined field24252_0xe093;
    undefined field24253_0xe094;
    undefined field24254_0xe095;
    undefined field24255_0xe096;
    undefined field24256_0xe097;
    undefined field24257_0xe098;
    undefined field24258_0xe099;
    undefined field24259_0xe09a;
    undefined field24260_0xe09b;
    undefined field24261_0xe09c;
    undefined field24262_0xe09d;
    undefined field24263_0xe09e;
    undefined field24264_0xe09f;
    undefined field24265_0xe0a0;
    undefined field24266_0xe0a1;
    undefined field24267_0xe0a2;
    undefined field24268_0xe0a3;
    undefined field24269_0xe0a4;
    undefined field24270_0xe0a5;
    undefined field24271_0xe0a6;
    undefined field24272_0xe0a7;
    undefined field24273_0xe0a8;
    undefined field24274_0xe0a9;
    undefined field24275_0xe0aa;
    undefined field24276_0xe0ab;
    undefined field24277_0xe0ac;
    undefined field24278_0xe0ad;
    undefined field24279_0xe0ae;
    undefined field24280_0xe0af;
    undefined field24281_0xe0b0;
    undefined field24282_0xe0b1;
    undefined field24283_0xe0b2;
    undefined field24284_0xe0b3;
    undefined field24285_0xe0b4;
    undefined field24286_0xe0b5;
    undefined field24287_0xe0b6;
    undefined field24288_0xe0b7;
    undefined field24289_0xe0b8;
    undefined field24290_0xe0b9;
    undefined field24291_0xe0ba;
    undefined field24292_0xe0bb;
    undefined field24293_0xe0bc;
    undefined field24294_0xe0bd;
    undefined field24295_0xe0be;
    undefined field24296_0xe0bf;
    undefined field24297_0xe0c0;
    undefined field24298_0xe0c1;
    undefined field24299_0xe0c2;
    undefined field24300_0xe0c3;
    undefined field24301_0xe0c4;
    undefined field24302_0xe0c5;
    undefined field24303_0xe0c6;
    undefined field24304_0xe0c7;
    undefined field24305_0xe0c8;
    undefined field24306_0xe0c9;
    undefined field24307_0xe0ca;
    undefined field24308_0xe0cb;
    undefined field24309_0xe0cc;
    undefined field24310_0xe0cd;
    undefined field24311_0xe0ce;
    undefined field24312_0xe0cf;
    undefined field24313_0xe0d0;
    undefined field24314_0xe0d1;
    undefined field24315_0xe0d2;
    undefined field24316_0xe0d3;
    undefined field24317_0xe0d4;
    undefined field24318_0xe0d5;
    undefined field24319_0xe0d6;
    undefined field24320_0xe0d7;
    undefined field24321_0xe0d8;
    undefined field24322_0xe0d9;
    undefined field24323_0xe0da;
    undefined field24324_0xe0db;
    undefined field24325_0xe0dc;
    undefined field24326_0xe0dd;
    undefined field24327_0xe0de;
    undefined field24328_0xe0df;
    undefined field24329_0xe0e0;
    undefined field24330_0xe0e1;
    undefined field24331_0xe0e2;
    undefined field24332_0xe0e3;
    undefined field24333_0xe0e4;
    undefined field24334_0xe0e5;
    undefined field24335_0xe0e6;
    undefined field24336_0xe0e7;
    undefined field24337_0xe0e8;
    undefined field24338_0xe0e9;
    undefined field24339_0xe0ea;
    undefined field24340_0xe0eb;
    undefined field24341_0xe0ec;
    undefined field24342_0xe0ed;
    undefined field24343_0xe0ee;
    undefined field24344_0xe0ef;
    undefined field24345_0xe0f0;
    undefined field24346_0xe0f1;
    undefined field24347_0xe0f2;
    undefined field24348_0xe0f3;
    undefined field24349_0xe0f4;
    undefined field24350_0xe0f5;
    undefined field24351_0xe0f6;
    undefined field24352_0xe0f7;
    undefined field24353_0xe0f8;
    undefined field24354_0xe0f9;
    undefined field24355_0xe0fa;
    undefined field24356_0xe0fb;
    undefined field24357_0xe0fc;
    undefined field24358_0xe0fd;
    undefined field24359_0xe0fe;
    undefined field24360_0xe0ff;
    undefined field24361_0xe100;
    undefined field24362_0xe101;
    undefined field24363_0xe102;
    undefined field24364_0xe103;
    undefined field24365_0xe104;
    undefined field24366_0xe105;
    undefined field24367_0xe106;
    undefined field24368_0xe107;
    undefined field24369_0xe108;
    undefined field24370_0xe109;
    undefined field24371_0xe10a;
    undefined field24372_0xe10b;
    undefined field24373_0xe10c;
    undefined field24374_0xe10d;
    undefined field24375_0xe10e;
    undefined field24376_0xe10f;
    undefined field24377_0xe110;
    undefined field24378_0xe111;
    undefined field24379_0xe112;
    undefined field24380_0xe113;
    undefined field24381_0xe114;
    undefined field24382_0xe115;
    undefined field24383_0xe116;
    undefined field24384_0xe117;
    undefined field24385_0xe118;
    undefined field24386_0xe119;
    undefined field24387_0xe11a;
    undefined field24388_0xe11b;
    undefined field24389_0xe11c;
    undefined field24390_0xe11d;
    undefined field24391_0xe11e;
    undefined field24392_0xe11f;
    undefined field24393_0xe120;
    undefined field24394_0xe121;
    undefined field24395_0xe122;
    undefined field24396_0xe123;
    undefined field24397_0xe124;
    undefined field24398_0xe125;
    undefined field24399_0xe126;
    undefined field24400_0xe127;
    undefined field24401_0xe128;
    undefined field24402_0xe129;
    undefined field24403_0xe12a;
    undefined field24404_0xe12b;
    undefined field24405_0xe12c;
    undefined field24406_0xe12d;
    undefined field24407_0xe12e;
    undefined field24408_0xe12f;
    undefined field24409_0xe130;
    undefined field24410_0xe131;
    undefined field24411_0xe132;
    undefined field24412_0xe133;
    undefined field24413_0xe134;
    undefined field24414_0xe135;
    undefined field24415_0xe136;
    undefined field24416_0xe137;
    undefined field24417_0xe138;
    undefined field24418_0xe139;
    undefined field24419_0xe13a;
    undefined field24420_0xe13b;
    undefined field24421_0xe13c;
    undefined field24422_0xe13d;
    undefined field24423_0xe13e;
    undefined field24424_0xe13f;
    undefined field24425_0xe140;
    undefined field24426_0xe141;
    undefined field24427_0xe142;
    undefined field24428_0xe143;
    undefined field24429_0xe144;
    undefined field24430_0xe145;
    undefined field24431_0xe146;
    undefined field24432_0xe147;
    undefined field24433_0xe148;
    undefined field24434_0xe149;
    undefined field24435_0xe14a;
    undefined field24436_0xe14b;
    undefined field24437_0xe14c;
    undefined field24438_0xe14d;
    undefined field24439_0xe14e;
    undefined field24440_0xe14f;
    undefined field24441_0xe150;
    undefined field24442_0xe151;
    undefined field24443_0xe152;
    undefined field24444_0xe153;
    undefined field24445_0xe154;
    undefined field24446_0xe155;
    undefined field24447_0xe156;
    undefined field24448_0xe157;
    undefined field24449_0xe158;
    undefined field24450_0xe159;
    undefined field24451_0xe15a;
    undefined field24452_0xe15b;
    undefined field24453_0xe15c;
    undefined field24454_0xe15d;
    undefined field24455_0xe15e;
    undefined field24456_0xe15f;
    undefined field24457_0xe160;
    undefined field24458_0xe161;
    undefined field24459_0xe162;
    undefined field24460_0xe163;
    undefined field24461_0xe164;
    undefined field24462_0xe165;
    undefined field24463_0xe166;
    undefined field24464_0xe167;
    undefined field24465_0xe168;
    undefined field24466_0xe169;
    undefined field24467_0xe16a;
    undefined field24468_0xe16b;
    undefined field24469_0xe16c;
    undefined field24470_0xe16d;
    undefined field24471_0xe16e;
    undefined field24472_0xe16f;
    undefined field24473_0xe170;
    undefined field24474_0xe171;
    undefined field24475_0xe172;
    undefined field24476_0xe173;
    undefined field24477_0xe174;
    undefined field24478_0xe175;
    undefined field24479_0xe176;
    undefined field24480_0xe177;
    undefined field24481_0xe178;
    undefined field24482_0xe179;
    undefined field24483_0xe17a;
    undefined field24484_0xe17b;
    undefined field24485_0xe17c;
    undefined field24486_0xe17d;
    undefined field24487_0xe17e;
    undefined field24488_0xe17f;
    undefined field24489_0xe180;
    undefined field24490_0xe181;
    undefined field24491_0xe182;
    undefined field24492_0xe183;
    undefined field24493_0xe184;
    undefined field24494_0xe185;
    undefined field24495_0xe186;
    undefined field24496_0xe187;
    undefined field24497_0xe188;
    undefined field24498_0xe189;
    undefined field24499_0xe18a;
    undefined field24500_0xe18b;
    undefined field24501_0xe18c;
    undefined field24502_0xe18d;
    undefined field24503_0xe18e;
    undefined field24504_0xe18f;
    undefined field24505_0xe190;
    undefined field24506_0xe191;
    undefined field24507_0xe192;
    undefined field24508_0xe193;
    undefined field24509_0xe194;
    undefined field24510_0xe195;
    undefined field24511_0xe196;
    undefined field24512_0xe197;
    undefined field24513_0xe198;
    undefined field24514_0xe199;
    undefined field24515_0xe19a;
    undefined field24516_0xe19b;
    undefined field24517_0xe19c;
    undefined field24518_0xe19d;
    undefined field24519_0xe19e;
    undefined field24520_0xe19f;
    undefined field24521_0xe1a0;
    undefined field24522_0xe1a1;
    undefined field24523_0xe1a2;
    undefined field24524_0xe1a3;
    undefined field24525_0xe1a4;
    undefined field24526_0xe1a5;
    undefined field24527_0xe1a6;
    undefined field24528_0xe1a7;
    undefined field24529_0xe1a8;
    undefined field24530_0xe1a9;
    undefined field24531_0xe1aa;
    undefined field24532_0xe1ab;
    undefined field24533_0xe1ac;
    undefined field24534_0xe1ad;
    undefined field24535_0xe1ae;
    undefined field24536_0xe1af;
    undefined field24537_0xe1b0;
    undefined field24538_0xe1b1;
    undefined field24539_0xe1b2;
    undefined field24540_0xe1b3;
    undefined field24541_0xe1b4;
    undefined field24542_0xe1b5;
    undefined field24543_0xe1b6;
    undefined field24544_0xe1b7;
    undefined field24545_0xe1b8;
    undefined field24546_0xe1b9;
    undefined field24547_0xe1ba;
    undefined field24548_0xe1bb;
    undefined field24549_0xe1bc;
    undefined field24550_0xe1bd;
    undefined field24551_0xe1be;
    undefined field24552_0xe1bf;
    undefined field24553_0xe1c0;
    undefined field24554_0xe1c1;
    undefined field24555_0xe1c2;
    undefined field24556_0xe1c3;
    undefined field24557_0xe1c4;
    undefined field24558_0xe1c5;
    undefined field24559_0xe1c6;
    undefined field24560_0xe1c7;
    undefined field24561_0xe1c8;
    undefined field24562_0xe1c9;
    undefined field24563_0xe1ca;
    undefined field24564_0xe1cb;
    undefined field24565_0xe1cc;
    undefined field24566_0xe1cd;
    undefined field24567_0xe1ce;
    undefined field24568_0xe1cf;
    undefined field24569_0xe1d0;
    undefined field24570_0xe1d1;
    undefined field24571_0xe1d2;
    undefined field24572_0xe1d3;
    undefined field24573_0xe1d4;
    undefined field24574_0xe1d5;
    undefined field24575_0xe1d6;
    undefined field24576_0xe1d7;
    undefined field24577_0xe1d8;
    undefined field24578_0xe1d9;
    undefined field24579_0xe1da;
    undefined field24580_0xe1db;
    undefined field24581_0xe1dc;
    undefined field24582_0xe1dd;
    undefined field24583_0xe1de;
    undefined field24584_0xe1df;
    undefined field24585_0xe1e0;
    undefined field24586_0xe1e1;
    undefined field24587_0xe1e2;
    undefined field24588_0xe1e3;
    undefined field24589_0xe1e4;
    undefined field24590_0xe1e5;
    undefined field24591_0xe1e6;
    undefined field24592_0xe1e7;
    undefined field24593_0xe1e8;
    undefined field24594_0xe1e9;
    undefined field24595_0xe1ea;
    undefined field24596_0xe1eb;
    undefined field24597_0xe1ec;
    undefined field24598_0xe1ed;
    undefined field24599_0xe1ee;
    undefined field24600_0xe1ef;
    undefined field24601_0xe1f0;
    undefined field24602_0xe1f1;
    undefined field24603_0xe1f2;
    undefined field24604_0xe1f3;
    undefined field24605_0xe1f4;
    undefined field24606_0xe1f5;
    undefined field24607_0xe1f6;
    undefined field24608_0xe1f7;
    undefined field24609_0xe1f8;
    undefined field24610_0xe1f9;
    undefined field24611_0xe1fa;
    undefined field24612_0xe1fb;
    undefined field24613_0xe1fc;
    undefined field24614_0xe1fd;
    undefined field24615_0xe1fe;
    undefined field24616_0xe1ff;
    undefined field24617_0xe200;
    undefined field24618_0xe201;
    undefined field24619_0xe202;
    undefined field24620_0xe203;
    undefined field24621_0xe204;
    undefined field24622_0xe205;
    undefined field24623_0xe206;
    undefined field24624_0xe207;
    undefined field24625_0xe208;
    undefined field24626_0xe209;
    undefined field24627_0xe20a;
    undefined field24628_0xe20b;
    undefined field24629_0xe20c;
    undefined field24630_0xe20d;
    undefined field24631_0xe20e;
    undefined field24632_0xe20f;
    undefined field24633_0xe210;
    undefined field24634_0xe211;
    undefined field24635_0xe212;
    undefined field24636_0xe213;
    undefined field24637_0xe214;
    undefined field24638_0xe215;
    undefined field24639_0xe216;
    undefined field24640_0xe217;
    undefined field24641_0xe218;
    undefined field24642_0xe219;
    undefined field24643_0xe21a;
    undefined field24644_0xe21b;
    undefined field24645_0xe21c;
    undefined field24646_0xe21d;
    undefined field24647_0xe21e;
    undefined field24648_0xe21f;
    undefined field24649_0xe220;
    undefined field24650_0xe221;
    undefined field24651_0xe222;
    undefined field24652_0xe223;
    undefined field24653_0xe224;
    undefined field24654_0xe225;
    undefined field24655_0xe226;
    undefined field24656_0xe227;
    undefined field24657_0xe228;
    undefined field24658_0xe229;
    undefined field24659_0xe22a;
    undefined field24660_0xe22b;
    undefined field24661_0xe22c;
    undefined field24662_0xe22d;
    undefined field24663_0xe22e;
    undefined field24664_0xe22f;
    undefined field24665_0xe230;
    undefined field24666_0xe231;
    undefined field24667_0xe232;
    undefined field24668_0xe233;
    undefined field24669_0xe234;
    undefined field24670_0xe235;
    undefined field24671_0xe236;
    undefined field24672_0xe237;
    undefined field24673_0xe238;
    undefined field24674_0xe239;
    undefined field24675_0xe23a;
    undefined field24676_0xe23b;
    undefined field24677_0xe23c;
    undefined field24678_0xe23d;
    undefined field24679_0xe23e;
    undefined field24680_0xe23f;
    undefined field24681_0xe240;
    undefined field24682_0xe241;
    undefined field24683_0xe242;
    undefined field24684_0xe243;
    undefined field24685_0xe244;
    undefined field24686_0xe245;
    undefined field24687_0xe246;
    undefined field24688_0xe247;
    undefined field24689_0xe248;
    undefined field24690_0xe249;
    undefined field24691_0xe24a;
    undefined field24692_0xe24b;
    undefined field24693_0xe24c;
    undefined field24694_0xe24d;
    undefined field24695_0xe24e;
    undefined field24696_0xe24f;
    undefined field24697_0xe250;
    undefined field24698_0xe251;
    undefined field24699_0xe252;
    undefined field24700_0xe253;
    undefined field24701_0xe254;
    undefined field24702_0xe255;
    undefined field24703_0xe256;
    undefined field24704_0xe257;
    undefined field24705_0xe258;
    undefined field24706_0xe259;
    undefined field24707_0xe25a;
    undefined field24708_0xe25b;
    undefined field24709_0xe25c;
    undefined field24710_0xe25d;
    undefined field24711_0xe25e;
    undefined field24712_0xe25f;
    undefined field24713_0xe260;
    undefined field24714_0xe261;
    undefined field24715_0xe262;
    undefined field24716_0xe263;
    undefined field24717_0xe264;
    undefined field24718_0xe265;
    undefined field24719_0xe266;
    undefined field24720_0xe267;
    undefined field24721_0xe268;
    undefined field24722_0xe269;
    undefined field24723_0xe26a;
    undefined field24724_0xe26b;
    undefined field24725_0xe26c;
    undefined field24726_0xe26d;
    undefined field24727_0xe26e;
    undefined field24728_0xe26f;
    undefined field24729_0xe270;
    undefined field24730_0xe271;
    undefined field24731_0xe272;
    undefined field24732_0xe273;
    undefined field24733_0xe274;
    undefined field24734_0xe275;
    undefined field24735_0xe276;
    undefined field24736_0xe277;
    undefined field24737_0xe278;
    undefined field24738_0xe279;
    undefined field24739_0xe27a;
    undefined field24740_0xe27b;
    undefined field24741_0xe27c;
    undefined field24742_0xe27d;
    undefined field24743_0xe27e;
    undefined field24744_0xe27f;
    undefined field24745_0xe280;
    undefined field24746_0xe281;
    undefined field24747_0xe282;
    undefined field24748_0xe283;
    undefined field24749_0xe284;
    undefined field24750_0xe285;
    undefined field24751_0xe286;
    undefined field24752_0xe287;
    undefined field24753_0xe288;
    undefined field24754_0xe289;
    undefined field24755_0xe28a;
    undefined field24756_0xe28b;
    undefined field24757_0xe28c;
    undefined field24758_0xe28d;
    undefined field24759_0xe28e;
    undefined field24760_0xe28f;
    undefined field24761_0xe290;
    undefined field24762_0xe291;
    undefined field24763_0xe292;
    undefined field24764_0xe293;
    undefined field24765_0xe294;
    undefined field24766_0xe295;
    undefined field24767_0xe296;
    undefined field24768_0xe297;
    undefined field24769_0xe298;
    undefined field24770_0xe299;
    undefined field24771_0xe29a;
    undefined field24772_0xe29b;
    undefined field24773_0xe29c;
    undefined field24774_0xe29d;
    undefined field24775_0xe29e;
    undefined field24776_0xe29f;
    undefined field24777_0xe2a0;
    undefined field24778_0xe2a1;
    undefined field24779_0xe2a2;
    undefined field24780_0xe2a3;
    undefined field24781_0xe2a4;
    undefined field24782_0xe2a5;
    undefined field24783_0xe2a6;
    undefined field24784_0xe2a7;
    undefined field24785_0xe2a8;
    undefined field24786_0xe2a9;
    undefined field24787_0xe2aa;
    undefined field24788_0xe2ab;
    undefined field24789_0xe2ac;
    undefined field24790_0xe2ad;
    undefined field24791_0xe2ae;
    undefined field24792_0xe2af;
    undefined field24793_0xe2b0;
    undefined field24794_0xe2b1;
    undefined field24795_0xe2b2;
    undefined field24796_0xe2b3;
    undefined field24797_0xe2b4;
    undefined field24798_0xe2b5;
    undefined field24799_0xe2b6;
    undefined field24800_0xe2b7;
    undefined field24801_0xe2b8;
    undefined field24802_0xe2b9;
    undefined field24803_0xe2ba;
    undefined field24804_0xe2bb;
    undefined field24805_0xe2bc;
    undefined field24806_0xe2bd;
    undefined field24807_0xe2be;
    undefined field24808_0xe2bf;
    undefined field24809_0xe2c0;
    undefined field24810_0xe2c1;
    undefined field24811_0xe2c2;
    undefined field24812_0xe2c3;
    undefined field24813_0xe2c4;
    undefined field24814_0xe2c5;
    undefined field24815_0xe2c6;
    undefined field24816_0xe2c7;
    undefined field24817_0xe2c8;
    undefined field24818_0xe2c9;
    undefined field24819_0xe2ca;
    undefined field24820_0xe2cb;
    undefined field24821_0xe2cc;
    undefined field24822_0xe2cd;
    undefined field24823_0xe2ce;
    undefined field24824_0xe2cf;
    undefined field24825_0xe2d0;
    undefined field24826_0xe2d1;
    undefined field24827_0xe2d2;
    undefined field24828_0xe2d3;
    undefined field24829_0xe2d4;
    undefined field24830_0xe2d5;
    undefined field24831_0xe2d6;
    undefined field24832_0xe2d7;
    undefined field24833_0xe2d8;
    undefined field24834_0xe2d9;
    undefined field24835_0xe2da;
    undefined field24836_0xe2db;
    undefined field24837_0xe2dc;
    undefined field24838_0xe2dd;
    undefined field24839_0xe2de;
    undefined field24840_0xe2df;
    undefined field24841_0xe2e0;
    undefined field24842_0xe2e1;
    undefined field24843_0xe2e2;
    undefined field24844_0xe2e3;
    undefined field24845_0xe2e4;
    undefined field24846_0xe2e5;
    undefined field24847_0xe2e6;
    undefined field24848_0xe2e7;
    undefined field24849_0xe2e8;
    undefined field24850_0xe2e9;
    undefined field24851_0xe2ea;
    undefined field24852_0xe2eb;
    undefined field24853_0xe2ec;
    undefined field24854_0xe2ed;
    undefined field24855_0xe2ee;
    undefined field24856_0xe2ef;
    undefined field24857_0xe2f0;
    undefined field24858_0xe2f1;
    undefined field24859_0xe2f2;
    undefined field24860_0xe2f3;
    undefined field24861_0xe2f4;
    undefined field24862_0xe2f5;
    undefined field24863_0xe2f6;
    undefined field24864_0xe2f7;
    undefined field24865_0xe2f8;
    undefined field24866_0xe2f9;
    undefined field24867_0xe2fa;
    undefined field24868_0xe2fb;
    undefined field24869_0xe2fc;
    undefined field24870_0xe2fd;
    undefined field24871_0xe2fe;
    undefined field24872_0xe2ff;
    undefined field24873_0xe300;
    undefined field24874_0xe301;
    undefined field24875_0xe302;
    undefined field24876_0xe303;
    undefined field24877_0xe304;
    undefined field24878_0xe305;
    undefined field24879_0xe306;
    undefined field24880_0xe307;
    undefined field24881_0xe308;
    undefined field24882_0xe309;
    undefined field24883_0xe30a;
    undefined field24884_0xe30b;
    undefined field24885_0xe30c;
    undefined field24886_0xe30d;
    undefined field24887_0xe30e;
    undefined field24888_0xe30f;
    undefined field24889_0xe310;
    undefined field24890_0xe311;
    undefined field24891_0xe312;
    undefined field24892_0xe313;
    undefined field24893_0xe314;
    undefined field24894_0xe315;
    undefined field24895_0xe316;
    undefined field24896_0xe317;
    undefined field24897_0xe318;
    undefined field24898_0xe319;
    undefined field24899_0xe31a;
    undefined field24900_0xe31b;
    undefined field24901_0xe31c;
    undefined field24902_0xe31d;
    undefined field24903_0xe31e;
    undefined field24904_0xe31f;
    undefined field24905_0xe320;
    undefined field24906_0xe321;
    undefined field24907_0xe322;
    undefined field24908_0xe323;
    undefined field24909_0xe324;
    undefined field24910_0xe325;
    undefined field24911_0xe326;
    undefined field24912_0xe327;
    undefined field24913_0xe328;
    undefined field24914_0xe329;
    undefined field24915_0xe32a;
    undefined field24916_0xe32b;
    undefined field24917_0xe32c;
    undefined field24918_0xe32d;
    undefined field24919_0xe32e;
    undefined field24920_0xe32f;
    undefined field24921_0xe330;
    undefined field24922_0xe331;
    undefined field24923_0xe332;
    undefined field24924_0xe333;
    undefined field24925_0xe334;
    undefined field24926_0xe335;
    undefined field24927_0xe336;
    undefined field24928_0xe337;
    undefined field24929_0xe338;
    undefined field24930_0xe339;
    undefined field24931_0xe33a;
    undefined field24932_0xe33b;
    undefined field24933_0xe33c;
    undefined field24934_0xe33d;
    undefined field24935_0xe33e;
    undefined field24936_0xe33f;
    undefined field24937_0xe340;
    undefined field24938_0xe341;
    undefined field24939_0xe342;
    undefined field24940_0xe343;
    undefined field24941_0xe344;
    undefined field24942_0xe345;
    undefined field24943_0xe346;
    undefined field24944_0xe347;
    undefined field24945_0xe348;
    undefined field24946_0xe349;
    undefined field24947_0xe34a;
    undefined field24948_0xe34b;
    undefined field24949_0xe34c;
    undefined field24950_0xe34d;
    undefined field24951_0xe34e;
    undefined field24952_0xe34f;
    undefined field24953_0xe350;
    undefined field24954_0xe351;
    undefined field24955_0xe352;
    undefined field24956_0xe353;
    undefined field24957_0xe354;
    undefined field24958_0xe355;
    undefined field24959_0xe356;
    undefined field24960_0xe357;
    undefined field24961_0xe358;
    undefined field24962_0xe359;
    undefined field24963_0xe35a;
    undefined field24964_0xe35b;
    undefined field24965_0xe35c;
    undefined field24966_0xe35d;
    undefined field24967_0xe35e;
    undefined field24968_0xe35f;
    undefined field24969_0xe360;
    undefined field24970_0xe361;
    undefined field24971_0xe362;
    undefined field24972_0xe363;
    undefined field24973_0xe364;
    undefined field24974_0xe365;
    undefined field24975_0xe366;
    undefined field24976_0xe367;
    undefined field24977_0xe368;
    undefined field24978_0xe369;
    undefined field24979_0xe36a;
    undefined field24980_0xe36b;
    undefined field24981_0xe36c;
    undefined field24982_0xe36d;
    undefined field24983_0xe36e;
    undefined field24984_0xe36f;
    undefined field24985_0xe370;
    undefined field24986_0xe371;
    undefined field24987_0xe372;
    undefined field24988_0xe373;
    undefined field24989_0xe374;
    undefined field24990_0xe375;
    undefined field24991_0xe376;
    undefined field24992_0xe377;
    undefined field24993_0xe378;
    undefined field24994_0xe379;
    undefined field24995_0xe37a;
    undefined field24996_0xe37b;
    undefined field24997_0xe37c;
    undefined field24998_0xe37d;
    undefined field24999_0xe37e;
    undefined field25000_0xe37f;
    undefined field25001_0xe380;
    undefined field25002_0xe381;
    undefined field25003_0xe382;
    undefined field25004_0xe383;
    undefined field25005_0xe384;
    undefined field25006_0xe385;
    undefined field25007_0xe386;
    undefined field25008_0xe387;
    undefined field25009_0xe388;
    undefined field25010_0xe389;
    undefined field25011_0xe38a;
    undefined field25012_0xe38b;
    undefined field25013_0xe38c;
    undefined field25014_0xe38d;
    undefined field25015_0xe38e;
    undefined field25016_0xe38f;
    undefined field25017_0xe390;
    undefined field25018_0xe391;
    undefined field25019_0xe392;
    undefined field25020_0xe393;
    undefined field25021_0xe394;
    undefined field25022_0xe395;
    undefined field25023_0xe396;
    undefined field25024_0xe397;
    undefined field25025_0xe398;
    undefined field25026_0xe399;
    undefined field25027_0xe39a;
    undefined field25028_0xe39b;
    undefined field25029_0xe39c;
    undefined field25030_0xe39d;
    undefined field25031_0xe39e;
    undefined field25032_0xe39f;
    undefined field25033_0xe3a0;
    undefined field25034_0xe3a1;
    undefined field25035_0xe3a2;
    undefined field25036_0xe3a3;
    undefined field25037_0xe3a4;
    undefined field25038_0xe3a5;
    undefined field25039_0xe3a6;
    undefined field25040_0xe3a7;
    undefined field25041_0xe3a8;
    undefined field25042_0xe3a9;
    undefined field25043_0xe3aa;
    undefined field25044_0xe3ab;
    undefined field25045_0xe3ac;
    undefined field25046_0xe3ad;
    undefined field25047_0xe3ae;
    undefined field25048_0xe3af;
    undefined field25049_0xe3b0;
    undefined field25050_0xe3b1;
    undefined field25051_0xe3b2;
    undefined field25052_0xe3b3;
    undefined field25053_0xe3b4;
    undefined field25054_0xe3b5;
    undefined field25055_0xe3b6;
    undefined field25056_0xe3b7;
    undefined field25057_0xe3b8;
    undefined field25058_0xe3b9;
    undefined field25059_0xe3ba;
    undefined field25060_0xe3bb;
    undefined field25061_0xe3bc;
    undefined field25062_0xe3bd;
    undefined field25063_0xe3be;
    undefined field25064_0xe3bf;
    undefined field25065_0xe3c0;
    undefined field25066_0xe3c1;
    undefined field25067_0xe3c2;
    undefined field25068_0xe3c3;
    undefined field25069_0xe3c4;
    undefined field25070_0xe3c5;
    undefined field25071_0xe3c6;
    undefined field25072_0xe3c7;
    undefined field25073_0xe3c8;
    undefined field25074_0xe3c9;
    undefined field25075_0xe3ca;
    undefined field25076_0xe3cb;
    undefined field25077_0xe3cc;
    undefined field25078_0xe3cd;
    undefined field25079_0xe3ce;
    undefined field25080_0xe3cf;
    undefined field25081_0xe3d0;
    undefined field25082_0xe3d1;
    undefined field25083_0xe3d2;
    undefined field25084_0xe3d3;
    undefined field25085_0xe3d4;
    undefined field25086_0xe3d5;
    undefined field25087_0xe3d6;
    undefined field25088_0xe3d7;
    undefined field25089_0xe3d8;
    undefined field25090_0xe3d9;
    undefined field25091_0xe3da;
    undefined field25092_0xe3db;
    undefined field25093_0xe3dc;
    undefined field25094_0xe3dd;
    undefined field25095_0xe3de;
    undefined field25096_0xe3df;
    undefined field25097_0xe3e0;
    undefined field25098_0xe3e1;
    undefined field25099_0xe3e2;
    undefined field25100_0xe3e3;
    undefined field25101_0xe3e4;
    undefined field25102_0xe3e5;
    undefined field25103_0xe3e6;
    undefined field25104_0xe3e7;
    undefined field25105_0xe3e8;
    undefined field25106_0xe3e9;
    undefined field25107_0xe3ea;
    undefined field25108_0xe3eb;
    undefined field25109_0xe3ec;
    undefined field25110_0xe3ed;
    undefined field25111_0xe3ee;
    undefined field25112_0xe3ef;
    undefined field25113_0xe3f0;
    undefined field25114_0xe3f1;
    undefined field25115_0xe3f2;
    undefined field25116_0xe3f3;
    undefined field25117_0xe3f4;
    undefined field25118_0xe3f5;
    undefined field25119_0xe3f6;
    undefined field25120_0xe3f7;
    undefined field25121_0xe3f8;
    undefined field25122_0xe3f9;
    undefined field25123_0xe3fa;
    undefined field25124_0xe3fb;
    undefined field25125_0xe3fc;
    undefined field25126_0xe3fd;
    undefined field25127_0xe3fe;
    undefined field25128_0xe3ff;
    undefined field25129_0xe400;
    undefined field25130_0xe401;
    undefined field25131_0xe402;
    undefined field25132_0xe403;
    undefined field25133_0xe404;
    undefined field25134_0xe405;
    undefined field25135_0xe406;
    undefined field25136_0xe407;
    undefined field25137_0xe408;
    undefined field25138_0xe409;
    undefined field25139_0xe40a;
    undefined field25140_0xe40b;
    undefined field25141_0xe40c;
    undefined field25142_0xe40d;
    undefined field25143_0xe40e;
    undefined field25144_0xe40f;
    undefined field25145_0xe410;
    undefined field25146_0xe411;
    undefined field25147_0xe412;
    undefined field25148_0xe413;
    undefined field25149_0xe414;
    undefined field25150_0xe415;
    undefined field25151_0xe416;
    undefined field25152_0xe417;
    undefined field25153_0xe418;
    undefined field25154_0xe419;
    undefined field25155_0xe41a;
    undefined field25156_0xe41b;
    undefined field25157_0xe41c;
    undefined field25158_0xe41d;
    undefined field25159_0xe41e;
    undefined field25160_0xe41f;
    undefined field25161_0xe420;
    undefined field25162_0xe421;
    undefined field25163_0xe422;
    undefined field25164_0xe423;
    undefined field25165_0xe424;
    undefined field25166_0xe425;
    undefined field25167_0xe426;
    undefined field25168_0xe427;
    undefined field25169_0xe428;
    undefined field25170_0xe429;
    undefined field25171_0xe42a;
    undefined field25172_0xe42b;
    undefined field25173_0xe42c;
    undefined field25174_0xe42d;
    undefined field25175_0xe42e;
    undefined field25176_0xe42f;
    undefined field25177_0xe430;
    undefined field25178_0xe431;
    undefined field25179_0xe432;
    undefined field25180_0xe433;
    undefined field25181_0xe434;
    undefined field25182_0xe435;
    undefined field25183_0xe436;
    undefined field25184_0xe437;
    undefined field25185_0xe438;
    undefined field25186_0xe439;
    undefined field25187_0xe43a;
    undefined field25188_0xe43b;
    undefined field25189_0xe43c;
    undefined field25190_0xe43d;
    undefined field25191_0xe43e;
    undefined field25192_0xe43f;
    undefined field25193_0xe440;
    undefined field25194_0xe441;
    undefined field25195_0xe442;
    undefined field25196_0xe443;
    undefined field25197_0xe444;
    undefined field25198_0xe445;
    undefined field25199_0xe446;
    undefined field25200_0xe447;
    undefined field25201_0xe448;
    undefined field25202_0xe449;
    undefined field25203_0xe44a;
    undefined field25204_0xe44b;
    undefined field25205_0xe44c;
    undefined field25206_0xe44d;
    undefined field25207_0xe44e;
    undefined field25208_0xe44f;
    undefined field25209_0xe450;
    undefined field25210_0xe451;
    undefined field25211_0xe452;
    undefined field25212_0xe453;
    undefined field25213_0xe454;
    undefined field25214_0xe455;
    undefined field25215_0xe456;
    undefined field25216_0xe457;
    undefined field25217_0xe458;
    undefined field25218_0xe459;
    undefined field25219_0xe45a;
    undefined field25220_0xe45b;
    undefined field25221_0xe45c;
    undefined field25222_0xe45d;
    undefined field25223_0xe45e;
    undefined field25224_0xe45f;
    undefined field25225_0xe460;
    undefined field25226_0xe461;
    undefined field25227_0xe462;
    undefined field25228_0xe463;
    undefined field25229_0xe464;
    undefined field25230_0xe465;
    undefined field25231_0xe466;
    undefined field25232_0xe467;
    undefined field25233_0xe468;
    undefined field25234_0xe469;
    undefined field25235_0xe46a;
    undefined field25236_0xe46b;
    undefined field25237_0xe46c;
    undefined field25238_0xe46d;
    undefined field25239_0xe46e;
    undefined field25240_0xe46f;
    undefined field25241_0xe470;
    undefined field25242_0xe471;
    undefined field25243_0xe472;
    undefined field25244_0xe473;
    undefined field25245_0xe474;
    undefined field25246_0xe475;
    undefined field25247_0xe476;
    undefined field25248_0xe477;
    undefined field25249_0xe478;
    undefined field25250_0xe479;
    undefined field25251_0xe47a;
    undefined field25252_0xe47b;
    undefined field25253_0xe47c;
    undefined field25254_0xe47d;
    undefined field25255_0xe47e;
    undefined field25256_0xe47f;
    undefined field25257_0xe480;
    undefined field25258_0xe481;
    undefined field25259_0xe482;
    undefined field25260_0xe483;
    undefined field25261_0xe484;
    undefined field25262_0xe485;
    undefined field25263_0xe486;
    undefined field25264_0xe487;
    undefined field25265_0xe488;
    undefined field25266_0xe489;
    undefined field25267_0xe48a;
    undefined field25268_0xe48b;
    undefined field25269_0xe48c;
    undefined field25270_0xe48d;
    undefined field25271_0xe48e;
    undefined field25272_0xe48f;
    undefined field25273_0xe490;
    undefined field25274_0xe491;
    undefined field25275_0xe492;
    undefined field25276_0xe493;
    undefined field25277_0xe494;
    undefined field25278_0xe495;
    undefined field25279_0xe496;
    undefined field25280_0xe497;
    undefined field25281_0xe498;
    undefined field25282_0xe499;
    undefined field25283_0xe49a;
    undefined field25284_0xe49b;
    undefined field25285_0xe49c;
    undefined field25286_0xe49d;
    undefined field25287_0xe49e;
    undefined field25288_0xe49f;
    undefined field25289_0xe4a0;
    undefined field25290_0xe4a1;
    undefined field25291_0xe4a2;
    undefined field25292_0xe4a3;
    undefined field25293_0xe4a4;
    undefined field25294_0xe4a5;
    undefined field25295_0xe4a6;
    undefined field25296_0xe4a7;
    undefined field25297_0xe4a8;
    undefined field25298_0xe4a9;
    undefined field25299_0xe4aa;
    undefined field25300_0xe4ab;
    undefined field25301_0xe4ac;
    undefined field25302_0xe4ad;
    undefined field25303_0xe4ae;
    undefined field25304_0xe4af;
    undefined field25305_0xe4b0;
    undefined field25306_0xe4b1;
    undefined field25307_0xe4b2;
    undefined field25308_0xe4b3;
    undefined field25309_0xe4b4;
    undefined field25310_0xe4b5;
    undefined field25311_0xe4b6;
    undefined field25312_0xe4b7;
    undefined field25313_0xe4b8;
    undefined field25314_0xe4b9;
    undefined field25315_0xe4ba;
    undefined field25316_0xe4bb;
    undefined field25317_0xe4bc;
    undefined field25318_0xe4bd;
    undefined field25319_0xe4be;
    undefined field25320_0xe4bf;
    undefined field25321_0xe4c0;
    undefined field25322_0xe4c1;
    undefined field25323_0xe4c2;
    undefined field25324_0xe4c3;
    undefined field25325_0xe4c4;
    undefined field25326_0xe4c5;
    undefined field25327_0xe4c6;
    undefined field25328_0xe4c7;
    undefined field25329_0xe4c8;
    undefined field25330_0xe4c9;
    undefined field25331_0xe4ca;
    undefined field25332_0xe4cb;
    undefined field25333_0xe4cc;
    undefined field25334_0xe4cd;
    undefined field25335_0xe4ce;
    undefined field25336_0xe4cf;
    undefined field25337_0xe4d0;
    undefined field25338_0xe4d1;
    undefined field25339_0xe4d2;
    undefined field25340_0xe4d3;
    undefined field25341_0xe4d4;
    undefined field25342_0xe4d5;
    undefined field25343_0xe4d6;
    undefined field25344_0xe4d7;
    undefined field25345_0xe4d8;
    undefined field25346_0xe4d9;
    undefined field25347_0xe4da;
    undefined field25348_0xe4db;
    undefined field25349_0xe4dc;
    undefined field25350_0xe4dd;
    undefined field25351_0xe4de;
    undefined field25352_0xe4df;
    undefined field25353_0xe4e0;
    undefined field25354_0xe4e1;
    undefined field25355_0xe4e2;
    undefined field25356_0xe4e3;
    undefined field25357_0xe4e4;
    undefined field25358_0xe4e5;
    undefined field25359_0xe4e6;
    undefined field25360_0xe4e7;
    undefined field25361_0xe4e8;
    undefined field25362_0xe4e9;
    undefined field25363_0xe4ea;
    undefined field25364_0xe4eb;
    undefined field25365_0xe4ec;
    undefined field25366_0xe4ed;
    undefined field25367_0xe4ee;
    undefined field25368_0xe4ef;
    undefined field25369_0xe4f0;
    undefined field25370_0xe4f1;
    undefined field25371_0xe4f2;
    undefined field25372_0xe4f3;
    undefined field25373_0xe4f4;
    undefined field25374_0xe4f5;
    undefined field25375_0xe4f6;
    undefined field25376_0xe4f7;
    undefined field25377_0xe4f8;
    undefined field25378_0xe4f9;
    undefined field25379_0xe4fa;
    undefined field25380_0xe4fb;
    undefined field25381_0xe4fc;
    undefined field25382_0xe4fd;
    undefined field25383_0xe4fe;
    undefined field25384_0xe4ff;
    undefined field25385_0xe500;
    undefined field25386_0xe501;
    undefined field25387_0xe502;
    undefined field25388_0xe503;
    undefined field25389_0xe504;
    undefined field25390_0xe505;
    undefined field25391_0xe506;
    undefined field25392_0xe507;
    undefined field25393_0xe508;
    undefined field25394_0xe509;
    undefined field25395_0xe50a;
    undefined field25396_0xe50b;
    undefined field25397_0xe50c;
    undefined field25398_0xe50d;
    undefined field25399_0xe50e;
    undefined field25400_0xe50f;
    undefined field25401_0xe510;
    undefined field25402_0xe511;
    undefined field25403_0xe512;
    undefined field25404_0xe513;
    undefined field25405_0xe514;
    undefined field25406_0xe515;
    undefined field25407_0xe516;
    undefined field25408_0xe517;
    undefined field25409_0xe518;
    undefined field25410_0xe519;
    undefined field25411_0xe51a;
    undefined field25412_0xe51b;
    undefined field25413_0xe51c;
    undefined field25414_0xe51d;
    undefined field25415_0xe51e;
    undefined field25416_0xe51f;
    undefined field25417_0xe520;
    undefined field25418_0xe521;
    undefined field25419_0xe522;
    undefined field25420_0xe523;
    undefined field25421_0xe524;
    undefined field25422_0xe525;
    undefined field25423_0xe526;
    undefined field25424_0xe527;
    undefined field25425_0xe528;
    undefined field25426_0xe529;
    undefined field25427_0xe52a;
    undefined field25428_0xe52b;
    undefined field25429_0xe52c;
    undefined field25430_0xe52d;
    undefined field25431_0xe52e;
    undefined field25432_0xe52f;
    undefined field25433_0xe530;
    undefined field25434_0xe531;
    undefined field25435_0xe532;
    undefined field25436_0xe533;
    undefined field25437_0xe534;
    undefined field25438_0xe535;
    undefined field25439_0xe536;
    undefined field25440_0xe537;
    undefined field25441_0xe538;
    undefined field25442_0xe539;
    undefined field25443_0xe53a;
    undefined field25444_0xe53b;
    undefined field25445_0xe53c;
    undefined field25446_0xe53d;
    undefined field25447_0xe53e;
    undefined field25448_0xe53f;
    undefined field25449_0xe540;
    undefined field25450_0xe541;
    undefined field25451_0xe542;
    undefined field25452_0xe543;
    undefined field25453_0xe544;
    undefined field25454_0xe545;
    undefined field25455_0xe546;
    undefined field25456_0xe547;
    undefined field25457_0xe548;
    undefined field25458_0xe549;
    undefined field25459_0xe54a;
    undefined field25460_0xe54b;
    undefined field25461_0xe54c;
    undefined field25462_0xe54d;
    undefined field25463_0xe54e;
    undefined field25464_0xe54f;
    undefined field25465_0xe550;
    undefined field25466_0xe551;
    undefined field25467_0xe552;
    undefined field25468_0xe553;
    undefined field25469_0xe554;
    undefined field25470_0xe555;
    undefined field25471_0xe556;
    undefined field25472_0xe557;
    undefined field25473_0xe558;
    undefined field25474_0xe559;
    undefined field25475_0xe55a;
    undefined field25476_0xe55b;
    undefined field25477_0xe55c;
    undefined field25478_0xe55d;
    undefined field25479_0xe55e;
    undefined field25480_0xe55f;
    undefined field25481_0xe560;
    undefined field25482_0xe561;
    undefined field25483_0xe562;
    undefined field25484_0xe563;
    undefined field25485_0xe564;
    undefined field25486_0xe565;
    undefined field25487_0xe566;
    undefined field25488_0xe567;
    undefined field25489_0xe568;
    undefined field25490_0xe569;
    undefined field25491_0xe56a;
    undefined field25492_0xe56b;
    undefined field25493_0xe56c;
    undefined field25494_0xe56d;
    undefined field25495_0xe56e;
    undefined field25496_0xe56f;
    undefined field25497_0xe570;
    undefined field25498_0xe571;
    undefined field25499_0xe572;
    undefined field25500_0xe573;
    undefined field25501_0xe574;
    undefined field25502_0xe575;
    undefined field25503_0xe576;
    undefined field25504_0xe577;
    undefined field25505_0xe578;
    undefined field25506_0xe579;
    undefined field25507_0xe57a;
    undefined field25508_0xe57b;
    undefined field25509_0xe57c;
    undefined field25510_0xe57d;
    undefined field25511_0xe57e;
    undefined field25512_0xe57f;
    undefined field25513_0xe580;
    undefined field25514_0xe581;
    undefined field25515_0xe582;
    undefined field25516_0xe583;
    undefined field25517_0xe584;
    undefined field25518_0xe585;
    undefined field25519_0xe586;
    undefined field25520_0xe587;
    undefined field25521_0xe588;
    undefined field25522_0xe589;
    undefined field25523_0xe58a;
    undefined field25524_0xe58b;
    undefined field25525_0xe58c;
    undefined field25526_0xe58d;
    undefined field25527_0xe58e;
    undefined field25528_0xe58f;
    undefined field25529_0xe590;
    undefined field25530_0xe591;
    undefined field25531_0xe592;
    undefined field25532_0xe593;
    undefined field25533_0xe594;
    undefined field25534_0xe595;
    undefined field25535_0xe596;
    undefined field25536_0xe597;
    undefined field25537_0xe598;
    undefined field25538_0xe599;
    undefined field25539_0xe59a;
    undefined field25540_0xe59b;
    undefined field25541_0xe59c;
    undefined field25542_0xe59d;
    undefined field25543_0xe59e;
    undefined field25544_0xe59f;
    undefined field25545_0xe5a0;
    undefined field25546_0xe5a1;
    undefined field25547_0xe5a2;
    undefined field25548_0xe5a3;
    undefined field25549_0xe5a4;
    undefined field25550_0xe5a5;
    undefined field25551_0xe5a6;
    undefined field25552_0xe5a7;
    undefined field25553_0xe5a8;
    undefined field25554_0xe5a9;
    undefined field25555_0xe5aa;
    undefined field25556_0xe5ab;
    undefined field25557_0xe5ac;
    undefined field25558_0xe5ad;
    undefined field25559_0xe5ae;
    undefined field25560_0xe5af;
    undefined field25561_0xe5b0;
    undefined field25562_0xe5b1;
    undefined field25563_0xe5b2;
    undefined field25564_0xe5b3;
    undefined field25565_0xe5b4;
    undefined field25566_0xe5b5;
    undefined field25567_0xe5b6;
    undefined field25568_0xe5b7;
    undefined field25569_0xe5b8;
    undefined field25570_0xe5b9;
    undefined field25571_0xe5ba;
    undefined field25572_0xe5bb;
    undefined field25573_0xe5bc;
    undefined field25574_0xe5bd;
    undefined field25575_0xe5be;
    undefined field25576_0xe5bf;
    undefined field25577_0xe5c0;
    undefined field25578_0xe5c1;
    undefined field25579_0xe5c2;
    undefined field25580_0xe5c3;
    undefined field25581_0xe5c4;
    undefined field25582_0xe5c5;
    undefined field25583_0xe5c6;
    undefined field25584_0xe5c7;
    undefined field25585_0xe5c8;
    undefined field25586_0xe5c9;
    undefined field25587_0xe5ca;
    undefined field25588_0xe5cb;
    undefined field25589_0xe5cc;
    undefined field25590_0xe5cd;
    undefined field25591_0xe5ce;
    undefined field25592_0xe5cf;
    undefined field25593_0xe5d0;
    undefined field25594_0xe5d1;
    undefined field25595_0xe5d2;
    undefined field25596_0xe5d3;
    undefined field25597_0xe5d4;
    undefined field25598_0xe5d5;
    undefined field25599_0xe5d6;
    undefined field25600_0xe5d7;
    undefined field25601_0xe5d8;
    undefined field25602_0xe5d9;
    undefined field25603_0xe5da;
    undefined field25604_0xe5db;
    undefined field25605_0xe5dc;
    undefined field25606_0xe5dd;
    undefined field25607_0xe5de;
    undefined field25608_0xe5df;
    undefined field25609_0xe5e0;
    undefined field25610_0xe5e1;
    undefined field25611_0xe5e2;
    undefined field25612_0xe5e3;
    undefined field25613_0xe5e4;
    undefined field25614_0xe5e5;
    undefined field25615_0xe5e6;
    undefined field25616_0xe5e7;
    undefined field25617_0xe5e8;
    undefined field25618_0xe5e9;
    undefined field25619_0xe5ea;
    undefined field25620_0xe5eb;
    undefined field25621_0xe5ec;
    undefined field25622_0xe5ed;
    undefined field25623_0xe5ee;
    undefined field25624_0xe5ef;
    undefined field25625_0xe5f0;
    undefined field25626_0xe5f1;
    undefined field25627_0xe5f2;
    undefined field25628_0xe5f3;
    undefined field25629_0xe5f4;
    undefined field25630_0xe5f5;
    undefined field25631_0xe5f6;
    undefined field25632_0xe5f7;
    undefined field25633_0xe5f8;
    undefined field25634_0xe5f9;
    undefined field25635_0xe5fa;
    undefined field25636_0xe5fb;
    undefined field25637_0xe5fc;
    undefined field25638_0xe5fd;
    undefined field25639_0xe5fe;
    undefined field25640_0xe5ff;
    undefined field25641_0xe600;
    undefined field25642_0xe601;
    undefined field25643_0xe602;
    undefined field25644_0xe603;
    undefined field25645_0xe604;
    undefined field25646_0xe605;
    undefined field25647_0xe606;
    undefined field25648_0xe607;
    undefined field25649_0xe608;
    undefined field25650_0xe609;
    undefined field25651_0xe60a;
    undefined field25652_0xe60b;
    undefined field25653_0xe60c;
    undefined field25654_0xe60d;
    undefined field25655_0xe60e;
    undefined field25656_0xe60f;
    undefined field25657_0xe610;
    undefined field25658_0xe611;
    undefined field25659_0xe612;
    undefined field25660_0xe613;
    undefined field25661_0xe614;
    undefined field25662_0xe615;
    undefined field25663_0xe616;
    undefined field25664_0xe617;
    undefined field25665_0xe618;
    undefined field25666_0xe619;
    undefined field25667_0xe61a;
    undefined field25668_0xe61b;
    undefined field25669_0xe61c;
    undefined field25670_0xe61d;
    undefined field25671_0xe61e;
    undefined field25672_0xe61f;
    undefined field25673_0xe620;
    undefined field25674_0xe621;
    undefined field25675_0xe622;
    undefined field25676_0xe623;
    undefined field25677_0xe624;
    undefined field25678_0xe625;
    undefined field25679_0xe626;
    undefined field25680_0xe627;
    undefined field25681_0xe628;
    undefined field25682_0xe629;
    undefined field25683_0xe62a;
    undefined field25684_0xe62b;
    undefined field25685_0xe62c;
    undefined field25686_0xe62d;
    undefined field25687_0xe62e;
    undefined field25688_0xe62f;
    undefined field25689_0xe630;
    undefined field25690_0xe631;
    undefined field25691_0xe632;
    undefined field25692_0xe633;
    undefined field25693_0xe634;
    undefined field25694_0xe635;
    undefined field25695_0xe636;
    undefined field25696_0xe637;
    undefined field25697_0xe638;
    undefined field25698_0xe639;
    undefined field25699_0xe63a;
    undefined field25700_0xe63b;
    undefined field25701_0xe63c;
    undefined field25702_0xe63d;
    undefined field25703_0xe63e;
    undefined field25704_0xe63f;
    undefined field25705_0xe640;
    undefined field25706_0xe641;
    undefined field25707_0xe642;
    undefined field25708_0xe643;
    undefined field25709_0xe644;
    undefined field25710_0xe645;
    undefined field25711_0xe646;
    undefined field25712_0xe647;
    undefined field25713_0xe648;
    undefined field25714_0xe649;
    undefined field25715_0xe64a;
    undefined field25716_0xe64b;
    undefined field25717_0xe64c;
    undefined field25718_0xe64d;
    undefined field25719_0xe64e;
    undefined field25720_0xe64f;
    undefined field25721_0xe650;
    undefined field25722_0xe651;
    undefined field25723_0xe652;
    undefined field25724_0xe653;
    undefined field25725_0xe654;
    undefined field25726_0xe655;
    undefined field25727_0xe656;
    undefined field25728_0xe657;
    undefined field25729_0xe658;
    undefined field25730_0xe659;
    undefined field25731_0xe65a;
    undefined field25732_0xe65b;
    undefined field25733_0xe65c;
    undefined field25734_0xe65d;
    undefined field25735_0xe65e;
    undefined field25736_0xe65f;
    undefined field25737_0xe660;
    undefined field25738_0xe661;
    undefined field25739_0xe662;
    undefined field25740_0xe663;
    undefined field25741_0xe664;
    undefined field25742_0xe665;
    undefined field25743_0xe666;
    undefined field25744_0xe667;
    undefined field25745_0xe668;
    undefined field25746_0xe669;
    undefined field25747_0xe66a;
    undefined field25748_0xe66b;
    undefined field25749_0xe66c;
    undefined field25750_0xe66d;
    undefined field25751_0xe66e;
    undefined field25752_0xe66f;
    undefined field25753_0xe670;
    undefined field25754_0xe671;
    undefined field25755_0xe672;
    undefined field25756_0xe673;
    undefined field25757_0xe674;
    undefined field25758_0xe675;
    undefined field25759_0xe676;
    undefined field25760_0xe677;
    undefined field25761_0xe678;
    undefined field25762_0xe679;
    undefined field25763_0xe67a;
    undefined field25764_0xe67b;
    undefined field25765_0xe67c;
    undefined field25766_0xe67d;
    undefined field25767_0xe67e;
    undefined field25768_0xe67f;
    undefined field25769_0xe680;
    undefined field25770_0xe681;
    undefined field25771_0xe682;
    undefined field25772_0xe683;
    undefined field25773_0xe684;
    undefined field25774_0xe685;
    undefined field25775_0xe686;
    undefined field25776_0xe687;
    undefined field25777_0xe688;
    undefined field25778_0xe689;
    undefined field25779_0xe68a;
    undefined field25780_0xe68b;
    undefined field25781_0xe68c;
    undefined field25782_0xe68d;
    undefined field25783_0xe68e;
    undefined field25784_0xe68f;
    undefined field25785_0xe690;
    undefined field25786_0xe691;
    undefined field25787_0xe692;
    undefined field25788_0xe693;
    undefined field25789_0xe694;
    undefined field25790_0xe695;
    undefined field25791_0xe696;
    undefined field25792_0xe697;
    undefined field25793_0xe698;
    undefined field25794_0xe699;
    undefined field25795_0xe69a;
    undefined field25796_0xe69b;
    undefined field25797_0xe69c;
    undefined field25798_0xe69d;
    undefined field25799_0xe69e;
    undefined field25800_0xe69f;
    undefined field25801_0xe6a0;
    undefined field25802_0xe6a1;
    undefined field25803_0xe6a2;
    undefined field25804_0xe6a3;
    undefined field25805_0xe6a4;
    undefined field25806_0xe6a5;
    undefined field25807_0xe6a6;
    undefined field25808_0xe6a7;
    undefined field25809_0xe6a8;
    undefined field25810_0xe6a9;
    undefined field25811_0xe6aa;
    undefined field25812_0xe6ab;
    undefined field25813_0xe6ac;
    undefined field25814_0xe6ad;
    undefined field25815_0xe6ae;
    undefined field25816_0xe6af;
    undefined field25817_0xe6b0;
    undefined field25818_0xe6b1;
    undefined field25819_0xe6b2;
    undefined field25820_0xe6b3;
    undefined field25821_0xe6b4;
    undefined field25822_0xe6b5;
    undefined field25823_0xe6b6;
    undefined field25824_0xe6b7;
    undefined field25825_0xe6b8;
    undefined field25826_0xe6b9;
    undefined field25827_0xe6ba;
    undefined field25828_0xe6bb;
    undefined field25829_0xe6bc;
    undefined field25830_0xe6bd;
    undefined field25831_0xe6be;
    undefined field25832_0xe6bf;
    undefined field25833_0xe6c0;
    undefined field25834_0xe6c1;
    undefined field25835_0xe6c2;
    undefined field25836_0xe6c3;
    undefined field25837_0xe6c4;
    undefined field25838_0xe6c5;
    undefined field25839_0xe6c6;
    undefined field25840_0xe6c7;
    undefined field25841_0xe6c8;
    undefined field25842_0xe6c9;
    undefined field25843_0xe6ca;
    undefined field25844_0xe6cb;
    undefined field25845_0xe6cc;
    undefined field25846_0xe6cd;
    undefined field25847_0xe6ce;
    undefined field25848_0xe6cf;
    undefined field25849_0xe6d0;
    undefined field25850_0xe6d1;
    undefined field25851_0xe6d2;
    undefined field25852_0xe6d3;
    undefined field25853_0xe6d4;
    undefined field25854_0xe6d5;
    undefined field25855_0xe6d6;
    undefined field25856_0xe6d7;
    undefined field25857_0xe6d8;
    undefined field25858_0xe6d9;
    undefined field25859_0xe6da;
    undefined field25860_0xe6db;
    undefined field25861_0xe6dc;
    undefined field25862_0xe6dd;
    undefined field25863_0xe6de;
    undefined field25864_0xe6df;
    undefined field25865_0xe6e0;
    undefined field25866_0xe6e1;
    undefined field25867_0xe6e2;
    undefined field25868_0xe6e3;
    undefined field25869_0xe6e4;
    undefined field25870_0xe6e5;
    undefined field25871_0xe6e6;
    undefined field25872_0xe6e7;
    undefined field25873_0xe6e8;
    undefined field25874_0xe6e9;
    undefined field25875_0xe6ea;
    undefined field25876_0xe6eb;
    undefined field25877_0xe6ec;
    undefined field25878_0xe6ed;
    undefined field25879_0xe6ee;
    undefined field25880_0xe6ef;
    undefined field25881_0xe6f0;
    undefined field25882_0xe6f1;
    undefined field25883_0xe6f2;
    undefined field25884_0xe6f3;
    undefined field25885_0xe6f4;
    undefined field25886_0xe6f5;
    undefined field25887_0xe6f6;
    undefined field25888_0xe6f7;
    undefined field25889_0xe6f8;
    undefined field25890_0xe6f9;
    undefined field25891_0xe6fa;
    undefined field25892_0xe6fb;
    undefined field25893_0xe6fc;
    undefined field25894_0xe6fd;
    undefined field25895_0xe6fe;
    undefined field25896_0xe6ff;
    undefined field25897_0xe700;
    undefined field25898_0xe701;
    undefined field25899_0xe702;
    undefined field25900_0xe703;
    undefined field25901_0xe704;
    undefined field25902_0xe705;
    undefined field25903_0xe706;
    undefined field25904_0xe707;
    undefined field25905_0xe708;
    undefined field25906_0xe709;
    undefined field25907_0xe70a;
    undefined field25908_0xe70b;
    undefined field25909_0xe70c;
    undefined field25910_0xe70d;
    undefined field25911_0xe70e;
    undefined field25912_0xe70f;
    undefined field25913_0xe710;
    undefined field25914_0xe711;
    undefined field25915_0xe712;
    undefined field25916_0xe713;
    undefined field25917_0xe714;
    undefined field25918_0xe715;
    undefined field25919_0xe716;
    undefined field25920_0xe717;
    undefined field25921_0xe718;
    undefined field25922_0xe719;
    undefined field25923_0xe71a;
    undefined field25924_0xe71b;
    undefined field25925_0xe71c;
    undefined field25926_0xe71d;
    undefined field25927_0xe71e;
    undefined field25928_0xe71f;
    undefined field25929_0xe720;
    undefined field25930_0xe721;
    undefined field25931_0xe722;
    undefined field25932_0xe723;
    undefined field25933_0xe724;
    undefined field25934_0xe725;
    undefined field25935_0xe726;
    undefined field25936_0xe727;
    undefined field25937_0xe728;
    undefined field25938_0xe729;
    undefined field25939_0xe72a;
    undefined field25940_0xe72b;
    undefined field25941_0xe72c;
    undefined field25942_0xe72d;
    undefined field25943_0xe72e;
    undefined field25944_0xe72f;
    undefined field25945_0xe730;
    undefined field25946_0xe731;
    undefined field25947_0xe732;
    undefined field25948_0xe733;
    undefined field25949_0xe734;
    undefined field25950_0xe735;
    undefined field25951_0xe736;
    undefined field25952_0xe737;
    undefined field25953_0xe738;
    undefined field25954_0xe739;
    undefined field25955_0xe73a;
    undefined field25956_0xe73b;
    undefined field25957_0xe73c;
    undefined field25958_0xe73d;
    undefined field25959_0xe73e;
    undefined field25960_0xe73f;
    undefined field25961_0xe740;
    undefined field25962_0xe741;
    undefined field25963_0xe742;
    undefined field25964_0xe743;
    undefined field25965_0xe744;
    undefined field25966_0xe745;
    undefined field25967_0xe746;
    undefined field25968_0xe747;
    undefined field25969_0xe748;
    undefined field25970_0xe749;
    undefined field25971_0xe74a;
    undefined field25972_0xe74b;
    undefined field25973_0xe74c;
    undefined field25974_0xe74d;
    undefined field25975_0xe74e;
    undefined field25976_0xe74f;
    undefined field25977_0xe750;
    undefined field25978_0xe751;
    undefined field25979_0xe752;
    undefined field25980_0xe753;
    undefined field25981_0xe754;
    undefined field25982_0xe755;
    undefined field25983_0xe756;
    undefined field25984_0xe757;
    undefined field25985_0xe758;
    undefined field25986_0xe759;
    undefined field25987_0xe75a;
    undefined field25988_0xe75b;
    undefined field25989_0xe75c;
    undefined field25990_0xe75d;
    undefined field25991_0xe75e;
    undefined field25992_0xe75f;
    undefined field25993_0xe760;
    undefined field25994_0xe761;
    undefined field25995_0xe762;
    undefined field25996_0xe763;
    undefined field25997_0xe764;
    undefined field25998_0xe765;
    undefined field25999_0xe766;
    undefined field26000_0xe767;
    undefined field26001_0xe768;
    undefined field26002_0xe769;
    undefined field26003_0xe76a;
    undefined field26004_0xe76b;
    undefined field26005_0xe76c;
    undefined field26006_0xe76d;
    undefined field26007_0xe76e;
    undefined field26008_0xe76f;
    undefined field26009_0xe770;
    undefined field26010_0xe771;
    undefined field26011_0xe772;
    undefined field26012_0xe773;
    undefined field26013_0xe774;
    undefined field26014_0xe775;
    undefined field26015_0xe776;
    undefined field26016_0xe777;
    undefined field26017_0xe778;
    undefined field26018_0xe779;
    undefined field26019_0xe77a;
    undefined field26020_0xe77b;
    undefined field26021_0xe77c;
    undefined field26022_0xe77d;
    undefined field26023_0xe77e;
    undefined field26024_0xe77f;
    undefined field26025_0xe780;
    undefined field26026_0xe781;
    undefined field26027_0xe782;
    undefined field26028_0xe783;
    undefined field26029_0xe784;
    undefined field26030_0xe785;
    undefined field26031_0xe786;
    undefined field26032_0xe787;
    undefined field26033_0xe788;
    undefined field26034_0xe789;
    undefined field26035_0xe78a;
    undefined field26036_0xe78b;
    undefined field26037_0xe78c;
    undefined field26038_0xe78d;
    undefined field26039_0xe78e;
    undefined field26040_0xe78f;
    undefined field26041_0xe790;
    undefined field26042_0xe791;
    undefined field26043_0xe792;
    undefined field26044_0xe793;
    undefined field26045_0xe794;
    undefined field26046_0xe795;
    undefined field26047_0xe796;
    undefined field26048_0xe797;
    undefined field26049_0xe798;
    undefined field26050_0xe799;
    undefined field26051_0xe79a;
    undefined field26052_0xe79b;
    undefined field26053_0xe79c;
    undefined field26054_0xe79d;
    undefined field26055_0xe79e;
    undefined field26056_0xe79f;
    undefined field26057_0xe7a0;
    undefined field26058_0xe7a1;
    undefined field26059_0xe7a2;
    undefined field26060_0xe7a3;
    undefined field26061_0xe7a4;
    undefined field26062_0xe7a5;
    undefined field26063_0xe7a6;
    undefined field26064_0xe7a7;
    undefined field26065_0xe7a8;
    undefined field26066_0xe7a9;
    undefined field26067_0xe7aa;
    undefined field26068_0xe7ab;
    undefined field26069_0xe7ac;
    undefined field26070_0xe7ad;
    undefined field26071_0xe7ae;
    undefined field26072_0xe7af;
    undefined field26073_0xe7b0;
    undefined field26074_0xe7b1;
    undefined field26075_0xe7b2;
    undefined field26076_0xe7b3;
    undefined field26077_0xe7b4;
    undefined field26078_0xe7b5;
    undefined field26079_0xe7b6;
    undefined field26080_0xe7b7;
    undefined field26081_0xe7b8;
    undefined field26082_0xe7b9;
    undefined field26083_0xe7ba;
    undefined field26084_0xe7bb;
    undefined field26085_0xe7bc;
    undefined field26086_0xe7bd;
    undefined field26087_0xe7be;
    undefined field26088_0xe7bf;
    undefined field26089_0xe7c0;
    undefined field26090_0xe7c1;
    undefined field26091_0xe7c2;
    undefined field26092_0xe7c3;
    undefined field26093_0xe7c4;
    undefined field26094_0xe7c5;
    undefined field26095_0xe7c6;
    undefined field26096_0xe7c7;
    undefined field26097_0xe7c8;
    undefined field26098_0xe7c9;
    undefined field26099_0xe7ca;
    undefined field26100_0xe7cb;
    undefined field26101_0xe7cc;
    undefined field26102_0xe7cd;
    undefined field26103_0xe7ce;
    undefined field26104_0xe7cf;
    undefined field26105_0xe7d0;
    undefined field26106_0xe7d1;
    undefined field26107_0xe7d2;
    undefined field26108_0xe7d3;
    undefined field26109_0xe7d4;
    undefined field26110_0xe7d5;
    undefined field26111_0xe7d6;
    undefined field26112_0xe7d7;
    undefined field26113_0xe7d8;
    undefined field26114_0xe7d9;
    undefined field26115_0xe7da;
    undefined field26116_0xe7db;
    undefined field26117_0xe7dc;
    undefined field26118_0xe7dd;
    undefined field26119_0xe7de;
    undefined field26120_0xe7df;
    undefined field26121_0xe7e0;
    undefined field26122_0xe7e1;
    undefined field26123_0xe7e2;
    undefined field26124_0xe7e3;
    undefined field26125_0xe7e4;
    undefined field26126_0xe7e5;
    undefined field26127_0xe7e6;
    undefined field26128_0xe7e7;
    undefined field26129_0xe7e8;
    undefined field26130_0xe7e9;
    undefined field26131_0xe7ea;
    undefined field26132_0xe7eb;
    undefined field26133_0xe7ec;
    undefined field26134_0xe7ed;
    undefined field26135_0xe7ee;
    undefined field26136_0xe7ef;
    undefined field26137_0xe7f0;
    undefined field26138_0xe7f1;
    undefined field26139_0xe7f2;
    undefined field26140_0xe7f3;
    undefined field26141_0xe7f4;
    undefined field26142_0xe7f5;
    undefined field26143_0xe7f6;
    undefined field26144_0xe7f7;
    undefined field26145_0xe7f8;
    undefined field26146_0xe7f9;
    undefined field26147_0xe7fa;
    undefined field26148_0xe7fb;
    undefined field26149_0xe7fc;
    undefined field26150_0xe7fd;
    undefined field26151_0xe7fe;
    undefined field26152_0xe7ff;
    undefined field26153_0xe800;
    undefined field26154_0xe801;
    undefined field26155_0xe802;
    undefined field26156_0xe803;
    undefined field26157_0xe804;
    undefined field26158_0xe805;
    undefined field26159_0xe806;
    undefined field26160_0xe807;
    undefined field26161_0xe808;
    undefined field26162_0xe809;
    undefined field26163_0xe80a;
    undefined field26164_0xe80b;
    undefined field26165_0xe80c;
    undefined field26166_0xe80d;
    undefined field26167_0xe80e;
    undefined field26168_0xe80f;
    undefined field26169_0xe810;
    undefined field26170_0xe811;
    undefined field26171_0xe812;
    undefined field26172_0xe813;
    undefined field26173_0xe814;
    undefined field26174_0xe815;
    undefined field26175_0xe816;
    undefined field26176_0xe817;
    undefined field26177_0xe818;
    undefined field26178_0xe819;
    undefined field26179_0xe81a;
    undefined field26180_0xe81b;
    undefined field26181_0xe81c;
    undefined field26182_0xe81d;
    undefined field26183_0xe81e;
    undefined field26184_0xe81f;
    undefined field26185_0xe820;
    undefined field26186_0xe821;
    undefined field26187_0xe822;
    undefined field26188_0xe823;
    undefined field26189_0xe824;
    undefined field26190_0xe825;
    undefined field26191_0xe826;
    undefined field26192_0xe827;
    undefined field26193_0xe828;
    undefined field26194_0xe829;
    undefined field26195_0xe82a;
    undefined field26196_0xe82b;
    undefined field26197_0xe82c;
    undefined field26198_0xe82d;
    undefined field26199_0xe82e;
    undefined field26200_0xe82f;
    undefined field26201_0xe830;
    undefined field26202_0xe831;
    undefined field26203_0xe832;
    undefined field26204_0xe833;
    undefined field26205_0xe834;
    undefined field26206_0xe835;
    undefined field26207_0xe836;
    undefined field26208_0xe837;
    undefined field26209_0xe838;
    undefined field26210_0xe839;
    undefined field26211_0xe83a;
    undefined field26212_0xe83b;
    undefined field26213_0xe83c;
    undefined field26214_0xe83d;
    undefined field26215_0xe83e;
    undefined field26216_0xe83f;
    undefined field26217_0xe840;
    undefined field26218_0xe841;
    undefined field26219_0xe842;
    undefined field26220_0xe843;
    undefined field26221_0xe844;
    undefined field26222_0xe845;
    undefined field26223_0xe846;
    undefined field26224_0xe847;
    undefined field26225_0xe848;
    undefined field26226_0xe849;
    undefined field26227_0xe84a;
    undefined field26228_0xe84b;
    undefined field26229_0xe84c;
    undefined field26230_0xe84d;
    undefined field26231_0xe84e;
    undefined field26232_0xe84f;
    undefined field26233_0xe850;
    undefined field26234_0xe851;
    undefined field26235_0xe852;
    undefined field26236_0xe853;
    undefined field26237_0xe854;
    undefined field26238_0xe855;
    undefined field26239_0xe856;
    undefined field26240_0xe857;
    undefined field26241_0xe858;
    undefined field26242_0xe859;
    undefined field26243_0xe85a;
    undefined field26244_0xe85b;
    undefined field26245_0xe85c;
    undefined field26246_0xe85d;
    undefined field26247_0xe85e;
    undefined field26248_0xe85f;
    undefined field26249_0xe860;
    undefined field26250_0xe861;
    undefined field26251_0xe862;
    undefined field26252_0xe863;
    undefined field26253_0xe864;
    undefined field26254_0xe865;
    undefined field26255_0xe866;
    undefined field26256_0xe867;
    undefined field26257_0xe868;
    undefined field26258_0xe869;
    undefined field26259_0xe86a;
    undefined field26260_0xe86b;
    undefined field26261_0xe86c;
    undefined field26262_0xe86d;
    undefined field26263_0xe86e;
    undefined field26264_0xe86f;
    undefined field26265_0xe870;
    undefined field26266_0xe871;
    undefined field26267_0xe872;
    undefined field26268_0xe873;
    undefined field26269_0xe874;
    undefined field26270_0xe875;
    undefined field26271_0xe876;
    undefined field26272_0xe877;
    undefined field26273_0xe878;
    undefined field26274_0xe879;
    undefined field26275_0xe87a;
    undefined field26276_0xe87b;
    undefined field26277_0xe87c;
    undefined field26278_0xe87d;
    undefined field26279_0xe87e;
    undefined field26280_0xe87f;
    undefined field26281_0xe880;
    undefined field26282_0xe881;
    undefined field26283_0xe882;
    undefined field26284_0xe883;
    undefined field26285_0xe884;
    undefined field26286_0xe885;
    undefined field26287_0xe886;
    undefined field26288_0xe887;
    undefined field26289_0xe888;
    undefined field26290_0xe889;
    undefined field26291_0xe88a;
    undefined field26292_0xe88b;
    undefined field26293_0xe88c;
    undefined field26294_0xe88d;
    undefined field26295_0xe88e;
    undefined field26296_0xe88f;
    undefined field26297_0xe890;
    undefined field26298_0xe891;
    undefined field26299_0xe892;
    undefined field26300_0xe893;
    undefined field26301_0xe894;
    undefined field26302_0xe895;
    undefined field26303_0xe896;
    undefined field26304_0xe897;
    undefined field26305_0xe898;
    undefined field26306_0xe899;
    undefined field26307_0xe89a;
    undefined field26308_0xe89b;
    undefined field26309_0xe89c;
    undefined field26310_0xe89d;
    undefined field26311_0xe89e;
    undefined field26312_0xe89f;
    undefined field26313_0xe8a0;
    undefined field26314_0xe8a1;
    undefined field26315_0xe8a2;
    undefined field26316_0xe8a3;
    undefined field26317_0xe8a4;
    undefined field26318_0xe8a5;
    undefined field26319_0xe8a6;
    undefined field26320_0xe8a7;
    undefined field26321_0xe8a8;
    undefined field26322_0xe8a9;
    undefined field26323_0xe8aa;
    undefined field26324_0xe8ab;
    undefined field26325_0xe8ac;
    undefined field26326_0xe8ad;
    undefined field26327_0xe8ae;
    undefined field26328_0xe8af;
    undefined field26329_0xe8b0;
    undefined field26330_0xe8b1;
    undefined field26331_0xe8b2;
    undefined field26332_0xe8b3;
    undefined field26333_0xe8b4;
    undefined field26334_0xe8b5;
    undefined field26335_0xe8b6;
    undefined field26336_0xe8b7;
    undefined field26337_0xe8b8;
    undefined field26338_0xe8b9;
    undefined field26339_0xe8ba;
    undefined field26340_0xe8bb;
    undefined field26341_0xe8bc;
    undefined field26342_0xe8bd;
    undefined field26343_0xe8be;
    undefined field26344_0xe8bf;
    undefined field26345_0xe8c0;
    undefined field26346_0xe8c1;
    undefined field26347_0xe8c2;
    undefined field26348_0xe8c3;
    undefined field26349_0xe8c4;
    undefined field26350_0xe8c5;
    undefined field26351_0xe8c6;
    undefined field26352_0xe8c7;
    undefined field26353_0xe8c8;
    undefined field26354_0xe8c9;
    undefined field26355_0xe8ca;
    undefined field26356_0xe8cb;
    undefined field26357_0xe8cc;
    undefined field26358_0xe8cd;
    undefined field26359_0xe8ce;
    undefined field26360_0xe8cf;
    undefined field26361_0xe8d0;
    undefined field26362_0xe8d1;
    undefined field26363_0xe8d2;
    undefined field26364_0xe8d3;
    undefined field26365_0xe8d4;
    undefined field26366_0xe8d5;
    undefined field26367_0xe8d6;
    undefined field26368_0xe8d7;
    undefined field26369_0xe8d8;
    undefined field26370_0xe8d9;
    undefined field26371_0xe8da;
    undefined field26372_0xe8db;
    undefined field26373_0xe8dc;
    undefined field26374_0xe8dd;
    undefined field26375_0xe8de;
    undefined field26376_0xe8df;
    undefined field26377_0xe8e0;
    undefined field26378_0xe8e1;
    undefined field26379_0xe8e2;
    undefined field26380_0xe8e3;
    undefined field26381_0xe8e4;
    undefined field26382_0xe8e5;
    undefined field26383_0xe8e6;
    undefined field26384_0xe8e7;
    undefined field26385_0xe8e8;
    undefined field26386_0xe8e9;
    undefined field26387_0xe8ea;
    undefined field26388_0xe8eb;
    undefined field26389_0xe8ec;
    undefined field26390_0xe8ed;
    undefined field26391_0xe8ee;
    undefined field26392_0xe8ef;
    undefined field26393_0xe8f0;
    undefined field26394_0xe8f1;
    undefined field26395_0xe8f2;
    undefined field26396_0xe8f3;
    undefined field26397_0xe8f4;
    undefined field26398_0xe8f5;
    undefined field26399_0xe8f6;
    undefined field26400_0xe8f7;
    undefined field26401_0xe8f8;
    undefined field26402_0xe8f9;
    undefined field26403_0xe8fa;
    undefined field26404_0xe8fb;
    undefined field26405_0xe8fc;
    undefined field26406_0xe8fd;
    undefined field26407_0xe8fe;
    undefined field26408_0xe8ff;
    undefined field26409_0xe900;
    undefined field26410_0xe901;
    undefined field26411_0xe902;
    undefined field26412_0xe903;
    undefined field26413_0xe904;
    undefined field26414_0xe905;
    undefined field26415_0xe906;
    undefined field26416_0xe907;
    undefined field26417_0xe908;
    undefined field26418_0xe909;
    undefined field26419_0xe90a;
    undefined field26420_0xe90b;
    undefined field26421_0xe90c;
    undefined field26422_0xe90d;
    undefined field26423_0xe90e;
    undefined field26424_0xe90f;
    undefined field26425_0xe910;
    undefined field26426_0xe911;
    undefined field26427_0xe912;
    undefined field26428_0xe913;
    undefined field26429_0xe914;
    undefined field26430_0xe915;
    undefined field26431_0xe916;
    undefined field26432_0xe917;
    undefined field26433_0xe918;
    undefined field26434_0xe919;
    undefined field26435_0xe91a;
    undefined field26436_0xe91b;
    undefined field26437_0xe91c;
    undefined field26438_0xe91d;
    undefined field26439_0xe91e;
    undefined field26440_0xe91f;
    undefined field26441_0xe920;
    undefined field26442_0xe921;
    undefined field26443_0xe922;
    undefined field26444_0xe923;
    undefined field26445_0xe924;
    undefined field26446_0xe925;
    undefined field26447_0xe926;
    undefined field26448_0xe927;
    undefined field26449_0xe928;
    undefined field26450_0xe929;
    undefined field26451_0xe92a;
    undefined field26452_0xe92b;
    undefined field26453_0xe92c;
    undefined field26454_0xe92d;
    undefined field26455_0xe92e;
    undefined field26456_0xe92f;
    undefined field26457_0xe930;
    undefined field26458_0xe931;
    undefined field26459_0xe932;
    undefined field26460_0xe933;
    undefined field26461_0xe934;
    undefined field26462_0xe935;
    undefined field26463_0xe936;
    undefined field26464_0xe937;
    undefined field26465_0xe938;
    undefined field26466_0xe939;
    undefined field26467_0xe93a;
    undefined field26468_0xe93b;
    undefined field26469_0xe93c;
    undefined field26470_0xe93d;
    undefined field26471_0xe93e;
    undefined field26472_0xe93f;
    undefined field26473_0xe940;
    undefined field26474_0xe941;
    undefined field26475_0xe942;
    undefined field26476_0xe943;
    undefined field26477_0xe944;
    undefined field26478_0xe945;
    undefined field26479_0xe946;
    undefined field26480_0xe947;
    undefined field26481_0xe948;
    undefined field26482_0xe949;
    undefined field26483_0xe94a;
    undefined field26484_0xe94b;
    undefined field26485_0xe94c;
    undefined field26486_0xe94d;
    undefined field26487_0xe94e;
    undefined field26488_0xe94f;
    undefined field26489_0xe950;
    undefined field26490_0xe951;
    undefined field26491_0xe952;
    undefined field26492_0xe953;
    undefined field26493_0xe954;
    undefined field26494_0xe955;
    undefined field26495_0xe956;
    undefined field26496_0xe957;
    undefined field26497_0xe958;
    undefined field26498_0xe959;
    undefined field26499_0xe95a;
    undefined field26500_0xe95b;
    undefined field26501_0xe95c;
    undefined field26502_0xe95d;
    undefined field26503_0xe95e;
    undefined field26504_0xe95f;
    undefined field26505_0xe960;
    undefined field26506_0xe961;
    undefined field26507_0xe962;
    undefined field26508_0xe963;
    undefined field26509_0xe964;
    undefined field26510_0xe965;
    undefined field26511_0xe966;
    undefined field26512_0xe967;
    undefined field26513_0xe968;
    undefined field26514_0xe969;
    undefined field26515_0xe96a;
    undefined field26516_0xe96b;
    undefined field26517_0xe96c;
    undefined field26518_0xe96d;
    undefined field26519_0xe96e;
    undefined field26520_0xe96f;
    undefined field26521_0xe970;
    undefined field26522_0xe971;
    undefined field26523_0xe972;
    undefined field26524_0xe973;
    undefined field26525_0xe974;
    undefined field26526_0xe975;
    undefined field26527_0xe976;
    undefined field26528_0xe977;
    undefined field26529_0xe978;
    undefined field26530_0xe979;
    undefined field26531_0xe97a;
    undefined field26532_0xe97b;
    undefined field26533_0xe97c;
    undefined field26534_0xe97d;
    undefined field26535_0xe97e;
    undefined field26536_0xe97f;
    undefined field26537_0xe980;
    undefined field26538_0xe981;
    undefined field26539_0xe982;
    undefined field26540_0xe983;
    undefined field26541_0xe984;
    undefined field26542_0xe985;
    undefined field26543_0xe986;
    undefined field26544_0xe987;
    undefined field26545_0xe988;
    undefined field26546_0xe989;
    undefined field26547_0xe98a;
    undefined field26548_0xe98b;
    undefined field26549_0xe98c;
    undefined field26550_0xe98d;
    undefined field26551_0xe98e;
    undefined field26552_0xe98f;
    undefined field26553_0xe990;
    undefined field26554_0xe991;
    undefined field26555_0xe992;
    undefined field26556_0xe993;
    undefined field26557_0xe994;
    undefined field26558_0xe995;
    undefined field26559_0xe996;
    undefined field26560_0xe997;
    undefined field26561_0xe998;
    undefined field26562_0xe999;
    undefined field26563_0xe99a;
    undefined field26564_0xe99b;
    undefined field26565_0xe99c;
    undefined field26566_0xe99d;
    undefined field26567_0xe99e;
    undefined field26568_0xe99f;
    undefined field26569_0xe9a0;
    undefined field26570_0xe9a1;
    undefined field26571_0xe9a2;
    undefined field26572_0xe9a3;
    undefined field26573_0xe9a4;
    undefined field26574_0xe9a5;
    undefined field26575_0xe9a6;
    undefined field26576_0xe9a7;
    undefined field26577_0xe9a8;
    undefined field26578_0xe9a9;
    undefined field26579_0xe9aa;
    undefined field26580_0xe9ab;
    undefined field26581_0xe9ac;
    undefined field26582_0xe9ad;
    undefined field26583_0xe9ae;
    undefined field26584_0xe9af;
    undefined field26585_0xe9b0;
    undefined field26586_0xe9b1;
    undefined field26587_0xe9b2;
    undefined field26588_0xe9b3;
    undefined field26589_0xe9b4;
    undefined field26590_0xe9b5;
    undefined field26591_0xe9b6;
    undefined field26592_0xe9b7;
    undefined field26593_0xe9b8;
    undefined field26594_0xe9b9;
    undefined field26595_0xe9ba;
    undefined field26596_0xe9bb;
    undefined field26597_0xe9bc;
    undefined field26598_0xe9bd;
    undefined field26599_0xe9be;
    undefined field26600_0xe9bf;
    undefined field26601_0xe9c0;
    undefined field26602_0xe9c1;
    undefined field26603_0xe9c2;
    undefined field26604_0xe9c3;
    undefined field26605_0xe9c4;
    undefined field26606_0xe9c5;
    undefined field26607_0xe9c6;
    undefined field26608_0xe9c7;
    undefined field26609_0xe9c8;
    undefined field26610_0xe9c9;
    undefined field26611_0xe9ca;
    undefined field26612_0xe9cb;
    undefined field26613_0xe9cc;
    undefined field26614_0xe9cd;
    undefined field26615_0xe9ce;
    undefined field26616_0xe9cf;
    undefined field26617_0xe9d0;
    undefined field26618_0xe9d1;
    undefined field26619_0xe9d2;
    undefined field26620_0xe9d3;
    undefined field26621_0xe9d4;
    undefined field26622_0xe9d5;
    undefined field26623_0xe9d6;
    undefined field26624_0xe9d7;
    undefined field26625_0xe9d8;
    undefined field26626_0xe9d9;
    undefined field26627_0xe9da;
    undefined field26628_0xe9db;
    undefined field26629_0xe9dc;
    undefined field26630_0xe9dd;
    undefined field26631_0xe9de;
    undefined field26632_0xe9df;
    undefined field26633_0xe9e0;
    undefined field26634_0xe9e1;
    undefined field26635_0xe9e2;
    undefined field26636_0xe9e3;
    undefined field26637_0xe9e4;
    undefined field26638_0xe9e5;
    undefined field26639_0xe9e6;
    undefined field26640_0xe9e7;
    undefined field26641_0xe9e8;
    undefined field26642_0xe9e9;
    undefined field26643_0xe9ea;
    undefined field26644_0xe9eb;
    undefined field26645_0xe9ec;
    undefined field26646_0xe9ed;
    undefined field26647_0xe9ee;
    undefined field26648_0xe9ef;
    undefined field26649_0xe9f0;
    undefined field26650_0xe9f1;
    undefined field26651_0xe9f2;
    undefined field26652_0xe9f3;
    undefined field26653_0xe9f4;
    undefined field26654_0xe9f5;
    undefined field26655_0xe9f6;
    undefined field26656_0xe9f7;
    undefined field26657_0xe9f8;
    undefined field26658_0xe9f9;
    undefined field26659_0xe9fa;
    undefined field26660_0xe9fb;
    undefined field26661_0xe9fc;
    undefined field26662_0xe9fd;
    undefined field26663_0xe9fe;
    undefined field26664_0xe9ff;
    undefined field26665_0xea00;
    undefined field26666_0xea01;
    undefined field26667_0xea02;
    undefined field26668_0xea03;
    undefined field26669_0xea04;
    undefined field26670_0xea05;
    undefined field26671_0xea06;
    undefined field26672_0xea07;
    undefined field26673_0xea08;
    undefined field26674_0xea09;
    undefined field26675_0xea0a;
    undefined field26676_0xea0b;
    undefined field26677_0xea0c;
    undefined field26678_0xea0d;
    undefined field26679_0xea0e;
    undefined field26680_0xea0f;
    undefined field26681_0xea10;
    undefined field26682_0xea11;
    undefined field26683_0xea12;
    undefined field26684_0xea13;
    undefined field26685_0xea14;
    undefined field26686_0xea15;
    undefined field26687_0xea16;
    undefined field26688_0xea17;
    undefined field26689_0xea18;
    undefined field26690_0xea19;
    undefined field26691_0xea1a;
    undefined field26692_0xea1b;
    undefined field26693_0xea1c;
    undefined field26694_0xea1d;
    undefined field26695_0xea1e;
    undefined field26696_0xea1f;
    undefined field26697_0xea20;
    undefined field26698_0xea21;
    undefined field26699_0xea22;
    undefined field26700_0xea23;
    undefined field26701_0xea24;
    undefined field26702_0xea25;
    undefined field26703_0xea26;
    undefined field26704_0xea27;
    undefined field26705_0xea28;
    undefined field26706_0xea29;
    undefined field26707_0xea2a;
    undefined field26708_0xea2b;
    undefined field26709_0xea2c;
    undefined field26710_0xea2d;
    undefined field26711_0xea2e;
    undefined field26712_0xea2f;
    undefined field26713_0xea30;
    undefined field26714_0xea31;
    undefined field26715_0xea32;
    undefined field26716_0xea33;
    undefined field26717_0xea34;
    undefined field26718_0xea35;
    undefined field26719_0xea36;
    undefined field26720_0xea37;
    undefined field26721_0xea38;
    undefined field26722_0xea39;
    undefined field26723_0xea3a;
    undefined field26724_0xea3b;
    undefined field26725_0xea3c;
    undefined field26726_0xea3d;
    undefined field26727_0xea3e;
    undefined field26728_0xea3f;
    undefined field26729_0xea40;
    undefined field26730_0xea41;
    undefined field26731_0xea42;
    undefined field26732_0xea43;
    undefined field26733_0xea44;
    undefined field26734_0xea45;
    undefined field26735_0xea46;
    undefined field26736_0xea47;
    undefined field26737_0xea48;
    undefined field26738_0xea49;
    undefined field26739_0xea4a;
    undefined field26740_0xea4b;
    undefined field26741_0xea4c;
    undefined field26742_0xea4d;
    undefined field26743_0xea4e;
    undefined field26744_0xea4f;
    undefined field26745_0xea50;
    undefined field26746_0xea51;
    undefined field26747_0xea52;
    undefined field26748_0xea53;
    undefined field26749_0xea54;
    undefined field26750_0xea55;
    undefined field26751_0xea56;
    undefined field26752_0xea57;
    undefined field26753_0xea58;
    undefined field26754_0xea59;
    undefined field26755_0xea5a;
    undefined field26756_0xea5b;
    undefined field26757_0xea5c;
    undefined field26758_0xea5d;
    undefined field26759_0xea5e;
    undefined field26760_0xea5f;
    undefined field26761_0xea60;
    undefined field26762_0xea61;
    undefined field26763_0xea62;
    undefined field26764_0xea63;
    undefined field26765_0xea64;
    undefined field26766_0xea65;
    undefined field26767_0xea66;
    undefined field26768_0xea67;
    undefined field26769_0xea68;
    undefined field26770_0xea69;
    undefined field26771_0xea6a;
    undefined field26772_0xea6b;
    undefined field26773_0xea6c;
    undefined field26774_0xea6d;
    undefined field26775_0xea6e;
    undefined field26776_0xea6f;
    undefined field26777_0xea70;
    undefined field26778_0xea71;
    undefined field26779_0xea72;
    undefined field26780_0xea73;
    undefined field26781_0xea74;
    undefined field26782_0xea75;
    undefined field26783_0xea76;
    undefined field26784_0xea77;
    undefined field26785_0xea78;
    undefined field26786_0xea79;
    undefined field26787_0xea7a;
    undefined field26788_0xea7b;
    undefined field26789_0xea7c;
    undefined field26790_0xea7d;
    undefined field26791_0xea7e;
    undefined field26792_0xea7f;
    undefined field26793_0xea80;
    undefined field26794_0xea81;
    undefined field26795_0xea82;
    undefined field26796_0xea83;
    undefined field26797_0xea84;
    undefined field26798_0xea85;
    undefined field26799_0xea86;
    undefined field26800_0xea87;
    undefined field26801_0xea88;
    undefined field26802_0xea89;
    undefined field26803_0xea8a;
    undefined field26804_0xea8b;
    undefined field26805_0xea8c;
    undefined field26806_0xea8d;
    undefined field26807_0xea8e;
    undefined field26808_0xea8f;
    undefined field26809_0xea90;
    undefined field26810_0xea91;
    undefined field26811_0xea92;
    undefined field26812_0xea93;
    undefined field26813_0xea94;
    undefined field26814_0xea95;
    undefined field26815_0xea96;
    undefined field26816_0xea97;
    undefined field26817_0xea98;
    undefined field26818_0xea99;
    undefined field26819_0xea9a;
    undefined field26820_0xea9b;
    undefined field26821_0xea9c;
    undefined field26822_0xea9d;
    undefined field26823_0xea9e;
    undefined field26824_0xea9f;
    undefined field26825_0xeaa0;
    undefined field26826_0xeaa1;
    undefined field26827_0xeaa2;
    undefined field26828_0xeaa3;
    undefined field26829_0xeaa4;
    undefined field26830_0xeaa5;
    undefined field26831_0xeaa6;
    undefined field26832_0xeaa7;
    undefined field26833_0xeaa8;
    undefined field26834_0xeaa9;
    undefined field26835_0xeaaa;
    undefined field26836_0xeaab;
    undefined field26837_0xeaac;
    undefined field26838_0xeaad;
    undefined field26839_0xeaae;
    undefined field26840_0xeaaf;
    undefined field26841_0xeab0;
    undefined field26842_0xeab1;
    undefined field26843_0xeab2;
    undefined field26844_0xeab3;
    undefined field26845_0xeab4;
    undefined field26846_0xeab5;
    undefined field26847_0xeab6;
    undefined field26848_0xeab7;
    undefined field26849_0xeab8;
    undefined field26850_0xeab9;
    undefined field26851_0xeaba;
    undefined field26852_0xeabb;
    undefined field26853_0xeabc;
    undefined field26854_0xeabd;
    undefined field26855_0xeabe;
    undefined field26856_0xeabf;
    undefined field26857_0xeac0;
    undefined field26858_0xeac1;
    undefined field26859_0xeac2;
    undefined field26860_0xeac3;
    undefined field26861_0xeac4;
    undefined field26862_0xeac5;
    undefined field26863_0xeac6;
    undefined field26864_0xeac7;
    undefined field26865_0xeac8;
    undefined field26866_0xeac9;
    undefined field26867_0xeaca;
    undefined field26868_0xeacb;
    undefined field26869_0xeacc;
    undefined field26870_0xeacd;
    undefined field26871_0xeace;
    undefined field26872_0xeacf;
    undefined field26873_0xead0;
    undefined field26874_0xead1;
    undefined field26875_0xead2;
    undefined field26876_0xead3;
    undefined field26877_0xead4;
    undefined field26878_0xead5;
    undefined field26879_0xead6;
    undefined field26880_0xead7;
    undefined field26881_0xead8;
    undefined field26882_0xead9;
    undefined field26883_0xeada;
    undefined field26884_0xeadb;
    undefined field26885_0xeadc;
    undefined field26886_0xeadd;
    undefined field26887_0xeade;
    undefined field26888_0xeadf;
    undefined field26889_0xeae0;
    undefined field26890_0xeae1;
    undefined field26891_0xeae2;
    undefined field26892_0xeae3;
    undefined field26893_0xeae4;
    undefined field26894_0xeae5;
    undefined field26895_0xeae6;
    undefined field26896_0xeae7;
    undefined field26897_0xeae8;
    undefined field26898_0xeae9;
    undefined field26899_0xeaea;
    undefined field26900_0xeaeb;
    undefined field26901_0xeaec;
    undefined field26902_0xeaed;
    undefined field26903_0xeaee;
    undefined field26904_0xeaef;
    undefined field26905_0xeaf0;
    undefined field26906_0xeaf1;
    undefined field26907_0xeaf2;
    undefined field26908_0xeaf3;
    undefined field26909_0xeaf4;
    undefined field26910_0xeaf5;
    undefined field26911_0xeaf6;
    undefined field26912_0xeaf7;
    undefined field26913_0xeaf8;
    undefined field26914_0xeaf9;
    undefined field26915_0xeafa;
    undefined field26916_0xeafb;
    undefined field26917_0xeafc;
    undefined field26918_0xeafd;
    undefined field26919_0xeafe;
    undefined field26920_0xeaff;
    undefined field26921_0xeb00;
    undefined field26922_0xeb01;
    undefined field26923_0xeb02;
    undefined field26924_0xeb03;
    undefined field26925_0xeb04;
    undefined field26926_0xeb05;
    undefined field26927_0xeb06;
    undefined field26928_0xeb07;
    undefined field26929_0xeb08;
    undefined field26930_0xeb09;
    undefined field26931_0xeb0a;
    undefined field26932_0xeb0b;
    undefined field26933_0xeb0c;
    undefined field26934_0xeb0d;
    undefined field26935_0xeb0e;
    undefined field26936_0xeb0f;
    undefined field26937_0xeb10;
    undefined field26938_0xeb11;
    undefined field26939_0xeb12;
    undefined field26940_0xeb13;
    undefined field26941_0xeb14;
    undefined field26942_0xeb15;
    undefined field26943_0xeb16;
    undefined field26944_0xeb17;
    undefined field26945_0xeb18;
    undefined field26946_0xeb19;
    undefined field26947_0xeb1a;
    undefined field26948_0xeb1b;
    undefined field26949_0xeb1c;
    undefined field26950_0xeb1d;
    undefined field26951_0xeb1e;
    undefined field26952_0xeb1f;
    undefined field26953_0xeb20;
    undefined field26954_0xeb21;
    undefined field26955_0xeb22;
    undefined field26956_0xeb23;
    undefined field26957_0xeb24;
    undefined field26958_0xeb25;
    undefined field26959_0xeb26;
    undefined field26960_0xeb27;
    undefined field26961_0xeb28;
    undefined field26962_0xeb29;
    undefined field26963_0xeb2a;
    undefined field26964_0xeb2b;
    undefined field26965_0xeb2c;
    undefined field26966_0xeb2d;
    undefined field26967_0xeb2e;
    undefined field26968_0xeb2f;
    undefined field26969_0xeb30;
    undefined field26970_0xeb31;
    undefined field26971_0xeb32;
    undefined field26972_0xeb33;
    undefined field26973_0xeb34;
    undefined field26974_0xeb35;
    undefined field26975_0xeb36;
    undefined field26976_0xeb37;
    undefined field26977_0xeb38;
    undefined field26978_0xeb39;
    undefined field26979_0xeb3a;
    undefined field26980_0xeb3b;
    undefined field26981_0xeb3c;
    undefined field26982_0xeb3d;
    undefined field26983_0xeb3e;
    undefined field26984_0xeb3f;
    undefined field26985_0xeb40;
    undefined field26986_0xeb41;
    undefined field26987_0xeb42;
    undefined field26988_0xeb43;
    undefined field26989_0xeb44;
    undefined field26990_0xeb45;
    undefined field26991_0xeb46;
    undefined field26992_0xeb47;
    undefined field26993_0xeb48;
    undefined field26994_0xeb49;
    undefined field26995_0xeb4a;
    undefined field26996_0xeb4b;
    undefined field26997_0xeb4c;
    undefined field26998_0xeb4d;
    undefined field26999_0xeb4e;
    undefined field27000_0xeb4f;
    undefined field27001_0xeb50;
    undefined field27002_0xeb51;
    undefined field27003_0xeb52;
    undefined field27004_0xeb53;
    undefined field27005_0xeb54;
    undefined field27006_0xeb55;
    undefined field27007_0xeb56;
    undefined field27008_0xeb57;
    undefined field27009_0xeb58;
    undefined field27010_0xeb59;
    undefined field27011_0xeb5a;
    undefined field27012_0xeb5b;
    undefined field27013_0xeb5c;
    undefined field27014_0xeb5d;
    undefined field27015_0xeb5e;
    undefined field27016_0xeb5f;
    undefined field27017_0xeb60;
    undefined field27018_0xeb61;
    undefined field27019_0xeb62;
    undefined field27020_0xeb63;
    undefined field27021_0xeb64;
    undefined field27022_0xeb65;
    undefined field27023_0xeb66;
    undefined field27024_0xeb67;
    undefined field27025_0xeb68;
    undefined field27026_0xeb69;
    undefined field27027_0xeb6a;
    undefined field27028_0xeb6b;
    undefined field27029_0xeb6c;
    undefined field27030_0xeb6d;
    undefined field27031_0xeb6e;
    undefined field27032_0xeb6f;
    undefined field27033_0xeb70;
    undefined field27034_0xeb71;
    undefined field27035_0xeb72;
    undefined field27036_0xeb73;
    undefined field27037_0xeb74;
    undefined field27038_0xeb75;
    undefined field27039_0xeb76;
    undefined field27040_0xeb77;
    undefined field27041_0xeb78;
    undefined field27042_0xeb79;
    undefined field27043_0xeb7a;
    undefined field27044_0xeb7b;
    undefined field27045_0xeb7c;
    undefined field27046_0xeb7d;
    undefined field27047_0xeb7e;
    undefined field27048_0xeb7f;
    undefined field27049_0xeb80;
    undefined field27050_0xeb81;
    undefined field27051_0xeb82;
    undefined field27052_0xeb83;
    undefined field27053_0xeb84;
    undefined field27054_0xeb85;
    undefined field27055_0xeb86;
    undefined field27056_0xeb87;
    undefined field27057_0xeb88;
    undefined field27058_0xeb89;
    undefined field27059_0xeb8a;
    undefined field27060_0xeb8b;
    undefined field27061_0xeb8c;
    undefined field27062_0xeb8d;
    undefined field27063_0xeb8e;
    undefined field27064_0xeb8f;
    undefined field27065_0xeb90;
    undefined field27066_0xeb91;
    undefined field27067_0xeb92;
    undefined field27068_0xeb93;
    undefined field27069_0xeb94;
    undefined field27070_0xeb95;
    undefined field27071_0xeb96;
    undefined field27072_0xeb97;
    undefined field27073_0xeb98;
    undefined field27074_0xeb99;
    undefined field27075_0xeb9a;
    undefined field27076_0xeb9b;
    undefined field27077_0xeb9c;
    undefined field27078_0xeb9d;
    undefined field27079_0xeb9e;
    undefined field27080_0xeb9f;
    undefined field27081_0xeba0;
    undefined field27082_0xeba1;
    undefined field27083_0xeba2;
    undefined field27084_0xeba3;
    undefined field27085_0xeba4;
    undefined field27086_0xeba5;
    undefined field27087_0xeba6;
    undefined field27088_0xeba7;
    undefined field27089_0xeba8;
    undefined field27090_0xeba9;
    undefined field27091_0xebaa;
    undefined field27092_0xebab;
    undefined field27093_0xebac;
    undefined field27094_0xebad;
    undefined field27095_0xebae;
    undefined field27096_0xebaf;
    undefined field27097_0xebb0;
    undefined field27098_0xebb1;
    undefined field27099_0xebb2;
    undefined field27100_0xebb3;
    undefined field27101_0xebb4;
    undefined field27102_0xebb5;
    undefined field27103_0xebb6;
    undefined field27104_0xebb7;
    undefined field27105_0xebb8;
    undefined field27106_0xebb9;
    undefined field27107_0xebba;
    undefined field27108_0xebbb;
    undefined field27109_0xebbc;
    undefined field27110_0xebbd;
    undefined field27111_0xebbe;
    undefined field27112_0xebbf;
    undefined field27113_0xebc0;
    undefined field27114_0xebc1;
    undefined field27115_0xebc2;
    undefined field27116_0xebc3;
    undefined field27117_0xebc4;
    undefined field27118_0xebc5;
    undefined field27119_0xebc6;
    undefined field27120_0xebc7;
    undefined field27121_0xebc8;
    undefined field27122_0xebc9;
    undefined field27123_0xebca;
    undefined field27124_0xebcb;
    undefined field27125_0xebcc;
    undefined field27126_0xebcd;
    undefined field27127_0xebce;
    undefined field27128_0xebcf;
    undefined field27129_0xebd0;
    undefined field27130_0xebd1;
    undefined field27131_0xebd2;
    undefined field27132_0xebd3;
    undefined field27133_0xebd4;
    undefined field27134_0xebd5;
    undefined field27135_0xebd6;
    undefined field27136_0xebd7;
    undefined field27137_0xebd8;
    undefined field27138_0xebd9;
    undefined field27139_0xebda;
    undefined field27140_0xebdb;
    undefined field27141_0xebdc;
    undefined field27142_0xebdd;
    undefined field27143_0xebde;
    undefined field27144_0xebdf;
    undefined field27145_0xebe0;
    undefined field27146_0xebe1;
    undefined field27147_0xebe2;
    undefined field27148_0xebe3;
    undefined field27149_0xebe4;
    undefined field27150_0xebe5;
    undefined field27151_0xebe6;
    undefined field27152_0xebe7;
    undefined field27153_0xebe8;
    undefined field27154_0xebe9;
    undefined field27155_0xebea;
    undefined field27156_0xebeb;
    undefined field27157_0xebec;
    undefined field27158_0xebed;
    undefined field27159_0xebee;
    undefined field27160_0xebef;
    undefined field27161_0xebf0;
    undefined field27162_0xebf1;
    undefined field27163_0xebf2;
    undefined field27164_0xebf3;
    undefined field27165_0xebf4;
    undefined field27166_0xebf5;
    undefined field27167_0xebf6;
    undefined field27168_0xebf7;
    undefined field27169_0xebf8;
    undefined field27170_0xebf9;
    undefined field27171_0xebfa;
    undefined field27172_0xebfb;
    undefined field27173_0xebfc;
    undefined field27174_0xebfd;
    undefined field27175_0xebfe;
    undefined field27176_0xebff;
    undefined field27177_0xec00;
    undefined field27178_0xec01;
    undefined field27179_0xec02;
    undefined field27180_0xec03;
    undefined field27181_0xec04;
    undefined field27182_0xec05;
    undefined field27183_0xec06;
    undefined field27184_0xec07;
    undefined field27185_0xec08;
    undefined field27186_0xec09;
    undefined field27187_0xec0a;
    undefined field27188_0xec0b;
    undefined field27189_0xec0c;
    undefined field27190_0xec0d;
    undefined field27191_0xec0e;
    undefined field27192_0xec0f;
    undefined field27193_0xec10;
    undefined field27194_0xec11;
    undefined field27195_0xec12;
    undefined field27196_0xec13;
    undefined field27197_0xec14;
    undefined field27198_0xec15;
    undefined field27199_0xec16;
    undefined field27200_0xec17;
    undefined field27201_0xec18;
    undefined field27202_0xec19;
    undefined field27203_0xec1a;
    undefined field27204_0xec1b;
    undefined field27205_0xec1c;
    undefined field27206_0xec1d;
    undefined field27207_0xec1e;
    undefined field27208_0xec1f;
    undefined field27209_0xec20;
    undefined field27210_0xec21;
    undefined field27211_0xec22;
    undefined field27212_0xec23;
    undefined field27213_0xec24;
    undefined field27214_0xec25;
    undefined field27215_0xec26;
    undefined field27216_0xec27;
    undefined field27217_0xec28;
    undefined field27218_0xec29;
    undefined field27219_0xec2a;
    undefined field27220_0xec2b;
    undefined field27221_0xec2c;
    undefined field27222_0xec2d;
    undefined field27223_0xec2e;
    undefined field27224_0xec2f;
    undefined field27225_0xec30;
    undefined field27226_0xec31;
    undefined field27227_0xec32;
    undefined field27228_0xec33;
    undefined field27229_0xec34;
    undefined field27230_0xec35;
    undefined field27231_0xec36;
    undefined field27232_0xec37;
    undefined field27233_0xec38;
    undefined field27234_0xec39;
    undefined field27235_0xec3a;
    undefined field27236_0xec3b;
    undefined field27237_0xec3c;
    undefined field27238_0xec3d;
    undefined field27239_0xec3e;
    undefined field27240_0xec3f;
    undefined field27241_0xec40;
    undefined field27242_0xec41;
    undefined field27243_0xec42;
    undefined field27244_0xec43;
    undefined field27245_0xec44;
    undefined field27246_0xec45;
    undefined field27247_0xec46;
    undefined field27248_0xec47;
    undefined field27249_0xec48;
    undefined field27250_0xec49;
    undefined field27251_0xec4a;
    undefined field27252_0xec4b;
    undefined field27253_0xec4c;
    undefined field27254_0xec4d;
    undefined field27255_0xec4e;
    undefined field27256_0xec4f;
    undefined field27257_0xec50;
    undefined field27258_0xec51;
    undefined field27259_0xec52;
    undefined field27260_0xec53;
    undefined field27261_0xec54;
    undefined field27262_0xec55;
    undefined field27263_0xec56;
    undefined field27264_0xec57;
    undefined field27265_0xec58;
    undefined field27266_0xec59;
    undefined field27267_0xec5a;
    undefined field27268_0xec5b;
    undefined field27269_0xec5c;
    undefined field27270_0xec5d;
    undefined field27271_0xec5e;
    undefined field27272_0xec5f;
    undefined field27273_0xec60;
    undefined field27274_0xec61;
    undefined field27275_0xec62;
    undefined field27276_0xec63;
    undefined field27277_0xec64;
    undefined field27278_0xec65;
    undefined field27279_0xec66;
    undefined field27280_0xec67;
    undefined field27281_0xec68;
    undefined field27282_0xec69;
    undefined field27283_0xec6a;
    undefined field27284_0xec6b;
    undefined field27285_0xec6c;
    undefined field27286_0xec6d;
    undefined field27287_0xec6e;
    undefined field27288_0xec6f;
    undefined field27289_0xec70;
    undefined field27290_0xec71;
    undefined field27291_0xec72;
    undefined field27292_0xec73;
    undefined field27293_0xec74;
    undefined field27294_0xec75;
    undefined field27295_0xec76;
    undefined field27296_0xec77;
    undefined field27297_0xec78;
    undefined field27298_0xec79;
    undefined field27299_0xec7a;
    undefined field27300_0xec7b;
    undefined field27301_0xec7c;
    undefined field27302_0xec7d;
    undefined field27303_0xec7e;
    undefined field27304_0xec7f;
    undefined field27305_0xec80;
    undefined field27306_0xec81;
    undefined field27307_0xec82;
    undefined field27308_0xec83;
    undefined field27309_0xec84;
    undefined field27310_0xec85;
    undefined field27311_0xec86;
    undefined field27312_0xec87;
    undefined field27313_0xec88;
    undefined field27314_0xec89;
    undefined field27315_0xec8a;
    undefined field27316_0xec8b;
    undefined field27317_0xec8c;
    undefined field27318_0xec8d;
    undefined field27319_0xec8e;
    undefined field27320_0xec8f;
    undefined field27321_0xec90;
    undefined field27322_0xec91;
    undefined field27323_0xec92;
    undefined field27324_0xec93;
    undefined field27325_0xec94;
    undefined field27326_0xec95;
    undefined field27327_0xec96;
    undefined field27328_0xec97;
    undefined field27329_0xec98;
    undefined field27330_0xec99;
    undefined field27331_0xec9a;
    undefined field27332_0xec9b;
    undefined field27333_0xec9c;
    undefined field27334_0xec9d;
    undefined field27335_0xec9e;
    undefined field27336_0xec9f;
    undefined field27337_0xeca0;
    undefined field27338_0xeca1;
    undefined field27339_0xeca2;
    undefined field27340_0xeca3;
    undefined field27341_0xeca4;
    undefined field27342_0xeca5;
    undefined field27343_0xeca6;
    undefined field27344_0xeca7;
    undefined field27345_0xeca8;
    undefined field27346_0xeca9;
    undefined field27347_0xecaa;
    undefined field27348_0xecab;
    undefined field27349_0xecac;
    undefined field27350_0xecad;
    undefined field27351_0xecae;
    undefined field27352_0xecaf;
    undefined field27353_0xecb0;
    undefined field27354_0xecb1;
    undefined field27355_0xecb2;
    undefined field27356_0xecb3;
    undefined field27357_0xecb4;
    undefined field27358_0xecb5;
    undefined field27359_0xecb6;
    undefined field27360_0xecb7;
    undefined field27361_0xecb8;
    undefined field27362_0xecb9;
    undefined field27363_0xecba;
    undefined field27364_0xecbb;
    undefined field27365_0xecbc;
    undefined field27366_0xecbd;
    undefined field27367_0xecbe;
    undefined field27368_0xecbf;
    undefined field27369_0xecc0;
    undefined field27370_0xecc1;
    undefined field27371_0xecc2;
    undefined field27372_0xecc3;
    undefined field27373_0xecc4;
    undefined field27374_0xecc5;
    undefined field27375_0xecc6;
    undefined field27376_0xecc7;
    undefined field27377_0xecc8;
    undefined field27378_0xecc9;
    undefined field27379_0xecca;
    undefined field27380_0xeccb;
    undefined field27381_0xeccc;
    undefined field27382_0xeccd;
    undefined field27383_0xecce;
    undefined field27384_0xeccf;
    undefined field27385_0xecd0;
    undefined field27386_0xecd1;
    undefined field27387_0xecd2;
    undefined field27388_0xecd3;
    undefined field27389_0xecd4;
    undefined field27390_0xecd5;
    undefined field27391_0xecd6;
    undefined field27392_0xecd7;
    undefined field27393_0xecd8;
    undefined field27394_0xecd9;
    undefined field27395_0xecda;
    undefined field27396_0xecdb;
    undefined field27397_0xecdc;
    undefined field27398_0xecdd;
    undefined field27399_0xecde;
    undefined field27400_0xecdf;
    undefined field27401_0xece0;
    undefined field27402_0xece1;
    undefined field27403_0xece2;
    undefined field27404_0xece3;
    undefined field27405_0xece4;
    undefined field27406_0xece5;
    undefined field27407_0xece6;
    undefined field27408_0xece7;
    undefined field27409_0xece8;
    undefined field27410_0xece9;
    undefined field27411_0xecea;
    undefined field27412_0xeceb;
    undefined field27413_0xecec;
    undefined field27414_0xeced;
    undefined field27415_0xecee;
    undefined field27416_0xecef;
    undefined field27417_0xecf0;
    undefined field27418_0xecf1;
    undefined field27419_0xecf2;
    undefined field27420_0xecf3;
    undefined field27421_0xecf4;
    undefined field27422_0xecf5;
    undefined field27423_0xecf6;
    undefined field27424_0xecf7;
    undefined field27425_0xecf8;
    undefined field27426_0xecf9;
    undefined field27427_0xecfa;
    undefined field27428_0xecfb;
    undefined field27429_0xecfc;
    undefined field27430_0xecfd;
    undefined field27431_0xecfe;
    undefined field27432_0xecff;
    undefined field27433_0xed00;
    undefined field27434_0xed01;
    undefined field27435_0xed02;
    undefined field27436_0xed03;
    undefined field27437_0xed04;
    undefined field27438_0xed05;
    undefined field27439_0xed06;
    undefined field27440_0xed07;
    undefined field27441_0xed08;
    undefined field27442_0xed09;
    undefined field27443_0xed0a;
    undefined field27444_0xed0b;
    undefined field27445_0xed0c;
    undefined field27446_0xed0d;
    undefined field27447_0xed0e;
    undefined field27448_0xed0f;
    undefined field27449_0xed10;
    undefined field27450_0xed11;
    undefined field27451_0xed12;
    undefined field27452_0xed13;
    undefined field27453_0xed14;
    undefined field27454_0xed15;
    undefined field27455_0xed16;
    undefined field27456_0xed17;
    undefined field27457_0xed18;
    undefined field27458_0xed19;
    undefined field27459_0xed1a;
    undefined field27460_0xed1b;
    undefined field27461_0xed1c;
    undefined field27462_0xed1d;
    undefined field27463_0xed1e;
    undefined field27464_0xed1f;
    undefined field27465_0xed20;
    undefined field27466_0xed21;
    undefined field27467_0xed22;
    undefined field27468_0xed23;
    undefined field27469_0xed24;
    undefined field27470_0xed25;
    undefined field27471_0xed26;
    undefined field27472_0xed27;
    undefined field27473_0xed28;
    undefined field27474_0xed29;
    undefined field27475_0xed2a;
    undefined field27476_0xed2b;
    undefined field27477_0xed2c;
    undefined field27478_0xed2d;
    undefined field27479_0xed2e;
    undefined field27480_0xed2f;
    undefined field27481_0xed30;
    undefined field27482_0xed31;
    undefined field27483_0xed32;
    undefined field27484_0xed33;
    undefined field27485_0xed34;
    undefined field27486_0xed35;
    undefined field27487_0xed36;
    undefined field27488_0xed37;
    undefined field27489_0xed38;
    undefined field27490_0xed39;
    undefined field27491_0xed3a;
    undefined field27492_0xed3b;
    undefined field27493_0xed3c;
    undefined field27494_0xed3d;
    undefined field27495_0xed3e;
    undefined field27496_0xed3f;
    undefined field27497_0xed40;
    undefined field27498_0xed41;
    undefined field27499_0xed42;
    undefined field27500_0xed43;
    undefined field27501_0xed44;
    undefined field27502_0xed45;
    undefined field27503_0xed46;
    undefined field27504_0xed47;
    undefined field27505_0xed48;
    undefined field27506_0xed49;
    undefined field27507_0xed4a;
    undefined field27508_0xed4b;
    undefined field27509_0xed4c;
    undefined field27510_0xed4d;
    undefined field27511_0xed4e;
    undefined field27512_0xed4f;
    undefined field27513_0xed50;
    undefined field27514_0xed51;
    undefined field27515_0xed52;
    undefined field27516_0xed53;
    undefined field27517_0xed54;
    undefined field27518_0xed55;
    undefined field27519_0xed56;
    undefined field27520_0xed57;
    undefined field27521_0xed58;
    undefined field27522_0xed59;
    undefined field27523_0xed5a;
    undefined field27524_0xed5b;
    undefined field27525_0xed5c;
    undefined field27526_0xed5d;
    undefined field27527_0xed5e;
    undefined field27528_0xed5f;
    undefined field27529_0xed60;
    undefined field27530_0xed61;
    undefined field27531_0xed62;
    undefined field27532_0xed63;
    undefined field27533_0xed64;
    undefined field27534_0xed65;
    undefined field27535_0xed66;
    undefined field27536_0xed67;
    undefined field27537_0xed68;
    undefined field27538_0xed69;
    undefined field27539_0xed6a;
    undefined field27540_0xed6b;
    undefined field27541_0xed6c;
    undefined field27542_0xed6d;
    undefined field27543_0xed6e;
    undefined field27544_0xed6f;
    undefined field27545_0xed70;
    undefined field27546_0xed71;
    undefined field27547_0xed72;
    undefined field27548_0xed73;
    undefined field27549_0xed74;
    undefined field27550_0xed75;
    undefined field27551_0xed76;
    undefined field27552_0xed77;
    undefined field27553_0xed78;
    undefined field27554_0xed79;
    undefined field27555_0xed7a;
    undefined field27556_0xed7b;
    undefined field27557_0xed7c;
    undefined field27558_0xed7d;
    undefined field27559_0xed7e;
    undefined field27560_0xed7f;
    undefined field27561_0xed80;
    undefined field27562_0xed81;
    undefined field27563_0xed82;
    undefined field27564_0xed83;
    undefined field27565_0xed84;
    undefined field27566_0xed85;
    undefined field27567_0xed86;
    undefined field27568_0xed87;
    undefined field27569_0xed88;
    undefined field27570_0xed89;
    undefined field27571_0xed8a;
    undefined field27572_0xed8b;
    undefined field27573_0xed8c;
    undefined field27574_0xed8d;
    undefined field27575_0xed8e;
    undefined field27576_0xed8f;
    undefined field27577_0xed90;
    undefined field27578_0xed91;
    undefined field27579_0xed92;
    undefined field27580_0xed93;
    undefined field27581_0xed94;
    undefined field27582_0xed95;
    undefined field27583_0xed96;
    undefined field27584_0xed97;
    undefined field27585_0xed98;
    undefined field27586_0xed99;
    undefined field27587_0xed9a;
    undefined field27588_0xed9b;
    undefined field27589_0xed9c;
    undefined field27590_0xed9d;
    undefined field27591_0xed9e;
    undefined field27592_0xed9f;
    undefined field27593_0xeda0;
    undefined field27594_0xeda1;
    undefined field27595_0xeda2;
    undefined field27596_0xeda3;
    undefined field27597_0xeda4;
    undefined field27598_0xeda5;
    undefined field27599_0xeda6;
    undefined field27600_0xeda7;
    undefined field27601_0xeda8;
    undefined field27602_0xeda9;
    undefined field27603_0xedaa;
    undefined field27604_0xedab;
    undefined field27605_0xedac;
    undefined field27606_0xedad;
    undefined field27607_0xedae;
    undefined field27608_0xedaf;
    undefined field27609_0xedb0;
    undefined field27610_0xedb1;
    undefined field27611_0xedb2;
    undefined field27612_0xedb3;
    undefined field27613_0xedb4;
    undefined field27614_0xedb5;
    undefined field27615_0xedb6;
    undefined field27616_0xedb7;
    undefined field27617_0xedb8;
    undefined field27618_0xedb9;
    undefined field27619_0xedba;
    undefined field27620_0xedbb;
    undefined field27621_0xedbc;
    undefined field27622_0xedbd;
    undefined field27623_0xedbe;
    undefined field27624_0xedbf;
    undefined field27625_0xedc0;
    undefined field27626_0xedc1;
    undefined field27627_0xedc2;
    undefined field27628_0xedc3;
    undefined field27629_0xedc4;
    undefined field27630_0xedc5;
    undefined field27631_0xedc6;
    undefined field27632_0xedc7;
    undefined field27633_0xedc8;
    undefined field27634_0xedc9;
    undefined field27635_0xedca;
    undefined field27636_0xedcb;
    undefined field27637_0xedcc;
    undefined field27638_0xedcd;
    undefined field27639_0xedce;
    undefined field27640_0xedcf;
    undefined field27641_0xedd0;
    undefined field27642_0xedd1;
    undefined field27643_0xedd2;
    undefined field27644_0xedd3;
    undefined field27645_0xedd4;
    undefined field27646_0xedd5;
    undefined field27647_0xedd6;
    undefined field27648_0xedd7;
    undefined field27649_0xedd8;
    undefined field27650_0xedd9;
    undefined field27651_0xedda;
    undefined field27652_0xeddb;
    undefined field27653_0xeddc;
    undefined field27654_0xeddd;
    undefined field27655_0xedde;
    undefined field27656_0xeddf;
    undefined field27657_0xede0;
    undefined field27658_0xede1;
    undefined field27659_0xede2;
    undefined field27660_0xede3;
    undefined field27661_0xede4;
    undefined field27662_0xede5;
    undefined field27663_0xede6;
    undefined field27664_0xede7;
    undefined field27665_0xede8;
    undefined field27666_0xede9;
    undefined field27667_0xedea;
    undefined field27668_0xedeb;
    undefined field27669_0xedec;
    undefined field27670_0xeded;
    undefined field27671_0xedee;
    undefined field27672_0xedef;
    undefined field27673_0xedf0;
    undefined field27674_0xedf1;
    undefined field27675_0xedf2;
    undefined field27676_0xedf3;
    undefined field27677_0xedf4;
    undefined field27678_0xedf5;
    undefined field27679_0xedf6;
    undefined field27680_0xedf7;
    undefined field27681_0xedf8;
    undefined field27682_0xedf9;
    undefined field27683_0xedfa;
    undefined field27684_0xedfb;
    undefined field27685_0xedfc;
    undefined field27686_0xedfd;
    undefined field27687_0xedfe;
    undefined field27688_0xedff;
    undefined field27689_0xee00;
    undefined field27690_0xee01;
    undefined field27691_0xee02;
    undefined field27692_0xee03;
    undefined field27693_0xee04;
    undefined field27694_0xee05;
    undefined field27695_0xee06;
    undefined field27696_0xee07;
    undefined field27697_0xee08;
    undefined field27698_0xee09;
    undefined field27699_0xee0a;
    undefined field27700_0xee0b;
    undefined field27701_0xee0c;
    undefined field27702_0xee0d;
    undefined field27703_0xee0e;
    undefined field27704_0xee0f;
    undefined field27705_0xee10;
    undefined field27706_0xee11;
    undefined field27707_0xee12;
    undefined field27708_0xee13;
    undefined field27709_0xee14;
    undefined field27710_0xee15;
    undefined field27711_0xee16;
    undefined field27712_0xee17;
    undefined field27713_0xee18;
    undefined field27714_0xee19;
    undefined field27715_0xee1a;
    undefined field27716_0xee1b;
    undefined field27717_0xee1c;
    undefined field27718_0xee1d;
    undefined field27719_0xee1e;
    undefined field27720_0xee1f;
    undefined field27721_0xee20;
    undefined field27722_0xee21;
    undefined field27723_0xee22;
    undefined field27724_0xee23;
    undefined field27725_0xee24;
    undefined field27726_0xee25;
    undefined field27727_0xee26;
    undefined field27728_0xee27;
    undefined field27729_0xee28;
    undefined field27730_0xee29;
    undefined field27731_0xee2a;
    undefined field27732_0xee2b;
    undefined field27733_0xee2c;
    undefined field27734_0xee2d;
    undefined field27735_0xee2e;
    undefined field27736_0xee2f;
    undefined field27737_0xee30;
    undefined field27738_0xee31;
    undefined field27739_0xee32;
    undefined field27740_0xee33;
    undefined field27741_0xee34;
    undefined field27742_0xee35;
    undefined field27743_0xee36;
    undefined field27744_0xee37;
    undefined field27745_0xee38;
    undefined field27746_0xee39;
    undefined field27747_0xee3a;
    undefined field27748_0xee3b;
    undefined field27749_0xee3c;
    undefined field27750_0xee3d;
    undefined field27751_0xee3e;
    undefined field27752_0xee3f;
    undefined field27753_0xee40;
    undefined field27754_0xee41;
    undefined field27755_0xee42;
    undefined field27756_0xee43;
    undefined field27757_0xee44;
    undefined field27758_0xee45;
    undefined field27759_0xee46;
    undefined field27760_0xee47;
    undefined field27761_0xee48;
    undefined field27762_0xee49;
    undefined field27763_0xee4a;
    undefined field27764_0xee4b;
    undefined field27765_0xee4c;
    undefined field27766_0xee4d;
    undefined field27767_0xee4e;
    undefined field27768_0xee4f;
    undefined field27769_0xee50;
    undefined field27770_0xee51;
    undefined field27771_0xee52;
    undefined field27772_0xee53;
    undefined field27773_0xee54;
    undefined field27774_0xee55;
    undefined field27775_0xee56;
    undefined field27776_0xee57;
    undefined field27777_0xee58;
    undefined field27778_0xee59;
    undefined field27779_0xee5a;
    undefined field27780_0xee5b;
    undefined field27781_0xee5c;
    undefined field27782_0xee5d;
    undefined field27783_0xee5e;
    undefined field27784_0xee5f;
    undefined field27785_0xee60;
    undefined field27786_0xee61;
    undefined field27787_0xee62;
    undefined field27788_0xee63;
    undefined field27789_0xee64;
    undefined field27790_0xee65;
    undefined field27791_0xee66;
    undefined field27792_0xee67;
    undefined field27793_0xee68;
    undefined field27794_0xee69;
    undefined field27795_0xee6a;
    undefined field27796_0xee6b;
    undefined field27797_0xee6c;
    undefined field27798_0xee6d;
    undefined field27799_0xee6e;
    undefined field27800_0xee6f;
    undefined field27801_0xee70;
    undefined field27802_0xee71;
    undefined field27803_0xee72;
    undefined field27804_0xee73;
    undefined field27805_0xee74;
    undefined field27806_0xee75;
    undefined field27807_0xee76;
    undefined field27808_0xee77;
    undefined field27809_0xee78;
    undefined field27810_0xee79;
    undefined field27811_0xee7a;
    undefined field27812_0xee7b;
    undefined field27813_0xee7c;
    undefined field27814_0xee7d;
    undefined field27815_0xee7e;
    undefined field27816_0xee7f;
    undefined field27817_0xee80;
    undefined field27818_0xee81;
    undefined field27819_0xee82;
    undefined field27820_0xee83;
    undefined field27821_0xee84;
    undefined field27822_0xee85;
    undefined field27823_0xee86;
    undefined field27824_0xee87;
    undefined field27825_0xee88;
    undefined field27826_0xee89;
    undefined field27827_0xee8a;
    undefined field27828_0xee8b;
    undefined field27829_0xee8c;
    undefined field27830_0xee8d;
    undefined field27831_0xee8e;
    undefined field27832_0xee8f;
    undefined field27833_0xee90;
    undefined field27834_0xee91;
    undefined field27835_0xee92;
    undefined field27836_0xee93;
    undefined field27837_0xee94;
    undefined field27838_0xee95;
    undefined field27839_0xee96;
    undefined field27840_0xee97;
    undefined field27841_0xee98;
    undefined field27842_0xee99;
    undefined field27843_0xee9a;
    undefined field27844_0xee9b;
    undefined field27845_0xee9c;
    undefined field27846_0xee9d;
    undefined field27847_0xee9e;
    undefined field27848_0xee9f;
    undefined field27849_0xeea0;
    undefined field27850_0xeea1;
    undefined field27851_0xeea2;
    undefined field27852_0xeea3;
    undefined field27853_0xeea4;
    undefined field27854_0xeea5;
    undefined field27855_0xeea6;
    undefined field27856_0xeea7;
    undefined field27857_0xeea8;
    undefined field27858_0xeea9;
    undefined field27859_0xeeaa;
    undefined field27860_0xeeab;
    undefined field27861_0xeeac;
    undefined field27862_0xeead;
    undefined field27863_0xeeae;
    undefined field27864_0xeeaf;
    undefined field27865_0xeeb0;
    undefined field27866_0xeeb1;
    undefined field27867_0xeeb2;
    undefined field27868_0xeeb3;
    undefined field27869_0xeeb4;
    undefined field27870_0xeeb5;
    undefined field27871_0xeeb6;
    undefined field27872_0xeeb7;
    undefined field27873_0xeeb8;
    undefined field27874_0xeeb9;
    undefined field27875_0xeeba;
    undefined field27876_0xeebb;
    undefined field27877_0xeebc;
    undefined field27878_0xeebd;
    undefined field27879_0xeebe;
    undefined field27880_0xeebf;
    undefined field27881_0xeec0;
    undefined field27882_0xeec1;
    undefined field27883_0xeec2;
    undefined field27884_0xeec3;
    undefined field27885_0xeec4;
    undefined field27886_0xeec5;
    undefined field27887_0xeec6;
    undefined field27888_0xeec7;
    undefined field27889_0xeec8;
    undefined field27890_0xeec9;
    undefined field27891_0xeeca;
    undefined field27892_0xeecb;
    undefined field27893_0xeecc;
    undefined field27894_0xeecd;
    undefined field27895_0xeece;
    undefined field27896_0xeecf;
    undefined field27897_0xeed0;
    undefined field27898_0xeed1;
    undefined field27899_0xeed2;
    undefined field27900_0xeed3;
    undefined field27901_0xeed4;
    undefined field27902_0xeed5;
    undefined field27903_0xeed6;
    undefined field27904_0xeed7;
    undefined field27905_0xeed8;
    undefined field27906_0xeed9;
    undefined field27907_0xeeda;
    undefined field27908_0xeedb;
    undefined field27909_0xeedc;
    undefined field27910_0xeedd;
    undefined field27911_0xeede;
    undefined field27912_0xeedf;
    undefined field27913_0xeee0;
    undefined field27914_0xeee1;
    undefined field27915_0xeee2;
    undefined field27916_0xeee3;
    undefined field27917_0xeee4;
    undefined field27918_0xeee5;
    undefined field27919_0xeee6;
    undefined field27920_0xeee7;
    undefined field27921_0xeee8;
    undefined field27922_0xeee9;
    undefined field27923_0xeeea;
    undefined field27924_0xeeeb;
    undefined field27925_0xeeec;
    undefined field27926_0xeeed;
    undefined field27927_0xeeee;
    undefined field27928_0xeeef;
    undefined field27929_0xeef0;
    undefined field27930_0xeef1;
    undefined field27931_0xeef2;
    undefined field27932_0xeef3;
    undefined field27933_0xeef4;
    undefined field27934_0xeef5;
    undefined field27935_0xeef6;
    undefined field27936_0xeef7;
    undefined field27937_0xeef8;
    undefined field27938_0xeef9;
    undefined field27939_0xeefa;
    undefined field27940_0xeefb;
    undefined field27941_0xeefc;
    undefined field27942_0xeefd;
    undefined field27943_0xeefe;
    undefined field27944_0xeeff;
    undefined field27945_0xef00;
    undefined field27946_0xef01;
    undefined field27947_0xef02;
    undefined field27948_0xef03;
    undefined field27949_0xef04;
    undefined field27950_0xef05;
    undefined field27951_0xef06;
    undefined field27952_0xef07;
    undefined field27953_0xef08;
    undefined field27954_0xef09;
    undefined field27955_0xef0a;
    undefined field27956_0xef0b;
    undefined field27957_0xef0c;
    undefined field27958_0xef0d;
    undefined field27959_0xef0e;
    undefined field27960_0xef0f;
    undefined field27961_0xef10;
    undefined field27962_0xef11;
    undefined field27963_0xef12;
    undefined field27964_0xef13;
    undefined field27965_0xef14;
    undefined field27966_0xef15;
    undefined field27967_0xef16;
    undefined field27968_0xef17;
    undefined field27969_0xef18;
    undefined field27970_0xef19;
    undefined field27971_0xef1a;
    undefined field27972_0xef1b;
    undefined field27973_0xef1c;
    undefined field27974_0xef1d;
    undefined field27975_0xef1e;
    undefined field27976_0xef1f;
    undefined field27977_0xef20;
    undefined field27978_0xef21;
    undefined field27979_0xef22;
    undefined field27980_0xef23;
    undefined field27981_0xef24;
    undefined field27982_0xef25;
    undefined field27983_0xef26;
    undefined field27984_0xef27;
    undefined field27985_0xef28;
    undefined field27986_0xef29;
    undefined field27987_0xef2a;
    undefined field27988_0xef2b;
    undefined field27989_0xef2c;
    undefined field27990_0xef2d;
    undefined field27991_0xef2e;
    undefined field27992_0xef2f;
    undefined field27993_0xef30;
    undefined field27994_0xef31;
    undefined field27995_0xef32;
    undefined field27996_0xef33;
    undefined field27997_0xef34;
    undefined field27998_0xef35;
    undefined field27999_0xef36;
    undefined field28000_0xef37;
    undefined field28001_0xef38;
    undefined field28002_0xef39;
    undefined field28003_0xef3a;
    undefined field28004_0xef3b;
    undefined field28005_0xef3c;
    undefined field28006_0xef3d;
    undefined field28007_0xef3e;
    undefined field28008_0xef3f;
    undefined field28009_0xef40;
    undefined field28010_0xef41;
    undefined field28011_0xef42;
    undefined field28012_0xef43;
    undefined field28013_0xef44;
    undefined field28014_0xef45;
    undefined field28015_0xef46;
    undefined field28016_0xef47;
    undefined field28017_0xef48;
    undefined field28018_0xef49;
    undefined field28019_0xef4a;
    undefined field28020_0xef4b;
    undefined field28021_0xef4c;
    undefined field28022_0xef4d;
    undefined field28023_0xef4e;
    undefined field28024_0xef4f;
    undefined field28025_0xef50;
    undefined field28026_0xef51;
    undefined field28027_0xef52;
    undefined field28028_0xef53;
    undefined field28029_0xef54;
    undefined field28030_0xef55;
    undefined field28031_0xef56;
    undefined field28032_0xef57;
    undefined field28033_0xef58;
    undefined field28034_0xef59;
    undefined field28035_0xef5a;
    undefined field28036_0xef5b;
    undefined field28037_0xef5c;
    undefined field28038_0xef5d;
    undefined field28039_0xef5e;
    undefined field28040_0xef5f;
    undefined field28041_0xef60;
    undefined field28042_0xef61;
    undefined field28043_0xef62;
    undefined field28044_0xef63;
    undefined field28045_0xef64;
    undefined field28046_0xef65;
    undefined field28047_0xef66;
    undefined field28048_0xef67;
    undefined field28049_0xef68;
    undefined field28050_0xef69;
    undefined field28051_0xef6a;
    undefined field28052_0xef6b;
    undefined field28053_0xef6c;
    undefined field28054_0xef6d;
    undefined field28055_0xef6e;
    undefined field28056_0xef6f;
    undefined field28057_0xef70;
    undefined field28058_0xef71;
    undefined field28059_0xef72;
    undefined field28060_0xef73;
    undefined field28061_0xef74;
    undefined field28062_0xef75;
    undefined field28063_0xef76;
    undefined field28064_0xef77;
    undefined field28065_0xef78;
    undefined field28066_0xef79;
    undefined field28067_0xef7a;
    undefined field28068_0xef7b;
    undefined field28069_0xef7c;
    undefined field28070_0xef7d;
    undefined field28071_0xef7e;
    undefined field28072_0xef7f;
    undefined field28073_0xef80;
    undefined field28074_0xef81;
    undefined field28075_0xef82;
    undefined field28076_0xef83;
    undefined field28077_0xef84;
    undefined field28078_0xef85;
    undefined field28079_0xef86;
    undefined field28080_0xef87;
    undefined field28081_0xef88;
    undefined field28082_0xef89;
    undefined field28083_0xef8a;
    undefined field28084_0xef8b;
    undefined field28085_0xef8c;
    undefined field28086_0xef8d;
    undefined field28087_0xef8e;
    undefined field28088_0xef8f;
    undefined field28089_0xef90;
    undefined field28090_0xef91;
    undefined field28091_0xef92;
    undefined field28092_0xef93;
    undefined field28093_0xef94;
    undefined field28094_0xef95;
    undefined field28095_0xef96;
    undefined field28096_0xef97;
    undefined field28097_0xef98;
    undefined field28098_0xef99;
    undefined field28099_0xef9a;
    undefined field28100_0xef9b;
    undefined field28101_0xef9c;
    undefined field28102_0xef9d;
    undefined field28103_0xef9e;
    undefined field28104_0xef9f;
    undefined field28105_0xefa0;
    undefined field28106_0xefa1;
    undefined field28107_0xefa2;
    undefined field28108_0xefa3;
    undefined field28109_0xefa4;
    undefined field28110_0xefa5;
    undefined field28111_0xefa6;
    undefined field28112_0xefa7;
    undefined field28113_0xefa8;
    undefined field28114_0xefa9;
    undefined field28115_0xefaa;
    undefined field28116_0xefab;
    undefined field28117_0xefac;
    undefined field28118_0xefad;
    undefined field28119_0xefae;
    undefined field28120_0xefaf;
    undefined field28121_0xefb0;
    undefined field28122_0xefb1;
    undefined field28123_0xefb2;
    undefined field28124_0xefb3;
    undefined field28125_0xefb4;
    undefined field28126_0xefb5;
    undefined field28127_0xefb6;
    undefined field28128_0xefb7;
    undefined field28129_0xefb8;
    undefined field28130_0xefb9;
    undefined field28131_0xefba;
    undefined field28132_0xefbb;
    undefined field28133_0xefbc;
    undefined field28134_0xefbd;
    undefined field28135_0xefbe;
    undefined field28136_0xefbf;
    undefined field28137_0xefc0;
    undefined field28138_0xefc1;
    undefined field28139_0xefc2;
    undefined field28140_0xefc3;
    undefined field28141_0xefc4;
    undefined field28142_0xefc5;
    undefined field28143_0xefc6;
    undefined field28144_0xefc7;
    undefined field28145_0xefc8;
    undefined field28146_0xefc9;
    undefined field28147_0xefca;
    undefined field28148_0xefcb;
    undefined field28149_0xefcc;
    undefined field28150_0xefcd;
    undefined field28151_0xefce;
    undefined field28152_0xefcf;
    undefined field28153_0xefd0;
    undefined field28154_0xefd1;
    undefined field28155_0xefd2;
    undefined field28156_0xefd3;
    undefined field28157_0xefd4;
    undefined field28158_0xefd5;
    undefined field28159_0xefd6;
    undefined field28160_0xefd7;
    undefined field28161_0xefd8;
    undefined field28162_0xefd9;
    undefined field28163_0xefda;
    undefined field28164_0xefdb;
    undefined field28165_0xefdc;
    undefined field28166_0xefdd;
    undefined field28167_0xefde;
    undefined field28168_0xefdf;
    undefined field28169_0xefe0;
    undefined field28170_0xefe1;
    undefined field28171_0xefe2;
    undefined field28172_0xefe3;
    undefined field28173_0xefe4;
    undefined field28174_0xefe5;
    undefined field28175_0xefe6;
    undefined field28176_0xefe7;
    undefined field28177_0xefe8;
    undefined field28178_0xefe9;
    undefined field28179_0xefea;
    undefined field28180_0xefeb;
    undefined field28181_0xefec;
    undefined field28182_0xefed;
    undefined field28183_0xefee;
    undefined field28184_0xefef;
    undefined field28185_0xeff0;
    undefined field28186_0xeff1;
    undefined field28187_0xeff2;
    undefined field28188_0xeff3;
    undefined field28189_0xeff4;
    undefined field28190_0xeff5;
    undefined field28191_0xeff6;
    undefined field28192_0xeff7;
    undefined field28193_0xeff8;
    undefined field28194_0xeff9;
    undefined field28195_0xeffa;
    undefined field28196_0xeffb;
    undefined field28197_0xeffc;
    undefined field28198_0xeffd;
    undefined field28199_0xeffe;
    undefined field28200_0xefff;
    undefined field28201_0xf000;
    undefined field28202_0xf001;
    undefined field28203_0xf002;
    undefined field28204_0xf003;
    undefined field28205_0xf004;
    undefined field28206_0xf005;
    undefined field28207_0xf006;
    undefined field28208_0xf007;
    undefined field28209_0xf008;
    undefined field28210_0xf009;
    undefined field28211_0xf00a;
    undefined field28212_0xf00b;
    undefined field28213_0xf00c;
    undefined field28214_0xf00d;
    undefined field28215_0xf00e;
    undefined field28216_0xf00f;
    undefined field28217_0xf010;
    undefined field28218_0xf011;
    undefined field28219_0xf012;
    undefined field28220_0xf013;
    undefined field28221_0xf014;
    undefined field28222_0xf015;
    undefined field28223_0xf016;
    undefined field28224_0xf017;
    undefined field28225_0xf018;
    undefined field28226_0xf019;
    undefined field28227_0xf01a;
    undefined field28228_0xf01b;
    undefined field28229_0xf01c;
    undefined field28230_0xf01d;
    undefined field28231_0xf01e;
    undefined field28232_0xf01f;
    undefined field28233_0xf020;
    undefined field28234_0xf021;
    undefined field28235_0xf022;
    undefined field28236_0xf023;
    undefined field28237_0xf024;
    undefined field28238_0xf025;
    undefined field28239_0xf026;
    undefined field28240_0xf027;
    undefined field28241_0xf028;
    undefined field28242_0xf029;
    undefined field28243_0xf02a;
    undefined field28244_0xf02b;
    undefined field28245_0xf02c;
    undefined field28246_0xf02d;
    undefined field28247_0xf02e;
    undefined field28248_0xf02f;
    undefined field28249_0xf030;
    undefined field28250_0xf031;
    undefined field28251_0xf032;
    undefined field28252_0xf033;
    undefined field28253_0xf034;
    undefined field28254_0xf035;
    undefined field28255_0xf036;
    undefined field28256_0xf037;
    undefined field28257_0xf038;
    undefined field28258_0xf039;
    undefined field28259_0xf03a;
    undefined field28260_0xf03b;
    undefined field28261_0xf03c;
    undefined field28262_0xf03d;
    undefined field28263_0xf03e;
    undefined field28264_0xf03f;
    undefined field28265_0xf040;
    undefined field28266_0xf041;
    undefined field28267_0xf042;
    undefined field28268_0xf043;
    undefined field28269_0xf044;
    undefined field28270_0xf045;
    undefined field28271_0xf046;
    undefined field28272_0xf047;
    undefined field28273_0xf048;
    undefined field28274_0xf049;
    undefined field28275_0xf04a;
    undefined field28276_0xf04b;
    undefined field28277_0xf04c;
    undefined field28278_0xf04d;
    undefined field28279_0xf04e;
    undefined field28280_0xf04f;
    undefined field28281_0xf050;
    undefined field28282_0xf051;
    undefined field28283_0xf052;
    undefined field28284_0xf053;
    undefined field28285_0xf054;
    undefined field28286_0xf055;
    undefined field28287_0xf056;
    undefined field28288_0xf057;
    undefined field28289_0xf058;
    undefined field28290_0xf059;
    undefined field28291_0xf05a;
    undefined field28292_0xf05b;
    undefined field28293_0xf05c;
    undefined field28294_0xf05d;
    undefined field28295_0xf05e;
    undefined field28296_0xf05f;
    undefined field28297_0xf060;
    undefined field28298_0xf061;
    undefined field28299_0xf062;
    undefined field28300_0xf063;
    undefined field28301_0xf064;
    undefined field28302_0xf065;
    undefined field28303_0xf066;
    undefined field28304_0xf067;
    undefined field28305_0xf068;
    undefined field28306_0xf069;
    undefined field28307_0xf06a;
    undefined field28308_0xf06b;
    undefined field28309_0xf06c;
    undefined field28310_0xf06d;
    undefined field28311_0xf06e;
    undefined field28312_0xf06f;
    undefined field28313_0xf070;
    undefined field28314_0xf071;
    undefined field28315_0xf072;
    undefined field28316_0xf073;
    undefined field28317_0xf074;
    undefined field28318_0xf075;
    undefined field28319_0xf076;
    undefined field28320_0xf077;
    undefined field28321_0xf078;
    undefined field28322_0xf079;
    undefined field28323_0xf07a;
    undefined field28324_0xf07b;
    undefined field28325_0xf07c;
    undefined field28326_0xf07d;
    undefined field28327_0xf07e;
    undefined field28328_0xf07f;
    undefined field28329_0xf080;
    undefined field28330_0xf081;
    undefined field28331_0xf082;
    undefined field28332_0xf083;
    undefined field28333_0xf084;
    undefined field28334_0xf085;
    undefined field28335_0xf086;
    undefined field28336_0xf087;
    undefined field28337_0xf088;
    undefined field28338_0xf089;
    undefined field28339_0xf08a;
    undefined field28340_0xf08b;
    undefined field28341_0xf08c;
    undefined field28342_0xf08d;
    undefined field28343_0xf08e;
    undefined field28344_0xf08f;
    undefined field28345_0xf090;
    undefined field28346_0xf091;
    undefined field28347_0xf092;
    undefined field28348_0xf093;
    undefined field28349_0xf094;
    undefined field28350_0xf095;
    undefined field28351_0xf096;
    undefined field28352_0xf097;
    undefined field28353_0xf098;
    undefined field28354_0xf099;
    undefined field28355_0xf09a;
    undefined field28356_0xf09b;
    undefined field28357_0xf09c;
    undefined field28358_0xf09d;
    undefined field28359_0xf09e;
    undefined field28360_0xf09f;
    undefined field28361_0xf0a0;
    undefined field28362_0xf0a1;
    undefined field28363_0xf0a2;
    undefined field28364_0xf0a3;
    undefined field28365_0xf0a4;
    undefined field28366_0xf0a5;
    undefined field28367_0xf0a6;
    undefined field28368_0xf0a7;
    undefined field28369_0xf0a8;
    undefined field28370_0xf0a9;
    undefined field28371_0xf0aa;
    undefined field28372_0xf0ab;
    undefined field28373_0xf0ac;
    undefined field28374_0xf0ad;
    undefined field28375_0xf0ae;
    undefined field28376_0xf0af;
    undefined field28377_0xf0b0;
    undefined field28378_0xf0b1;
    undefined field28379_0xf0b2;
    undefined field28380_0xf0b3;
    undefined field28381_0xf0b4;
    undefined field28382_0xf0b5;
    undefined field28383_0xf0b6;
    undefined field28384_0xf0b7;
    undefined field28385_0xf0b8;
    undefined field28386_0xf0b9;
    undefined field28387_0xf0ba;
    undefined field28388_0xf0bb;
    undefined field28389_0xf0bc;
    undefined field28390_0xf0bd;
    undefined field28391_0xf0be;
    undefined field28392_0xf0bf;
    undefined field28393_0xf0c0;
    undefined field28394_0xf0c1;
    undefined field28395_0xf0c2;
    undefined field28396_0xf0c3;
    undefined field28397_0xf0c4;
    undefined field28398_0xf0c5;
    undefined field28399_0xf0c6;
    undefined field28400_0xf0c7;
    undefined field28401_0xf0c8;
    undefined field28402_0xf0c9;
    undefined field28403_0xf0ca;
    undefined field28404_0xf0cb;
    undefined field28405_0xf0cc;
    undefined field28406_0xf0cd;
    undefined field28407_0xf0ce;
    undefined field28408_0xf0cf;
    undefined field28409_0xf0d0;
    undefined field28410_0xf0d1;
    undefined field28411_0xf0d2;
    undefined field28412_0xf0d3;
    undefined field28413_0xf0d4;
    undefined field28414_0xf0d5;
    undefined field28415_0xf0d6;
    undefined field28416_0xf0d7;
    undefined field28417_0xf0d8;
    undefined field28418_0xf0d9;
    undefined field28419_0xf0da;
    undefined field28420_0xf0db;
    undefined field28421_0xf0dc;
    undefined field28422_0xf0dd;
    undefined field28423_0xf0de;
    undefined field28424_0xf0df;
    undefined field28425_0xf0e0;
    undefined field28426_0xf0e1;
    undefined field28427_0xf0e2;
    undefined field28428_0xf0e3;
    undefined field28429_0xf0e4;
    undefined field28430_0xf0e5;
    undefined field28431_0xf0e6;
    undefined field28432_0xf0e7;
    undefined field28433_0xf0e8;
    undefined field28434_0xf0e9;
    undefined field28435_0xf0ea;
    undefined field28436_0xf0eb;
    undefined field28437_0xf0ec;
    undefined field28438_0xf0ed;
    undefined field28439_0xf0ee;
    undefined field28440_0xf0ef;
    undefined field28441_0xf0f0;
    undefined field28442_0xf0f1;
    undefined field28443_0xf0f2;
    undefined field28444_0xf0f3;
    undefined field28445_0xf0f4;
    undefined field28446_0xf0f5;
    undefined field28447_0xf0f6;
    undefined field28448_0xf0f7;
    undefined field28449_0xf0f8;
    undefined field28450_0xf0f9;
    undefined field28451_0xf0fa;
    undefined field28452_0xf0fb;
    undefined field28453_0xf0fc;
    undefined field28454_0xf0fd;
    undefined field28455_0xf0fe;
    undefined field28456_0xf0ff;
    undefined field28457_0xf100;
    undefined field28458_0xf101;
    undefined field28459_0xf102;
    undefined field28460_0xf103;
    undefined field28461_0xf104;
    undefined field28462_0xf105;
    undefined field28463_0xf106;
    undefined field28464_0xf107;
    undefined field28465_0xf108;
    undefined field28466_0xf109;
    undefined field28467_0xf10a;
    undefined field28468_0xf10b;
    undefined field28469_0xf10c;
    undefined field28470_0xf10d;
    undefined field28471_0xf10e;
    undefined field28472_0xf10f;
    undefined field28473_0xf110;
    undefined field28474_0xf111;
    undefined field28475_0xf112;
    undefined field28476_0xf113;
    undefined field28477_0xf114;
    undefined field28478_0xf115;
    undefined field28479_0xf116;
    undefined field28480_0xf117;
    undefined field28481_0xf118;
    undefined field28482_0xf119;
    undefined field28483_0xf11a;
    undefined field28484_0xf11b;
    undefined field28485_0xf11c;
    undefined field28486_0xf11d;
    undefined field28487_0xf11e;
    undefined field28488_0xf11f;
    undefined field28489_0xf120;
    undefined field28490_0xf121;
    undefined field28491_0xf122;
    undefined field28492_0xf123;
    undefined field28493_0xf124;
    undefined field28494_0xf125;
    undefined field28495_0xf126;
    undefined field28496_0xf127;
    undefined field28497_0xf128;
    undefined field28498_0xf129;
    undefined field28499_0xf12a;
    undefined field28500_0xf12b;
    undefined field28501_0xf12c;
    undefined field28502_0xf12d;
    undefined field28503_0xf12e;
    undefined field28504_0xf12f;
    undefined field28505_0xf130;
    undefined field28506_0xf131;
    undefined field28507_0xf132;
    undefined field28508_0xf133;
    undefined field28509_0xf134;
    undefined field28510_0xf135;
    undefined field28511_0xf136;
    undefined field28512_0xf137;
    undefined field28513_0xf138;
    undefined field28514_0xf139;
    undefined field28515_0xf13a;
    undefined field28516_0xf13b;
    undefined field28517_0xf13c;
    undefined field28518_0xf13d;
    undefined field28519_0xf13e;
    undefined field28520_0xf13f;
    undefined field28521_0xf140;
    undefined field28522_0xf141;
    undefined field28523_0xf142;
    undefined field28524_0xf143;
    undefined field28525_0xf144;
    undefined field28526_0xf145;
    undefined field28527_0xf146;
    undefined field28528_0xf147;
    undefined field28529_0xf148;
    undefined field28530_0xf149;
    undefined field28531_0xf14a;
    undefined field28532_0xf14b;
    undefined field28533_0xf14c;
    undefined field28534_0xf14d;
    undefined field28535_0xf14e;
    undefined field28536_0xf14f;
    undefined field28537_0xf150;
    undefined field28538_0xf151;
    undefined field28539_0xf152;
    undefined field28540_0xf153;
    undefined field28541_0xf154;
    undefined field28542_0xf155;
    undefined field28543_0xf156;
    undefined field28544_0xf157;
    undefined field28545_0xf158;
    undefined field28546_0xf159;
    undefined field28547_0xf15a;
    undefined field28548_0xf15b;
    undefined field28549_0xf15c;
    undefined field28550_0xf15d;
    undefined field28551_0xf15e;
    undefined field28552_0xf15f;
    undefined field28553_0xf160;
    undefined field28554_0xf161;
    undefined field28555_0xf162;
    undefined field28556_0xf163;
    undefined field28557_0xf164;
    undefined field28558_0xf165;
    undefined field28559_0xf166;
    undefined field28560_0xf167;
    undefined field28561_0xf168;
    undefined field28562_0xf169;
    undefined field28563_0xf16a;
    undefined field28564_0xf16b;
    undefined field28565_0xf16c;
    undefined field28566_0xf16d;
    undefined field28567_0xf16e;
    undefined field28568_0xf16f;
    undefined field28569_0xf170;
    undefined field28570_0xf171;
    undefined field28571_0xf172;
    undefined field28572_0xf173;
    undefined field28573_0xf174;
    undefined field28574_0xf175;
    undefined field28575_0xf176;
    undefined field28576_0xf177;
    undefined field28577_0xf178;
    undefined field28578_0xf179;
    undefined field28579_0xf17a;
    undefined field28580_0xf17b;
    undefined field28581_0xf17c;
    undefined field28582_0xf17d;
    undefined field28583_0xf17e;
    undefined field28584_0xf17f;
    undefined field28585_0xf180;
    undefined field28586_0xf181;
    undefined field28587_0xf182;
    undefined field28588_0xf183;
    undefined field28589_0xf184;
    undefined field28590_0xf185;
    undefined field28591_0xf186;
    undefined field28592_0xf187;
    undefined field28593_0xf188;
    undefined field28594_0xf189;
    undefined field28595_0xf18a;
    undefined field28596_0xf18b;
    undefined field28597_0xf18c;
    undefined field28598_0xf18d;
    undefined field28599_0xf18e;
    undefined field28600_0xf18f;
    undefined field28601_0xf190;
    undefined field28602_0xf191;
    undefined field28603_0xf192;
    undefined field28604_0xf193;
    undefined field28605_0xf194;
    undefined field28606_0xf195;
    undefined field28607_0xf196;
    undefined field28608_0xf197;
    undefined field28609_0xf198;
    undefined field28610_0xf199;
    undefined field28611_0xf19a;
    undefined field28612_0xf19b;
    undefined field28613_0xf19c;
    undefined field28614_0xf19d;
    undefined field28615_0xf19e;
    undefined field28616_0xf19f;
    undefined field28617_0xf1a0;
    undefined field28618_0xf1a1;
    undefined field28619_0xf1a2;
    undefined field28620_0xf1a3;
    undefined field28621_0xf1a4;
    undefined field28622_0xf1a5;
    undefined field28623_0xf1a6;
    undefined field28624_0xf1a7;
    undefined field28625_0xf1a8;
    undefined field28626_0xf1a9;
    undefined field28627_0xf1aa;
    undefined field28628_0xf1ab;
    undefined field28629_0xf1ac;
    undefined field28630_0xf1ad;
    undefined field28631_0xf1ae;
    undefined field28632_0xf1af;
    undefined field28633_0xf1b0;
    undefined field28634_0xf1b1;
    undefined field28635_0xf1b2;
    undefined field28636_0xf1b3;
    undefined field28637_0xf1b4;
    undefined field28638_0xf1b5;
    undefined field28639_0xf1b6;
    undefined field28640_0xf1b7;
    undefined field28641_0xf1b8;
    undefined field28642_0xf1b9;
    undefined field28643_0xf1ba;
    undefined field28644_0xf1bb;
    undefined field28645_0xf1bc;
    undefined field28646_0xf1bd;
    undefined field28647_0xf1be;
    undefined field28648_0xf1bf;
    undefined field28649_0xf1c0;
    undefined field28650_0xf1c1;
    undefined field28651_0xf1c2;
    undefined field28652_0xf1c3;
    undefined field28653_0xf1c4;
    undefined field28654_0xf1c5;
    undefined field28655_0xf1c6;
    undefined field28656_0xf1c7;
    undefined field28657_0xf1c8;
    undefined field28658_0xf1c9;
    undefined field28659_0xf1ca;
    undefined field28660_0xf1cb;
    undefined field28661_0xf1cc;
    undefined field28662_0xf1cd;
    undefined field28663_0xf1ce;
    undefined field28664_0xf1cf;
    undefined field28665_0xf1d0;
    undefined field28666_0xf1d1;
    undefined field28667_0xf1d2;
    undefined field28668_0xf1d3;
    undefined field28669_0xf1d4;
    undefined field28670_0xf1d5;
    undefined field28671_0xf1d6;
    undefined field28672_0xf1d7;
    undefined field28673_0xf1d8;
    undefined field28674_0xf1d9;
    undefined field28675_0xf1da;
    undefined field28676_0xf1db;
    undefined field28677_0xf1dc;
    undefined field28678_0xf1dd;
    undefined field28679_0xf1de;
    undefined field28680_0xf1df;
    undefined field28681_0xf1e0;
    undefined field28682_0xf1e1;
    undefined field28683_0xf1e2;
    undefined field28684_0xf1e3;
    undefined field28685_0xf1e4;
    undefined field28686_0xf1e5;
    undefined field28687_0xf1e6;
    undefined field28688_0xf1e7;
    undefined field28689_0xf1e8;
    undefined field28690_0xf1e9;
    undefined field28691_0xf1ea;
    undefined field28692_0xf1eb;
    undefined field28693_0xf1ec;
    undefined field28694_0xf1ed;
    undefined field28695_0xf1ee;
    undefined field28696_0xf1ef;
    undefined field28697_0xf1f0;
    undefined field28698_0xf1f1;
    undefined field28699_0xf1f2;
    undefined field28700_0xf1f3;
    undefined field28701_0xf1f4;
    undefined field28702_0xf1f5;
    undefined field28703_0xf1f6;
    undefined field28704_0xf1f7;
    undefined field28705_0xf1f8;
    undefined field28706_0xf1f9;
    undefined field28707_0xf1fa;
    undefined field28708_0xf1fb;
    undefined field28709_0xf1fc;
    undefined field28710_0xf1fd;
    undefined field28711_0xf1fe;
    undefined field28712_0xf1ff;
    undefined field28713_0xf200;
    undefined field28714_0xf201;
    undefined field28715_0xf202;
    undefined field28716_0xf203;
    undefined field28717_0xf204;
    undefined field28718_0xf205;
    undefined field28719_0xf206;
    undefined field28720_0xf207;
    undefined field28721_0xf208;
    undefined field28722_0xf209;
    undefined field28723_0xf20a;
    undefined field28724_0xf20b;
    undefined field28725_0xf20c;
    undefined field28726_0xf20d;
    undefined field28727_0xf20e;
    undefined field28728_0xf20f;
    undefined field28729_0xf210;
    undefined field28730_0xf211;
    undefined field28731_0xf212;
    undefined field28732_0xf213;
    undefined field28733_0xf214;
    undefined field28734_0xf215;
    undefined field28735_0xf216;
    undefined field28736_0xf217;
    undefined field28737_0xf218;
    undefined field28738_0xf219;
    undefined field28739_0xf21a;
    undefined field28740_0xf21b;
    undefined field28741_0xf21c;
    undefined field28742_0xf21d;
    undefined field28743_0xf21e;
    undefined field28744_0xf21f;
    undefined field28745_0xf220;
    undefined field28746_0xf221;
    undefined field28747_0xf222;
    undefined field28748_0xf223;
    undefined field28749_0xf224;
    undefined field28750_0xf225;
    undefined field28751_0xf226;
    undefined field28752_0xf227;
    undefined field28753_0xf228;
    undefined field28754_0xf229;
    undefined field28755_0xf22a;
    undefined field28756_0xf22b;
    undefined field28757_0xf22c;
    undefined field28758_0xf22d;
    undefined field28759_0xf22e;
    undefined field28760_0xf22f;
    undefined field28761_0xf230;
    undefined field28762_0xf231;
    undefined field28763_0xf232;
    undefined field28764_0xf233;
    undefined field28765_0xf234;
    undefined field28766_0xf235;
    undefined field28767_0xf236;
    undefined field28768_0xf237;
    undefined field28769_0xf238;
    undefined field28770_0xf239;
    undefined field28771_0xf23a;
    undefined field28772_0xf23b;
    undefined field28773_0xf23c;
    undefined field28774_0xf23d;
    undefined field28775_0xf23e;
    undefined field28776_0xf23f;
    undefined field28777_0xf240;
    undefined field28778_0xf241;
    undefined field28779_0xf242;
    undefined field28780_0xf243;
    undefined field28781_0xf244;
    undefined field28782_0xf245;
    undefined field28783_0xf246;
    undefined field28784_0xf247;
    undefined field28785_0xf248;
    undefined field28786_0xf249;
    undefined field28787_0xf24a;
    undefined field28788_0xf24b;
    undefined field28789_0xf24c;
    undefined field28790_0xf24d;
    undefined field28791_0xf24e;
    undefined field28792_0xf24f;
    undefined field28793_0xf250;
    undefined field28794_0xf251;
    undefined field28795_0xf252;
    undefined field28796_0xf253;
    undefined field28797_0xf254;
    undefined field28798_0xf255;
    undefined field28799_0xf256;
    undefined field28800_0xf257;
    undefined field28801_0xf258;
    undefined field28802_0xf259;
    undefined field28803_0xf25a;
    undefined field28804_0xf25b;
    undefined field28805_0xf25c;
    undefined field28806_0xf25d;
    undefined field28807_0xf25e;
    undefined field28808_0xf25f;
    undefined field28809_0xf260;
    undefined field28810_0xf261;
    undefined field28811_0xf262;
    undefined field28812_0xf263;
    undefined field28813_0xf264;
    undefined field28814_0xf265;
    undefined field28815_0xf266;
    undefined field28816_0xf267;
    undefined field28817_0xf268;
    undefined field28818_0xf269;
    undefined field28819_0xf26a;
    undefined field28820_0xf26b;
    undefined field28821_0xf26c;
    undefined field28822_0xf26d;
    undefined field28823_0xf26e;
    undefined field28824_0xf26f;
    undefined field28825_0xf270;
    undefined field28826_0xf271;
    undefined field28827_0xf272;
    undefined field28828_0xf273;
    undefined field28829_0xf274;
    undefined field28830_0xf275;
    undefined field28831_0xf276;
    undefined field28832_0xf277;
    undefined field28833_0xf278;
    undefined field28834_0xf279;
    undefined field28835_0xf27a;
    undefined field28836_0xf27b;
    undefined field28837_0xf27c;
    undefined field28838_0xf27d;
    undefined field28839_0xf27e;
    undefined field28840_0xf27f;
    undefined field28841_0xf280;
    undefined field28842_0xf281;
    undefined field28843_0xf282;
    undefined field28844_0xf283;
    undefined field28845_0xf284;
    undefined field28846_0xf285;
    undefined field28847_0xf286;
    undefined field28848_0xf287;
    undefined field28849_0xf288;
    undefined field28850_0xf289;
    undefined field28851_0xf28a;
    undefined field28852_0xf28b;
    undefined field28853_0xf28c;
    undefined field28854_0xf28d;
    undefined field28855_0xf28e;
    undefined field28856_0xf28f;
    undefined field28857_0xf290;
    undefined field28858_0xf291;
    undefined field28859_0xf292;
    undefined field28860_0xf293;
    undefined field28861_0xf294;
    undefined field28862_0xf295;
    undefined field28863_0xf296;
    undefined field28864_0xf297;
    undefined field28865_0xf298;
    undefined field28866_0xf299;
    undefined field28867_0xf29a;
    undefined field28868_0xf29b;
    undefined field28869_0xf29c;
    undefined field28870_0xf29d;
    undefined field28871_0xf29e;
    undefined field28872_0xf29f;
    undefined field28873_0xf2a0;
    undefined field28874_0xf2a1;
    undefined field28875_0xf2a2;
    undefined field28876_0xf2a3;
    undefined field28877_0xf2a4;
    undefined field28878_0xf2a5;
    undefined field28879_0xf2a6;
    undefined field28880_0xf2a7;
    undefined field28881_0xf2a8;
    undefined field28882_0xf2a9;
    undefined field28883_0xf2aa;
    undefined field28884_0xf2ab;
    undefined field28885_0xf2ac;
    undefined field28886_0xf2ad;
    undefined field28887_0xf2ae;
    undefined field28888_0xf2af;
    undefined field28889_0xf2b0;
    undefined field28890_0xf2b1;
    undefined field28891_0xf2b2;
    undefined field28892_0xf2b3;
    undefined field28893_0xf2b4;
    undefined field28894_0xf2b5;
    undefined field28895_0xf2b6;
    undefined field28896_0xf2b7;
    undefined field28897_0xf2b8;
    undefined field28898_0xf2b9;
    undefined field28899_0xf2ba;
    undefined field28900_0xf2bb;
    undefined field28901_0xf2bc;
    undefined field28902_0xf2bd;
    undefined field28903_0xf2be;
    undefined field28904_0xf2bf;
    undefined field28905_0xf2c0;
    undefined field28906_0xf2c1;
    undefined field28907_0xf2c2;
    undefined field28908_0xf2c3;
    undefined field28909_0xf2c4;
    undefined field28910_0xf2c5;
    undefined field28911_0xf2c6;
    undefined field28912_0xf2c7;
    undefined field28913_0xf2c8;
    undefined field28914_0xf2c9;
    undefined field28915_0xf2ca;
    undefined field28916_0xf2cb;
    undefined field28917_0xf2cc;
    undefined field28918_0xf2cd;
    undefined field28919_0xf2ce;
    undefined field28920_0xf2cf;
    undefined field28921_0xf2d0;
    undefined field28922_0xf2d1;
    undefined field28923_0xf2d2;
    undefined field28924_0xf2d3;
    undefined field28925_0xf2d4;
    undefined field28926_0xf2d5;
    undefined field28927_0xf2d6;
    undefined field28928_0xf2d7;
    undefined field28929_0xf2d8;
    undefined field28930_0xf2d9;
    undefined field28931_0xf2da;
    undefined field28932_0xf2db;
    undefined field28933_0xf2dc;
    undefined field28934_0xf2dd;
    undefined field28935_0xf2de;
    undefined field28936_0xf2df;
    undefined field28937_0xf2e0;
    undefined field28938_0xf2e1;
    undefined field28939_0xf2e2;
    undefined field28940_0xf2e3;
    undefined field28941_0xf2e4;
    undefined field28942_0xf2e5;
    undefined field28943_0xf2e6;
    undefined field28944_0xf2e7;
    undefined field28945_0xf2e8;
    undefined field28946_0xf2e9;
    undefined field28947_0xf2ea;
    undefined field28948_0xf2eb;
    undefined field28949_0xf2ec;
    undefined field28950_0xf2ed;
    undefined field28951_0xf2ee;
    undefined field28952_0xf2ef;
    undefined field28953_0xf2f0;
    undefined field28954_0xf2f1;
    undefined field28955_0xf2f2;
    undefined field28956_0xf2f3;
    undefined field28957_0xf2f4;
    undefined field28958_0xf2f5;
    undefined field28959_0xf2f6;
    undefined field28960_0xf2f7;
    undefined field28961_0xf2f8;
    undefined field28962_0xf2f9;
    undefined field28963_0xf2fa;
    undefined field28964_0xf2fb;
    undefined field28965_0xf2fc;
    undefined field28966_0xf2fd;
    undefined field28967_0xf2fe;
    undefined field28968_0xf2ff;
    undefined field28969_0xf300;
    undefined field28970_0xf301;
    undefined field28971_0xf302;
    undefined field28972_0xf303;
    undefined field28973_0xf304;
    undefined field28974_0xf305;
    undefined field28975_0xf306;
    undefined field28976_0xf307;
    undefined field28977_0xf308;
    undefined field28978_0xf309;
    undefined field28979_0xf30a;
    undefined field28980_0xf30b;
    undefined field28981_0xf30c;
    undefined field28982_0xf30d;
    undefined field28983_0xf30e;
    undefined field28984_0xf30f;
    undefined field28985_0xf310;
    undefined field28986_0xf311;
    undefined field28987_0xf312;
    undefined field28988_0xf313;
    undefined field28989_0xf314;
    undefined field28990_0xf315;
    undefined field28991_0xf316;
    undefined field28992_0xf317;
    undefined field28993_0xf318;
    undefined field28994_0xf319;
    undefined field28995_0xf31a;
    undefined field28996_0xf31b;
    undefined field28997_0xf31c;
    undefined field28998_0xf31d;
    undefined field28999_0xf31e;
    undefined field29000_0xf31f;
    undefined field29001_0xf320;
    undefined field29002_0xf321;
    undefined field29003_0xf322;
    undefined field29004_0xf323;
    undefined field29005_0xf324;
    undefined field29006_0xf325;
    undefined field29007_0xf326;
    undefined field29008_0xf327;
    undefined field29009_0xf328;
    undefined field29010_0xf329;
    undefined field29011_0xf32a;
    undefined field29012_0xf32b;
    undefined field29013_0xf32c;
    undefined field29014_0xf32d;
    undefined field29015_0xf32e;
    undefined field29016_0xf32f;
    undefined field29017_0xf330;
    undefined field29018_0xf331;
    undefined field29019_0xf332;
    undefined field29020_0xf333;
    undefined field29021_0xf334;
    undefined field29022_0xf335;
    undefined field29023_0xf336;
    undefined field29024_0xf337;
    undefined field29025_0xf338;
    undefined field29026_0xf339;
    undefined field29027_0xf33a;
    undefined field29028_0xf33b;
    undefined field29029_0xf33c;
    undefined field29030_0xf33d;
    undefined field29031_0xf33e;
    undefined field29032_0xf33f;
    undefined field29033_0xf340;
    undefined field29034_0xf341;
    undefined field29035_0xf342;
    undefined field29036_0xf343;
    undefined field29037_0xf344;
    undefined field29038_0xf345;
    undefined field29039_0xf346;
    undefined field29040_0xf347;
    undefined field29041_0xf348;
    undefined field29042_0xf349;
    undefined field29043_0xf34a;
    undefined field29044_0xf34b;
    undefined field29045_0xf34c;
    undefined field29046_0xf34d;
    undefined field29047_0xf34e;
    undefined field29048_0xf34f;
    undefined field29049_0xf350;
    undefined field29050_0xf351;
    undefined field29051_0xf352;
    undefined field29052_0xf353;
    undefined field29053_0xf354;
    undefined field29054_0xf355;
    undefined field29055_0xf356;
    undefined field29056_0xf357;
    undefined field29057_0xf358;
    undefined field29058_0xf359;
    undefined field29059_0xf35a;
    undefined field29060_0xf35b;
    undefined field29061_0xf35c;
    undefined field29062_0xf35d;
    undefined field29063_0xf35e;
    undefined field29064_0xf35f;
    undefined field29065_0xf360;
    undefined field29066_0xf361;
    undefined field29067_0xf362;
    undefined field29068_0xf363;
    undefined field29069_0xf364;
    undefined field29070_0xf365;
    undefined field29071_0xf366;
    undefined field29072_0xf367;
    undefined field29073_0xf368;
    undefined field29074_0xf369;
    undefined field29075_0xf36a;
    undefined field29076_0xf36b;
    undefined field29077_0xf36c;
    undefined field29078_0xf36d;
    undefined field29079_0xf36e;
    undefined field29080_0xf36f;
    undefined field29081_0xf370;
    undefined field29082_0xf371;
    undefined field29083_0xf372;
    undefined field29084_0xf373;
    undefined field29085_0xf374;
    undefined field29086_0xf375;
    undefined field29087_0xf376;
    undefined field29088_0xf377;
    undefined field29089_0xf378;
    undefined field29090_0xf379;
    undefined field29091_0xf37a;
    undefined field29092_0xf37b;
    undefined field29093_0xf37c;
    undefined field29094_0xf37d;
    undefined field29095_0xf37e;
    undefined field29096_0xf37f;
    undefined field29097_0xf380;
    undefined field29098_0xf381;
    undefined field29099_0xf382;
    undefined field29100_0xf383;
    undefined field29101_0xf384;
    undefined field29102_0xf385;
    undefined field29103_0xf386;
    undefined field29104_0xf387;
    undefined field29105_0xf388;
    undefined field29106_0xf389;
    undefined field29107_0xf38a;
    undefined field29108_0xf38b;
    undefined field29109_0xf38c;
    undefined field29110_0xf38d;
    undefined field29111_0xf38e;
    undefined field29112_0xf38f;
    undefined field29113_0xf390;
    undefined field29114_0xf391;
    undefined field29115_0xf392;
    undefined field29116_0xf393;
    undefined field29117_0xf394;
    undefined field29118_0xf395;
    undefined field29119_0xf396;
    undefined field29120_0xf397;
    undefined field29121_0xf398;
    undefined field29122_0xf399;
    undefined field29123_0xf39a;
    undefined field29124_0xf39b;
    undefined field29125_0xf39c;
    undefined field29126_0xf39d;
    undefined field29127_0xf39e;
    undefined field29128_0xf39f;
    undefined field29129_0xf3a0;
    undefined field29130_0xf3a1;
    undefined field29131_0xf3a2;
    undefined field29132_0xf3a3;
    undefined field29133_0xf3a4;
    undefined field29134_0xf3a5;
    undefined field29135_0xf3a6;
    undefined field29136_0xf3a7;
    undefined field29137_0xf3a8;
    undefined field29138_0xf3a9;
    undefined field29139_0xf3aa;
    undefined field29140_0xf3ab;
    undefined field29141_0xf3ac;
    undefined field29142_0xf3ad;
    undefined field29143_0xf3ae;
    undefined field29144_0xf3af;
    undefined field29145_0xf3b0;
    undefined field29146_0xf3b1;
    undefined field29147_0xf3b2;
    undefined field29148_0xf3b3;
    undefined field29149_0xf3b4;
    undefined field29150_0xf3b5;
    undefined field29151_0xf3b6;
    undefined field29152_0xf3b7;
    undefined field29153_0xf3b8;
    undefined field29154_0xf3b9;
    undefined field29155_0xf3ba;
    undefined field29156_0xf3bb;
    undefined field29157_0xf3bc;
    undefined field29158_0xf3bd;
    undefined field29159_0xf3be;
    undefined field29160_0xf3bf;
    undefined field29161_0xf3c0;
    undefined field29162_0xf3c1;
    undefined field29163_0xf3c2;
    undefined field29164_0xf3c3;
    undefined field29165_0xf3c4;
    undefined field29166_0xf3c5;
    undefined field29167_0xf3c6;
    undefined field29168_0xf3c7;
    undefined field29169_0xf3c8;
    undefined field29170_0xf3c9;
    undefined field29171_0xf3ca;
    undefined field29172_0xf3cb;
    undefined field29173_0xf3cc;
    undefined field29174_0xf3cd;
    undefined field29175_0xf3ce;
    undefined field29176_0xf3cf;
    undefined field29177_0xf3d0;
    undefined field29178_0xf3d1;
    undefined field29179_0xf3d2;
    undefined field29180_0xf3d3;
    undefined field29181_0xf3d4;
    undefined field29182_0xf3d5;
    undefined field29183_0xf3d6;
    undefined field29184_0xf3d7;
    undefined field29185_0xf3d8;
    undefined field29186_0xf3d9;
    undefined field29187_0xf3da;
    undefined field29188_0xf3db;
    undefined field29189_0xf3dc;
    undefined field29190_0xf3dd;
    undefined field29191_0xf3de;
    undefined field29192_0xf3df;
    undefined field29193_0xf3e0;
    undefined field29194_0xf3e1;
    undefined field29195_0xf3e2;
    undefined field29196_0xf3e3;
    undefined field29197_0xf3e4;
    undefined field29198_0xf3e5;
    undefined field29199_0xf3e6;
    undefined field29200_0xf3e7;
    undefined field29201_0xf3e8;
    undefined field29202_0xf3e9;
    undefined field29203_0xf3ea;
    undefined field29204_0xf3eb;
    undefined field29205_0xf3ec;
    undefined field29206_0xf3ed;
    undefined field29207_0xf3ee;
    undefined field29208_0xf3ef;
    undefined field29209_0xf3f0;
    undefined field29210_0xf3f1;
    undefined field29211_0xf3f2;
    undefined field29212_0xf3f3;
    undefined field29213_0xf3f4;
    undefined field29214_0xf3f5;
    undefined field29215_0xf3f6;
    undefined field29216_0xf3f7;
    undefined field29217_0xf3f8;
    undefined field29218_0xf3f9;
    undefined field29219_0xf3fa;
    undefined field29220_0xf3fb;
    undefined field29221_0xf3fc;
    undefined field29222_0xf3fd;
    undefined field29223_0xf3fe;
    undefined field29224_0xf3ff;
    undefined field29225_0xf400;
    undefined field29226_0xf401;
    undefined field29227_0xf402;
    undefined field29228_0xf403;
    undefined field29229_0xf404;
    undefined field29230_0xf405;
    undefined field29231_0xf406;
    undefined field29232_0xf407;
    undefined field29233_0xf408;
    undefined field29234_0xf409;
    undefined field29235_0xf40a;
    undefined field29236_0xf40b;
    undefined field29237_0xf40c;
    undefined field29238_0xf40d;
    undefined field29239_0xf40e;
    undefined field29240_0xf40f;
    undefined field29241_0xf410;
    undefined field29242_0xf411;
    undefined field29243_0xf412;
    undefined field29244_0xf413;
    undefined field29245_0xf414;
    undefined field29246_0xf415;
    undefined field29247_0xf416;
    undefined field29248_0xf417;
    undefined field29249_0xf418;
    undefined field29250_0xf419;
    undefined field29251_0xf41a;
    undefined field29252_0xf41b;
    undefined field29253_0xf41c;
    undefined field29254_0xf41d;
    undefined field29255_0xf41e;
    undefined field29256_0xf41f;
    undefined field29257_0xf420;
    undefined field29258_0xf421;
    undefined field29259_0xf422;
    undefined field29260_0xf423;
    undefined field29261_0xf424;
    undefined field29262_0xf425;
    undefined field29263_0xf426;
    undefined field29264_0xf427;
    undefined field29265_0xf428;
    undefined field29266_0xf429;
    undefined field29267_0xf42a;
    undefined field29268_0xf42b;
    undefined field29269_0xf42c;
    undefined field29270_0xf42d;
    undefined field29271_0xf42e;
    undefined field29272_0xf42f;
    undefined field29273_0xf430;
    undefined field29274_0xf431;
    undefined field29275_0xf432;
    undefined field29276_0xf433;
    undefined field29277_0xf434;
    undefined field29278_0xf435;
    undefined field29279_0xf436;
    undefined field29280_0xf437;
    undefined field29281_0xf438;
    undefined field29282_0xf439;
    undefined field29283_0xf43a;
    undefined field29284_0xf43b;
    undefined field29285_0xf43c;
    undefined field29286_0xf43d;
    undefined field29287_0xf43e;
    undefined field29288_0xf43f;
    undefined field29289_0xf440;
    undefined field29290_0xf441;
    undefined field29291_0xf442;
    undefined field29292_0xf443;
    undefined field29293_0xf444;
    undefined field29294_0xf445;
    undefined field29295_0xf446;
    undefined field29296_0xf447;
    undefined field29297_0xf448;
    undefined field29298_0xf449;
    undefined field29299_0xf44a;
    undefined field29300_0xf44b;
    undefined field29301_0xf44c;
    undefined field29302_0xf44d;
    undefined field29303_0xf44e;
    undefined field29304_0xf44f;
    undefined field29305_0xf450;
    undefined field29306_0xf451;
    undefined field29307_0xf452;
    undefined field29308_0xf453;
    undefined field29309_0xf454;
    undefined field29310_0xf455;
    undefined field29311_0xf456;
    undefined field29312_0xf457;
    undefined field29313_0xf458;
    undefined field29314_0xf459;
    undefined field29315_0xf45a;
    undefined field29316_0xf45b;
    undefined field29317_0xf45c;
    undefined field29318_0xf45d;
    undefined field29319_0xf45e;
    undefined field29320_0xf45f;
    undefined field29321_0xf460;
    undefined field29322_0xf461;
    undefined field29323_0xf462;
    undefined field29324_0xf463;
    undefined field29325_0xf464;
    undefined field29326_0xf465;
    undefined field29327_0xf466;
    undefined field29328_0xf467;
    undefined field29329_0xf468;
    undefined field29330_0xf469;
    undefined field29331_0xf46a;
    undefined field29332_0xf46b;
    undefined field29333_0xf46c;
    undefined field29334_0xf46d;
    undefined field29335_0xf46e;
    undefined field29336_0xf46f;
    undefined field29337_0xf470;
    undefined field29338_0xf471;
    undefined field29339_0xf472;
    undefined field29340_0xf473;
    undefined field29341_0xf474;
    undefined field29342_0xf475;
    undefined field29343_0xf476;
    undefined field29344_0xf477;
    undefined field29345_0xf478;
    undefined field29346_0xf479;
    undefined field29347_0xf47a;
    undefined field29348_0xf47b;
    undefined field29349_0xf47c;
    undefined field29350_0xf47d;
    undefined field29351_0xf47e;
    undefined field29352_0xf47f;
    undefined field29353_0xf480;
    undefined field29354_0xf481;
    undefined field29355_0xf482;
    undefined field29356_0xf483;
    undefined field29357_0xf484;
    undefined field29358_0xf485;
    undefined field29359_0xf486;
    undefined field29360_0xf487;
    undefined field29361_0xf488;
    undefined field29362_0xf489;
    undefined field29363_0xf48a;
    undefined field29364_0xf48b;
    undefined field29365_0xf48c;
    undefined field29366_0xf48d;
    undefined field29367_0xf48e;
    undefined field29368_0xf48f;
    undefined field29369_0xf490;
    undefined field29370_0xf491;
    undefined field29371_0xf492;
    undefined field29372_0xf493;
    undefined field29373_0xf494;
    undefined field29374_0xf495;
    undefined field29375_0xf496;
    undefined field29376_0xf497;
    undefined field29377_0xf498;
    undefined field29378_0xf499;
    undefined field29379_0xf49a;
    undefined field29380_0xf49b;
    undefined field29381_0xf49c;
    undefined field29382_0xf49d;
    undefined field29383_0xf49e;
    undefined field29384_0xf49f;
    undefined field29385_0xf4a0;
    undefined field29386_0xf4a1;
    undefined field29387_0xf4a2;
    undefined field29388_0xf4a3;
    undefined field29389_0xf4a4;
    undefined field29390_0xf4a5;
    undefined field29391_0xf4a6;
    undefined field29392_0xf4a7;
    undefined field29393_0xf4a8;
    undefined field29394_0xf4a9;
    undefined field29395_0xf4aa;
    undefined field29396_0xf4ab;
    undefined field29397_0xf4ac;
    undefined field29398_0xf4ad;
    undefined field29399_0xf4ae;
    undefined field29400_0xf4af;
    undefined field29401_0xf4b0;
    undefined field29402_0xf4b1;
    undefined field29403_0xf4b2;
    undefined field29404_0xf4b3;
    undefined field29405_0xf4b4;
    undefined field29406_0xf4b5;
    undefined field29407_0xf4b6;
    undefined field29408_0xf4b7;
    undefined field29409_0xf4b8;
    undefined field29410_0xf4b9;
    undefined field29411_0xf4ba;
    undefined field29412_0xf4bb;
    undefined field29413_0xf4bc;
    undefined field29414_0xf4bd;
    undefined field29415_0xf4be;
    undefined field29416_0xf4bf;
    undefined field29417_0xf4c0;
    undefined field29418_0xf4c1;
    undefined field29419_0xf4c2;
    undefined field29420_0xf4c3;
    undefined field29421_0xf4c4;
    undefined field29422_0xf4c5;
    undefined field29423_0xf4c6;
    undefined field29424_0xf4c7;
    undefined field29425_0xf4c8;
    undefined field29426_0xf4c9;
    undefined field29427_0xf4ca;
    undefined field29428_0xf4cb;
    undefined field29429_0xf4cc;
    undefined field29430_0xf4cd;
    undefined field29431_0xf4ce;
    undefined field29432_0xf4cf;
    undefined field29433_0xf4d0;
    undefined field29434_0xf4d1;
    undefined field29435_0xf4d2;
    undefined field29436_0xf4d3;
    undefined field29437_0xf4d4;
    undefined field29438_0xf4d5;
    undefined field29439_0xf4d6;
    undefined field29440_0xf4d7;
    undefined field29441_0xf4d8;
    undefined field29442_0xf4d9;
    undefined field29443_0xf4da;
    undefined field29444_0xf4db;
    undefined field29445_0xf4dc;
    undefined field29446_0xf4dd;
    undefined field29447_0xf4de;
    undefined field29448_0xf4df;
    undefined field29449_0xf4e0;
    undefined field29450_0xf4e1;
    undefined field29451_0xf4e2;
    undefined field29452_0xf4e3;
    undefined field29453_0xf4e4;
    undefined field29454_0xf4e5;
    undefined field29455_0xf4e6;
    undefined field29456_0xf4e7;
    undefined field29457_0xf4e8;
    undefined field29458_0xf4e9;
    undefined field29459_0xf4ea;
    undefined field29460_0xf4eb;
    undefined field29461_0xf4ec;
    undefined field29462_0xf4ed;
    undefined field29463_0xf4ee;
    undefined field29464_0xf4ef;
    undefined field29465_0xf4f0;
    undefined field29466_0xf4f1;
    undefined field29467_0xf4f2;
    undefined field29468_0xf4f3;
    undefined field29469_0xf4f4;
    undefined field29470_0xf4f5;
    undefined field29471_0xf4f6;
    undefined field29472_0xf4f7;
    undefined field29473_0xf4f8;
    undefined field29474_0xf4f9;
    undefined field29475_0xf4fa;
    undefined field29476_0xf4fb;
    undefined field29477_0xf4fc;
    undefined field29478_0xf4fd;
    undefined field29479_0xf4fe;
    undefined field29480_0xf4ff;
    undefined field29481_0xf500;
    undefined field29482_0xf501;
    undefined field29483_0xf502;
    undefined field29484_0xf503;
    undefined field29485_0xf504;
    undefined field29486_0xf505;
    undefined field29487_0xf506;
    undefined field29488_0xf507;
    undefined field29489_0xf508;
    undefined field29490_0xf509;
    undefined field29491_0xf50a;
    undefined field29492_0xf50b;
    undefined field29493_0xf50c;
    undefined field29494_0xf50d;
    undefined field29495_0xf50e;
    undefined field29496_0xf50f;
    undefined field29497_0xf510;
    undefined field29498_0xf511;
    undefined field29499_0xf512;
    undefined field29500_0xf513;
    undefined field29501_0xf514;
    undefined field29502_0xf515;
    undefined field29503_0xf516;
    undefined field29504_0xf517;
    undefined field29505_0xf518;
    undefined field29506_0xf519;
    undefined field29507_0xf51a;
    undefined field29508_0xf51b;
    undefined field29509_0xf51c;
    undefined field29510_0xf51d;
    undefined field29511_0xf51e;
    undefined field29512_0xf51f;
    undefined field29513_0xf520;
    undefined field29514_0xf521;
    undefined field29515_0xf522;
    undefined field29516_0xf523;
    undefined field29517_0xf524;
    undefined field29518_0xf525;
    undefined field29519_0xf526;
    undefined field29520_0xf527;
    undefined field29521_0xf528;
    undefined field29522_0xf529;
    undefined field29523_0xf52a;
    undefined field29524_0xf52b;
    undefined field29525_0xf52c;
    undefined field29526_0xf52d;
    undefined field29527_0xf52e;
    undefined field29528_0xf52f;
    undefined field29529_0xf530;
    undefined field29530_0xf531;
    undefined field29531_0xf532;
    undefined field29532_0xf533;
    undefined field29533_0xf534;
    undefined field29534_0xf535;
    undefined field29535_0xf536;
    undefined field29536_0xf537;
    undefined field29537_0xf538;
    undefined field29538_0xf539;
    undefined field29539_0xf53a;
    undefined field29540_0xf53b;
    undefined field29541_0xf53c;
    undefined field29542_0xf53d;
    undefined field29543_0xf53e;
    undefined field29544_0xf53f;
    undefined field29545_0xf540;
    undefined field29546_0xf541;
    undefined field29547_0xf542;
    undefined field29548_0xf543;
    undefined field29549_0xf544;
    undefined field29550_0xf545;
    undefined field29551_0xf546;
    undefined field29552_0xf547;
    undefined field29553_0xf548;
    undefined field29554_0xf549;
    undefined field29555_0xf54a;
    undefined field29556_0xf54b;
    undefined field29557_0xf54c;
    undefined field29558_0xf54d;
    undefined field29559_0xf54e;
    undefined field29560_0xf54f;
    undefined field29561_0xf550;
    undefined field29562_0xf551;
    undefined field29563_0xf552;
    undefined field29564_0xf553;
    undefined field29565_0xf554;
    undefined field29566_0xf555;
    undefined field29567_0xf556;
    undefined field29568_0xf557;
    undefined field29569_0xf558;
    undefined field29570_0xf559;
    undefined field29571_0xf55a;
    undefined field29572_0xf55b;
    undefined field29573_0xf55c;
    undefined field29574_0xf55d;
    undefined field29575_0xf55e;
    undefined field29576_0xf55f;
    undefined field29577_0xf560;
    undefined field29578_0xf561;
    undefined field29579_0xf562;
    undefined field29580_0xf563;
    undefined field29581_0xf564;
    undefined field29582_0xf565;
    undefined field29583_0xf566;
    undefined field29584_0xf567;
    undefined field29585_0xf568;
    undefined field29586_0xf569;
    undefined field29587_0xf56a;
    undefined field29588_0xf56b;
    undefined field29589_0xf56c;
    undefined field29590_0xf56d;
    undefined field29591_0xf56e;
    undefined field29592_0xf56f;
    undefined field29593_0xf570;
    undefined field29594_0xf571;
    undefined field29595_0xf572;
    undefined field29596_0xf573;
    undefined field29597_0xf574;
    undefined field29598_0xf575;
    undefined field29599_0xf576;
    undefined field29600_0xf577;
    undefined field29601_0xf578;
    undefined field29602_0xf579;
    undefined field29603_0xf57a;
    undefined field29604_0xf57b;
    undefined field29605_0xf57c;
    undefined field29606_0xf57d;
    undefined field29607_0xf57e;
    undefined field29608_0xf57f;
    undefined field29609_0xf580;
    undefined field29610_0xf581;
    undefined field29611_0xf582;
    undefined field29612_0xf583;
    undefined field29613_0xf584;
    undefined field29614_0xf585;
    undefined field29615_0xf586;
    undefined field29616_0xf587;
    undefined field29617_0xf588;
    undefined field29618_0xf589;
    undefined field29619_0xf58a;
    undefined field29620_0xf58b;
    undefined field29621_0xf58c;
    undefined field29622_0xf58d;
    undefined field29623_0xf58e;
    undefined field29624_0xf58f;
    undefined field29625_0xf590;
    undefined field29626_0xf591;
    undefined field29627_0xf592;
    undefined field29628_0xf593;
    undefined field29629_0xf594;
    undefined field29630_0xf595;
    undefined field29631_0xf596;
    undefined field29632_0xf597;
    undefined field29633_0xf598;
    undefined field29634_0xf599;
    undefined field29635_0xf59a;
    undefined field29636_0xf59b;
    undefined field29637_0xf59c;
    undefined field29638_0xf59d;
    undefined field29639_0xf59e;
    undefined field29640_0xf59f;
    undefined field29641_0xf5a0;
    undefined field29642_0xf5a1;
    undefined field29643_0xf5a2;
    undefined field29644_0xf5a3;
    undefined field29645_0xf5a4;
    undefined field29646_0xf5a5;
    undefined field29647_0xf5a6;
    undefined field29648_0xf5a7;
    undefined field29649_0xf5a8;
    undefined field29650_0xf5a9;
    undefined field29651_0xf5aa;
    undefined field29652_0xf5ab;
    undefined field29653_0xf5ac;
    undefined field29654_0xf5ad;
    undefined field29655_0xf5ae;
    undefined field29656_0xf5af;
    undefined field29657_0xf5b0;
    undefined field29658_0xf5b1;
    undefined field29659_0xf5b2;
    undefined field29660_0xf5b3;
    undefined field29661_0xf5b4;
    undefined field29662_0xf5b5;
    undefined field29663_0xf5b6;
    undefined field29664_0xf5b7;
    undefined field29665_0xf5b8;
    undefined field29666_0xf5b9;
    undefined field29667_0xf5ba;
    undefined field29668_0xf5bb;
    undefined field29669_0xf5bc;
    undefined field29670_0xf5bd;
    undefined field29671_0xf5be;
    undefined field29672_0xf5bf;
    undefined field29673_0xf5c0;
    undefined field29674_0xf5c1;
    undefined field29675_0xf5c2;
    undefined field29676_0xf5c3;
    undefined field29677_0xf5c4;
    undefined field29678_0xf5c5;
    undefined field29679_0xf5c6;
    undefined field29680_0xf5c7;
    undefined field29681_0xf5c8;
    undefined field29682_0xf5c9;
    undefined field29683_0xf5ca;
    undefined field29684_0xf5cb;
    undefined field29685_0xf5cc;
    undefined field29686_0xf5cd;
    undefined field29687_0xf5ce;
    undefined field29688_0xf5cf;
    undefined field29689_0xf5d0;
    undefined field29690_0xf5d1;
    undefined field29691_0xf5d2;
    undefined field29692_0xf5d3;
    undefined field29693_0xf5d4;
    undefined field29694_0xf5d5;
    undefined field29695_0xf5d6;
    undefined field29696_0xf5d7;
    undefined field29697_0xf5d8;
    undefined field29698_0xf5d9;
    undefined field29699_0xf5da;
    undefined field29700_0xf5db;
    undefined field29701_0xf5dc;
    undefined field29702_0xf5dd;
    undefined field29703_0xf5de;
    undefined field29704_0xf5df;
    undefined field29705_0xf5e0;
    undefined field29706_0xf5e1;
    undefined field29707_0xf5e2;
    undefined field29708_0xf5e3;
    undefined field29709_0xf5e4;
    undefined field29710_0xf5e5;
    undefined field29711_0xf5e6;
    undefined field29712_0xf5e7;
    undefined field29713_0xf5e8;
    undefined field29714_0xf5e9;
    undefined field29715_0xf5ea;
    undefined field29716_0xf5eb;
    undefined field29717_0xf5ec;
    undefined field29718_0xf5ed;
    undefined field29719_0xf5ee;
    undefined field29720_0xf5ef;
    undefined field29721_0xf5f0;
    undefined field29722_0xf5f1;
    undefined field29723_0xf5f2;
    undefined field29724_0xf5f3;
    undefined field29725_0xf5f4;
    undefined field29726_0xf5f5;
    undefined field29727_0xf5f6;
    undefined field29728_0xf5f7;
    undefined field29729_0xf5f8;
    undefined field29730_0xf5f9;
    undefined field29731_0xf5fa;
    undefined field29732_0xf5fb;
    undefined field29733_0xf5fc;
    undefined field29734_0xf5fd;
    undefined field29735_0xf5fe;
    undefined field29736_0xf5ff;
    undefined field29737_0xf600;
    undefined field29738_0xf601;
    undefined field29739_0xf602;
    undefined field29740_0xf603;
    undefined field29741_0xf604;
    undefined field29742_0xf605;
    undefined field29743_0xf606;
    undefined field29744_0xf607;
    undefined field29745_0xf608;
    undefined field29746_0xf609;
    undefined field29747_0xf60a;
    undefined field29748_0xf60b;
    undefined field29749_0xf60c;
    undefined field29750_0xf60d;
    undefined field29751_0xf60e;
    undefined field29752_0xf60f;
    undefined field29753_0xf610;
    undefined field29754_0xf611;
    undefined field29755_0xf612;
    undefined field29756_0xf613;
    undefined field29757_0xf614;
    undefined field29758_0xf615;
    undefined field29759_0xf616;
    undefined field29760_0xf617;
    undefined field29761_0xf618;
    undefined field29762_0xf619;
    undefined field29763_0xf61a;
    undefined field29764_0xf61b;
    undefined field29765_0xf61c;
    undefined field29766_0xf61d;
    undefined field29767_0xf61e;
    undefined field29768_0xf61f;
    undefined field29769_0xf620;
    undefined field29770_0xf621;
    undefined field29771_0xf622;
    undefined field29772_0xf623;
    undefined field29773_0xf624;
    undefined field29774_0xf625;
    undefined field29775_0xf626;
    undefined field29776_0xf627;
    undefined field29777_0xf628;
    undefined field29778_0xf629;
    undefined field29779_0xf62a;
    undefined field29780_0xf62b;
    undefined field29781_0xf62c;
    undefined field29782_0xf62d;
    undefined field29783_0xf62e;
    undefined field29784_0xf62f;
    undefined field29785_0xf630;
    undefined field29786_0xf631;
    undefined field29787_0xf632;
    undefined field29788_0xf633;
    undefined field29789_0xf634;
    undefined field29790_0xf635;
    undefined field29791_0xf636;
    undefined field29792_0xf637;
    undefined field29793_0xf638;
    undefined field29794_0xf639;
    undefined field29795_0xf63a;
    undefined field29796_0xf63b;
    undefined field29797_0xf63c;
    undefined field29798_0xf63d;
    undefined field29799_0xf63e;
    undefined field29800_0xf63f;
    undefined field29801_0xf640;
    undefined field29802_0xf641;
    undefined field29803_0xf642;
    undefined field29804_0xf643;
    undefined field29805_0xf644;
    undefined field29806_0xf645;
    undefined field29807_0xf646;
    undefined field29808_0xf647;
    undefined field29809_0xf648;
    undefined field29810_0xf649;
    undefined field29811_0xf64a;
    undefined field29812_0xf64b;
    undefined field29813_0xf64c;
    undefined field29814_0xf64d;
    undefined field29815_0xf64e;
    undefined field29816_0xf64f;
    undefined field29817_0xf650;
    undefined field29818_0xf651;
    undefined field29819_0xf652;
    undefined field29820_0xf653;
    undefined field29821_0xf654;
    undefined field29822_0xf655;
    undefined field29823_0xf656;
    undefined field29824_0xf657;
    undefined field29825_0xf658;
    undefined field29826_0xf659;
    undefined field29827_0xf65a;
    undefined field29828_0xf65b;
    undefined field29829_0xf65c;
    undefined field29830_0xf65d;
    undefined field29831_0xf65e;
    undefined field29832_0xf65f;
    undefined field29833_0xf660;
    undefined field29834_0xf661;
    undefined field29835_0xf662;
    undefined field29836_0xf663;
    undefined field29837_0xf664;
    undefined field29838_0xf665;
    undefined field29839_0xf666;
    undefined field29840_0xf667;
    undefined field29841_0xf668;
    undefined field29842_0xf669;
    undefined field29843_0xf66a;
    undefined field29844_0xf66b;
    undefined field29845_0xf66c;
    undefined field29846_0xf66d;
    undefined field29847_0xf66e;
    undefined field29848_0xf66f;
    undefined field29849_0xf670;
    undefined field29850_0xf671;
    undefined field29851_0xf672;
    undefined field29852_0xf673;
    undefined field29853_0xf674;
    undefined field29854_0xf675;
    undefined field29855_0xf676;
    undefined field29856_0xf677;
    undefined field29857_0xf678;
    undefined field29858_0xf679;
    undefined field29859_0xf67a;
    undefined field29860_0xf67b;
    undefined field29861_0xf67c;
    undefined field29862_0xf67d;
    undefined field29863_0xf67e;
    undefined field29864_0xf67f;
    undefined field29865_0xf680;
    undefined field29866_0xf681;
    undefined field29867_0xf682;
    undefined field29868_0xf683;
    undefined field29869_0xf684;
    undefined field29870_0xf685;
    undefined field29871_0xf686;
    undefined field29872_0xf687;
    undefined field29873_0xf688;
    undefined field29874_0xf689;
    undefined field29875_0xf68a;
    undefined field29876_0xf68b;
    undefined field29877_0xf68c;
    undefined field29878_0xf68d;
    undefined field29879_0xf68e;
    undefined field29880_0xf68f;
    undefined field29881_0xf690;
    undefined field29882_0xf691;
    undefined field29883_0xf692;
    undefined field29884_0xf693;
    undefined field29885_0xf694;
    undefined field29886_0xf695;
    undefined field29887_0xf696;
    undefined field29888_0xf697;
    undefined field29889_0xf698;
    undefined field29890_0xf699;
    undefined field29891_0xf69a;
    undefined field29892_0xf69b;
    undefined field29893_0xf69c;
    undefined field29894_0xf69d;
    undefined field29895_0xf69e;
    undefined field29896_0xf69f;
    undefined field29897_0xf6a0;
    undefined field29898_0xf6a1;
    undefined field29899_0xf6a2;
    undefined field29900_0xf6a3;
    undefined field29901_0xf6a4;
    undefined field29902_0xf6a5;
    undefined field29903_0xf6a6;
    undefined field29904_0xf6a7;
    undefined field29905_0xf6a8;
    undefined field29906_0xf6a9;
    undefined field29907_0xf6aa;
    undefined field29908_0xf6ab;
    undefined field29909_0xf6ac;
    undefined field29910_0xf6ad;
    undefined field29911_0xf6ae;
    undefined field29912_0xf6af;
    undefined field29913_0xf6b0;
    undefined field29914_0xf6b1;
    undefined field29915_0xf6b2;
    undefined field29916_0xf6b3;
    undefined field29917_0xf6b4;
    undefined field29918_0xf6b5;
    undefined field29919_0xf6b6;
    undefined field29920_0xf6b7;
    undefined field29921_0xf6b8;
    undefined field29922_0xf6b9;
    undefined field29923_0xf6ba;
    undefined field29924_0xf6bb;
    undefined field29925_0xf6bc;
    undefined field29926_0xf6bd;
    undefined field29927_0xf6be;
    undefined field29928_0xf6bf;
    undefined field29929_0xf6c0;
    undefined field29930_0xf6c1;
    undefined field29931_0xf6c2;
    undefined field29932_0xf6c3;
    undefined field29933_0xf6c4;
    undefined field29934_0xf6c5;
    undefined field29935_0xf6c6;
    undefined field29936_0xf6c7;
    undefined field29937_0xf6c8;
    undefined field29938_0xf6c9;
    undefined field29939_0xf6ca;
    undefined field29940_0xf6cb;
    undefined field29941_0xf6cc;
    undefined field29942_0xf6cd;
    undefined field29943_0xf6ce;
    undefined field29944_0xf6cf;
    undefined field29945_0xf6d0;
    undefined field29946_0xf6d1;
    undefined field29947_0xf6d2;
    undefined field29948_0xf6d3;
    undefined field29949_0xf6d4;
    undefined field29950_0xf6d5;
    undefined field29951_0xf6d6;
    undefined field29952_0xf6d7;
    undefined field29953_0xf6d8;
    undefined field29954_0xf6d9;
    undefined field29955_0xf6da;
    undefined field29956_0xf6db;
    undefined field29957_0xf6dc;
    undefined field29958_0xf6dd;
    undefined field29959_0xf6de;
    undefined field29960_0xf6df;
    undefined field29961_0xf6e0;
    undefined field29962_0xf6e1;
    undefined field29963_0xf6e2;
    undefined field29964_0xf6e3;
    undefined field29965_0xf6e4;
    undefined field29966_0xf6e5;
    undefined field29967_0xf6e6;
    undefined field29968_0xf6e7;
    undefined field29969_0xf6e8;
    undefined field29970_0xf6e9;
    undefined field29971_0xf6ea;
    undefined field29972_0xf6eb;
    undefined field29973_0xf6ec;
    undefined field29974_0xf6ed;
    undefined field29975_0xf6ee;
    undefined field29976_0xf6ef;
    undefined field29977_0xf6f0;
    undefined field29978_0xf6f1;
    undefined field29979_0xf6f2;
    undefined field29980_0xf6f3;
    undefined field29981_0xf6f4;
    undefined field29982_0xf6f5;
    undefined field29983_0xf6f6;
    undefined field29984_0xf6f7;
    undefined field29985_0xf6f8;
    undefined field29986_0xf6f9;
    undefined field29987_0xf6fa;
    undefined field29988_0xf6fb;
    undefined field29989_0xf6fc;
    undefined field29990_0xf6fd;
    undefined field29991_0xf6fe;
    undefined field29992_0xf6ff;
    undefined field29993_0xf700;
    undefined field29994_0xf701;
    undefined field29995_0xf702;
    undefined field29996_0xf703;
    undefined field29997_0xf704;
    undefined field29998_0xf705;
    undefined field29999_0xf706;
    undefined field30000_0xf707;
    undefined field30001_0xf708;
    undefined field30002_0xf709;
    undefined field30003_0xf70a;
    undefined field30004_0xf70b;
    undefined field30005_0xf70c;
    undefined field30006_0xf70d;
    undefined field30007_0xf70e;
    undefined field30008_0xf70f;
    undefined field30009_0xf710;
    undefined field30010_0xf711;
    undefined field30011_0xf712;
    undefined field30012_0xf713;
    undefined field30013_0xf714;
    undefined field30014_0xf715;
    undefined field30015_0xf716;
    undefined field30016_0xf717;
    undefined field30017_0xf718;
    undefined field30018_0xf719;
    undefined field30019_0xf71a;
    undefined field30020_0xf71b;
    undefined field30021_0xf71c;
    undefined field30022_0xf71d;
    undefined field30023_0xf71e;
    undefined field30024_0xf71f;
    undefined field30025_0xf720;
    undefined field30026_0xf721;
    undefined field30027_0xf722;
    undefined field30028_0xf723;
    undefined field30029_0xf724;
    undefined field30030_0xf725;
    undefined field30031_0xf726;
    undefined field30032_0xf727;
    undefined field30033_0xf728;
    undefined field30034_0xf729;
    undefined field30035_0xf72a;
    undefined field30036_0xf72b;
    undefined field30037_0xf72c;
    undefined field30038_0xf72d;
    undefined field30039_0xf72e;
    undefined field30040_0xf72f;
    undefined field30041_0xf730;
    undefined field30042_0xf731;
    undefined field30043_0xf732;
    undefined field30044_0xf733;
    undefined field30045_0xf734;
    undefined field30046_0xf735;
    undefined field30047_0xf736;
    undefined field30048_0xf737;
    undefined field30049_0xf738;
    undefined field30050_0xf739;
    undefined field30051_0xf73a;
    undefined field30052_0xf73b;
    undefined field30053_0xf73c;
    undefined field30054_0xf73d;
    undefined field30055_0xf73e;
    undefined field30056_0xf73f;
    undefined field30057_0xf740;
    undefined field30058_0xf741;
    undefined field30059_0xf742;
    undefined field30060_0xf743;
    undefined field30061_0xf744;
    undefined field30062_0xf745;
    undefined field30063_0xf746;
    undefined field30064_0xf747;
    undefined field30065_0xf748;
    undefined field30066_0xf749;
    undefined field30067_0xf74a;
    undefined field30068_0xf74b;
    undefined field30069_0xf74c;
    undefined field30070_0xf74d;
    undefined field30071_0xf74e;
    undefined field30072_0xf74f;
    undefined field30073_0xf750;
    undefined field30074_0xf751;
    undefined field30075_0xf752;
    undefined field30076_0xf753;
    undefined field30077_0xf754;
    undefined field30078_0xf755;
    undefined field30079_0xf756;
    undefined field30080_0xf757;
    undefined field30081_0xf758;
    undefined field30082_0xf759;
    undefined field30083_0xf75a;
    undefined field30084_0xf75b;
    undefined field30085_0xf75c;
    undefined field30086_0xf75d;
    undefined field30087_0xf75e;
    undefined field30088_0xf75f;
    undefined field30089_0xf760;
    undefined field30090_0xf761;
    undefined field30091_0xf762;
    undefined field30092_0xf763;
    undefined field30093_0xf764;
    undefined field30094_0xf765;
    undefined field30095_0xf766;
    undefined field30096_0xf767;
    undefined field30097_0xf768;
    undefined field30098_0xf769;
    undefined field30099_0xf76a;
    undefined field30100_0xf76b;
    undefined field30101_0xf76c;
    undefined field30102_0xf76d;
    undefined field30103_0xf76e;
    undefined field30104_0xf76f;
    undefined field30105_0xf770;
    undefined field30106_0xf771;
    undefined field30107_0xf772;
    undefined field30108_0xf773;
    undefined field30109_0xf774;
    undefined field30110_0xf775;
    undefined field30111_0xf776;
    undefined field30112_0xf777;
    undefined field30113_0xf778;
    undefined field30114_0xf779;
    undefined field30115_0xf77a;
    undefined field30116_0xf77b;
    undefined field30117_0xf77c;
    undefined field30118_0xf77d;
    undefined field30119_0xf77e;
    undefined field30120_0xf77f;
    undefined field30121_0xf780;
    undefined field30122_0xf781;
    undefined field30123_0xf782;
    undefined field30124_0xf783;
    undefined field30125_0xf784;
    undefined field30126_0xf785;
    undefined field30127_0xf786;
    undefined field30128_0xf787;
    undefined field30129_0xf788;
    undefined field30130_0xf789;
    undefined field30131_0xf78a;
    undefined field30132_0xf78b;
    undefined field30133_0xf78c;
    undefined field30134_0xf78d;
    undefined field30135_0xf78e;
    undefined field30136_0xf78f;
    undefined field30137_0xf790;
    undefined field30138_0xf791;
    undefined field30139_0xf792;
    undefined field30140_0xf793;
    undefined field30141_0xf794;
    undefined field30142_0xf795;
    undefined field30143_0xf796;
    undefined field30144_0xf797;
    undefined field30145_0xf798;
    undefined field30146_0xf799;
    undefined field30147_0xf79a;
    undefined field30148_0xf79b;
    undefined field30149_0xf79c;
    undefined field30150_0xf79d;
    undefined field30151_0xf79e;
    undefined field30152_0xf79f;
    undefined field30153_0xf7a0;
    undefined field30154_0xf7a1;
    undefined field30155_0xf7a2;
    undefined field30156_0xf7a3;
    undefined field30157_0xf7a4;
    undefined field30158_0xf7a5;
    undefined field30159_0xf7a6;
    undefined field30160_0xf7a7;
    undefined field30161_0xf7a8;
    undefined field30162_0xf7a9;
    undefined field30163_0xf7aa;
    undefined field30164_0xf7ab;
    undefined field30165_0xf7ac;
    undefined field30166_0xf7ad;
    undefined field30167_0xf7ae;
    undefined field30168_0xf7af;
    undefined field30169_0xf7b0;
    undefined field30170_0xf7b1;
    undefined field30171_0xf7b2;
    undefined field30172_0xf7b3;
    undefined field30173_0xf7b4;
    undefined field30174_0xf7b5;
    undefined field30175_0xf7b6;
    undefined field30176_0xf7b7;
    undefined field30177_0xf7b8;
    undefined field30178_0xf7b9;
    undefined field30179_0xf7ba;
    undefined field30180_0xf7bb;
    undefined field30181_0xf7bc;
    undefined field30182_0xf7bd;
    undefined field30183_0xf7be;
    undefined field30184_0xf7bf;
    undefined field30185_0xf7c0;
    undefined field30186_0xf7c1;
    undefined field30187_0xf7c2;
    undefined field30188_0xf7c3;
    undefined field30189_0xf7c4;
    undefined field30190_0xf7c5;
    undefined field30191_0xf7c6;
    undefined field30192_0xf7c7;
    undefined field30193_0xf7c8;
    undefined field30194_0xf7c9;
    undefined field30195_0xf7ca;
    undefined field30196_0xf7cb;
    undefined field30197_0xf7cc;
    undefined field30198_0xf7cd;
    undefined field30199_0xf7ce;
    undefined field30200_0xf7cf;
    undefined field30201_0xf7d0;
    undefined field30202_0xf7d1;
    undefined field30203_0xf7d2;
    undefined field30204_0xf7d3;
    undefined field30205_0xf7d4;
    undefined field30206_0xf7d5;
    undefined field30207_0xf7d6;
    undefined field30208_0xf7d7;
    undefined field30209_0xf7d8;
    undefined field30210_0xf7d9;
    undefined field30211_0xf7da;
    undefined field30212_0xf7db;
    undefined field30213_0xf7dc;
    undefined field30214_0xf7dd;
    undefined field30215_0xf7de;
    undefined field30216_0xf7df;
    undefined field30217_0xf7e0;
    undefined field30218_0xf7e1;
    undefined field30219_0xf7e2;
    undefined field30220_0xf7e3;
    undefined field30221_0xf7e4;
    undefined field30222_0xf7e5;
    undefined field30223_0xf7e6;
    undefined field30224_0xf7e7;
    undefined field30225_0xf7e8;
    undefined field30226_0xf7e9;
    undefined field30227_0xf7ea;
    undefined field30228_0xf7eb;
    undefined field30229_0xf7ec;
    undefined field30230_0xf7ed;
    undefined field30231_0xf7ee;
    undefined field30232_0xf7ef;
    undefined field30233_0xf7f0;
    undefined field30234_0xf7f1;
    undefined field30235_0xf7f2;
    undefined field30236_0xf7f3;
    undefined field30237_0xf7f4;
    undefined field30238_0xf7f5;
    undefined field30239_0xf7f6;
    undefined field30240_0xf7f7;
    undefined field30241_0xf7f8;
    undefined field30242_0xf7f9;
    undefined field30243_0xf7fa;
    undefined field30244_0xf7fb;
    undefined field30245_0xf7fc;
    undefined field30246_0xf7fd;
    undefined field30247_0xf7fe;
    undefined field30248_0xf7ff;
    undefined field30249_0xf800;
    undefined field30250_0xf801;
    undefined field30251_0xf802;
    undefined field30252_0xf803;
    undefined field30253_0xf804;
    undefined field30254_0xf805;
    undefined field30255_0xf806;
    undefined field30256_0xf807;
    undefined field30257_0xf808;
    undefined field30258_0xf809;
    undefined field30259_0xf80a;
    undefined field30260_0xf80b;
    undefined field30261_0xf80c;
    undefined field30262_0xf80d;
    undefined field30263_0xf80e;
    undefined field30264_0xf80f;
    undefined field30265_0xf810;
    undefined field30266_0xf811;
    undefined field30267_0xf812;
    undefined field30268_0xf813;
    undefined field30269_0xf814;
    undefined field30270_0xf815;
    undefined field30271_0xf816;
    undefined field30272_0xf817;
    undefined field30273_0xf818;
    undefined field30274_0xf819;
    undefined field30275_0xf81a;
    undefined field30276_0xf81b;
    undefined field30277_0xf81c;
    undefined field30278_0xf81d;
    undefined field30279_0xf81e;
    undefined field30280_0xf81f;
    undefined field30281_0xf820;
    undefined field30282_0xf821;
    undefined field30283_0xf822;
    undefined field30284_0xf823;
    undefined field30285_0xf824;
    undefined field30286_0xf825;
    undefined field30287_0xf826;
    undefined field30288_0xf827;
    undefined field30289_0xf828;
    undefined field30290_0xf829;
    undefined field30291_0xf82a;
    undefined field30292_0xf82b;
    undefined field30293_0xf82c;
    undefined field30294_0xf82d;
    undefined field30295_0xf82e;
    undefined field30296_0xf82f;
    undefined field30297_0xf830;
    undefined field30298_0xf831;
    undefined field30299_0xf832;
    undefined field30300_0xf833;
    undefined field30301_0xf834;
    undefined field30302_0xf835;
    undefined field30303_0xf836;
    undefined field30304_0xf837;
    undefined field30305_0xf838;
    undefined field30306_0xf839;
    undefined field30307_0xf83a;
    undefined field30308_0xf83b;
    undefined field30309_0xf83c;
    undefined field30310_0xf83d;
    undefined field30311_0xf83e;
    undefined field30312_0xf83f;
    undefined field30313_0xf840;
    undefined field30314_0xf841;
    undefined field30315_0xf842;
    undefined field30316_0xf843;
    undefined field30317_0xf844;
    undefined field30318_0xf845;
    undefined field30319_0xf846;
    undefined field30320_0xf847;
    undefined field30321_0xf848;
    undefined field30322_0xf849;
    undefined field30323_0xf84a;
    undefined field30324_0xf84b;
    undefined field30325_0xf84c;
    undefined field30326_0xf84d;
    undefined field30327_0xf84e;
    undefined field30328_0xf84f;
    undefined field30329_0xf850;
    undefined field30330_0xf851;
    undefined field30331_0xf852;
    undefined field30332_0xf853;
    undefined field30333_0xf854;
    undefined field30334_0xf855;
    undefined field30335_0xf856;
    undefined field30336_0xf857;
    undefined field30337_0xf858;
    undefined field30338_0xf859;
    undefined field30339_0xf85a;
    undefined field30340_0xf85b;
    undefined field30341_0xf85c;
    undefined field30342_0xf85d;
    undefined field30343_0xf85e;
    undefined field30344_0xf85f;
    undefined field30345_0xf860;
    undefined field30346_0xf861;
    undefined field30347_0xf862;
    undefined field30348_0xf863;
    undefined field30349_0xf864;
    undefined field30350_0xf865;
    undefined field30351_0xf866;
    undefined field30352_0xf867;
    undefined field30353_0xf868;
    undefined field30354_0xf869;
    undefined field30355_0xf86a;
    undefined field30356_0xf86b;
    undefined field30357_0xf86c;
    undefined field30358_0xf86d;
    undefined field30359_0xf86e;
    undefined field30360_0xf86f;
    undefined field30361_0xf870;
    undefined field30362_0xf871;
    undefined field30363_0xf872;
    undefined field30364_0xf873;
    undefined field30365_0xf874;
    undefined field30366_0xf875;
    undefined field30367_0xf876;
    undefined field30368_0xf877;
    undefined field30369_0xf878;
    undefined field30370_0xf879;
    undefined field30371_0xf87a;
    undefined field30372_0xf87b;
    undefined field30373_0xf87c;
    undefined field30374_0xf87d;
    undefined field30375_0xf87e;
    undefined field30376_0xf87f;
    undefined field30377_0xf880;
    undefined field30378_0xf881;
    undefined field30379_0xf882;
    undefined field30380_0xf883;
    undefined field30381_0xf884;
    undefined field30382_0xf885;
    undefined field30383_0xf886;
    undefined field30384_0xf887;
    undefined field30385_0xf888;
    undefined field30386_0xf889;
    undefined field30387_0xf88a;
    undefined field30388_0xf88b;
    undefined field30389_0xf88c;
    undefined field30390_0xf88d;
    undefined field30391_0xf88e;
    undefined field30392_0xf88f;
    undefined field30393_0xf890;
    undefined field30394_0xf891;
    undefined field30395_0xf892;
    undefined field30396_0xf893;
    undefined field30397_0xf894;
    undefined field30398_0xf895;
    undefined field30399_0xf896;
    undefined field30400_0xf897;
    undefined field30401_0xf898;
    undefined field30402_0xf899;
    undefined field30403_0xf89a;
    undefined field30404_0xf89b;
    undefined field30405_0xf89c;
    undefined field30406_0xf89d;
    undefined field30407_0xf89e;
    undefined field30408_0xf89f;
    undefined field30409_0xf8a0;
    undefined field30410_0xf8a1;
    undefined field30411_0xf8a2;
    undefined field30412_0xf8a3;
    undefined field30413_0xf8a4;
    undefined field30414_0xf8a5;
    undefined field30415_0xf8a6;
    undefined field30416_0xf8a7;
    undefined field30417_0xf8a8;
    undefined field30418_0xf8a9;
    undefined field30419_0xf8aa;
    undefined field30420_0xf8ab;
    undefined field30421_0xf8ac;
    undefined field30422_0xf8ad;
    undefined field30423_0xf8ae;
    undefined field30424_0xf8af;
    undefined field30425_0xf8b0;
    undefined field30426_0xf8b1;
    undefined field30427_0xf8b2;
    undefined field30428_0xf8b3;
    undefined field30429_0xf8b4;
    undefined field30430_0xf8b5;
    undefined field30431_0xf8b6;
    undefined field30432_0xf8b7;
    undefined field30433_0xf8b8;
    undefined field30434_0xf8b9;
    undefined field30435_0xf8ba;
    undefined field30436_0xf8bb;
    undefined field30437_0xf8bc;
    undefined field30438_0xf8bd;
    undefined field30439_0xf8be;
    undefined field30440_0xf8bf;
    undefined field30441_0xf8c0;
    undefined field30442_0xf8c1;
    undefined field30443_0xf8c2;
    undefined field30444_0xf8c3;
    undefined field30445_0xf8c4;
    undefined field30446_0xf8c5;
    undefined field30447_0xf8c6;
    undefined field30448_0xf8c7;
    undefined field30449_0xf8c8;
    undefined field30450_0xf8c9;
    undefined field30451_0xf8ca;
    undefined field30452_0xf8cb;
    undefined field30453_0xf8cc;
    undefined field30454_0xf8cd;
    undefined field30455_0xf8ce;
    undefined field30456_0xf8cf;
    undefined field30457_0xf8d0;
    undefined field30458_0xf8d1;
    undefined field30459_0xf8d2;
    undefined field30460_0xf8d3;
    undefined field30461_0xf8d4;
    undefined field30462_0xf8d5;
    undefined field30463_0xf8d6;
    undefined field30464_0xf8d7;
    undefined field30465_0xf8d8;
    undefined field30466_0xf8d9;
    undefined field30467_0xf8da;
    undefined field30468_0xf8db;
    undefined field30469_0xf8dc;
    undefined field30470_0xf8dd;
    undefined field30471_0xf8de;
    undefined field30472_0xf8df;
    undefined field30473_0xf8e0;
    undefined field30474_0xf8e1;
    undefined field30475_0xf8e2;
    undefined field30476_0xf8e3;
    undefined field30477_0xf8e4;
    undefined field30478_0xf8e5;
    undefined field30479_0xf8e6;
    undefined field30480_0xf8e7;
    undefined field30481_0xf8e8;
    undefined field30482_0xf8e9;
    undefined field30483_0xf8ea;
    undefined field30484_0xf8eb;
    undefined field30485_0xf8ec;
    undefined field30486_0xf8ed;
    undefined field30487_0xf8ee;
    undefined field30488_0xf8ef;
    undefined field30489_0xf8f0;
    undefined field30490_0xf8f1;
    undefined field30491_0xf8f2;
    undefined field30492_0xf8f3;
    undefined field30493_0xf8f4;
    undefined field30494_0xf8f5;
    undefined field30495_0xf8f6;
    undefined field30496_0xf8f7;
    undefined field30497_0xf8f8;
    undefined field30498_0xf8f9;
    undefined field30499_0xf8fa;
    undefined field30500_0xf8fb;
    undefined field30501_0xf8fc;
    undefined field30502_0xf8fd;
    undefined field30503_0xf8fe;
    undefined field30504_0xf8ff;
    undefined field30505_0xf900;
    undefined field30506_0xf901;
    undefined field30507_0xf902;
    undefined field30508_0xf903;
    undefined field30509_0xf904;
    undefined field30510_0xf905;
    undefined field30511_0xf906;
    undefined field30512_0xf907;
    undefined field30513_0xf908;
    undefined field30514_0xf909;
    undefined field30515_0xf90a;
    undefined field30516_0xf90b;
    undefined field30517_0xf90c;
    undefined field30518_0xf90d;
    undefined field30519_0xf90e;
    undefined field30520_0xf90f;
    undefined field30521_0xf910;
    undefined field30522_0xf911;
    undefined field30523_0xf912;
    undefined field30524_0xf913;
    undefined field30525_0xf914;
    undefined field30526_0xf915;
    undefined field30527_0xf916;
    undefined field30528_0xf917;
    undefined field30529_0xf918;
    undefined field30530_0xf919;
    undefined field30531_0xf91a;
    undefined field30532_0xf91b;
    undefined field30533_0xf91c;
    undefined field30534_0xf91d;
    undefined field30535_0xf91e;
    undefined field30536_0xf91f;
    undefined field30537_0xf920;
    undefined field30538_0xf921;
    undefined field30539_0xf922;
    undefined field30540_0xf923;
    undefined field30541_0xf924;
    undefined field30542_0xf925;
    undefined field30543_0xf926;
    undefined field30544_0xf927;
    undefined field30545_0xf928;
    undefined field30546_0xf929;
    undefined field30547_0xf92a;
    undefined field30548_0xf92b;
    undefined field30549_0xf92c;
    undefined field30550_0xf92d;
    undefined field30551_0xf92e;
    undefined field30552_0xf92f;
    undefined field30553_0xf930;
    undefined field30554_0xf931;
    undefined field30555_0xf932;
    undefined field30556_0xf933;
    undefined field30557_0xf934;
    undefined field30558_0xf935;
    undefined field30559_0xf936;
    undefined field30560_0xf937;
    undefined field30561_0xf938;
    undefined field30562_0xf939;
    undefined field30563_0xf93a;
    undefined field30564_0xf93b;
    undefined field30565_0xf93c;
    undefined field30566_0xf93d;
    undefined field30567_0xf93e;
    undefined field30568_0xf93f;
    undefined field30569_0xf940;
    undefined field30570_0xf941;
    undefined field30571_0xf942;
    undefined field30572_0xf943;
    undefined field30573_0xf944;
    undefined field30574_0xf945;
    undefined field30575_0xf946;
    undefined field30576_0xf947;
    undefined field30577_0xf948;
    undefined field30578_0xf949;
    undefined field30579_0xf94a;
    undefined field30580_0xf94b;
    undefined field30581_0xf94c;
    undefined field30582_0xf94d;
    undefined field30583_0xf94e;
    undefined field30584_0xf94f;
    undefined field30585_0xf950;
    undefined field30586_0xf951;
    undefined field30587_0xf952;
    undefined field30588_0xf953;
    undefined field30589_0xf954;
    undefined field30590_0xf955;
    undefined field30591_0xf956;
    undefined field30592_0xf957;
    undefined field30593_0xf958;
    undefined field30594_0xf959;
    undefined field30595_0xf95a;
    undefined field30596_0xf95b;
    undefined field30597_0xf95c;
    undefined field30598_0xf95d;
    undefined field30599_0xf95e;
    undefined field30600_0xf95f;
    undefined field30601_0xf960;
    undefined field30602_0xf961;
    undefined field30603_0xf962;
    undefined field30604_0xf963;
    undefined field30605_0xf964;
    undefined field30606_0xf965;
    undefined field30607_0xf966;
    undefined field30608_0xf967;
    undefined field30609_0xf968;
    undefined field30610_0xf969;
    undefined field30611_0xf96a;
    undefined field30612_0xf96b;
    undefined field30613_0xf96c;
    undefined field30614_0xf96d;
    undefined field30615_0xf96e;
    undefined field30616_0xf96f;
    undefined field30617_0xf970;
    undefined field30618_0xf971;
    undefined field30619_0xf972;
    undefined field30620_0xf973;
    undefined field30621_0xf974;
    undefined field30622_0xf975;
    undefined field30623_0xf976;
    undefined field30624_0xf977;
    undefined field30625_0xf978;
    undefined field30626_0xf979;
    undefined field30627_0xf97a;
    undefined field30628_0xf97b;
    undefined field30629_0xf97c;
    undefined field30630_0xf97d;
    undefined field30631_0xf97e;
    undefined field30632_0xf97f;
    undefined field30633_0xf980;
    undefined field30634_0xf981;
    undefined field30635_0xf982;
    undefined field30636_0xf983;
    undefined field30637_0xf984;
    undefined field30638_0xf985;
    undefined field30639_0xf986;
    undefined field30640_0xf987;
    undefined field30641_0xf988;
    undefined field30642_0xf989;
    undefined field30643_0xf98a;
    undefined field30644_0xf98b;
    undefined field30645_0xf98c;
    undefined field30646_0xf98d;
    undefined field30647_0xf98e;
    undefined field30648_0xf98f;
    undefined field30649_0xf990;
    undefined field30650_0xf991;
    undefined field30651_0xf992;
    undefined field30652_0xf993;
    undefined field30653_0xf994;
    undefined field30654_0xf995;
    undefined field30655_0xf996;
    undefined field30656_0xf997;
    undefined field30657_0xf998;
    undefined field30658_0xf999;
    undefined field30659_0xf99a;
    undefined field30660_0xf99b;
    undefined field30661_0xf99c;
    undefined field30662_0xf99d;
    undefined field30663_0xf99e;
    undefined field30664_0xf99f;
    undefined field30665_0xf9a0;
    undefined field30666_0xf9a1;
    undefined field30667_0xf9a2;
    undefined field30668_0xf9a3;
    undefined field30669_0xf9a4;
    undefined field30670_0xf9a5;
    undefined field30671_0xf9a6;
    undefined field30672_0xf9a7;
    undefined field30673_0xf9a8;
    undefined field30674_0xf9a9;
    undefined field30675_0xf9aa;
    undefined field30676_0xf9ab;
    undefined field30677_0xf9ac;
    undefined field30678_0xf9ad;
    undefined field30679_0xf9ae;
    undefined field30680_0xf9af;
    undefined field30681_0xf9b0;
    undefined field30682_0xf9b1;
    undefined field30683_0xf9b2;
    undefined field30684_0xf9b3;
    undefined field30685_0xf9b4;
    undefined field30686_0xf9b5;
    undefined field30687_0xf9b6;
    undefined field30688_0xf9b7;
    undefined field30689_0xf9b8;
    undefined field30690_0xf9b9;
    undefined field30691_0xf9ba;
    undefined field30692_0xf9bb;
    undefined field30693_0xf9bc;
    undefined field30694_0xf9bd;
    undefined field30695_0xf9be;
    undefined field30696_0xf9bf;
    undefined field30697_0xf9c0;
    undefined field30698_0xf9c1;
    undefined field30699_0xf9c2;
    undefined field30700_0xf9c3;
    undefined field30701_0xf9c4;
    undefined field30702_0xf9c5;
    undefined field30703_0xf9c6;
    undefined field30704_0xf9c7;
    undefined field30705_0xf9c8;
    undefined field30706_0xf9c9;
    undefined field30707_0xf9ca;
    undefined field30708_0xf9cb;
    undefined field30709_0xf9cc;
    undefined field30710_0xf9cd;
    undefined field30711_0xf9ce;
    undefined field30712_0xf9cf;
    undefined field30713_0xf9d0;
    undefined field30714_0xf9d1;
    undefined field30715_0xf9d2;
    undefined field30716_0xf9d3;
    undefined field30717_0xf9d4;
    undefined field30718_0xf9d5;
    undefined field30719_0xf9d6;
    undefined field30720_0xf9d7;
    undefined field30721_0xf9d8;
    undefined field30722_0xf9d9;
    undefined field30723_0xf9da;
    undefined field30724_0xf9db;
    undefined field30725_0xf9dc;
    undefined field30726_0xf9dd;
    undefined field30727_0xf9de;
    undefined field30728_0xf9df;
    undefined field30729_0xf9e0;
    undefined field30730_0xf9e1;
    undefined field30731_0xf9e2;
    undefined field30732_0xf9e3;
    undefined field30733_0xf9e4;
    undefined field30734_0xf9e5;
    undefined field30735_0xf9e6;
    undefined field30736_0xf9e7;
    undefined field30737_0xf9e8;
    undefined field30738_0xf9e9;
    undefined field30739_0xf9ea;
    undefined field30740_0xf9eb;
    undefined field30741_0xf9ec;
    undefined field30742_0xf9ed;
    undefined field30743_0xf9ee;
    undefined field30744_0xf9ef;
    undefined field30745_0xf9f0;
    undefined field30746_0xf9f1;
    undefined field30747_0xf9f2;
    undefined field30748_0xf9f3;
    undefined field30749_0xf9f4;
    undefined field30750_0xf9f5;
    undefined field30751_0xf9f6;
    undefined field30752_0xf9f7;
    undefined field30753_0xf9f8;
    undefined field30754_0xf9f9;
    undefined field30755_0xf9fa;
    undefined field30756_0xf9fb;
    undefined field30757_0xf9fc;
    undefined field30758_0xf9fd;
    undefined field30759_0xf9fe;
    undefined field30760_0xf9ff;
    undefined field30761_0xfa00;
    undefined field30762_0xfa01;
    undefined field30763_0xfa02;
    undefined field30764_0xfa03;
    undefined field30765_0xfa04;
    undefined field30766_0xfa05;
    undefined field30767_0xfa06;
    undefined field30768_0xfa07;
    undefined field30769_0xfa08;
    undefined field30770_0xfa09;
    undefined field30771_0xfa0a;
    undefined field30772_0xfa0b;
    undefined field30773_0xfa0c;
    undefined field30774_0xfa0d;
    undefined field30775_0xfa0e;
    undefined field30776_0xfa0f;
    undefined field30777_0xfa10;
    undefined field30778_0xfa11;
    undefined field30779_0xfa12;
    undefined field30780_0xfa13;
    undefined field30781_0xfa14;
    undefined field30782_0xfa15;
    undefined field30783_0xfa16;
    undefined field30784_0xfa17;
    undefined field30785_0xfa18;
    undefined field30786_0xfa19;
    undefined field30787_0xfa1a;
    undefined field30788_0xfa1b;
    undefined field30789_0xfa1c;
    undefined field30790_0xfa1d;
    undefined field30791_0xfa1e;
    undefined field30792_0xfa1f;
    undefined field30793_0xfa20;
    undefined field30794_0xfa21;
    undefined field30795_0xfa22;
    undefined field30796_0xfa23;
    undefined field30797_0xfa24;
    undefined field30798_0xfa25;
    undefined field30799_0xfa26;
    undefined field30800_0xfa27;
    undefined field30801_0xfa28;
    undefined field30802_0xfa29;
    undefined field30803_0xfa2a;
    undefined field30804_0xfa2b;
    undefined field30805_0xfa2c;
    undefined field30806_0xfa2d;
    undefined field30807_0xfa2e;
    undefined field30808_0xfa2f;
    undefined field30809_0xfa30;
    undefined field30810_0xfa31;
    undefined field30811_0xfa32;
    undefined field30812_0xfa33;
    undefined field30813_0xfa34;
    undefined field30814_0xfa35;
    undefined field30815_0xfa36;
    undefined field30816_0xfa37;
    undefined field30817_0xfa38;
    undefined field30818_0xfa39;
    undefined field30819_0xfa3a;
    undefined field30820_0xfa3b;
    undefined field30821_0xfa3c;
    undefined field30822_0xfa3d;
    undefined field30823_0xfa3e;
    undefined field30824_0xfa3f;
    undefined field30825_0xfa40;
    undefined field30826_0xfa41;
    undefined field30827_0xfa42;
    undefined field30828_0xfa43;
    undefined field30829_0xfa44;
    undefined field30830_0xfa45;
    undefined field30831_0xfa46;
    undefined field30832_0xfa47;
    undefined field30833_0xfa48;
    undefined field30834_0xfa49;
    undefined field30835_0xfa4a;
    undefined field30836_0xfa4b;
    undefined field30837_0xfa4c;
    undefined field30838_0xfa4d;
    undefined field30839_0xfa4e;
    undefined field30840_0xfa4f;
    undefined field30841_0xfa50;
    undefined field30842_0xfa51;
    undefined field30843_0xfa52;
    undefined field30844_0xfa53;
    undefined field30845_0xfa54;
    undefined field30846_0xfa55;
    undefined field30847_0xfa56;
    undefined field30848_0xfa57;
    undefined field30849_0xfa58;
    undefined field30850_0xfa59;
    undefined field30851_0xfa5a;
    undefined field30852_0xfa5b;
    undefined field30853_0xfa5c;
    undefined field30854_0xfa5d;
    undefined field30855_0xfa5e;
    undefined field30856_0xfa5f;
    undefined field30857_0xfa60;
    undefined field30858_0xfa61;
    undefined field30859_0xfa62;
    undefined field30860_0xfa63;
    undefined field30861_0xfa64;
    undefined field30862_0xfa65;
    undefined field30863_0xfa66;
    undefined field30864_0xfa67;
    undefined field30865_0xfa68;
    undefined field30866_0xfa69;
    undefined field30867_0xfa6a;
    undefined field30868_0xfa6b;
    undefined field30869_0xfa6c;
    undefined field30870_0xfa6d;
    undefined field30871_0xfa6e;
    undefined field30872_0xfa6f;
    undefined field30873_0xfa70;
    undefined field30874_0xfa71;
    undefined field30875_0xfa72;
    undefined field30876_0xfa73;
    undefined field30877_0xfa74;
    undefined field30878_0xfa75;
    undefined field30879_0xfa76;
    undefined field30880_0xfa77;
    undefined field30881_0xfa78;
    undefined field30882_0xfa79;
    undefined field30883_0xfa7a;
    undefined field30884_0xfa7b;
    undefined field30885_0xfa7c;
    undefined field30886_0xfa7d;
    undefined field30887_0xfa7e;
    undefined field30888_0xfa7f;
    undefined field30889_0xfa80;
    undefined field30890_0xfa81;
    undefined field30891_0xfa82;
    undefined field30892_0xfa83;
    undefined field30893_0xfa84;
    undefined field30894_0xfa85;
    undefined field30895_0xfa86;
    undefined field30896_0xfa87;
    undefined field30897_0xfa88;
    undefined field30898_0xfa89;
    undefined field30899_0xfa8a;
    undefined field30900_0xfa8b;
    undefined field30901_0xfa8c;
    undefined field30902_0xfa8d;
    undefined field30903_0xfa8e;
    undefined field30904_0xfa8f;
    undefined field30905_0xfa90;
    undefined field30906_0xfa91;
    undefined field30907_0xfa92;
    undefined field30908_0xfa93;
    undefined field30909_0xfa94;
    undefined field30910_0xfa95;
    undefined field30911_0xfa96;
    undefined field30912_0xfa97;
    undefined field30913_0xfa98;
    undefined field30914_0xfa99;
    undefined field30915_0xfa9a;
    undefined field30916_0xfa9b;
    undefined field30917_0xfa9c;
    undefined field30918_0xfa9d;
    undefined field30919_0xfa9e;
    undefined field30920_0xfa9f;
    undefined field30921_0xfaa0;
    undefined field30922_0xfaa1;
    undefined field30923_0xfaa2;
    undefined field30924_0xfaa3;
    undefined field30925_0xfaa4;
    undefined field30926_0xfaa5;
    undefined field30927_0xfaa6;
    undefined field30928_0xfaa7;
    undefined field30929_0xfaa8;
    undefined field30930_0xfaa9;
    undefined field30931_0xfaaa;
    undefined field30932_0xfaab;
    undefined field30933_0xfaac;
    undefined field30934_0xfaad;
    undefined field30935_0xfaae;
    undefined field30936_0xfaaf;
    undefined field30937_0xfab0;
    undefined field30938_0xfab1;
    undefined field30939_0xfab2;
    undefined field30940_0xfab3;
    undefined field30941_0xfab4;
    undefined field30942_0xfab5;
    undefined field30943_0xfab6;
    undefined field30944_0xfab7;
    undefined field30945_0xfab8;
    undefined field30946_0xfab9;
    undefined field30947_0xfaba;
    undefined field30948_0xfabb;
    undefined field30949_0xfabc;
    undefined field30950_0xfabd;
    undefined field30951_0xfabe;
    undefined field30952_0xfabf;
    undefined field30953_0xfac0;
    undefined field30954_0xfac1;
    undefined field30955_0xfac2;
    undefined field30956_0xfac3;
    undefined field30957_0xfac4;
    undefined field30958_0xfac5;
    undefined field30959_0xfac6;
    undefined field30960_0xfac7;
    undefined field30961_0xfac8;
    undefined field30962_0xfac9;
    undefined field30963_0xfaca;
    undefined field30964_0xfacb;
    undefined field30965_0xfacc;
    undefined field30966_0xfacd;
    undefined field30967_0xface;
    undefined field30968_0xfacf;
    undefined field30969_0xfad0;
    undefined field30970_0xfad1;
    undefined field30971_0xfad2;
    undefined field30972_0xfad3;
    undefined field30973_0xfad4;
    undefined field30974_0xfad5;
    undefined field30975_0xfad6;
    undefined field30976_0xfad7;
    undefined field30977_0xfad8;
    undefined field30978_0xfad9;
    undefined field30979_0xfada;
    undefined field30980_0xfadb;
    undefined field30981_0xfadc;
    undefined field30982_0xfadd;
    undefined field30983_0xfade;
    undefined field30984_0xfadf;
    undefined field30985_0xfae0;
    undefined field30986_0xfae1;
    undefined field30987_0xfae2;
    undefined field30988_0xfae3;
    undefined field30989_0xfae4;
    undefined field30990_0xfae5;
    undefined field30991_0xfae6;
    undefined field30992_0xfae7;
    undefined field30993_0xfae8;
    undefined field30994_0xfae9;
    undefined field30995_0xfaea;
    undefined field30996_0xfaeb;
    undefined field30997_0xfaec;
    undefined field30998_0xfaed;
    undefined field30999_0xfaee;
    undefined field31000_0xfaef;
    undefined field31001_0xfaf0;
    undefined field31002_0xfaf1;
    undefined field31003_0xfaf2;
    undefined field31004_0xfaf3;
    undefined field31005_0xfaf4;
    undefined field31006_0xfaf5;
    undefined field31007_0xfaf6;
    undefined field31008_0xfaf7;
    undefined field31009_0xfaf8;
    undefined field31010_0xfaf9;
    undefined field31011_0xfafa;
    undefined field31012_0xfafb;
    undefined field31013_0xfafc;
    undefined field31014_0xfafd;
    undefined field31015_0xfafe;
    undefined field31016_0xfaff;
    undefined field31017_0xfb00;
    undefined field31018_0xfb01;
    undefined field31019_0xfb02;
    undefined field31020_0xfb03;
    undefined field31021_0xfb04;
    undefined field31022_0xfb05;
    undefined field31023_0xfb06;
    undefined field31024_0xfb07;
    undefined field31025_0xfb08;
    undefined field31026_0xfb09;
    undefined field31027_0xfb0a;
    undefined field31028_0xfb0b;
    undefined field31029_0xfb0c;
    undefined field31030_0xfb0d;
    undefined field31031_0xfb0e;
    undefined field31032_0xfb0f;
    undefined field31033_0xfb10;
    undefined field31034_0xfb11;
    undefined field31035_0xfb12;
    undefined field31036_0xfb13;
    undefined field31037_0xfb14;
    undefined field31038_0xfb15;
    undefined field31039_0xfb16;
    undefined field31040_0xfb17;
    undefined field31041_0xfb18;
    undefined field31042_0xfb19;
    undefined field31043_0xfb1a;
    undefined field31044_0xfb1b;
    undefined field31045_0xfb1c;
    undefined field31046_0xfb1d;
    undefined field31047_0xfb1e;
    undefined field31048_0xfb1f;
    undefined field31049_0xfb20;
    undefined field31050_0xfb21;
    undefined field31051_0xfb22;
    undefined field31052_0xfb23;
    undefined field31053_0xfb24;
    undefined field31054_0xfb25;
    undefined field31055_0xfb26;
    undefined field31056_0xfb27;
    undefined field31057_0xfb28;
    undefined field31058_0xfb29;
    undefined field31059_0xfb2a;
    undefined field31060_0xfb2b;
    undefined field31061_0xfb2c;
    undefined field31062_0xfb2d;
    undefined field31063_0xfb2e;
    undefined field31064_0xfb2f;
    undefined field31065_0xfb30;
    undefined field31066_0xfb31;
    undefined field31067_0xfb32;
    undefined field31068_0xfb33;
    undefined field31069_0xfb34;
    undefined field31070_0xfb35;
    undefined field31071_0xfb36;
    undefined field31072_0xfb37;
    undefined field31073_0xfb38;
    undefined field31074_0xfb39;
    undefined field31075_0xfb3a;
    undefined field31076_0xfb3b;
    undefined field31077_0xfb3c;
    undefined field31078_0xfb3d;
    undefined field31079_0xfb3e;
    undefined field31080_0xfb3f;
    undefined field31081_0xfb40;
    undefined field31082_0xfb41;
    undefined field31083_0xfb42;
    undefined field31084_0xfb43;
    undefined field31085_0xfb44;
    undefined field31086_0xfb45;
    undefined field31087_0xfb46;
    undefined field31088_0xfb47;
    undefined field31089_0xfb48;
    undefined field31090_0xfb49;
    undefined field31091_0xfb4a;
    undefined field31092_0xfb4b;
    undefined field31093_0xfb4c;
    undefined field31094_0xfb4d;
    undefined field31095_0xfb4e;
    undefined field31096_0xfb4f;
    undefined field31097_0xfb50;
    undefined field31098_0xfb51;
    undefined field31099_0xfb52;
    undefined field31100_0xfb53;
    undefined field31101_0xfb54;
    undefined field31102_0xfb55;
    undefined field31103_0xfb56;
    undefined field31104_0xfb57;
    undefined field31105_0xfb58;
    undefined field31106_0xfb59;
    undefined field31107_0xfb5a;
    undefined field31108_0xfb5b;
    undefined field31109_0xfb5c;
    undefined field31110_0xfb5d;
    undefined field31111_0xfb5e;
    undefined field31112_0xfb5f;
    undefined field31113_0xfb60;
    undefined field31114_0xfb61;
    undefined field31115_0xfb62;
    undefined field31116_0xfb63;
    undefined field31117_0xfb64;
    undefined field31118_0xfb65;
    undefined field31119_0xfb66;
    undefined field31120_0xfb67;
    undefined field31121_0xfb68;
    undefined field31122_0xfb69;
    undefined field31123_0xfb6a;
    undefined field31124_0xfb6b;
    undefined field31125_0xfb6c;
    undefined field31126_0xfb6d;
    undefined field31127_0xfb6e;
    undefined field31128_0xfb6f;
    undefined field31129_0xfb70;
    undefined field31130_0xfb71;
    undefined field31131_0xfb72;
    undefined field31132_0xfb73;
    undefined field31133_0xfb74;
    undefined field31134_0xfb75;
    undefined field31135_0xfb76;
    undefined field31136_0xfb77;
    undefined field31137_0xfb78;
    undefined field31138_0xfb79;
    undefined field31139_0xfb7a;
    undefined field31140_0xfb7b;
    undefined field31141_0xfb7c;
    undefined field31142_0xfb7d;
    undefined field31143_0xfb7e;
    undefined field31144_0xfb7f;
    undefined field31145_0xfb80;
    undefined field31146_0xfb81;
    undefined field31147_0xfb82;
    undefined field31148_0xfb83;
    undefined field31149_0xfb84;
    undefined field31150_0xfb85;
    undefined field31151_0xfb86;
    undefined field31152_0xfb87;
    undefined field31153_0xfb88;
    undefined field31154_0xfb89;
    undefined field31155_0xfb8a;
    undefined field31156_0xfb8b;
    undefined field31157_0xfb8c;
    undefined field31158_0xfb8d;
    undefined field31159_0xfb8e;
    undefined field31160_0xfb8f;
    undefined field31161_0xfb90;
    undefined field31162_0xfb91;
    undefined field31163_0xfb92;
    undefined field31164_0xfb93;
    undefined field31165_0xfb94;
    undefined field31166_0xfb95;
    undefined field31167_0xfb96;
    undefined field31168_0xfb97;
    undefined field31169_0xfb98;
    undefined field31170_0xfb99;
    undefined field31171_0xfb9a;
    undefined field31172_0xfb9b;
    undefined field31173_0xfb9c;
    undefined field31174_0xfb9d;
    undefined field31175_0xfb9e;
    undefined field31176_0xfb9f;
    undefined field31177_0xfba0;
    undefined field31178_0xfba1;
    undefined field31179_0xfba2;
    undefined field31180_0xfba3;
    undefined field31181_0xfba4;
    undefined field31182_0xfba5;
    undefined field31183_0xfba6;
    undefined field31184_0xfba7;
    undefined field31185_0xfba8;
    undefined field31186_0xfba9;
    undefined field31187_0xfbaa;
    undefined field31188_0xfbab;
    undefined field31189_0xfbac;
    undefined field31190_0xfbad;
    undefined field31191_0xfbae;
    undefined field31192_0xfbaf;
    undefined field31193_0xfbb0;
    undefined field31194_0xfbb1;
    undefined field31195_0xfbb2;
    undefined field31196_0xfbb3;
    undefined field31197_0xfbb4;
    undefined field31198_0xfbb5;
    undefined field31199_0xfbb6;
    undefined field31200_0xfbb7;
    undefined field31201_0xfbb8;
    undefined field31202_0xfbb9;
    undefined field31203_0xfbba;
    undefined field31204_0xfbbb;
    undefined field31205_0xfbbc;
    undefined field31206_0xfbbd;
    undefined field31207_0xfbbe;
    undefined field31208_0xfbbf;
    undefined field31209_0xfbc0;
    undefined field31210_0xfbc1;
    undefined field31211_0xfbc2;
    undefined field31212_0xfbc3;
    undefined field31213_0xfbc4;
    undefined field31214_0xfbc5;
    undefined field31215_0xfbc6;
    undefined field31216_0xfbc7;
    undefined field31217_0xfbc8;
    undefined field31218_0xfbc9;
    undefined field31219_0xfbca;
    undefined field31220_0xfbcb;
    undefined field31221_0xfbcc;
    undefined field31222_0xfbcd;
    undefined field31223_0xfbce;
    undefined field31224_0xfbcf;
    undefined field31225_0xfbd0;
    undefined field31226_0xfbd1;
    undefined field31227_0xfbd2;
    undefined field31228_0xfbd3;
    undefined field31229_0xfbd4;
    undefined field31230_0xfbd5;
    undefined field31231_0xfbd6;
    undefined field31232_0xfbd7;
    undefined field31233_0xfbd8;
    undefined field31234_0xfbd9;
    undefined field31235_0xfbda;
    undefined field31236_0xfbdb;
    undefined field31237_0xfbdc;
    undefined field31238_0xfbdd;
    undefined field31239_0xfbde;
    undefined field31240_0xfbdf;
    undefined field31241_0xfbe0;
    undefined field31242_0xfbe1;
    undefined field31243_0xfbe2;
    undefined field31244_0xfbe3;
    undefined field31245_0xfbe4;
    undefined field31246_0xfbe5;
    undefined field31247_0xfbe6;
    undefined field31248_0xfbe7;
    undefined field31249_0xfbe8;
    undefined field31250_0xfbe9;
    undefined field31251_0xfbea;
    undefined field31252_0xfbeb;
    undefined field31253_0xfbec;
    undefined field31254_0xfbed;
    undefined field31255_0xfbee;
    undefined field31256_0xfbef;
    undefined field31257_0xfbf0;
    undefined field31258_0xfbf1;
    undefined field31259_0xfbf2;
    undefined field31260_0xfbf3;
    undefined field31261_0xfbf4;
    undefined field31262_0xfbf5;
    undefined field31263_0xfbf6;
    undefined field31264_0xfbf7;
    undefined field31265_0xfbf8;
    undefined field31266_0xfbf9;
    undefined field31267_0xfbfa;
    undefined field31268_0xfbfb;
    undefined field31269_0xfbfc;
    undefined field31270_0xfbfd;
    undefined field31271_0xfbfe;
    undefined field31272_0xfbff;
    undefined field31273_0xfc00;
    undefined field31274_0xfc01;
    undefined field31275_0xfc02;
    undefined field31276_0xfc03;
    undefined field31277_0xfc04;
    undefined field31278_0xfc05;
    undefined field31279_0xfc06;
    undefined field31280_0xfc07;
    undefined field31281_0xfc08;
    undefined field31282_0xfc09;
    undefined field31283_0xfc0a;
    undefined field31284_0xfc0b;
    undefined field31285_0xfc0c;
    undefined field31286_0xfc0d;
    undefined field31287_0xfc0e;
    undefined field31288_0xfc0f;
    undefined field31289_0xfc10;
    undefined field31290_0xfc11;
    undefined field31291_0xfc12;
    undefined field31292_0xfc13;
    undefined field31293_0xfc14;
    undefined field31294_0xfc15;
    undefined field31295_0xfc16;
    undefined field31296_0xfc17;
    undefined field31297_0xfc18;
    undefined field31298_0xfc19;
    undefined field31299_0xfc1a;
    undefined field31300_0xfc1b;
    undefined field31301_0xfc1c;
    undefined field31302_0xfc1d;
    undefined field31303_0xfc1e;
    undefined field31304_0xfc1f;
    undefined field31305_0xfc20;
    undefined field31306_0xfc21;
    undefined field31307_0xfc22;
    undefined field31308_0xfc23;
    undefined field31309_0xfc24;
    undefined field31310_0xfc25;
    undefined field31311_0xfc26;
    undefined field31312_0xfc27;
    undefined field31313_0xfc28;
    undefined field31314_0xfc29;
    undefined field31315_0xfc2a;
    undefined field31316_0xfc2b;
    undefined field31317_0xfc2c;
    undefined field31318_0xfc2d;
    undefined field31319_0xfc2e;
    undefined field31320_0xfc2f;
    undefined field31321_0xfc30;
    undefined field31322_0xfc31;
    undefined field31323_0xfc32;
    undefined field31324_0xfc33;
    undefined field31325_0xfc34;
    undefined field31326_0xfc35;
    undefined field31327_0xfc36;
    undefined field31328_0xfc37;
    undefined field31329_0xfc38;
    undefined field31330_0xfc39;
    undefined field31331_0xfc3a;
    undefined field31332_0xfc3b;
    undefined field31333_0xfc3c;
    undefined field31334_0xfc3d;
    undefined field31335_0xfc3e;
    undefined field31336_0xfc3f;
    undefined field31337_0xfc40;
    undefined field31338_0xfc41;
    undefined field31339_0xfc42;
    undefined field31340_0xfc43;
    undefined field31341_0xfc44;
    undefined field31342_0xfc45;
    undefined field31343_0xfc46;
    undefined field31344_0xfc47;
    undefined field31345_0xfc48;
    undefined field31346_0xfc49;
    undefined field31347_0xfc4a;
    undefined field31348_0xfc4b;
    undefined field31349_0xfc4c;
    undefined field31350_0xfc4d;
    undefined field31351_0xfc4e;
    undefined field31352_0xfc4f;
    undefined field31353_0xfc50;
    undefined field31354_0xfc51;
    undefined field31355_0xfc52;
    undefined field31356_0xfc53;
    undefined field31357_0xfc54;
    undefined field31358_0xfc55;
    undefined field31359_0xfc56;
    undefined field31360_0xfc57;
    undefined field31361_0xfc58;
    undefined field31362_0xfc59;
    undefined field31363_0xfc5a;
    undefined field31364_0xfc5b;
    undefined field31365_0xfc5c;
    undefined field31366_0xfc5d;
    undefined field31367_0xfc5e;
    undefined field31368_0xfc5f;
    undefined field31369_0xfc60;
    undefined field31370_0xfc61;
    undefined field31371_0xfc62;
    undefined field31372_0xfc63;
    undefined field31373_0xfc64;
    undefined field31374_0xfc65;
    undefined field31375_0xfc66;
    undefined field31376_0xfc67;
    undefined field31377_0xfc68;
    undefined field31378_0xfc69;
    undefined field31379_0xfc6a;
    undefined field31380_0xfc6b;
    undefined field31381_0xfc6c;
    undefined field31382_0xfc6d;
    undefined field31383_0xfc6e;
    undefined field31384_0xfc6f;
    undefined field31385_0xfc70;
    undefined field31386_0xfc71;
    undefined field31387_0xfc72;
    undefined field31388_0xfc73;
    undefined field31389_0xfc74;
    undefined field31390_0xfc75;
    undefined field31391_0xfc76;
    undefined field31392_0xfc77;
    undefined field31393_0xfc78;
    undefined field31394_0xfc79;
    undefined field31395_0xfc7a;
    undefined field31396_0xfc7b;
    undefined field31397_0xfc7c;
    undefined field31398_0xfc7d;
    undefined field31399_0xfc7e;
    undefined field31400_0xfc7f;
    undefined field31401_0xfc80;
    undefined field31402_0xfc81;
    undefined field31403_0xfc82;
    undefined field31404_0xfc83;
    undefined field31405_0xfc84;
    undefined field31406_0xfc85;
    undefined field31407_0xfc86;
    undefined field31408_0xfc87;
    undefined field31409_0xfc88;
    undefined field31410_0xfc89;
    undefined field31411_0xfc8a;
    undefined field31412_0xfc8b;
    undefined field31413_0xfc8c;
    undefined field31414_0xfc8d;
    undefined field31415_0xfc8e;
    undefined field31416_0xfc8f;
    undefined field31417_0xfc90;
    undefined field31418_0xfc91;
    undefined field31419_0xfc92;
    undefined field31420_0xfc93;
    undefined field31421_0xfc94;
    undefined field31422_0xfc95;
    undefined field31423_0xfc96;
    undefined field31424_0xfc97;
    undefined field31425_0xfc98;
    undefined field31426_0xfc99;
    undefined field31427_0xfc9a;
    undefined field31428_0xfc9b;
    undefined field31429_0xfc9c;
    undefined field31430_0xfc9d;
    undefined field31431_0xfc9e;
    undefined field31432_0xfc9f;
    undefined field31433_0xfca0;
    undefined field31434_0xfca1;
    undefined field31435_0xfca2;
    undefined field31436_0xfca3;
    undefined field31437_0xfca4;
    undefined field31438_0xfca5;
    undefined field31439_0xfca6;
    undefined field31440_0xfca7;
    undefined field31441_0xfca8;
    undefined field31442_0xfca9;
    undefined field31443_0xfcaa;
    undefined field31444_0xfcab;
    undefined field31445_0xfcac;
    undefined field31446_0xfcad;
    undefined field31447_0xfcae;
    undefined field31448_0xfcaf;
    undefined field31449_0xfcb0;
    undefined field31450_0xfcb1;
    undefined field31451_0xfcb2;
    undefined field31452_0xfcb3;
    undefined field31453_0xfcb4;
    undefined field31454_0xfcb5;
    undefined field31455_0xfcb6;
    undefined field31456_0xfcb7;
    undefined field31457_0xfcb8;
    undefined field31458_0xfcb9;
    undefined field31459_0xfcba;
    undefined field31460_0xfcbb;
    undefined field31461_0xfcbc;
    undefined field31462_0xfcbd;
    undefined field31463_0xfcbe;
    undefined field31464_0xfcbf;
    undefined field31465_0xfcc0;
    undefined field31466_0xfcc1;
    undefined field31467_0xfcc2;
    undefined field31468_0xfcc3;
    undefined field31469_0xfcc4;
    undefined field31470_0xfcc5;
    undefined field31471_0xfcc6;
    undefined field31472_0xfcc7;
    undefined field31473_0xfcc8;
    undefined field31474_0xfcc9;
    undefined field31475_0xfcca;
    undefined field31476_0xfccb;
    undefined field31477_0xfccc;
    undefined field31478_0xfccd;
    undefined field31479_0xfcce;
    undefined field31480_0xfccf;
    undefined field31481_0xfcd0;
    undefined field31482_0xfcd1;
    undefined field31483_0xfcd2;
    undefined field31484_0xfcd3;
    undefined field31485_0xfcd4;
    undefined field31486_0xfcd5;
    undefined field31487_0xfcd6;
    undefined field31488_0xfcd7;
    undefined field31489_0xfcd8;
    undefined field31490_0xfcd9;
    undefined field31491_0xfcda;
    undefined field31492_0xfcdb;
    undefined field31493_0xfcdc;
    undefined field31494_0xfcdd;
    undefined field31495_0xfcde;
    undefined field31496_0xfcdf;
    undefined field31497_0xfce0;
    undefined field31498_0xfce1;
    undefined field31499_0xfce2;
    undefined field31500_0xfce3;
    undefined field31501_0xfce4;
    undefined field31502_0xfce5;
    undefined field31503_0xfce6;
    undefined field31504_0xfce7;
    undefined field31505_0xfce8;
    undefined field31506_0xfce9;
    undefined field31507_0xfcea;
    undefined field31508_0xfceb;
    undefined field31509_0xfcec;
    undefined field31510_0xfced;
    undefined field31511_0xfcee;
    undefined field31512_0xfcef;
    undefined field31513_0xfcf0;
    undefined field31514_0xfcf1;
    undefined field31515_0xfcf2;
    undefined field31516_0xfcf3;
    undefined field31517_0xfcf4;
    undefined field31518_0xfcf5;
    undefined field31519_0xfcf6;
    undefined field31520_0xfcf7;
    undefined field31521_0xfcf8;
    undefined field31522_0xfcf9;
    undefined field31523_0xfcfa;
    undefined field31524_0xfcfb;
    undefined field31525_0xfcfc;
    undefined field31526_0xfcfd;
    undefined field31527_0xfcfe;
    undefined field31528_0xfcff;
    undefined field31529_0xfd00;
    undefined field31530_0xfd01;
    undefined field31531_0xfd02;
    undefined field31532_0xfd03;
    undefined field31533_0xfd04;
    undefined field31534_0xfd05;
    undefined field31535_0xfd06;
    undefined field31536_0xfd07;
    undefined field31537_0xfd08;
    undefined field31538_0xfd09;
    undefined field31539_0xfd0a;
    undefined field31540_0xfd0b;
    undefined field31541_0xfd0c;
    undefined field31542_0xfd0d;
    undefined field31543_0xfd0e;
    undefined field31544_0xfd0f;
    undefined field31545_0xfd10;
    undefined field31546_0xfd11;
    undefined field31547_0xfd12;
    undefined field31548_0xfd13;
    undefined field31549_0xfd14;
    undefined field31550_0xfd15;
    undefined field31551_0xfd16;
    undefined field31552_0xfd17;
    undefined field31553_0xfd18;
    undefined field31554_0xfd19;
    undefined field31555_0xfd1a;
    undefined field31556_0xfd1b;
    undefined field31557_0xfd1c;
    undefined field31558_0xfd1d;
    undefined field31559_0xfd1e;
    undefined field31560_0xfd1f;
    undefined field31561_0xfd20;
    undefined field31562_0xfd21;
    undefined field31563_0xfd22;
    undefined field31564_0xfd23;
    undefined field31565_0xfd24;
    undefined field31566_0xfd25;
    undefined field31567_0xfd26;
    undefined field31568_0xfd27;
    undefined field31569_0xfd28;
    undefined field31570_0xfd29;
    undefined field31571_0xfd2a;
    undefined field31572_0xfd2b;
    undefined field31573_0xfd2c;
    undefined field31574_0xfd2d;
    undefined field31575_0xfd2e;
    undefined field31576_0xfd2f;
    undefined field31577_0xfd30;
    undefined field31578_0xfd31;
    undefined field31579_0xfd32;
    undefined field31580_0xfd33;
    undefined field31581_0xfd34;
    undefined field31582_0xfd35;
    undefined field31583_0xfd36;
    undefined field31584_0xfd37;
    undefined field31585_0xfd38;
    undefined field31586_0xfd39;
    undefined field31587_0xfd3a;
    undefined field31588_0xfd3b;
    undefined field31589_0xfd3c;
    undefined field31590_0xfd3d;
    undefined field31591_0xfd3e;
    undefined field31592_0xfd3f;
    undefined field31593_0xfd40;
    undefined field31594_0xfd41;
    undefined field31595_0xfd42;
    undefined field31596_0xfd43;
    undefined field31597_0xfd44;
    undefined field31598_0xfd45;
    undefined field31599_0xfd46;
    undefined field31600_0xfd47;
    undefined field31601_0xfd48;
    undefined field31602_0xfd49;
    undefined field31603_0xfd4a;
    undefined field31604_0xfd4b;
    undefined field31605_0xfd4c;
    undefined field31606_0xfd4d;
    undefined field31607_0xfd4e;
    undefined field31608_0xfd4f;
    undefined field31609_0xfd50;
    undefined field31610_0xfd51;
    undefined field31611_0xfd52;
    undefined field31612_0xfd53;
    undefined field31613_0xfd54;
    undefined field31614_0xfd55;
    undefined field31615_0xfd56;
    undefined field31616_0xfd57;
    undefined field31617_0xfd58;
    undefined field31618_0xfd59;
    undefined field31619_0xfd5a;
    undefined field31620_0xfd5b;
    undefined field31621_0xfd5c;
    undefined field31622_0xfd5d;
    undefined field31623_0xfd5e;
    undefined field31624_0xfd5f;
    undefined field31625_0xfd60;
    undefined field31626_0xfd61;
    undefined field31627_0xfd62;
    undefined field31628_0xfd63;
    undefined field31629_0xfd64;
    undefined field31630_0xfd65;
    undefined field31631_0xfd66;
    undefined field31632_0xfd67;
    undefined field31633_0xfd68;
    undefined field31634_0xfd69;
    undefined field31635_0xfd6a;
    undefined field31636_0xfd6b;
    undefined field31637_0xfd6c;
    undefined field31638_0xfd6d;
    undefined field31639_0xfd6e;
    undefined field31640_0xfd6f;
    undefined field31641_0xfd70;
    undefined field31642_0xfd71;
    undefined field31643_0xfd72;
    undefined field31644_0xfd73;
    undefined field31645_0xfd74;
    undefined field31646_0xfd75;
    undefined field31647_0xfd76;
    undefined field31648_0xfd77;
    undefined field31649_0xfd78;
    undefined field31650_0xfd79;
    undefined field31651_0xfd7a;
    undefined field31652_0xfd7b;
    undefined field31653_0xfd7c;
    undefined field31654_0xfd7d;
    undefined field31655_0xfd7e;
    undefined field31656_0xfd7f;
    undefined field31657_0xfd80;
    undefined field31658_0xfd81;
    undefined field31659_0xfd82;
    undefined field31660_0xfd83;
    undefined field31661_0xfd84;
    undefined field31662_0xfd85;
    undefined field31663_0xfd86;
    undefined field31664_0xfd87;
    undefined field31665_0xfd88;
    undefined field31666_0xfd89;
    undefined field31667_0xfd8a;
    undefined field31668_0xfd8b;
    undefined field31669_0xfd8c;
    undefined field31670_0xfd8d;
    undefined field31671_0xfd8e;
    undefined field31672_0xfd8f;
    undefined field31673_0xfd90;
    undefined field31674_0xfd91;
    undefined field31675_0xfd92;
    undefined field31676_0xfd93;
    undefined field31677_0xfd94;
    undefined field31678_0xfd95;
    undefined field31679_0xfd96;
    undefined field31680_0xfd97;
    undefined field31681_0xfd98;
    undefined field31682_0xfd99;
    undefined field31683_0xfd9a;
    undefined field31684_0xfd9b;
    undefined field31685_0xfd9c;
    undefined field31686_0xfd9d;
    undefined field31687_0xfd9e;
    undefined field31688_0xfd9f;
    undefined field31689_0xfda0;
    undefined field31690_0xfda1;
    undefined field31691_0xfda2;
    undefined field31692_0xfda3;
    undefined field31693_0xfda4;
    undefined field31694_0xfda5;
    undefined field31695_0xfda6;
    undefined field31696_0xfda7;
    undefined field31697_0xfda8;
    undefined field31698_0xfda9;
    undefined field31699_0xfdaa;
    undefined field31700_0xfdab;
    undefined field31701_0xfdac;
    undefined field31702_0xfdad;
    undefined field31703_0xfdae;
    undefined field31704_0xfdaf;
    undefined field31705_0xfdb0;
    undefined field31706_0xfdb1;
    undefined field31707_0xfdb2;
    undefined field31708_0xfdb3;
    undefined field31709_0xfdb4;
    undefined field31710_0xfdb5;
    undefined field31711_0xfdb6;
    undefined field31712_0xfdb7;
    undefined field31713_0xfdb8;
    undefined field31714_0xfdb9;
    undefined field31715_0xfdba;
    undefined field31716_0xfdbb;
    undefined field31717_0xfdbc;
    undefined field31718_0xfdbd;
    undefined field31719_0xfdbe;
    undefined field31720_0xfdbf;
    undefined field31721_0xfdc0;
    undefined field31722_0xfdc1;
    undefined field31723_0xfdc2;
    undefined field31724_0xfdc3;
    undefined field31725_0xfdc4;
    undefined field31726_0xfdc5;
    undefined field31727_0xfdc6;
    undefined field31728_0xfdc7;
    undefined field31729_0xfdc8;
    undefined field31730_0xfdc9;
    undefined field31731_0xfdca;
    undefined field31732_0xfdcb;
    undefined field31733_0xfdcc;
    undefined field31734_0xfdcd;
    undefined field31735_0xfdce;
    undefined field31736_0xfdcf;
    undefined field31737_0xfdd0;
    undefined field31738_0xfdd1;
    undefined field31739_0xfdd2;
    undefined field31740_0xfdd3;
    undefined field31741_0xfdd4;
    undefined field31742_0xfdd5;
    undefined field31743_0xfdd6;
    undefined field31744_0xfdd7;
    undefined field31745_0xfdd8;
    undefined field31746_0xfdd9;
    undefined field31747_0xfdda;
    undefined field31748_0xfddb;
    undefined field31749_0xfddc;
    undefined field31750_0xfddd;
    undefined field31751_0xfdde;
    undefined field31752_0xfddf;
    undefined field31753_0xfde0;
    undefined field31754_0xfde1;
    undefined field31755_0xfde2;
    undefined field31756_0xfde3;
    undefined field31757_0xfde4;
    undefined field31758_0xfde5;
    undefined field31759_0xfde6;
    undefined field31760_0xfde7;
    undefined field31761_0xfde8;
    undefined field31762_0xfde9;
    undefined field31763_0xfdea;
    undefined field31764_0xfdeb;
    undefined field31765_0xfdec;
    undefined field31766_0xfded;
    undefined field31767_0xfdee;
    undefined field31768_0xfdef;
    undefined field31769_0xfdf0;
    undefined field31770_0xfdf1;
    undefined field31771_0xfdf2;
    undefined field31772_0xfdf3;
    undefined field31773_0xfdf4;
    undefined field31774_0xfdf5;
    undefined field31775_0xfdf6;
    undefined field31776_0xfdf7;
    undefined field31777_0xfdf8;
    undefined field31778_0xfdf9;
    undefined field31779_0xfdfa;
    undefined field31780_0xfdfb;
    undefined field31781_0xfdfc;
    undefined field31782_0xfdfd;
    undefined field31783_0xfdfe;
    undefined field31784_0xfdff;
    undefined field31785_0xfe00;
    undefined field31786_0xfe01;
    undefined field31787_0xfe02;
    undefined field31788_0xfe03;
    undefined field31789_0xfe04;
    undefined field31790_0xfe05;
    undefined field31791_0xfe06;
    undefined field31792_0xfe07;
    undefined field31793_0xfe08;
    undefined field31794_0xfe09;
    undefined field31795_0xfe0a;
    undefined field31796_0xfe0b;
    undefined field31797_0xfe0c;
    undefined field31798_0xfe0d;
    undefined field31799_0xfe0e;
    undefined field31800_0xfe0f;
    undefined field31801_0xfe10;
    undefined field31802_0xfe11;
    undefined field31803_0xfe12;
    undefined field31804_0xfe13;
    undefined field31805_0xfe14;
    undefined field31806_0xfe15;
    undefined field31807_0xfe16;
    undefined field31808_0xfe17;
    undefined field31809_0xfe18;
    undefined field31810_0xfe19;
    undefined field31811_0xfe1a;
    undefined field31812_0xfe1b;
    undefined field31813_0xfe1c;
    undefined field31814_0xfe1d;
    undefined field31815_0xfe1e;
    undefined field31816_0xfe1f;
    undefined field31817_0xfe20;
    undefined field31818_0xfe21;
    undefined field31819_0xfe22;
    undefined field31820_0xfe23;
    undefined field31821_0xfe24;
    undefined field31822_0xfe25;
    undefined field31823_0xfe26;
    undefined field31824_0xfe27;
    undefined field31825_0xfe28;
    undefined field31826_0xfe29;
    undefined field31827_0xfe2a;
    undefined field31828_0xfe2b;
    undefined field31829_0xfe2c;
    undefined field31830_0xfe2d;
    undefined field31831_0xfe2e;
    undefined field31832_0xfe2f;
    undefined field31833_0xfe30;
    undefined field31834_0xfe31;
    undefined field31835_0xfe32;
    undefined field31836_0xfe33;
    undefined field31837_0xfe34;
    undefined field31838_0xfe35;
    undefined field31839_0xfe36;
    undefined field31840_0xfe37;
    undefined field31841_0xfe38;
    undefined field31842_0xfe39;
    undefined field31843_0xfe3a;
    undefined field31844_0xfe3b;
    undefined field31845_0xfe3c;
    undefined field31846_0xfe3d;
    undefined field31847_0xfe3e;
    undefined field31848_0xfe3f;
    undefined field31849_0xfe40;
    undefined field31850_0xfe41;
    undefined field31851_0xfe42;
    undefined field31852_0xfe43;
    undefined field31853_0xfe44;
    undefined field31854_0xfe45;
    undefined field31855_0xfe46;
    undefined field31856_0xfe47;
    undefined field31857_0xfe48;
    undefined field31858_0xfe49;
    undefined field31859_0xfe4a;
    undefined field31860_0xfe4b;
    undefined field31861_0xfe4c;
    undefined field31862_0xfe4d;
    undefined field31863_0xfe4e;
    undefined field31864_0xfe4f;
    undefined field31865_0xfe50;
    undefined field31866_0xfe51;
    undefined field31867_0xfe52;
    undefined field31868_0xfe53;
    undefined field31869_0xfe54;
    undefined field31870_0xfe55;
    undefined field31871_0xfe56;
    undefined field31872_0xfe57;
    undefined field31873_0xfe58;
    undefined field31874_0xfe59;
    undefined field31875_0xfe5a;
    undefined field31876_0xfe5b;
    undefined field31877_0xfe5c;
    undefined field31878_0xfe5d;
    undefined field31879_0xfe5e;
    undefined field31880_0xfe5f;
    undefined field31881_0xfe60;
    undefined field31882_0xfe61;
    undefined field31883_0xfe62;
    undefined field31884_0xfe63;
    undefined field31885_0xfe64;
    undefined field31886_0xfe65;
    undefined field31887_0xfe66;
    undefined field31888_0xfe67;
    undefined field31889_0xfe68;
    undefined field31890_0xfe69;
    undefined field31891_0xfe6a;
    undefined field31892_0xfe6b;
    undefined field31893_0xfe6c;
    undefined field31894_0xfe6d;
    undefined field31895_0xfe6e;
    undefined field31896_0xfe6f;
    undefined field31897_0xfe70;
    undefined field31898_0xfe71;
    undefined field31899_0xfe72;
    undefined field31900_0xfe73;
    undefined field31901_0xfe74;
    undefined field31902_0xfe75;
    undefined field31903_0xfe76;
    undefined field31904_0xfe77;
    undefined field31905_0xfe78;
    undefined field31906_0xfe79;
    undefined field31907_0xfe7a;
    undefined field31908_0xfe7b;
    undefined field31909_0xfe7c;
    undefined field31910_0xfe7d;
    undefined field31911_0xfe7e;
    undefined field31912_0xfe7f;
    undefined field31913_0xfe80;
    undefined field31914_0xfe81;
    undefined field31915_0xfe82;
    undefined field31916_0xfe83;
    undefined field31917_0xfe84;
    undefined field31918_0xfe85;
    undefined field31919_0xfe86;
    undefined field31920_0xfe87;
    undefined field31921_0xfe88;
    undefined field31922_0xfe89;
    undefined field31923_0xfe8a;
    undefined field31924_0xfe8b;
    undefined field31925_0xfe8c;
    undefined field31926_0xfe8d;
    undefined field31927_0xfe8e;
    undefined field31928_0xfe8f;
    undefined field31929_0xfe90;
    undefined field31930_0xfe91;
    undefined field31931_0xfe92;
    undefined field31932_0xfe93;
    undefined field31933_0xfe94;
    undefined field31934_0xfe95;
    undefined field31935_0xfe96;
    undefined field31936_0xfe97;
    undefined field31937_0xfe98;
    undefined field31938_0xfe99;
    undefined field31939_0xfe9a;
    undefined field31940_0xfe9b;
    undefined field31941_0xfe9c;
    undefined field31942_0xfe9d;
    undefined field31943_0xfe9e;
    undefined field31944_0xfe9f;
    undefined field31945_0xfea0;
    undefined field31946_0xfea1;
    undefined field31947_0xfea2;
    undefined field31948_0xfea3;
    undefined field31949_0xfea4;
    undefined field31950_0xfea5;
    undefined field31951_0xfea6;
    undefined field31952_0xfea7;
    undefined field31953_0xfea8;
    undefined field31954_0xfea9;
    undefined field31955_0xfeaa;
    undefined field31956_0xfeab;
    undefined field31957_0xfeac;
    undefined field31958_0xfead;
    undefined field31959_0xfeae;
    undefined field31960_0xfeaf;
    undefined field31961_0xfeb0;
    undefined field31962_0xfeb1;
    undefined field31963_0xfeb2;
    undefined field31964_0xfeb3;
    undefined field31965_0xfeb4;
    undefined field31966_0xfeb5;
    undefined field31967_0xfeb6;
    undefined field31968_0xfeb7;
    undefined field31969_0xfeb8;
    undefined field31970_0xfeb9;
    undefined field31971_0xfeba;
    undefined field31972_0xfebb;
    undefined field31973_0xfebc;
    undefined field31974_0xfebd;
    undefined field31975_0xfebe;
    undefined field31976_0xfebf;
    undefined field31977_0xfec0;
    undefined field31978_0xfec1;
    undefined field31979_0xfec2;
    undefined field31980_0xfec3;
    undefined field31981_0xfec4;
    undefined field31982_0xfec5;
    undefined field31983_0xfec6;
    undefined field31984_0xfec7;
    undefined field31985_0xfec8;
    undefined field31986_0xfec9;
    undefined field31987_0xfeca;
    undefined field31988_0xfecb;
    undefined field31989_0xfecc;
    undefined field31990_0xfecd;
    undefined field31991_0xfece;
    undefined field31992_0xfecf;
    undefined field31993_0xfed0;
    undefined field31994_0xfed1;
    undefined field31995_0xfed2;
    undefined field31996_0xfed3;
    undefined field31997_0xfed4;
    undefined field31998_0xfed5;
    undefined field31999_0xfed6;
    undefined field32000_0xfed7;
    undefined field32001_0xfed8;
    undefined field32002_0xfed9;
    undefined field32003_0xfeda;
    undefined field32004_0xfedb;
    undefined field32005_0xfedc;
    undefined field32006_0xfedd;
    undefined field32007_0xfede;
    undefined field32008_0xfedf;
    undefined field32009_0xfee0;
    undefined field32010_0xfee1;
    undefined field32011_0xfee2;
    undefined field32012_0xfee3;
    undefined field32013_0xfee4;
    undefined field32014_0xfee5;
    undefined field32015_0xfee6;
    undefined field32016_0xfee7;
    undefined field32017_0xfee8;
    undefined field32018_0xfee9;
    undefined field32019_0xfeea;
    undefined field32020_0xfeeb;
    undefined field32021_0xfeec;
    undefined field32022_0xfeed;
    undefined field32023_0xfeee;
    undefined field32024_0xfeef;
    undefined field32025_0xfef0;
    undefined field32026_0xfef1;
    undefined field32027_0xfef2;
    undefined field32028_0xfef3;
    undefined field32029_0xfef4;
    undefined field32030_0xfef5;
    undefined field32031_0xfef6;
    undefined field32032_0xfef7;
    undefined field32033_0xfef8;
    undefined field32034_0xfef9;
    undefined field32035_0xfefa;
    undefined field32036_0xfefb;
    undefined field32037_0xfefc;
    undefined field32038_0xfefd;
    undefined field32039_0xfefe;
    undefined field32040_0xfeff;
    undefined field32041_0xff00;
    undefined field32042_0xff01;
    undefined field32043_0xff02;
    undefined field32044_0xff03;
    undefined field32045_0xff04;
    undefined field32046_0xff05;
    undefined field32047_0xff06;
    undefined field32048_0xff07;
    undefined field32049_0xff08;
    undefined field32050_0xff09;
    undefined field32051_0xff0a;
    undefined field32052_0xff0b;
    undefined field32053_0xff0c;
    undefined field32054_0xff0d;
    undefined field32055_0xff0e;
    undefined field32056_0xff0f;
    undefined field32057_0xff10;
    undefined field32058_0xff11;
    undefined field32059_0xff12;
    undefined field32060_0xff13;
    undefined field32061_0xff14;
    undefined field32062_0xff15;
    undefined field32063_0xff16;
    undefined field32064_0xff17;
    undefined field32065_0xff18;
    undefined field32066_0xff19;
    undefined field32067_0xff1a;
    undefined field32068_0xff1b;
    undefined field32069_0xff1c;
    undefined field32070_0xff1d;
    undefined field32071_0xff1e;
    undefined field32072_0xff1f;
    undefined field32073_0xff20;
    undefined field32074_0xff21;
    undefined field32075_0xff22;
    undefined field32076_0xff23;
    undefined field32077_0xff24;
    undefined field32078_0xff25;
    undefined field32079_0xff26;
    undefined field32080_0xff27;
    undefined field32081_0xff28;
    undefined field32082_0xff29;
    undefined field32083_0xff2a;
    undefined field32084_0xff2b;
    undefined field32085_0xff2c;
    undefined field32086_0xff2d;
    undefined field32087_0xff2e;
    undefined field32088_0xff2f;
    undefined field32089_0xff30;
    undefined field32090_0xff31;
    undefined field32091_0xff32;
    undefined field32092_0xff33;
    undefined field32093_0xff34;
    undefined field32094_0xff35;
    undefined field32095_0xff36;
    undefined field32096_0xff37;
    undefined field32097_0xff38;
    undefined field32098_0xff39;
    undefined field32099_0xff3a;
    undefined field32100_0xff3b;
    undefined field32101_0xff3c;
    undefined field32102_0xff3d;
    undefined field32103_0xff3e;
    undefined field32104_0xff3f;
    undefined field32105_0xff40;
    undefined field32106_0xff41;
    undefined field32107_0xff42;
    undefined field32108_0xff43;
    undefined field32109_0xff44;
    undefined field32110_0xff45;
    undefined field32111_0xff46;
    undefined field32112_0xff47;
    undefined field32113_0xff48;
    undefined field32114_0xff49;
    undefined field32115_0xff4a;
    undefined field32116_0xff4b;
    undefined field32117_0xff4c;
    undefined field32118_0xff4d;
    undefined field32119_0xff4e;
    undefined field32120_0xff4f;
    undefined field32121_0xff50;
    undefined field32122_0xff51;
    undefined field32123_0xff52;
    undefined field32124_0xff53;
    undefined field32125_0xff54;
    undefined field32126_0xff55;
    undefined field32127_0xff56;
    undefined field32128_0xff57;
    undefined field32129_0xff58;
    undefined field32130_0xff59;
    undefined field32131_0xff5a;
    undefined field32132_0xff5b;
    undefined field32133_0xff5c;
    undefined field32134_0xff5d;
    undefined field32135_0xff5e;
    undefined field32136_0xff5f;
    undefined field32137_0xff60;
    undefined field32138_0xff61;
    undefined field32139_0xff62;
    undefined field32140_0xff63;
    undefined field32141_0xff64;
    undefined field32142_0xff65;
    undefined field32143_0xff66;
    undefined field32144_0xff67;
    undefined field32145_0xff68;
    undefined field32146_0xff69;
    undefined field32147_0xff6a;
    undefined field32148_0xff6b;
    undefined field32149_0xff6c;
    undefined field32150_0xff6d;
    undefined field32151_0xff6e;
    undefined field32152_0xff6f;
    undefined field32153_0xff70;
    undefined field32154_0xff71;
    undefined field32155_0xff72;
    undefined field32156_0xff73;
    undefined field32157_0xff74;
    undefined field32158_0xff75;
    undefined field32159_0xff76;
    undefined field32160_0xff77;
    undefined field32161_0xff78;
    undefined field32162_0xff79;
    undefined field32163_0xff7a;
    undefined field32164_0xff7b;
    undefined field32165_0xff7c;
    undefined field32166_0xff7d;
    undefined field32167_0xff7e;
    undefined field32168_0xff7f;
    undefined field32169_0xff80;
    undefined field32170_0xff81;
    undefined field32171_0xff82;
    undefined field32172_0xff83;
    undefined field32173_0xff84;
    undefined field32174_0xff85;
    undefined field32175_0xff86;
    undefined field32176_0xff87;
    undefined field32177_0xff88;
    undefined field32178_0xff89;
    undefined field32179_0xff8a;
    undefined field32180_0xff8b;
    undefined field32181_0xff8c;
    undefined field32182_0xff8d;
    undefined field32183_0xff8e;
    undefined field32184_0xff8f;
    undefined field32185_0xff90;
    undefined field32186_0xff91;
    undefined field32187_0xff92;
    undefined field32188_0xff93;
    undefined field32189_0xff94;
    undefined field32190_0xff95;
    undefined field32191_0xff96;
    undefined field32192_0xff97;
    undefined field32193_0xff98;
    undefined field32194_0xff99;
    undefined field32195_0xff9a;
    undefined field32196_0xff9b;
    undefined field32197_0xff9c;
    undefined field32198_0xff9d;
    undefined field32199_0xff9e;
    undefined field32200_0xff9f;
    undefined field32201_0xffa0;
    undefined field32202_0xffa1;
    undefined field32203_0xffa2;
    undefined field32204_0xffa3;
    undefined field32205_0xffa4;
    undefined field32206_0xffa5;
    undefined field32207_0xffa6;
    undefined field32208_0xffa7;
    undefined field32209_0xffa8;
    undefined field32210_0xffa9;
    undefined field32211_0xffaa;
    undefined field32212_0xffab;
    undefined field32213_0xffac;
    undefined field32214_0xffad;
    undefined field32215_0xffae;
    undefined field32216_0xffaf;
    undefined field32217_0xffb0;
    undefined field32218_0xffb1;
    undefined field32219_0xffb2;
    undefined field32220_0xffb3;
    undefined field32221_0xffb4;
    undefined field32222_0xffb5;
    undefined field32223_0xffb6;
    undefined field32224_0xffb7;
    undefined field32225_0xffb8;
    undefined field32226_0xffb9;
    undefined field32227_0xffba;
    undefined field32228_0xffbb;
    undefined field32229_0xffbc;
    undefined field32230_0xffbd;
    undefined field32231_0xffbe;
    undefined field32232_0xffbf;
    undefined field32233_0xffc0;
    undefined field32234_0xffc1;
    undefined field32235_0xffc2;
    undefined field32236_0xffc3;
    undefined field32237_0xffc4;
    undefined field32238_0xffc5;
    undefined field32239_0xffc6;
    undefined field32240_0xffc7;
    undefined field32241_0xffc8;
    undefined field32242_0xffc9;
    undefined field32243_0xffca;
    undefined field32244_0xffcb;
    undefined field32245_0xffcc;
    undefined field32246_0xffcd;
    undefined field32247_0xffce;
    undefined field32248_0xffcf;
    undefined field32249_0xffd0;
    undefined field32250_0xffd1;
    undefined field32251_0xffd2;
    undefined field32252_0xffd3;
    undefined field32253_0xffd4;
    undefined field32254_0xffd5;
    undefined field32255_0xffd6;
    undefined field32256_0xffd7;
    undefined field32257_0xffd8;
    undefined field32258_0xffd9;
    undefined field32259_0xffda;
    undefined field32260_0xffdb;
    undefined field32261_0xffdc;
    undefined field32262_0xffdd;
    undefined field32263_0xffde;
    undefined field32264_0xffdf;
    undefined field32265_0xffe0;
    undefined field32266_0xffe1;
    undefined field32267_0xffe2;
    undefined field32268_0xffe3;
    undefined field32269_0xffe4;
    undefined field32270_0xffe5;
    undefined field32271_0xffe6;
    undefined field32272_0xffe7;
    undefined field32273_0xffe8;
    undefined field32274_0xffe9;
    undefined field32275_0xffea;
    undefined field32276_0xffeb;
    undefined field32277_0xffec;
    undefined field32278_0xffed;
    undefined field32279_0xffee;
    undefined field32280_0xffef;
    undefined field32281_0xfff0;
    undefined field32282_0xfff1;
    undefined field32283_0xfff2;
    undefined field32284_0xfff3;
    undefined field32285_0xfff4;
    undefined field32286_0xfff5;
    undefined field32287_0xfff6;
    undefined field32288_0xfff7;
    undefined field32289_0xfff8;
    undefined field32290_0xfff9;
    undefined field32291_0xfffa;
    undefined field32292_0xfffb;
    undefined field32293_0xfffc;
    undefined field32294_0xfffd;
    undefined field32295_0xfffe;
    undefined field32296_0xffff;
    undefined field32297_0x10000;
    undefined field32298_0x10001;
    undefined field32299_0x10002;
    undefined field32300_0x10003;
    undefined field32301_0x10004;
    undefined field32302_0x10005;
    undefined field32303_0x10006;
    undefined field32304_0x10007;
    undefined field32305_0x10008;
    undefined field32306_0x10009;
    undefined field32307_0x1000a;
    undefined field32308_0x1000b;
    undefined field32309_0x1000c;
    undefined field32310_0x1000d;
    undefined field32311_0x1000e;
    undefined field32312_0x1000f;
    undefined field32313_0x10010;
    undefined field32314_0x10011;
    undefined field32315_0x10012;
    undefined field32316_0x10013;
    undefined field32317_0x10014;
    undefined field32318_0x10015;
    undefined field32319_0x10016;
    undefined field32320_0x10017;
    undefined field32321_0x10018;
    undefined field32322_0x10019;
    undefined field32323_0x1001a;
    undefined field32324_0x1001b;
    undefined field32325_0x1001c;
    undefined field32326_0x1001d;
    undefined field32327_0x1001e;
    undefined field32328_0x1001f;
    undefined field32329_0x10020;
    undefined field32330_0x10021;
    undefined field32331_0x10022;
    undefined field32332_0x10023;
    undefined field32333_0x10024;
    undefined field32334_0x10025;
    undefined field32335_0x10026;
    undefined field32336_0x10027;
    undefined field32337_0x10028;
    undefined field32338_0x10029;
    undefined field32339_0x1002a;
    undefined field32340_0x1002b;
    undefined field32341_0x1002c;
    undefined field32342_0x1002d;
    undefined field32343_0x1002e;
    undefined field32344_0x1002f;
    undefined field32345_0x10030;
    undefined field32346_0x10031;
    undefined field32347_0x10032;
    undefined field32348_0x10033;
    undefined field32349_0x10034;
    undefined field32350_0x10035;
    undefined field32351_0x10036;
    undefined field32352_0x10037;
    undefined field32353_0x10038;
    undefined field32354_0x10039;
    undefined field32355_0x1003a;
    undefined field32356_0x1003b;
    undefined field32357_0x1003c;
    undefined field32358_0x1003d;
    undefined field32359_0x1003e;
    undefined field32360_0x1003f;
    undefined field32361_0x10040;
    undefined field32362_0x10041;
    undefined field32363_0x10042;
    undefined field32364_0x10043;
    undefined field32365_0x10044;
    undefined field32366_0x10045;
    undefined field32367_0x10046;
    undefined field32368_0x10047;
    undefined field32369_0x10048;
    undefined field32370_0x10049;
    undefined field32371_0x1004a;
    undefined field32372_0x1004b;
    undefined field32373_0x1004c;
    undefined field32374_0x1004d;
    undefined field32375_0x1004e;
    undefined field32376_0x1004f;
    undefined field32377_0x10050;
    undefined field32378_0x10051;
    undefined field32379_0x10052;
    undefined field32380_0x10053;
    undefined field32381_0x10054;
    undefined field32382_0x10055;
    undefined field32383_0x10056;
    undefined field32384_0x10057;
    undefined field32385_0x10058;
    undefined field32386_0x10059;
    undefined field32387_0x1005a;
    undefined field32388_0x1005b;
    undefined field32389_0x1005c;
    undefined field32390_0x1005d;
    undefined field32391_0x1005e;
    undefined field32392_0x1005f;
    undefined field32393_0x10060;
    undefined field32394_0x10061;
    undefined field32395_0x10062;
    undefined field32396_0x10063;
    undefined field32397_0x10064;
    undefined field32398_0x10065;
    undefined field32399_0x10066;
    undefined field32400_0x10067;
    undefined field32401_0x10068;
    undefined field32402_0x10069;
    undefined field32403_0x1006a;
    undefined field32404_0x1006b;
    undefined field32405_0x1006c;
    undefined field32406_0x1006d;
    undefined field32407_0x1006e;
    undefined field32408_0x1006f;
    undefined field32409_0x10070;
    undefined field32410_0x10071;
    undefined field32411_0x10072;
    undefined field32412_0x10073;
    undefined field32413_0x10074;
    undefined field32414_0x10075;
    undefined field32415_0x10076;
    undefined field32416_0x10077;
    undefined field32417_0x10078;
    undefined field32418_0x10079;
    undefined field32419_0x1007a;
    undefined field32420_0x1007b;
    undefined field32421_0x1007c;
    undefined field32422_0x1007d;
    undefined field32423_0x1007e;
    undefined field32424_0x1007f;
    undefined field32425_0x10080;
    undefined field32426_0x10081;
    undefined field32427_0x10082;
    undefined field32428_0x10083;
    undefined field32429_0x10084;
    undefined field32430_0x10085;
    undefined field32431_0x10086;
    undefined field32432_0x10087;
    undefined field32433_0x10088;
    undefined field32434_0x10089;
    undefined field32435_0x1008a;
    undefined field32436_0x1008b;
    undefined field32437_0x1008c;
    undefined field32438_0x1008d;
    undefined field32439_0x1008e;
    undefined field32440_0x1008f;
    undefined field32441_0x10090;
    undefined field32442_0x10091;
    undefined field32443_0x10092;
    undefined field32444_0x10093;
    undefined field32445_0x10094;
    undefined field32446_0x10095;
    undefined field32447_0x10096;
    undefined field32448_0x10097;
    undefined field32449_0x10098;
    undefined field32450_0x10099;
    undefined field32451_0x1009a;
    undefined field32452_0x1009b;
    undefined field32453_0x1009c;
    undefined field32454_0x1009d;
    undefined field32455_0x1009e;
    undefined field32456_0x1009f;
    undefined field32457_0x100a0;
    undefined field32458_0x100a1;
    undefined field32459_0x100a2;
    undefined field32460_0x100a3;
    undefined field32461_0x100a4;
    undefined field32462_0x100a5;
    undefined field32463_0x100a6;
    undefined field32464_0x100a7;
    undefined field32465_0x100a8;
    undefined field32466_0x100a9;
    undefined field32467_0x100aa;
    undefined field32468_0x100ab;
    undefined field32469_0x100ac;
    undefined field32470_0x100ad;
    undefined field32471_0x100ae;
    undefined field32472_0x100af;
    undefined field32473_0x100b0;
    undefined field32474_0x100b1;
    undefined field32475_0x100b2;
    undefined field32476_0x100b3;
    undefined field32477_0x100b4;
    undefined field32478_0x100b5;
    undefined field32479_0x100b6;
    undefined field32480_0x100b7;
    undefined field32481_0x100b8;
    undefined field32482_0x100b9;
    undefined field32483_0x100ba;
    undefined field32484_0x100bb;
    undefined field32485_0x100bc;
    undefined field32486_0x100bd;
    undefined field32487_0x100be;
    undefined field32488_0x100bf;
    undefined field32489_0x100c0;
    undefined field32490_0x100c1;
    undefined field32491_0x100c2;
    undefined field32492_0x100c3;
    undefined field32493_0x100c4;
    undefined field32494_0x100c5;
    undefined field32495_0x100c6;
    undefined field32496_0x100c7;
    undefined field32497_0x100c8;
    undefined field32498_0x100c9;
    undefined field32499_0x100ca;
    undefined field32500_0x100cb;
    undefined field32501_0x100cc;
    undefined field32502_0x100cd;
    undefined field32503_0x100ce;
    undefined field32504_0x100cf;
    undefined field32505_0x100d0;
    undefined field32506_0x100d1;
    undefined field32507_0x100d2;
    undefined field32508_0x100d3;
    undefined field32509_0x100d4;
    undefined field32510_0x100d5;
    undefined field32511_0x100d6;
    undefined field32512_0x100d7;
    undefined field32513_0x100d8;
    undefined field32514_0x100d9;
    undefined field32515_0x100da;
    undefined field32516_0x100db;
    undefined field32517_0x100dc;
    undefined field32518_0x100dd;
    undefined field32519_0x100de;
    undefined field32520_0x100df;
    undefined field32521_0x100e0;
    undefined field32522_0x100e1;
    undefined field32523_0x100e2;
    undefined field32524_0x100e3;
    undefined field32525_0x100e4;
    undefined field32526_0x100e5;
    undefined field32527_0x100e6;
    undefined field32528_0x100e7;
    undefined field32529_0x100e8;
    undefined field32530_0x100e9;
    undefined field32531_0x100ea;
    undefined field32532_0x100eb;
    undefined field32533_0x100ec;
    undefined field32534_0x100ed;
    undefined field32535_0x100ee;
    undefined field32536_0x100ef;
    undefined field32537_0x100f0;
    undefined field32538_0x100f1;
    undefined field32539_0x100f2;
    undefined field32540_0x100f3;
    undefined field32541_0x100f4;
    undefined field32542_0x100f5;
    undefined field32543_0x100f6;
    undefined field32544_0x100f7;
    undefined field32545_0x100f8;
    undefined field32546_0x100f9;
    undefined field32547_0x100fa;
    undefined field32548_0x100fb;
    undefined field32549_0x100fc;
    undefined field32550_0x100fd;
    undefined field32551_0x100fe;
    undefined field32552_0x100ff;
    undefined field32553_0x10100;
    undefined field32554_0x10101;
    undefined field32555_0x10102;
    undefined field32556_0x10103;
    undefined field32557_0x10104;
    undefined field32558_0x10105;
    undefined field32559_0x10106;
    undefined field32560_0x10107;
    undefined field32561_0x10108;
    undefined field32562_0x10109;
    undefined field32563_0x1010a;
    undefined field32564_0x1010b;
    undefined field32565_0x1010c;
    undefined field32566_0x1010d;
    undefined field32567_0x1010e;
    undefined field32568_0x1010f;
    undefined field32569_0x10110;
    undefined field32570_0x10111;
    undefined field32571_0x10112;
    undefined field32572_0x10113;
    undefined field32573_0x10114;
    undefined field32574_0x10115;
    undefined field32575_0x10116;
    undefined field32576_0x10117;
    undefined field32577_0x10118;
    undefined field32578_0x10119;
    undefined field32579_0x1011a;
    undefined field32580_0x1011b;
    undefined field32581_0x1011c;
    undefined field32582_0x1011d;
    undefined field32583_0x1011e;
    undefined field32584_0x1011f;
    undefined field32585_0x10120;
    undefined field32586_0x10121;
    undefined field32587_0x10122;
    undefined field32588_0x10123;
    undefined field32589_0x10124;
    undefined field32590_0x10125;
    undefined field32591_0x10126;
    undefined field32592_0x10127;
    undefined field32593_0x10128;
    undefined field32594_0x10129;
    undefined field32595_0x1012a;
    undefined field32596_0x1012b;
    undefined field32597_0x1012c;
    undefined field32598_0x1012d;
    undefined field32599_0x1012e;
    undefined field32600_0x1012f;
    undefined field32601_0x10130;
    undefined field32602_0x10131;
    undefined field32603_0x10132;
    undefined field32604_0x10133;
    undefined field32605_0x10134;
    undefined field32606_0x10135;
    undefined field32607_0x10136;
    undefined field32608_0x10137;
    undefined field32609_0x10138;
    undefined field32610_0x10139;
    undefined field32611_0x1013a;
    undefined field32612_0x1013b;
    undefined field32613_0x1013c;
    undefined field32614_0x1013d;
    undefined field32615_0x1013e;
    undefined field32616_0x1013f;
    undefined field32617_0x10140;
    undefined field32618_0x10141;
    undefined field32619_0x10142;
    undefined field32620_0x10143;
    undefined field32621_0x10144;
    undefined field32622_0x10145;
    undefined field32623_0x10146;
    undefined field32624_0x10147;
    undefined field32625_0x10148;
    undefined field32626_0x10149;
    undefined field32627_0x1014a;
    undefined field32628_0x1014b;
    undefined field32629_0x1014c;
    undefined field32630_0x1014d;
    undefined field32631_0x1014e;
    undefined field32632_0x1014f;
    undefined field32633_0x10150;
    undefined field32634_0x10151;
    undefined field32635_0x10152;
    undefined field32636_0x10153;
    undefined field32637_0x10154;
    undefined field32638_0x10155;
    undefined field32639_0x10156;
    undefined field32640_0x10157;
    undefined field32641_0x10158;
    undefined field32642_0x10159;
    undefined field32643_0x1015a;
    undefined field32644_0x1015b;
    undefined field32645_0x1015c;
    undefined field32646_0x1015d;
    undefined field32647_0x1015e;
    undefined field32648_0x1015f;
    undefined field32649_0x10160;
    undefined field32650_0x10161;
    undefined field32651_0x10162;
    undefined field32652_0x10163;
    undefined field32653_0x10164;
    undefined field32654_0x10165;
    undefined field32655_0x10166;
    undefined field32656_0x10167;
    undefined field32657_0x10168;
    undefined field32658_0x10169;
    undefined field32659_0x1016a;
    undefined field32660_0x1016b;
    undefined field32661_0x1016c;
    undefined field32662_0x1016d;
    undefined field32663_0x1016e;
    undefined field32664_0x1016f;
    undefined field32665_0x10170;
    undefined field32666_0x10171;
    undefined field32667_0x10172;
    undefined field32668_0x10173;
    undefined field32669_0x10174;
    undefined field32670_0x10175;
    undefined field32671_0x10176;
    undefined field32672_0x10177;
    undefined field32673_0x10178;
    undefined field32674_0x10179;
    undefined field32675_0x1017a;
    undefined field32676_0x1017b;
    undefined field32677_0x1017c;
    undefined field32678_0x1017d;
    undefined field32679_0x1017e;
    undefined field32680_0x1017f;
    undefined field32681_0x10180;
    undefined field32682_0x10181;
    undefined field32683_0x10182;
    undefined field32684_0x10183;
    undefined field32685_0x10184;
    undefined field32686_0x10185;
    undefined field32687_0x10186;
    undefined field32688_0x10187;
    undefined field32689_0x10188;
    undefined field32690_0x10189;
    undefined field32691_0x1018a;
    undefined field32692_0x1018b;
    undefined field32693_0x1018c;
    undefined field32694_0x1018d;
    undefined field32695_0x1018e;
    undefined field32696_0x1018f;
    undefined field32697_0x10190;
    undefined field32698_0x10191;
    undefined field32699_0x10192;
    undefined field32700_0x10193;
    undefined field32701_0x10194;
    undefined field32702_0x10195;
    undefined field32703_0x10196;
    undefined field32704_0x10197;
    undefined field32705_0x10198;
    undefined field32706_0x10199;
    undefined field32707_0x1019a;
    undefined field32708_0x1019b;
    undefined field32709_0x1019c;
    undefined field32710_0x1019d;
    undefined field32711_0x1019e;
    undefined field32712_0x1019f;
    undefined field32713_0x101a0;
    undefined field32714_0x101a1;
    undefined field32715_0x101a2;
    undefined field32716_0x101a3;
    undefined field32717_0x101a4;
    undefined field32718_0x101a5;
    undefined field32719_0x101a6;
    undefined field32720_0x101a7;
    undefined field32721_0x101a8;
    undefined field32722_0x101a9;
    undefined field32723_0x101aa;
    undefined field32724_0x101ab;
    undefined field32725_0x101ac;
    undefined field32726_0x101ad;
    undefined field32727_0x101ae;
    undefined field32728_0x101af;
    undefined field32729_0x101b0;
    undefined field32730_0x101b1;
    undefined field32731_0x101b2;
    undefined field32732_0x101b3;
    undefined field32733_0x101b4;
    undefined field32734_0x101b5;
    undefined field32735_0x101b6;
    undefined field32736_0x101b7;
    undefined field32737_0x101b8;
    undefined field32738_0x101b9;
    undefined field32739_0x101ba;
    undefined field32740_0x101bb;
    undefined field32741_0x101bc;
    undefined field32742_0x101bd;
    undefined field32743_0x101be;
    undefined field32744_0x101bf;
    undefined field32745_0x101c0;
    undefined field32746_0x101c1;
    undefined field32747_0x101c2;
    undefined field32748_0x101c3;
    undefined field32749_0x101c4;
    undefined field32750_0x101c5;
    undefined field32751_0x101c6;
    undefined field32752_0x101c7;
    undefined field32753_0x101c8;
    undefined field32754_0x101c9;
    undefined field32755_0x101ca;
    undefined field32756_0x101cb;
    undefined field32757_0x101cc;
    undefined field32758_0x101cd;
    undefined field32759_0x101ce;
    undefined field32760_0x101cf;
    undefined field32761_0x101d0;
    undefined field32762_0x101d1;
    undefined field32763_0x101d2;
    undefined field32764_0x101d3;
    undefined field32765_0x101d4;
    undefined field32766_0x101d5;
    undefined field32767_0x101d6;
    undefined field32768_0x101d7;
    undefined field32769_0x101d8;
    undefined field32770_0x101d9;
    undefined field32771_0x101da;
    undefined field32772_0x101db;
    undefined field32773_0x101dc;
    undefined field32774_0x101dd;
    undefined field32775_0x101de;
    undefined field32776_0x101df;
    undefined field32777_0x101e0;
    undefined field32778_0x101e1;
    undefined field32779_0x101e2;
    undefined field32780_0x101e3;
    undefined field32781_0x101e4;
    undefined field32782_0x101e5;
    undefined field32783_0x101e6;
    undefined field32784_0x101e7;
    undefined field32785_0x101e8;
    undefined field32786_0x101e9;
    undefined field32787_0x101ea;
    undefined field32788_0x101eb;
    undefined field32789_0x101ec;
    undefined field32790_0x101ed;
    undefined field32791_0x101ee;
    undefined field32792_0x101ef;
    undefined field32793_0x101f0;
    undefined field32794_0x101f1;
    undefined field32795_0x101f2;
    undefined field32796_0x101f3;
    undefined field32797_0x101f4;
    undefined field32798_0x101f5;
    undefined field32799_0x101f6;
    undefined field32800_0x101f7;
    undefined field32801_0x101f8;
    undefined field32802_0x101f9;
    undefined field32803_0x101fa;
    undefined field32804_0x101fb;
    undefined field32805_0x101fc;
    undefined field32806_0x101fd;
    undefined field32807_0x101fe;
    undefined field32808_0x101ff;
    undefined field32809_0x10200;
    undefined field32810_0x10201;
    undefined field32811_0x10202;
    undefined field32812_0x10203;
    undefined field32813_0x10204;
    undefined field32814_0x10205;
    undefined field32815_0x10206;
    undefined field32816_0x10207;
    undefined field32817_0x10208;
    undefined field32818_0x10209;
    undefined field32819_0x1020a;
    undefined field32820_0x1020b;
    undefined field32821_0x1020c;
    undefined field32822_0x1020d;
    undefined field32823_0x1020e;
    undefined field32824_0x1020f;
    undefined field32825_0x10210;
    undefined field32826_0x10211;
    undefined field32827_0x10212;
    undefined field32828_0x10213;
    undefined field32829_0x10214;
    undefined field32830_0x10215;
    undefined field32831_0x10216;
    undefined field32832_0x10217;
    undefined field32833_0x10218;
    undefined field32834_0x10219;
    undefined field32835_0x1021a;
    undefined field32836_0x1021b;
    undefined field32837_0x1021c;
    undefined field32838_0x1021d;
    undefined field32839_0x1021e;
    undefined field32840_0x1021f;
    undefined field32841_0x10220;
    undefined field32842_0x10221;
    undefined field32843_0x10222;
    undefined field32844_0x10223;
    undefined field32845_0x10224;
    undefined field32846_0x10225;
    undefined field32847_0x10226;
    undefined field32848_0x10227;
    undefined field32849_0x10228;
    undefined field32850_0x10229;
    undefined field32851_0x1022a;
    undefined field32852_0x1022b;
    undefined field32853_0x1022c;
    undefined field32854_0x1022d;
    undefined field32855_0x1022e;
    undefined field32856_0x1022f;
    undefined field32857_0x10230;
    undefined field32858_0x10231;
    undefined field32859_0x10232;
    undefined field32860_0x10233;
    undefined field32861_0x10234;
    undefined field32862_0x10235;
    undefined field32863_0x10236;
    undefined field32864_0x10237;
    undefined field32865_0x10238;
    undefined field32866_0x10239;
    undefined field32867_0x1023a;
    undefined field32868_0x1023b;
    undefined field32869_0x1023c;
    undefined field32870_0x1023d;
    undefined field32871_0x1023e;
    undefined field32872_0x1023f;
    undefined field32873_0x10240;
    undefined field32874_0x10241;
    undefined field32875_0x10242;
    undefined field32876_0x10243;
    undefined field32877_0x10244;
    undefined field32878_0x10245;
    undefined field32879_0x10246;
    undefined field32880_0x10247;
    undefined field32881_0x10248;
    undefined field32882_0x10249;
    undefined field32883_0x1024a;
    undefined field32884_0x1024b;
    undefined field32885_0x1024c;
    undefined field32886_0x1024d;
    undefined field32887_0x1024e;
    undefined field32888_0x1024f;
    undefined field32889_0x10250;
    undefined field32890_0x10251;
    undefined field32891_0x10252;
    undefined field32892_0x10253;
    undefined field32893_0x10254;
    undefined field32894_0x10255;
    undefined field32895_0x10256;
    undefined field32896_0x10257;
    undefined field32897_0x10258;
    undefined field32898_0x10259;
    undefined field32899_0x1025a;
    undefined field32900_0x1025b;
    undefined field32901_0x1025c;
    undefined field32902_0x1025d;
    undefined field32903_0x1025e;
    undefined field32904_0x1025f;
    undefined field32905_0x10260;
    undefined field32906_0x10261;
    undefined field32907_0x10262;
    undefined field32908_0x10263;
    undefined field32909_0x10264;
    undefined field32910_0x10265;
    undefined field32911_0x10266;
    undefined field32912_0x10267;
    undefined field32913_0x10268;
    undefined field32914_0x10269;
    undefined field32915_0x1026a;
    undefined field32916_0x1026b;
    undefined field32917_0x1026c;
    undefined field32918_0x1026d;
    undefined field32919_0x1026e;
    undefined field32920_0x1026f;
    undefined field32921_0x10270;
    undefined field32922_0x10271;
    undefined field32923_0x10272;
    undefined field32924_0x10273;
    undefined field32925_0x10274;
    undefined field32926_0x10275;
    undefined field32927_0x10276;
    undefined field32928_0x10277;
    undefined field32929_0x10278;
    undefined field32930_0x10279;
    undefined field32931_0x1027a;
    undefined field32932_0x1027b;
    undefined field32933_0x1027c;
    undefined field32934_0x1027d;
    undefined field32935_0x1027e;
    undefined field32936_0x1027f;
    undefined field32937_0x10280;
    undefined field32938_0x10281;
    undefined field32939_0x10282;
    undefined field32940_0x10283;
    undefined field32941_0x10284;
    undefined field32942_0x10285;
    undefined field32943_0x10286;
    undefined field32944_0x10287;
    undefined field32945_0x10288;
    undefined field32946_0x10289;
    undefined field32947_0x1028a;
    undefined field32948_0x1028b;
    undefined field32949_0x1028c;
    undefined field32950_0x1028d;
    undefined field32951_0x1028e;
    undefined field32952_0x1028f;
    undefined field32953_0x10290;
    undefined field32954_0x10291;
    undefined field32955_0x10292;
    undefined field32956_0x10293;
    undefined field32957_0x10294;
    undefined field32958_0x10295;
    undefined field32959_0x10296;
    undefined field32960_0x10297;
    undefined field32961_0x10298;
    undefined field32962_0x10299;
    undefined field32963_0x1029a;
    undefined field32964_0x1029b;
    undefined field32965_0x1029c;
    undefined field32966_0x1029d;
    undefined field32967_0x1029e;
    undefined field32968_0x1029f;
    undefined field32969_0x102a0;
    undefined field32970_0x102a1;
    undefined field32971_0x102a2;
    undefined field32972_0x102a3;
    undefined field32973_0x102a4;
    undefined field32974_0x102a5;
    undefined field32975_0x102a6;
    undefined field32976_0x102a7;
    undefined field32977_0x102a8;
    undefined field32978_0x102a9;
    undefined field32979_0x102aa;
    undefined field32980_0x102ab;
    undefined field32981_0x102ac;
    undefined field32982_0x102ad;
    undefined field32983_0x102ae;
    undefined field32984_0x102af;
    undefined field32985_0x102b0;
    undefined field32986_0x102b1;
    undefined field32987_0x102b2;
    undefined field32988_0x102b3;
    undefined field32989_0x102b4;
    undefined field32990_0x102b5;
    undefined field32991_0x102b6;
    undefined field32992_0x102b7;
    undefined field32993_0x102b8;
    undefined field32994_0x102b9;
    undefined field32995_0x102ba;
    undefined field32996_0x102bb;
    undefined field32997_0x102bc;
    undefined field32998_0x102bd;
    undefined field32999_0x102be;
    undefined field33000_0x102bf;
    undefined field33001_0x102c0;
    undefined field33002_0x102c1;
    undefined field33003_0x102c2;
    undefined field33004_0x102c3;
    undefined field33005_0x102c4;
    undefined field33006_0x102c5;
    undefined field33007_0x102c6;
    undefined field33008_0x102c7;
    undefined field33009_0x102c8;
    undefined field33010_0x102c9;
    undefined field33011_0x102ca;
    undefined field33012_0x102cb;
    undefined field33013_0x102cc;
    undefined field33014_0x102cd;
    undefined field33015_0x102ce;
    undefined field33016_0x102cf;
    undefined field33017_0x102d0;
    undefined field33018_0x102d1;
    undefined field33019_0x102d2;
    undefined field33020_0x102d3;
    undefined field33021_0x102d4;
    undefined field33022_0x102d5;
    undefined field33023_0x102d6;
    undefined field33024_0x102d7;
    undefined field33025_0x102d8;
    undefined field33026_0x102d9;
    undefined field33027_0x102da;
    undefined field33028_0x102db;
    undefined field33029_0x102dc;
    undefined field33030_0x102dd;
    undefined field33031_0x102de;
    undefined field33032_0x102df;
    undefined field33033_0x102e0;
    undefined field33034_0x102e1;
    undefined field33035_0x102e2;
    undefined field33036_0x102e3;
    undefined field33037_0x102e4;
    undefined field33038_0x102e5;
    undefined field33039_0x102e6;
    undefined field33040_0x102e7;
    undefined field33041_0x102e8;
    undefined field33042_0x102e9;
    undefined field33043_0x102ea;
    undefined field33044_0x102eb;
    undefined field33045_0x102ec;
    undefined field33046_0x102ed;
    undefined field33047_0x102ee;
    undefined field33048_0x102ef;
    undefined field33049_0x102f0;
    undefined field33050_0x102f1;
    undefined field33051_0x102f2;
    undefined field33052_0x102f3;
    undefined field33053_0x102f4;
    undefined field33054_0x102f5;
    undefined field33055_0x102f6;
    undefined field33056_0x102f7;
    undefined field33057_0x102f8;
    undefined field33058_0x102f9;
    undefined field33059_0x102fa;
    undefined field33060_0x102fb;
    undefined field33061_0x102fc;
    undefined field33062_0x102fd;
    undefined field33063_0x102fe;
    undefined field33064_0x102ff;
    undefined field33065_0x10300;
    undefined field33066_0x10301;
    undefined field33067_0x10302;
    undefined field33068_0x10303;
    undefined field33069_0x10304;
    undefined field33070_0x10305;
    undefined field33071_0x10306;
    undefined field33072_0x10307;
    undefined field33073_0x10308;
    undefined field33074_0x10309;
    undefined field33075_0x1030a;
    undefined field33076_0x1030b;
    undefined field33077_0x1030c;
    undefined field33078_0x1030d;
    undefined field33079_0x1030e;
    undefined field33080_0x1030f;
    undefined field33081_0x10310;
    undefined field33082_0x10311;
    undefined field33083_0x10312;
    undefined field33084_0x10313;
    undefined field33085_0x10314;
    undefined field33086_0x10315;
    undefined field33087_0x10316;
    undefined field33088_0x10317;
    undefined field33089_0x10318;
    undefined field33090_0x10319;
    undefined field33091_0x1031a;
    undefined field33092_0x1031b;
    undefined field33093_0x1031c;
    undefined field33094_0x1031d;
    undefined field33095_0x1031e;
    undefined field33096_0x1031f;
    undefined field33097_0x10320;
    undefined field33098_0x10321;
    undefined field33099_0x10322;
    undefined field33100_0x10323;
    undefined field33101_0x10324;
    undefined field33102_0x10325;
    undefined field33103_0x10326;
    undefined field33104_0x10327;
    undefined field33105_0x10328;
    undefined field33106_0x10329;
    undefined field33107_0x1032a;
    undefined field33108_0x1032b;
    undefined field33109_0x1032c;
    undefined field33110_0x1032d;
    undefined field33111_0x1032e;
    undefined field33112_0x1032f;
    undefined field33113_0x10330;
    undefined field33114_0x10331;
    undefined field33115_0x10332;
    undefined field33116_0x10333;
    undefined field33117_0x10334;
    undefined field33118_0x10335;
    undefined field33119_0x10336;
    undefined field33120_0x10337;
    undefined field33121_0x10338;
    undefined field33122_0x10339;
    undefined field33123_0x1033a;
    undefined field33124_0x1033b;
    undefined field33125_0x1033c;
    undefined field33126_0x1033d;
    undefined field33127_0x1033e;
    undefined field33128_0x1033f;
    undefined field33129_0x10340;
    undefined field33130_0x10341;
    undefined field33131_0x10342;
    undefined field33132_0x10343;
    undefined field33133_0x10344;
    undefined field33134_0x10345;
    undefined field33135_0x10346;
    undefined field33136_0x10347;
    undefined field33137_0x10348;
    undefined field33138_0x10349;
    undefined field33139_0x1034a;
    undefined field33140_0x1034b;
    undefined field33141_0x1034c;
    undefined field33142_0x1034d;
    undefined field33143_0x1034e;
    undefined field33144_0x1034f;
    undefined field33145_0x10350;
    undefined field33146_0x10351;
    undefined field33147_0x10352;
    undefined field33148_0x10353;
    undefined field33149_0x10354;
    undefined field33150_0x10355;
    undefined field33151_0x10356;
    undefined field33152_0x10357;
    undefined field33153_0x10358;
    undefined field33154_0x10359;
    undefined field33155_0x1035a;
    undefined field33156_0x1035b;
    undefined field33157_0x1035c;
    undefined field33158_0x1035d;
    undefined field33159_0x1035e;
    undefined field33160_0x1035f;
    undefined field33161_0x10360;
    undefined field33162_0x10361;
    undefined field33163_0x10362;
    undefined field33164_0x10363;
    undefined field33165_0x10364;
    undefined field33166_0x10365;
    undefined field33167_0x10366;
    undefined field33168_0x10367;
    undefined field33169_0x10368;
    undefined field33170_0x10369;
    undefined field33171_0x1036a;
    undefined field33172_0x1036b;
    undefined field33173_0x1036c;
    undefined field33174_0x1036d;
    undefined field33175_0x1036e;
    undefined field33176_0x1036f;
    undefined field33177_0x10370;
    undefined field33178_0x10371;
    undefined field33179_0x10372;
    undefined field33180_0x10373;
    undefined field33181_0x10374;
    undefined field33182_0x10375;
    undefined field33183_0x10376;
    undefined field33184_0x10377;
    undefined field33185_0x10378;
    undefined field33186_0x10379;
    undefined field33187_0x1037a;
    undefined field33188_0x1037b;
    undefined field33189_0x1037c;
    undefined field33190_0x1037d;
    undefined field33191_0x1037e;
    undefined field33192_0x1037f;
    undefined field33193_0x10380;
    undefined field33194_0x10381;
    undefined field33195_0x10382;
    undefined field33196_0x10383;
    undefined field33197_0x10384;
    undefined field33198_0x10385;
    undefined field33199_0x10386;
    undefined field33200_0x10387;
    undefined field33201_0x10388;
    undefined field33202_0x10389;
    undefined field33203_0x1038a;
    undefined field33204_0x1038b;
    undefined field33205_0x1038c;
    undefined field33206_0x1038d;
    undefined field33207_0x1038e;
    undefined field33208_0x1038f;
    undefined field33209_0x10390;
    undefined field33210_0x10391;
    undefined field33211_0x10392;
    undefined field33212_0x10393;
    undefined field33213_0x10394;
    undefined field33214_0x10395;
    undefined field33215_0x10396;
    undefined field33216_0x10397;
    undefined field33217_0x10398;
    undefined field33218_0x10399;
    undefined field33219_0x1039a;
    undefined field33220_0x1039b;
    undefined field33221_0x1039c;
    undefined field33222_0x1039d;
    undefined field33223_0x1039e;
    undefined field33224_0x1039f;
    undefined field33225_0x103a0;
    undefined field33226_0x103a1;
    undefined field33227_0x103a2;
    undefined field33228_0x103a3;
    undefined field33229_0x103a4;
    undefined field33230_0x103a5;
    undefined field33231_0x103a6;
    undefined field33232_0x103a7;
    undefined field33233_0x103a8;
    undefined field33234_0x103a9;
    undefined field33235_0x103aa;
    undefined field33236_0x103ab;
    undefined field33237_0x103ac;
    undefined field33238_0x103ad;
    undefined field33239_0x103ae;
    undefined field33240_0x103af;
    undefined field33241_0x103b0;
    undefined field33242_0x103b1;
    undefined field33243_0x103b2;
    undefined field33244_0x103b3;
    undefined field33245_0x103b4;
    undefined field33246_0x103b5;
    undefined field33247_0x103b6;
    undefined field33248_0x103b7;
    undefined field33249_0x103b8;
    undefined field33250_0x103b9;
    undefined field33251_0x103ba;
    undefined field33252_0x103bb;
    undefined field33253_0x103bc;
    undefined field33254_0x103bd;
    undefined field33255_0x103be;
    undefined field33256_0x103bf;
    undefined field33257_0x103c0;
    undefined field33258_0x103c1;
    undefined field33259_0x103c2;
    undefined field33260_0x103c3;
    undefined field33261_0x103c4;
    undefined field33262_0x103c5;
    undefined field33263_0x103c6;
    undefined field33264_0x103c7;
    undefined field33265_0x103c8;
    undefined field33266_0x103c9;
    undefined field33267_0x103ca;
    undefined field33268_0x103cb;
    undefined field33269_0x103cc;
    undefined field33270_0x103cd;
    undefined field33271_0x103ce;
    undefined field33272_0x103cf;
    undefined field33273_0x103d0;
    undefined field33274_0x103d1;
    undefined field33275_0x103d2;
    undefined field33276_0x103d3;
    undefined field33277_0x103d4;
    undefined field33278_0x103d5;
    undefined field33279_0x103d6;
    undefined field33280_0x103d7;
    undefined field33281_0x103d8;
    undefined field33282_0x103d9;
    undefined field33283_0x103da;
    undefined field33284_0x103db;
    undefined field33285_0x103dc;
    undefined field33286_0x103dd;
    undefined field33287_0x103de;
    undefined field33288_0x103df;
    undefined field33289_0x103e0;
    undefined field33290_0x103e1;
    undefined field33291_0x103e2;
    undefined field33292_0x103e3;
    undefined field33293_0x103e4;
    undefined field33294_0x103e5;
    undefined field33295_0x103e6;
    undefined field33296_0x103e7;
    undefined field33297_0x103e8;
    undefined field33298_0x103e9;
    undefined field33299_0x103ea;
    undefined field33300_0x103eb;
    undefined field33301_0x103ec;
    undefined field33302_0x103ed;
    undefined field33303_0x103ee;
    undefined field33304_0x103ef;
    undefined field33305_0x103f0;
    undefined field33306_0x103f1;
    undefined field33307_0x103f2;
    undefined field33308_0x103f3;
    undefined field33309_0x103f4;
    undefined field33310_0x103f5;
    undefined field33311_0x103f6;
    undefined field33312_0x103f7;
    undefined field33313_0x103f8;
    undefined field33314_0x103f9;
    undefined field33315_0x103fa;
    undefined field33316_0x103fb;
    undefined field33317_0x103fc;
    undefined field33318_0x103fd;
    undefined field33319_0x103fe;
    undefined field33320_0x103ff;
    undefined field33321_0x10400;
    undefined field33322_0x10401;
    undefined field33323_0x10402;
    undefined field33324_0x10403;
    undefined field33325_0x10404;
    undefined field33326_0x10405;
    undefined field33327_0x10406;
    undefined field33328_0x10407;
    undefined field33329_0x10408;
    undefined field33330_0x10409;
    undefined field33331_0x1040a;
    undefined field33332_0x1040b;
    undefined field33333_0x1040c;
    undefined field33334_0x1040d;
    undefined field33335_0x1040e;
    undefined field33336_0x1040f;
    undefined field33337_0x10410;
    undefined field33338_0x10411;
    undefined field33339_0x10412;
    undefined field33340_0x10413;
    undefined field33341_0x10414;
    undefined field33342_0x10415;
    undefined field33343_0x10416;
    undefined field33344_0x10417;
    undefined field33345_0x10418;
    undefined field33346_0x10419;
    undefined field33347_0x1041a;
    undefined field33348_0x1041b;
    undefined field33349_0x1041c;
    undefined field33350_0x1041d;
    undefined field33351_0x1041e;
    undefined field33352_0x1041f;
    undefined field33353_0x10420;
    undefined field33354_0x10421;
    undefined field33355_0x10422;
    undefined field33356_0x10423;
    undefined field33357_0x10424;
    undefined field33358_0x10425;
    undefined field33359_0x10426;
    undefined field33360_0x10427;
    undefined field33361_0x10428;
    undefined field33362_0x10429;
    undefined field33363_0x1042a;
    undefined field33364_0x1042b;
    undefined field33365_0x1042c;
    undefined field33366_0x1042d;
    undefined field33367_0x1042e;
    undefined field33368_0x1042f;
    undefined field33369_0x10430;
    undefined field33370_0x10431;
    undefined field33371_0x10432;
    undefined field33372_0x10433;
    undefined field33373_0x10434;
    undefined field33374_0x10435;
    undefined field33375_0x10436;
    undefined field33376_0x10437;
    undefined field33377_0x10438;
    undefined field33378_0x10439;
    undefined field33379_0x1043a;
    undefined field33380_0x1043b;
    undefined field33381_0x1043c;
    undefined field33382_0x1043d;
    undefined field33383_0x1043e;
    undefined field33384_0x1043f;
    undefined field33385_0x10440;
    undefined field33386_0x10441;
    undefined field33387_0x10442;
    undefined field33388_0x10443;
    undefined field33389_0x10444;
    undefined field33390_0x10445;
    undefined field33391_0x10446;
    undefined field33392_0x10447;
    undefined field33393_0x10448;
    undefined field33394_0x10449;
    undefined field33395_0x1044a;
    undefined field33396_0x1044b;
    undefined field33397_0x1044c;
    undefined field33398_0x1044d;
    undefined field33399_0x1044e;
    undefined field33400_0x1044f;
    undefined field33401_0x10450;
    undefined field33402_0x10451;
    undefined field33403_0x10452;
    undefined field33404_0x10453;
    undefined field33405_0x10454;
    undefined field33406_0x10455;
    undefined field33407_0x10456;
    undefined field33408_0x10457;
    undefined field33409_0x10458;
    undefined field33410_0x10459;
    undefined field33411_0x1045a;
    undefined field33412_0x1045b;
    undefined field33413_0x1045c;
    undefined field33414_0x1045d;
    undefined field33415_0x1045e;
    undefined field33416_0x1045f;
    undefined field33417_0x10460;
    undefined field33418_0x10461;
    undefined field33419_0x10462;
    undefined field33420_0x10463;
    undefined field33421_0x10464;
    undefined field33422_0x10465;
    undefined field33423_0x10466;
    undefined field33424_0x10467;
    undefined field33425_0x10468;
    undefined field33426_0x10469;
    undefined field33427_0x1046a;
    undefined field33428_0x1046b;
    undefined field33429_0x1046c;
    undefined field33430_0x1046d;
    undefined field33431_0x1046e;
    undefined field33432_0x1046f;
    undefined field33433_0x10470;
    undefined field33434_0x10471;
    undefined field33435_0x10472;
    undefined field33436_0x10473;
    undefined field33437_0x10474;
    undefined field33438_0x10475;
    undefined field33439_0x10476;
    undefined field33440_0x10477;
    undefined field33441_0x10478;
    undefined field33442_0x10479;
    undefined field33443_0x1047a;
    undefined field33444_0x1047b;
    undefined field33445_0x1047c;
    undefined field33446_0x1047d;
    undefined field33447_0x1047e;
    undefined field33448_0x1047f;
    undefined field33449_0x10480;
    undefined field33450_0x10481;
    undefined field33451_0x10482;
    undefined field33452_0x10483;
    undefined field33453_0x10484;
    undefined field33454_0x10485;
    undefined field33455_0x10486;
    undefined field33456_0x10487;
    undefined field33457_0x10488;
    undefined field33458_0x10489;
    undefined field33459_0x1048a;
    undefined field33460_0x1048b;
    undefined field33461_0x1048c;
    undefined field33462_0x1048d;
    undefined field33463_0x1048e;
    undefined field33464_0x1048f;
    undefined field33465_0x10490;
    undefined field33466_0x10491;
    undefined field33467_0x10492;
    undefined field33468_0x10493;
    undefined field33469_0x10494;
    undefined field33470_0x10495;
    undefined field33471_0x10496;
    undefined field33472_0x10497;
    undefined field33473_0x10498;
    undefined field33474_0x10499;
    undefined field33475_0x1049a;
    undefined field33476_0x1049b;
    undefined field33477_0x1049c;
    undefined field33478_0x1049d;
    undefined field33479_0x1049e;
    undefined field33480_0x1049f;
    undefined field33481_0x104a0;
    undefined field33482_0x104a1;
    undefined field33483_0x104a2;
    undefined field33484_0x104a3;
    undefined field33485_0x104a4;
    undefined field33486_0x104a5;
    undefined field33487_0x104a6;
    undefined field33488_0x104a7;
    undefined field33489_0x104a8;
    undefined field33490_0x104a9;
    undefined field33491_0x104aa;
    undefined field33492_0x104ab;
    undefined field33493_0x104ac;
    undefined field33494_0x104ad;
    undefined field33495_0x104ae;
    undefined field33496_0x104af;
    undefined field33497_0x104b0;
    undefined field33498_0x104b1;
    undefined field33499_0x104b2;
    undefined field33500_0x104b3;
    undefined field33501_0x104b4;
    undefined field33502_0x104b5;
    undefined field33503_0x104b6;
    undefined field33504_0x104b7;
    undefined field33505_0x104b8;
    undefined field33506_0x104b9;
    undefined field33507_0x104ba;
    undefined field33508_0x104bb;
    undefined field33509_0x104bc;
    undefined field33510_0x104bd;
    undefined field33511_0x104be;
    undefined field33512_0x104bf;
    undefined field33513_0x104c0;
    undefined field33514_0x104c1;
    undefined field33515_0x104c2;
    undefined field33516_0x104c3;
    undefined field33517_0x104c4;
    undefined field33518_0x104c5;
    undefined field33519_0x104c6;
    undefined field33520_0x104c7;
    undefined field33521_0x104c8;
    undefined field33522_0x104c9;
    undefined field33523_0x104ca;
    undefined field33524_0x104cb;
    undefined field33525_0x104cc;
    undefined field33526_0x104cd;
    undefined field33527_0x104ce;
    undefined field33528_0x104cf;
    undefined field33529_0x104d0;
    undefined field33530_0x104d1;
    undefined field33531_0x104d2;
    undefined field33532_0x104d3;
    undefined field33533_0x104d4;
    undefined field33534_0x104d5;
    undefined field33535_0x104d6;
    undefined field33536_0x104d7;
    undefined field33537_0x104d8;
    undefined field33538_0x104d9;
    undefined field33539_0x104da;
    undefined field33540_0x104db;
    undefined field33541_0x104dc;
    undefined field33542_0x104dd;
    undefined field33543_0x104de;
    undefined field33544_0x104df;
    undefined field33545_0x104e0;
    undefined field33546_0x104e1;
    undefined field33547_0x104e2;
    undefined field33548_0x104e3;
    undefined field33549_0x104e4;
    undefined field33550_0x104e5;
    undefined field33551_0x104e6;
    undefined field33552_0x104e7;
    undefined field33553_0x104e8;
    undefined field33554_0x104e9;
    undefined field33555_0x104ea;
    undefined field33556_0x104eb;
    undefined field33557_0x104ec;
    undefined field33558_0x104ed;
    undefined field33559_0x104ee;
    undefined field33560_0x104ef;
    undefined field33561_0x104f0;
    undefined field33562_0x104f1;
    undefined field33563_0x104f2;
    undefined field33564_0x104f3;
    undefined field33565_0x104f4;
    undefined field33566_0x104f5;
    undefined field33567_0x104f6;
    undefined field33568_0x104f7;
    undefined field33569_0x104f8;
    undefined field33570_0x104f9;
    undefined field33571_0x104fa;
    undefined field33572_0x104fb;
    undefined field33573_0x104fc;
    undefined field33574_0x104fd;
    undefined field33575_0x104fe;
    undefined field33576_0x104ff;
    undefined field33577_0x10500;
    undefined field33578_0x10501;
    undefined field33579_0x10502;
    undefined field33580_0x10503;
    undefined field33581_0x10504;
    undefined field33582_0x10505;
    undefined field33583_0x10506;
    undefined field33584_0x10507;
    undefined field33585_0x10508;
    undefined field33586_0x10509;
    undefined field33587_0x1050a;
    undefined field33588_0x1050b;
    undefined field33589_0x1050c;
    undefined field33590_0x1050d;
    undefined field33591_0x1050e;
    undefined field33592_0x1050f;
    undefined field33593_0x10510;
    undefined field33594_0x10511;
    undefined field33595_0x10512;
    undefined field33596_0x10513;
    undefined field33597_0x10514;
    undefined field33598_0x10515;
    undefined field33599_0x10516;
    undefined field33600_0x10517;
    undefined field33601_0x10518;
    undefined field33602_0x10519;
    undefined field33603_0x1051a;
    undefined field33604_0x1051b;
    undefined field33605_0x1051c;
    undefined field33606_0x1051d;
    undefined field33607_0x1051e;
    undefined field33608_0x1051f;
    undefined field33609_0x10520;
    undefined field33610_0x10521;
    undefined field33611_0x10522;
    undefined field33612_0x10523;
    undefined field33613_0x10524;
    undefined field33614_0x10525;
    undefined field33615_0x10526;
    undefined field33616_0x10527;
    undefined field33617_0x10528;
    undefined field33618_0x10529;
    undefined field33619_0x1052a;
    undefined field33620_0x1052b;
    undefined field33621_0x1052c;
    undefined field33622_0x1052d;
    undefined field33623_0x1052e;
    undefined field33624_0x1052f;
    undefined field33625_0x10530;
    undefined field33626_0x10531;
    undefined field33627_0x10532;
    undefined field33628_0x10533;
    undefined field33629_0x10534;
    undefined field33630_0x10535;
    undefined field33631_0x10536;
    undefined field33632_0x10537;
    undefined field33633_0x10538;
    undefined field33634_0x10539;
    undefined field33635_0x1053a;
    undefined field33636_0x1053b;
    undefined field33637_0x1053c;
    undefined field33638_0x1053d;
    undefined field33639_0x1053e;
    undefined field33640_0x1053f;
    undefined field33641_0x10540;
    undefined field33642_0x10541;
    undefined field33643_0x10542;
    undefined field33644_0x10543;
    undefined field33645_0x10544;
    undefined field33646_0x10545;
    undefined field33647_0x10546;
    undefined field33648_0x10547;
    undefined field33649_0x10548;
    undefined field33650_0x10549;
    undefined field33651_0x1054a;
    undefined field33652_0x1054b;
    undefined field33653_0x1054c;
    undefined field33654_0x1054d;
    undefined field33655_0x1054e;
    undefined field33656_0x1054f;
    undefined field33657_0x10550;
    undefined field33658_0x10551;
    undefined field33659_0x10552;
    undefined field33660_0x10553;
    undefined field33661_0x10554;
    undefined field33662_0x10555;
    undefined field33663_0x10556;
    undefined field33664_0x10557;
    undefined field33665_0x10558;
    undefined field33666_0x10559;
    undefined field33667_0x1055a;
    undefined field33668_0x1055b;
    undefined field33669_0x1055c;
    undefined field33670_0x1055d;
    undefined field33671_0x1055e;
    undefined field33672_0x1055f;
    undefined field33673_0x10560;
    undefined field33674_0x10561;
    undefined field33675_0x10562;
    undefined field33676_0x10563;
    undefined field33677_0x10564;
    undefined field33678_0x10565;
    undefined field33679_0x10566;
    undefined field33680_0x10567;
    undefined field33681_0x10568;
    undefined field33682_0x10569;
    undefined field33683_0x1056a;
    undefined field33684_0x1056b;
    undefined field33685_0x1056c;
    undefined field33686_0x1056d;
    undefined field33687_0x1056e;
    undefined field33688_0x1056f;
    undefined field33689_0x10570;
    undefined field33690_0x10571;
    undefined field33691_0x10572;
    undefined field33692_0x10573;
    undefined field33693_0x10574;
    undefined field33694_0x10575;
    undefined field33695_0x10576;
    undefined field33696_0x10577;
    undefined field33697_0x10578;
    undefined field33698_0x10579;
    undefined field33699_0x1057a;
    undefined field33700_0x1057b;
    undefined field33701_0x1057c;
    undefined field33702_0x1057d;
    undefined field33703_0x1057e;
    undefined field33704_0x1057f;
    undefined field33705_0x10580;
    undefined field33706_0x10581;
    undefined field33707_0x10582;
    undefined field33708_0x10583;
    undefined field33709_0x10584;
    undefined field33710_0x10585;
    undefined field33711_0x10586;
    undefined field33712_0x10587;
    undefined field33713_0x10588;
    undefined field33714_0x10589;
    undefined field33715_0x1058a;
    undefined field33716_0x1058b;
    undefined field33717_0x1058c;
    undefined field33718_0x1058d;
    undefined field33719_0x1058e;
    undefined field33720_0x1058f;
    undefined field33721_0x10590;
    undefined field33722_0x10591;
    undefined field33723_0x10592;
    undefined field33724_0x10593;
    undefined field33725_0x10594;
    undefined field33726_0x10595;
    undefined field33727_0x10596;
    undefined field33728_0x10597;
    undefined field33729_0x10598;
    undefined field33730_0x10599;
    undefined field33731_0x1059a;
    undefined field33732_0x1059b;
    undefined field33733_0x1059c;
    undefined field33734_0x1059d;
    undefined field33735_0x1059e;
    undefined field33736_0x1059f;
    undefined field33737_0x105a0;
    undefined field33738_0x105a1;
    undefined field33739_0x105a2;
    undefined field33740_0x105a3;
    undefined field33741_0x105a4;
    undefined field33742_0x105a5;
    undefined field33743_0x105a6;
    undefined field33744_0x105a7;
    undefined field33745_0x105a8;
    undefined field33746_0x105a9;
    undefined field33747_0x105aa;
    undefined field33748_0x105ab;
    undefined field33749_0x105ac;
    undefined field33750_0x105ad;
    undefined field33751_0x105ae;
    undefined field33752_0x105af;
    undefined field33753_0x105b0;
    undefined field33754_0x105b1;
    undefined field33755_0x105b2;
    undefined field33756_0x105b3;
    undefined field33757_0x105b4;
    undefined field33758_0x105b5;
    undefined field33759_0x105b6;
    undefined field33760_0x105b7;
    undefined field33761_0x105b8;
    undefined field33762_0x105b9;
    undefined field33763_0x105ba;
    undefined field33764_0x105bb;
    undefined field33765_0x105bc;
    undefined field33766_0x105bd;
    undefined field33767_0x105be;
    undefined field33768_0x105bf;
    undefined field33769_0x105c0;
    undefined field33770_0x105c1;
    undefined field33771_0x105c2;
    undefined field33772_0x105c3;
    undefined field33773_0x105c4;
    undefined field33774_0x105c5;
    undefined field33775_0x105c6;
    undefined field33776_0x105c7;
    undefined field33777_0x105c8;
    undefined field33778_0x105c9;
    undefined field33779_0x105ca;
    undefined field33780_0x105cb;
    undefined field33781_0x105cc;
    undefined field33782_0x105cd;
    undefined field33783_0x105ce;
    undefined field33784_0x105cf;
    undefined field33785_0x105d0;
    undefined field33786_0x105d1;
    undefined field33787_0x105d2;
    undefined field33788_0x105d3;
    undefined field33789_0x105d4;
    undefined field33790_0x105d5;
    undefined field33791_0x105d6;
    undefined field33792_0x105d7;
    undefined field33793_0x105d8;
    undefined field33794_0x105d9;
    undefined field33795_0x105da;
    undefined field33796_0x105db;
    undefined field33797_0x105dc;
    undefined field33798_0x105dd;
    undefined field33799_0x105de;
    undefined field33800_0x105df;
    undefined field33801_0x105e0;
    undefined field33802_0x105e1;
    undefined field33803_0x105e2;
    undefined field33804_0x105e3;
    undefined field33805_0x105e4;
    undefined field33806_0x105e5;
    undefined field33807_0x105e6;
    undefined field33808_0x105e7;
    undefined field33809_0x105e8;
    undefined field33810_0x105e9;
    undefined field33811_0x105ea;
    undefined field33812_0x105eb;
    undefined field33813_0x105ec;
    undefined field33814_0x105ed;
    undefined field33815_0x105ee;
    undefined field33816_0x105ef;
    undefined field33817_0x105f0;
    undefined field33818_0x105f1;
    undefined field33819_0x105f2;
    undefined field33820_0x105f3;
    undefined field33821_0x105f4;
    undefined field33822_0x105f5;
    undefined field33823_0x105f6;
    undefined field33824_0x105f7;
    undefined field33825_0x105f8;
    undefined field33826_0x105f9;
    undefined field33827_0x105fa;
    undefined field33828_0x105fb;
    undefined field33829_0x105fc;
    undefined field33830_0x105fd;
    undefined field33831_0x105fe;
    undefined field33832_0x105ff;
    undefined field33833_0x10600;
    undefined field33834_0x10601;
    undefined field33835_0x10602;
    undefined field33836_0x10603;
    undefined field33837_0x10604;
    undefined field33838_0x10605;
    undefined field33839_0x10606;
    undefined field33840_0x10607;
    undefined field33841_0x10608;
    undefined field33842_0x10609;
    undefined field33843_0x1060a;
    undefined field33844_0x1060b;
    undefined field33845_0x1060c;
    undefined field33846_0x1060d;
    undefined field33847_0x1060e;
    undefined field33848_0x1060f;
    undefined field33849_0x10610;
    undefined field33850_0x10611;
    undefined field33851_0x10612;
    undefined field33852_0x10613;
    undefined field33853_0x10614;
    undefined field33854_0x10615;
    undefined field33855_0x10616;
    undefined field33856_0x10617;
    undefined field33857_0x10618;
    undefined field33858_0x10619;
    undefined field33859_0x1061a;
    undefined field33860_0x1061b;
    undefined field33861_0x1061c;
    undefined field33862_0x1061d;
    undefined field33863_0x1061e;
    undefined field33864_0x1061f;
    undefined field33865_0x10620;
    undefined field33866_0x10621;
    undefined field33867_0x10622;
    undefined field33868_0x10623;
    undefined field33869_0x10624;
    undefined field33870_0x10625;
    undefined field33871_0x10626;
    undefined field33872_0x10627;
    undefined field33873_0x10628;
    undefined field33874_0x10629;
    undefined field33875_0x1062a;
    undefined field33876_0x1062b;
    undefined field33877_0x1062c;
    undefined field33878_0x1062d;
    undefined field33879_0x1062e;
    undefined field33880_0x1062f;
    undefined field33881_0x10630;
    undefined field33882_0x10631;
    undefined field33883_0x10632;
    undefined field33884_0x10633;
    undefined field33885_0x10634;
    undefined field33886_0x10635;
    undefined field33887_0x10636;
    undefined field33888_0x10637;
    undefined field33889_0x10638;
    undefined field33890_0x10639;
    undefined field33891_0x1063a;
    undefined field33892_0x1063b;
    undefined field33893_0x1063c;
    undefined field33894_0x1063d;
    undefined field33895_0x1063e;
    undefined field33896_0x1063f;
    undefined field33897_0x10640;
    undefined field33898_0x10641;
    undefined field33899_0x10642;
    undefined field33900_0x10643;
    undefined field33901_0x10644;
    undefined field33902_0x10645;
    undefined field33903_0x10646;
    undefined field33904_0x10647;
    undefined field33905_0x10648;
    undefined field33906_0x10649;
    undefined field33907_0x1064a;
    undefined field33908_0x1064b;
    undefined field33909_0x1064c;
    undefined field33910_0x1064d;
    undefined field33911_0x1064e;
    undefined field33912_0x1064f;
    undefined field33913_0x10650;
    undefined field33914_0x10651;
    undefined field33915_0x10652;
    undefined field33916_0x10653;
    undefined field33917_0x10654;
    undefined field33918_0x10655;
    undefined field33919_0x10656;
    undefined field33920_0x10657;
    undefined field33921_0x10658;
    undefined field33922_0x10659;
    undefined field33923_0x1065a;
    undefined field33924_0x1065b;
    undefined field33925_0x1065c;
    undefined field33926_0x1065d;
    undefined field33927_0x1065e;
    undefined field33928_0x1065f;
    undefined field33929_0x10660;
    undefined field33930_0x10661;
    undefined field33931_0x10662;
    undefined field33932_0x10663;
    undefined field33933_0x10664;
    undefined field33934_0x10665;
    undefined field33935_0x10666;
    undefined field33936_0x10667;
    undefined field33937_0x10668;
    undefined field33938_0x10669;
    undefined field33939_0x1066a;
    undefined field33940_0x1066b;
    undefined field33941_0x1066c;
    undefined field33942_0x1066d;
    undefined field33943_0x1066e;
    undefined field33944_0x1066f;
    undefined field33945_0x10670;
    undefined field33946_0x10671;
    undefined field33947_0x10672;
    undefined field33948_0x10673;
    undefined field33949_0x10674;
    undefined field33950_0x10675;
    undefined field33951_0x10676;
    undefined field33952_0x10677;
    undefined field33953_0x10678;
    undefined field33954_0x10679;
    undefined field33955_0x1067a;
    undefined field33956_0x1067b;
    undefined field33957_0x1067c;
    undefined field33958_0x1067d;
    undefined field33959_0x1067e;
    undefined field33960_0x1067f;
    undefined field33961_0x10680;
    undefined field33962_0x10681;
    undefined field33963_0x10682;
    undefined field33964_0x10683;
    undefined field33965_0x10684;
    undefined field33966_0x10685;
    undefined field33967_0x10686;
    undefined field33968_0x10687;
    undefined field33969_0x10688;
    undefined field33970_0x10689;
    undefined field33971_0x1068a;
    undefined field33972_0x1068b;
    undefined field33973_0x1068c;
    undefined field33974_0x1068d;
    undefined field33975_0x1068e;
    undefined field33976_0x1068f;
    undefined field33977_0x10690;
    undefined field33978_0x10691;
    undefined field33979_0x10692;
    undefined field33980_0x10693;
    undefined field33981_0x10694;
    undefined field33982_0x10695;
    undefined field33983_0x10696;
    undefined field33984_0x10697;
    undefined field33985_0x10698;
    undefined field33986_0x10699;
    undefined field33987_0x1069a;
    undefined field33988_0x1069b;
    undefined field33989_0x1069c;
    undefined field33990_0x1069d;
    undefined field33991_0x1069e;
    undefined field33992_0x1069f;
    undefined field33993_0x106a0;
    undefined field33994_0x106a1;
    undefined field33995_0x106a2;
    undefined field33996_0x106a3;
    undefined field33997_0x106a4;
    undefined field33998_0x106a5;
    undefined field33999_0x106a6;
    undefined field34000_0x106a7;
    undefined field34001_0x106a8;
    undefined field34002_0x106a9;
    undefined field34003_0x106aa;
    undefined field34004_0x106ab;
    undefined field34005_0x106ac;
    undefined field34006_0x106ad;
    undefined field34007_0x106ae;
    undefined field34008_0x106af;
    undefined field34009_0x106b0;
    undefined field34010_0x106b1;
    undefined field34011_0x106b2;
    undefined field34012_0x106b3;
    undefined field34013_0x106b4;
    undefined field34014_0x106b5;
    undefined field34015_0x106b6;
    undefined field34016_0x106b7;
    undefined field34017_0x106b8;
    undefined field34018_0x106b9;
    undefined field34019_0x106ba;
    undefined field34020_0x106bb;
    undefined field34021_0x106bc;
    undefined field34022_0x106bd;
    undefined field34023_0x106be;
    undefined field34024_0x106bf;
    undefined field34025_0x106c0;
    undefined field34026_0x106c1;
    undefined field34027_0x106c2;
    undefined field34028_0x106c3;
    undefined field34029_0x106c4;
    undefined field34030_0x106c5;
    undefined field34031_0x106c6;
    undefined field34032_0x106c7;
    undefined field34033_0x106c8;
    undefined field34034_0x106c9;
    undefined field34035_0x106ca;
    undefined field34036_0x106cb;
    undefined field34037_0x106cc;
    undefined field34038_0x106cd;
    undefined field34039_0x106ce;
    undefined field34040_0x106cf;
    undefined field34041_0x106d0;
    undefined field34042_0x106d1;
    undefined field34043_0x106d2;
    undefined field34044_0x106d3;
    undefined field34045_0x106d4;
    undefined field34046_0x106d5;
    undefined field34047_0x106d6;
    undefined field34048_0x106d7;
    undefined field34049_0x106d8;
    undefined field34050_0x106d9;
    undefined field34051_0x106da;
    undefined field34052_0x106db;
    undefined field34053_0x106dc;
    undefined field34054_0x106dd;
    undefined field34055_0x106de;
    undefined field34056_0x106df;
    undefined field34057_0x106e0;
    undefined field34058_0x106e1;
    undefined field34059_0x106e2;
    undefined field34060_0x106e3;
    undefined field34061_0x106e4;
    undefined field34062_0x106e5;
    undefined field34063_0x106e6;
    undefined field34064_0x106e7;
    undefined field34065_0x106e8;
    undefined field34066_0x106e9;
    undefined field34067_0x106ea;
    undefined field34068_0x106eb;
    undefined field34069_0x106ec;
    undefined field34070_0x106ed;
    undefined field34071_0x106ee;
    undefined field34072_0x106ef;
    undefined field34073_0x106f0;
    undefined field34074_0x106f1;
    undefined field34075_0x106f2;
    undefined field34076_0x106f3;
    undefined field34077_0x106f4;
    undefined field34078_0x106f5;
    undefined field34079_0x106f6;
    undefined field34080_0x106f7;
    undefined field34081_0x106f8;
    undefined field34082_0x106f9;
    undefined field34083_0x106fa;
    undefined field34084_0x106fb;
    undefined field34085_0x106fc;
    undefined field34086_0x106fd;
    undefined field34087_0x106fe;
    undefined field34088_0x106ff;
    undefined field34089_0x10700;
    undefined field34090_0x10701;
    undefined field34091_0x10702;
    undefined field34092_0x10703;
    undefined field34093_0x10704;
    undefined field34094_0x10705;
    undefined field34095_0x10706;
    undefined field34096_0x10707;
    undefined field34097_0x10708;
    undefined field34098_0x10709;
    undefined field34099_0x1070a;
    undefined field34100_0x1070b;
    undefined field34101_0x1070c;
    undefined field34102_0x1070d;
    undefined field34103_0x1070e;
    undefined field34104_0x1070f;
    undefined field34105_0x10710;
    undefined field34106_0x10711;
    undefined field34107_0x10712;
    undefined field34108_0x10713;
    undefined field34109_0x10714;
    undefined field34110_0x10715;
    undefined field34111_0x10716;
    undefined field34112_0x10717;
    undefined field34113_0x10718;
    undefined field34114_0x10719;
    undefined field34115_0x1071a;
    undefined field34116_0x1071b;
    undefined field34117_0x1071c;
    undefined field34118_0x1071d;
    undefined field34119_0x1071e;
    undefined field34120_0x1071f;
    undefined field34121_0x10720;
    undefined field34122_0x10721;
    undefined field34123_0x10722;
    undefined field34124_0x10723;
    undefined field34125_0x10724;
    undefined field34126_0x10725;
    undefined field34127_0x10726;
    undefined field34128_0x10727;
    undefined field34129_0x10728;
    undefined field34130_0x10729;
    undefined field34131_0x1072a;
    undefined field34132_0x1072b;
    undefined field34133_0x1072c;
    undefined field34134_0x1072d;
    undefined field34135_0x1072e;
    undefined field34136_0x1072f;
    undefined field34137_0x10730;
    undefined field34138_0x10731;
    undefined field34139_0x10732;
    undefined field34140_0x10733;
    undefined field34141_0x10734;
    undefined field34142_0x10735;
    undefined field34143_0x10736;
    undefined field34144_0x10737;
    undefined field34145_0x10738;
    undefined field34146_0x10739;
    undefined field34147_0x1073a;
    undefined field34148_0x1073b;
    undefined field34149_0x1073c;
    undefined field34150_0x1073d;
    undefined field34151_0x1073e;
    undefined field34152_0x1073f;
    undefined field34153_0x10740;
    undefined field34154_0x10741;
    undefined field34155_0x10742;
    undefined field34156_0x10743;
    undefined field34157_0x10744;
    undefined field34158_0x10745;
    undefined field34159_0x10746;
    undefined field34160_0x10747;
    undefined field34161_0x10748;
    undefined field34162_0x10749;
    undefined field34163_0x1074a;
    undefined field34164_0x1074b;
    undefined field34165_0x1074c;
    undefined field34166_0x1074d;
    undefined field34167_0x1074e;
    undefined field34168_0x1074f;
    undefined field34169_0x10750;
    undefined field34170_0x10751;
    undefined field34171_0x10752;
    undefined field34172_0x10753;
    undefined field34173_0x10754;
    undefined field34174_0x10755;
    undefined field34175_0x10756;
    undefined field34176_0x10757;
    undefined field34177_0x10758;
    undefined field34178_0x10759;
    undefined field34179_0x1075a;
    undefined field34180_0x1075b;
    undefined field34181_0x1075c;
    undefined field34182_0x1075d;
    undefined field34183_0x1075e;
    undefined field34184_0x1075f;
    undefined field34185_0x10760;
    undefined field34186_0x10761;
    undefined field34187_0x10762;
    undefined field34188_0x10763;
    undefined field34189_0x10764;
    undefined field34190_0x10765;
    undefined field34191_0x10766;
    undefined field34192_0x10767;
    undefined field34193_0x10768;
    undefined field34194_0x10769;
    undefined field34195_0x1076a;
    undefined field34196_0x1076b;
    undefined field34197_0x1076c;
    undefined field34198_0x1076d;
    undefined field34199_0x1076e;
    undefined field34200_0x1076f;
    undefined field34201_0x10770;
    undefined field34202_0x10771;
    undefined field34203_0x10772;
    undefined field34204_0x10773;
    undefined field34205_0x10774;
    undefined field34206_0x10775;
    undefined field34207_0x10776;
    undefined field34208_0x10777;
    undefined field34209_0x10778;
    undefined field34210_0x10779;
    undefined field34211_0x1077a;
    undefined field34212_0x1077b;
    undefined field34213_0x1077c;
    undefined field34214_0x1077d;
    undefined field34215_0x1077e;
    undefined field34216_0x1077f;
    undefined field34217_0x10780;
    undefined field34218_0x10781;
    undefined field34219_0x10782;
    undefined field34220_0x10783;
    undefined field34221_0x10784;
    undefined field34222_0x10785;
    undefined field34223_0x10786;
    undefined field34224_0x10787;
    undefined field34225_0x10788;
    undefined field34226_0x10789;
    undefined field34227_0x1078a;
    undefined field34228_0x1078b;
    undefined field34229_0x1078c;
    undefined field34230_0x1078d;
    undefined field34231_0x1078e;
    undefined field34232_0x1078f;
    undefined field34233_0x10790;
    undefined field34234_0x10791;
    undefined field34235_0x10792;
    undefined field34236_0x10793;
    undefined field34237_0x10794;
    undefined field34238_0x10795;
    undefined field34239_0x10796;
    undefined field34240_0x10797;
    undefined field34241_0x10798;
    undefined field34242_0x10799;
    undefined field34243_0x1079a;
    undefined field34244_0x1079b;
    undefined field34245_0x1079c;
    undefined field34246_0x1079d;
    undefined field34247_0x1079e;
    undefined field34248_0x1079f;
    undefined field34249_0x107a0;
    undefined field34250_0x107a1;
    undefined field34251_0x107a2;
    undefined field34252_0x107a3;
    undefined field34253_0x107a4;
    undefined field34254_0x107a5;
    undefined field34255_0x107a6;
    undefined field34256_0x107a7;
    undefined field34257_0x107a8;
    undefined field34258_0x107a9;
    undefined field34259_0x107aa;
    undefined field34260_0x107ab;
    undefined field34261_0x107ac;
    undefined field34262_0x107ad;
    undefined field34263_0x107ae;
    undefined field34264_0x107af;
    undefined field34265_0x107b0;
    undefined field34266_0x107b1;
    undefined field34267_0x107b2;
    undefined field34268_0x107b3;
    undefined field34269_0x107b4;
    undefined field34270_0x107b5;
    undefined field34271_0x107b6;
    undefined field34272_0x107b7;
    undefined field34273_0x107b8;
    undefined field34274_0x107b9;
    undefined field34275_0x107ba;
    undefined field34276_0x107bb;
    undefined field34277_0x107bc;
    undefined field34278_0x107bd;
    undefined field34279_0x107be;
    undefined field34280_0x107bf;
    undefined field34281_0x107c0;
    undefined field34282_0x107c1;
    undefined field34283_0x107c2;
    undefined field34284_0x107c3;
    undefined field34285_0x107c4;
    undefined field34286_0x107c5;
    undefined field34287_0x107c6;
    undefined field34288_0x107c7;
    undefined field34289_0x107c8;
    undefined field34290_0x107c9;
    undefined field34291_0x107ca;
    undefined field34292_0x107cb;
    undefined field34293_0x107cc;
    undefined field34294_0x107cd;
    undefined field34295_0x107ce;
    undefined field34296_0x107cf;
    undefined field34297_0x107d0;
    undefined field34298_0x107d1;
    undefined field34299_0x107d2;
    undefined field34300_0x107d3;
    undefined field34301_0x107d4;
    undefined field34302_0x107d5;
    undefined field34303_0x107d6;
    undefined field34304_0x107d7;
    undefined field34305_0x107d8;
    undefined field34306_0x107d9;
    undefined field34307_0x107da;
    undefined field34308_0x107db;
    undefined field34309_0x107dc;
    undefined field34310_0x107dd;
    undefined field34311_0x107de;
    undefined field34312_0x107df;
    undefined field34313_0x107e0;
    undefined field34314_0x107e1;
    undefined field34315_0x107e2;
    undefined field34316_0x107e3;
    undefined field34317_0x107e4;
    undefined field34318_0x107e5;
    undefined field34319_0x107e6;
    undefined field34320_0x107e7;
    undefined field34321_0x107e8;
    undefined field34322_0x107e9;
    undefined field34323_0x107ea;
    undefined field34324_0x107eb;
    undefined field34325_0x107ec;
    undefined field34326_0x107ed;
    undefined field34327_0x107ee;
    undefined field34328_0x107ef;
    undefined field34329_0x107f0;
    undefined field34330_0x107f1;
    undefined field34331_0x107f2;
    undefined field34332_0x107f3;
    undefined field34333_0x107f4;
    undefined field34334_0x107f5;
    undefined field34335_0x107f6;
    undefined field34336_0x107f7;
    undefined field34337_0x107f8;
    undefined field34338_0x107f9;
    undefined field34339_0x107fa;
    undefined field34340_0x107fb;
    undefined field34341_0x107fc;
    undefined field34342_0x107fd;
    undefined field34343_0x107fe;
    undefined field34344_0x107ff;
    undefined field34345_0x10800;
    undefined field34346_0x10801;
    undefined field34347_0x10802;
    undefined field34348_0x10803;
    undefined field34349_0x10804;
    undefined field34350_0x10805;
    undefined field34351_0x10806;
    undefined field34352_0x10807;
    undefined field34353_0x10808;
    undefined field34354_0x10809;
    undefined field34355_0x1080a;
    undefined field34356_0x1080b;
    undefined field34357_0x1080c;
    undefined field34358_0x1080d;
    undefined field34359_0x1080e;
    undefined field34360_0x1080f;
    undefined field34361_0x10810;
    undefined field34362_0x10811;
    undefined field34363_0x10812;
    undefined field34364_0x10813;
    undefined field34365_0x10814;
    undefined field34366_0x10815;
    undefined field34367_0x10816;
    undefined field34368_0x10817;
    undefined field34369_0x10818;
    undefined field34370_0x10819;
    undefined field34371_0x1081a;
    undefined field34372_0x1081b;
    undefined field34373_0x1081c;
    undefined field34374_0x1081d;
    undefined field34375_0x1081e;
    undefined field34376_0x1081f;
    undefined field34377_0x10820;
    undefined field34378_0x10821;
    undefined field34379_0x10822;
    undefined field34380_0x10823;
    undefined field34381_0x10824;
    undefined field34382_0x10825;
    undefined field34383_0x10826;
    undefined field34384_0x10827;
    undefined field34385_0x10828;
    undefined field34386_0x10829;
    undefined field34387_0x1082a;
    undefined field34388_0x1082b;
    undefined field34389_0x1082c;
    undefined field34390_0x1082d;
    undefined field34391_0x1082e;
    undefined field34392_0x1082f;
    undefined field34393_0x10830;
    undefined field34394_0x10831;
    undefined field34395_0x10832;
    undefined field34396_0x10833;
    undefined field34397_0x10834;
    undefined field34398_0x10835;
    undefined field34399_0x10836;
    undefined field34400_0x10837;
    undefined field34401_0x10838;
    undefined field34402_0x10839;
    undefined field34403_0x1083a;
    undefined field34404_0x1083b;
    undefined field34405_0x1083c;
    undefined field34406_0x1083d;
    undefined field34407_0x1083e;
    undefined field34408_0x1083f;
    undefined field34409_0x10840;
    undefined field34410_0x10841;
    undefined field34411_0x10842;
    undefined field34412_0x10843;
    undefined field34413_0x10844;
    undefined field34414_0x10845;
    undefined field34415_0x10846;
    undefined field34416_0x10847;
    undefined field34417_0x10848;
    undefined field34418_0x10849;
    undefined field34419_0x1084a;
    undefined field34420_0x1084b;
    undefined field34421_0x1084c;
    undefined field34422_0x1084d;
    undefined field34423_0x1084e;
    undefined field34424_0x1084f;
    undefined field34425_0x10850;
    undefined field34426_0x10851;
    undefined field34427_0x10852;
    undefined field34428_0x10853;
    undefined field34429_0x10854;
    undefined field34430_0x10855;
    undefined field34431_0x10856;
    undefined field34432_0x10857;
    undefined field34433_0x10858;
    undefined field34434_0x10859;
    undefined field34435_0x1085a;
    undefined field34436_0x1085b;
    undefined field34437_0x1085c;
    undefined field34438_0x1085d;
    undefined field34439_0x1085e;
    undefined field34440_0x1085f;
    undefined field34441_0x10860;
    undefined field34442_0x10861;
    undefined field34443_0x10862;
    undefined field34444_0x10863;
    undefined field34445_0x10864;
    undefined field34446_0x10865;
    undefined field34447_0x10866;
    undefined field34448_0x10867;
    undefined field34449_0x10868;
    undefined field34450_0x10869;
    undefined field34451_0x1086a;
    undefined field34452_0x1086b;
    undefined field34453_0x1086c;
    undefined field34454_0x1086d;
    undefined field34455_0x1086e;
    undefined field34456_0x1086f;
    undefined field34457_0x10870;
    undefined field34458_0x10871;
    undefined field34459_0x10872;
    undefined field34460_0x10873;
    undefined field34461_0x10874;
    undefined field34462_0x10875;
    undefined field34463_0x10876;
    undefined field34464_0x10877;
    undefined field34465_0x10878;
    undefined field34466_0x10879;
    undefined field34467_0x1087a;
    undefined field34468_0x1087b;
    undefined field34469_0x1087c;
    undefined field34470_0x1087d;
    undefined field34471_0x1087e;
    undefined field34472_0x1087f;
    undefined field34473_0x10880;
    undefined field34474_0x10881;
    undefined field34475_0x10882;
    undefined field34476_0x10883;
    undefined field34477_0x10884;
    undefined field34478_0x10885;
    undefined field34479_0x10886;
    undefined field34480_0x10887;
    undefined field34481_0x10888;
    undefined field34482_0x10889;
    undefined field34483_0x1088a;
    undefined field34484_0x1088b;
    undefined field34485_0x1088c;
    undefined field34486_0x1088d;
    undefined field34487_0x1088e;
    undefined field34488_0x1088f;
    undefined field34489_0x10890;
    undefined field34490_0x10891;
    undefined field34491_0x10892;
    undefined field34492_0x10893;
    undefined field34493_0x10894;
    undefined field34494_0x10895;
    undefined field34495_0x10896;
    undefined field34496_0x10897;
    undefined field34497_0x10898;
    undefined field34498_0x10899;
    undefined field34499_0x1089a;
    undefined field34500_0x1089b;
    undefined field34501_0x1089c;
    undefined field34502_0x1089d;
    undefined field34503_0x1089e;
    undefined field34504_0x1089f;
    undefined field34505_0x108a0;
    undefined field34506_0x108a1;
    undefined field34507_0x108a2;
    undefined field34508_0x108a3;
    undefined field34509_0x108a4;
    undefined field34510_0x108a5;
    undefined field34511_0x108a6;
    undefined field34512_0x108a7;
    undefined field34513_0x108a8;
    undefined field34514_0x108a9;
    undefined field34515_0x108aa;
    undefined field34516_0x108ab;
    undefined field34517_0x108ac;
    undefined field34518_0x108ad;
    undefined field34519_0x108ae;
    undefined field34520_0x108af;
    undefined field34521_0x108b0;
    undefined field34522_0x108b1;
    undefined field34523_0x108b2;
    undefined field34524_0x108b3;
    undefined field34525_0x108b4;
    undefined field34526_0x108b5;
    undefined field34527_0x108b6;
    undefined field34528_0x108b7;
    undefined field34529_0x108b8;
    undefined field34530_0x108b9;
    undefined field34531_0x108ba;
    undefined field34532_0x108bb;
    undefined field34533_0x108bc;
    undefined field34534_0x108bd;
    undefined field34535_0x108be;
    undefined field34536_0x108bf;
    undefined field34537_0x108c0;
    undefined field34538_0x108c1;
    undefined field34539_0x108c2;
    undefined field34540_0x108c3;
    undefined field34541_0x108c4;
    undefined field34542_0x108c5;
    undefined field34543_0x108c6;
    undefined field34544_0x108c7;
    undefined field34545_0x108c8;
    undefined field34546_0x108c9;
    undefined field34547_0x108ca;
    undefined field34548_0x108cb;
    undefined field34549_0x108cc;
    undefined field34550_0x108cd;
    undefined field34551_0x108ce;
    undefined field34552_0x108cf;
    undefined field34553_0x108d0;
    undefined field34554_0x108d1;
    undefined field34555_0x108d2;
    undefined field34556_0x108d3;
    undefined field34557_0x108d4;
    undefined field34558_0x108d5;
    undefined field34559_0x108d6;
    undefined field34560_0x108d7;
    undefined field34561_0x108d8;
    undefined field34562_0x108d9;
    undefined field34563_0x108da;
    undefined field34564_0x108db;
    undefined field34565_0x108dc;
    undefined field34566_0x108dd;
    undefined field34567_0x108de;
    undefined field34568_0x108df;
    undefined field34569_0x108e0;
    undefined field34570_0x108e1;
    undefined field34571_0x108e2;
    undefined field34572_0x108e3;
    undefined field34573_0x108e4;
    undefined field34574_0x108e5;
    undefined field34575_0x108e6;
    undefined field34576_0x108e7;
    undefined field34577_0x108e8;
    undefined field34578_0x108e9;
    undefined field34579_0x108ea;
    undefined field34580_0x108eb;
    undefined field34581_0x108ec;
    undefined field34582_0x108ed;
    undefined field34583_0x108ee;
    undefined field34584_0x108ef;
    undefined field34585_0x108f0;
    undefined field34586_0x108f1;
    undefined field34587_0x108f2;
    undefined field34588_0x108f3;
    undefined field34589_0x108f4;
    undefined field34590_0x108f5;
    undefined field34591_0x108f6;
    undefined field34592_0x108f7;
    undefined field34593_0x108f8;
    undefined field34594_0x108f9;
    undefined field34595_0x108fa;
    undefined field34596_0x108fb;
    undefined field34597_0x108fc;
    undefined field34598_0x108fd;
    undefined field34599_0x108fe;
    undefined field34600_0x108ff;
    undefined field34601_0x10900;
    undefined field34602_0x10901;
    undefined field34603_0x10902;
    undefined field34604_0x10903;
    undefined field34605_0x10904;
    undefined field34606_0x10905;
    undefined field34607_0x10906;
    undefined field34608_0x10907;
    undefined field34609_0x10908;
    undefined field34610_0x10909;
    undefined field34611_0x1090a;
    undefined field34612_0x1090b;
    undefined field34613_0x1090c;
    undefined field34614_0x1090d;
    undefined field34615_0x1090e;
    undefined field34616_0x1090f;
    undefined field34617_0x10910;
    undefined field34618_0x10911;
    undefined field34619_0x10912;
    undefined field34620_0x10913;
    undefined field34621_0x10914;
    undefined field34622_0x10915;
    undefined field34623_0x10916;
    undefined field34624_0x10917;
    undefined field34625_0x10918;
    undefined field34626_0x10919;
    undefined field34627_0x1091a;
    undefined field34628_0x1091b;
    undefined field34629_0x1091c;
    undefined field34630_0x1091d;
    undefined field34631_0x1091e;
    undefined field34632_0x1091f;
    undefined field34633_0x10920;
    undefined field34634_0x10921;
    undefined field34635_0x10922;
    undefined field34636_0x10923;
    undefined field34637_0x10924;
    undefined field34638_0x10925;
    undefined field34639_0x10926;
    undefined field34640_0x10927;
    undefined field34641_0x10928;
    undefined field34642_0x10929;
    undefined field34643_0x1092a;
    undefined field34644_0x1092b;
    undefined field34645_0x1092c;
    undefined field34646_0x1092d;
    undefined field34647_0x1092e;
    undefined field34648_0x1092f;
    undefined field34649_0x10930;
    undefined field34650_0x10931;
    undefined field34651_0x10932;
    undefined field34652_0x10933;
    undefined field34653_0x10934;
    undefined field34654_0x10935;
    undefined field34655_0x10936;
    undefined field34656_0x10937;
    undefined field34657_0x10938;
    undefined field34658_0x10939;
    undefined field34659_0x1093a;
    undefined field34660_0x1093b;
    undefined field34661_0x1093c;
    undefined field34662_0x1093d;
    undefined field34663_0x1093e;
    undefined field34664_0x1093f;
    undefined field34665_0x10940;
    undefined field34666_0x10941;
    undefined field34667_0x10942;
    undefined field34668_0x10943;
    undefined field34669_0x10944;
    undefined field34670_0x10945;
    undefined field34671_0x10946;
    undefined field34672_0x10947;
    undefined field34673_0x10948;
    undefined field34674_0x10949;
    undefined field34675_0x1094a;
    undefined field34676_0x1094b;
    undefined field34677_0x1094c;
    undefined field34678_0x1094d;
    undefined field34679_0x1094e;
    undefined field34680_0x1094f;
    undefined field34681_0x10950;
    undefined field34682_0x10951;
    undefined field34683_0x10952;
    undefined field34684_0x10953;
    undefined field34685_0x10954;
    undefined field34686_0x10955;
    undefined field34687_0x10956;
    undefined field34688_0x10957;
    undefined field34689_0x10958;
    undefined field34690_0x10959;
    undefined field34691_0x1095a;
    undefined field34692_0x1095b;
    undefined field34693_0x1095c;
    undefined field34694_0x1095d;
    undefined field34695_0x1095e;
    undefined field34696_0x1095f;
    undefined field34697_0x10960;
    undefined field34698_0x10961;
    undefined field34699_0x10962;
    undefined field34700_0x10963;
    undefined field34701_0x10964;
    undefined field34702_0x10965;
    undefined field34703_0x10966;
    undefined field34704_0x10967;
    undefined field34705_0x10968;
    undefined field34706_0x10969;
    undefined field34707_0x1096a;
    undefined field34708_0x1096b;
    undefined field34709_0x1096c;
    undefined field34710_0x1096d;
    undefined field34711_0x1096e;
    undefined field34712_0x1096f;
    undefined field34713_0x10970;
    undefined field34714_0x10971;
    undefined field34715_0x10972;
    undefined field34716_0x10973;
    undefined field34717_0x10974;
    undefined field34718_0x10975;
    undefined field34719_0x10976;
    undefined field34720_0x10977;
    undefined field34721_0x10978;
    undefined field34722_0x10979;
    undefined field34723_0x1097a;
    undefined field34724_0x1097b;
    undefined field34725_0x1097c;
    undefined field34726_0x1097d;
    undefined field34727_0x1097e;
    undefined field34728_0x1097f;
    undefined field34729_0x10980;
    undefined field34730_0x10981;
    undefined field34731_0x10982;
    undefined field34732_0x10983;
    undefined field34733_0x10984;
    undefined field34734_0x10985;
    undefined field34735_0x10986;
    undefined field34736_0x10987;
    undefined field34737_0x10988;
    undefined field34738_0x10989;
    undefined field34739_0x1098a;
    undefined field34740_0x1098b;
    undefined field34741_0x1098c;
    undefined field34742_0x1098d;
    undefined field34743_0x1098e;
    undefined field34744_0x1098f;
    undefined field34745_0x10990;
    undefined field34746_0x10991;
    undefined field34747_0x10992;
    undefined field34748_0x10993;
    undefined field34749_0x10994;
    undefined field34750_0x10995;
    undefined field34751_0x10996;
    undefined field34752_0x10997;
    undefined field34753_0x10998;
    undefined field34754_0x10999;
    undefined field34755_0x1099a;
    undefined field34756_0x1099b;
    undefined field34757_0x1099c;
    undefined field34758_0x1099d;
    undefined field34759_0x1099e;
    undefined field34760_0x1099f;
    undefined field34761_0x109a0;
    undefined field34762_0x109a1;
    undefined field34763_0x109a2;
    undefined field34764_0x109a3;
    undefined field34765_0x109a4;
    undefined field34766_0x109a5;
    undefined field34767_0x109a6;
    undefined field34768_0x109a7;
    undefined field34769_0x109a8;
    undefined field34770_0x109a9;
    undefined field34771_0x109aa;
    undefined field34772_0x109ab;
    undefined field34773_0x109ac;
    undefined field34774_0x109ad;
    undefined field34775_0x109ae;
    undefined field34776_0x109af;
    undefined field34777_0x109b0;
    undefined field34778_0x109b1;
    undefined field34779_0x109b2;
    undefined field34780_0x109b3;
    undefined field34781_0x109b4;
    undefined field34782_0x109b5;
    undefined field34783_0x109b6;
    undefined field34784_0x109b7;
    undefined field34785_0x109b8;
    undefined field34786_0x109b9;
    undefined field34787_0x109ba;
    undefined field34788_0x109bb;
    undefined field34789_0x109bc;
    undefined field34790_0x109bd;
    undefined field34791_0x109be;
    undefined field34792_0x109bf;
    undefined field34793_0x109c0;
    undefined field34794_0x109c1;
    undefined field34795_0x109c2;
    undefined field34796_0x109c3;
    undefined field34797_0x109c4;
    undefined field34798_0x109c5;
    undefined field34799_0x109c6;
    undefined field34800_0x109c7;
    undefined field34801_0x109c8;
    undefined field34802_0x109c9;
    undefined field34803_0x109ca;
    undefined field34804_0x109cb;
    undefined field34805_0x109cc;
    undefined field34806_0x109cd;
    undefined field34807_0x109ce;
    undefined field34808_0x109cf;
    undefined field34809_0x109d0;
    undefined field34810_0x109d1;
    undefined field34811_0x109d2;
    undefined field34812_0x109d3;
    undefined field34813_0x109d4;
    undefined field34814_0x109d5;
    undefined field34815_0x109d6;
    undefined field34816_0x109d7;
    undefined field34817_0x109d8;
    undefined field34818_0x109d9;
    undefined field34819_0x109da;
    undefined field34820_0x109db;
    undefined field34821_0x109dc;
    undefined field34822_0x109dd;
    undefined field34823_0x109de;
    undefined field34824_0x109df;
    undefined field34825_0x109e0;
    undefined field34826_0x109e1;
    undefined field34827_0x109e2;
    undefined field34828_0x109e3;
    undefined field34829_0x109e4;
    undefined field34830_0x109e5;
    undefined field34831_0x109e6;
    undefined field34832_0x109e7;
    undefined field34833_0x109e8;
    undefined field34834_0x109e9;
    undefined field34835_0x109ea;
    undefined field34836_0x109eb;
    undefined field34837_0x109ec;
    undefined field34838_0x109ed;
    undefined field34839_0x109ee;
    undefined field34840_0x109ef;
    undefined field34841_0x109f0;
    undefined field34842_0x109f1;
    undefined field34843_0x109f2;
    undefined field34844_0x109f3;
    undefined field34845_0x109f4;
    undefined field34846_0x109f5;
    undefined field34847_0x109f6;
    undefined field34848_0x109f7;
    undefined field34849_0x109f8;
    undefined field34850_0x109f9;
    undefined field34851_0x109fa;
    undefined field34852_0x109fb;
    undefined field34853_0x109fc;
    undefined field34854_0x109fd;
    undefined field34855_0x109fe;
    undefined field34856_0x109ff;
    undefined field34857_0x10a00;
    undefined field34858_0x10a01;
    undefined field34859_0x10a02;
    undefined field34860_0x10a03;
    undefined field34861_0x10a04;
    undefined field34862_0x10a05;
    undefined field34863_0x10a06;
    undefined field34864_0x10a07;
    undefined field34865_0x10a08;
    undefined field34866_0x10a09;
    undefined field34867_0x10a0a;
    undefined field34868_0x10a0b;
    undefined field34869_0x10a0c;
    undefined field34870_0x10a0d;
    undefined field34871_0x10a0e;
    undefined field34872_0x10a0f;
    undefined field34873_0x10a10;
    undefined field34874_0x10a11;
    undefined field34875_0x10a12;
    undefined field34876_0x10a13;
    undefined field34877_0x10a14;
    undefined field34878_0x10a15;
    undefined field34879_0x10a16;
    undefined field34880_0x10a17;
    undefined field34881_0x10a18;
    undefined field34882_0x10a19;
    undefined field34883_0x10a1a;
    undefined field34884_0x10a1b;
    undefined field34885_0x10a1c;
    undefined field34886_0x10a1d;
    undefined field34887_0x10a1e;
    undefined field34888_0x10a1f;
    undefined field34889_0x10a20;
    undefined field34890_0x10a21;
    undefined field34891_0x10a22;
    undefined field34892_0x10a23;
    undefined field34893_0x10a24;
    undefined field34894_0x10a25;
    undefined field34895_0x10a26;
    undefined field34896_0x10a27;
    undefined field34897_0x10a28;
    undefined field34898_0x10a29;
    undefined field34899_0x10a2a;
    undefined field34900_0x10a2b;
    undefined field34901_0x10a2c;
    undefined field34902_0x10a2d;
    undefined field34903_0x10a2e;
    undefined field34904_0x10a2f;
    undefined field34905_0x10a30;
    undefined field34906_0x10a31;
    undefined field34907_0x10a32;
    undefined field34908_0x10a33;
    undefined field34909_0x10a34;
    undefined field34910_0x10a35;
    undefined field34911_0x10a36;
    undefined field34912_0x10a37;
    undefined field34913_0x10a38;
    undefined field34914_0x10a39;
    undefined field34915_0x10a3a;
    undefined field34916_0x10a3b;
    undefined field34917_0x10a3c;
    undefined field34918_0x10a3d;
    undefined field34919_0x10a3e;
    undefined field34920_0x10a3f;
    undefined field34921_0x10a40;
    undefined field34922_0x10a41;
    undefined field34923_0x10a42;
    undefined field34924_0x10a43;
    undefined field34925_0x10a44;
    undefined field34926_0x10a45;
    undefined field34927_0x10a46;
    undefined field34928_0x10a47;
    undefined field34929_0x10a48;
    undefined field34930_0x10a49;
    undefined field34931_0x10a4a;
    undefined field34932_0x10a4b;
    undefined field34933_0x10a4c;
    undefined field34934_0x10a4d;
    undefined field34935_0x10a4e;
    undefined field34936_0x10a4f;
    undefined field34937_0x10a50;
    undefined field34938_0x10a51;
    undefined field34939_0x10a52;
    undefined field34940_0x10a53;
    undefined field34941_0x10a54;
    undefined field34942_0x10a55;
    undefined field34943_0x10a56;
    undefined field34944_0x10a57;
    undefined field34945_0x10a58;
    undefined field34946_0x10a59;
    undefined field34947_0x10a5a;
    undefined field34948_0x10a5b;
    undefined field34949_0x10a5c;
    undefined field34950_0x10a5d;
    undefined field34951_0x10a5e;
    undefined field34952_0x10a5f;
    undefined field34953_0x10a60;
    undefined field34954_0x10a61;
    undefined field34955_0x10a62;
    undefined field34956_0x10a63;
    undefined field34957_0x10a64;
    undefined field34958_0x10a65;
    undefined field34959_0x10a66;
    undefined field34960_0x10a67;
    undefined field34961_0x10a68;
    undefined field34962_0x10a69;
    undefined field34963_0x10a6a;
    undefined field34964_0x10a6b;
    undefined field34965_0x10a6c;
    undefined field34966_0x10a6d;
    undefined field34967_0x10a6e;
    undefined field34968_0x10a6f;
    undefined field34969_0x10a70;
    undefined field34970_0x10a71;
    undefined field34971_0x10a72;
    undefined field34972_0x10a73;
    undefined field34973_0x10a74;
    undefined field34974_0x10a75;
    undefined field34975_0x10a76;
    undefined field34976_0x10a77;
    undefined field34977_0x10a78;
    undefined field34978_0x10a79;
    undefined field34979_0x10a7a;
    undefined field34980_0x10a7b;
    undefined field34981_0x10a7c;
    undefined field34982_0x10a7d;
    undefined field34983_0x10a7e;
    undefined field34984_0x10a7f;
    undefined field34985_0x10a80;
    undefined field34986_0x10a81;
    undefined field34987_0x10a82;
    undefined field34988_0x10a83;
    undefined field34989_0x10a84;
    undefined field34990_0x10a85;
    undefined field34991_0x10a86;
    undefined field34992_0x10a87;
    undefined field34993_0x10a88;
    undefined field34994_0x10a89;
    undefined field34995_0x10a8a;
    undefined field34996_0x10a8b;
    undefined field34997_0x10a8c;
    undefined field34998_0x10a8d;
    undefined field34999_0x10a8e;
    undefined field35000_0x10a8f;
    undefined field35001_0x10a90;
    undefined field35002_0x10a91;
    undefined field35003_0x10a92;
    undefined field35004_0x10a93;
    undefined field35005_0x10a94;
    undefined field35006_0x10a95;
    undefined field35007_0x10a96;
    undefined field35008_0x10a97;
    undefined field35009_0x10a98;
    undefined field35010_0x10a99;
    undefined field35011_0x10a9a;
    undefined field35012_0x10a9b;
    undefined field35013_0x10a9c;
    undefined field35014_0x10a9d;
    undefined field35015_0x10a9e;
    undefined field35016_0x10a9f;
    undefined field35017_0x10aa0;
    undefined field35018_0x10aa1;
    undefined field35019_0x10aa2;
    undefined field35020_0x10aa3;
    undefined field35021_0x10aa4;
    undefined field35022_0x10aa5;
    undefined field35023_0x10aa6;
    undefined field35024_0x10aa7;
    undefined field35025_0x10aa8;
    undefined field35026_0x10aa9;
    undefined field35027_0x10aaa;
    undefined field35028_0x10aab;
    undefined field35029_0x10aac;
    undefined field35030_0x10aad;
    undefined field35031_0x10aae;
    undefined field35032_0x10aaf;
    undefined field35033_0x10ab0;
    undefined field35034_0x10ab1;
    undefined field35035_0x10ab2;
    undefined field35036_0x10ab3;
    undefined field35037_0x10ab4;
    undefined field35038_0x10ab5;
    undefined field35039_0x10ab6;
    undefined field35040_0x10ab7;
    undefined field35041_0x10ab8;
    undefined field35042_0x10ab9;
    undefined field35043_0x10aba;
    undefined field35044_0x10abb;
    undefined field35045_0x10abc;
    undefined field35046_0x10abd;
    undefined field35047_0x10abe;
    undefined field35048_0x10abf;
    undefined field35049_0x10ac0;
    undefined field35050_0x10ac1;
    undefined field35051_0x10ac2;
    undefined field35052_0x10ac3;
    undefined field35053_0x10ac4;
    undefined field35054_0x10ac5;
    undefined field35055_0x10ac6;
    undefined field35056_0x10ac7;
    undefined field35057_0x10ac8;
    undefined field35058_0x10ac9;
    undefined field35059_0x10aca;
    undefined field35060_0x10acb;
    undefined field35061_0x10acc;
    undefined field35062_0x10acd;
    undefined field35063_0x10ace;
    undefined field35064_0x10acf;
    undefined field35065_0x10ad0;
    undefined field35066_0x10ad1;
    undefined field35067_0x10ad2;
    undefined field35068_0x10ad3;
    undefined field35069_0x10ad4;
    undefined field35070_0x10ad5;
    undefined field35071_0x10ad6;
    undefined field35072_0x10ad7;
    undefined field35073_0x10ad8;
    undefined field35074_0x10ad9;
    undefined field35075_0x10ada;
    undefined field35076_0x10adb;
    undefined field35077_0x10adc;
    undefined field35078_0x10add;
    undefined field35079_0x10ade;
    undefined field35080_0x10adf;
    undefined field35081_0x10ae0;
    undefined field35082_0x10ae1;
    undefined field35083_0x10ae2;
    undefined field35084_0x10ae3;
    undefined field35085_0x10ae4;
    undefined field35086_0x10ae5;
    undefined field35087_0x10ae6;
    undefined field35088_0x10ae7;
    undefined field35089_0x10ae8;
    undefined field35090_0x10ae9;
    undefined field35091_0x10aea;
    undefined field35092_0x10aeb;
    undefined field35093_0x10aec;
    undefined field35094_0x10aed;
    undefined field35095_0x10aee;
    undefined field35096_0x10aef;
    undefined field35097_0x10af0;
    undefined field35098_0x10af1;
    undefined field35099_0x10af2;
    undefined field35100_0x10af3;
    undefined field35101_0x10af4;
    undefined field35102_0x10af5;
    undefined field35103_0x10af6;
    undefined field35104_0x10af7;
    undefined field35105_0x10af8;
    undefined field35106_0x10af9;
    undefined field35107_0x10afa;
    undefined field35108_0x10afb;
    undefined field35109_0x10afc;
    undefined field35110_0x10afd;
    undefined field35111_0x10afe;
    undefined field35112_0x10aff;
    undefined field35113_0x10b00;
    undefined field35114_0x10b01;
    undefined field35115_0x10b02;
    undefined field35116_0x10b03;
    undefined field35117_0x10b04;
    undefined field35118_0x10b05;
    undefined field35119_0x10b06;
    undefined field35120_0x10b07;
    undefined field35121_0x10b08;
    undefined field35122_0x10b09;
    undefined field35123_0x10b0a;
    undefined field35124_0x10b0b;
    undefined field35125_0x10b0c;
    undefined field35126_0x10b0d;
    undefined field35127_0x10b0e;
    undefined field35128_0x10b0f;
    undefined field35129_0x10b10;
    undefined field35130_0x10b11;
    undefined field35131_0x10b12;
    undefined field35132_0x10b13;
    undefined field35133_0x10b14;
    undefined field35134_0x10b15;
    undefined field35135_0x10b16;
    undefined field35136_0x10b17;
    undefined field35137_0x10b18;
    undefined field35138_0x10b19;
    undefined field35139_0x10b1a;
    undefined field35140_0x10b1b;
    undefined field35141_0x10b1c;
    undefined field35142_0x10b1d;
    undefined field35143_0x10b1e;
    undefined field35144_0x10b1f;
    undefined field35145_0x10b20;
    undefined field35146_0x10b21;
    undefined field35147_0x10b22;
    undefined field35148_0x10b23;
    undefined field35149_0x10b24;
    undefined field35150_0x10b25;
    undefined field35151_0x10b26;
    undefined field35152_0x10b27;
    undefined field35153_0x10b28;
    undefined field35154_0x10b29;
    undefined field35155_0x10b2a;
    undefined field35156_0x10b2b;
    undefined field35157_0x10b2c;
    undefined field35158_0x10b2d;
    undefined field35159_0x10b2e;
    undefined field35160_0x10b2f;
    undefined field35161_0x10b30;
    undefined field35162_0x10b31;
    undefined field35163_0x10b32;
    undefined field35164_0x10b33;
    undefined field35165_0x10b34;
    undefined field35166_0x10b35;
    undefined field35167_0x10b36;
    undefined field35168_0x10b37;
    undefined field35169_0x10b38;
    undefined field35170_0x10b39;
    undefined field35171_0x10b3a;
    undefined field35172_0x10b3b;
    undefined field35173_0x10b3c;
    undefined field35174_0x10b3d;
    undefined field35175_0x10b3e;
    undefined field35176_0x10b3f;
    undefined field35177_0x10b40;
    undefined field35178_0x10b41;
    undefined field35179_0x10b42;
    undefined field35180_0x10b43;
    undefined field35181_0x10b44;
    undefined field35182_0x10b45;
    undefined field35183_0x10b46;
    undefined field35184_0x10b47;
    undefined field35185_0x10b48;
    undefined field35186_0x10b49;
    undefined field35187_0x10b4a;
    undefined field35188_0x10b4b;
    undefined field35189_0x10b4c;
    undefined field35190_0x10b4d;
    undefined field35191_0x10b4e;
    undefined field35192_0x10b4f;
    undefined field35193_0x10b50;
    undefined field35194_0x10b51;
    undefined field35195_0x10b52;
    undefined field35196_0x10b53;
    undefined field35197_0x10b54;
    undefined field35198_0x10b55;
    undefined field35199_0x10b56;
    undefined field35200_0x10b57;
    undefined field35201_0x10b58;
    undefined field35202_0x10b59;
    undefined field35203_0x10b5a;
    undefined field35204_0x10b5b;
    undefined field35205_0x10b5c;
    undefined field35206_0x10b5d;
    undefined field35207_0x10b5e;
    undefined field35208_0x10b5f;
    undefined field35209_0x10b60;
    undefined field35210_0x10b61;
    undefined field35211_0x10b62;
    undefined field35212_0x10b63;
    undefined field35213_0x10b64;
    undefined field35214_0x10b65;
    undefined field35215_0x10b66;
    undefined field35216_0x10b67;
    undefined field35217_0x10b68;
    undefined field35218_0x10b69;
    undefined field35219_0x10b6a;
    undefined field35220_0x10b6b;
    undefined field35221_0x10b6c;
    undefined field35222_0x10b6d;
    undefined field35223_0x10b6e;
    undefined field35224_0x10b6f;
    undefined field35225_0x10b70;
    undefined field35226_0x10b71;
    undefined field35227_0x10b72;
    undefined field35228_0x10b73;
    undefined field35229_0x10b74;
    undefined field35230_0x10b75;
    undefined field35231_0x10b76;
    undefined field35232_0x10b77;
    undefined field35233_0x10b78;
    undefined field35234_0x10b79;
    undefined field35235_0x10b7a;
    undefined field35236_0x10b7b;
    undefined field35237_0x10b7c;
    undefined field35238_0x10b7d;
    undefined field35239_0x10b7e;
    undefined field35240_0x10b7f;
    undefined field35241_0x10b80;
    undefined field35242_0x10b81;
    undefined field35243_0x10b82;
    undefined field35244_0x10b83;
    undefined field35245_0x10b84;
    undefined field35246_0x10b85;
    undefined field35247_0x10b86;
    undefined field35248_0x10b87;
    undefined field35249_0x10b88;
    undefined field35250_0x10b89;
    undefined field35251_0x10b8a;
    undefined field35252_0x10b8b;
    undefined field35253_0x10b8c;
    undefined field35254_0x10b8d;
    undefined field35255_0x10b8e;
    undefined field35256_0x10b8f;
    undefined field35257_0x10b90;
    undefined field35258_0x10b91;
    undefined field35259_0x10b92;
    undefined field35260_0x10b93;
    undefined field35261_0x10b94;
    undefined field35262_0x10b95;
    undefined field35263_0x10b96;
    undefined field35264_0x10b97;
    undefined field35265_0x10b98;
    undefined field35266_0x10b99;
    undefined field35267_0x10b9a;
    undefined field35268_0x10b9b;
    undefined field35269_0x10b9c;
    undefined field35270_0x10b9d;
    undefined field35271_0x10b9e;
    undefined field35272_0x10b9f;
    undefined field35273_0x10ba0;
    undefined field35274_0x10ba1;
    undefined field35275_0x10ba2;
    undefined field35276_0x10ba3;
    undefined field35277_0x10ba4;
    undefined field35278_0x10ba5;
    undefined field35279_0x10ba6;
    undefined field35280_0x10ba7;
    undefined field35281_0x10ba8;
    undefined field35282_0x10ba9;
    undefined field35283_0x10baa;
    undefined field35284_0x10bab;
    undefined field35285_0x10bac;
    undefined field35286_0x10bad;
    undefined field35287_0x10bae;
    undefined field35288_0x10baf;
    undefined field35289_0x10bb0;
    undefined field35290_0x10bb1;
    undefined field35291_0x10bb2;
    undefined field35292_0x10bb3;
    undefined field35293_0x10bb4;
    undefined field35294_0x10bb5;
    undefined field35295_0x10bb6;
    undefined field35296_0x10bb7;
    undefined field35297_0x10bb8;
    undefined field35298_0x10bb9;
    undefined field35299_0x10bba;
    undefined field35300_0x10bbb;
    undefined field35301_0x10bbc;
    undefined field35302_0x10bbd;
    undefined field35303_0x10bbe;
    undefined field35304_0x10bbf;
    undefined field35305_0x10bc0;
    undefined field35306_0x10bc1;
    undefined field35307_0x10bc2;
    undefined field35308_0x10bc3;
    undefined field35309_0x10bc4;
    undefined field35310_0x10bc5;
    undefined field35311_0x10bc6;
    undefined field35312_0x10bc7;
    undefined field35313_0x10bc8;
    undefined field35314_0x10bc9;
    undefined field35315_0x10bca;
    undefined field35316_0x10bcb;
    undefined field35317_0x10bcc;
    undefined field35318_0x10bcd;
    undefined field35319_0x10bce;
    undefined field35320_0x10bcf;
    undefined field35321_0x10bd0;
    undefined field35322_0x10bd1;
    undefined field35323_0x10bd2;
    undefined field35324_0x10bd3;
    undefined field35325_0x10bd4;
    undefined field35326_0x10bd5;
    undefined field35327_0x10bd6;
    undefined field35328_0x10bd7;
    undefined field35329_0x10bd8;
    undefined field35330_0x10bd9;
    undefined field35331_0x10bda;
    undefined field35332_0x10bdb;
    undefined field35333_0x10bdc;
    undefined field35334_0x10bdd;
    undefined field35335_0x10bde;
    undefined field35336_0x10bdf;
    undefined field35337_0x10be0;
    undefined field35338_0x10be1;
    undefined field35339_0x10be2;
    undefined field35340_0x10be3;
    undefined field35341_0x10be4;
    undefined field35342_0x10be5;
    undefined field35343_0x10be6;
    undefined field35344_0x10be7;
    undefined field35345_0x10be8;
    undefined field35346_0x10be9;
    undefined field35347_0x10bea;
    undefined field35348_0x10beb;
    undefined field35349_0x10bec;
    undefined field35350_0x10bed;
    undefined field35351_0x10bee;
    undefined field35352_0x10bef;
    undefined field35353_0x10bf0;
    undefined field35354_0x10bf1;
    undefined field35355_0x10bf2;
    undefined field35356_0x10bf3;
    undefined field35357_0x10bf4;
    undefined field35358_0x10bf5;
    undefined field35359_0x10bf6;
    undefined field35360_0x10bf7;
    undefined field35361_0x10bf8;
    undefined field35362_0x10bf9;
    undefined field35363_0x10bfa;
    undefined field35364_0x10bfb;
    undefined field35365_0x10bfc;
    undefined field35366_0x10bfd;
    undefined field35367_0x10bfe;
    undefined field35368_0x10bff;
    undefined field35369_0x10c00;
    undefined field35370_0x10c01;
    undefined field35371_0x10c02;
    undefined field35372_0x10c03;
    undefined field35373_0x10c04;
    undefined field35374_0x10c05;
    undefined field35375_0x10c06;
    undefined field35376_0x10c07;
    undefined field35377_0x10c08;
    undefined field35378_0x10c09;
    undefined field35379_0x10c0a;
    undefined field35380_0x10c0b;
    undefined field35381_0x10c0c;
    undefined field35382_0x10c0d;
    undefined field35383_0x10c0e;
    undefined field35384_0x10c0f;
    undefined field35385_0x10c10;
    undefined field35386_0x10c11;
    undefined field35387_0x10c12;
    undefined field35388_0x10c13;
    undefined field35389_0x10c14;
    undefined field35390_0x10c15;
    undefined field35391_0x10c16;
    undefined field35392_0x10c17;
    undefined field35393_0x10c18;
    undefined field35394_0x10c19;
    undefined field35395_0x10c1a;
    undefined field35396_0x10c1b;
    undefined field35397_0x10c1c;
    undefined field35398_0x10c1d;
    undefined field35399_0x10c1e;
    undefined field35400_0x10c1f;
    undefined field35401_0x10c20;
    undefined field35402_0x10c21;
    undefined field35403_0x10c22;
    undefined field35404_0x10c23;
    undefined field35405_0x10c24;
    undefined field35406_0x10c25;
    undefined field35407_0x10c26;
    undefined field35408_0x10c27;
    undefined field35409_0x10c28;
    undefined field35410_0x10c29;
    undefined field35411_0x10c2a;
    undefined field35412_0x10c2b;
    undefined field35413_0x10c2c;
    undefined field35414_0x10c2d;
    undefined field35415_0x10c2e;
    undefined field35416_0x10c2f;
    undefined field35417_0x10c30;
    undefined field35418_0x10c31;
    undefined field35419_0x10c32;
    undefined field35420_0x10c33;
    undefined field35421_0x10c34;
    undefined field35422_0x10c35;
    undefined field35423_0x10c36;
    undefined field35424_0x10c37;
    undefined field35425_0x10c38;
    undefined field35426_0x10c39;
    undefined field35427_0x10c3a;
    undefined field35428_0x10c3b;
    undefined field35429_0x10c3c;
    undefined field35430_0x10c3d;
    undefined field35431_0x10c3e;
    undefined field35432_0x10c3f;
    undefined field35433_0x10c40;
    undefined field35434_0x10c41;
    undefined field35435_0x10c42;
    undefined field35436_0x10c43;
    undefined field35437_0x10c44;
    undefined field35438_0x10c45;
    undefined field35439_0x10c46;
    undefined field35440_0x10c47;
    undefined field35441_0x10c48;
    undefined field35442_0x10c49;
    undefined field35443_0x10c4a;
    undefined field35444_0x10c4b;
    undefined field35445_0x10c4c;
    undefined field35446_0x10c4d;
    undefined field35447_0x10c4e;
    undefined field35448_0x10c4f;
    undefined field35449_0x10c50;
    undefined field35450_0x10c51;
    undefined field35451_0x10c52;
    undefined field35452_0x10c53;
    undefined field35453_0x10c54;
    undefined field35454_0x10c55;
    undefined field35455_0x10c56;
    undefined field35456_0x10c57;
    undefined field35457_0x10c58;
    undefined field35458_0x10c59;
    undefined field35459_0x10c5a;
    undefined field35460_0x10c5b;
    undefined field35461_0x10c5c;
    undefined field35462_0x10c5d;
    undefined field35463_0x10c5e;
    undefined field35464_0x10c5f;
    undefined field35465_0x10c60;
    undefined field35466_0x10c61;
    undefined field35467_0x10c62;
    undefined field35468_0x10c63;
    undefined field35469_0x10c64;
    undefined field35470_0x10c65;
    undefined field35471_0x10c66;
    undefined field35472_0x10c67;
    undefined field35473_0x10c68;
    undefined field35474_0x10c69;
    undefined field35475_0x10c6a;
    undefined field35476_0x10c6b;
    undefined field35477_0x10c6c;
    undefined field35478_0x10c6d;
    undefined field35479_0x10c6e;
    undefined field35480_0x10c6f;
    undefined field35481_0x10c70;
    undefined field35482_0x10c71;
    undefined field35483_0x10c72;
    undefined field35484_0x10c73;
    undefined field35485_0x10c74;
    undefined field35486_0x10c75;
    undefined field35487_0x10c76;
    undefined field35488_0x10c77;
    undefined field35489_0x10c78;
    undefined field35490_0x10c79;
    undefined field35491_0x10c7a;
    undefined field35492_0x10c7b;
    undefined field35493_0x10c7c;
    undefined field35494_0x10c7d;
    undefined field35495_0x10c7e;
    undefined field35496_0x10c7f;
    undefined field35497_0x10c80;
    undefined field35498_0x10c81;
    undefined field35499_0x10c82;
    undefined field35500_0x10c83;
    undefined field35501_0x10c84;
    undefined field35502_0x10c85;
    undefined field35503_0x10c86;
    undefined field35504_0x10c87;
    undefined field35505_0x10c88;
    undefined field35506_0x10c89;
    undefined field35507_0x10c8a;
    undefined field35508_0x10c8b;
    undefined field35509_0x10c8c;
    undefined field35510_0x10c8d;
    undefined field35511_0x10c8e;
    undefined field35512_0x10c8f;
    undefined field35513_0x10c90;
    undefined field35514_0x10c91;
    undefined field35515_0x10c92;
    undefined field35516_0x10c93;
    undefined field35517_0x10c94;
    undefined field35518_0x10c95;
    undefined field35519_0x10c96;
    undefined field35520_0x10c97;
    undefined field35521_0x10c98;
    undefined field35522_0x10c99;
    undefined field35523_0x10c9a;
    undefined field35524_0x10c9b;
    undefined field35525_0x10c9c;
    undefined field35526_0x10c9d;
    undefined field35527_0x10c9e;
    undefined field35528_0x10c9f;
    undefined field35529_0x10ca0;
    undefined field35530_0x10ca1;
    undefined field35531_0x10ca2;
    undefined field35532_0x10ca3;
    undefined field35533_0x10ca4;
    undefined field35534_0x10ca5;
    undefined field35535_0x10ca6;
    undefined field35536_0x10ca7;
    undefined field35537_0x10ca8;
    undefined field35538_0x10ca9;
    undefined field35539_0x10caa;
    undefined field35540_0x10cab;
    undefined field35541_0x10cac;
    undefined field35542_0x10cad;
    undefined field35543_0x10cae;
    undefined field35544_0x10caf;
    undefined field35545_0x10cb0;
    undefined field35546_0x10cb1;
    undefined field35547_0x10cb2;
    undefined field35548_0x10cb3;
    undefined field35549_0x10cb4;
    undefined field35550_0x10cb5;
    undefined field35551_0x10cb6;
    undefined field35552_0x10cb7;
    undefined field35553_0x10cb8;
    undefined field35554_0x10cb9;
    undefined field35555_0x10cba;
    undefined field35556_0x10cbb;
    undefined field35557_0x10cbc;
    undefined field35558_0x10cbd;
    undefined field35559_0x10cbe;
    undefined field35560_0x10cbf;
    undefined field35561_0x10cc0;
    undefined field35562_0x10cc1;
    undefined field35563_0x10cc2;
    undefined field35564_0x10cc3;
    undefined field35565_0x10cc4;
    undefined field35566_0x10cc5;
    undefined field35567_0x10cc6;
    undefined field35568_0x10cc7;
    undefined field35569_0x10cc8;
    undefined field35570_0x10cc9;
    undefined field35571_0x10cca;
    undefined field35572_0x10ccb;
    undefined field35573_0x10ccc;
    undefined field35574_0x10ccd;
    undefined field35575_0x10cce;
    undefined field35576_0x10ccf;
    undefined field35577_0x10cd0;
    undefined field35578_0x10cd1;
    undefined field35579_0x10cd2;
    undefined field35580_0x10cd3;
    undefined field35581_0x10cd4;
    undefined field35582_0x10cd5;
    undefined field35583_0x10cd6;
    undefined field35584_0x10cd7;
    undefined field35585_0x10cd8;
    undefined field35586_0x10cd9;
    undefined field35587_0x10cda;
    undefined field35588_0x10cdb;
    undefined field35589_0x10cdc;
    undefined field35590_0x10cdd;
    undefined field35591_0x10cde;
    undefined field35592_0x10cdf;
    undefined field35593_0x10ce0;
    undefined field35594_0x10ce1;
    undefined field35595_0x10ce2;
    undefined field35596_0x10ce3;
    undefined field35597_0x10ce4;
    undefined field35598_0x10ce5;
    undefined field35599_0x10ce6;
    undefined field35600_0x10ce7;
    undefined field35601_0x10ce8;
    undefined field35602_0x10ce9;
    undefined field35603_0x10cea;
    undefined field35604_0x10ceb;
    undefined field35605_0x10cec;
    undefined field35606_0x10ced;
    undefined field35607_0x10cee;
    undefined field35608_0x10cef;
    undefined field35609_0x10cf0;
    undefined field35610_0x10cf1;
    undefined field35611_0x10cf2;
    undefined field35612_0x10cf3;
    undefined field35613_0x10cf4;
    undefined field35614_0x10cf5;
    undefined field35615_0x10cf6;
    undefined field35616_0x10cf7;
    undefined field35617_0x10cf8;
    undefined field35618_0x10cf9;
    undefined field35619_0x10cfa;
    undefined field35620_0x10cfb;
    undefined field35621_0x10cfc;
    undefined field35622_0x10cfd;
    undefined field35623_0x10cfe;
    undefined field35624_0x10cff;
    undefined field35625_0x10d00;
    undefined field35626_0x10d01;
    undefined field35627_0x10d02;
    undefined field35628_0x10d03;
    undefined field35629_0x10d04;
    undefined field35630_0x10d05;
    undefined field35631_0x10d06;
    undefined field35632_0x10d07;
    undefined field35633_0x10d08;
    undefined field35634_0x10d09;
    undefined field35635_0x10d0a;
    undefined field35636_0x10d0b;
    undefined field35637_0x10d0c;
    undefined field35638_0x10d0d;
    undefined field35639_0x10d0e;
    undefined field35640_0x10d0f;
    undefined field35641_0x10d10;
    undefined field35642_0x10d11;
    undefined field35643_0x10d12;
    undefined field35644_0x10d13;
    undefined field35645_0x10d14;
    undefined field35646_0x10d15;
    undefined field35647_0x10d16;
    undefined field35648_0x10d17;
    undefined field35649_0x10d18;
    undefined field35650_0x10d19;
    undefined field35651_0x10d1a;
    undefined field35652_0x10d1b;
    undefined field35653_0x10d1c;
    undefined field35654_0x10d1d;
    undefined field35655_0x10d1e;
    undefined field35656_0x10d1f;
    undefined field35657_0x10d20;
    undefined field35658_0x10d21;
    undefined field35659_0x10d22;
    undefined field35660_0x10d23;
    undefined field35661_0x10d24;
    undefined field35662_0x10d25;
    undefined field35663_0x10d26;
    undefined field35664_0x10d27;
    undefined field35665_0x10d28;
    undefined field35666_0x10d29;
    undefined field35667_0x10d2a;
    undefined field35668_0x10d2b;
    undefined field35669_0x10d2c;
    undefined field35670_0x10d2d;
    undefined field35671_0x10d2e;
    undefined field35672_0x10d2f;
    undefined field35673_0x10d30;
    undefined field35674_0x10d31;
    undefined field35675_0x10d32;
    undefined field35676_0x10d33;
    undefined field35677_0x10d34;
    undefined field35678_0x10d35;
    undefined field35679_0x10d36;
    undefined field35680_0x10d37;
    undefined field35681_0x10d38;
    undefined field35682_0x10d39;
    undefined field35683_0x10d3a;
    undefined field35684_0x10d3b;
    undefined field35685_0x10d3c;
    undefined field35686_0x10d3d;
    undefined field35687_0x10d3e;
    undefined field35688_0x10d3f;
    undefined field35689_0x10d40;
    undefined field35690_0x10d41;
    undefined field35691_0x10d42;
    undefined field35692_0x10d43;
    undefined field35693_0x10d44;
    undefined field35694_0x10d45;
    undefined field35695_0x10d46;
    undefined field35696_0x10d47;
    undefined field35697_0x10d48;
    undefined field35698_0x10d49;
    undefined field35699_0x10d4a;
    undefined field35700_0x10d4b;
    undefined field35701_0x10d4c;
    undefined field35702_0x10d4d;
    undefined field35703_0x10d4e;
    undefined field35704_0x10d4f;
    undefined field35705_0x10d50;
    undefined field35706_0x10d51;
    undefined field35707_0x10d52;
    undefined field35708_0x10d53;
    undefined field35709_0x10d54;
    undefined field35710_0x10d55;
    undefined field35711_0x10d56;
    undefined field35712_0x10d57;
    undefined field35713_0x10d58;
    undefined field35714_0x10d59;
    undefined field35715_0x10d5a;
    undefined field35716_0x10d5b;
    undefined field35717_0x10d5c;
    undefined field35718_0x10d5d;
    undefined field35719_0x10d5e;
    undefined field35720_0x10d5f;
    undefined field35721_0x10d60;
    undefined field35722_0x10d61;
    undefined field35723_0x10d62;
    undefined field35724_0x10d63;
    undefined field35725_0x10d64;
    undefined field35726_0x10d65;
    undefined field35727_0x10d66;
    undefined field35728_0x10d67;
    undefined field35729_0x10d68;
    undefined field35730_0x10d69;
    undefined field35731_0x10d6a;
    undefined field35732_0x10d6b;
    undefined field35733_0x10d6c;
    undefined field35734_0x10d6d;
    undefined field35735_0x10d6e;
    undefined field35736_0x10d6f;
    undefined field35737_0x10d70;
    undefined field35738_0x10d71;
    undefined field35739_0x10d72;
    undefined field35740_0x10d73;
    undefined field35741_0x10d74;
    undefined field35742_0x10d75;
    undefined field35743_0x10d76;
    undefined field35744_0x10d77;
    undefined field35745_0x10d78;
    undefined field35746_0x10d79;
    undefined field35747_0x10d7a;
    undefined field35748_0x10d7b;
    undefined field35749_0x10d7c;
    undefined field35750_0x10d7d;
    undefined field35751_0x10d7e;
    undefined field35752_0x10d7f;
    undefined field35753_0x10d80;
    undefined field35754_0x10d81;
    undefined field35755_0x10d82;
    undefined field35756_0x10d83;
    undefined field35757_0x10d84;
    undefined field35758_0x10d85;
    undefined field35759_0x10d86;
    undefined field35760_0x10d87;
    undefined field35761_0x10d88;
    undefined field35762_0x10d89;
    undefined field35763_0x10d8a;
    undefined field35764_0x10d8b;
    undefined field35765_0x10d8c;
    undefined field35766_0x10d8d;
    undefined field35767_0x10d8e;
    undefined field35768_0x10d8f;
    undefined field35769_0x10d90;
    undefined field35770_0x10d91;
    undefined field35771_0x10d92;
    undefined field35772_0x10d93;
    undefined field35773_0x10d94;
    undefined field35774_0x10d95;
    undefined field35775_0x10d96;
    undefined field35776_0x10d97;
    undefined field35777_0x10d98;
    undefined field35778_0x10d99;
    undefined field35779_0x10d9a;
    undefined field35780_0x10d9b;
    undefined field35781_0x10d9c;
    undefined field35782_0x10d9d;
    undefined field35783_0x10d9e;
    undefined field35784_0x10d9f;
    undefined field35785_0x10da0;
    undefined field35786_0x10da1;
    undefined field35787_0x10da2;
    undefined field35788_0x10da3;
    undefined field35789_0x10da4;
    undefined field35790_0x10da5;
    undefined field35791_0x10da6;
    undefined field35792_0x10da7;
    undefined field35793_0x10da8;
    undefined field35794_0x10da9;
    undefined field35795_0x10daa;
    undefined field35796_0x10dab;
    undefined field35797_0x10dac;
    undefined field35798_0x10dad;
    undefined field35799_0x10dae;
    undefined field35800_0x10daf;
    undefined field35801_0x10db0;
    undefined field35802_0x10db1;
    undefined field35803_0x10db2;
    undefined field35804_0x10db3;
    undefined field35805_0x10db4;
    undefined field35806_0x10db5;
    undefined field35807_0x10db6;
    undefined field35808_0x10db7;
    undefined field35809_0x10db8;
    undefined field35810_0x10db9;
    undefined field35811_0x10dba;
    undefined field35812_0x10dbb;
    undefined field35813_0x10dbc;
    undefined field35814_0x10dbd;
    undefined field35815_0x10dbe;
    undefined field35816_0x10dbf;
    undefined field35817_0x10dc0;
    undefined field35818_0x10dc1;
    undefined field35819_0x10dc2;
    undefined field35820_0x10dc3;
    undefined field35821_0x10dc4;
    undefined field35822_0x10dc5;
    undefined field35823_0x10dc6;
    undefined field35824_0x10dc7;
    undefined field35825_0x10dc8;
    undefined field35826_0x10dc9;
    undefined field35827_0x10dca;
    undefined field35828_0x10dcb;
    undefined field35829_0x10dcc;
    undefined field35830_0x10dcd;
    undefined field35831_0x10dce;
    undefined field35832_0x10dcf;
    undefined field35833_0x10dd0;
    undefined field35834_0x10dd1;
    undefined field35835_0x10dd2;
    undefined field35836_0x10dd3;
    undefined field35837_0x10dd4;
    undefined field35838_0x10dd5;
    undefined field35839_0x10dd6;
    undefined field35840_0x10dd7;
    undefined field35841_0x10dd8;
    undefined field35842_0x10dd9;
    undefined field35843_0x10dda;
    undefined field35844_0x10ddb;
    undefined field35845_0x10ddc;
    undefined field35846_0x10ddd;
    undefined field35847_0x10dde;
    undefined field35848_0x10ddf;
    undefined field35849_0x10de0;
    undefined field35850_0x10de1;
    undefined field35851_0x10de2;
    undefined field35852_0x10de3;
    undefined field35853_0x10de4;
    undefined field35854_0x10de5;
    undefined field35855_0x10de6;
    undefined field35856_0x10de7;
    undefined field35857_0x10de8;
    undefined field35858_0x10de9;
    undefined field35859_0x10dea;
    undefined field35860_0x10deb;
    undefined field35861_0x10dec;
    undefined field35862_0x10ded;
    undefined field35863_0x10dee;
    undefined field35864_0x10def;
    undefined field35865_0x10df0;
    undefined field35866_0x10df1;
    undefined field35867_0x10df2;
    undefined field35868_0x10df3;
    undefined field35869_0x10df4;
    undefined field35870_0x10df5;
    undefined field35871_0x10df6;
    undefined field35872_0x10df7;
    undefined field35873_0x10df8;
    undefined field35874_0x10df9;
    undefined field35875_0x10dfa;
    undefined field35876_0x10dfb;
    undefined field35877_0x10dfc;
    undefined field35878_0x10dfd;
    undefined field35879_0x10dfe;
    undefined field35880_0x10dff;
    undefined field35881_0x10e00;
    undefined field35882_0x10e01;
    undefined field35883_0x10e02;
    undefined field35884_0x10e03;
    undefined field35885_0x10e04;
    undefined field35886_0x10e05;
    undefined field35887_0x10e06;
    undefined field35888_0x10e07;
    undefined field35889_0x10e08;
    undefined field35890_0x10e09;
    undefined field35891_0x10e0a;
    undefined field35892_0x10e0b;
    undefined field35893_0x10e0c;
    undefined field35894_0x10e0d;
    undefined field35895_0x10e0e;
    undefined field35896_0x10e0f;
    undefined field35897_0x10e10;
    undefined field35898_0x10e11;
    undefined field35899_0x10e12;
    undefined field35900_0x10e13;
    undefined field35901_0x10e14;
    undefined field35902_0x10e15;
    undefined field35903_0x10e16;
    undefined field35904_0x10e17;
    undefined field35905_0x10e18;
    undefined field35906_0x10e19;
    undefined field35907_0x10e1a;
    undefined field35908_0x10e1b;
    undefined field35909_0x10e1c;
    undefined field35910_0x10e1d;
    undefined field35911_0x10e1e;
    undefined field35912_0x10e1f;
    undefined field35913_0x10e20;
    undefined field35914_0x10e21;
    undefined field35915_0x10e22;
    undefined field35916_0x10e23;
    undefined field35917_0x10e24;
    undefined field35918_0x10e25;
    undefined field35919_0x10e26;
    undefined field35920_0x10e27;
    undefined field35921_0x10e28;
    undefined field35922_0x10e29;
    undefined field35923_0x10e2a;
    undefined field35924_0x10e2b;
    undefined field35925_0x10e2c;
    undefined field35926_0x10e2d;
    undefined field35927_0x10e2e;
    undefined field35928_0x10e2f;
    undefined field35929_0x10e30;
    undefined field35930_0x10e31;
    undefined field35931_0x10e32;
    undefined field35932_0x10e33;
    undefined field35933_0x10e34;
    undefined field35934_0x10e35;
    undefined field35935_0x10e36;
    undefined field35936_0x10e37;
    undefined field35937_0x10e38;
    undefined field35938_0x10e39;
    undefined field35939_0x10e3a;
    undefined field35940_0x10e3b;
    undefined field35941_0x10e3c;
    undefined field35942_0x10e3d;
    undefined field35943_0x10e3e;
    undefined field35944_0x10e3f;
    undefined field35945_0x10e40;
    undefined field35946_0x10e41;
    undefined field35947_0x10e42;
    undefined field35948_0x10e43;
    undefined field35949_0x10e44;
    undefined field35950_0x10e45;
    undefined field35951_0x10e46;
    undefined field35952_0x10e47;
    undefined field35953_0x10e48;
    undefined field35954_0x10e49;
    undefined field35955_0x10e4a;
    undefined field35956_0x10e4b;
    undefined field35957_0x10e4c;
    undefined field35958_0x10e4d;
    undefined field35959_0x10e4e;
    undefined field35960_0x10e4f;
    undefined field35961_0x10e50;
    undefined field35962_0x10e51;
    undefined field35963_0x10e52;
    undefined field35964_0x10e53;
    undefined field35965_0x10e54;
    undefined field35966_0x10e55;
    undefined field35967_0x10e56;
    undefined field35968_0x10e57;
    undefined field35969_0x10e58;
    undefined field35970_0x10e59;
    undefined field35971_0x10e5a;
    undefined field35972_0x10e5b;
    undefined field35973_0x10e5c;
    undefined field35974_0x10e5d;
    undefined field35975_0x10e5e;
    undefined field35976_0x10e5f;
    undefined field35977_0x10e60;
    undefined field35978_0x10e61;
    undefined field35979_0x10e62;
    undefined field35980_0x10e63;
    undefined field35981_0x10e64;
    undefined field35982_0x10e65;
    undefined field35983_0x10e66;
    undefined field35984_0x10e67;
    undefined field35985_0x10e68;
    undefined field35986_0x10e69;
    undefined field35987_0x10e6a;
    undefined field35988_0x10e6b;
    undefined field35989_0x10e6c;
    undefined field35990_0x10e6d;
    undefined field35991_0x10e6e;
    undefined field35992_0x10e6f;
    undefined field35993_0x10e70;
    undefined field35994_0x10e71;
    undefined field35995_0x10e72;
    undefined field35996_0x10e73;
    undefined field35997_0x10e74;
    undefined field35998_0x10e75;
    undefined field35999_0x10e76;
    undefined field36000_0x10e77;
    undefined field36001_0x10e78;
    undefined field36002_0x10e79;
    undefined field36003_0x10e7a;
    undefined field36004_0x10e7b;
    undefined field36005_0x10e7c;
    undefined field36006_0x10e7d;
    undefined field36007_0x10e7e;
    undefined field36008_0x10e7f;
    undefined field36009_0x10e80;
    undefined field36010_0x10e81;
    undefined field36011_0x10e82;
    undefined field36012_0x10e83;
    undefined field36013_0x10e84;
    undefined field36014_0x10e85;
    undefined field36015_0x10e86;
    undefined field36016_0x10e87;
    undefined field36017_0x10e88;
    undefined field36018_0x10e89;
    undefined field36019_0x10e8a;
    undefined field36020_0x10e8b;
    undefined field36021_0x10e8c;
    undefined field36022_0x10e8d;
    undefined field36023_0x10e8e;
    undefined field36024_0x10e8f;
    undefined field36025_0x10e90;
    undefined field36026_0x10e91;
    undefined field36027_0x10e92;
    undefined field36028_0x10e93;
    undefined field36029_0x10e94;
    undefined field36030_0x10e95;
    undefined field36031_0x10e96;
    undefined field36032_0x10e97;
    undefined field36033_0x10e98;
    undefined field36034_0x10e99;
    undefined field36035_0x10e9a;
    undefined field36036_0x10e9b;
    undefined field36037_0x10e9c;
    undefined field36038_0x10e9d;
    undefined field36039_0x10e9e;
    undefined field36040_0x10e9f;
    undefined field36041_0x10ea0;
    undefined field36042_0x10ea1;
    undefined field36043_0x10ea2;
    undefined field36044_0x10ea3;
    undefined field36045_0x10ea4;
    undefined field36046_0x10ea5;
    undefined field36047_0x10ea6;
    undefined field36048_0x10ea7;
    undefined field36049_0x10ea8;
    undefined field36050_0x10ea9;
    undefined field36051_0x10eaa;
    undefined field36052_0x10eab;
    undefined field36053_0x10eac;
    undefined field36054_0x10ead;
    undefined field36055_0x10eae;
    undefined field36056_0x10eaf;
    undefined field36057_0x10eb0;
    undefined field36058_0x10eb1;
    undefined field36059_0x10eb2;
    undefined field36060_0x10eb3;
    undefined field36061_0x10eb4;
    undefined field36062_0x10eb5;
    undefined field36063_0x10eb6;
    undefined field36064_0x10eb7;
    undefined field36065_0x10eb8;
    undefined field36066_0x10eb9;
    undefined field36067_0x10eba;
    undefined field36068_0x10ebb;
    undefined field36069_0x10ebc;
    undefined field36070_0x10ebd;
    undefined field36071_0x10ebe;
    undefined field36072_0x10ebf;
    undefined field36073_0x10ec0;
    undefined field36074_0x10ec1;
    undefined field36075_0x10ec2;
    undefined field36076_0x10ec3;
    undefined field36077_0x10ec4;
    undefined field36078_0x10ec5;
    undefined field36079_0x10ec6;
    undefined field36080_0x10ec7;
    undefined field36081_0x10ec8;
    undefined field36082_0x10ec9;
    undefined field36083_0x10eca;
    undefined field36084_0x10ecb;
    undefined field36085_0x10ecc;
    undefined field36086_0x10ecd;
    undefined field36087_0x10ece;
    undefined field36088_0x10ecf;
    undefined field36089_0x10ed0;
    undefined field36090_0x10ed1;
    undefined field36091_0x10ed2;
    undefined field36092_0x10ed3;
    undefined field36093_0x10ed4;
    undefined field36094_0x10ed5;
    undefined field36095_0x10ed6;
    undefined field36096_0x10ed7;
    undefined field36097_0x10ed8;
    undefined field36098_0x10ed9;
    undefined field36099_0x10eda;
    undefined field36100_0x10edb;
    uint unk_10edc;
    uint unk_10ee0;
    undefined field36103_0x10ee4;
    undefined field36104_0x10ee5;
    undefined field36105_0x10ee6;
    undefined field36106_0x10ee7;
    undefined field36107_0x10ee8;
    undefined field36108_0x10ee9;
    undefined field36109_0x10eea;
    undefined field36110_0x10eeb;
    undefined field36111_0x10eec;
    undefined field36112_0x10eed;
    undefined field36113_0x10eee;
    undefined field36114_0x10eef;
    undefined field36115_0x10ef0;
    undefined field36116_0x10ef1;
    undefined field36117_0x10ef2;
    undefined field36118_0x10ef3;
    undefined field36119_0x10ef4;
    undefined field36120_0x10ef5;
    undefined field36121_0x10ef6;
    undefined field36122_0x10ef7;
    undefined field36123_0x10ef8;
    undefined field36124_0x10ef9;
    undefined field36125_0x10efa;
    undefined field36126_0x10efb;
    undefined field36127_0x10efc;
    undefined field36128_0x10efd;
    undefined field36129_0x10efe;
    undefined field36130_0x10eff;
    undefined field36131_0x10f00;
    undefined field36132_0x10f01;
    undefined field36133_0x10f02;
    undefined field36134_0x10f03;
    undefined field36135_0x10f04;
    undefined field36136_0x10f05;
    undefined field36137_0x10f06;
    undefined field36138_0x10f07;
    undefined field36139_0x10f08;
    undefined field36140_0x10f09;
    undefined field36141_0x10f0a;
    undefined field36142_0x10f0b;
    undefined field36143_0x10f0c;
    undefined field36144_0x10f0d;
    undefined field36145_0x10f0e;
    undefined field36146_0x10f0f;
    undefined field36147_0x10f10;
    undefined field36148_0x10f11;
    undefined field36149_0x10f12;
    undefined field36150_0x10f13;
    undefined field36151_0x10f14;
    undefined field36152_0x10f15;
    undefined field36153_0x10f16;
    undefined field36154_0x10f17;
    undefined field36155_0x10f18;
    undefined field36156_0x10f19;
    undefined field36157_0x10f1a;
    undefined field36158_0x10f1b;
    undefined field36159_0x10f1c;
    undefined field36160_0x10f1d;
    undefined field36161_0x10f1e;
    undefined field36162_0x10f1f;
    undefined field36163_0x10f20;
    undefined field36164_0x10f21;
    undefined field36165_0x10f22;
    undefined field36166_0x10f23;
    undefined field36167_0x10f24;
    undefined field36168_0x10f25;
    undefined field36169_0x10f26;
    undefined field36170_0x10f27;
    uint unk_10f28;
    uint unk_10f2c;
    uint unk_10f30;
};

typedef struct ReplayManager ReplayManager, *PReplayManager;

struct ReplayManager {
    uint frame_id;
    struct ReplayData *data;
    int is_demo;
    char *replay_file;
    undefined field4_0x10;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    undefined field8_0x14;
    undefined field9_0x15;
    undefined field10_0x16;
    undefined field11_0x17;
    undefined field12_0x18;
    undefined field13_0x19;
    undefined field14_0x1a;
    undefined field15_0x1b;
    undefined field16_0x1c;
    undefined field17_0x1d;
    undefined field18_0x1e;
    undefined field19_0x1f;
    undefined field20_0x20;
    undefined field21_0x21;
    undefined field22_0x22;
    undefined field23_0x23;
    undefined field24_0x24;
    undefined field25_0x25;
    undefined field26_0x26;
    undefined field27_0x27;
    undefined field28_0x28;
    undefined field29_0x29;
    undefined field30_0x2a;
    undefined field31_0x2b;
    undefined field32_0x2c;
    undefined field33_0x2d;
    undefined field34_0x2e;
    undefined field35_0x2f;
    undefined field36_0x30;
    undefined field37_0x31;
    undefined field38_0x32;
    undefined field39_0x33;
    undefined field40_0x34;
    undefined field41_0x35;
    undefined field42_0x36;
    undefined field43_0x37;
    undefined field44_0x38;
    undefined field45_0x39;
    undefined field46_0x3a;
    undefined field47_0x3b;
    undefined field48_0x3c;
    undefined field49_0x3d;
    undefined field50_0x3e;
    undefined field51_0x3f;
    undefined field52_0x40;
    undefined field53_0x41;
    undefined field54_0x42;
    undefined field55_0x43;
    ushort field56_0x44;
    undefined field57_0x46;
    undefined field58_0x47;
    struct ReplayDataInput *replay_inputs;
    undefined field60_0x4c;
    undefined field61_0x4d;
    undefined field62_0x4e;
    undefined field63_0x4f;
    undefined field64_0x50;
    undefined field65_0x51;
    undefined field66_0x52;
    undefined field67_0x53;
    undefined field68_0x54;
    undefined field69_0x55;
    undefined field70_0x56;
    undefined field71_0x57;
    undefined field72_0x58;
    undefined field73_0x59;
    undefined field74_0x5a;
    undefined field75_0x5b;
    undefined field76_0x5c;
    undefined field77_0x5d;
    undefined field78_0x5e;
    undefined field79_0x5f;
    undefined field80_0x60;
    undefined field81_0x61;
    undefined field82_0x62;
    undefined field83_0x63;
    undefined field84_0x64;
    undefined field85_0x65;
    undefined field86_0x66;
    undefined field87_0x67;
    struct ChainElem *chain1;
    struct ChainElem *chain2;
    struct ChainElem *chain3;
};

typedef struct Pbg3Archive *test.conflict;

typedef enum EclInsn {
    ECL_INSNNOP=0,
    ECL_INSN_NOP=0,
    ECL_INSNENEMY_DELETE=1,
    ECL_INSN_ENEMY_DELETE=1,
    ECL_INSNJUMP=2,
    ECL_INSN_JUMP=2,
    ECL_INSNJUMP_DEC=3,
    ECL_INSN_JUMP_DEC=3,
    ECL_INSNSET_INT=4,
    ECL_INSN_SET_INT=4,
    ECL_INSNSET_FLOAT=5,
    ECL_INSN_SET_FLOAT=5,
    ECL_INSNSET_INT_RAND_BOUND=6,
    ECL_INSN_SET_INT_RAND_BOUND=6,
    ECL_INSNSET_INT_RAND_BOUND_MIN=7,
    ECL_INSN_SET_INT_RAND_BOUND_MIN=7,
    ECL_INSNSET_FLOAT_RAND_BOUND=8,
    ECL_INSN_SET_FLOAT_RAND_BOUND=8,
    ECL_INSNSET_FLOAT_RAND_BOUND_MIN=9,
    ECL_INSN_SET_FLOAT_RAND_BOUND_MIN=9,
    ECL_INSNSET_VAR_SELF_X=10,
    ECL_INSN_SET_VAR_SELF_X=10,
    ECL_INSNSET_VAR_SELF_Y=11,
    ECL_INSN_SET_VAR_SELF_Y=11,
    ECL_INSNSET_VAR_SELF_Z=12,
    ECL_INSN_SET_VAR_SELF_Z=12,
    ECL_INSNMATH_INT_ADD=13,
    ECL_INSN_MATH_INT_ADD=13,
    ECL_INSNMATH_INT_SUB=14,
    ECL_INSN_MATH_INT_SUB=14,
    ECL_INSNMATH_INT_MUL=15,
    ECL_INSN_MATH_INT_MUL=15,
    ECL_INSNMATH_INT_DIV=16,
    ECL_INSN_MATH_INT_DIV=16,
    ECL_INSNMATH_INT_MOD=17,
    ECL_INSN_MATH_INT_MOD=17,
    ECL_INSNMATH_INC=18,
    ECL_INSN_MATH_INC=18,
    ECL_INSNMATH_DEC=19,
    ECL_INSN_MATH_DEC=19,
    ECL_INSNMATH_FLOAT_ADD=20,
    ECL_INSN_MATH_FLOAT_ADD=20,
    ECL_INSNMATH_FLOAT_SUB=21,
    ECL_INSN_MATH_FLOAT_SUB=21,
    ECL_INSNMATH_FLOAT_MUL=22,
    ECL_INSN_MATH_FLOAT_MUL=22,
    ECL_INSNMATH_FLOAT_DIV=23,
    ECL_INSN_MATH_FLOAT_DIV=23,
    ECL_INSNMATH_FLOAT_MOD=24,
    ECL_INSN_MATH_FLOAT_MOD=24,
    ECL_INSNMATH_ATAN2=25,
    ECL_INSN_MATH_ATAN2=25,
    ECL_INSNMATH_NORM_ANGLE=26,
    ECL_INSN_MATH_NORM_ANGLE=26,
    ECL_INSNCMP_INT=27,
    ECL_INSN_CMP_INT=27,
    ECL_INSNCMP_FLOAT=28,
    ECL_INSN_CMP_FLOAT=28,
    ECL_INSNJUMP_LSS=29,
    ECL_INSN_JUMP_LSS=29,
    ECL_INSNJUMP_LEQ=30,
    ECL_INSN_JUMP_LEQ=30,
    ECL_INSNJUMP_EQU=31,
    ECL_INSN_JUMP_EQU=31,
    ECL_INSNJUMP_GRE=32,
    ECL_INSN_JUMP_GRE=32,
    ECL_INSNJUMP_GEQ=33,
    ECL_INSN_JUMP_GEQ=33,
    ECL_INSNJUMP_NEQ=34,
    ECL_INSN_JUMP_NEQ=34,
    ECL_INSNCALL=35,
    ECL_INSN_CALL=35,
    ECL_INSNRET=36,
    ECL_INSN_RET=36,
    ECL_INSNCALL_LSS=37,
    ECL_INSN_CALL_LSS=37,
    ECL_INSNCALL_LEQ=38,
    ECL_INSN_CALL_LEQ=38,
    ECL_INSNCALL_EQU=39,
    ECL_INSN_CALL_EQU=39,
    ECL_INSNCALL_GRE=40,
    ECL_INSN_CALL_GRE=40,
    ECL_INSNCALL_GEQ=41,
    ECL_INSN_CALL_GEQ=41,
    ECL_INSNCALL_NEQ=42,
    ECL_INSN_CALL_NEQ=42,
    ECL_INSNMOVE_POSITION=43,
    ECL_INSN_MOVE_POSITION=43,
    ECL_INSNMOVE_AXIS_VELOCITY=44,
    ECL_INSN_MOVE_AXIS_VELOCITY=44,
    ECL_INSNMOVE_VELOCITY=45,
    ECL_INSN_MOVE_VELOCITY=45,
    ECL_INSNMOVE_ANGULAR_VELOCITY=46,
    ECL_INSN_MOVE_ANGULAR_VELOCITY=46,
    ECL_INSNMOVE_SPEED=47,
    ECL_INSN_MOVE_SPEED=47,
    ECL_INSNMOVE_ACCELERATION=48,
    ECL_INSN_MOVE_ACCELERATION=48,
    ECL_INSNMOVE_RAND=49,
    ECL_INSN_MOVE_RAND=49,
    ECL_INSNMOVE_RAND_IN_BOUNDS=50,
    ECL_INSN_MOVE_RAND_IN_BOUNDS=50,
    ECL_INSNMOVE_AT_PLAYER=51,
    ECL_INSN_MOVE_AT_PLAYER=51,
    ECL_INSNMOVE_DIR_TIME_DECELERATE=52,
    ECL_INSN_MOVE_DIR_TIME_DECELERATE=52,
    ECL_INSNMOVE_DIR_TIME_DECELERATE_FAST=53,
    ECL_INSN_MOVE_DIR_TIME_DECELERATE_FAST=53,
    ECL_INSNMOVE_DIR_TIME_ACCELERATE=54,
    ECL_INSN_MOVE_DIR_TIME_ACCELERATE=54,
    ECL_INSNMOVE_DIR_TIME_ACCELERATE_FAST=55,
    ECL_INSN_MOVE_DIR_TIME_ACCELERATE_FAST=55,
    ECL_INSNMOVE_POSITION_TIME_LINEAR=56,
    ECL_INSN_MOVE_POSITION_TIME_LINEAR=56,
    ECL_INSNMOVE_POSITION_TIME_DECELERATE=57,
    ECL_INSN_MOVE_POSITION_TIME_DECELERATE=57,
    ECL_INSNMOVE_POSITION_TIME_DECELERATE_FAST=58,
    ECL_INSN_MOVE_POSITION_TIME_DECELERATE_FAST=58,
    ECL_INSNMOVE_POSITION_TIME_ACCELERATE=59,
    ECL_INSN_MOVE_POSITION_TIME_ACCELERATE=59,
    ECL_INSNMOVE_POSITION_TIME_ACCELERATE_FAST=60,
    ECL_INSN_MOVE_POSITION_TIME_ACCELERATE_FAST=60,
    ECL_INSNMOVE_TIME_DECELERATE=61,
    ECL_INSN_MOVE_TIME_DECELERATE=61,
    ECL_INSNMOVE_TIME_DECELERATE_FAST=62,
    ECL_INSN_MOVE_TIME_DECELERATE_FAST=62,
    ECL_INSNMOVE_TIME_ACCELERATE=63,
    ECL_INSN_MOVE_TIME_ACCELERATE=63,
    ECL_INSNMOVE_TIME_ACCELERATE_FAST=64,
    ECL_INSN_MOVE_TIME_ACCELERATE_FAST=64,
    ECL_INSNMOVE_BOUNDS_SET=65,
    ECL_INSN_MOVE_BOUNDS_SET=65,
    ECL_INSNMOVE_BOUNDS_DISABLE=66,
    ECL_INSN_MOVE_BOUNDS_DISABLE=66,
    ECL_INSNBULLET_FAN_AIMED=67,
    ECL_INSN_BULLET_FAN_AIMED=67,
    ECL_INSNBULLET_FAN=68,
    ECL_INSN_BULLET_FAN=68,
    ECL_INSNBULLET_CIRCLE_AIMED=69,
    ECL_INSN_BULLET_CIRCLE_AIMED=69,
    ECL_INSNBULLET_CIRCLE=70,
    ECL_INSN_BULLET_CIRCLE=70,
    ECL_INSNBULLET_OFFSET_CIRCLE_AIMED=71,
    ECL_INSN_BULLET_OFFSET_CIRCLE_AIMED=71,
    ECL_INSNBULLET_OFFSET_CIRCLE=72,
    ECL_INSN_BULLET_OFFSET_CIRCLE=72,
    ECL_INSNBULLET_RANDOM_ANGLE=73,
    ECL_INSN_BULLET_RANDOM_ANGLE=73,
    ECL_INSNBULLET_RANDOM_SPEED=74,
    ECL_INSN_BULLET_RANDOM_SPEED=74,
    ECL_INSNBULLET_RANDOM=75,
    ECL_INSN_BULLET_RANDOM=75,
    ECL_INSNSHOOT_INTERVAL=76,
    ECL_INSN_SHOOT_INTERVAL=76,
    ECL_INSNSHOOT_INTERVAL_DELAYED=77,
    ECL_INSN_SHOOT_INTERVAL_DELAYED=77,
    ECL_INSNSHOOT_DISABLE=78,
    ECL_INSN_SHOOT_DISABLE=78,
    ECL_INSNSHOOT_ENABLE=79,
    ECL_INSN_SHOOT_ENABLE=79,
    ECL_INSNSHOOT_NOW=80,
    ECL_INSN_SHOOT_NOW=80,
    ECL_INSNSHOOT_OFFSET=81,
    ECL_INSN_SHOOT_OFFSET=81,
    ECL_INSNBULLET_EFFECTS=82,
    ECL_INSN_BULLET_EFFECTS=82,
    ECL_INSNBULLET_CANCEL=83,
    ECL_INSN_BULLET_CANCEL=83,
    ECL_INSNBULLET_SOUND=84,
    ECL_INSN_BULLET_SOUND=84,
    ECL_INSNLASER_CREATE=85,
    ECL_INSN_LASER_CREATE=85,
    ECL_INSNLASER_CREATE_AIMED=86,
    ECL_INSN_LASER_CREATE_AIMED=86,
    ECL_INSNLASER_INDEX=87,
    ECL_INSN_LASER_INDEX=87,
    ECL_INSNLASER_ROTATE=88,
    ECL_INSN_LASER_ROTATE=88,
    ECL_INSNLASER_ROTATE_FROM_PLAYER=89,
    ECL_INSN_LASER_ROTATE_FROM_PLAYER=89,
    ECL_INSNLASER_OFFSET=90,
    ECL_INSN_LASER_OFFSET=90,
    ECL_INSNLASER_TEST=91,
    ECL_INSN_LASER_TEST=91,
    ECL_INSNLASER_CANCEL=92,
    ECL_INSN_LASER_CANCEL=92,
    ECL_INSNSPELLCARD_START=93,
    ECL_INSN_SPELLCARD_START=93,
    ECL_INSNSPELLCARD_END=94,
    ECL_INSN_SPELLCARD_END=94,
    ECL_INSNENEMY_CREATE=95,
    ECL_INSN_ENEMY_CREATE=95,
    ECL_INSNENEMY_KILL_ALL=96,
    ECL_INSN_ENEMY_KILL_ALL=96,
    ECL_INSNANM_SET_MAIN=97,
    ECL_INSN_ANM_SET_MAIN=97,
    ECL_INSNANM_SET_POSES=98,
    ECL_INSN_ANM_SET_POSES=98,
    ECL_INSNANM_SET_SLOT=99,
    ECL_INSN_ANM_SET_SLOT=99,
    ECL_INSNANM_DEATH_EFFECTS=100,
    ECL_INSN_ANM_DEATH_EFFECTS=100,
    ECL_INSNBOSS_SET=101,
    ECL_INSN_BOSS_SET=101,
    ECL_INSNSPELLCARD_EFFECT=102,
    ECL_INSN_SPELLCARD_EFFECT=102,
    ECL_INSNENEMY_SET_HITBOX=103,
    ECL_INSN_ENEMY_SET_HITBOX=103,
    ECL_INSNENEMY_FLAG_COLLISION=104,
    ECL_INSN_ENEMY_FLAG_COLLISION=104,
    ECL_INSNENEMY_FLAG_CAN_TAKE_DAMAGE=105,
    ECL_INSN_ENEMY_FLAG_CAN_TAKE_DAMAGE=105,
    ECL_INSNEFFECT_SOUND=106,
    ECL_INSN_EFFECT_SOUND=106,
    ECL_INSNENEMY_FLAG_DEATH=107,
    ECL_INSN_ENEMY_FLAG_DEATH=107,
    ECL_INSNDEATH_CALLBACK_SUB=108,
    ECL_INSN_DEATH_CALLBACK_SUB=108,
    ECL_INSNENEMY_INTERRUPT_SET=109,
    ECL_INSN_ENEMY_INTERRUPT_SET=109,
    ECL_INSNENEMY_INTERRUPT=110,
    ECL_INSN_ENEMY_INTERRUPT=110,
    ECL_INSNENEMY_LIFE_SET=111,
    ECL_INSN_ENEMY_LIFE_SET=111,
    ECL_INSNBOSS_TIMER_SET=112,
    ECL_INSN_BOSS_TIMER_SET=112,
    ECL_INSNLIFE_CALLBACK_THRESHOLD=113,
    ECL_INSN_LIFE_CALLBACK_THRESHOLD=113,
    ECL_INSNLIFE_CALLBACK_SUB=114,
    ECL_INSN_LIFE_CALLBACK_SUB=114,
    ECL_INSNTIMER_CALLBACK_THRESHOLD=115,
    ECL_INSN_TIMER_CALLBACK_THRESHOLD=115,
    ECL_INSNTIMER_CALLBACK_SUB=116,
    ECL_INSN_TIMER_CALLBACK_SUB=116,
    ECL_INSNENEMY_FLAG_INTERACTABLE=117,
    ECL_INSN_ENEMY_FLAG_INTERACTABLE=117,
    ECL_INSNEFFECT_PARTICLE=118,
    ECL_INSN_EFFECT_PARTICLE=118,
    ECL_INSNDROP_ITEMS=119,
    ECL_INSN_DROP_ITEMS=119,
    ECL_INSNANM_FLAG_ROTATION=120,
    ECL_INSN_ANM_FLAG_ROTATION=120,
    ECL_INSNEX_INS_CALL=121,
    ECL_INSN_EX_INS_CALL=121,
    ECL_INSNEX_INS_REPEAT=122,
    ECL_INSN_EX_INS_REPEAT=122,
    ECL_INSNTIME_SET=123,
    ECL_INSN_TIME_SET=123,
    ECL_INSNDROP_ITEM_ID=124,
    ECL_INSN_DROP_ITEM_ID=124,
    ECL_INSNSTD_UNPAUSE=125,
    ECL_INSN_STD_UNPAUSE=125,
    ECL_INSNBOSS_SET_LIFE_COUNT=126,
    ECL_INSN_BOSS_SET_LIFE_COUNT=126,
    ECL_INSNDEBUG_WATCH=127,
    ECL_INSN_DEBUG_WATCH=127,
    ECL_INSNANM_INTERRUPT_MAIN=128,
    ECL_INSN_ANM_INTERRUPT_MAIN=128,
    ECL_INSNANM_INTERRUPT_SLOT=129,
    ECL_INSN_ANM_INTERRUPT_SLOT=129,
    ECL_INSNENEMY_FLAG_DISABLE_CALL_STACK=130,
    ECL_INSN_ENEMY_FLAG_DISABLE_CALL_STACK=130,
    ECL_INSNBULLET_RANK_INFLUENCE=131,
    ECL_INSN_BULLET_RANK_INFLUENCE=131,
    ECL_INSNENEMY_FLAG_INVISIBLE=132,
    ECL_INSN_ENEMY_FLAG_INVISIBLE=132,
    ECL_INSNBOSS_TIMER_CLEAR=133,
    ECL_INSN_BOSS_TIMER_CLEAR=133
} EclInsn;

typedef struct Pbg3Parser *FileAbstractionToPbg3Parser;

typedef enum GameConfigurationRenderOpts {
    USE_D3D_HW_TEXTURE_BLENDING=0,
    DONT_USE_VERTEX_BUF=1,
    FORCE_16BIT_COLOR_MODE=2,
    CLEAR_BACKBUFFER_ON_REFRESH=3,
    DISPLAY_MINIMUM_GRAPHICS=4,
    SUPPRESS_USE_OF_GOROUD_SHADING=5,
    TURN_OFF_DEPTH_TEST=6,
    FORCE_60FPS=7,
    NO_COLOR_COMP=8,
    REFERENCE_RASTERIZER_MODE=9,
    DONT_USE_FOG=10,
    NO_DIRECTINPUT_PAD=11
} GameConfigurationRenderOpts;

typedef struct AnmRawScript AnmRawScript, *PAnmRawScript;

struct AnmRawScript {
    uint id;
    struct AnmRawInstr *firstInstruction;
};

typedef struct Vertex_TEX1_XYZRWH Vertex_TEX1_XYZRWH, *PVertex_TEX1_XYZRWH;

struct Vertex_TEX1_XYZRWH {
    struct D3DXVECTOR4 pos;
    struct D3DXVECTOR2 textureUV;
};

typedef struct Vertex_DIFFUSE_XYZRWH Vertex_DIFFUSE_XYZRWH, *PVertex_DIFFUSE_XYZRWH;

struct Vertex_DIFFUSE_XYZRWH {
    struct D3DXVECTOR4 pos;
    D3DCOLOR diffuse;
};

typedef struct Vertex_TEX1_DIFFUSE_XYZRWH Vertex_TEX1_DIFFUSE_XYZRWH, *PVertex_TEX1_DIFFUSE_XYZRWH;

struct Vertex_TEX1_DIFFUSE_XYZRWH {
    struct D3DXVECTOR4 pos;
    D3DCOLOR color;
    struct D3DXVECTOR2 textureUV;
};

typedef struct AnmRawSprite AnmRawSprite, *PAnmRawSprite;

struct AnmRawSprite {
    uint id;
    struct D3DXVECTOR2 offset;
    struct D3DXVECTOR2 size;
};

typedef struct AnmManager AnmManager, *PAnmManager;

typedef struct AnmRawEntry AnmRawEntry, *PAnmRawEntry;

struct AnmManager {
    struct AnmLoadedSprite sprites[2048];
    struct AnmVm virtualMachine;
    struct IDirect3DTexture8 *textures[264];
    void *imageDataArray[256];
    int maybeLoadedSpriteCount;
    struct AnmRawInstr *scripts[2048];
    int spriteIndices[2048];
    struct AnmRawEntry *anmFiles[128]; /* Created by retype action */
    uint anmFilesSpriteIndexOffsets[128];
    struct IDirect3DSurface8 *surfaces[32];
    struct IDirect3DSurface8 *surfacesBis[32];
    D3DXIMAGE_INFO surfaceSourceInfo[32];
    D3DCOLOR currentTextureFactor;
    struct IDirect3DTexture8 *currentTexture;
    uchar currentBlendMode;
    uchar currentColorOp;
    uchar currentVertexShader;
    uchar currentZWriteDisable;
    struct AnmLoadedSprite *currentSprite;
    struct IDirect3DVertexBuffer8 *vertexBuffer;
    struct RenderVertexInfo vertexBufferContents[4];
    int screenshot_textureId;
    int screenshot_left;
    int screenshot_top;
    int screenshot_width;
    int screenshot_height;
};

struct AnmRawEntry {
    int numSprites;
    int numScripts;
    int textureIdx;
    int width;
    int height;
    int format;
    int color_key;
    int name_offset;
    int spriteIdxOffset;
    int mipmap_name_offset;
    int version;
    int unk3;
    int texture_offset;
    int has_data;
    int next_offset;
    int unk4;
    uint spriteOffsets[10];
    struct AnmRawScript scripts[10];
};

typedef struct Vertex_TEX1_DIFFUSE_XYZ Vertex_TEX1_DIFFUSE_XYZ, *PVertex_TEX1_DIFFUSE_XYZ;

struct Vertex_TEX1_DIFFUSE_XYZ {
    D3DXVECTOR3 position;
    D3DCOLOR diffuse;
    struct D3DXVECTOR2 textureUV;
};

typedef struct AnmRawTexture AnmRawTexture, *PAnmRawTexture;

struct AnmRawTexture {
    uint magic;
    ushort zero;
    ushort format;
    ushort width;
    ushort height;
    uint size;
};

typedef struct StdRawObject StdRawObject, *PStdRawObject;

typedef struct StdRawQuadBasic StdRawQuadBasic, *PStdRawQuadBasic;

struct StdRawQuadBasic {
    short type;
    short byteSize;
    short anmScript;
    short vmIndex;
    D3DXVECTOR3 position;
    struct D3DXVECTOR2 size;
};

struct StdRawObject {
    ushort id;
    uchar field1_0x2;
    uchar flags;
    D3DXVECTOR3 position;
    D3DXVECTOR3 size;
    struct StdRawQuadBasic firstQuad;
};

typedef struct StdRawInstr StdRawInstr, *PStdRawInstr;

struct StdRawInstr {
    int field0_0x0;
    ushort field1_0x4;
    ushort field2_0x6;
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    undefined field11_0x10;
    undefined field12_0x11;
    undefined field13_0x12;
    undefined field14_0x13;
};

typedef struct StdRawInstrArgs StdRawInstrArgs, *PStdRawInstrArgs;

struct StdRawInstrArgs {
    int values[3];
};

typedef struct StdRawHeader StdRawHeader, *PStdRawHeader;

struct StdRawHeader {
    ushort objectsCount;
    ushort quadsCount;
    uint offsetToInstances;
    uint offsetToScript;
    uint field4_0xc;
    char stageName[128];
    char bgmNames[4][128];
    char bgmPaths[4][128];
    undefined field8_0x490;
    undefined field9_0x491;
    undefined field10_0x492;
    undefined field11_0x493;
    undefined field12_0x494;
    undefined field13_0x495;
    undefined field14_0x496;
    undefined field15_0x497;
    undefined field16_0x498;
    undefined field17_0x499;
    undefined field18_0x49a;
    undefined field19_0x49b;
    undefined field20_0x49c;
    undefined field21_0x49d;
    undefined field22_0x49e;
    undefined field23_0x49f;
    undefined field24_0x4a0;
    undefined field25_0x4a1;
    undefined field26_0x4a2;
    undefined field27_0x4a3;
    undefined field28_0x4a4;
    undefined field29_0x4a5;
    undefined field30_0x4a6;
    undefined field31_0x4a7;
    undefined field32_0x4a8;
    undefined field33_0x4a9;
    undefined field34_0x4aa;
    undefined field35_0x4ab;
    undefined field36_0x4ac;
    undefined field37_0x4ad;
    undefined field38_0x4ae;
    undefined field39_0x4af;
    undefined field40_0x4b0;
    undefined field41_0x4b1;
    undefined field42_0x4b2;
    undefined field43_0x4b3;
    undefined field44_0x4b4;
    undefined field45_0x4b5;
    undefined field46_0x4b6;
    undefined field47_0x4b7;
    undefined field48_0x4b8;
    undefined field49_0x4b9;
    undefined field50_0x4ba;
    undefined field51_0x4bb;
    undefined field52_0x4bc;
    undefined field53_0x4bd;
    undefined field54_0x4be;
    undefined field55_0x4bf;
    undefined field56_0x4c0;
    undefined field57_0x4c1;
    undefined field58_0x4c2;
    undefined field59_0x4c3;
    undefined field60_0x4c4;
    undefined field61_0x4c5;
    undefined field62_0x4c6;
    undefined field63_0x4c7;
    undefined field64_0x4c8;
    undefined field65_0x4c9;
    undefined field66_0x4ca;
    undefined field67_0x4cb;
    undefined field68_0x4cc;
    undefined field69_0x4cd;
    undefined field70_0x4ce;
    undefined field71_0x4cf;
};

typedef struct Stage Stage, *PStage;

typedef struct StdRawInstance StdRawInstance, *PStdRawInstance;

typedef struct StageCameraSky StageCameraSky, *PStageCameraSky;

struct StageCameraSky {
    float nearPlane;
    float farPlane;
    D3DCOLOR color;
};

struct Stage {
    struct AnmVm *quadVms;
    byte *stdData;
    int quadCount;
    int objectsCount;
    struct StdRawObject **objects;
    struct StdRawInstance *objectInstances;
    struct StdRawInstr *beginningOfScript;
    struct ZunTimer scriptTime;
    int instructionIndex;
    struct ZunTimer timer;
    uint stage;
    D3DXVECTOR3 position;
    struct StageCameraSky skyFog;
    struct StageCameraSky skyFogInterpInitial;
    struct StageCameraSky skyFogInterpFinal;
    int skyFogInterpDuration;
    struct ZunTimer skyFogInterpTimer;
    byte skyFogNeedsSetup;
    enum SpellcardState spellcardState;
    int ticksSinceSpellcardStarted;
    struct AnmVm field20_0x88;
    struct AnmVm field21_0x198;
    uchar unpauseFlag;
    D3DXVECTOR3 facingDirInterpInitial;
    D3DXVECTOR3 facingDirInterpFinal;
    int facingDirInterpDuration;
    struct ZunTimer facingDirInterpTimer;
    D3DXVECTOR3 positionInterpFinal;
    int positionInterpEndTime;
    D3DXVECTOR3 positionInterpInitial;
    int positionInterpStartTime;
};

struct StdRawInstance {
    ushort id;
    ushort field1_0x2;
    D3DXVECTOR3 position;
};

typedef struct unk unk, *Punk;

struct unk {
    void *unk0;
    int unk4;
    int unk8;
    int unkc;
};

typedef float f32;

typedef int i32;

typedef short i16;

typedef sbyte i8;

typedef uint u32;

typedef ushort u16;

#define _M_IX86 300

#define _USE_ATTRIBUTES_FOR_SAL 0

#define _WIN32_WINNT 1024

#define _USE_DECLSPECS_FOR_SAL 0

#define _WIN32_WINDOWS 1024

#define WINVER 2304

#define _INTEGRAL_MAX_BITS 32

#define _MSC_VER 1200


/* WARNING! conflicting data type names: /PE/IMAGE_OPTIONAL_HEADER32 - /deps/winnt.h/IMAGE_OPTIONAL_HEADER32 */

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct {
    dword NameOffset;
    dword NameIsString;
};


/* WARNING! conflicting data type names: /PE/IMAGE_FILE_HEADER - /deps/winnt.h/IMAGE_FILE_HEADER */


/* WARNING! conflicting data type names: /PE/IMAGE_NT_HEADERS32 - /deps/winnt.h/IMAGE_NT_HEADERS32 */


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DIRECTORY_ENTRY - /deps/winnt.h/IMAGE_RESOURCE_DIRECTORY_ENTRY */


/* WARNING! conflicting data type names: /PE/IMAGE_SECTION_HEADER - /deps/winnt.h/IMAGE_SECTION_HEADER */

typedef union Misc Misc, *PMisc;

union Misc {
    dword PhysicalAddress;
    dword VirtualSize;
};


/* WARNING! conflicting data type names: /PE/IMAGE_DATA_DIRECTORY - /deps/winnt.h/IMAGE_DATA_DIRECTORY */


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DATA_ENTRY - /deps/winnt.h/IMAGE_RESOURCE_DATA_ENTRY */

typedef enum SectionFlags {
    IMAGE_SCN_TYPE_NO_PAD=8,
    IMAGE_SCN_RESERVED_0001=16,
    IMAGE_SCN_CNT_CODE=32,
    IMAGE_SCN_CNT_INITIALIZED_DATA=64,
    IMAGE_SCN_CNT_UNINITIALIZED_DATA=128,
    IMAGE_SCN_LNK_OTHER=256,
    IMAGE_SCN_LNK_INFO=512,
    IMAGE_SCN_RESERVED_0040=1024,
    IMAGE_SCN_LNK_REMOVE=2048,
    IMAGE_SCN_LNK_COMDAT=4096,
    IMAGE_SCN_GPREL=32768,
    IMAGE_SCN_MEM_16BIT=131072,
    IMAGE_SCN_MEM_PURGEABLE=131072,
    IMAGE_SCN_MEM_LOCKED=262144,
    IMAGE_SCN_MEM_PRELOAD=524288,
    IMAGE_SCN_ALIGN_1BYTES=1048576,
    IMAGE_SCN_ALIGN_2BYTES=2097152,
    IMAGE_SCN_ALIGN_4BYTES=3145728,
    IMAGE_SCN_ALIGN_8BYTES=4194304,
    IMAGE_SCN_ALIGN_16BYTES=5242880,
    IMAGE_SCN_ALIGN_32BYTES=6291456,
    IMAGE_SCN_ALIGN_64BYTES=7340032,
    IMAGE_SCN_ALIGN_128BYTES=8388608,
    IMAGE_SCN_ALIGN_256BYTES=9437184,
    IMAGE_SCN_ALIGN_512BYTES=10485760,
    IMAGE_SCN_ALIGN_1024BYTES=11534336,
    IMAGE_SCN_ALIGN_2048BYTES=12582912,
    IMAGE_SCN_ALIGN_4096BYTES=13631488,
    IMAGE_SCN_ALIGN_8192BYTES=14680064,
    IMAGE_SCN_LNK_NRELOC_OVFL=16777216,
    IMAGE_SCN_MEM_DISCARDABLE=33554432,
    IMAGE_SCN_MEM_NOT_CACHED=67108864,
    IMAGE_SCN_MEM_NOT_PAGED=134217728,
    IMAGE_SCN_MEM_SHARED=268435456,
    IMAGE_SCN_MEM_EXECUTE=536870912,
    IMAGE_SCN_MEM_READ=1073741824,
    IMAGE_SCN_MEM_WRITE=2147483648
} SectionFlags;


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DIRECTORY - /deps/winnt.h/IMAGE_RESOURCE_DIRECTORY */

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion;

union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion {
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;
    dword Name;
    word Id;
};

typedef struct UnknownSub3c UnknownSub3c, *PUnknownSub3c;

struct UnknownSub3c {
    float field0_0x0;
    int field1_0x4;
    int field2_0x8;
    int field3_0xc;
    int field4_0x10;
    float field5_0x14;
    int field6_0x18;
    int field7_0x1c;
    int field8_0x20;
    int field9_0x24;
    float field10_0x28;
    int field11_0x2c;
    int field12_0x30;
    int field13_0x34;
    int field14_0x38;
    float field15_0x3c;
};

typedef struct astruct astruct, *Pastruct;

struct astruct {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    undefined field8_0x8;
    undefined field9_0x9;
    undefined field10_0xa;
    undefined field11_0xb;
    undefined field12_0xc;
    undefined field13_0xd;
    undefined field14_0xe;
    undefined field15_0xf;
    undefined field16_0x10;
    undefined field17_0x11;
    undefined field18_0x12;
    undefined field19_0x13;
    short *field20_0x14;
    undefined field21_0x18;
    undefined field22_0x19;
    undefined field23_0x1a;
    undefined field24_0x1b;
    undefined field25_0x1c;
    undefined field26_0x1d;
    undefined field27_0x1e;
    undefined field28_0x1f;
    undefined field29_0x20;
    undefined field30_0x21;
    undefined field31_0x22;
    undefined field32_0x23;
    undefined field33_0x24;
    undefined field34_0x25;
    undefined field35_0x26;
    undefined field36_0x27;
    undefined field37_0x28;
    undefined field38_0x29;
    undefined field39_0x2a;
    undefined field40_0x2b;
    undefined field41_0x2c;
    undefined field42_0x2d;
    undefined field43_0x2e;
    undefined field44_0x2f;
    undefined field45_0x30;
    undefined field46_0x31;
    undefined field47_0x32;
    undefined field48_0x33;
    short *field49_0x34;
};

typedef struct Unknown Unknown, *PUnknown;

struct Unknown { /* Old variant of AnmVm (TODO remove me) */
    undefined4 field0_0x0;
    undefined4 field1_0x4;
    undefined4 field2_0x8;
    undefined4 field3_0xc;
    undefined4 field4_0x10;
    undefined4 field5_0x14;
    float field6_0x18;
    float field7_0x1c;
    undefined4 field8_0x20;
    undefined4 field9_0x24;
    undefined4 field10_0x28;
    undefined4 field11_0x2c;
    struct ZunTimer field12_0x30;
    struct UnknownSub3c field13_0x3c;
    int field14_0x7c;
    uint field15_0x80;
    undefined2 field16_0x84;
    undefined2 field17_0x86;
    undefined2 field18_0x88;
    undefined2 field19_0x8a;
    undefined2 field20_0x8c;
    undefined field21_0x8e;
    undefined field22_0x8f;
    undefined field23_0x90;
    undefined field24_0x91;
    undefined field25_0x92;
    undefined field26_0x93;
    undefined field27_0x94;
    undefined field28_0x95;
    undefined field29_0x96;
    undefined field30_0x97;
    float field31_0x98;
    undefined field32_0x9c;
    undefined field33_0x9d;
    undefined field34_0x9e;
    undefined field35_0x9f;
    undefined field36_0xa0;
    undefined field37_0xa1;
    undefined field38_0xa2;
    undefined field39_0xa3;
    undefined field40_0xa4;
    undefined field41_0xa5;
    undefined field42_0xa6;
    undefined field43_0xa7;
    undefined field44_0xa8;
    undefined field45_0xa9;
    undefined field46_0xaa;
    undefined field47_0xab;
    undefined field48_0xac;
    undefined field49_0xad;
    undefined field50_0xae;
    undefined field51_0xaf;
    short field52_0xb0;
    undefined field53_0xb2;
    undefined field54_0xb3;
    undefined field55_0xb4;
    undefined field56_0xb5;
    undefined field57_0xb6;
    undefined field58_0xb7;
    undefined field59_0xb8;
    undefined field60_0xb9;
    undefined field61_0xba;
    undefined field62_0xbb;
    undefined field63_0xbc;
    undefined field64_0xbd;
    undefined field65_0xbe;
    undefined field66_0xbf;
    struct AnmLoadedSprite *field67_0xc0;
};

typedef struct CD3DXImage CD3DXImage, *PCD3DXImage;

struct CD3DXImage {
    undefined4 field0_0x0;
    undefined4 field1_0x4;
    undefined field2_0x8;
    undefined field3_0x9;
    undefined field4_0xa;
    undefined field5_0xb;
    int left;
    int top;
    int right;
    int bottom;
    undefined4 field10_0x1c;
    undefined4 field11_0x20;
    undefined4 field12_0x24;
    undefined4 field13_0x28;
    undefined4 field14_0x2c;
};

typedef struct EHExceptionRecord EHExceptionRecord, *PEHExceptionRecord;

struct EHExceptionRecord { /* PlaceHolder Structure */
};

typedef struct FrameInfo FrameInfo, *PFrameInfo;

struct FrameInfo { /* PlaceHolder Structure */
};

typedef struct CDocObjectServer CDocObjectServer, *PCDocObjectServer;

struct CDocObjectServer { /* PlaceHolder Structure */
};

typedef struct _s_CatchableType _s_CatchableType, *P_s_CatchableType;

struct _s_CatchableType { /* PlaceHolder Structure */
};

typedef struct EHRegistrationNode EHRegistrationNode, *PEHRegistrationNode;

struct EHRegistrationNode { /* PlaceHolder Structure */
};

typedef struct COleDispParams COleDispParams, *PCOleDispParams;

struct COleDispParams { /* PlaceHolder Structure */
};

typedef struct _s_ThrowInfo _s_ThrowInfo, *P_s_ThrowInfo;

struct _s_ThrowInfo { /* PlaceHolder Structure */
};

