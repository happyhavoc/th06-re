typedef unsigned char   undefined;

typedef unsigned long long    GUID;
typedef pointer32 ImageBaseOffset32;

typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
float10
typedef long long    longlong;
typedef char    sbyte;
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned long long    ulonglong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined3;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined5;
typedef unsigned long long    undefined6;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef unsigned short    wchar16;
typedef short    wchar_t;
typedef unsigned short    word;
typedef struct _s_HandlerType _s_HandlerType, *P_s_HandlerType;

typedef struct TypeDescriptor TypeDescriptor, *PTypeDescriptor;

typedef int ptrdiff_t;

struct TypeDescriptor {
    dword hash;
    void *spare;
    char name[0];
};

struct _s_HandlerType {
    uint adjectives;
    struct TypeDescriptor *pType;
    ptrdiff_t dispCatchObj;
    void *addressOfHandler;
};

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct {
    dword OffsetToDirectory;
    dword DataIsDirectory;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion {
    dword OffsetToData;
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;
};

typedef struct _s_FuncInfo _s_FuncInfo, *P_s_FuncInfo;

typedef int __ehstate_t;

typedef struct _s_UnwindMapEntry _s_UnwindMapEntry, *P_s_UnwindMapEntry;

typedef struct _s_UnwindMapEntry UnwindMapEntry;

typedef struct _s_TryBlockMapEntry _s_TryBlockMapEntry, *P_s_TryBlockMapEntry;

typedef struct _s_TryBlockMapEntry TryBlockMapEntry;

typedef struct _s_HandlerType HandlerType;

struct _s_FuncInfo {
    uint magicNumber_and_bbtFlags;
    __ehstate_t maxState;
    UnwindMapEntry *pUnwindMap;
    uint nTryBlocks;
    TryBlockMapEntry *pTryBlockMap;
    uint nIPMapEntries;
    void *pIPToStateMap;
};

struct _s_UnwindMapEntry {
    __ehstate_t toState;
    void (*action)(void);
};

struct _s_TryBlockMapEntry {
    __ehstate_t tryLow;
    __ehstate_t tryHigh;
    __ehstate_t catchHigh;
    int nCatches;
    HandlerType *pHandlerArray;
};

typedef struct SoundPlayer SoundPlayer, *PSoundPlayer;

typedef struct CSoundManager CSoundManager, *PCSoundManager;

typedef int i32;

typedef struct IDirectSoundBuffer IDirectSoundBuffer, *PIDirectSoundBuffer;

typedef struct IDirectSoundBuffer *LPDIRECTSOUNDBUFFER;

typedef struct HWND__ HWND__, *PHWND__;

typedef struct HWND__ *HWND;

typedef ulong DWORD;

typedef void *HANDLE;

typedef uint u32;

typedef struct CStreamingSound CStreamingSound, *PCStreamingSound;

typedef struct IDirectSound8 IDirectSound8, *PIDirectSound8;

typedef struct IDirectSound8 *LPDIRECTSOUND8;

typedef struct IDirectSoundBufferVtbl IDirectSoundBufferVtbl, *PIDirectSoundBufferVtbl;

typedef long LONG;

typedef LONG HRESULT;


/* WARNING! conflicting data type names: /deps/guiddef.h/GUID - /GUID */

typedef GUID IID;

typedef void *LPVOID;

typedef DWORD ULONG;

typedef struct _DSBCAPS _DSBCAPS, *P_DSBCAPS;

typedef struct _DSBCAPS *LPDSBCAPS;

typedef DWORD *LPDWORD;

typedef struct tWAVEFORMATEX tWAVEFORMATEX, *PtWAVEFORMATEX;

typedef struct tWAVEFORMATEX *LPWAVEFORMATEX;

typedef long *LPLONG;

typedef struct IDirectSound IDirectSound, *PIDirectSound;

typedef struct IDirectSound *LPDIRECTSOUND;

typedef struct _DSBUFFERDESC _DSBUFFERDESC, *P_DSBUFFERDESC;

typedef struct _DSBUFFERDESC DSBUFFERDESC;

typedef DSBUFFERDESC *LPCDSBUFFERDESC;

typedef struct tWAVEFORMATEX WAVEFORMATEX;

typedef WAVEFORMATEX *LPCWAVEFORMATEX;

typedef struct CSound CSound, *PCSound;

typedef int BOOL;

typedef struct IDirectSound8Vtbl IDirectSound8Vtbl, *PIDirectSound8Vtbl;

typedef struct IUnknown IUnknown, *PIUnknown;

typedef struct IUnknown *LPUNKNOWN;

typedef struct _DSCAPS _DSCAPS, *P_DSCAPS;

typedef struct _DSCAPS *LPDSCAPS;

typedef GUID *LPCGUID;

typedef ushort WORD;

typedef struct IDirectSoundVtbl IDirectSoundVtbl, *PIDirectSoundVtbl;

typedef struct CWaveFile CWaveFile, *PCWaveFile;

typedef struct IUnknownVtbl IUnknownVtbl, *PIUnknownVtbl;

typedef struct HMMIO__ HMMIO__, *PHMMIO__;

typedef struct HMMIO__ *HMMIO;

typedef struct _MMCKINFO _MMCKINFO, *P_MMCKINFO;

typedef struct _MMCKINFO MMCKINFO;

typedef struct _MMIOINFO _MMIOINFO, *P_MMIOINFO;

typedef struct _MMIOINFO MMIOINFO;

typedef uchar BYTE;


/* WARNING! conflicting data type names: /deps/WinDef.h/ULONG - /deps/wtypes.h/ULONG */

typedef DWORD FOURCC;

typedef long LONG_PTR;

typedef LONG_PTR LRESULT;

typedef char CHAR;

typedef CHAR *LPSTR;

typedef uint UINT;

typedef LONG_PTR LPARAM;

typedef LRESULT (MMIOPROC)(LPSTR, UINT, LPARAM, LPARAM);

typedef MMIOPROC *LPMMIOPROC;

typedef struct HTASK__ HTASK__, *PHTASK__;

typedef struct HTASK__ *HTASK;

typedef char *HPSTR;

struct _MMIOINFO {
    DWORD dwFlags;
    FOURCC fccIOProc;
    LPMMIOPROC pIOProc;
    UINT wErrorRet;
    HTASK htask;
    LONG cchBuffer;
    HPSTR pchBuffer;
    HPSTR pchNext;
    HPSTR pchEndRead;
    HPSTR pchEndWrite;
    LONG lBufOffset;
    LONG lDiskOffset;
    DWORD adwInfo[3];
    DWORD dwReserved1;
    DWORD dwReserved2;
    HMMIO hmmio;
};

struct _MMCKINFO {
    FOURCC ckid;
    DWORD cksize;
    FOURCC fccType;
    DWORD dwDataOffset;
    DWORD dwFlags;
};

struct CWaveFile {
    WAVEFORMATEX *m_pwfx;
    HMMIO m_hmmio;
    MMCKINFO m_ck;
    MMCKINFO m_ckRiff;
    DWORD m_dwSize;
    MMIOINFO m_mmioinfoOut;
    DWORD m_dwFlags;
    BOOL m_bIsReadingFromMemory;
    BYTE *m_pbData;
    BYTE *m_pbDataCur;
    ULONG m_ulDataSize;
    DWORD m_loopStartPoint;
    DWORD m_loopEndPoint;
};

struct tWAVEFORMATEX {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
};

struct CSound {
    void *vtbl;
    LPDIRECTSOUNDBUFFER *m_apDSBuffer;
    DWORD m_dwDSBufferSize;
    struct CWaveFile *m_pWaveFile;
    DWORD m_dwNumBuffers;
    int m_dwCurFadeoutProgress;
    int m_dwTotalFadeout;
    DWORD m_dwIsFadingOut;
};

struct CStreamingSound {
    struct CSound base;
    DWORD m_dwLastPlayPos;
    DWORD m_dwPlayProgress;
    DWORD m_dwNotifySize;
    DWORD m_dwNextWriteOffset; /* Created by retype action */
    BOOL m_bFillNextNotificationWithSilence;
};

struct IDirectSound {
    struct IDirectSoundVtbl *lpVtbl;
};

struct _DSCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwMinSecondarySampleRate;
    DWORD dwMaxSecondarySampleRate;
    DWORD dwPrimaryBuffers;
    DWORD dwMaxHwMixingAllBuffers;
    DWORD dwMaxHwMixingStaticBuffers;
    DWORD dwMaxHwMixingStreamingBuffers;
    DWORD dwFreeHwMixingAllBuffers;
    DWORD dwFreeHwMixingStaticBuffers;
    DWORD dwFreeHwMixingStreamingBuffers;
    DWORD dwMaxHw3DAllBuffers;
    DWORD dwMaxHw3DStaticBuffers;
    DWORD dwMaxHw3DStreamingBuffers;
    DWORD dwFreeHw3DAllBuffers;
    DWORD dwFreeHw3DStaticBuffers;
    DWORD dwFreeHw3DStreamingBuffers;
    DWORD dwTotalHwMemBytes;
    DWORD dwFreeHwMemBytes;
    DWORD dwMaxContigFreeHwMemBytes;
    DWORD dwUnlockTransferRateHwBuffers;
    DWORD dwPlayCpuOverheadSwBuffers;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct CSoundManager {
    LPDIRECTSOUND8 m_pDS;
};

struct SoundPlayer {
    struct CSoundManager csoundmanager;
    i32 unk_4;
    LPDIRECTSOUNDBUFFER sound_buffers[128];
    LPDIRECTSOUNDBUFFER duplicateSoundBuffers[128];
    int unk_408[128];
    LPDIRECTSOUNDBUFFER initSoundBuffer;
    HWND game_window; /* Created by retype action */
    struct CSoundManager *csoundmanager_ptr; /* Created by retype action */
    DWORD m_dwNotifyThreadId;
    HANDLE m_hndNotifyThreadHandle;
    u32 unk_61c;
    int soundBuffersToPlay[3]; /* Created by retype action */
    struct CStreamingSound *streamingSound;
    HANDLE streamingUpdateEvent;
};

struct HMMIO__ {
    int unused;
};

struct IDirectSoundBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundBuffer *);
    ULONG (*Release)(struct IDirectSoundBuffer *);
    HRESULT (*GetCaps)(struct IDirectSoundBuffer *, LPDSBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundBuffer *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetVolume)(struct IDirectSoundBuffer *, LPLONG);
    HRESULT (*GetPan)(struct IDirectSoundBuffer *, LPLONG);
    HRESULT (*GetFrequency)(struct IDirectSoundBuffer *, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundBuffer *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundBuffer *, LPDIRECTSOUND, LPCDSBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundBuffer *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Play)(struct IDirectSoundBuffer *, DWORD, DWORD, DWORD);
    HRESULT (*SetCurrentPosition)(struct IDirectSoundBuffer *, DWORD);
    HRESULT (*SetFormat)(struct IDirectSoundBuffer *, LPCWAVEFORMATEX);
    HRESULT (*SetVolume)(struct IDirectSoundBuffer *, LONG);
    HRESULT (*SetPan)(struct IDirectSoundBuffer *, LONG);
    HRESULT (*SetFrequency)(struct IDirectSoundBuffer *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundBuffer *);
    HRESULT (*Unlock)(struct IDirectSoundBuffer *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*Restore)(struct IDirectSoundBuffer *);
};

struct HWND__ {
    int unused;
};

struct _DSBCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwUnlockTransferRate;
    DWORD dwPlayCpuOverhead;
};

struct IDirectSound8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSound8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound8 *);
    ULONG (*Release)(struct IDirectSound8 *);
    HRESULT (*CreateSoundBuffer)(struct IDirectSound8 *, LPCDSBUFFERDESC, LPDIRECTSOUNDBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSound8 *, LPDSCAPS);
    HRESULT (*DuplicateSoundBuffer)(struct IDirectSound8 *, LPDIRECTSOUNDBUFFER, LPDIRECTSOUNDBUFFER *);
    HRESULT (*SetCooperativeLevel)(struct IDirectSound8 *, HWND, DWORD);
    HRESULT (*Compact)(struct IDirectSound8 *);
    HRESULT (*GetSpeakerConfig)(struct IDirectSound8 *, LPDWORD);
    HRESULT (*SetSpeakerConfig)(struct IDirectSound8 *, DWORD);
    HRESULT (*Initialize)(struct IDirectSound8 *, LPCGUID);
    HRESULT (*VerifyCertification)(struct IDirectSound8 *, LPDWORD);
};

struct IDirectSoundVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound *);
    ULONG (*Release)(struct IDirectSound *);
    HRESULT (*CreateSoundBuffer)(struct IDirectSound *, LPCDSBUFFERDESC, LPDIRECTSOUNDBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSound *, LPDSCAPS);
    HRESULT (*DuplicateSoundBuffer)(struct IDirectSound *, LPDIRECTSOUNDBUFFER, LPDIRECTSOUNDBUFFER *);
    HRESULT (*SetCooperativeLevel)(struct IDirectSound *, HWND, DWORD);
    HRESULT (*Compact)(struct IDirectSound *);
    HRESULT (*GetSpeakerConfig)(struct IDirectSound *, LPDWORD);
    HRESULT (*SetSpeakerConfig)(struct IDirectSound *, DWORD);
    HRESULT (*Initialize)(struct IDirectSound *, LPCGUID);
};

struct IDirectSound8 {
    struct IDirectSound8Vtbl *lpVtbl;
};

struct IUnknownVtbl {
    HRESULT (*QueryInterface)(struct IUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IUnknown *);
    ULONG (*Release)(struct IUnknown *);
};

struct IUnknown {
    struct IUnknownVtbl *lpVtbl;
};

struct _DSBUFFERDESC {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
    GUID guid3DAlgorithm;
};

struct IDirectSoundBuffer {
    struct IDirectSoundBufferVtbl *lpVtbl;
};

struct HTASK__ {
    int unused;
};

typedef struct ItemManager_conflict1 ItemManager_conflict1, *PItemManager_conflict1;

struct ItemManager_conflict1 { /* PlaceHolder Class Structure */
};

typedef struct test test, *Ptest;

struct test {
    void *field0_0x0;
    int field1_0x4;
    int field2_0x8;
};

typedef struct Ending Ending, *PEnding;

typedef struct ChainElem ChainElem, *PChainElem;

typedef enum ChainCallbackResult {
    CHAIN_CALLBACK_RESULT_CONTINUE_AND_REMOVE_JOB=0,
    CHAIN_CALLBACK_RESULT_CONTINUE=1,
    CHAIN_CALLBACK_RESULT_EXECUTE_AGAIN=2,
    CHAIN_CALLBACK_RESULT_BREAK=3,
    CHAIN_CALLBACK_RESULT_EXIT_GAME_SUCCESS=4,
    CHAIN_CALLBACK_RESULT_EXIT_GAME_ERROR=5,
    CHAIN_CALLBACK_RESULT_RESTART_FROM_FIRST_JOB=6
} ChainCallbackResult;

typedef enum ZunResult {
    ZUN_ERROR=-1,
    ZUN_SUCCESS=0
} ZunResult;

typedef struct ZunTimer ZunTimer, *PZunTimer;

typedef struct AnmVm AnmVm, *PAnmVm;

typedef DWORD D3DCOLOR;

typedef struct _D3DVECTOR _D3DVECTOR, *P_D3DVECTOR;

typedef struct _D3DVECTOR D3DXVECTOR3;

typedef struct D3DXVECTOR2 D3DXVECTOR2, *PD3DXVECTOR2;

typedef struct _D3DMATRIX _D3DMATRIX, *P_D3DMATRIX;

typedef struct _D3DMATRIX D3DMATRIX;

typedef union D3DCOLORUNION D3DCOLORUNION, *PD3DCOLORUNION;

typedef enum AnmVmFlags {
    AnmVmFlags_None=0,
    AnmVmFlags_1=1,
    AnmVmFlags_0 | AnmVmFlags_1=3,
    AnmVmFlags_2=4,
    AnmVmFlags_3=8,
    AnmVmFlags_4=16,
    AnmVmFlags_5=32,
    AnmVmFlags_6=64,
    AnmVmFlags_7=128,
    AnmVmFlags_8=256,
    AnmVmFlags_9=512,
    AnmVmFlags_10=1024,
    AnmVmFlags_11=2048,
    AnmVmFlags_12=4096,
    AnmVmFlags_13=8192,
    AnmVmFlags_14=16384,
    AnmVmFlags_15=32768
} AnmVmFlags;

typedef struct AnmRawInstr AnmRawInstr, *PAnmRawInstr;

typedef struct AnmLoadedSprite AnmLoadedSprite, *PAnmLoadedSprite;

typedef uchar uint8_t;

typedef float FLOAT;

typedef enum AnmOpcode {
    AnmOpcode_Exit=0,
    AnmOpcode_SetActiveSprite=1,
    AnmOpcode_SetScale=2,
    AnmOpcode_SetAlpha=3,
    AnmOpcode_SetColor=4,
    AnmOpcode_Jump=5,
    AnmOpcode_Nop=6,
    AnmOpcode_FlipX=7,
    AnmOpcode_FlipY=8,
    AnmOpcode_SetRotation=9,
    AnmOpcode_SetPosition=10,
    AnmOpcode_SetScaleSpeed=11,
    AnmOpcode_Fade=12,
    AnmOpcode_SetBlendAdditive=13,
    AnmOpcode_SetBlendDefault=14,
    AnmOpcode_ExitHide=15,
    AnmOpcode_SetRandomSprite=16,
    AnmOpcode_SetTranslation=17,
    AnmOpcode_PosTimeLinear=18,
    AnmOpcode_PosTimeDecel=19,
    AnmOpcode_PosTimeAccel=20,
    AnmOpcode_Stop=21,
    AnmOpcode_InterruptLabel=22,
    AnmOpcode_23=23,
    AnmOpcode_StopHide=24,
    AnmOpcode_25=25,
    AnmOpcode_SetAutoRotate=26,
    AnmOpcode_27=27,
    AnmOpcode_28=28,
    AnmOpcode_SetVisibility=29,
    AnmOpcode_30=30,
    AnmOpcode_31=31
} AnmOpcode;

typedef struct ZunVec2 ZunVec2, *PZunVec2;

struct ZunVec2 {
    float x;
    float y;
};

struct AnmLoadedSprite {
    int sourceFileIndex;
    struct ZunVec2 startPixelInclusive;
    struct ZunVec2 endPixelInclusive;
    float textureHeight;
    float textureWidth;
    struct ZunVec2 uvStart;
    struct ZunVec2 uvEnd;
    float heightPx;
    float widthPx;
    int spriteId;
};

struct _D3DMATRIX {
    float m[4][4];
};

struct _D3DVECTOR {
    float x;
    float y;
    float z;
};

struct ChainElem {
    short priority;
    ushort flags;
    ChainCallbackResult (*callback)(void *);
    ZunResult (*addedCallback)(void *);
    ZunResult (*deletedCallback)(void *);
    struct ChainElem *prev;
    struct ChainElem *next;
    struct ChainElem *unkPtr;
    void *arg;
};

union D3DCOLORUNION {
    D3DCOLOR color;
    byte bytes[4];
};

struct AnmRawInstr {
    ushort time;
    enum AnmOpcode opcode;
    uchar argsCount;
    uint args[10];
};

struct D3DXVECTOR2 {
    FLOAT x;
    FLOAT y;
};

struct ZunTimer {
    int previous;
    float subFrame;
    int current;
};

struct AnmVm {
    D3DXVECTOR3 rotation;
    D3DXVECTOR3 angleVel;
    float scaleY;
    float scaleX;
    float scaleInterpFinalY;
    float scaleInterpFinalX;
    struct D3DXVECTOR2 uvScrollPos;
    struct ZunTimer currentTimeInScript;
    D3DMATRIX matrix;
    union D3DCOLORUNION color;
    enum AnmVmFlags flags;
    undefined field11_0x82;
    undefined field12_0x83;
    ushort alphaInterpEndTime;
    ushort scaleInterpEndTime;
    ushort autoRotate;
    short pendingInterrupt;
    ushort posInterpEndTime;
    undefined field18_0x8e;
    undefined field19_0x8f;
    D3DXVECTOR3 pos;
    float scaleInterpInitialY;
    float scaleInterpInitialX;
    struct ZunTimer scaleInterpTime;
    short spriteNumber;
    short anotherSpriteNumber;
    short anmFileIndex;
    undefined field27_0xb6;
    undefined field28_0xb7;
    struct AnmRawInstr *beginingOfScript;
    struct AnmRawInstr *currentInstruction;
    struct AnmLoadedSprite *sprite;
    D3DCOLOR alphaInterpInitial;
    D3DCOLOR alphaInterpFinal;
    D3DXVECTOR3 posInterpInitial;
    D3DXVECTOR3 posInterpFinal;
    D3DXVECTOR3 pos2;
    struct ZunTimer posInterpTime;
    int timeOfLastSpriteSet;
    struct ZunTimer alphaInterpTime;
    uint8_t fontWidth;
    uint8_t fontHeight;
    undefined field42_0x10e;
    undefined field43_0x10f;
};

struct Ending {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    struct ChainElem *chainElem;
    struct ZunTimer anmTimer4;
    struct AnmVm AnmVm;
    struct AnmVm field7_0x124;
    struct AnmVm field8_0x234;
    struct AnmVm field9_0x344;
    struct AnmVm field10_0x454;
    struct AnmVm field11_0x564;
    struct AnmVm field12_0x674;
    struct AnmVm field13_0x784;
    struct AnmVm field14_0x894;
    struct AnmVm field15_0x9a4;
    struct AnmVm field16_0xab4;
    struct AnmVm field17_0xbc4;
    struct AnmVm field18_0xcd4;
    struct AnmVm field19_0xde4;
    struct AnmVm field20_0xef4;
    struct AnmVm field21_0x1004;
    char *endFileData;
    undefined1 unk_dependent_on_clrd;
    undefined field24_0x1119;
    undefined field25_0x111a;
    undefined field26_0x111b;
    struct ZunTimer Timer1;
    struct ZunTimer Timer2;
    struct ZunTimer Timer3;
    long minWaitResetFrames; /* Created by retype action */
    long minWaitFrames;
    long line2Delay;
    long topLineDelay;
    undefined field34_0x1150;
    undefined field35_0x1151;
    undefined field36_0x1152;
    undefined field37_0x1153;
    int possibly_times_file_parsed;
    long textColor;
    D3DCOLOR unk_d3dcolor;
    int timeFading;
    long fadeFrames;
    int fadeType;
    char *endFileDataPtr;
};

typedef struct GameWindow GameWindow, *PGameWindow;

struct GameWindow {
    HWND window;
    int isAppClosing;
    int lastActiveAppValue;
    int isAppActive;
    byte curFrame;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    uint screen_save_active;
    uint low_power_active;
    uint power_off_active;
};

typedef struct SoundBufferIdxVolume SoundBufferIdxVolume, *PSoundBufferIdxVolume;

struct SoundBufferIdxVolume {
    int buffer_idx;
    short volume;
    short unk;
};

typedef struct ItemManager ItemManager, *PItemManager;

typedef struct Item Item, *PItem;

typedef enum ItemType {
    ITEM_POWER_SMALL=0,
    ITEM_POINT=1,
    ITEM_POWER_BIG=2,
    ITEM_BOMB=3,
    ITEM_FULL_POWER=4,
    ITEM_LIFE=5,
    ITEM_POINT_BULLET=6,
    ITEM_NO_ITEM=255
} ItemType;

struct Item {
    struct AnmVm vm;
    D3DXVECTOR3 position;
    D3DXVECTOR3 velocity;
    D3DXVECTOR3 unk;
    struct ZunTimer timer;
    enum ItemType item_type;
    byte is_in_use;
    byte field7_0x142;
    byte state;
};

struct ItemManager {
    struct Item items[512];
};

typedef struct _D3DXIMAGE_INFO _D3DXIMAGE_INFO, *P_D3DXIMAGE_INFO;

typedef struct _D3DXIMAGE_INFO D3DXIMAGE_INFO;

typedef enum _D3DFORMAT {
    D3DFMT_UNKNOWN=0,
    D3DFMT_R8G8B8=20,
    D3DFMT_A8R8G8B8=21,
    D3DFMT_X8R8G8B8=22,
    D3DFMT_R5G6B5=23,
    D3DFMT_X1R5G5B5=24,
    D3DFMT_A1R5G5B5=25,
    D3DFMT_A4R4G4B4=26,
    D3DFMT_R3G3B2=27,
    D3DFMT_A8=28,
    D3DFMT_A8R3G3B2=29,
    D3DFMT_X4R4G4B4=30,
    D3DFMT_A8P8=40,
    D3DFMT_P8=41,
    D3DFMT_L8=50,
    D3DFMT_A8L8=51,
    D3DFMT_A4L4=52,
    D3DFMT_V8U8=60,
    D3DFMT_L6V5U5=61,
    D3DFMT_X8L8V8U8=62,
    D3DFMT_Q8W8V8U8=63,
    D3DFMT_V16U16=64,
    D3DFMT_W11V11U10=65,
    D3DFMT_UYVY=66,
    D3DFMT_YUY2=67,
    D3DFMT_DXT1=68,
    D3DFMT_DXT2=69,
    D3DFMT_D16_LOCKABLE=70,
    D3DFMT_DXT3=70,
    D3DFMT_D32=71,
    D3DFMT_DXT4=71,
    D3DFMT_DXT5=72,
    D3DFMT_D15S1=73,
    D3DFMT_D24S8=75,
    D3DFMT_D24X8=77,
    D3DFMT_D24X4S4=79,
    D3DFMT_D16=80,
    D3DFMT_VERTEXDATA=100,
    D3DFMT_INDEX16=101,
    D3DFMT_INDEX32=102,
    D3DFMT_FORCE_DWORD=2147483647
} _D3DFORMAT;

typedef enum _D3DFORMAT D3DFORMAT;

struct _D3DXIMAGE_INFO {
    UINT Width;
    UINT Height;
    UINT Depth;
    UINT MipLevels;
    D3DFORMAT Format;
};

typedef struct struct_1 struct_1, *Pstruct_1;

struct struct_1 {
    struct IUnknownVtbl base;
    void *TestCooperativeLevel;
    void *GetAvailableTextureMem;
    void *ResourceManagerDiscardBytes;
    void *field4_0x18;
    void *field5_0x1c;
    void *field6_0x20;
    void *field7_0x24;
    void *field8_0x28;
    void *field9_0x2c;
    void *field10_0x30;
    void *field11_0x34;
    void *field12_0x38;
    void *field13_0x3c;
    void *field14_0x40;
    void *field15_0x44;
    void *field16_0x48;
    void *field17_0x4c;
    void *field18_0x50;
    void *field19_0x54;
    void *field20_0x58;
    void *field21_0x5c;
    void *field22_0x60;
    void *field23_0x64;
    void *field24_0x68;
    void *field25_0x6c;
    void *field26_0x70;
    void *field27_0x74;
    void *field28_0x78;
    void *field29_0x7c;
    void *field30_0x80;
    void *field31_0x84;
    void *field32_0x88;
    void *field33_0x8c;
    void *field34_0x90;
    void *field35_0x94;
    void *field36_0x98;
    void *field37_0x9c;
    void *field38_0xa0;
    void *field39_0xa4;
    void *field40_0xa8;
    void *field41_0xac;
    void *field42_0xb0;
    void *field43_0xb4;
    void *field44_0xb8;
    void *field45_0xbc;
    void *field46_0xc0;
    void *field47_0xc4;
    void *field48_0xc8;
    void *field49_0xcc;
    void *field50_0xd0;
    void *field51_0xd4;
    void *field52_0xd8;
    void *field53_0xdc;
    void *field54_0xe0;
    void *field55_0xe4;
    void *field56_0xe8;
    void *field57_0xec;
    void *field58_0xf0;
    void *field59_0xf4;
};

typedef struct Pbg3File Pbg3File, *PPbg3File;

struct Pbg3File { /* PlaceHolder Class Structure */
};

typedef struct PointF32 PointF32, *PPointF32;

struct PointF32 {
    float x;
    float y;
    float z;
};

typedef struct BombData BombData, *PBombData;

struct BombData {
    void *calc;
    void *draw;
};

typedef struct CLIENT_ID CLIENT_ID, *PCLIENT_ID;

struct CLIENT_ID {
    void *UniqueProcess;
    void *UniqueThread;
};

typedef struct AmsgPair AmsgPair, *PAmsgPair;

struct AmsgPair {
    int err_code;
    void *err_msg;
};

typedef struct _s_FuncInfo FuncInfo;


/* WARNING! conflicting data type names: /dsound/DSBUFFERDESC - /deps/dsound.h/DSBUFFERDESC */


/* WARNING! conflicting data type names: /dsound/LPWAVEFORMATEX - /deps/mmsystem.h/LPWAVEFORMATEX */


/* WARNING! conflicting data type names: /dsound/GUID - /GUID */

typedef struct _GUID _GUID, *P_GUID;

struct _GUID {
    ulong Data1;
    ushort Data2;
    ushort Data3;
    uchar Data4[8];
};


/* WARNING! conflicting data type names: /dsound/_DSBUFFERDESC - /deps/dsound.h/_DSBUFFERDESC */

typedef struct IMAGE_DOS_HEADER IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

struct IMAGE_DOS_HEADER {
    char e_magic[2]; /* Magic number */
    word e_cblp; /* Bytes of last page */
    word e_cp; /* Pages in file */
    word e_crlc; /* Relocations */
    word e_cparhdr; /* Size of header in paragraphs */
    word e_minalloc; /* Minimum extra paragraphs needed */
    word e_maxalloc; /* Maximum extra paragraphs needed */
    word e_ss; /* Initial (relative) SS value */
    word e_sp; /* Initial SP value */
    word e_csum; /* Checksum */
    word e_ip; /* Initial IP value */
    word e_cs; /* Initial (relative) CS value */
    word e_lfarlc; /* File address of relocation table */
    word e_ovno; /* Overlay number */
    word e_res[4][4]; /* Reserved words */
    word e_oemid; /* OEM identifier (for e_oeminfo) */
    word e_oeminfo; /* OEM information; e_oemid specific */
    word e_res2[10][10]; /* Reserved words */
    dword e_lfanew; /* File address of new exe header */
    byte e_program[64]; /* Actual DOS program */
};

#define SHTDN_REASON_MAJOR_NONE 0

#define SHTDN_REASON_MINOR_INSTALLATION 2

#define UCLEANUI 67108864

#define SHTDN_REASON_FLAG_CLEAN_UI 67108864

#define SHTDN_REASON_FLAG_DIRTY_UI 134217728

#define SHTDN_REASON_MINOR_BLUESCREEN 15

#define SHTDN_REASON_MINOR_PROCESSOR 8

#define SHTDN_REASON_MAJOR_APPLICATION 262144

#define SHTDN_REASON_FLAG_PLANNED 2147483648

#define SHTDN_REASON_MINOR_CORDUNPLUGGED 11

#define MAX_REASON_NAME_LEN 64

#define SHTDN_REASON_MAJOR_OPERATINGSYSTEM 131072

#define PCLEANUI 2214592512

#define SHTDN_REASON_MINOR_ENVIRONMENT 12

#define SHTDN_REASON_MAJOR_HARDWARE 65536

#define SHTDN_REASON_MINOR_UNSTABLE 6

#define SHTDN_REASON_UNKNOWN 255

#define SHTDN_REASON_MINOR_RECONFIG 4

#define SHTDN_REASON_MINOR_HUNG 5

#define SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED 33554432

#define SHTDN_REASON_FLAG_COMMENT_REQUIRED 16777216

#define SHTDN_REASON_MAJOR_OTHER 0

#define SHTDN_REASON_FLAG_USER_DEFINED 1073741824

#define SHTDN_REASON_MAJOR_SYSTEM 327680

#define SHTDN_REASON_MINOR_UPGRADE 3

#define UDIRTYUI 134217728

#define SHTDN_REASON_MINOR_OTHERDRIVER 14

#define SHTDN_REASON_MINOR_DISK 7

#define MAX_REASON_COMMENT_LEN 512

#define SHTDN_REASON_MINOR_HARDWARE_DRIVER 13

#define MAX_REASON_DESC_LEN 256

#define MAX_REASON_BUGID_LEN 32

#define SHTDN_REASON_MINOR_OTHER 0

#define SHTDN_REASON_MINOR_NONE 255

#define SHTDN_REASON_MAJOR_POWER 393216

#define SHTDN_REASON_MINOR_MAINTENANCE 1

#define SHTDN_REASON_MINOR_POWER_SUPPLY 10

#define SHTDN_REASON_VALID_BIT_MASK 3238002687

#define SHTDN_REASON_MAJOR_SOFTWARE 196608

#define SHTDN_REASON_MINOR_NETWORKCARD 9

typedef struct _iobuf _iobuf, *P_iobuf;

struct _iobuf {
    char *_ptr;
    int _cnt;
    char *_base;
    int _flag;
    int _file;
    int _charbuf;
    int _bufsiz;
    char *_tmpfname;
};

typedef struct _iobuf FILE;

typedef struct _DIOBJECTDATAFORMAT _DIOBJECTDATAFORMAT, *P_DIOBJECTDATAFORMAT;

struct _DIOBJECTDATAFORMAT {
    GUID *pguid;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
};

typedef struct DIDEVICEOBJECTINSTANCEA DIDEVICEOBJECTINSTANCEA, *PDIDEVICEOBJECTINSTANCEA;

typedef struct DIDEVICEOBJECTINSTANCEA *LPDIDEVICEOBJECTINSTANCEA;

struct DIDEVICEOBJECTINSTANCEA {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[260];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
};

typedef struct DIDEVICEINSTANCE_DX3W DIDEVICEINSTANCE_DX3W, *PDIDEVICEINSTANCE_DX3W;

typedef wchar_t WCHAR;

struct DIDEVICEINSTANCE_DX3W {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[260];
    WCHAR tszProductName[260];
};

typedef struct DIDEVICEOBJECTINSTANCE_DX3W DIDEVICEOBJECTINSTANCE_DX3W, *PDIDEVICEOBJECTINSTANCE_DX3W;

typedef struct DIDEVICEOBJECTINSTANCE_DX3W *LPCDIDEVICEOBJECTINSTANCE_DX3W;

struct DIDEVICEOBJECTINSTANCE_DX3W {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[260];
};

typedef struct DIPROPPOINTER DIPROPPOINTER, *PDIPROPPOINTER;

typedef struct DIPROPPOINTER *LPCDIPROPPOINTER;

typedef struct DIPROPHEADER DIPROPHEADER, *PDIPROPHEADER;

typedef uint UINT_PTR;

struct DIPROPHEADER {
    DWORD dwSize;
    DWORD dwHeaderSize;
    DWORD dwObj;
    DWORD dwHow;
};

struct DIPROPPOINTER {
    struct DIPROPHEADER diph;
    UINT_PTR uData;
};

typedef struct _DIMOUSESTATE2 _DIMOUSESTATE2, *P_DIMOUSESTATE2;

typedef struct _DIMOUSESTATE2 DIMOUSESTATE2;

struct _DIMOUSESTATE2 {
    LONG lX;
    LONG lY;
    LONG lZ;
    BYTE rgbButtons[8];
};

typedef struct DIENVELOPE DIENVELOPE, *PDIENVELOPE;

typedef struct DIENVELOPE *LPDIENVELOPE;

struct DIENVELOPE {
    DWORD dwSize;
    DWORD dwAttackLevel;
    DWORD dwAttackTime;
    DWORD dwFadeLevel;
    DWORD dwFadeTime;
};

typedef struct DIDEVCAPS_DX3 DIDEVCAPS_DX3, *PDIDEVCAPS_DX3;

typedef struct DIDEVCAPS_DX3 *LPDIDEVCAPS_DX3;

struct DIDEVCAPS_DX3 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
};

typedef struct IDirectInputDeviceWVtbl IDirectInputDeviceWVtbl, *PIDirectInputDeviceWVtbl;

typedef struct IDirectInputDeviceW IDirectInputDeviceW, *PIDirectInputDeviceW;

typedef struct DIDEVCAPS DIDEVCAPS, *PDIDEVCAPS;

typedef struct DIDEVCAPS *LPDIDEVCAPS;

typedef struct DIDEVICEOBJECTINSTANCEW DIDEVICEOBJECTINSTANCEW, *PDIDEVICEOBJECTINSTANCEW;

typedef struct DIDEVICEOBJECTINSTANCEW *LPCDIDEVICEOBJECTINSTANCEW;

typedef BOOL (*LPDIENUMDEVICEOBJECTSCALLBACKW)(LPCDIDEVICEOBJECTINSTANCEW, LPVOID);

typedef struct DIPROPHEADER *LPDIPROPHEADER;

typedef struct DIPROPHEADER *LPCDIPROPHEADER;

typedef struct DIDEVICEOBJECTDATA DIDEVICEOBJECTDATA, *PDIDEVICEOBJECTDATA;

typedef struct DIDEVICEOBJECTDATA *LPDIDEVICEOBJECTDATA;

typedef struct _DIDATAFORMAT _DIDATAFORMAT, *P_DIDATAFORMAT;

typedef struct _DIDATAFORMAT DIDATAFORMAT;

typedef DIDATAFORMAT *LPCDIDATAFORMAT;

typedef struct DIDEVICEOBJECTINSTANCEW *LPDIDEVICEOBJECTINSTANCEW;

typedef struct DIDEVICEINSTANCEW DIDEVICEINSTANCEW, *PDIDEVICEINSTANCEW;

typedef struct DIDEVICEINSTANCEW *LPDIDEVICEINSTANCEW;

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

typedef struct HINSTANCE__ *HINSTANCE;

typedef struct _DIOBJECTDATAFORMAT *LPDIOBJECTDATAFORMAT;

struct IDirectInputDeviceWVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDeviceW *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDeviceW *);
    ULONG (*Release)(struct IDirectInputDeviceW *);
    HRESULT (*GetCapabilities)(struct IDirectInputDeviceW *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDeviceW *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDeviceW *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDeviceW *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDeviceW *);
    HRESULT (*Unacquire)(struct IDirectInputDeviceW *);
    HRESULT (*GetDeviceState)(struct IDirectInputDeviceW *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDeviceW *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDeviceW *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDeviceW *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDeviceW *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDeviceW *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDeviceW *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDeviceW *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDeviceW *, HINSTANCE, DWORD, GUID *);
};

struct DIDEVICEINSTANCEW {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    WCHAR tszInstanceName[260];
    WCHAR tszProductName[260];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
};

struct DIDEVICEOBJECTINSTANCEW {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    WCHAR tszName[260];
    DWORD dwFFMaxForce;
    DWORD dwFFForceResolution;
    WORD wCollectionNumber;
    WORD wDesignatorIndex;
    WORD wUsagePage;
    WORD wUsage;
    DWORD dwDimension;
    WORD wExponent;
    WORD wReportId;
};

struct IDirectInputDeviceW {
    struct IDirectInputDeviceWVtbl *lpVtbl;
};

struct DIDEVCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDevType;
    DWORD dwAxes;
    DWORD dwButtons;
    DWORD dwPOVs;
    DWORD dwFFSamplePeriod;
    DWORD dwFFMinTimeResolution;
    DWORD dwFirmwareRevision;
    DWORD dwHardwareRevision;
    DWORD dwFFDriverVersion;
};

struct _DIDATAFORMAT {
    DWORD dwSize;
    DWORD dwObjSize;
    DWORD dwFlags;
    DWORD dwDataSize;
    DWORD dwNumObjs;
    LPDIOBJECTDATAFORMAT rgodf;
};

struct HINSTANCE__ {
    int unused;
};

struct DIDEVICEOBJECTDATA {
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
    UINT_PTR uAppData;
};

typedef struct DICONSTANTFORCE DICONSTANTFORCE, *PDICONSTANTFORCE;

struct DICONSTANTFORCE {
    LONG lMagnitude;
};

typedef struct DIEFFESCAPE DIEFFESCAPE, *PDIEFFESCAPE;

struct DIEFFESCAPE {
    DWORD dwSize;
    DWORD dwCommand;
    LPVOID lpvInBuffer;
    DWORD cbInBuffer;
    LPVOID lpvOutBuffer;
    DWORD cbOutBuffer;
};

typedef struct IDirectInputA IDirectInputA, *PIDirectInputA;

typedef struct IDirectInputA *LPDIRECTINPUT;

typedef struct IDirectInputAVtbl IDirectInputAVtbl, *PIDirectInputAVtbl;

typedef struct IDirectInputDeviceA IDirectInputDeviceA, *PIDirectInputDeviceA;

typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICEA;

typedef struct DIDEVICEINSTANCEA DIDEVICEINSTANCEA, *PDIDEVICEINSTANCEA;

typedef struct DIDEVICEINSTANCEA *LPCDIDEVICEINSTANCEA;

typedef BOOL (*LPDIENUMDEVICESCALLBACKA)(LPCDIDEVICEINSTANCEA, LPVOID);

typedef struct IDirectInputDeviceAVtbl IDirectInputDeviceAVtbl, *PIDirectInputDeviceAVtbl;

typedef struct DIDEVICEOBJECTINSTANCEA *LPCDIDEVICEOBJECTINSTANCEA;

typedef BOOL (*LPDIENUMDEVICEOBJECTSCALLBACKA)(LPCDIDEVICEOBJECTINSTANCEA, LPVOID);

typedef struct DIDEVICEINSTANCEA *LPDIDEVICEINSTANCEA;

struct IDirectInputDeviceAVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDeviceA *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDeviceA *);
    ULONG (*Release)(struct IDirectInputDeviceA *);
    HRESULT (*GetCapabilities)(struct IDirectInputDeviceA *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDeviceA *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDeviceA *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDeviceA *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDeviceA *);
    HRESULT (*Unacquire)(struct IDirectInputDeviceA *);
    HRESULT (*GetDeviceState)(struct IDirectInputDeviceA *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDeviceA *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDeviceA *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDeviceA *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDeviceA *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDeviceA *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDeviceA *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDeviceA *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDeviceA *, HINSTANCE, DWORD, GUID *);
};

struct IDirectInputA {
    struct IDirectInputAVtbl *lpVtbl;
};

struct IDirectInputDeviceA {
    struct IDirectInputDeviceAVtbl *lpVtbl;
};

struct IDirectInputAVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputA *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputA *);
    ULONG (*Release)(struct IDirectInputA *);
    HRESULT (*CreateDevice)(struct IDirectInputA *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInputA *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInputA *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInputA *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputA *, HINSTANCE, DWORD);
};

struct DIDEVICEINSTANCEA {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[260];
    CHAR tszProductName[260];
    GUID guidFFDriver;
    WORD wUsagePage;
    WORD wUsage;
};

typedef struct IDirectInputDevice7A IDirectInputDevice7A, *PIDirectInputDevice7A;

typedef struct IDirectInputDevice7AVtbl IDirectInputDevice7AVtbl, *PIDirectInputDevice7AVtbl;

typedef struct DIEFFECT DIEFFECT, *PDIEFFECT;

typedef struct DIEFFECT *LPCDIEFFECT;

typedef struct IDirectInputEffect IDirectInputEffect, *PIDirectInputEffect;

typedef struct IDirectInputEffect *LPDIRECTINPUTEFFECT;

typedef struct DIEFFECTINFOA DIEFFECTINFOA, *PDIEFFECTINFOA;

typedef struct DIEFFECTINFOA *LPCDIEFFECTINFOA;

typedef BOOL (*LPDIENUMEFFECTSCALLBACKA)(LPCDIEFFECTINFOA, LPVOID);

typedef struct DIEFFECTINFOA *LPDIEFFECTINFOA;

typedef BOOL (*LPDIENUMCREATEDEFFECTOBJECTSCALLBACK)(LPDIRECTINPUTEFFECT, LPVOID);

typedef struct DIEFFESCAPE *LPDIEFFESCAPE;

typedef struct DIDEVICEOBJECTDATA *LPCDIDEVICEOBJECTDATA;

typedef CHAR *LPCSTR;

typedef struct DIFILEEFFECT DIFILEEFFECT, *PDIFILEEFFECT;

typedef struct DIFILEEFFECT *LPCDIFILEEFFECT;

typedef BOOL (*LPDIENUMEFFECTSINFILECALLBACK)(LPCDIFILEEFFECT, LPVOID);

typedef struct DIFILEEFFECT *LPDIFILEEFFECT;

typedef struct IDirectInputEffectVtbl IDirectInputEffectVtbl, *PIDirectInputEffectVtbl;

typedef GUID *LPGUID;

typedef struct DIEFFECT *LPDIEFFECT;

struct IDirectInputEffect {
    struct IDirectInputEffectVtbl *lpVtbl;
};

struct DIEFFECTINFOA {
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    CHAR tszName[260];
};

struct DIEFFECT {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    LPDWORD rgdwAxes;
    LPLONG rglDirection;
    LPDIENVELOPE lpEnvelope;
    DWORD cbTypeSpecificParams;
    LPVOID lpvTypeSpecificParams;
    DWORD dwStartDelay;
};

struct IDirectInputEffectVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputEffect *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputEffect *);
    ULONG (*Release)(struct IDirectInputEffect *);
    HRESULT (*Initialize)(struct IDirectInputEffect *, HINSTANCE, DWORD, GUID *);
    HRESULT (*GetEffectGuid)(struct IDirectInputEffect *, LPGUID);
    HRESULT (*GetParameters)(struct IDirectInputEffect *, LPDIEFFECT, DWORD);
    HRESULT (*SetParameters)(struct IDirectInputEffect *, LPCDIEFFECT, DWORD);
    HRESULT (*Start)(struct IDirectInputEffect *, DWORD, DWORD);
    HRESULT (*Stop)(struct IDirectInputEffect *);
    HRESULT (*GetEffectStatus)(struct IDirectInputEffect *, LPDWORD);
    HRESULT (*Download)(struct IDirectInputEffect *);
    HRESULT (*Unload)(struct IDirectInputEffect *);
    HRESULT (*Escape)(struct IDirectInputEffect *, LPDIEFFESCAPE);
};

struct IDirectInputDevice7A {
    struct IDirectInputDevice7AVtbl *lpVtbl;
};

struct DIFILEEFFECT {
    DWORD dwSize;
    GUID GuidEffect;
    LPCDIEFFECT lpDiEffect;
    CHAR szFriendlyName[260];
};

struct IDirectInputDevice7AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice7A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice7A *);
    ULONG (*Release)(struct IDirectInputDevice7A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice7A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice7A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice7A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice7A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice7A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice7A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice7A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice7A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice7A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice7A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice7A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice7A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice7A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice7A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice7A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice7A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice7A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice7A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice7A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice7A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice7A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice7A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice7A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice7A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice7A *, LPCSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice7A *, LPCSTR, DWORD, LPDIFILEEFFECT, DWORD);
};

typedef struct DIDEVICEOBJECTDATA_DX3 DIDEVICEOBJECTDATA_DX3, *PDIDEVICEOBJECTDATA_DX3;

struct DIDEVICEOBJECTDATA_DX3 {
    DWORD dwOfs;
    DWORD dwData;
    DWORD dwTimeStamp;
    DWORD dwSequence;
};

typedef struct _DIDEVICEIMAGEINFOA _DIDEVICEIMAGEINFOA, *P_DIDEVICEIMAGEINFOA;

typedef struct tagRECT tagRECT, *PtagRECT;

typedef struct tagRECT RECT;

typedef struct tagPOINT tagPOINT, *PtagPOINT;

typedef struct tagPOINT POINT;

struct tagPOINT {
    LONG x;
    LONG y;
};

struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct _DIDEVICEIMAGEINFOA {
    CHAR tszImagePath[260];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
};

typedef struct DIEFFECTINFOW DIEFFECTINFOW, *PDIEFFECTINFOW;

typedef struct DIEFFECTINFOW *LPCDIEFFECTINFOW;

typedef BOOL (*LPDIENUMEFFECTSCALLBACKW)(LPCDIEFFECTINFOW, LPVOID);

struct DIEFFECTINFOW {
    DWORD dwSize;
    GUID guid;
    DWORD dwEffType;
    DWORD dwStaticParams;
    DWORD dwDynamicParams;
    WCHAR tszName[260];
};

typedef struct _DIDEVICEIMAGEINFOHEADERW _DIDEVICEIMAGEINFOHEADERW, *P_DIDEVICEIMAGEINFOHEADERW;

typedef struct _DIDEVICEIMAGEINFOW _DIDEVICEIMAGEINFOW, *P_DIDEVICEIMAGEINFOW;

typedef struct _DIDEVICEIMAGEINFOW *LPDIDEVICEIMAGEINFOW;

struct _DIDEVICEIMAGEINFOW {
    WCHAR tszImagePath[260];
    DWORD dwFlags;
    DWORD dwViewID;
    RECT rcOverlay;
    DWORD dwObjID;
    DWORD dwcValidPts;
    POINT rgptCalloutLine[5];
    RECT rcCalloutRect;
    DWORD dwTextAlign;
};

struct _DIDEVICEIMAGEINFOHEADERW {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    LPDIDEVICEIMAGEINFOW lprgImageInfoArray;
};

typedef struct IDirectInputDeviceA *LPDIRECTINPUTDEVICE;

typedef struct IDirectInputDevice8A IDirectInputDevice8A, *PIDirectInputDevice8A;

typedef struct IDirectInputDevice8AVtbl IDirectInputDevice8AVtbl, *PIDirectInputDevice8AVtbl;

typedef struct _DIACTIONFORMATA _DIACTIONFORMATA, *P_DIACTIONFORMATA;

typedef struct _DIACTIONFORMATA *LPDIACTIONFORMATA;

typedef struct _DIDEVICEIMAGEINFOHEADERA _DIDEVICEIMAGEINFOHEADERA, *P_DIDEVICEIMAGEINFOHEADERA;

typedef struct _DIDEVICEIMAGEINFOHEADERA *LPDIDEVICEIMAGEINFOHEADERA;

typedef struct _DIACTIONA _DIACTIONA, *P_DIACTIONA;

typedef struct _DIACTIONA *LPDIACTIONA;

typedef struct _FILETIME _FILETIME, *P_FILETIME;

typedef struct _FILETIME FILETIME;

typedef struct _DIDEVICEIMAGEINFOA *LPDIDEVICEIMAGEINFOA;

typedef union _union_2537 _union_2537, *P_union_2537;

struct IDirectInputDevice8A {
    struct IDirectInputDevice8AVtbl *lpVtbl;
};

struct _DIDEVICEIMAGEINFOHEADERA {
    DWORD dwSize;
    DWORD dwSizeImageInfo;
    DWORD dwcViews;
    DWORD dwcButtons;
    DWORD dwcAxes;
    DWORD dwcPOVs;
    DWORD dwBufferSize;
    DWORD dwBufferUsed;
    LPDIDEVICEIMAGEINFOA lprgImageInfoArray;
};

struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

struct IDirectInputDevice8AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice8A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice8A *);
    ULONG (*Release)(struct IDirectInputDevice8A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice8A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice8A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice8A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice8A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice8A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice8A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice8A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice8A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice8A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice8A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice8A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice8A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice8A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice8A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice8A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice8A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice8A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice8A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice8A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice8A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice8A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice8A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice8A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice8A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice8A *, LPCSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice8A *, LPCSTR, DWORD, LPDIFILEEFFECT, DWORD);
    HRESULT (*BuildActionMap)(struct IDirectInputDevice8A *, LPDIACTIONFORMATA, LPCSTR, DWORD);
    HRESULT (*SetActionMap)(struct IDirectInputDevice8A *, LPDIACTIONFORMATA, LPCSTR, DWORD);
    HRESULT (*GetImageInfo)(struct IDirectInputDevice8A *, LPDIDEVICEIMAGEINFOHEADERA);
};

union _union_2537 {
    LPCSTR lptszActionName;
    UINT uResIdString;
};

struct _DIACTIONA {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union _union_2537 field3_0xc;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
};

struct _DIACTIONFORMATA {
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    LPDIACTIONA rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    CHAR tszActionMap[260];
};

typedef struct IDirectInput2W IDirectInput2W, *PIDirectInput2W;

typedef struct IDirectInput2WVtbl IDirectInput2WVtbl, *PIDirectInput2WVtbl;

typedef struct IDirectInputDeviceW *LPDIRECTINPUTDEVICEW;

typedef struct DIDEVICEINSTANCEW *LPCDIDEVICEINSTANCEW;

typedef BOOL (*LPDIENUMDEVICESCALLBACKW)(LPCDIDEVICEINSTANCEW, LPVOID);

typedef WCHAR *LPCWSTR;

struct IDirectInput2WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput2W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput2W *);
    ULONG (*Release)(struct IDirectInput2W *);
    HRESULT (*CreateDevice)(struct IDirectInput2W *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput2W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput2W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput2W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput2W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput2W *, GUID *, LPCWSTR, LPGUID);
};

struct IDirectInput2W {
    struct IDirectInput2WVtbl *lpVtbl;
};

typedef struct DIPROPDWORD DIPROPDWORD, *PDIPROPDWORD;

struct DIPROPDWORD {
    struct DIPROPHEADER diph;
    DWORD dwData;
};

typedef struct DIPROPCPOINTS DIPROPCPOINTS, *PDIPROPCPOINTS;

typedef struct _CPOINT _CPOINT, *P_CPOINT;

typedef struct _CPOINT CPOINT;

struct _CPOINT {
    LONG lP;
    DWORD dwLog;
};

struct DIPROPCPOINTS {
    struct DIPROPHEADER diph;
    DWORD dwCPointsNum;
    CPOINT cp[8];
};

typedef struct IDirectInput2A IDirectInput2A, *PIDirectInput2A;

typedef struct IDirectInput2AVtbl IDirectInput2AVtbl, *PIDirectInput2AVtbl;

struct IDirectInput2AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput2A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput2A *);
    ULONG (*Release)(struct IDirectInput2A *);
    HRESULT (*CreateDevice)(struct IDirectInput2A *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput2A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput2A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput2A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput2A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput2A *, GUID *, LPCSTR, LPGUID);
};

struct IDirectInput2A {
    struct IDirectInput2AVtbl *lpVtbl;
};

typedef struct _DICOLORSET _DICOLORSET, *P_DICOLORSET;

typedef struct _DICOLORSET DICOLORSET;

typedef DICOLORSET *LPCDICOLORSET;

struct _DICOLORSET {
    DWORD dwSize;
    D3DCOLOR cTextFore;
    D3DCOLOR cTextHighlight;
    D3DCOLOR cCalloutLine;
    D3DCOLOR cCalloutHighlight;
    D3DCOLOR cBorder;
    D3DCOLOR cControlFill;
    D3DCOLOR cHighlightFill;
    D3DCOLOR cAreaFill;
};

typedef struct IDirectInputDevice7W IDirectInputDevice7W, *PIDirectInputDevice7W;

typedef struct IDirectInputDevice7WVtbl IDirectInputDevice7WVtbl, *PIDirectInputDevice7WVtbl;

typedef struct DIEFFECTINFOW *LPDIEFFECTINFOW;

struct IDirectInputDevice7WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice7W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice7W *);
    ULONG (*Release)(struct IDirectInputDevice7W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice7W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice7W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice7W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice7W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice7W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice7W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice7W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice7W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice7W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice7W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice7W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice7W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice7W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice7W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice7W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice7W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice7W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice7W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice7W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice7W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice7W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice7W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice7W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice7W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice7W *, LPCWSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice7W *, LPCWSTR, DWORD, LPDIFILEEFFECT, DWORD);
};

struct IDirectInputDevice7W {
    struct IDirectInputDevice7WVtbl *lpVtbl;
};

typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8A;

typedef struct _DIDEVICEIMAGEINFOHEADERA DIDEVICEIMAGEINFOHEADERA;

typedef DIDEVICEIMAGEINFOHEADERA DIDEVICEIMAGEINFOHEADER;

typedef struct DICONDITION DICONDITION, *PDICONDITION;

struct DICONDITION {
    LONG lOffset;
    LONG lPositiveCoefficient;
    LONG lNegativeCoefficient;
    DWORD dwPositiveSaturation;
    DWORD dwNegativeSaturation;
    LONG lDeadBand;
};

typedef struct _DIDEVICEIMAGEINFOHEADERW *LPDIDEVICEIMAGEINFOHEADERW;

typedef struct DIDEVICEINSTANCE_DX3A DIDEVICEINSTANCE_DX3A, *PDIDEVICEINSTANCE_DX3A;

struct DIDEVICEINSTANCE_DX3A {
    DWORD dwSize;
    GUID guidInstance;
    GUID guidProduct;
    DWORD dwDevType;
    CHAR tszInstanceName[260];
    CHAR tszProductName[260];
};

typedef struct IDirectInputDevice8W IDirectInputDevice8W, *PIDirectInputDevice8W;

typedef struct IDirectInputDevice8WVtbl IDirectInputDevice8WVtbl, *PIDirectInputDevice8WVtbl;

typedef struct _DIACTIONFORMATW _DIACTIONFORMATW, *P_DIACTIONFORMATW;

typedef struct _DIACTIONFORMATW *LPDIACTIONFORMATW;

typedef struct _DIACTIONW _DIACTIONW, *P_DIACTIONW;

typedef struct _DIACTIONW *LPDIACTIONW;

typedef union _union_2539 _union_2539, *P_union_2539;

struct _DIACTIONFORMATW {
    DWORD dwSize;
    DWORD dwActionSize;
    DWORD dwDataSize;
    DWORD dwNumActions;
    LPDIACTIONW rgoAction;
    GUID guidActionMap;
    DWORD dwGenre;
    DWORD dwBufferSize;
    LONG lAxisMin;
    LONG lAxisMax;
    HINSTANCE hInstString;
    FILETIME ftTimeStamp;
    DWORD dwCRC;
    WCHAR tszActionMap[260];
};

union _union_2539 {
    LPCWSTR lptszActionName;
    UINT uResIdString;
};

struct _DIACTIONW {
    UINT_PTR uAppData;
    DWORD dwSemantic;
    DWORD dwFlags;
    union _union_2539 field3_0xc;
    GUID guidInstance;
    DWORD dwObjID;
    DWORD dwHow;
};

struct IDirectInputDevice8WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice8W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice8W *);
    ULONG (*Release)(struct IDirectInputDevice8W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice8W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice8W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice8W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice8W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice8W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice8W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice8W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice8W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice8W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice8W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice8W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice8W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice8W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice8W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice8W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice8W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice8W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice8W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice8W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice8W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice8W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice8W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice8W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice8W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*EnumEffectsInFile)(struct IDirectInputDevice8W *, LPCWSTR, LPDIENUMEFFECTSINFILECALLBACK, LPVOID, DWORD);
    HRESULT (*WriteEffectToFile)(struct IDirectInputDevice8W *, LPCWSTR, DWORD, LPDIFILEEFFECT, DWORD);
    HRESULT (*BuildActionMap)(struct IDirectInputDevice8W *, LPDIACTIONFORMATW, LPCWSTR, DWORD);
    HRESULT (*SetActionMap)(struct IDirectInputDevice8W *, LPDIACTIONFORMATW, LPCWSTR, DWORD);
    HRESULT (*GetImageInfo)(struct IDirectInputDevice8W *, LPDIDEVICEIMAGEINFOHEADERW);
};

struct IDirectInputDevice8W {
    struct IDirectInputDevice8WVtbl *lpVtbl;
};

typedef struct DIPROPCAL DIPROPCAL, *PDIPROPCAL;

struct DIPROPCAL {
    struct DIPROPHEADER diph;
    LONG lMin;
    LONG lCenter;
    LONG lMax;
};

typedef struct _DIACTIONFORMATW DIACTIONFORMATW;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A DIDEVICEOBJECTINSTANCE_DX3A, *PDIDEVICEOBJECTINSTANCE_DX3A;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A *LPDIDEVICEOBJECTINSTANCE_DX3A;

struct DIDEVICEOBJECTINSTANCE_DX3A {
    DWORD dwSize;
    GUID guidType;
    DWORD dwOfs;
    DWORD dwType;
    DWORD dwFlags;
    CHAR tszName[260];
};

typedef struct IDirectInputDevice2A IDirectInputDevice2A, *PIDirectInputDevice2A;

typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2;

typedef struct IDirectInputDevice2AVtbl IDirectInputDevice2AVtbl, *PIDirectInputDevice2AVtbl;

struct IDirectInputDevice2A {
    struct IDirectInputDevice2AVtbl *lpVtbl;
};

struct IDirectInputDevice2AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice2A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice2A *);
    ULONG (*Release)(struct IDirectInputDevice2A *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice2A *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice2A *, LPDIENUMDEVICEOBJECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice2A *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice2A *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice2A *);
    HRESULT (*Unacquire)(struct IDirectInputDevice2A *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice2A *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice2A *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice2A *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice2A *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice2A *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice2A *, LPDIDEVICEOBJECTINSTANCEA, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice2A *, LPDIDEVICEINSTANCEA);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice2A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice2A *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice2A *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice2A *, LPDIENUMEFFECTSCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice2A *, LPDIEFFECTINFOA, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice2A *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice2A *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice2A *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice2A *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice2A *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice2A *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
};

typedef struct DIPROPGUIDANDPATH DIPROPGUIDANDPATH, *PDIPROPGUIDANDPATH;

struct DIPROPGUIDANDPATH {
    struct DIPROPHEADER diph;
    GUID guidClass;
    WCHAR wszPath[260];
};

typedef struct IDirectInput8AVtbl IDirectInput8AVtbl, *PIDirectInput8AVtbl;

typedef struct IDirectInput8A IDirectInput8A, *PIDirectInput8A;

typedef BOOL (*LPDIENUMDEVICESBYSEMANTICSCBA)(LPCDIDEVICEINSTANCEA, LPDIRECTINPUTDEVICE8A, DWORD, DWORD, LPVOID);

typedef BOOL (*LPDICONFIGUREDEVICESCALLBACK)(struct IUnknown *, LPVOID);

typedef struct _DICONFIGUREDEVICESPARAMSA _DICONFIGUREDEVICESPARAMSA, *P_DICONFIGUREDEVICESPARAMSA;

typedef struct _DICONFIGUREDEVICESPARAMSA *LPDICONFIGUREDEVICESPARAMSA;

struct _DICONFIGUREDEVICESPARAMSA {
    DWORD dwSize;
    DWORD dwcUsers;
    LPSTR lptszUserNames;
    DWORD dwcFormats;
    LPDIACTIONFORMATA lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    struct IUnknown *lpUnkDDSTarget;
};

struct IDirectInput8AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput8A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput8A *);
    ULONG (*Release)(struct IDirectInput8A *);
    HRESULT (*CreateDevice)(struct IDirectInput8A *, GUID *, LPDIRECTINPUTDEVICE8A *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput8A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput8A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput8A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput8A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput8A *, GUID *, LPCSTR, LPGUID);
    HRESULT (*EnumDevicesBySemantics)(struct IDirectInput8A *, LPCSTR, LPDIACTIONFORMATA, LPDIENUMDEVICESBYSEMANTICSCBA, LPVOID, DWORD);
    HRESULT (*ConfigureDevices)(struct IDirectInput8A *, LPDICONFIGUREDEVICESCALLBACK, LPDICONFIGUREDEVICESPARAMSA, DWORD, LPVOID);
};

struct IDirectInput8A {
    struct IDirectInput8AVtbl *lpVtbl;
};

typedef struct _DICONFIGUREDEVICESPARAMSW _DICONFIGUREDEVICESPARAMSW, *P_DICONFIGUREDEVICESPARAMSW;

typedef struct _DICONFIGUREDEVICESPARAMSW *LPDICONFIGUREDEVICESPARAMSW;

typedef WCHAR *LPWSTR;

struct _DICONFIGUREDEVICESPARAMSW {
    DWORD dwSize;
    DWORD dwcUsers;
    LPWSTR lptszUserNames;
    DWORD dwcFormats;
    LPDIACTIONFORMATW lprgFormats;
    HWND hwnd;
    DICOLORSET dics;
    struct IUnknown *lpUnkDDSTarget;
};

typedef struct _DIACTIONFORMATA DIACTIONFORMATA;

typedef LPDIDEVICEIMAGEINFOA LPDIDEVICEIMAGEINFO;

typedef struct _DICONFIGUREDEVICESPARAMSA DICONFIGUREDEVICESPARAMSA;

typedef DICONFIGUREDEVICESPARAMSA DICONFIGUREDEVICESPARAMS;

typedef struct _DIACTIONA DIACTIONA;

typedef LPDICONFIGUREDEVICESPARAMSA LPDICONFIGUREDEVICESPARAMS;

typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7;

typedef struct IDirectInputDevice8A *LPDIRECTINPUTDEVICE8;

typedef struct DIJOYSTATE DIJOYSTATE, *PDIJOYSTATE;

typedef struct DIJOYSTATE *LPDIJOYSTATE;

struct DIJOYSTATE {
    LONG lX;
    LONG lY;
    LONG lZ;
    LONG lRx;
    LONG lRy;
    LONG lRz;
    LONG rglSlider[2];
    DWORD rgdwPOV[4];
    BYTE rgbButtons[32];
};

typedef struct DIDEVICEOBJECTINSTANCE_DX3W *LPDIDEVICEOBJECTINSTANCE_DX3W;

typedef struct _DIDEVICEIMAGEINFOW DIDEVICEIMAGEINFOW;

typedef struct DICONDITION *LPDICONDITION;

typedef struct _DIDEVICEIMAGEINFOHEADERW DIDEVICEIMAGEINFOHEADERW;

typedef DIDEVICEIMAGEINFOHEADERW *LPCDIDEVICEIMAGEINFOHEADERW;

typedef DIDEVICEIMAGEINFOHEADERA *LPCDIDEVICEIMAGEINFOHEADERA;

typedef struct IDirectInputWVtbl IDirectInputWVtbl, *PIDirectInputWVtbl;

typedef struct IDirectInputW IDirectInputW, *PIDirectInputW;

struct IDirectInputW {
    struct IDirectInputWVtbl *lpVtbl;
};

struct IDirectInputWVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputW *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputW *);
    ULONG (*Release)(struct IDirectInputW *);
    HRESULT (*CreateDevice)(struct IDirectInputW *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInputW *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInputW *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInputW *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputW *, HINSTANCE, DWORD);
};

typedef struct DIPROPCAL *LPDIPROPCAL;

typedef struct _DIDEVICEIMAGEINFOA DIDEVICEIMAGEINFOA;

typedef DIACTIONFORMATA DIACTIONFORMAT;

typedef struct _DIOBJECTDATAFORMAT DIOBJECTDATAFORMAT;

typedef DIOBJECTDATAFORMAT *LPCDIOBJECTDATAFORMAT;

typedef struct DIPROPSTRING DIPROPSTRING, *PDIPROPSTRING;

typedef struct DIPROPSTRING *LPCDIPROPSTRING;

struct DIPROPSTRING {
    struct DIPROPHEADER diph;
    WCHAR wsz[260];
};

typedef struct DIRAMPFORCE DIRAMPFORCE, *PDIRAMPFORCE;

typedef struct DIRAMPFORCE *LPDIRAMPFORCE;

struct DIRAMPFORCE {
    LONG lStart;
    LONG lEnd;
};

typedef DICONFIGUREDEVICESPARAMS *LPCDICONFIGUREDEVICESPARAMS;

typedef struct DICUSTOMFORCE DICUSTOMFORCE, *PDICUSTOMFORCE;

typedef struct DICUSTOMFORCE *LPDICUSTOMFORCE;

struct DICUSTOMFORCE {
    DWORD cChannels;
    DWORD dwSamplePeriod;
    DWORD cSamples;
    LPLONG rglForceData;
};

typedef struct DIPROPPOINTER *LPDIPROPPOINTER;

typedef struct DIDEVICEOBJECTDATA_DX3 *LPCDIDEVICEOBJECTDATA_DX;

typedef struct IDirectInput8WVtbl IDirectInput8WVtbl, *PIDirectInput8WVtbl;

typedef struct IDirectInput8W IDirectInput8W, *PIDirectInput8W;

typedef struct IDirectInputDevice8W *LPDIRECTINPUTDEVICE8W;

typedef BOOL (*LPDIENUMDEVICESBYSEMANTICSCBW)(LPCDIDEVICEINSTANCEW, LPDIRECTINPUTDEVICE8W, DWORD, DWORD, LPVOID);

struct IDirectInput8W {
    struct IDirectInput8WVtbl *lpVtbl;
};

struct IDirectInput8WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput8W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput8W *);
    ULONG (*Release)(struct IDirectInput8W *);
    HRESULT (*CreateDevice)(struct IDirectInput8W *, GUID *, LPDIRECTINPUTDEVICE8W *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput8W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput8W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput8W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput8W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput8W *, GUID *, LPCWSTR, LPGUID);
    HRESULT (*EnumDevicesBySemantics)(struct IDirectInput8W *, LPCWSTR, LPDIACTIONFORMATW, LPDIENUMDEVICESBYSEMANTICSCBW, LPVOID, DWORD);
    HRESULT (*ConfigureDevices)(struct IDirectInput8W *, LPDICONFIGUREDEVICESCALLBACK, LPDICONFIGUREDEVICESPARAMSW, DWORD, LPVOID);
};

typedef LPDIDEVICEINSTANCEA LPDIDEVICEINSTANCE;

typedef struct IDirectInputDevice2WVtbl IDirectInputDevice2WVtbl, *PIDirectInputDevice2WVtbl;

typedef struct IDirectInputDevice2W IDirectInputDevice2W, *PIDirectInputDevice2W;

struct IDirectInputDevice2W {
    struct IDirectInputDevice2WVtbl *lpVtbl;
};

struct IDirectInputDevice2WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInputDevice2W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInputDevice2W *);
    ULONG (*Release)(struct IDirectInputDevice2W *);
    HRESULT (*GetCapabilities)(struct IDirectInputDevice2W *, LPDIDEVCAPS);
    HRESULT (*EnumObjects)(struct IDirectInputDevice2W *, LPDIENUMDEVICEOBJECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetProperty)(struct IDirectInputDevice2W *, GUID *, LPDIPROPHEADER);
    HRESULT (*SetProperty)(struct IDirectInputDevice2W *, GUID *, LPCDIPROPHEADER);
    HRESULT (*Acquire)(struct IDirectInputDevice2W *);
    HRESULT (*Unacquire)(struct IDirectInputDevice2W *);
    HRESULT (*GetDeviceState)(struct IDirectInputDevice2W *, DWORD, LPVOID);
    HRESULT (*GetDeviceData)(struct IDirectInputDevice2W *, DWORD, LPDIDEVICEOBJECTDATA, LPDWORD, DWORD);
    HRESULT (*SetDataFormat)(struct IDirectInputDevice2W *, LPCDIDATAFORMAT);
    HRESULT (*SetEventNotification)(struct IDirectInputDevice2W *, HANDLE);
    HRESULT (*SetCooperativeLevel)(struct IDirectInputDevice2W *, HWND, DWORD);
    HRESULT (*GetObjectInfo)(struct IDirectInputDevice2W *, LPDIDEVICEOBJECTINSTANCEW, DWORD, DWORD);
    HRESULT (*GetDeviceInfo)(struct IDirectInputDevice2W *, LPDIDEVICEINSTANCEW);
    HRESULT (*RunControlPanel)(struct IDirectInputDevice2W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInputDevice2W *, HINSTANCE, DWORD, GUID *);
    HRESULT (*CreateEffect)(struct IDirectInputDevice2W *, GUID *, LPCDIEFFECT, LPDIRECTINPUTEFFECT *, LPUNKNOWN);
    HRESULT (*EnumEffects)(struct IDirectInputDevice2W *, LPDIENUMEFFECTSCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetEffectInfo)(struct IDirectInputDevice2W *, LPDIEFFECTINFOW, GUID *);
    HRESULT (*GetForceFeedbackState)(struct IDirectInputDevice2W *, LPDWORD);
    HRESULT (*SendForceFeedbackCommand)(struct IDirectInputDevice2W *, DWORD);
    HRESULT (*EnumCreatedEffectObjects)(struct IDirectInputDevice2W *, LPDIENUMCREATEDEFFECTOBJECTSCALLBACK, LPVOID, DWORD);
    HRESULT (*Escape)(struct IDirectInputDevice2W *, LPDIEFFESCAPE);
    HRESULT (*Poll)(struct IDirectInputDevice2W *);
    HRESULT (*SendDeviceData)(struct IDirectInputDevice2W *, DWORD, LPCDIDEVICEOBJECTDATA, LPDWORD, DWORD);
};

typedef struct DIPERIODIC DIPERIODIC, *PDIPERIODIC;

typedef struct DIPERIODIC *LPDIPERIODIC;

struct DIPERIODIC {
    DWORD dwMagnitude;
    LONG lOffset;
    DWORD dwPhase;
    DWORD dwPeriod;
};

typedef struct IDirectInputDevice7A *LPDIRECTINPUTDEVICE7A;

typedef struct IDirectInputDevice7W *LPDIRECTINPUTDEVICE7W;

typedef DIACTIONFORMAT *LPCDIACTIONFORMAT;

typedef struct DIEFFECT_DX5 DIEFFECT_DX5, *PDIEFFECT_DX5;

struct DIEFFECT_DX5 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDuration;
    DWORD dwSamplePeriod;
    DWORD dwGain;
    DWORD dwTriggerButton;
    DWORD dwTriggerRepeatInterval;
    DWORD cAxes;
    LPDWORD rgdwAxes;
    LPLONG rglDirection;
    LPDIENVELOPE lpEnvelope;
    DWORD cbTypeSpecificParams;
    LPVOID lpvTypeSpecificParams;
};

typedef struct DIDEVICEINSTANCEA DIDEVICEINSTANCE;

typedef struct DIJOYSTATE2 DIJOYSTATE2, *PDIJOYSTATE2;

struct DIJOYSTATE2 {
    LONG lX;
    LONG lY;
    LONG lZ;
    LONG lRx;
    LONG lRy;
    LONG lRz;
    LONG rglSlider[2];
    DWORD rgdwPOV[4];
    BYTE rgbButtons[128];
    LONG lVX;
    LONG lVY;
    LONG lVZ;
    LONG lVRx;
    LONG lVRy;
    LONG lVRz;
    LONG rglVSlider[2];
    LONG lAX;
    LONG lAY;
    LONG lAZ;
    LONG lARx;
    LONG lARy;
    LONG lARz;
    LONG rglASlider[2];
    LONG lFX;
    LONG lFY;
    LONG lFZ;
    LONG lFRx;
    LONG lFRy;
    LONG lFRz;
    LONG rglFSlider[2];
};

typedef struct DIDEVICEINSTANCE_DX3W *LPDIDEVICEINSTANCE_DX3W;

typedef struct _CPOINT *PCPOINT;

typedef struct DIDEVICEOBJECTINSTANCEA DIDEVICEOBJECTINSTANCE;

typedef DIDEVICEOBJECTINSTANCE *LPCDIDEVICEOBJECTINSTANCE;

typedef struct _DIMOUSESTATE _DIMOUSESTATE, *P_DIMOUSESTATE;

typedef struct _DIMOUSESTATE *LPDIMOUSESTATE;

struct _DIMOUSESTATE {
    LONG lX;
    LONG lY;
    LONG lZ;
    BYTE rgbButtons[4];
};

typedef struct DIEFFECTINFOA DIEFFECTINFO;

typedef struct DIRAMPFORCE *LPCDIRAMPFORCE;

typedef struct DIDEVICEOBJECTDATA_DX3 *LPDIDEVICEOBJECTDATA_DX3;

typedef struct _DIDATAFORMAT *LPDIDATAFORMAT;

typedef struct DIPROPCAL *LPCDIPROPCAL;

typedef DIDEVICEIMAGEINFOA *LPCDIDEVICEIMAGEINFOA;

typedef struct DIPROPRANGE DIPROPRANGE, *PDIPROPRANGE;

struct DIPROPRANGE {
    struct DIPROPHEADER diph;
    LONG lMin;
    LONG lMax;
};

typedef LPDIEFFECTINFOA LPDIEFFECTINFO;

typedef struct DIDEVICEINSTANCE_DX3A *LPDIDEVICEINSTANCE_DX3A;

typedef struct DICONSTANTFORCE *LPCDICONSTANTFORCE;

typedef DIDEVICEIMAGEINFOW *LPCDIDEVICEIMAGEINFOW;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A *LPCDIDEVICEOBJECTINSTANCE_DX3A;

typedef struct _DIACTIONW DIACTIONW;

typedef DIACTIONW *LPCDIACTIONW;

typedef struct DIENVELOPE *LPCDIENVELOPE;

typedef struct IDirectInput7WVtbl IDirectInput7WVtbl, *PIDirectInput7WVtbl;

typedef struct IDirectInput7W IDirectInput7W, *PIDirectInput7W;

struct IDirectInput7WVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput7W *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput7W *);
    ULONG (*Release)(struct IDirectInput7W *);
    HRESULT (*CreateDevice)(struct IDirectInput7W *, GUID *, LPDIRECTINPUTDEVICEW *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput7W *, DWORD, LPDIENUMDEVICESCALLBACKW, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput7W *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput7W *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput7W *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput7W *, GUID *, LPCWSTR, LPGUID);
    HRESULT (*CreateDeviceEx)(struct IDirectInput7W *, GUID *, IID *, LPVOID *, LPUNKNOWN);
};

struct IDirectInput7W {
    struct IDirectInput7WVtbl *lpVtbl;
};

typedef struct IDirectInput7W *LPDIRECTINPUT7W;

typedef struct IDirectInput7A IDirectInput7A, *PIDirectInput7A;

typedef struct IDirectInput7A *LPDIRECTINPUT7A;

typedef struct IDirectInput7AVtbl IDirectInput7AVtbl, *PIDirectInput7AVtbl;

struct IDirectInput7A {
    struct IDirectInput7AVtbl *lpVtbl;
};

struct IDirectInput7AVtbl {
    HRESULT (*QueryInterface)(struct IDirectInput7A *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectInput7A *);
    ULONG (*Release)(struct IDirectInput7A *);
    HRESULT (*CreateDevice)(struct IDirectInput7A *, GUID *, LPDIRECTINPUTDEVICEA *, LPUNKNOWN);
    HRESULT (*EnumDevices)(struct IDirectInput7A *, DWORD, LPDIENUMDEVICESCALLBACKA, LPVOID, DWORD);
    HRESULT (*GetDeviceStatus)(struct IDirectInput7A *, GUID *);
    HRESULT (*RunControlPanel)(struct IDirectInput7A *, HWND, DWORD);
    HRESULT (*Initialize)(struct IDirectInput7A *, HINSTANCE, DWORD);
    HRESULT (*FindDevice)(struct IDirectInput7A *, GUID *, LPCSTR, LPGUID);
    HRESULT (*CreateDeviceEx)(struct IDirectInput7A *, GUID *, IID *, LPVOID *, LPUNKNOWN);
};

typedef struct DIPROPSTRING *LPDIPROPSTRING;

typedef DIACTIONA *LPCDIACTIONA;

typedef struct _DICONFIGUREDEVICESPARAMSW DICONFIGUREDEVICESPARAMSW;

typedef struct IDirectInput8W *LPDIRECTINPUT8W;

typedef struct IDirectInput8A *LPDIRECTINPUT8A;

typedef DIACTIONFORMATW *LPCDIACTIONFORMATW;

typedef struct DIPROPGUIDANDPATH *LPDIPROPGUIDANDPATH;

typedef DIDEVICEIMAGEINFOHEADER *LPCDIDEVICEIMAGEINFOHEADER;

typedef struct DIDEVICEOBJECTINSTANCE_DX3A DIDEVICEOBJECTINSTANCE_DX3;

typedef DIACTIONFORMATA *LPCDIACTIONFORMATA;

typedef struct _DICOLORSET *LPDICOLORSET;

typedef DIDEVICEIMAGEINFOA DIDEVICEIMAGEINFO;

typedef LPDIEFFECT LPDIEFFECT_DX6;

typedef struct DIEFFECT_DX5 *LPDIEFFECT_DX5;

typedef LPDIDEVICEINSTANCE_DX3A LPDIDEVICEINSTANCE_DX3;

typedef struct DIDEVICEINSTANCE_DX3A DIDEVICEINSTANCE_DX3;

typedef LPDIDEVICEOBJECTINSTANCEA LPDIDEVICEOBJECTINSTANCE;

typedef struct _DIMOUSESTATE2 *LPDIMOUSESTATE2;

typedef struct DIPROPCPOINTS *LPCDIPROPCPOINTS;

typedef DIDEVICEINSTANCE *LPCDIDEVICEINSTANCE;

typedef DIEFFECTINFO *LPCDIEFFECTINFO;

typedef DIACTIONA DIACTION;

typedef struct DIPROPDWORD *LPCDIPROPDWORD;

typedef struct DIPROPGUIDANDPATH *LPCDIPROPGUIDANDPATH;

typedef DICONFIGUREDEVICESPARAMSW *LPCDICONFIGUREDEVICESPARAMSW;

typedef struct IDirectInputDevice2W *LPDIRECTINPUTDEVICE2W;

typedef struct IDirectInputDevice2A *LPDIRECTINPUTDEVICE2A;

typedef DICONFIGUREDEVICESPARAMSA *LPCDICONFIGUREDEVICESPARAMSA;

typedef struct DIEFFECT DIEFFECT_DX6;

typedef struct DIEFFECT_DX5 *LPCDIEFFECT_DX5;

typedef LPDIDEVICEIMAGEINFOHEADERA LPDIDEVICEIMAGEINFOHEADER;

typedef struct DIDEVICEINSTANCE_DX3A *LPCDIDEVICEINSTANCE_DX3A;

typedef DIDEVICEIMAGEINFO *LPCDIDEVICEIMAGEINFO;

typedef LPDIACTIONA LPDIACTION;

typedef DIDEVICEINSTANCE_DX3 *LPCDIDEVICEINSTANCE_DX3;

typedef struct IDirectInputA *LPDIRECTINPUTA;

typedef struct DIDEVICEINSTANCE_DX3W *LPCDIDEVICEINSTANCE_DX3W;

typedef struct _DIMOUSESTATE DIMOUSESTATE;

typedef struct IDirectInputW *LPDIRECTINPUTW;

typedef struct DIPERIODIC *LPCDIPERIODIC;

typedef struct DICUSTOMFORCE *LPCDICUSTOMFORCE;

typedef struct DIJOYSTATE2 *LPDIJOYSTATE2;

typedef LPDIACTIONFORMATA LPDIACTIONFORMAT;

typedef struct DICONSTANTFORCE *LPDICONSTANTFORCE;

typedef struct IDirectInput2A *LPDIRECTINPUT2A;

typedef struct DIPROPRANGE *LPDIPROPRANGE;

typedef struct IDirectInput2W *LPDIRECTINPUT2W;

typedef DIDEVICEOBJECTINSTANCE_DX3 *LPCDIDEVICEOBJECTINSTANCE_DX3;

typedef struct DIPROPRANGE *LPCDIPROPRANGE;

typedef DIACTION *LPCDIACTION;

typedef LPDIDEVICEOBJECTINSTANCE_DX3A LPDIDEVICEOBJECTINSTANCE_DX3;

typedef struct DICONDITION *LPCDICONDITION;

typedef struct IDirectInput2A *LPDIRECTINPUT2;

typedef struct DIPROPCPOINTS *LPDIPROPCPOINTS;

typedef struct IDirectInput8A *LPDIRECTINPUT8;

typedef struct IDirectInput7A *LPDIRECTINPUT7;

typedef struct DIPROPDWORD *LPDIPROPDWORD;

#define DIBUTTON_FOOTBALLP_DEVICE 335561982

#define DIBUTTON_SOCCERO_DEVICE 503334142

#define DIKEYBOARD_AX 2164262038

#define DIAXIS_FLYINGH_TORQUE 100817412

#define DIKEYBOARD_LBRACKET 2164261914

#define DIKEYBOARD_AT 2164262033

#define DIBUTTON_FOOTBALLP_HELP 335545347

#define DIAXIS_2DCONTROL_LATERAL 587235841

#define DIBUTTON_TPS_STEPLEFT 167789575

#define DIEP_DIRECTION 64

#define DIBUTTON_BBALLD_JUMP 318768129

#define DIAXIS_FISHING_MOVE 234947074

#define DIHATSWITCH_CADF_HATSWITCH 620774913

#define DI8DEVTYPE1STPERSON_LIMITED 1

#define DIBUTTON_BBALLO_POST 302007308

#define DIBUTTON_FLYINGC_PAUSE 67126524

#define DIKEYBOARD_MULTIPLY 2164261943

#define DIDC_DEADBAND 16384

#define DIK_MINUS 12

#define DIAXIS_FOOTBALLO_MOVE 369164802

#define DIHATSWITCH_3DCONTROL_HATSWITCH 603997697

#define DIBUTTON_SOCCERD_PAUSE 520111356

#define DIKEYBOARD_F8 2164261954

#define DIKEYBOARD_F7 2164261953

#define DIKEYBOARD_F9 2164261955

#define DIKEYBOARD_F4 2164261950

#define DIKEYBOARD_F3 2164261949

#define DIBUTTON_FLYINGH_PAUSE 100680956

#define DIKEYBOARD_F6 2164261952

#define DIKEYBOARD_F5 2164261951

#define DIKEYBOARD_F2 2164261948

#define DIBUTTON_ARCADEP_FIRE 570426370

#define DIKEYBOARD_F1 2164261947

#define DIBUTTON_DRIVINGT_DASHBOARD 50355205

#define DIERR_HASEFFECTS 2147746308

#define DIBUTTON_DRIVINGR_MENU 16778493

#define DIDAL_RIGHTALIGNED 2

#define DIBUTTON_BIKINGM_DEVICE 469779710

#define DIBUTTON_MECHA_BACK_LINK 687949032

#define DIKEYBOARD_DECIMAL 2164261971

#define JOY_PASSDRIVERDATA 268435456

#define DIVIRTUAL_REMOTE_CONTROL 654311424

#define DIVOICE_VOICECOMMAND 2197816336

#define DIEFT_CONDITION 4

#define DI8DEVTYPEGAMEPAD_LIMITED 1

#define DIBUTTON_SPACESIM_RIGHT_LINK 117490924

#define DISDD_CONTINUE 1

#define DIBUTTON_HUNTING_WEAPON 218104835

#define DIBUTTON_SOCCERD_FORWARD_LINK 520176864

#define DIEDBSFL_ATTACHEDONLY 0

#define DIBUTTON_MECHA_FORWARD_LINK 687949024

#define DI8DEVTYPE1STPERSON_SHOOTER 4

#define DIAXIS_HOCKEYD_MOVE 436273666

#define DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK 184698092

#define DIBUTTON_FLYINGM_TARGET 83889155

#define DIK_INSERT 210

#define JOY_HWS_AUTOLOAD 268435456

#define DIBUTTON_BASEBALLP_LOOK 268452871

#define DIBUTTON_BASEBALLP_BASE 268436483

#define DIBUTTON_BASEBALLF_DIVE 285213702

#define DIBUTTON_ARCADEP_MENU 570426621

#define DIBUTTON_HOCKEYD_BLOCK 436208644

#define DIGDD_PEEK 1

#define DIERR_NOINTERFACE 2147500034

#define DIBUTTON_HOCKEYD_ZOOM 436225030

#define DI8DEVTYPEKEYBOARD_JAPANAX 11

#define DIKEYBOARD_WEBFORWARD 2164262121

#define DIEFT_STARTDELAY 32768

#define DIBUTTON_REMOTE_TV 654334984

#define DIPROP_GUIDANDPATH 12

#define DIK_CAPSLOCK 58

#define DI8DEVTYPE_DEVICE 17

#define DIKEYBOARD_RSHIFT 2164261942

#define DIBUTTON_FLYINGM_FLAPSUP 83907591

#define DIAXIS_FLYINGH_PITCH 100731394

#define DIKEYBOARD_POWER 2164262110

#define DIBUTTON_SPACESIM_MENU 117441789

#define DIBUTTON_FOOTBALLD_SELECT 385876994

#define DIBUTTON_FIGHTINGH_PAUSE 134235388

#define DIBUTTON_FPS_GLANCE_UP_LINK 151110880

#define DIBUTTON_RACQUET_FORWARD_LINK 536954080

#define DIBUTTON_BASEBALLP_DEVICE 268453118

#define DIBUTTON_BBALLD_TIMEOUT 318784520

#define DIBUTTON_HUNTING_FIRESECONDARY 218121227

#define DIBUTTON_ARCADEP_PAUSE 570443004

#define DIERR_OTHERAPPHASPRIO 2147942405

#define DIKEYBOARD_NUMPADENTER 2164262044

#define DIKEYBOARD_WEBFAVORITES 2164262118

#define DIBUTTON_FLYINGM_PAUSE 83903740

#define DIAXIS_FLYINGM_PITCH 83954178

#define DIAXIS_FLYINGM_BANK 83921409

#define DIKEYBOARD_TAB 2164261903

#define DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK 67618028

#define DISCL_EXCLUSIVE 1

#define DIBUTTON_SOCCERO_BACK_LINK 503399656

#define DIEP_ALLPARAMS_DX5 511

#define DIBUTTON_BASEBALLP_THROW 268436484

#define DIBUTTON_SPACESIM_DEVICE 117458174

#define DIBUTTON_FISHING_ROTATE_LEFT_LINK 235029732

#define DIVOICE_CHANNEL2 2197816322

#define DIVOICE_CHANNEL1 2197816321

#define DIVOICE_CHANNEL4 2197816324

#define DIVOICE_CHANNEL3 2197816323

#define DIVOICE_CHANNEL6 2197816326

#define DIVOICE_CHANNEL5 2197816325

#define DIVOICE_CHANNEL8 2197816328

#define DIVOICE_CHANNEL7 2197816327

#define DIBUTTON_SOCCERO_SUBSTITUTE 503333895

#define DI_EFFECTRESTARTED 4

#define DIBUTTON_STRATEGYR_MENU 184550653

#define DIBUTTON_3DCONTROL_DEVICE 603997438

#define DIBUTTON_SKIING_DEVICE 486556926

#define DIEDBSFL_FORCEFEEDBACK 256

#define DI8DEVTYPEMOUSE_TRACKBALL 5

#define DIBUTTON_BASEBALLF_PAUSE 285230332

#define DIBUTTON_SOCCERO_LEFT_LINK 503366884

#define DIBUTTON_BASEBALLF_BURST 285213700

#define DIBUTTON_SPACESIM_WEAPONS 117441538

#define DIAXIS_2DCONTROL_ROTATEZ 587350532

#define DIBUTTON_2DCONTROL_SELECT 587203585

#define DIBUTTON_FOOTBALLD_SUBSTITUTE 385893389

#define DIBUTTON_FOOTBALLD_ZOOM 385893388

#define DIBUTTON_3DCONTROL_SELECT 603980801

#define DIK_NEXTTRACK 153

#define DIBUTTON_HUNTING_DEVICE 218121470

#define DIERR_NOTFOUND 2147942402

#define DIBUTTON_CADF_DISPLAY 620774405

#define DIAXIS_RACQUET_LATERAL 536904193

#define DIAH_ERROR 2147483648

#define DIBUTTON_FLYINGM_GLANCE_LEFT_LINK 84395236

#define DIDC_POSNEGSATURATION 8192

#define DIBUTTON_BBALLD_BACK_LINK 318850280

#define DIBUTTON_FOOTBALLO_PAUSE 369116412

#define DIVIRTUAL_SPORTS_FOOTBALL_QBCK 352321536

#define DIPROPAUTOCENTER_OFF 0

#define DIBUTTON_DRIVINGT_WEAPONS 50334722

#define DIPROP_VIDPID 24

#define DIBUTTON_FLYINGM_GLANCE_DOWN_LINK 84395240

#define DIK_APOSTROPHE 40

#define DI8DEVTYPE_FLIGHT 23

#define DI8DEVTYPEDRIVING_LIMITED 1

#define DIHATSWITCH_ARCADES_VIEW 553666049

#define DIPROP_BUFFERSIZE 1

#define DIAXIS_SOCCERD_MOVE 520159746

#define DIBUTTON_FOOTBALLQ_FORWARD_LINK 352404704

#define DIBUTTON_FIGHTINGH_BLOCK 134218755

#define DIAXIS_SOCCERO_MOVE 503382530

#define DIKEYBOARD_WEBSEARCH 2164262117

#define DIBUTTON_SKIING_RIGHT_LINK 486589676

#define DI8DEVTYPEMOUSE_TOUCHPAD 4

#define DIBUTTON_FPS_CROUCH 150995973

#define DIK_DIVIDE 181

#define DIKEYBOARD_NUMLOCK 2164261957

#define DIBUTTON_DRIVINGR_BRAKE 16796676

#define DIBUTTON_TPS_ACTION 167773186

#define DIBUTTON_MECHA_DEVICE 687883518

#define DIEP_TYPESPECIFICPARAMS 256

#define DIVIRTUAL_SPORTS_HUNTING 218103808

#define DIBUTTON_HOCKEYO_PASS 419431426

#define DIAXIS_FOOTBALLO_LATERAL 369132033

#define DIAXIS_SPACESIM_CLIMB 117555716

#define DIHATSWITCH_BBALLO_GLANCE 302007809

#define DI8DEVTYPEJOYSTICK_LIMITED 1

#define DIBUTTON_HOCKEYG_STEAL 452985859

#define DIK_STOP 149

#define DIBUTTON_REMOTE_CABLE 654334985

#define DI8DEVTYPESUPPLEMENTAL_HANDTRACKER 5

#define DIAXIS_DRIVINGT_STEER 50366977

#define DIDOI_POLLED 32768

#define DIDFT_POV 16

#define DIAXIS_DRIVINGR_ACCELERATE 17011202

#define DIDFT_RELAXIS 1

#define DIPROP_USERNAME 25

#define DIBUTTON_TPS_GLANCE_LEFT_LINK 168281316

#define DIAXIS_STRATEGYR_ROTATE 184697347

#define DIK_POWER 222

#define DIDIFT_OVERLAY 2

#define DIBUTTON_BROWSER_PRINT 671106058

#define DIBUTTON_REMOTE_CD 654334986

#define DIKEYBOARD_DELETE 2164262099

#define DI8DEVTYPE_REMOTE 27

#define DIBUTTON_BBALLO_SPECIAL 301990917

#define DIAXIS_ANY_Y_1 4278272513

#define DIAXIS_FLYINGH_COLLECTIVE 100764163

#define DIAXIS_ANY_Y_2 4278272514

#define DI8DEVTYPEMOUSE_ABSOLUTE 6

#define DIBUTTON_DRIVINGR_STEER_LEFT_LINK 16829668

#define DIBUTTON_BASEBALLP_PAUSE 268453116

#define DIEP_STARTDELAY 512

#define DIAXIS_2DCONTROL_INOUT 587301379

#define DIBUTTON_DRIVINGT_STEER_RIGHT_LINK 50384108

#define DIBUTTON_BBALLO_FAKE 301990916

#define DIBUTTON_RACQUET_SMASH 536871939

#define DIBUTTON_DRIVINGT_TARGET 50334723

#define DIBUTTON_SOCCERD_RIGHT_LINK 520144108

#define DIBUTTON_DRIVINGT_DEVICE 50349310

#define DIVIRTUAL_SPORTS_SKIING 486539264

#define DIBUTTON_FISHING_DEVICE 234898686

#define DIBUTTON_DRIVINGR_SHIFTUP 16780289

#define DIBUTTON_ARCADEP_RIGHT_LINK 570475756

#define DIBUTTON_DRIVINGC_FIRESECONDARY 33573897

#define DIK_ABNT_C1 115

#define DIK_ABNT_C2 126

#define DIBUTTON_FOOTBALLD_PAUSE 385893628

#define DIBUTTON_FISHING_BAIT 234882052

#define DIBUTTON_ARCADES_VIEW_LEFT_LINK 554157284

#define DIBUTTON_MECHA_FASTER_LINK 688112864

#define DIERR_UNSUPPORTED 2147500033

#define DIK_VOLUMEUP 176

#define DIK_NEXT 209

#define DIBUTTON_FPS_ROTATE_RIGHT_LINK 151045356

#define DIBUTTON_DRIVINGT_BARREL_DOWN_LINK 50414824

#define DIGFFS_EMPTY 1

#define DIBUTTON_SOCCERO_SHOOT 503317505

#define DIBUTTON_STRATEGYR_JUMP 184550407

#define DIPROP_AUTOCENTER 9

#define DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK 50840812

#define DIES_SOLO 1

#define DIBUTTON_HUNTING_JUMP 218121226

#define DI8DEVTYPE_JOYSTICK 20

#define DIKEYBOARD_SYSRQ 2164262071

#define DIBUTTON_STRATEGYT_BACK_LINK 201409768

#define DIDFT_VENDORDEFINED 67108864

#define DIBUTTON_ARCADES_VIEW_RIGHT_LINK 554157292

#define DIBUTTON_FOOTBALLQ_MENU 352322813

#define DI8DEVTYPEKEYBOARD_NEC98LAPTOP 8

#define DIK_CONVERT 121

#define DI_DOWNLOADSKIPPED 3

#define DIGFFS_USERFFSWITCHON 1024

#define DIPROP_JOYSTICKID 15

#define DIBUTTON_3DCONTROL_MENU 603981053

#define DIBUTTON_FOOTBALLO_DEVICE 369116414

#define DIAXIS_DRIVINGT_ACCELERATE 50565635

#define DIBUTTON_BBALLO_MENU 301991165

#define DIBUTTON_TPS_GLANCE_DOWN_LINK 168281320

#define DIBUTTON_BBALLD_FAKE 318768131

#define DIBUTTON_FOOTBALLP_SELECT 335545346

#define DIK_APPS 221

#define DIVIRTUAL_SPORTS_RACQUET 536870912

#define DIEP_NORESTART 1073741824

#define DIVIRTUAL_ARCADE_PLATFORM 570425344

#define DIBUTTON_CADM_SPECIAL 637535235

#define DIBUTTON_BIKINGM_LEFT_LINK 469812452

#define DIBUTTON_FISHING_RIGHT_LINK 234931436

#define DIKEYBOARD_WAKE 2164262115

#define DIBUTTON_FPS_SELECT 150995972

#define DIBUTTON_DRIVINGC_SHIFTDOWN 33573893

#define DIBUTTON_REMOTE_DIGIT9 654332952

#define DIBUTTON_REMOTE_DIGIT8 654332951

#define DIBUTTON_BBALLD_LEFT_LINK 318817508

#define DIKEYBOARD_RMENU 2164262072

#define DIBUTTON_SKIING_SELECT 486540293

#define DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK 17286380

#define DIK_TAB 15

#define DIAH_UNMAPPED 0

#define DISCL_NONEXCLUSIVE 2

#define DIBUTTON_FOOTBALLO_LEFTARM 369099778

#define DIBUTTON_REMOTE_DIGIT3 654332946

#define DIAFTS_NEWDEVICELOW 4294967295

#define DIBUTTON_REMOTE_DIGIT2 654332945

#define DIBUTTON_REMOTE_DIGIT1 654332944

#define DIBUTTON_BASEBALLP_SELECT 268436481

#define DIAXIS_HOCKEYG_MOVE 453050882

#define DIBUTTON_REMOTE_DIGIT0 654332943

#define DIBUTTON_REMOTE_DIGIT7 654332950

#define DIBUTTON_REMOTE_DIGIT6 654332949

#define DIBUTTON_REMOTE_DIGIT5 654332948

#define DIDOI_ASPECTPOSITION 256

#define DIBUTTON_REMOTE_DIGIT4 654332947

#define DIBUTTON_BASEBALLB_PAUSE 251675900

#define DIBUTTON_REMOTE_PLAY 654320643

#define DIAXIS_CADF_MOVE 620823042

#define DIBUTTON_MECHA_FIRE 687866881

#define DIRECTINPUT_VERSION 2048

#define DIBUTTON_STRATEGYT_LEFT_LINK 201376996

#define DIKEYBOARD_MUTE 2164262048

#define DIBUTTON_SOCCERD_LEFT_LINK 520144100

#define DIBUTTON_MECHA_MENU 687867133

#define DIBUTTON_BBALLO_TIMEOUT 302007309

#define DIKEYBOARD_RCONTROL 2164262045

#define DIBUTTON_BBALLO_SCREEN 302007305

#define DIKEYBOARD_NUMPADEQUALS 2164262029

#define DIBUTTON_BBALLD_SUBSTITUTE 318784521

#define DIBUTTON_MECHA_ROTATE_LEFT_LINK 688014564

#define DIVOICE_TRANSMIT 2197816333

#define DIAFTS_UNUSEDDEVICELOW 0

#define DIKEYBOARD_HOME 2164262087

#define DI8DEVTYPESUPPLEMENTAL_THREEPEDALS 12

#define DIK_UNLABELED 151

#define DIEFT_FFATTACK 512

#define DIPROP_KEYNAME 20

#define DIAXIS_BASEBALLB_MOVE 251724290

#define DIBUTTON_STRATEGYT_DEVICE 201344254

#define DIKEYBOARD_COLON 2164262034

#define DIBUTTON_FOOTBALLD_FORWARD_LINK 385959136

#define DIAXIS_FLYINGC_PITCH 67176962

#define DIBUTTON_BASEBALLF_SHIFTOUT 285230088

#define DIBUTTON_FLYINGH_VIEW 100688901

#define DIEFF_OBJECTOFFSETS 2

#define DIBUTTON_HUNTING_BINOCULAR 218104836

#define DIERR_READONLY 2147942405

#define DIBUTTON_BIKINGM_SELECT 469763076

#define DIBUTTON_BASEBALLP_PITCH 268436482

#define DIBUTTON_DRIVINGR_SHIFTDOWN 16780290

#define DIBUTTON_SPACESIM_DISPLAY 117457925

#define DIBUTTON_BBALLD_DEVICE 318784766

#define DIBUTTON_HOCKEYD_SUBSTITUTE 436225033

#define DIAXIS_BASEBALLP_MOVE 268501506

#define DIGFFS_SAFETYSWITCHON 256

#define DIAH_USERCONFIG 1

#define DIBUTTON_FIGHTINGH_DODGE 134235146

#define DIK_PAUSE 197

#define DIAXIS_FIGHTINGH_MOVE 134283778

#define DIBUTTON_FOOTBALLQ_FAKE 352322566

#define DIBUTTON_SOCCERD_BLOCK 520094721

#define DIBUTTON_CADF_PAUSE 620774652

#define DIBUTTON_SOCCERO_SHOOTHIGH 503333897

#define DIBUTTON_FLYINGM_COUNTER 83909636

#define DIBUTTON_BBALLD_MENU 318768381

#define DIBUTTON_FPS_FORWARD_LINK 151078112

#define DIBUTTON_DRIVINGC_AIDS 33571847

#define DIBUTTON_SOCCERO_PASS 503317506

#define DIAXIS_ANY_X_1 4278239745

#define DIAXIS_ANY_X_2 4278239746

#define DIBUTTON_BASEBALLB_NOSTEAL 251675657

#define DIHATSWITCH_DRIVINGT_GLANCE 50349569

#define DIBUTTON_FPS_BACKWARD_LINK 151078120

#define DIAXIS_HOCKEYO_MOVE 419496450

#define DIBUTTON_SOCCERD_SPECIAL 520094725

#define DIPROP_APPDATA 22

#define DIPROP_LOGICALRANGE 19

#define DIBUTTON_SKIING_CAMERA 486540291

#define DIBUTTON_HOCKEYG_TIMEOUT 453002247

#define DIBUTTON_DRIVINGC_TARGET 33557507

#define DIGFFS_USERFFSWITCHOFF 2048

#define DIK_DOWNARROW 208

#define DIBUTTON_FLYINGH_COUNTER 100684804

#define DI8DEVCLASS_DEVICE 1

#define DIHATSWITCH_RACQUET_GLANCE 536888833

#define DIBUTTON_STRATEGYT_SELECT 201327617

#define DIBUTTON_TPS_GLANCE_UP_LINK 168281312

#define DIK_RALT 184

#define DIBUTTON_FLYINGH_SLOWER_LINK 100916456

#define DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK 101172460

#define DIDAL_MIDDLE 0

#define DIKEYBOARD_SLEEP 2164262111

#define DIAXIS_DRIVINGC_ACCELERATE 33788418

#define DIAXIS_BASEBALLF_LATERAL 285245953

#define DIBUTTON_RACQUET_TIMEOUT 536888326

#define DI8DEVTYPE1STPERSON_SIXDOF 3

#define DIBUTTON_MECHA_LEFT_LINK 687916260

#define DIDFT_NOCOLLECTION 16776960

#define DIBUTTON_DRIVINGC_STEER_LEFT_LINK 33606884

#define DIBUTTON_TPS_STEPRIGHT 167789576

#define DIEFT_HARDWARE 255

#define DIPH_DEVICE 0

#define DIHATSWITCH_FLYINGC_GLANCE 67126785

#define DIHATSWITCH_HOCKEYO_SCROLL 419448321

#define DIDFT_PSHBUTTON 4

#define DIBUTTON_FIGHTINGH_FORWARD_LINK 134300896

#define DI8DEVCLASS_POINTER 2

#define DIBUTTON_FLYINGH_FASTER_LINK 100916448

#define DIBUTTON_FLYINGH_GEAR 100688902

#define DIBUTTON_MECHA_JUMP 687866886

#define DIBUTTON_BASEBALLB_BURST 251659270

#define DIBUTTON_FOOTBALLO_SUBSTITUTE 369116171

#define DIEP_TRIGGERBUTTON 8

#define DIAXIS_HUNTING_LATERAL 218137089

#define DI8DEVTYPESCREENPTR_UNKNOWN 2

#define DIHATSWITCH_STRATEGYR_GLANCE 184567297

#define DIBUTTON_FOOTBALLO_BACK_LINK 369181928

#define DIBUTTON_BASEBALLP_RIGHT_LINK 268485868

#define DIAXIS_DRIVINGT_BRAKE 50614789

#define DIKEYBOARD_LSHIFT 2164261930

#define DIBUTTON_GOLF_RIGHT_LINK 402703596

#define DIBUTTON_MECHA_ROTATE_RIGHT_LINK 688014572

#define DIDF_ABSAXIS 1

#define DIBUTTON_FOOTBALLP_PAUSE 335561980

#define DIVOICE_PLAYBACKMUTE 2197816332

#define DIBUTTON_ARCADES_VIEW_UP_LINK 554157280

#define DIBUTTON_DRIVINGC_FIRE 33557505

#define DIBUTTON_FIGHTINGH_LEFT_LINK 134268132

#define DIK_MEDIASTOP 164

#define DI8DEVTYPE_DEVICECTRL 25

#define DIAXIS_FPS_ROTATE 151028225

#define DIK_LMENU 56

#define DIBUTTON_2DCONTROL_SPECIAL2 587203588

#define DIBUTTON_2DCONTROL_SPECIAL1 587203586

#define DIBUTTON_RACQUET_BACK_LINK 536954088

#define DIAXIS_BIKINGM_TURN 469795329

#define DIBUTTON_BBALLD_STEAL 318768130

#define DIK_PERIOD 52

#define DIBUTTON_SKIING_JUMP 486540289

#define DIK_SLASH 53

#define DIEFF_POLAR 32

#define JOY_HWS_NODEVNODE 536870912

#define DIDC_POSNEGCOEFFICIENTS 4096

#define DIK_YEN 125

#define DIAXIS_SKIING_TURN 486572545

#define DIBUTTON_BASEBALLB_POWER 251659267

#define DIBUTTON_3DCONTROL_PAUSE 603997436

#define DIBUTTON_BASEBALLF_SHIFTIN 285230087

#define DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK 84395244

#define DIAXIS_BASEBALLP_LATERAL 268468737

#define DIBUTTON_HOCKEYO_PAUSE 419448060

#define DIBUTTON_2DCONTROL_PAUSE 587220220

#define DIBUTTON_BIKINGM_CAMERA 469763074

#define DIBUTTON_SOCCERO_PASSTHRU 503333898

#define DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE 6

#define DIK_RIGHTARROW 205

#define DIBUTTON_TPS_SELECT 167773187

#define DIERR_OBJECTNOTFOUND 2147942402

#define DIBUTTON_STRATEGYR_LEFT_LINK 184599780

#define DIBUTTON_BBALLD_PLAY 318768135

#define DIBUTTON_STRATEGYR_RIGHT_LINK 184599788

#define DIDC_POLLEDDEVICE 2

#define DIVOICE_ALL 2197816330

#define DIK_RIGHT 205

#define DIBUTTON_DRIVINGR_AIDS 16794630

#define DIBUTTON_TPS_TURN_RIGHT_LINK 167920876

#define DIKEYBOARD_NOCONVERT 2164262011

#define DIAH_APPREQUESTED 2

#define DIBUTTON_DRIVINGR_STEER_RIGHT_LINK 16829676

#define DIBUTTON_SOCCERD_DEVICE 520111358

#define DIHATSWITCH_MECHA_GLANCE 687883777

#define DIBUTTON_MECHA_VIEW 687883272

#define DIERR_GENERIC 2147500037

#define DIBUTTON_BBALLO_SUBSTITUTE 302007310

#define DIEGES_EMULATED 2

#define DIBUTTON_SKIING_MENU 486540541

#define DIBUTTON_DRIVINGC_MENU 33555709

#define DIAXIS_SOCCERO_BEND 503415299

#define DIBUTTON_FPS_DEVICE 151012606

#define DIAXIS_CADM_MOVE 637600258

#define DIAXIS_BROWSER_VIEW 671187459

#define DIBUTTON_SOCCERD_BACK_LINK 520176872

#define DIAXIS_ANY_A_1 4278436353

#define DIBUTTON_FIGHTINGH_BACKWARD_LINK 134300904

#define DIAXIS_ANY_A_2 4278436354

#define DIVIRTUAL_CAD_2DCONTROL 587202560

#define DIK_AT 145

#define DIBUTTON_BBALLD_PLAYER 318768133

#define DIK_AX 150

#define DIK_RWIN 220

#define DIBUTTON_RACQUET_SUBSTITUTE 536888327

#define DIKEYBOARD_SPACE 2164261945

#define DI8DEVTYPE_MOUSE 18

#define DI_SECONDS 1000000

#define DIAXIS_FLYINGM_BRAKE 84173317

#define DIBUTTON_FISHING_CAST 234882049

#define DIAXIS_FLYINGC_RUDDER 67260933

#define DIVIRTUAL_SPORTS_SOCCER_OFFENSE 503316480

#define DI8DEVTYPEFLIGHT_STICK 2

#define DIBUTTON_SPACESIM_TURN_RIGHT_LINK 117589228

#define DIBUTTON_HOCKEYG_STRATEGY 453002246

#define DIBUTTON_FOOTBALLD_SUPERTACKLE 385876998

#define DIAXIS_ANY_S_1 4278534657

#define DIBUTTON_HUNTING_FORWARD_LINK 218186976

#define DIBUTTON_FLYINGH_GLANCE_UP_LINK 101172448

#define DIBUTTON_FLYINGC_GEAR 67120131

#define DIAXIS_ANY_S_2 4278534658

#define DIBUTTON_HUNTING_MAP 218104838

#define DIKEYBOARD_MEDIASELECT 2164262125

#define DIK_PREVTRACK 144

#define DIK_GRAVE 41

#define DIBUTTON_HUNTING_MENU 218105085

#define DIPROP_PRODUCTNAME 14

#define DIK_F4 62

#define DIERR_HANDLEEXISTS 2147942405

#define DIK_F3 61

#define DIK_F2 60

#define DIK_F1 59

#define DIK_F8 66

#define DIK_F7 65

#define DIK_F6 64

#define DIK_F5 63

#define DIK_F9 67

#define DI8DEVTYPESUPPLEMENTAL_DUALPEDALS 11

#define DIAXIS_ANY_B_2 4278469122

#define DIAXIS_ANY_B_1 4278469121

#define DIBUTTON_ARCADEP_FIRESECONDARY 570442758

#define DIBUTTON_MECHA_SLOWER_LINK 688112872

#define DIBUTTON_SPACESIM_VIEW 117457924

#define DIBUTTON_GOLF_BACK_LINK 402736360

#define DIBUTTON_SOCCERO_SPRINT 503333899

#define DIBUTTON_FOOTBALLQ_SLIDE 352322564

#define DI8DEVTYPEDRIVING_HANDHELD 5

#define DIBUTTON_BASEBALLF_FORWARD_LINK 285295840

#define DIPROP_CALIBRATIONMODE 10

#define DIK_WEBSTOP 232

#define DI8DEVCLASS_GAMECTRL 4

#define DIBUTTON_FLYINGM_DEVICE 83903742

#define DIBUTTON_HUNTING_FIRE 218104833

#define DIBUTTON_SPACESIM_GLANCE_LEFT_LINK 117949668

#define DI8DEVTYPEFLIGHT_RC 4

#define DIBUTTON_FIGHTINGH_CROUCH 134218756

#define DIPROP_SATURATION 6

#define DIAXIS_FIGHTINGH_ROTATE 134365699

#define DIBUTTON_HUNTING_PAUSE 218121468

#define DIKEYBOARD_WEBBACK 2164262122

#define DIAXIS_SPACESIM_ROTATE 117588485

#define DIBUTTON_ARCADEP_CROUCH 570426371

#define DIK_BACKSLASH 43

#define DIKEYBOARD_COMMA 2164261939

#define DIVIRTUAL_FLYING_HELICOPTER 100663296

#define DIVIRTUAL_FLYING_MILITARY 83886080

#define DIAXIS_CADM_LATERAL 637567489

#define DIBUTTON_FLYINGC_FLAPSDOWN 67134469

#define DIBUTTON_HOCKEYO_BURST 419431427

#define DIBUTTON_FLYINGM_WEAPONS 83889154

#define DIBUTTON_FLYINGH_FIRE 100668417

#define DIBUTTON_FOOTBALLD_PLAY 385876993

#define DI8DEVTYPESUPPLEMENTAL_THROTTLE 8

#define DIEP_SAMPLEPERIOD 2

#define DIVIRTUAL_STRATEGY_ROLEPLAYING 184549376

#define DIDFT_ALL 0

#define DI8DEVTYPE_SCREENPOINTER 26

#define DIBUTTON_BASEBALLB_BUNT 251659268

#define DIAXIS_FLYINGM_THROTTLE 84120067

#define DIEDBS_NEWDEVICE 32

#define DIBUTTON_RACQUET_MENU 536872189

#define DIBUTTON_3DCONTROL_SPECIAL 603980803

#define DIBUTTON_DRIVINGT_BARREL_UP_LINK 50414816

#define DIVIRTUAL_SPORTS_BIKING_MOUNTAIN 469762048

#define DIKEYBOARD_PRIOR 2164262089

#define DIBUTTON_SPACESIM_TURN_LEFT_LINK 117589220

#define DIDOI_FFACTUATOR 1

#define DIBUTTON_DRIVINGT_FIRESECONDARY 50351111

#define DIKEYBOARD_A 2164261918

#define DIKEYBOARD_B 2164261936

#define DIKEYBOARD_C 2164261934

#define DIKEYBOARD_D 2164261920

#define DIKEYBOARD_E 2164261906

#define DIKEYBOARD_F 2164261921

#define DIKEYBOARD_G 2164261922

#define DIKEYBOARD_H 2164261923

#define DIKEYBOARD_I 2164261911

#define DIKEYBOARD_J 2164261924

#define DIKEYBOARD_K 2164261925

#define DIKEYBOARD_L 2164261926

#define DIKEYBOARD_M 2164261938

#define DIKEYBOARD_N 2164261937

#define DIBUTTON_BASEBALLB_SELECT 251659265

#define DIKEYBOARD_0 2164261899

#define DIBUTTON_HOCKEYD_BACK_LINK 436290792

#define DIKEYBOARD_1 2164261890

#define DIKEYBOARD_2 2164261891

#define DIKEYBOARD_3 2164261892

#define DIKEYBOARD_4 2164261893

#define DIKEYBOARD_5 2164261894

#define DIKEYBOARD_6 2164261895

#define DIKEYBOARD_7 2164261896

#define DIKEYBOARD_8 2164261897

#define DIKEYBOARD_9 2164261898

#define DIBUTTON_BASEBALLB_NORMAL 251659266

#define DIBUTTON_FLYINGH_MENU 100664573

#define DIKEYBOARD_O 2164261912

#define DIEDFL_ATTACHEDONLY 1

#define DIKEYBOARD_P 2164261913

#define DIKEYBOARD_Q 2164261904

#define DI8DEVTYPESCREENPTR_LIGHTGUN 3

#define DIKEYBOARD_R 2164261907

#define DIKEYBOARD_S 2164261919

#define DIBUTTON_FOOTBALLQ_JUMP 352322563

#define DIBUTTON_BIKINGM_RIGHT_LINK 469812460

#define DIKEYBOARD_T 2164261908

#define DIKEYBOARD_U 2164261910

#define DIKEYBOARD_V 2164261935

#define DIKEYBOARD_W 2164261905

#define DIKEYBOARD_X 2164261933

#define DIKEYBOARD_Y 2164261909

#define DIKEYBOARD_Z 2164261932

#define DIAXIS_DRIVINGR_BRAKE 17043971

#define DI8DEVTYPESCREENPTR_LIGHTPEN 4

#define DISCL_BACKGROUND 8

#define DIAXIS_BBALLO_MOVE 302055938

#define DIK_LEFT 203

#define DIVIRTUAL_SPORTS_FISHING 234881024

#define DIBUTTON_FOOTBALLQ_RIGHT_LINK 352371948

#define DIAXIS_3DCONTROL_INOUT 604078595

#define DIERR_DEVICENOTREG 2147746132

#define DIBUTTON_DRIVINGC_WEAPONS 33557506

#define DIK_WEBFAVORITES 230

#define DIDOI_FFEFFECTTRIGGER 2

#define DIBUTTON_SPACESIM_LEFT_LINK 117490916

#define DIKEYBOARD_NEXT 2164262097

#define DIBUTTON_BROWSER_MENU 671089917

#define DIVIRTUAL_FIGHTING_THIRDPERSON 167772160

#define DIBUTTON_ARCADES_FORWARD_LINK 553731296

#define DIDF_RELAXIS 2

#define DIDC_POLLEDDATAFORMAT 8

#define DIBUTTON_FOOTBALLD_DEVICE 385893630

#define DIBUTTON_FPS_WEAPONS 150995970

#define DIAXIS_FIGHTINGH_LATERAL 134251009

#define DI8DEVTYPE_1STPERSON 24

#define DIEP_TRIGGERREPEATINTERVAL 16

#define DIERR_BADDRIVERVER 2147942519

#define DIEFT_POSNEGSATURATION 8192

#define DIPROP_FFLOAD 8

#define DIAXIS_BBALLD_MOVE 318833154

#define DIBUTTON_FOOTBALLP_PLAY 335545345

#define DIDAL_CENTERED 0

#define DIKEYBOARD_SCROLL 2164261958

#define DIBUTTON_FLYINGM_GLANCE_UP_LINK 84395232

#define DIAXIS_HOCKEYG_LATERAL 453018113

#define DIEFT_CONSTANTFORCE 1

#define DIBUTTON_FPS_JUMP 150995974

#define DIA_FORCEFEEDBACK 1

#define JOY_HWS_ISGAMEPORTDRIVER 67108864

#define DISCL_NOWINKEY 16

#define DIK_RCONTROL 157

#define DIAXIS_BROWSER_LATERAL 671121921

#define DIK_NUMPADSTAR 55

#define DIBUTTON_DRIVINGC_PAUSE 33572092

#define DIBUTTON_BROWSER_HOME 671106053

#define DIBUTTON_SOCCERD_SUBSTITUTE 520111116

#define DIBUTTON_ARCADEP_FORWARD_LINK 570508512

#define DIBUTTON_DRIVINGC_DASHBOARD 33571846

#define DIBUTTON_HOCKEYG_BLOCK 452985860

#define JOY_HWS_ISANALOGPORTDRIVER 134217728

#define DIBUTTON_STRATEGYT_MENU 201327869

#define DIBUTTON_HOCKEYG_PAUSE 453002492

#define DIVIRTUAL_SPACESIM 117440512

#define DI_OK 0

#define DIBUTTON_BASEBALLF_NEAREST 285213697

#define DIBUTTON_ARCADES_DEVICE 553665790

#define DIVIRTUAL_SPORTS_HOCKEY_GOALIE 452984832

#define DIBUTTON_HOCKEYD_FORWARD_LINK 436290784

#define JOY_US_VOLATILE 8

#define DIKEYBOARD_ADD 2164261966

#define DIDC_SATURATION 2048

#define DIBUTTON_FIGHTINGH_PUNCH 134218753

#define DIVIRTUAL_CAD_3DCONTROL 603979776

#define DIBUTTON_DRIVINGT_STEER_LEFT_LINK 50384100

#define DIDFT_FFEFFECTTRIGGER 33554432

#define DIKEYBOARD_KANJI 2164262036

#define DIBUTTON_RACQUET_SWING 536871937

#define DIKEYBOARD_ESCAPE 2164261889

#define DI_DEGREES 100

#define DIBUTTON_SOCCERO_HEAD 503333901

#define DIBUTTON_ARCADEP_BACK_LINK 570508520

#define DIBUTTON_BBALLO_PLAYER 301990918

#define DIBUTTON_MECHA_FIRESECONDARY 687883273

#define DIBUTTON_FOOTBALLQ_FAKESNAP 352338951

#define DIGFFS_SAFETYSWITCHOFF 512

#define DIBUTTON_HUNTING_ROTATE_LEFT_LINK 218252516

#define DIBUTTON_2DCONTROL_MENU 587203837

#define DI8DEVTYPESCREENPTR_TOUCH 5

#define DIAXIS_MECHA_THROTTLE 688095748

#define DIBUTTON_ARCADES_PAUSE 553665788

#define DIBUTTON_REMOTE_PAUSE 654329084

#define DIBUTTON_SPACESIM_GEAR 117457928

#define DIDC_PHANTOM 131072

#define DIKEYBOARD_APPS 2164262109

#define DIK_PLAYPAUSE 162

#define DIAH_DEFAULT 32

#define DIK_LEFTARROW 203

#define DIVIRTUAL_CAD_MODEL 637534208

#define DIBUTTON_HOCKEYD_PLAYER 436208641

#define DIAXIS_HUNTING_MOVE 218169858

#define DIK_WEBBACK 234

#define DIPH_BYUSAGE 3

#define DIHATSWITCH_FISHING_GLANCE 234898945

#define DIBUTTON_DRIVINGC_STEER_RIGHT_LINK 33606892

#define DIAH_HWDEFAULT 8

#define DIBUTTON_BIKINGM_FASTER_LINK 469845216

#define DIPROP_GRANULARITY 3

#define DIAXIS_FOOTBALLD_MOVE 385942018

#define DIK_DECIMAL 83

#define DIBUTTON_STRATEGYR_DEVICE 184567038

#define DIAXIS_FPS_MOVE 151060994

#define DIBUTTON_DRIVINGT_MENU 50332925

#define DIK_SUBTRACT 74

#define DIBUTTON_SOCCERD_FOUL 520111112

#define DIBUTTON_FISHING_MAP 234882053

#define DI8DEVTYPEFLIGHT_LIMITED 1

#define DIEDBSFL_MULTIMICEKEYBOARDS 8192

#define DIBUTTON_FOOTBALLQ_SELECT 352322561

#define DIKEYBOARD_RBRACKET 2164261915

#define DIBUTTON_DRIVINGR_DEVICE 16794878

#define DIBUTTON_SOCCERD_GOALIECHARGE 520111115

#define DIBUTTON_DRIVINGT_FIRE 50334721

#define DIBUTTON_FOOTBALLO_SHOULDER 369116167

#define DIENUM_CONTINUE 1

#define DIAXIS_CADM_INOUT 637633027

#define DIPROP_DEADZONE 5

#define DIK_MAIL 236

#define DIBUTTON_FLYINGM_FIRESECONDARY 83905545

#define DIBUTTON_SPACESIM_FIRE 117441537

#define DIAXIS_ANY_R_2 4278338050

#define DIAXIS_ANY_R_1 4278338049

#define DIEDBSFL_VALID 28944

#define DIAXIS_FOOTBALLD_LATERAL 385909249

#define DIBUTTON_FLYINGH_TARGET 100668419

#define DIBUTTON_FLYINGC_SLOWER_LINK 67359976

#define DIBUTTON_FOOTBALLO_ZOOM 369116170

#define DIBUTTON_CADF_SPECIAL 620758019

#define DIBUTTON_FOOTBALLQ_MOTION 352338952

#define DIBUTTON_HOCKEYO_LEFT_LINK 419480804

#define DIBUTTON_ARCADES_CARRY 553649154

#define DIK_BACK 14

#define DIVIRTUAL_FIGHTING_FPS 150994944

#define DIK_LCONTROL 29

#define DIBUTTON_DRIVINGC_BRAKE 33573896

#define DIK_ADD 78

#define DIBUTTON_HOCKEYG_PASS 452985857

#define DIVIRTUAL_DRIVING_MECHA 687865856

#define DIKEYBOARD_UP 2164262088

#define DIERR_MAPFILEFAIL 2147746315

#define DIBUTTON_TPS_FORWARD_LINK 167855328

#define DIERR_NOTEXCLUSIVEACQUIRED 2147746309

#define DIBUTTON_ARCADEP_JUMP 570426369

#define DIK_UNDERLINE 147

#define DIBUTTON_REMOTE_RECORD 654320647

#define DIBUTTON_GOLF_ZOOM 402670599

#define DIBUTTON_BIKINGM_ZOOM 469779462

#define DIERR_ACQUIRED 2147942570

#define DI_NOEFFECT 1

#define DIPROPAXISMODE_REL 1

#define DIBUTTON_MECHA_REVERSE 687866884

#define DIDFT_AXIS 3

#define DIK_WEBFORWARD 233

#define DIBUTTON_HUNTING_CALL 218104837

#define DIPROPAXISMODE_ABS 0

#define DIAXIS_TPS_MOVE 167838210

#define DIBUTTON_HOCKEYG_ZOOM 453002245

#define DIK_NUMPADCOMMA 179

#define DIBUTTON_HOCKEYG_FORWARD_LINK 453068000

#define DIK_DOWN 208

#define DIAXIS_FLYINGC_BRAKE 67398148

#define DIVIRTUAL_BROWSER_CONTROL 671088640

#define DIBUTTON_HOCKEYO_SHOOT 419431425

#define DIK_SEMICOLON 39

#define DIBUTTON_FOOTBALLQ_SNAP 352322562

#define DIVOICE_TEAM 2197816329

#define DIKEYBOARD_EQUALS 2164261901

#define DIK_LWIN 219

#define DIAXIS_ANY_Z_1 4278305281

#define DIAXIS_ANY_Z_2 4278305282

#define DIBUTTON_ARCADES_THROW 553649153

#define DIKEYBOARD_WEBSTOP 2164262120

#define DIFEF_MODIFYIFNEEDED 16

#define DIBUTTON_DRIVINGR_PIT 16794633

#define DIBUTTON_GOLF_DOWN 402654212

#define DIDBAM_INITIALIZE 2

#define DIBUTTON_CADF_MENU 620758269

#define DIERR_NOTDOWNLOADED 2147746307

#define DIBUTTON_FLYINGC_MENU 67110141

#define DIBUTTON_SOCCERD_HEAD 520111113

#define DIBUTTON_GOLF_TIMEOUT 402670600

#define DIBUTTON_FOOTBALLD_RIP 385893386

#define DIVIRTUAL_SPORTS_BASEBALL_BAT 251658240

#define DIAXIS_RACQUET_MOVE 536936962

#define DIBUTTON_FLYINGC_GLANCE_LEFT_LINK 67618020

#define DISFFC_STOPALL 2

#define DIBUTTON_BBALLO_PLAY 302007306

#define DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE 318767104

#define DIGFFS_POWERON 64

#define DIBUTTON_GOLF_SELECT 402654210

#define DIAXIS_BASEBALLF_MOVE 285278722

#define DIBUTTON_BROWSER_SELECT 671089665

#define DIPH_BYID 2

#define DI8DEVTYPE_GAMEPAD 21

#define DIPROP_GETPORTDISPLAYNAME 16

#define DIAXIS_MECHA_TORSO 687931906

#define DIBUTTON_TPS_DODGE 167789577

#define DIBUTTON_FPS_GLANCEL 151012362

#define DIK_MYCOMPUTER 235

#define DIBUTTON_FOOTBALLD_LEFT_LINK 385926372

#define DISFFC_PAUSE 4

#define DIHATSWITCH_DRIVINGC_GLANCE 33572353

#define DIBUTTON_FLYINGM_VIEW 83911685

#define DIBUTTON_FPS_FIRESECONDARY 151012364

#define DIBUTTON_HOCKEYO_FAKE 419431429

#define DIBUTTON_FPS_GLANCER 151012363

#define DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE 369098752

#define DI_BUFFEROVERFLOW 1

#define DIBUTTON_CADF_DEVICE 620774654

#define DIDSAM_DEFAULT 0

#define DI8DEVTYPEKEYBOARD_J3100 12

#define DIBUTTON_SOCCERD_CLEAR 520111114

#define DIDC_EMULATED 4

#define DIHATSWITCH_SOCCERO_GLANCE 503334401

#define DIBUTTON_GOLF_TERRAIN 402654213

#define DIBUTTON_FLYINGM_FLAPSDOWN 83907592

#define DIBUTTON_FOOTBALLO_RIGHT_LINK 369149164

#define DIAXIS_TPS_TURN 167903745

#define DIBUTTON_FOOTBALLD_BACK_LINK 385959144

#define DIK_NUMPADENTER 156

#define DI8DEVTYPEMOUSE_UNKNOWN 1

#define DIAXIS_BASEBALLB_LATERAL 251691521

#define DIBUTTON_REMOTE_DEVICE 654329086

#define DIBUTTON_CADM_SELECT 637535233

#define DIDBAM_PRESERVE 1

#define DIBUTTON_FLYINGH_FIRESECONDARY 100682759

#define DIHATSWITCH_CADM_HATSWITCH 637552129

#define DICD_EDIT 1

#define DIBUTTON_RACQUET_RIGHT_LINK 536921324

#define DI_WRITEPROTECT 19

#define DI_FFNOMINALMAX 10000

#define DI8DEVTYPE_KEYBOARD 19

#define DIBUTTON_FLYINGM_FASTER_LINK 84137184

#define DIEDBSFL_NONGAMINGDEVICES 16384

#define DIBUTTON_DRIVINGC_DEVICE 33572094

#define DIKEYBOARD_BACKSLASH 2164261931

#define DIBUTTON_RACQUET_BACKSWING 536871938

#define DIAXIS_FPS_SIDESTEP 151142916

#define DIBUTTON_FIGHTINGH_DEVICE 134235390

#define DIEDFL_FORCEFEEDBACK 256

#define DIBUTTON_ARCADEP_VIEW_UP_LINK 570934496

#define DIBUTTON_TPS_USE 167773188

#define DIPH_BYOFFSET 1

#define DIKEYBOARD_MAIL 2164262124

#define DIBUTTON_BASEBALLB_STEAL 251659269

#define DIBUTTON_FOOTBALLQ_PAUSE 352339196

#define DIBUTTON_BASEBALLB_CONTACT 251659272

#define DIEDFL_INCLUDEHIDDEN 262144

#define DIHATSWITCH_BIKINGM_SCROLL 469779969

#define DIBUTTON_FLYINGH_GLANCE_LEFT_LINK 101172452

#define DIKEYBOARD_UNDERLINE 2164262035

#define DIBUTTON_HOCKEYO_TIMEOUT 419447816

#define DI8DEVTYPEFLIGHT_YOKE 3

#define DIBUTTON_GOLF_SUBSTITUTE 402670601

#define DIAXIS_SOCCERO_LATERAL 503349761

#define DIBUTTON_ARCADES_ATTACK 553649155

#define DIBUTTON_BROWSER_STOP 671106052

#define DIERR_NOTACQUIRED 2147942412

#define DIDFT_ALIAS 134217728

#define DIDFT_OUTPUT 268435456

#define DIBUTTON_REMOTE_VCR 654334987

#define DIRECTINPUT_HEADER_VERSION 2048

#define DIBUTTON_HUNTING_DISPLAY 218121224

#define DIBUTTON_FOOTBALLO_FORWARD_LINK 369181920

#define DI8DEVTYPEKEYBOARD_PCAT 3

#define DIBUTTON_STRATEGYR_SELECT 184550403

#define DIDEVTYPE_HID 65536

#define DIPROP_AXISMODE 2

#define DIGFFS_POWEROFF 128

#define DI8DEVTYPEKEYBOARD_PCENH 4

#define DIDAL_BOTTOMALIGNED 8

#define DIAXIS_FLYINGH_BANK 100698625

#define DIBUTTON_STRATEGYR_GET 184550401

#define DIBUTTON_SKIING_FASTER_LINK 486622432

#define DIBUTTON_GOLF_SWING 402654209

#define DIGFFS_ACTUATORSOFF 32

#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED 4

#define DIBUTTON_TPS_TURN_LEFT_LINK 167920868

#define DIKEYBOARD_INSERT 2164262098

#define DIBUTTON_SPACESIM_FORWARD_LINK 117523680

#define DIBUTTON_BASEBALLP_FAKE 268436485

#define DIVIRTUAL_SPORTS_HOCKEY_OFFENSE 419430400

#define DI_SETTINGSNOTSAVED 11

#define DIKEYBOARD_VOLUMEDOWN 2164262062

#define DIBUTTON_HOCKEYO_RIGHT_LINK 419480812

#define DIBUTTON_FOOTBALLD_AUDIBLE 385893387

#define DIEDBSFL_THISUSER 16

#define DIBUTTON_FOOTBALLO_SPIN 369099781

#define DIBUTTON_HOCKEYG_BACK_LINK 453068008

#define DIBUTTON_HOCKEYD_MENU 436208893

#define DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER 3

#define DIBUTTON_FISHING_BACK_LINK 234964200

#define DIBUTTON_FLYINGH_DEVICE 100680958

#define DIBUTTON_HOCKEYO_MENU 419431677

#define DIEP_NODOWNLOAD 2147483648

#define DIBUTTON_ARCADEP_VIEW_DOWN_LINK 570934504

#define DIVIRTUAL_SPORTS_FOOTBALL_FIELD 335544320

#define DIBUTTON_FOOTBALLD_JUMP 385876995

#define DIEFF_OBJECTIDS 1

#define DIBUTTON_HOCKEYO_SPECIAL 419431428

#define DIBUTTON_BROWSER_REFRESH 671089666

#define DIAXIS_CADF_LATERAL 620790273

#define DIPROPRANGE_NOMAX 2147483647

#define DI8DEVTYPE_DRIVING 22

#define DIAXIS_FISHING_LATERAL 234914305

#define DIBUTTON_FISHING_PAUSE 234898684

#define DIBUTTON_BBALLO_SHOOT 301990913

#define DIKEYBOARD_ABNT_C1 2164262003

#define DIBUTTON_BBALLD_PAUSE 318784764

#define DIBUTTON_FPS_FIRE 150995969

#define DIKEYBOARD_ABNT_C2 2164262014

#define DIBUTTON_TPS_JUMP 167773189

#define DIAXIS_ANY_U_1 4278370817

#define DI8DEVTYPEKEYBOARD_PCXT 1

#define DIBUTTON_DRIVINGT_VIEW 50355204

#define DIBUTTON_TPS_INVENTORY 167789578

#define DIBUTTON_FIGHTINGH_DISPLAY 134235145

#define DIHATSWITCH_GOLF_SCROLL 402671105

#define DIPROPCALIBRATIONMODE_COOKED 0

#define DIPOV_ANY_1 4278208001

#define DIPOV_ANY_3 4278208003

#define DIPOV_ANY_2 4278208002

#define DIK_NOCONVERT 123

#define DIK_UPARROW 200

#define DIPOV_ANY_4 4278208004

#define DIK_RSHIFT 54

#define DIAXIS_STRATEGYR_LATERAL 184582657

#define DIAXIS_ANY_U_2 4278370818

#define DI8DEVCLASS_KEYBOARD 3

#define DIAXIS_HUNTING_ROTATE 218251779

#define DIK_CALCULATOR 161

#define DIK_OEM_102 86

#define DIKEYBOARD_STOP 2164262037

#define DIAXIS_BBALLO_LATERAL 302023169

#define DI8DEVTYPEDRIVING_DUALPEDALS 3

#define DIAXIS_ARCADES_MOVE 553714178

#define DIBUTTON_FLYINGM_GEAR 83911690

#define DIEP_GAIN 4

#define DIBUTTON_TPS_GLANCE_RIGHT_LINK 168281324

#define DIK_PGDN 209

#define DIEFT_ALL 0

#define DIDC_FORCEFEEDBACK 256

#define DIKEYBOARD_CONVERT 2164262009

#define DIBUTTON_CADM_DEVICE 637551870

#define DIK_DELETE 211

#define DIAXIS_DRIVINGR_STEER 16812545

#define DIBUTTON_ARCADEP_DEVICE 570443006

#define DIDFT_TGLBUTTON 8

#define DIBUTTON_FPS_STRAFE 150995975

#define DIBUTTON_CADF_SELECT 620758017

#define DIPROPRANGE_NOMIN 2147483648

#define DIBUTTON_HOCKEYO_FORWARD_LINK 419513568

#define DIBUTTON_FLYINGH_GLANCE_DOWN_LINK 101172456

#define DIAXIS_STRATEGYR_MOVE 184615426

#define DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK 50840804

#define DIERR_INPUTLOST 2147942430

#define DISFFC_SETACTUATORSOFF 32

#define DIBUTTON_HOCKEYD_STRATEGY 436225031

#define DIKEYBOARD_MYCOMPUTER 2164262123

#define DIBUTTON_DRIVINGT_BRAKE 50351110

#define DIDFT_NODATA 128

#define DIDC_ALIAS 65536

#define DIHATSWITCH_HOCKEYD_SCROLL 436225537

#define DIAXIS_FOOTBALLQ_MOVE 352387586

#define DIBUTTON_MECHA_PAUSE 687883516

#define DIBUTTON_STRATEGYR_CROUCH 184550406

#define DIBUTTON_HOCKEYG_LEFT_LINK 453035236

#define DIK_RBRACKET 27

#define DIBUTTON_RACQUET_PAUSE 536888572

#define DIBUTTON_RACQUET_SELECT 536871941

#define DI_PROPNOEFFECT 1

#define DICD_DEFAULT 0

#define DIAXIS_MECHA_STEER 687899137

#define DIHATSWITCH_SKIING_GLANCE 486557185

#define DIBUTTON_REMOTE_MENU 654312701

#define DIDOI_ASPECTVELOCITY 512

#define DIBUTTON_SOCCERD_PLAYER 520094724

#define DIPROP_FFGAIN 7

#define DIBUTTON_SPACESIM_FASTER_LINK 117687520

#define DIPROP_SCANCODE 23

#define DIBUTTON_FPS_MENU 150996221

#define DIBUTTON_REMOTE_REVIEW 654320645

#define DIK_RETURN 28

#define DIBUTTON_HOCKEYD_STEAL 436208642

#define DIBUTTON_FOOTBALLD_SWIM 385893384

#define DIAXIS_DRIVINGC_ACCEL_AND_BRAKE 33638916

#define DIBUTTON_BBALLO_LEFT_LINK 302040292

#define DIDOI_ASPECTMASK 3840

#define DI8DEVCLASS_ALL 0

#define DIBUTTON_FIGHTINGH_RIGHT_LINK 134268140

#define DIVIRTUAL_DRIVING_TANK 50331648

#define DIBUTTON_HUNTING_LEFT_LINK 218154212

#define DIKEYBOARD_SEMICOLON 2164261927

#define DIBUTTON_FOOTBALLQ_LEFT_LINK 352371940

#define DIBUTTON_FISHING_BINOCULAR 234882051

#define DIBUTTON_FISHING_ROTATE_RIGHT_LINK 235029740

#define DIAXIS_ARCADEP_MOVE 570491394

#define DIAXIS_BIKINGM_BRAKE 470041091

#define DIBUTTON_FISHING_CROUCH 234898439

#define DIBUTTON_REMOTE_SELECT 654312450

#define DIBUTTON_FLYINGC_FLAPSUP 67134468

#define DIBUTTON_TPS_BACKWARD_LINK 167855336

#define DIBUTTON_FLYINGC_DISPLAY 67118082

#define DIBUTTON_TPS_MENU 167773437

#define DIEP_ENVELOPE 128

#define DIK_UP 200

#define DIBUTTON_HUNTING_BACK_LINK 218186984

#define DIBUTTON_BBALLO_PAUSE 302007548

#define DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE 385875968

#define DIBUTTON_STRATEGYT_MAP 201344007

#define DIBUTTON_FOOTBALLQ_BACK_LINK 352404712

#define DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK 17286372

#define DIBUTTON_BASEBALLP_BACK_LINK 268518632

#define DIBUTTON_BBALLO_BACK_LINK 302073064

#define DIHATSWITCH_BBALLD_GLANCE 318785025

#define DI_NOTATTACHED 1

#define DIK_PGUP 201

#define DIBUTTON_BBALLO_PASS 301990915

#define DIBUTTON_SPACESIM_GLANCE_DOWN_LINK 117949672

#define DIBUTTON_HUNTING_SPECIAL 218104839

#define DIBUTTON_SOCCERO_FAKE 503317507

#define DIKEYBOARD_UNLABELED 2164262039

#define DIBUTTON_BASEBALLF_AIM_RIGHT_LINK 285263084

#define DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS 10

#define DIK_NUMLOCK 69

#define DIEFF_CARTESIAN 16

#define DIBUTTON_ARCADEP_VIEW_RIGHT_LINK 570934508

#define DIVIRTUAL_FIGHTING_HAND2HAND 134217728

#define DIAXIS_FLYINGC_FLAPS 67459590

#define DIBUTTON_HOCKEYD_FAKE 436208645

#define DIKEYBOARD_DIVIDE 2164262069

#define DIBUTTON_SPACESIM_FIRESECONDARY 117457929

#define DIKEYBOARD_PREVTRACK 2164262032

#define DIBUTTON_BASEBALLP_LEFT_LINK 268485860

#define DIBUTTON_FISHING_FORWARD_LINK 234964192

#define DIAXIS_3DCONTROL_ROTATEZ 604127750

#define DIAXIS_3DCONTROL_ROTATEY 604160517

#define DIAXIS_3DCONTROL_ROTATEX 604193284

#define DIBUTTON_FLYINGC_VIEW 67118081

#define DIBUTTON_BASEBALLB_LEFT_LINK 251708644

#define DIDSAM_FORCESAVE 2

#define DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK 117949676

#define DIAXIS_FLYINGM_FLAPS 84234758

#define DIDFT_BUTTON 12

#define DIEDBS_RECENTDEVICE 16

#define DIBUTTON_SPACESIM_GLANCE_UP_LINK 117949664

#define DIBUTTON_SKIING_SPECIAL1 486540292

#define DI8DEVTYPEDEVICECTRL_UNKNOWN 2

#define DIBUTTON_SKIING_SPECIAL2 486540294

#define DIAXIS_FISHING_ROTATE 235028995

#define DIBUTTON_BROWSER_HISTORY 671106057

#define DIAXIS_BIKINGM_PEDAL 469828098

#define DIDC_FFATTACK 512

#define DIK_COMMA 51

#define DIBUTTON_ARCADES_BACK_LINK 553731304

#define DIERR_EFFECTPLAYING 2147746312

#define DIDC_ATTACHED 1

#define DIKEYBOARD_MEDIASTOP 2164262052

#define DIBUTTON_ARCADES_LEFT_LINK 553698532

#define DIBUTTON_TPS_PAUSE 167789820

#define DI8DEVTYPEGAMEPAD_STANDARD 2

#define DIEFT_DEADBAND 16384

#define DIBUTTON_MECHA_WEAPONS 687866882

#define DIHATSWITCH_2DCONTROL_HATSWITCH 587220481

#define DIERR_INSUFFICIENTPRIVS 2147746304

#define DIBUTTON_BASEBALLB_BACK_LINK 251741416

#define DIAXIS_DRIVINGC_BRAKE 33821187

#define DIBUTTON_DRIVINGR_ACCELERATE_LINK 17028320

#define DIBUTTON_2DCONTROL_SPECIAL 587203587

#define DIBUTTON_BASEBALLF_THROW1 285213698

#define DIBUTTON_DRIVINGC_SHIFTUP 33573892

#define DIBUTTON_BASEBALLF_THROW2 285213699

#define DIHATSWITCH_FPS_GLANCE 151012865

#define DIK_NUMPADPLUS 78

#define DIERR_INVALIDPARAM 2147942487

#define DIK_PRIOR 201

#define DIBUTTON_FIGHTINGH_MENU 134219005

#define DIBUTTON_HOCKEYD_RIGHT_LINK 436258028

#define DIBUTTON_BROWSER_PAUSE 671106300

#define DIK_NUMPADPERIOD 83

#define DIVIRTUAL_SPORTS_HOCKEY_DEFENSE 436207616

#define DIAXIS_HOCKEYO_LATERAL 419463681

#define DIBUTTON_BASEBALLP_MENU 268436733

#define DIKEYBOARD_BACK 2164261902

#define DIAXIS_ANY_C_1 4278501889

#define DIAXIS_ANY_C_2 4278501890

#define DI8DEVTYPE_SUPPLEMENTAL 28

#define DIBUTTON_ARCADES_SPECIAL 553649156

#define DIKEYBOARD_LMENU 2164261944

#define DIBUTTON_BASEBALLF_BACK_LINK 285295848

#define DIHATSWITCH_FLYINGM_GLANCE 83904001

#define DIBUTTON_SOCCERD_MENU 520094973

#define DIKEYBOARD_DOWN 2164262096

#define DIBUTTON_GOLF_LEFT_LINK 402703588

#define DIBUTTON_BROWSER_NEXT 671106055

#define DIK_KANA 112

#define DIEDBS_MAPPEDPRI2 2

#define DIEDBS_MAPPEDPRI1 1

#define DIA_APPNOMAP 4

#define DIBUTTON_BASEBALLF_DEVICE 285230334

#define DI8DEVTYPEMOUSE_TRADITIONAL 2

#define DIKEYBOARD_CALCULATOR 2164262049

#define DIAFTS_NEWDEVICEHIGH 4294967295

#define DIBUTTON_HUNTING_CROUCH 218121225

#define DIAXIS_GOLF_MOVE 402719234

#define DIBUTTON_2DCONTROL_DISPLAY 587219973

#define DIA_APPMAPPED 2

#define DIBUTTON_SOCCERD_STEAL 520094722

#define DIBUTTON_FPS_APPLY 150995971

#define DIBUTTON_BBALLD_RIGHT_LINK 318817516

#define DIBUTTON_SOCCERO_MENU 503317757

#define DIK_NUMPADMINUS 74

#define DI8DEVTYPESUPPLEMENTAL_HEADTRACKER 4

#define DIAXIS_GOLF_LATERAL 402686465

#define DIBUTTON_FIGHTINGH_SELECT 134235144

#define DIBUTTON_FISHING_JUMP 234898440

#define DIK_WEBSEARCH 229

#define DIBUTTON_HUNTING_ROTATE_RIGHT_LINK 218252524

#define DIK_WEBREFRESH 231

#define DIBUTTON_MECHA_RIGHT_LINK 687916268

#define DIBUTTON_BASEBALLB_BOX 251675658

#define DIBUTTON_DRIVINGT_ACCELERATE_LINK 50582752

#define DIEFT_POSNEGCOEFFICIENTS 4096

#define DIPROP_CPOINTS 21

#define DIAXIS_REMOTE_SLIDER 654639617

#define DIKEYBOARD_LWIN 2164262107

#define DIDFT_COLLECTION 64

#define DIBUTTON_MECHA_CENTER 687883271

#define DIBUTTON_FIGHTINGH_JUMP 134218757

#define DIBUTTON_ARCADEP_VIEW_LEFT_LINK 570934500

#define DIBUTTON_BASEBALLB_RIGHT_LINK 251708652

#define DIKEYBOARD_YEN 2164262013

#define DIAXIS_BROWSER_MOVE 671154690

#define DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS 13

#define DIPROP_TYPENAME 26

#define DIBUTTON_HOCKEYO_STRATEGY 419447815

#define DIAFTS_UNUSEDDEVICEHIGH 0

#define DIDSAM_NOUSER 1

#define DIK_LBRACKET 26

#define DIEP_AXES 32

#define DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE 9

#define DIEGES_PLAYING 1

#define DIBUTTON_STRATEGYT_DISPLAY 201344008

#define DIBUTTON_BBALLO_RIGHT_LINK 302040300

#define DIBUTTON_BASEBALLB_MENU 251659517

#define DIBUTTON_FLYINGM_MENU 83887357

#define DIAXIS_BBALLD_LATERAL 318800385

#define DIERR_MOREDATA 2147746306

#define DIBUTTON_MECHA_ZOOM 687866885

#define DIBUTTON_BBALLD_BURST 318768134

#define DIBUTTON_FISHING_MENU 234882301

#define DIBUTTON_SOCCERO_SHOOTLOW 503333896

#define DIDFT_ANYINSTANCE 16776960

#define DIBUTTON_CADM_PAUSE 637551868

#define DIBUTTON_FLYINGC_BRAKE_LINK 67398880

#define DIBUTTON_FOOTBALLQ_AUDIBLE 352338953

#define DIBUTTON_FLYINGM_FIRE 83889153

#define DIBUTTON_REMOTE_TUNER 654334988

#define DISFFC_SETACTUATORSON 16

#define DIBUTTON_3DCONTROL_DISPLAY 603997189

#define DIBUTTON_FLYINGC_GLANCE_UP_LINK 67618016

#define DIBUTTON_CADM_MENU 637535485

#define DIAXIS_3DCONTROL_MOVE 604045826

#define DIK_VOLUMEDOWN 174

#define DIGFFS_ACTUATORSON 16

#define DIK_KANJI 148

#define DIEFT_SATURATION 2048

#define DI8DEVTYPEGAMEPAD_TILT 3

#define DIVIRTUAL_STRATEGY_TURN 201326592

#define DIPROP_PHYSICALRANGE 18

#define DIVIRTUAL_CAD_FLYBY 620756992

#define DIKEYBOARD_GRAVE 2164261929

#define DIKEYBOARD_LCONTROL 2164261917

#define DIKEYBOARD_PERIOD 2164261940

#define DIBUTTON_FOOTBALLO_LEFT_LINK 369149156

#define DIEFT_PERIODIC 3

#define DIK_SPACE 57

#define DIBUTTON_FPS_DISPLAY 151012360

#define DIBUTTON_SOCCERD_FAKE 520094723

#define DI8DEVTYPEKEYBOARD_UNKNOWN 0

#define DIK_MEDIASELECT 237

#define DIERR_NOAGGREGATION 2147746064

#define DIERR_BETADIRECTINPUTVERSION 2147943553

#define DIBUTTON_BIKINGM_SPECIAL1 469763075

#define DIAXIS_DRIVINGT_ROTATE 50463236

#define DIBUTTON_BIKINGM_SPECIAL2 469763077

#define DISFFC_CONTINUE 8

#define DIHATSWITCH_FIGHTINGH_SLIDE 134235649

#define DIBUTTON_DRIVINGT_PAUSE 50349308

#define DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK 34063588

#define DIBUTTON_FOOTBALLO_RIGHTARM 369099779

#define DIKEYBOARD_RIGHT 2164262093

#define DIK_LSHIFT 42

#define DIA_NORANGE 8

#define DIBUTTON_STRATEGYT_APPLY 201327619

#define DIBUTTON_BASEBALLF_MENU 285213949

#define DIAXIS_ANY_1 4278206977

#define DIAXIS_ANY_3 4278206979

#define DIAXIS_ANY_2 4278206978

#define DIBUTTON_STRATEGYT_FORWARD_LINK 201409760

#define DIAXIS_ANY_4 4278206980

#define DIBUTTON_SPACESIM_RAISE 117457926

#define DIHATSWITCH_SOCCERD_GLANCE 520111617

#define DIBUTTON_FOOTBALLO_DIVE 369116169

#define DIBUTTON_HOCKEYO_SUBSTITUTE 419447817

#define DIEB_NOTRIGGER 4294967295

#define DIBUTTON_FIGHTINGH_KICK 134218754

#define DIDFT_FFACTUATOR 16777216

#define DIBUTTON_SPACESIM_PAUSE 117458172

#define DIKEYBOARD_PLAYPAUSE 2164262050

#define DIVIRTUAL_FLYING_CIVILIAN 67108864

#define DIBUTTON_FLYINGM_DISPLAY 83911686

#define DIKEYBOARD_VOLUMEUP 2164262064

#define DI8DEVTYPEDRIVING_THREEPEDALS 4

#define DISFFC_RESET 1

#define DI8DEVTYPEDRIVING_COMBINEDPEDALS 2

#define DIHATSWITCH_TPS_GLANCE 167790081

#define DIBUTTON_BBALLO_BURST 301990919

#define DIAXIS_STRATEGYT_LATERAL 201359873

#define DIAXIS_FLYINGH_THROTTLE 100915717

#define DIBUTTON_CADM_SPECIAL2 637535236

#define DIBUTTON_CADM_SPECIAL1 637535234

#define DIBUTTON_STRATEGYR_ATTACK 184550404

#define DIKEYBOARD_SLASH 2164261941

#define DIDOI_ASPECTFORCE 1024

#define DIAXIS_SOCCERD_LATERAL 520126977

#define DIBUTTON_STRATEGYR_BACK_LINK 184632552

#define DI_POLLEDDEVICE 2

#define DIAXIS_SPACESIM_THROTTLE 117670403

#define DIAXIS_FLYINGC_THROTTLE 67342851

#define DIEFT_CUSTOMFORCE 5

#define DIVIRTUAL_SPORTS_BASEBALL_FIELD 285212672

#define DIBUTTON_CADM_DISPLAY 637551621

#define DIKEYBOARD_SUBTRACT 2164261962

#define DISCL_FOREGROUND 4

#define DIK_NUMPAD3 81

#define DIK_NUMPAD2 80

#define DIK_NUMPAD5 76

#define DIK_NUMPAD4 75

#define DIK_NUMPAD7 71

#define DI8DEVTYPEDEVICECTRL_COMMSSELECTION 3

#define DIK_NUMPAD6 77

#define DIK_NUMPAD9 73

#define DIK_NUMPAD8 72

#define DIK_NUMPAD1 79

#define DIK_NUMPAD0 82

#define DIBUTTON_HUNTING_AIM 218104834

#define DIBUTTON_HOCKEYG_MENU 452986109

#define DIBUTTON_RACQUET_LEFT_LINK 536921316

#define DIKEYBOARD_RWIN 2164262108

#define DIK_COLON 146

#define DIBUTTON_STRATEGYR_FORWARD_LINK 184632544

#define DIBUTTON_STRATEGYT_TEAM 201327620

#define DIDIFT_CONFIGURATION 1

#define DIBUTTON_FLYINGC_GLANCE_DOWN_LINK 67618024

#define JOY_HWS_ISHEADTRACKER 33554432

#define DIBUTTON_SKIING_SLOWER_LINK 486622440

#define DIBUTTON_3DCONTROL_SPECIAL2 603980804

#define DIK_BACKSPACE 14

#define DIBUTTON_FOOTBALLO_TURBO 369116168

#define DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK 50480364

#define DI8DEVTYPEMOUSE_FINGERSTICK 3

#define DIBUTTON_BASEBALLF_AIM_LEFT_LINK 285263076

#define DIBUTTON_BBALLO_FORWARD_LINK 302073056

#define DIBUTTON_3DCONTROL_SPECIAL1 603980802

#define DIBUTTON_SOCCERO_FORWARD_LINK 503399648

#define DIK_WAKE 227

#define DIAXIS_ARCADEP_LATERAL 570458625

#define DIERR_OUTOFMEMORY 2147942414

#define DIDAL_TOPALIGNED 4

#define DIK_SLEEP 223

#define DIPROP_CALIBRATION 11

#define DIBUTTON_FOOTBALLP_MENU 335545597

#define DIEP_START 536870912

#define DIAXIS_TPS_STEP 167821827

#define DIK_LALT 56

#define DIBUTTON_REMOTE_CUE 654320644

#define DIBUTTON_FIGHTINGH_SPECIAL1 134218758

#define DIBUTTON_FIGHTINGH_SPECIAL2 134218759

#define DIBUTTON_BASEBALLP_WALK 268452870

#define DIEP_DURATION 1

#define DIBUTTON_FOOTBALLD_RIGHT_LINK 385926380

#define DIAXIS_2DCONTROL_MOVE 587268610

#define DIBUTTON_SOCCERO_RIGHT_LINK 503366892

#define DIERR_DEVICEFULL 2147746305

#define DIAXIS_CADM_ROTATEZ 637682182

#define DIAXIS_CADM_ROTATEX 637747716

#define DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK 470041832

#define DIAXIS_CADM_ROTATEY 637714949

#define DIFEF_INCLUDENONSTANDARD 1

#define JOY_HWS_ISGAMEPORTBUS 2147483648

#define DIBUTTON_BBALLO_DEVICE 302007550

#define DIBUTTON_FISHING_DISPLAY 234898438

#define DIHATSWITCH_ARCADEP_VIEW 570443265

#define DIBUTTON_SOCCERO_PAUSE 503334140

#define DIBUTTON_ARCADEP_SELECT 570426373

#define DIKEYBOARD_WEBREFRESH 2164262119

#define DI8DEVTYPEKEYBOARD_NOKIA9140 6

#define DIBUTTON_FPS_DODGE 151012361

#define DIDOI_GUIDISUSAGE 65536

#define DIBUTTON_SOCCERD_SELECT 520094726

#define DIEDBSFL_AVAILABLEDEVICES 4096

#define DIBUTTON_MECHA_TARGET 687866883

#define DIK_CAPITAL 58

#define DIBUTTON_ARCADES_SELECT 553649157

#define DIDC_STARTDELAY 32768

#define DIBUTTON_FPS_ROTATE_LEFT_LINK 151045348

#define DIBUTTON_2DCONTROL_DEVICE 587220222

#define DIAXIS_FOOTBALLQ_LATERAL 352354817

#define DIKEYBOARD_WEBHOME 2164262066

#define DIBUTTON_FLYINGM_BRAKE_LINK 84174048

#define DIKEYBOARD_LEFT 2164262091

#define DIBUTTON_SOCCERD_SLIDE 520094727

#define DIBUTTON_HUNTING_RIGHT_LINK 218154220

#define DIBUTTON_HOCKEYG_POKE 452985858

#define DIAXIS_DRIVINGT_BARREL 50397698

#define DIGFFS_DEVICELOST 2147483648

#define DIBUTTON_BROWSER_FAVORITES 671106054

#define DIDAL_LEFTALIGNED 1

#define DIBUTTON_SKIING_ZOOM 486556679

#define DIDOI_ASPECTACCEL 768

#define DIAXIS_SPACESIM_MOVE 117506562

#define DIAXIS_FPS_LOOKUPDOWN 151093763

#define DIBUTTON_BBALLO_JAB 302007307

#define DIDBAM_DEFAULT 0

#define DIAXIS_CADF_ROTATEZ 620904966

#define DIAXIS_CADF_ROTATEY 620937733

#define DIAXIS_CADF_ROTATEX 620970500

#define DIAXIS_SKIING_SPEED 486605314

#define DIVIRTUAL_SPORTS_BASEBALL_PITCH 268435456

#define DIERR_NOTINITIALIZED 2147942421

#define DIBUTTON_DRIVINGR_MAP 16794631

#define DIA_APPFIXED 16

#define DIBUTTON_FLYINGC_DEVICE 67126526

#define DIBUTTON_HOCKEYO_DEVICE 419448062

#define DIERR_NOTBUFFERED 2147746311

#define DI8DEVTYPE_LIMITEDGAMESUBTYPE 1

#define DIERR_INCOMPLETEEFFECT 2147746310

#define DIBUTTON_BASEBALLB_DEVICE 251675902

#define DIK_4 5

#define DIK_3 4

#define DIK_2 3

#define DIK_1 2

#define DIK_0 11

#define DIEDFL_INCLUDEALIASES 65536

#define DIK_9 10

#define DIK_8 9

#define DIK_7 8

#define DIK_6 7

#define DIK_5 6

#define DIK_D 32

#define DIK_C 46

#define DIK_B 48

#define DIK_A 30

#define DIK_L 38

#define DIK_K 37

#define DIK_J 36

#define DIK_I 23

#define DIBUTTON_FOOTBALLQ_PASS 352322565

#define DIBUTTON_STRATEGYR_MAP 184566792

#define DIK_H 35

#define DIK_G 34

#define DIK_F 33

#define DIK_E 18

#define DIK_T 20

#define DIK_S 31

#define DIK_R 19

#define DIK_Q 16

#define DIBUTTON_FLYINGH_WEAPONS 100668418

#define DIK_P 25

#define DIVIRTUAL_ARCADE_SIDE2SIDE 553648128

#define DIK_O 24

#define DIK_N 49

#define DIK_M 50

#define DIK_Z 44

#define DIK_Y 21

#define DIK_X 45

#define DIK_W 17

#define DIK_V 47

#define DIK_U 22

#define DIBUTTON_SKIING_PAUSE 486556924

#define DIBUTTON_SKIING_CROUCH 486540290

#define DIBUTTON_RACQUET_DEVICE 536888574

#define DIBUTTON_STRATEGYT_TURN 201327621

#define DIBUTTON_TPS_VIEW 167789574

#define DIERR_OLDDIRECTINPUTVERSION 2147943550

#define DIBUTTON_DRIVINGR_BOOST 16794632

#define DIAXIS_FLYINGM_RUDDER 84036100

#define DIBUTTON_FPS_PAUSE 151012604

#define DIEFF_SPHERICAL 64

#define DIAXIS_ARCADES_LATERAL 553681409

#define DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE 301989888

#define DIBUTTON_SPACESIM_SLOWER_LINK 117687528

#define DIK_RMENU 184

#define DIBUTTON_SOCCERO_SPECIAL1 503317509

#define DIVIRTUAL_DRIVING_COMBAT 33554432

#define MAXCPOINTSNUM 8

#define DIVIRTUAL_SPORTS_GOLF 402653184

#define DIBUTTON_STRATEGYR_DISPLAY 184566793

#define DIAXIS_HOCKEYD_LATERAL 436240897

#define DIBUTTON_SPACESIM_LOWER 117457927

#define DIPROPAUTOCENTER_ON 1

#define DIBUTTON_STRATEGYR_CAST 184550405

#define DIBUTTON_STRATEGYT_INSTRUCT 201327618

#define DIBUTTON_TPS_RUN 167773185

#define DIBUTTON_BROWSER_PREVIOUS 671106056

#define DI8DEVTYPEREMOTE_UNKNOWN 2

#define DIBUTTON_DRIVINGR_DASHBOARD 16794629

#define DIBUTTON_ARCADEP_LEFT_LINK 570475748

#define DI8DEVTYPEJOYSTICK_STANDARD 2

#define DIBUTTON_STRATEGYR_APPLY 184550402

#define DIBUTTON_REMOTE_MUTE 654312449

#define DIBUTTON_HOCKEYO_ZOOM 419447814

#define DIKEYBOARD_RETURN 2164261916

#define DIBUTTON_STRATEGYT_RIGHT_LINK 201377004

#define DIHATSWITCH_HUNTING_GLANCE 218121729

#define DIBUTTON_BASEBALLB_FORWARD_LINK 251741408

#define DIK_SCROLL 70

#define DIBUTTON_BBALLD_FORWARD_LINK 318850272

#define DIKEYBOARD_PAUSE 2164262085

#define DIK_EQUALS 13

#define DIEFT_RAMPFORCE 2

#define DIBUTTON_ARCADES_MENU 553649405

#define DIBUTTON_FOOTBALLD_MENU 385877245

#define DIBUTTON_HOCKEYD_TIMEOUT 436225032

#define DIBUTTON_HOCKEYG_RIGHT_LINK 453035244

#define DIBUTTON_HOCKEYD_LEFT_LINK 436258020

#define DIBUTTON_HOCKEYD_BURST 436208643

#define DIK_MULTIPLY 55

#define DIK_ESCAPE 1

#define DIHATSWITCH_DRIVINGR_GLANCE 16795137

#define DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK 50480356

#define DIPROPCALIBRATIONMODE_RAW 1

#define DIK_SYSRQ 183

#define DIBUTTON_FOOTBALLO_THROW 369099780

#define DI8DEVTYPEKEYBOARD_NOKIA1050 5

#define DIBUTTON_ARCADES_RIGHT_LINK 553698540

#define DIKEYBOARD_END 2164262095

#define DIBUTTON_FPS_GLANCE_DOWN_LINK 151110888

#define DIBUTTON_HOCKEYG_DEVICE 453002494

#define DIBUTTON_DRIVINGR_VIEW 16784387

#define DIAXIS_REMOTE_SLIDER2 654656002

#define DIBUTTON_HOCKEYG_SUBSTITUTE 453002248

#define DIBUTTON_FOOTBALLD_TACKLE 385876996

#define DIAXIS_SPACESIM_LATERAL 117473793

#define DIKEYBOARD_NUMPADCOMMA 2164262067

#define DIKEYBOARD_APOSTROPHE 2164261928

#define DIAXIS_3DCONTROL_LATERAL 604013057

#define DIFEF_DEFAULT 0

#define DIHATSWITCH_HOCKEYG_SCROLL 453002753

#define DIKEYBOARD_F11 2164261975

#define DIKEYBOARD_F10 2164261956

#define DIK_WEBHOME 178

#define DIKEYBOARD_F13 2164261988

#define DIKEYBOARD_F12 2164261976

#define DIKEYBOARD_F15 2164261990

#define DIKEYBOARD_F14 2164261989

#define DI8DEVTYPE1STPERSON_UNKNOWN 2

#define DIES_NODOWNLOAD 2147483648

#define DIBUTTON_BASEBALLB_SLIDE 251659271

#define DIBUTTON_FISHING_LEFT_LINK 234931428

#define DIAXIS_FLYINGC_BANK 67144193

#define DIBUTTON_GOLF_FLYBY 402654214

#define DIK_CIRCUMFLEX 144

#define DIBUTTON_BIKINGM_SLOWER_LINK 469845224

#define DIENUM_STOP 0

#define DIK_MUTE 160

#define DIBUTTON_DRIVINGC_ACCELERATE_LINK 33805536

#define DIPROP_RANGE 4

#define DI_TRUNCATED 8

#define DIBUTTON_TPS_DEVICE 167789822

#define DIAXIS_DRIVINGR_ACCEL_AND_BRAKE 16861700

#define DIBUTTON_FISHING_TYPE 234882050

#define DIBUTTON_STRATEGYT_PAUSE 201344252

#define DIVIRTUAL_DRIVING_RACE 16777216

#define DIBUTTON_SPACESIM_BACKWARD_LINK 117523688

#define DIVOICE_RECORDMUTE 2197816331

#define DIBUTTON_RACQUET_SPECIAL 536871940

#define DIAXIS_MECHA_ROTATE 687997443

#define DIBUTTON_REMOTE_DVD 654334989

#define DIDC_FFFADE 1024

#define DIBUTTON_FOOTBALLO_JUMP 369099777

#define DIBUTTON_FOOTBALLD_SPIN 385893383

#define DIKEYBOARD_NUMPAD3 2164261969

#define DIKEYBOARD_NUMPAD2 2164261968

#define DIKEYBOARD_NUMPAD1 2164261967

#define DIKEYBOARD_NUMPAD0 2164261970

#define DIKEYBOARD_NUMPAD7 2164261959

#define DIBUTTON_HOCKEYD_DEVICE 436225278

#define DIKEYBOARD_NUMPAD6 2164261965

#define DIKEYBOARD_NUMPAD5 2164261964

#define DIKEYBOARD_NUMPAD4 2164261963

#define DIKEYBOARD_NUMPAD9 2164261961

#define DIKEYBOARD_NUMPAD8 2164261960

#define DIBUTTON_GOLF_FORWARD_LINK 402736352

#define DIDFT_ABSAXIS 2

#define DIBUTTON_FOOTBALLD_BULLRUSH 385893385

#define DIBUTTON_BBALLO_DUNK 301990914

#define JOY_HWS_GAMEPORTBUSBUSY 1

#define DIBUTTON_BIKINGM_JUMP 469763073

#define DI_TRUNCATEDANDRESTARTED 12

#define DIBUTTON_STRATEGYT_ZOOM 201344006

#define DIBUTTON_SPACESIM_TARGET 117441539

#define DIKEYBOARD_KANA 2164262000

#define DIGFFS_PAUSED 4

#define DIAXIS_DRIVINGC_STEER 33589761

#define DIAXIS_ANY_V_2 4278403586

#define DIAXIS_ANY_V_1 4278403585

#define DIBUTTON_BROWSER_SEARCH 671106051

#define DIBUTTON_FLYINGM_SLOWER_LINK 84137192

#define DI8DEVTYPESUPPLEMENTAL_UNKNOWN 2

#define DIKEYBOARD_MINUS 2164261900

#define DIK_HOME 199

#define DIBUTTON_REMOTE_ADJUST 654334990

#define DIEFT_FFFADE 1024

#define DIBUTTON_ARCADEP_SPECIAL 570426372

#define DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK 34063596

#define DIGFFS_STOPPED 2

#define DIK_END 207

#define DIPROP_INSTANCENAME 13

#define DI8DEVTYPEKEYBOARD_NEC98 7

#define DIKEYBOARD_NEXTTRACK 2164262041

#define DIBUTTON_REMOTE_CHANGE 654320646

#define DIBUTTON_FLYINGC_FASTER_LINK 67359968

#define DIBUTTON_FOOTBALLO_JUKE 369116166

#define DIBUTTON_DRIVINGR_PAUSE 16794876

#define DIK_NUMPADEQUALS 141

#define DIBUTTON_SOCCERO_SELECT 503317510

#define DI8DEVTYPESUPPLEMENTAL_SHIFTER 7

#define DIBUTTON_GOLF_UP 402654211

#define DIBUTTON_BBALLO_CALL 301990920

#define DIK_F14 101

#define DIBUTTON_FOOTBALLQ_DEVICE 352339198

#define DIK_F15 102

#define DIK_F12 88

#define DIK_F13 100

#define DIBUTTON_FOOTBALLD_FAKE 385876997

#define DIK_F10 68

#define DIK_F11 87

#define DIEDFL_INCLUDEPHANTOMS 131072

#define DIDBAM_HWDEFAULTS 4

#define DI8DEVTYPEKEYBOARD_NEC98106 9

#define DIBUTTON_HOCKEYO_BACK_LINK 419513576

#define DIKEYBOARD_OEM_102 2164261974

#define DIBUTTON_SKIING_LEFT_LINK 486589668

#define DIEP_ALLPARAMS 1023

#define DIDC_HIDDEN 262144

#define DIBUTTON_CADF_SPECIAL2 620758020

#define DI8DEVTYPEKEYBOARD_OLIVETTI 2

#define DIAXIS_DRIVINGT_ACCEL_AND_BRAKE 50416134

#define DIHATSWITCH_FLYINGH_GLANCE 100681217

#define DIBUTTON_CADF_SPECIAL1 620758018

#define DIBUTTON_SOCCERO_CONTROL 503333900

#define DIVIRTUAL_SPORTS_SOCCER_DEFENSE 520093696

#define DIBUTTON_BIKINGM_MENU 469763325

#define DIBUTTON_GOLF_MENU 402654461

#define DIBUTTON_FOOTBALLO_MENU 369100029

#define DIBUTTON_ARCADES_VIEW_DOWN_LINK 554157288

#define DIERR_UNPLUGGED 2147746313

#define DIBUTTON_HOCKEYD_PAUSE 436225276

#define DIBUTTON_GOLF_PAUSE 402670844

#define DIK_NUMPADSLASH 181

#define DIBUTTON_BASEBALLF_JUMP 285213701

#define DIEDFL_ALLDEVICES 0

#define DIAXIS_STRATEGYT_MOVE 201392642

#define DIERR_ALREADYINITIALIZED 2147943647

#define DIBUTTON_BROWSER_DEVICE 671106302

#define DIBUTTON_BIKINGM_PAUSE 469779708

#define DIAH_HWAPP 4

#define DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK 184698084

#define DIBUTTON_STRATEGYR_PAUSE 184567036

#define DIAXIS_CADF_INOUT 620855811

#define DIBUTTON_SOCCERO_PLAYER 503317508

#define DIBUTTON_GOLF_DEVICE 402670846

#define DIKEYBOARD_CAPITAL 2164261946

#define DIBUTTON_BASEBALLP_FORWARD_LINK 268518624

#define DIBUTTON_BBALLD_SPECIAL 318768132

#define DIHATSWITCH_SPACESIM_GLANCE 117458433

#define DIERR_REPORTFULL 2147746314

#define DI8DEVTYPEKEYBOARD_JAPAN106 10

#define DIDFT_INSTANCEMASK 16776960

typedef struct _D3DCAPS8 _D3DCAPS8, *P_D3DCAPS8;

typedef struct _D3DCAPS8 D3DCAPS8;

typedef enum _D3DDEVTYPE {
    D3DDEVTYPE_HAL=1,
    D3DDEVTYPE_REF=2,
    D3DDEVTYPE_SW=3,
    D3DDEVTYPE_FORCE_DWORD=2147483647
} _D3DDEVTYPE;

typedef enum _D3DDEVTYPE D3DDEVTYPE;

struct _D3DCAPS8 {
    D3DDEVTYPE DeviceType;
    UINT AdapterOrdinal;
    DWORD Caps;
    DWORD Caps2;
    DWORD Caps3;
    DWORD PresentationIntervals;
    DWORD CursorCaps;
    DWORD DevCaps;
    DWORD PrimitiveMiscCaps;
    DWORD RasterCaps;
    DWORD ZCmpCaps;
    DWORD SrcBlendCaps;
    DWORD DestBlendCaps;
    DWORD AlphaCmpCaps;
    DWORD ShadeCaps;
    DWORD TextureCaps;
    DWORD TextureFilterCaps;
    DWORD CubeTextureFilterCaps;
    DWORD VolumeTextureFilterCaps;
    DWORD TextureAddressCaps;
    DWORD VolumeTextureAddressCaps;
    DWORD LineCaps;
    DWORD MaxTextureWidth;
    DWORD MaxTextureHeight;
    DWORD MaxVolumeExtent;
    DWORD MaxTextureRepeat;
    DWORD MaxTextureAspectRatio;
    DWORD MaxAnisotropy;
    float MaxVertexW;
    float GuardBandLeft;
    float GuardBandTop;
    float GuardBandRight;
    float GuardBandBottom;
    float ExtentsAdjust;
    DWORD StencilCaps;
    DWORD FVFCaps;
    DWORD TextureOpCaps;
    DWORD MaxTextureBlendStages;
    DWORD MaxSimultaneousTextures;
    DWORD VertexProcessingCaps;
    DWORD MaxActiveLights;
    DWORD MaxUserClipPlanes;
    DWORD MaxVertexBlendMatrices;
    DWORD MaxVertexBlendMatrixIndex;
    float MaxPointSize;
    DWORD MaxPrimitiveCount;
    DWORD MaxVertexIndex;
    DWORD MaxStreams;
    DWORD MaxStreamStride;
    DWORD VertexShaderVersion;
    DWORD MaxVertexShaderConst;
    DWORD PixelShaderVersion;
    float MaxPixelShaderValue;
};

#define D3DPTEXTURECAPS_POW2 2

#define D3DSTENCILCAPS_REPLACE 4

#define D3DPMISCCAPS_CLIPPLANESCALEDPOINTS 256

#define D3DPRESENT_INTERVAL_ONE 1

#define D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA 1048576

#define D3DCAPS2_FULLSCREENGAMMA 131072

#define D3DPRASTERCAPS_FOGVERTEX 128

#define D3DTEXOPCAPS_DOTPRODUCT3 8388608

#define D3DPCMPCAPS_ALWAYS 128

#define D3DPRASTERCAPS_FOGRANGE 65536

#define D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR 524288

#define D3DPBLENDCAPS_INVSRCCOLOR 8

#define D3DPSHADECAPS_SPECULARGOURAUDRGB 512

#define D3DDEVCAPS_NPATCHES 16777216

#define D3DPTEXTURECAPS_MIPVOLUMEMAP 32768

#define D3DLINECAPS_ZTEST 2

#define D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE 8388608

#define D3DPRESENT_INTERVAL_TWO 2

#define D3DTEXOPCAPS_BLENDTEXTUREALPHAPM 16384

#define D3DTEXOPCAPS_ADDSIGNED 128

#define D3DPMISCCAPS_CLIPTLVERTS 512

#define D3DDEVCAPS_HWTRANSFORMANDLIGHT 65536

#define D3DTEXOPCAPS_ADDSIGNED2X 256

#define D3DDEVCAPS_EXECUTESYSTEMMEMORY 16

#define D3DTEXOPCAPS_ADDSMOOTH 1024

#define D3DPCMPCAPS_EQUAL 4

#define D3DLINECAPS_TEXTURE 1

#define D3DVTXPCAPS_TEXGEN 1

#define D3DSTENCILCAPS_DECRSAT 16

#define D3DDEVCAPS_PUREDEVICE 1048576

#define D3DPBLENDCAPS_BOTHSRCALPHA 2048

#define D3DPMISCCAPS_COLORWRITEENABLE 128

#define D3DVTXPCAPS_NO_VSDT_UBYTE4 128

#define D3DDEVCAPS_TEXTURENONLOCALVIDMEM 4096

#define D3DPRASTERCAPS_ZBUFFERLESSHSR 32768

#define D3DDEVCAPS_DRAWPRIMITIVES2EX 32768

#define D3DPMISCCAPS_BLENDOP 2048

#define D3DPTADDRESSCAPS_BORDER 8

#define D3DPTFILTERCAPS_MIPFPOINT 65536

#define D3DDEVCAPS_TLVERTEXSYSTEMMEMORY 64

#define D3DDEVCAPS_TLVERTEXVIDEOMEMORY 128

#define D3DPTFILTERCAPS_MAGFAFLATCUBIC 134217728

#define D3DTEXOPCAPS_ADD 64

#define D3DPMISCCAPS_TSSARGTEMP 1024

#define D3DCURSORCAPS_LOWRES 2

#define D3DPBLENDCAPS_INVSRCALPHA 32

#define D3DTEXOPCAPS_BUMPENVMAP 2097152

#define D3DPCMPCAPS_LESSEQUAL 8

#define D3DDEVCAPS_RTPATCHHANDLEZERO 8388608

#define D3DPRASTERCAPS_WBUFFER 262144

#define D3DPMISCCAPS_CULLCW 32

#define D3DTEXOPCAPS_MODULATE2X 16

#define D3DFVFCAPS_TEXCOORDCOUNTMASK 65535

#define D3DPTEXTURECAPS_VOLUMEMAP_POW2 262144

#define D3DDEVCAPS_QUINTICRTPATCHES 2097152

#define D3DTEXOPCAPS_BLENDCURRENTALPHA 32768

#define D3DPBLENDCAPS_SRCALPHASAT 1024

#define D3DPTEXTURECAPS_PERSPECTIVE 1

#define D3DPRASTERCAPS_ZBIAS 16384

#define D3DPRASTERCAPS_ANTIALIASEDGES 4096

#define D3DLINECAPS_FOG 16

#define D3DPMISCCAPS_MASKZ 2

#define D3DPRASTERCAPS_COLORPERSPECTIVE 4194304

#define D3DPMISCCAPS_LINEPATTERNREP 4

#define D3DPRESENT_INTERVAL_IMMEDIATE 2147483648

#define D3DCAPS2_RESERVED 33554432

#define D3DCAPS2_CANRENDERWINDOWED 524288

#define D3DPTFILTERCAPS_MINFLINEAR 512

#define D3DTEXOPCAPS_SUBTRACT 512

#define D3DPRASTERCAPS_ZTEST 16

#define D3DPRESENT_INTERVAL_DEFAULT 0

#define D3DPRASTERCAPS_MIPMAPLODBIAS 8192

#define D3DPTFILTERCAPS_MAGFPOINT 16777216

#define D3DPTEXTURECAPS_NONPOW2CONDITIONAL 256

#define D3DPBLENDCAPS_DESTALPHA 64

#define D3DPBLENDCAPS_INVDESTCOLOR 512

#define D3DTEXOPCAPS_MODULATE4X 32

#define D3DPTFILTERCAPS_MIPFLINEAR 131072

#define D3DTEXOPCAPS_SELECTARG1 2

#define D3DTEXOPCAPS_SELECTARG2 4

#define D3DPBLENDCAPS_DESTCOLOR 256

#define D3DLINECAPS_ALPHACMP 8

#define D3DPRASTERCAPS_WFOG 1048576

#define D3DPBLENDCAPS_INVDESTALPHA 128

#define D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR 131072

#define D3DTEXOPCAPS_MULTIPLYADD 16777216

#define D3DPTFILTERCAPS_MINFANISOTROPIC 1024

#define D3DPRASTERCAPS_DITHER 1

#define D3DPTADDRESSCAPS_CLAMP 4

#define D3DPTEXTURECAPS_MIPCUBEMAP 65536

#define D3DSTENCILCAPS_KEEP 1

#define D3DDEVCAPS_SEPARATETEXTUREMEMORIES 16384

#define D3DPTADDRESSCAPS_WRAP 1

#define D3DPRASTERCAPS_ANISOTROPY 131072

#define D3DSTENCILCAPS_INCRSAT 8

#define D3DDEVCAPS_RTPATCHES 4194304

#define D3DFVFCAPS_DONOTSTRIPELEMENTS 524288

#define D3DPBLENDCAPS_ONE 2

#define D3DPTEXTURECAPS_MIPMAP 16384

#define D3DCURSORCAPS_COLOR 1

#define D3DDEVCAPS_CANRENDERAFTERFLIP 2048

#define D3DPTFILTERCAPS_MINFPOINT 256

#define D3DVTXPCAPS_POSITIONALLIGHTS 16

#define D3DPTEXTURECAPS_PROJECTED 1024

#define D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC 268435456

#define D3DTEXOPCAPS_LERP 33554432

#define D3DPRESENT_INTERVAL_THREE 4

#define D3DPBLENDCAPS_BOTHINVSRCALPHA 4096

#define D3DCAPS2_NO2DDURING3DSCENE 2

#define D3DPTEXTURECAPS_VOLUMEMAP 8192

#define D3DFVFCAPS_PSIZE 1048576

#define D3DPBLENDCAPS_ZERO 1

#define D3DDEVCAPS_EXECUTEVIDEOMEMORY 32

#define D3DPTADDRESSCAPS_INDEPENDENTUV 16

#define D3DCAPS_READ_SCANLINE 131072

#define D3DPCMPCAPS_LESS 2

#define D3DDEVCAPS_HWRASTERIZATION 524288

#define D3DCAPS2_CANCALIBRATEGAMMA 1048576

#define D3DPSHADECAPS_ALPHAGOURAUDBLEND 16384

#define D3DVTXPCAPS_LOCALVIEWER 32

#define D3DPCMPCAPS_GREATER 16

#define D3DTEXOPCAPS_BLENDTEXTUREALPHA 4096

#define D3DPSHADECAPS_FOGGOURAUD 524288

#define D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE 64

#define D3DPTADDRESSCAPS_MIRROR 2

#define D3DDEVCAPS_TEXTURESYSTEMMEMORY 256

#define D3DPTADDRESSCAPS_MIRRORONCE 32

#define D3DPTEXTURECAPS_ALPHA 4

#define D3DPCMPCAPS_NEVER 1

#define D3DSTENCILCAPS_INVERT 32

#define D3DPCMPCAPS_GREATEREQUAL 64

#define D3DPMISCCAPS_CULLCCW 64

#define D3DVTXPCAPS_MATERIALSOURCE7 2

#define D3DTEXOPCAPS_PREMODULATE 65536

#define D3DPTEXTURECAPS_SQUAREONLY 32

#define D3DPSHADECAPS_COLORGOURAUDRGB 8

#define D3DPMISCCAPS_CULLNONE 16

#define D3DPTEXTURECAPS_ALPHAPALETTE 128

#define D3DCAPS3_RESERVED 2147483679

#define D3DPTFILTERCAPS_MAGFLINEAR 33554432

#define D3DPRESENT_INTERVAL_FOUR 8

#define D3DSTENCILCAPS_ZERO 2

#define D3DPBLENDCAPS_SRCALPHA 16

#define D3DDEVCAPS_DRAWPRIMTLVERTEX 1024

#define D3DDEVCAPS_DRAWPRIMITIVES2 8192

#define D3DPRASTERCAPS_FOGTABLE 256

#define D3DPBLENDCAPS_SRCCOLOR 4

#define D3DVTXPCAPS_DIRECTIONALLIGHTS 8

#define D3DTEXOPCAPS_BUMPENVMAPLUMINANCE 4194304

#define D3DTEXOPCAPS_BLENDFACTORALPHA 8192

#define D3DSTENCILCAPS_INCR 64

#define D3DPRASTERCAPS_PAT 8

#define D3DDEVCAPS_CANBLTSYSTONONLOCAL 131072

#define D3DLINECAPS_BLEND 4

#define D3DPRASTERCAPS_ZFOG 2097152

#define D3DTEXOPCAPS_MODULATE 8

#define D3DTEXOPCAPS_DISABLE 1

#define D3DPCMPCAPS_NOTEQUAL 32

#define D3DDEVCAPS_TEXTUREVIDEOMEMORY 512

#define D3DSTENCILCAPS_DECR 128

#define D3DPTEXTURECAPS_CUBEMAP 2048

#define D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA 262144

#define D3DTEXOPCAPS_BLENDDIFFUSEALPHA 2048

#define D3DPTFILTERCAPS_MAGFANISOTROPIC 67108864

#define D3DVTXPCAPS_TWEENING 64

#define D3DPTEXTURECAPS_CUBEMAP_POW2 131072

typedef struct tagMCI_ANIM_WINDOW_PARMSA tagMCI_ANIM_WINDOW_PARMSA, *PtagMCI_ANIM_WINDOW_PARMSA;

typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMSA;

typedef ulong ULONG_PTR;

typedef ULONG_PTR DWORD_PTR;

struct tagMCI_ANIM_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct HDRVR__ HDRVR__, *PHDRVR__;

typedef struct HDRVR__ *HDRVR;

struct HDRVR__ {
    int unused;
};

typedef struct tagMIXERCONTROLA tagMIXERCONTROLA, *PtagMIXERCONTROLA;

typedef union _union_729 _union_729, *P_union_729;

typedef union _union_732 _union_732, *P_union_732;

typedef struct _struct_730 _struct_730, *P_struct_730;

typedef struct _struct_731 _struct_731, *P_struct_731;

union _union_732 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

struct _struct_731 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

struct _struct_730 {
    LONG lMinimum;
    LONG lMaximum;
};

union _union_729 {
    struct _struct_730 field0;
    struct _struct_731 field1;
    DWORD dwReserved[6];
};

struct tagMIXERCONTROLA {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    CHAR szShortName[16];
    CHAR szName[64];
    union _union_729 Bounds;
    union _union_732 Metrics;
};

typedef struct tagJOYCAPSW tagJOYCAPSW, *PtagJOYCAPSW;

struct tagJOYCAPSW {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
};

typedef struct tagDRVCONFIGINFO tagDRVCONFIGINFO, *PtagDRVCONFIGINFO;

typedef struct tagDRVCONFIGINFO *LPDRVCONFIGINFO;

struct tagDRVCONFIGINFO {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA tagMCI_OVLY_WINDOW_PARMSA, *PtagMCI_OVLY_WINDOW_PARMSA;

struct tagMCI_OVLY_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct tagMCI_SAVE_PARMSA tagMCI_SAVE_PARMSA, *PtagMCI_SAVE_PARMSA;

typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMSA;

struct tagMCI_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMIDIOUTCAPSW tagMIDIOUTCAPSW, *PtagMIDIOUTCAPSW;

typedef UINT MMVERSION;

struct tagMIDIOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct tagMIXERLINEA tagMIXERLINEA, *PtagMIXERLINEA;

typedef struct tagMIXERLINEA *PMIXERLINEA;

typedef struct _struct_725 _struct_725, *P_struct_725;

struct _struct_725 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

struct tagMIXERLINEA {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    CHAR szShortName[16];
    CHAR szName[64];
    struct _struct_725 Target;
};

typedef union _union_734.conflict _union_734.conflict, *P_union_734.conflict;

typedef struct _struct_735 _struct_735, *P_struct_735;

typedef struct _struct_736 _struct_736, *P_struct_736;

struct _struct_735 {
    LONG lMinimum;
    LONG lMaximum;
};

struct _struct_736 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

union _union_734.conflict {
    struct _struct_735 field0;
    struct _struct_736 field1;
    DWORD dwReserved[6];
};

typedef struct tagWAVEOUTCAPSA tagWAVEOUTCAPSA, *PtagWAVEOUTCAPSA;

struct tagWAVEOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSW tagMCI_ANIM_WINDOW_PARMSW, *PtagMCI_ANIM_WINDOW_PARMSW;

typedef struct tagMCI_ANIM_WINDOW_PARMSW MCI_ANIM_WINDOW_PARMSW;

struct tagMCI_ANIM_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMIXERCAPSW tagMIXERCAPSW, *PtagMIXERCAPSW;

struct tagMIXERCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMIDIOUTCAPSA tagMIDIOUTCAPSA, *PtagMIDIOUTCAPSA;

struct tagMIDIOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct tagMCI_SYSINFO_PARMSA tagMCI_SYSINFO_PARMSA, *PtagMCI_SYSINFO_PARMSA;

typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMSA;

typedef MCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS;

struct tagMCI_SYSINFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct midiproptempo_tag midiproptempo_tag, *Pmidiproptempo_tag;

struct midiproptempo_tag {
    DWORD cbStruct;
    DWORD dwTempo;
};

typedef struct tagAUXCAPSW tagAUXCAPSW, *PtagAUXCAPSW;

struct tagAUXCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct waveformat_tag waveformat_tag, *Pwaveformat_tag;

struct waveformat_tag {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
};

typedef struct tagMCI_SAVE_PARMSW tagMCI_SAVE_PARMSW, *PtagMCI_SAVE_PARMSW;

typedef struct tagMCI_SAVE_PARMSW *PMCI_SAVE_PARMSW;

struct tagMCI_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct HMIDISTRM__ HMIDISTRM__, *PHMIDISTRM__;

struct HMIDISTRM__ {
    int unused;
};

typedef struct tagMIXERLINEW tagMIXERLINEW, *PtagMIXERLINEW;

typedef struct tagMIXERLINEW *PMIXERLINEW;

typedef struct _struct_727.conflict _struct_727.conflict, *P_struct_727.conflict;

struct _struct_727.conflict {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

struct tagMIXERLINEW {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    WCHAR szShortName[16];
    WCHAR szName[64];
    struct _struct_727.conflict Target;
};

typedef struct _MMCKINFO *NPMMCKINFO;

typedef struct tagMCI_ANIM_PLAY_PARMS tagMCI_ANIM_PLAY_PARMS, *PtagMCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;

struct tagMCI_ANIM_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMIXERCAPSA tagMIXERCAPSA, *PtagMIXERCAPSA;

struct tagMIXERCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMCI_GENERIC_PARMS tagMCI_GENERIC_PARMS, *PtagMCI_GENERIC_PARMS;

typedef struct tagMCI_GENERIC_PARMS *PMCI_GENERIC_PARMS;

struct tagMCI_GENERIC_PARMS {
    DWORD_PTR dwCallback;
};

typedef struct tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMSA;

typedef struct tagAUXCAPSA tagAUXCAPSA, *PtagAUXCAPSA;

typedef struct tagAUXCAPSA *NPAUXCAPSA;

typedef NPAUXCAPSA NPAUXCAPS;

struct tagAUXCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_OPEN_PARMSW tagMCI_ANIM_OPEN_PARMSW, *PtagMCI_ANIM_OPEN_PARMSW;

typedef struct tagMCI_ANIM_OPEN_PARMSW *PMCI_ANIM_OPEN_PARMSW;

typedef UINT MCIDEVICEID;

struct tagMCI_ANIM_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMIDIINCAPS2A tagMIDIINCAPS2A, *PtagMIDIINCAPS2A;

struct tagMIDIINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef union _union_739.conflict _union_739.conflict, *P_union_739.conflict;

union _union_739.conflict {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef struct tMIXERCONTROLDETAILS_SIGNED tMIXERCONTROLDETAILS_SIGNED, *PtMIXERCONTROLDETAILS_SIGNED;

typedef struct tMIXERCONTROLDETAILS_SIGNED MIXERCONTROLDETAILS_SIGNED;

struct tMIXERCONTROLDETAILS_SIGNED {
    LONG lValue;
};

typedef struct HWAVEOUT__ HWAVEOUT__, *PHWAVEOUT__;

struct HWAVEOUT__ {
    int unused;
};

typedef struct tagMCI_ANIM_OPEN_PARMSA tagMCI_ANIM_OPEN_PARMSA, *PtagMCI_ANIM_OPEN_PARMSA;

typedef struct tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMSA;

struct tagMCI_ANIM_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct mmtime_tag mmtime_tag, *Pmmtime_tag;

typedef union _union_664 _union_664, *P_union_664;

typedef struct _struct_665 _struct_665, *P_struct_665;

typedef struct _struct_666 _struct_666, *P_struct_666;

struct _struct_666 {
    DWORD songptrpos;
};

struct _struct_665 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

union _union_664 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_665 smpte;
    struct _struct_666 midi;
};

struct mmtime_tag {
    UINT wType;
    union _union_664 u;
};

typedef void (DRVCALLBACK)(HDRVR, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef DRVCALLBACK *PDRVCALLBACK;

typedef struct tagWAVEOUTCAPS2A tagWAVEOUTCAPS2A, *PtagWAVEOUTCAPS2A;

struct tagWAVEOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIXERLINECONTROLSA tagMIXERLINECONTROLSA, *PtagMIXERLINECONTROLSA;

typedef struct tagMIXERCONTROLA *LPMIXERCONTROLA;

struct tagMIXERLINECONTROLSA {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_739.conflict field2_0x8;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLA pamxctrl;
};

typedef struct tagMCI_SEEK_PARMS tagMCI_SEEK_PARMS, *PtagMCI_SEEK_PARMS;

typedef struct tagMCI_SEEK_PARMS *LPMCI_SEEK_PARMS;

struct tagMCI_SEEK_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTo;
};

typedef struct tagWAVEOUTCAPS2A WAVEOUTCAPS2A;

typedef WAVEOUTCAPS2A WAVEOUTCAPS2;

typedef struct tagMCI_SYSINFO_PARMSW tagMCI_SYSINFO_PARMSW, *PtagMCI_SYSINFO_PARMSW;

struct tagMCI_SYSINFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct tagJOYCAPS2A tagJOYCAPS2A, *PtagJOYCAPS2A;

typedef struct tagJOYCAPS2A *NPJOYCAPS2A;

typedef NPJOYCAPS2A NPJOYCAPS2;

struct tagJOYCAPS2A {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct timecaps_tag timecaps_tag, *Ptimecaps_tag;

typedef struct timecaps_tag *NPTIMECAPS;

struct timecaps_tag {
    UINT wPeriodMin;
    UINT wPeriodMax;
};

typedef struct tagWAVEINCAPSA tagWAVEINCAPSA, *PtagWAVEINCAPSA;

typedef struct tagWAVEINCAPSA *PWAVEINCAPSA;

typedef PWAVEINCAPSA PWAVEINCAPS;

struct tagWAVEINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct tagAUXCAPS2W tagAUXCAPS2W, *PtagAUXCAPS2W;

struct tagAUXCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef DRVCALLBACK WAVECALLBACK;

typedef WAVECALLBACK *LPWAVECALLBACK;

typedef struct tagMCI_OVLY_LOAD_PARMSA tagMCI_OVLY_LOAD_PARMSA, *PtagMCI_OVLY_LOAD_PARMSA;

struct tagMCI_OVLY_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMIXERLINECONTROLSW tagMIXERLINECONTROLSW, *PtagMIXERLINECONTROLSW;

typedef struct tagMIXERLINECONTROLSW *PMIXERLINECONTROLSW;

typedef union _union_741 _union_741, *P_union_741;

typedef struct tagMIXERCONTROLW tagMIXERCONTROLW, *PtagMIXERCONTROLW;

typedef struct tagMIXERCONTROLW *LPMIXERCONTROLW;

typedef union _union_737 _union_737, *P_union_737;

union _union_737 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

struct tagMIXERCONTROLW {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    WCHAR szShortName[16];
    WCHAR szName[64];
    union _union_734.conflict Bounds;
    union _union_737 Metrics;
};

union _union_741 {
    DWORD dwControlID;
    DWORD dwControlType;
};

struct tagMIXERLINECONTROLSW {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_741 field2_0x8;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLW pamxctrl;
};

typedef struct tagMCI_SEQ_SET_PARMS tagMCI_SEQ_SET_PARMS, *PtagMCI_SEQ_SET_PARMS;

typedef struct tagMCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;

struct tagMCI_SEQ_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    DWORD dwTempo;
    DWORD dwPort;
    DWORD dwSlave;
    DWORD dwMaster;
    DWORD dwOffset;
};

typedef struct tagMCI_STATUS_PARMS tagMCI_STATUS_PARMS, *PtagMCI_STATUS_PARMS;

struct tagMCI_STATUS_PARMS {
    DWORD_PTR dwCallback;
    DWORD_PTR dwReturn;
    DWORD dwItem;
    DWORD dwTrack;
};

typedef struct tagAUXCAPS2W *LPAUXCAPS2W;

typedef struct tagMIXERLINEA *LPMIXERLINEA;

typedef struct tagMIDIINCAPSA tagMIDIINCAPSA, *PtagMIDIINCAPSA;

typedef struct tagMIDIINCAPSA *NPMIDIINCAPSA;

typedef NPMIDIINCAPSA NPMIDIINCAPS;

struct tagMIDIINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
};

typedef struct tagMCI_OPEN_PARMSW tagMCI_OPEN_PARMSW, *PtagMCI_OPEN_PARMSW;

typedef struct tagMCI_OPEN_PARMSW MCI_OPEN_PARMSW;

struct tagMCI_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
};

typedef struct tagMCI_OPEN_PARMSA tagMCI_OPEN_PARMSA, *PtagMCI_OPEN_PARMSA;

typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMSA;

struct tagMCI_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
};

typedef struct tagMCI_RECORD_PARMS tagMCI_RECORD_PARMS, *PtagMCI_RECORD_PARMS;

struct tagMCI_RECORD_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct HMIDI__ HMIDI__, *PHMIDI__;

typedef struct HMIDI__ *HMIDI;

typedef HMIDI *LPHMIDI;

struct HMIDI__ {
    int unused;
};

typedef struct tagMIXERLINEW *LPMIXERLINEW;

typedef struct HMIDIOUT__ HMIDIOUT__, *PHMIDIOUT__;

typedef struct HMIDIOUT__ *HMIDIOUT;

typedef HMIDIOUT *LPHMIDIOUT;

struct HMIDIOUT__ {
    int unused;
};

typedef struct tagMCI_ANIM_OPEN_PARMSW MCI_ANIM_OPEN_PARMSW;

typedef struct tagWAVEINCAPSW tagWAVEINCAPSW, *PtagWAVEINCAPSW;

struct tagWAVEINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct midihdr_tag midihdr_tag, *Pmidihdr_tag;

struct midihdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    struct midihdr_tag *lpNext;
    DWORD_PTR reserved;
    DWORD dwOffset;
    DWORD_PTR dwReserved[8];
};

typedef struct tagMCI_VD_PLAY_PARMS tagMCI_VD_PLAY_PARMS, *PtagMCI_VD_PLAY_PARMS;

struct tagMCI_VD_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMIXERLINECONTROLSA *PMIXERLINECONTROLSA;

typedef struct tagMCI_PLAY_PARMS tagMCI_PLAY_PARMS, *PtagMCI_PLAY_PARMS;

struct tagMCI_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW tagMCI_OVLY_LOAD_PARMSW, *PtagMCI_OVLY_LOAD_PARMSW;

struct tagMCI_OVLY_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMSA;

typedef struct tagMCI_INFO_PARMSW tagMCI_INFO_PARMSW, *PtagMCI_INFO_PARMSW;

struct tagMCI_INFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagMCI_INFO_PARMSA tagMCI_INFO_PARMSA, *PtagMCI_INFO_PARMSA;

struct tagMCI_INFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagAUXCAPS2A tagAUXCAPS2A, *PtagAUXCAPS2A;

typedef struct tagAUXCAPS2A *LPAUXCAPS2A;

struct tagAUXCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEOUTCAPSA *PWAVEOUTCAPSA;

typedef PWAVEOUTCAPSA PWAVEOUTCAPS;

typedef struct tagAUXCAPS2A AUXCAPS2A;

typedef struct tagDRVCONFIGINFO *NPDRVCONFIGINFO;

typedef struct _struct_738 _struct_738, *P_struct_738;

struct _struct_738 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef struct _struct_737 _struct_737, *P_struct_737;

struct _struct_737 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct _struct_732 _struct_732, *P_struct_732;

struct _struct_732 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA tagMCI_OVLY_OPEN_PARMSA, *PtagMCI_OVLY_OPEN_PARMSA;

typedef struct tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMSA;

typedef PMCI_OVLY_OPEN_PARMSA PMCI_OVLY_OPEN_PARMS;

struct tagMCI_OVLY_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct _struct_733 _struct_733, *P_struct_733;

struct _struct_733 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef struct tagWAVEOUTCAPS2A *PWAVEOUTCAPS2A;

typedef PWAVEOUTCAPS2A PWAVEOUTCAPS2;

typedef struct tagMCI_ANIM_STEP_PARMS tagMCI_ANIM_STEP_PARMS, *PtagMCI_ANIM_STEP_PARMS;

struct tagMCI_ANIM_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_SEEK_PARMS *PMCI_SEEK_PARMS;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED tMIXERCONTROLDETAILS_UNSIGNED, *PtMIXERCONTROLDETAILS_UNSIGNED;

struct tMIXERCONTROLDETAILS_UNSIGNED {
    DWORD dwValue;
};

typedef UINT *LPUINT;

typedef struct tagWAVEOUTCAPSW tagWAVEOUTCAPSW, *PtagWAVEOUTCAPSW;

typedef struct tagWAVEOUTCAPSW *PWAVEOUTCAPSW;

struct tagWAVEOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_RECT_PARMS tagMCI_ANIM_RECT_PARMS, *PtagMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;

struct tagMCI_ANIM_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef MCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMSA;

typedef MCI_INFO_PARMSA MCI_INFO_PARMS;

typedef struct _MMCKINFO *PMMCKINFO;

typedef struct midihdr_tag *NPMIDIHDR;

typedef struct tagMCI_SAVE_PARMSW MCI_SAVE_PARMSW;

typedef struct tagAUXCAPS2W AUXCAPS2W;

typedef struct joyinfoex_tag joyinfoex_tag, *Pjoyinfoex_tag;

typedef struct joyinfoex_tag *NPJOYINFOEX;

struct joyinfoex_tag {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwXpos;
    DWORD dwYpos;
    DWORD dwZpos;
    DWORD dwRpos;
    DWORD dwUpos;
    DWORD dwVpos;
    DWORD dwButtons;
    DWORD dwButtonNumber;
    DWORD dwPOV;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct _MMIOINFO *NPMMIOINFO;

typedef struct tagMCI_VD_ESCAPE_PARMSA tagMCI_VD_ESCAPE_PARMSA, *PtagMCI_VD_ESCAPE_PARMSA;

typedef struct tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMSA;

typedef PMCI_VD_ESCAPE_PARMSA PMCI_VD_ESCAPE_PARMS;

struct tagMCI_VD_ESCAPE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpstrCommand;
};

typedef struct tagMCI_WAVE_DELETE_PARMS tagMCI_WAVE_DELETE_PARMS, *PtagMCI_WAVE_DELETE_PARMS;

struct tagMCI_WAVE_DELETE_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMIDIOUTCAPSA *PMIDIOUTCAPSA;

typedef PMIDIOUTCAPSA PMIDIOUTCAPS;

typedef struct tagJOYCAPSA tagJOYCAPSA, *PtagJOYCAPSA;

typedef struct tagJOYCAPSA *NPJOYCAPSA;

typedef NPJOYCAPSA NPJOYCAPS;

struct tagJOYCAPSA {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
};

typedef struct tagMIDIINCAPSW tagMIDIINCAPSW, *PtagMIDIINCAPSW;

struct tagMIDIINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
};

typedef union _union_743.conflict _union_743.conflict, *P_union_743.conflict;

union _union_743.conflict {
    HWND hwndOwner;
    DWORD cMultipleItems;
};

typedef struct tagMIDIOUTCAPS2A tagMIDIOUTCAPS2A, *PtagMIDIOUTCAPS2A;

typedef struct tagMIDIOUTCAPS2A *LPMIDIOUTCAPS2A;

typedef LPMIDIOUTCAPS2A LPMIDIOUTCAPS2;

struct tagMIDIOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIINCAPSA *LPMIDIINCAPSA;

typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;

typedef struct tagMIDIINCAPS2A *LPMIDIINCAPS2A;

typedef struct _struct_729 _struct_729, *P_struct_729;

struct _struct_729 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

typedef struct _struct_727 _struct_727, *P_struct_727;

struct _struct_727 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

typedef struct HMIXEROBJ__ HMIXEROBJ__, *PHMIXEROBJ__;

typedef struct HMIXEROBJ__ *HMIXEROBJ;

struct HMIXEROBJ__ {
    int unused;
};

typedef struct HMIXER__ HMIXER__, *PHMIXER__;

typedef struct HMIXER__ *HMIXER;

typedef HMIXER *LPHMIXER;

struct HMIXER__ {
    int unused;
};

typedef struct tMIXERCONTROLDETAILS tMIXERCONTROLDETAILS, *PtMIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS *PMIXERCONTROLDETAILS;

struct tMIXERCONTROLDETAILS {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD cChannels;
    union _union_743.conflict field3_0xc;
    DWORD cbDetails;
    LPVOID paDetails;
};

typedef LPMIDIINCAPS2A LPMIDIINCAPS2;

typedef struct joyinfo_tag joyinfo_tag, *Pjoyinfo_tag;

struct joyinfo_tag {
    UINT wXpos;
    UINT wYpos;
    UINT wZpos;
    UINT wButtons;
};

typedef struct tagMIDIOUTCAPSA *LPMIDIOUTCAPSA;

typedef struct tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;

typedef PMIXERLINEA PMIXERLINE;

typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMSA;

typedef struct tagMIDIOUTCAPSW *NPMIDIOUTCAPSW;

typedef struct tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMSA;

typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMSA;

typedef MCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS;

typedef struct tagMIDIINCAPSW *LPMIDIINCAPSW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW tagMIXERCONTROLDETAILS_LISTTEXTW, *PtagMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *PMIXERCONTROLDETAILS_LISTTEXTW;

struct tagMIXERCONTROLDETAILS_LISTTEXTW {
    DWORD dwParam1;
    DWORD dwParam2;
    WCHAR szName[64];
};

typedef struct tagMIXERCAPSA *LPMIXERCAPSA;

typedef LPMIXERCAPSA LPMIXERCAPS;

typedef struct tagMCI_PLAY_PARMS *LPMCI_PLAY_PARMS;

typedef struct tagWAVEINCAPSA *LPWAVEINCAPSA;

typedef LPWAVEINCAPSA LPWAVEINCAPS;

typedef struct tagWAVEOUTCAPSW WAVEOUTCAPSW;

typedef struct tagJOYCAPSW *PJOYCAPSW;

typedef struct tagWAVEOUTCAPS2W tagWAVEOUTCAPS2W, *PtagWAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPS2W *PWAVEOUTCAPS2W;

struct tagWAVEOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;

typedef struct tagMIXERLINECONTROLSW MIXERLINECONTROLSW;

typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMSA;

typedef struct wavehdr_tag wavehdr_tag, *Pwavehdr_tag;

struct wavehdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    DWORD dwLoops;
    struct wavehdr_tag *lpNext;
    DWORD_PTR reserved;
};

typedef union _union_1020 _union_1020, *P_union_1020;

typedef struct _struct_1021 _struct_1021, *P_struct_1021;

typedef struct _struct_1022 _struct_1022, *P_struct_1022;

struct _struct_1021 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

struct _struct_1022 {
    DWORD songptrpos;
};

union _union_1020 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_1021 smpte;
    struct _struct_1022 midi;
};

typedef struct tagMIDIINCAPS2A *NPMIDIINCAPS2A;

typedef struct tagWAVEOUTCAPS2A *NPWAVEOUTCAPS2A;

typedef struct tagMCI_ANIM_OPEN_PARMSW *LPMCI_ANIM_OPEN_PARMSW;

typedef struct tagWAVEOUTCAPSA *NPWAVEOUTCAPSA;

typedef NPWAVEOUTCAPSA NPWAVEOUTCAPS;

typedef struct midihdr_tag MIDIHDR;

typedef struct tagWAVEOUTCAPSA WAVEOUTCAPSA;

typedef struct tagJOYCAPSA *PJOYCAPSA;

typedef struct tagMCI_OVLY_SAVE_PARMSA tagMCI_OVLY_SAVE_PARMSA, *PtagMCI_OVLY_SAVE_PARMSA;

struct tagMCI_OVLY_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;

typedef struct DRVCONFIGINFOEX DRVCONFIGINFOEX, *PDRVCONFIGINFOEX;

typedef struct DRVCONFIGINFOEX *LPDRVCONFIGINFOEX;

struct DRVCONFIGINFOEX {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
    DWORD dnDevNode;
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA tagMIXERCONTROLDETAILS_LISTTEXTA, *PtagMIXERCONTROLDETAILS_LISTTEXTA;

struct tagMIXERCONTROLDETAILS_LISTTEXTA {
    DWORD dwParam1;
    DWORD dwParam2;
    CHAR szName[64];
};

typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLSA;

typedef struct tagJOYCAPS2A *PJOYCAPS2A;

typedef PJOYCAPS2A PJOYCAPS2;

typedef struct tagWAVEOUTCAPS2W *NPWAVEOUTCAPS2W;

typedef struct tagMCI_WAVE_OPEN_PARMSW tagMCI_WAVE_OPEN_PARMSW, *PtagMCI_WAVE_OPEN_PARMSW;

typedef struct tagMCI_WAVE_OPEN_PARMSW *PMCI_WAVE_OPEN_PARMSW;

struct tagMCI_WAVE_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMSA;

typedef PMCI_OVLY_WINDOW_PARMSA PMCI_OVLY_WINDOW_PARMS;

typedef struct tagMIXERCONTROLA MIXERCONTROLA;

typedef struct tagWAVEINCAPS2A tagWAVEINCAPS2A, *PtagWAVEINCAPS2A;

struct tagWAVEINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMSA;

typedef PMCI_OPEN_PARMSA PMCI_OPEN_PARMS;

typedef struct tagMIDIINCAPS2W tagMIDIINCAPS2W, *PtagMIDIINCAPS2W;

typedef struct tagMIDIINCAPS2W *NPMIDIINCAPS2W;

struct tagMIDIINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_INFO_PARMSA *LPMCI_INFO_PARMSA;

typedef struct midihdr_tag *PMIDIHDR;

typedef struct tagMCI_WAVE_OPEN_PARMSA tagMCI_WAVE_OPEN_PARMSA, *PtagMCI_WAVE_OPEN_PARMSA;

typedef struct tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMSA;

struct tagMCI_WAVE_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagWAVEINCAPS2W tagWAVEINCAPS2W, *PtagWAVEINCAPS2W;

struct tagWAVEINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef union _union_666 _union_666, *P_union_666;

typedef struct _struct_667 _struct_667, *P_struct_667;

typedef struct _struct_668 _struct_668, *P_struct_668;

struct _struct_668 {
    DWORD songptrpos;
};

struct _struct_667 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

union _union_666 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_667 smpte;
    struct _struct_668 midi;
};

typedef struct tagMCI_LOAD_PARMSW tagMCI_LOAD_PARMSW, *PtagMCI_LOAD_PARMSW;

struct tagMCI_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct tagMIXERCONTROLW MIXERCONTROLW;

typedef struct tagMCI_VD_ESCAPE_PARMSW tagMCI_VD_ESCAPE_PARMSW, *PtagMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_VD_ESCAPE_PARMSW MCI_VD_ESCAPE_PARMSW;

struct tagMCI_VD_ESCAPE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpstrCommand;
};

typedef struct tagJOYCAPS2W tagJOYCAPS2W, *PtagJOYCAPS2W;

typedef struct tagJOYCAPS2W JOYCAPS2W;

struct tagJOYCAPS2W {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMCI_VD_STEP_PARMS tagMCI_VD_STEP_PARMS, *PtagMCI_VD_STEP_PARMS;

struct tagMCI_VD_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_VD_ESCAPE_PARMSW *PMCI_VD_ESCAPE_PARMSW;

typedef struct waveformat_tag *PWAVEFORMAT;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN tMIXERCONTROLDETAILS_BOOLEAN, *PtMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN *LPMIXERCONTROLDETAILS_BOOLEAN;

struct tMIXERCONTROLDETAILS_BOOLEAN {
    LONG fValue;
};

typedef struct _MMCKINFO *LPMMCKINFO;

typedef struct tagJOYCAPS2A JOYCAPS2A;

typedef struct tagMCI_STATUS_PARMS *PMCI_STATUS_PARMS;

typedef struct tagMCI_INFO_PARMSW *LPMCI_INFO_PARMSW;

typedef struct tagMCI_ANIM_UPDATE_PARMS tagMCI_ANIM_UPDATE_PARMS, *PtagMCI_ANIM_UPDATE_PARMS;

typedef struct HDC__ HDC__, *PHDC__;

typedef struct HDC__ *HDC;

struct HDC__ {
    int unused;
};

struct tagMCI_ANIM_UPDATE_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
    HDC hDC;
};

typedef struct HMIDIIN__ HMIDIIN__, *PHMIDIIN__;

typedef struct HMIDIIN__ *HMIDIIN;

struct HMIDIIN__ {
    int unused;
};

typedef struct joyinfoex_tag *PJOYINFOEX;

typedef struct tagMCI_LOAD_PARMSA tagMCI_LOAD_PARMSA, *PtagMCI_LOAD_PARMSA;

typedef struct tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMSA;

typedef PMCI_LOAD_PARMSA PMCI_LOAD_PARMS;

struct tagMCI_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMCI_RECORD_PARMS *LPMCI_RECORD_PARMS;

typedef struct tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMSA;

typedef WORD PATCHARRAY[128];

typedef struct tagMCI_OVLY_OPEN_PARMSW tagMCI_OVLY_OPEN_PARMSW, *PtagMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_OPEN_PARMSW *LPMCI_OVLY_OPEN_PARMSW;

struct tagMCI_OVLY_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMSA;

typedef struct tagMCI_OVLY_WINDOW_PARMSW tagMCI_OVLY_WINDOW_PARMSW, *PtagMCI_OVLY_WINDOW_PARMSW;

struct tagMCI_OVLY_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMCI_BREAK_PARMS tagMCI_BREAK_PARMS, *PtagMCI_BREAK_PARMS;

typedef struct tagMCI_BREAK_PARMS *LPMCI_BREAK_PARMS;

struct tagMCI_BREAK_PARMS {
    DWORD_PTR dwCallback;
    int nVirtKey;
    HWND hwndBreak;
};

typedef struct tagMIDIINCAPSW *PMIDIINCAPSW;

typedef struct midistrmbuffver_tag midistrmbuffver_tag, *Pmidistrmbuffver_tag;

typedef struct midistrmbuffver_tag MIDISTRMBUFFVER;

struct midistrmbuffver_tag {
    DWORD dwVersion;
    DWORD dwMid;
    DWORD dwOEMVersion;
};

typedef struct tagWAVEINCAPS2A *LPWAVEINCAPS2A;

typedef LPWAVEINCAPS2A LPWAVEINCAPS2;

typedef struct tagMCI_SEQ_SET_PARMS *PMCI_SEQ_SET_PARMS;

typedef struct tagMIDIOUTCAPS2W tagMIDIOUTCAPS2W, *PtagMIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPS2W *NPMIDIOUTCAPS2W;

struct tagMIDIOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEINCAPS2A *NPWAVEINCAPS2A;

typedef NPWAVEINCAPS2A NPWAVEINCAPS2;

typedef struct tagMCI_WAVE_SET_PARMS tagMCI_WAVE_SET_PARMS, *PtagMCI_WAVE_SET_PARMS;

typedef struct tagMCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;

struct tagMCI_WAVE_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    UINT wInput;
    UINT wOutput;
    WORD wFormatTag;
    WORD wReserved2;
    WORD nChannels;
    WORD wReserved3;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wReserved4;
    WORD wBitsPerSample;
    WORD wReserved5;
};

typedef struct tagMCI_WAVE_SET_PARMS *PMCI_WAVE_SET_PARMS;

typedef UINT MMRESULT;

typedef struct tagWAVEINCAPSA *NPWAVEINCAPSA;

typedef struct tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMSA;

typedef LPMCI_OPEN_PARMSA LPMCI_OPEN_PARMS;

typedef struct tagMIXERCONTROLA *PMIXERCONTROLA;

typedef PMIXERCONTROLA PMIXERCONTROL;

typedef struct midihdr_tag *LPMIDIHDR;

typedef struct tagWAVEINCAPSW *LPWAVEINCAPSW;

typedef struct tagMCI_STATUS_PARMS *LPMCI_STATUS_PARMS;

typedef struct tagMCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;

typedef struct HWAVEIN__ HWAVEIN__, *PHWAVEIN__;

struct HWAVEIN__ {
    int unused;
};

typedef struct tagWAVEINCAPSW *NPWAVEINCAPSW;

typedef struct tagMIDIOUTCAPS2A *NPMIDIOUTCAPS2A;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN MIXERCONTROLDETAILS_BOOLEAN;

typedef struct waveformat_tag *LPWAVEFORMAT;

typedef struct tagMCI_OPEN_PARMSW *LPMCI_OPEN_PARMSW;

typedef struct tagMCI_PLAY_PARMS *PMCI_PLAY_PARMS;

typedef struct tagMIDIOUTCAPS2W MIDIOUTCAPS2W;

typedef LPMIDIOUTCAPSA LPMIDIOUTCAPS;

typedef struct tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMSA;

typedef struct tagMIDIOUTCAPS2A MIDIOUTCAPS2A;

typedef struct midiproptimediv_tag midiproptimediv_tag, *Pmidiproptimediv_tag;

typedef struct midiproptimediv_tag MIDIPROPTIMEDIV;

struct midiproptimediv_tag {
    DWORD cbStruct;
    DWORD dwTimeDiv;
};

typedef struct tagMIDIOUTCAPSA *NPMIDIOUTCAPSA;

typedef NPMIDIOUTCAPSA NPMIDIOUTCAPS;

typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMSA;

typedef struct tagMIXERCAPS2A tagMIXERCAPS2A, *PtagMIXERCAPS2A;

typedef struct tagMIXERCAPS2A *LPMIXERCAPS2A;

typedef LPMIXERCAPS2A LPMIXERCAPS2;

struct tagMIXERCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct _MMIOINFO *PMMIOINFO;

typedef struct tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMSA;

typedef PMCI_OVLY_LOAD_PARMSA PMCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_SET_PARMS tagMCI_SET_PARMS, *PtagMCI_SET_PARMS;

typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;

struct tagMCI_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
};

typedef struct timecaps_tag *LPTIMECAPS;

typedef struct HWAVEOUT__ *HWAVEOUT;

typedef struct tagMIXERCAPSW *LPMIXERCAPSW;

typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;

typedef struct waveformat_tag *NPWAVEFORMAT;

typedef struct tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMSA;

typedef LPMCI_ANIM_WINDOW_PARMSA LPMCI_ANIM_WINDOW_PARMS;

typedef struct tagMCI_VD_ESCAPE_PARMSW *LPMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_OVLY_RECT_PARMS tagMCI_OVLY_RECT_PARMS, *PtagMCI_OVLY_RECT_PARMS;

struct tagMCI_OVLY_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef MCI_OPEN_PARMSA MCI_OPEN_PARMS;

typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMSA;

typedef MCI_LOAD_PARMSA MCI_LOAD_PARMS;

typedef struct mmtime_tag *NPMMTIME;

typedef PJOYCAPSA PJOYCAPS;

typedef struct tagMCI_SAVE_PARMSW *LPMCI_SAVE_PARMSW;

typedef struct tagMCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;

typedef struct tagMIXERCAPS2W tagMIXERCAPS2W, *PtagMIXERCAPS2W;

struct tagMIXERCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef WORD *LPKEYARRAY;

typedef LPAUXCAPS2A LPAUXCAPS2;

typedef struct tagMIXERCAPSA MIXERCAPSA;

typedef MIXERCAPSA MIXERCAPS;

typedef LRESULT (*DRIVERPROC)(DWORD_PTR, HDRVR, UINT, LPARAM, LPARAM);

typedef struct tagMCI_OVLY_WINDOW_PARMSW *PMCI_OVLY_WINDOW_PARMSW;

typedef struct tagMIDIOUTCAPS2W *LPMIDIOUTCAPS2W;

typedef struct tagAUXCAPSA *LPAUXCAPSA;

typedef struct tagAUXCAPSW *LPAUXCAPSW;

typedef struct tagMCI_SET_PARMS *PMCI_SET_PARMS;

typedef NPMIDIINCAPS2A NPMIDIINCAPS2;

typedef struct wavehdr_tag WAVEHDR;

typedef struct tagMCI_SET_PARMS *LPMCI_SET_PARMS;

typedef struct tagMIXERCAPS2A *PMIXERCAPS2A;

typedef PMIXERCAPS2A PMIXERCAPS2;

typedef struct tagMCI_OVLY_SAVE_PARMSW tagMCI_OVLY_SAVE_PARMSW, *PtagMCI_OVLY_SAVE_PARMSW;

struct tagMCI_OVLY_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW *LPMCI_OVLY_LOAD_PARMSW;

typedef struct tagMIDIINCAPSW *NPMIDIINCAPSW;

typedef struct tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMSA;

typedef LPMCI_LOAD_PARMSA LPMCI_LOAD_PARMS;

typedef struct HWAVEIN__ *HWAVEIN;

typedef struct tagMCI_ANIM_WINDOW_PARMSW *LPMCI_ANIM_WINDOW_PARMSW;

typedef struct tWAVEFORMATEX *PWAVEFORMATEX;

typedef struct HWAVE__ HWAVE__, *PHWAVE__;

typedef struct HWAVE__ *HWAVE;

struct HWAVE__ {
    int unused;
};

typedef DRVCALLBACK MIDICALLBACK;

typedef MCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS;

typedef MCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMSA;

typedef LPMCI_OVLY_LOAD_PARMSA LPMCI_OVLY_LOAD_PARMS;

typedef struct midiproptempo_tag *LPMIDIPROPTEMPO;

typedef struct tagJOYCAPSA *LPJOYCAPSA;

typedef LPJOYCAPSA LPJOYCAPS;

typedef PMCI_ANIM_OPEN_PARMSA PMCI_ANIM_OPEN_PARMS;

typedef struct tagMIXERLINECONTROLSA *LPMIXERLINECONTROLSA;

typedef struct tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMSA;

typedef struct tagMIXERCAPS2W *PMIXERCAPS2W;

typedef struct tagMCI_VD_STEP_PARMS *PMCI_VD_STEP_PARMS;

typedef struct mmtime_tag MMTIME;

typedef LPMIXERLINECONTROLSA LPMIXERLINECONTROLS;

typedef struct tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;

typedef struct tagJOYCAPSW *NPJOYCAPSW;

typedef struct tagMIDIINCAPSA *PMIDIINCAPSA;

typedef PMIDIINCAPSA PMIDIINCAPS;

typedef struct tagMIXERCAPSA *PMIXERCAPSA;

typedef PMIXERCAPSA PMIXERCAPS;

typedef struct tagWAVEOUTCAPSA *LPWAVEOUTCAPSA;

typedef LPWAVEOUTCAPSA LPWAVEOUTCAPS;

typedef struct tagMCI_GETDEVCAPS_PARMS tagMCI_GETDEVCAPS_PARMS, *PtagMCI_GETDEVCAPS_PARMS;

struct tagMCI_GETDEVCAPS_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwReturn;
    DWORD dwItem;
};

typedef struct tagMIDIOUTCAPS2A *PMIDIOUTCAPS2A;

typedef struct HMIDISTRM__ *HMIDISTRM;

typedef WORD KEYARRAY[128];

typedef struct tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMSA;

typedef DRVCALLBACK *LPDRVCALLBACK;

typedef struct tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;

typedef void (TIMECALLBACK)(UINT, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef struct tagAUXCAPSA AUXCAPSA;

typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;

typedef MIXERCONTROLA MIXERCONTROL;

typedef LPMCI_OVLY_WINDOW_PARMSA LPMCI_OVLY_WINDOW_PARMS;

typedef struct tagMIXERCAPSW *PMIXERCAPSW;

typedef AUXCAPS2A AUXCAPS2;

typedef struct midiproptempo_tag MIDIPROPTEMPO;

typedef struct tagAUXCAPSW AUXCAPSW;

typedef struct tagMIDIINCAPS2A *PMIDIINCAPS2A;

typedef PMIDIINCAPS2A PMIDIINCAPS2;

typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;

typedef struct tagWAVEOUTCAPS2A *LPWAVEOUTCAPS2A;

typedef LPWAVEOUTCAPS2A LPWAVEOUTCAPS2;

typedef struct tagMIDIOUTCAPS2W *PMIDIOUTCAPS2W;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN *PMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tagMCI_SYSINFO_PARMSW *PMCI_SYSINFO_PARMSW;

typedef struct tagMCI_INFO_PARMSW MCI_INFO_PARMSW;

typedef struct joyinfo_tag *NPJOYINFO;

typedef AUXCAPSA AUXCAPS;

typedef MCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS;

typedef struct wavehdr_tag *NPWAVEHDR;

typedef struct joyinfo_tag JOYINFO;

typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMSA;

typedef MCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS;

typedef LPMIDIINCAPSA LPMIDIINCAPS;

typedef struct tagMCI_SYSINFO_PARMSW *LPMCI_SYSINFO_PARMSW;

typedef struct tagMCI_GETDEVCAPS_PARMS *PMCI_GETDEVCAPS_PARMS;

typedef struct tagJOYCAPS2W *PJOYCAPS2W;

typedef struct tagMCI_LOAD_PARMSW MCI_LOAD_PARMSW;

typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;

typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;

typedef PMCI_SYSINFO_PARMSA PMCI_SYSINFO_PARMS;

typedef struct tWAVEFORMATEX *NPWAVEFORMATEX;

typedef struct tagMIDIINCAPS2A MIDIINCAPS2A;

typedef struct mmtime_tag *LPMMTIME;

typedef struct tagMCI_BREAK_PARMS *PMCI_BREAK_PARMS;

typedef LPMCI_OVLY_OPEN_PARMSA LPMCI_OVLY_OPEN_PARMS;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED *PMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMCI_OVLY_RECT_PARMS *PMCI_OVLY_RECT_PARMS;

typedef MIDIINCAPS2A MIDIINCAPS2;

typedef struct tagMCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;

typedef struct tagMIDIINCAPSA MIDIINCAPSA;

typedef NPWAVEOUTCAPS2A NPWAVEOUTCAPS2;

typedef struct tagMIDIINCAPS2W MIDIINCAPS2W;

typedef LPMCI_SAVE_PARMSA LPMCI_SAVE_PARMS;

typedef LPMCI_ANIM_OPEN_PARMSA LPMCI_ANIM_OPEN_PARMS;

typedef MCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXTA;

typedef MIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT;

typedef struct pcmwaveformat_tag pcmwaveformat_tag, *Ppcmwaveformat_tag;

typedef struct pcmwaveformat_tag *NPPCMWAVEFORMAT;

typedef struct waveformat_tag WAVEFORMAT;

struct pcmwaveformat_tag {
    WAVEFORMAT wf;
    WORD wBitsPerSample;
};

typedef struct tagWAVEOUTCAPSW *NPWAVEOUTCAPSW;

typedef struct DRVCONFIGINFOEX *NPDRVCONFIGINFOEX;

typedef struct pcmwaveformat_tag *LPPCMWAVEFORMAT;

typedef struct joyinfo_tag *PJOYINFO;

typedef HMIDISTRM *LPHMIDISTRM;

typedef struct tMIXERCONTROLDETAILS MIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;

typedef struct tagMCI_LOAD_PARMSW *PMCI_LOAD_PARMSW;

typedef MCI_SAVE_PARMSA MCI_SAVE_PARMS;

typedef struct tagMIDIINCAPSW MIDIINCAPSW;

typedef struct tagMIXERCAPS2W *LPMIXERCAPS2W;

typedef struct tagWAVEINCAPSW *PWAVEINCAPSW;

typedef LPMCI_SYSINFO_PARMSA LPMCI_SYSINFO_PARMS;

typedef struct tagAUXCAPS2A *PAUXCAPS2A;

typedef struct tagAUXCAPS2W *PAUXCAPS2W;

typedef struct tagWAVEINCAPS2A *PWAVEINCAPS2A;

typedef PWAVEINCAPS2A PWAVEINCAPS2;

typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW MIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED MIXERCONTROLDETAILS_UNSIGNED;

typedef struct joyinfo_tag *LPJOYINFO;

typedef struct tagMCI_ANIM_PLAY_PARMS *PMCI_ANIM_PLAY_PARMS;

typedef union _union_745 _union_745, *P_union_745;

union _union_745 {
    HWND hwndOwner;
    DWORD cMultipleItems;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW MCI_OVLY_LOAD_PARMSW;

typedef HWAVEOUT *LPHWAVEOUT;

typedef union _union_743 _union_743, *P_union_743;

union _union_743 {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef struct tagMCI_SYSINFO_PARMSW MCI_SYSINFO_PARMSW;

typedef struct tagWAVEOUTCAPS2W WAVEOUTCAPS2W;

typedef struct midievent_tag midievent_tag, *Pmidievent_tag;

struct midievent_tag {
    DWORD dwDeltaTime;
    DWORD dwStreamID;
    DWORD dwEvent;
    DWORD dwParms[1];
};

typedef struct tagMCI_OVLY_LOAD_PARMSW *PMCI_OVLY_LOAD_PARMSW;

typedef MMIOINFO *LPCMMIOINFO;

typedef LPMIXERCONTROLA LPMIXERCONTROL;

typedef HWAVEIN *LPHWAVEIN;

typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;

typedef struct tagWAVEINCAPS2W WAVEINCAPS2W;

typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;

typedef MMCKINFO *LPCMMCKINFO;

typedef struct tagWAVEINCAPS2A WAVEINCAPS2A;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXTA;

typedef struct tMIXERCONTROLDETAILS_SIGNED *PMIXERCONTROLDETAILS_SIGNED;

typedef struct tagMIXERLINEA MIXERLINEA;

typedef struct _MMIOINFO *LPMMIOINFO;

typedef struct tagAUXCAPS2W *NPAUXCAPS2W;

typedef struct tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMSA;

typedef struct tagMIXERLINEW MIXERLINEW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *LPMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct joyinfoex_tag JOYINFOEX;

typedef struct tagMCI_WAVE_OPEN_PARMSW MCI_WAVE_OPEN_PARMSW;

typedef struct tagMIDIINCAPS2W *PMIDIINCAPS2W;

typedef PMCI_SAVE_PARMSA PMCI_SAVE_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMSA;

typedef struct tagWAVEOUTCAPS2W *LPWAVEOUTCAPS2W;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED *LPMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMCI_ANIM_WINDOW_PARMSW *PMCI_ANIM_WINDOW_PARMSW;

typedef struct tagAUXCAPS2A *NPAUXCAPS2A;

typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;

typedef struct timecaps_tag TIMECAPS;

typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMSA;

typedef MCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS;

typedef MIXERLINEA MIXERLINE;

typedef WAVEOUTCAPSA WAVEOUTCAPS;

typedef struct tagMCI_OVLY_OPEN_PARMSW MCI_OVLY_OPEN_PARMSW;

typedef PMCI_WAVE_OPEN_PARMSA PMCI_WAVE_OPEN_PARMS;

typedef MCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS;

typedef LPMCI_VD_ESCAPE_PARMSA LPMCI_VD_ESCAPE_PARMS;

typedef struct tagMIDIOUTCAPSW *PMIDIOUTCAPSW;

typedef struct tagAUXCAPSW *PAUXCAPSW;

typedef MIDICALLBACK *LPMIDICALLBACK;

typedef struct tagMCI_LOAD_PARMSW *LPMCI_LOAD_PARMSW;

typedef struct tagAUXCAPSA *PAUXCAPSA;

typedef struct _struct_1083 _struct_1083, *P_struct_1083;

struct _struct_1083 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

typedef struct _struct_1081 _struct_1081, *P_struct_1081;

struct _struct_1081 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

typedef struct tagWAVEINCAPS2W *PWAVEINCAPS2W;

typedef PAUXCAPS2A PAUXCAPS2;

typedef MIXERLINECONTROLSA MIXERLINECONTROLS;

typedef struct tagDRVCONFIGINFO *PDRVCONFIGINFO;

typedef LPMIXERLINEA LPMIXERLINE;

typedef struct tagMCI_OVLY_OPEN_PARMSW *PMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMSA;

typedef LPMCI_OVLY_SAVE_PARMSA LPMCI_OVLY_SAVE_PARMS;

typedef struct midievent_tag MIDIEVENT;

typedef struct tagMCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS *PMCI_ANIM_STEP_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSW MCI_OVLY_SAVE_PARMSW;

typedef struct wavehdr_tag *PWAVEHDR;

typedef struct tagMIXERCAPS2W MIXERCAPS2W;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXTA;

typedef LPMCI_INFO_PARMSA LPMCI_INFO_PARMS;

typedef struct pcmwaveformat_tag *PPCMWAVEFORMAT;

typedef TIMECALLBACK *LPTIMECALLBACK;

typedef NPMIDIOUTCAPS2A NPMIDIOUTCAPS2;

typedef LPAUXCAPSA LPAUXCAPS;

typedef struct tagMIXERCAPS2A MIXERCAPS2A;

typedef union _union_736 _union_736, *P_union_736;

union _union_736 {
    struct _struct_737 field0;
    struct _struct_738 field1;
    DWORD dwReserved[6];
};

typedef union _union_734 _union_734, *P_union_734;

union _union_734 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef HMIDIIN *LPHMIDIIN;

typedef union _union_739 _union_739, *P_union_739;

union _union_739 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef struct tagWAVEINCAPSA WAVEINCAPSA;

typedef WAVEINCAPSA WAVEINCAPS;

typedef union _union_731 _union_731, *P_union_731;

union _union_731 {
    struct _struct_732 field0;
    struct _struct_733 field1;
    DWORD dwReserved[6];
};

typedef struct tagJOYCAPS2A *LPJOYCAPS2A;

typedef LPJOYCAPS2A LPJOYCAPS2;

typedef PMIDIOUTCAPS2A PMIDIOUTCAPS2;

typedef MCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS;

typedef struct tagJOYCAPS2W *NPJOYCAPS2W;

typedef struct tagMCI_OVLY_WINDOW_PARMSW MCI_OVLY_WINDOW_PARMSW;

typedef struct tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMSA;

typedef LPMCI_WAVE_OPEN_PARMSA LPMCI_WAVE_OPEN_PARMS;

typedef struct tagMIDIINCAPS2W *LPMIDIINCAPS2W;

typedef WORD *LPPATCHARRAY;

typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS *PMCI_WAVE_DELETE_PARMS;

typedef struct tagMIXERCONTROLW *PMIXERCONTROLW;

typedef struct tagMCI_WAVE_OPEN_PARMSW *LPMCI_WAVE_OPEN_PARMSW;

typedef UINT (*YIELDPROC)(MCIDEVICEID, DWORD);

typedef struct tagJOYCAPSW *LPJOYCAPSW;

typedef PMCI_ANIM_WINDOW_PARMSA PMCI_ANIM_WINDOW_PARMS;

typedef struct tagJOYCAPSA JOYCAPSA;

typedef JOYCAPSA JOYCAPS;

typedef struct mmtime_tag *PMMTIME;

typedef struct tagMCI_ANIM_UPDATE_PARMS *PMCI_ANIM_UPDATE_PARMS;

typedef HMIXEROBJ *LPHMIXEROBJ;

typedef LPMIXERCONTROLDETAILS_LISTTEXTA LPMIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMCI_OVLY_SAVE_PARMSW *PMCI_OVLY_SAVE_PARMSW;

typedef PMIXERCONTROLDETAILS_LISTTEXTA PMIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMSA;

typedef PMCI_OVLY_SAVE_PARMSA PMCI_OVLY_SAVE_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;

typedef struct tagWAVEINCAPS2W *LPWAVEINCAPS2W;

typedef struct tMIXERCONTROLDETAILS_SIGNED *LPMIXERCONTROLDETAILS_SIGNED;

typedef struct tagMIDIOUTCAPSA MIDIOUTCAPSA;

typedef MIDIOUTCAPSA MIDIOUTCAPS;

typedef struct timecaps_tag *PTIMECAPS;

typedef struct tagMCI_OVLY_WINDOW_PARMSW *LPMCI_OVLY_WINDOW_PARMSW;

typedef NPAUXCAPS2A NPAUXCAPS2;

typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;

typedef struct midiproptimediv_tag *LPMIDIPROPTIMEDIV;

typedef struct tagWAVEINCAPS2W *NPWAVEINCAPS2W;

typedef struct pcmwaveformat_tag PCMWAVEFORMAT;

typedef struct tagAUXCAPSW *NPAUXCAPSW;

typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;

typedef struct tagJOYCAPS2W *LPJOYCAPS2W;

typedef struct tagMIXERCAPSW MIXERCAPSW;

typedef struct wavehdr_tag *LPWAVEHDR;

typedef struct tagMCI_OVLY_SAVE_PARMSW *LPMCI_OVLY_SAVE_PARMSW;

typedef MIDIOUTCAPS2A MIDIOUTCAPS2;

typedef NPWAVEINCAPSA NPWAVEINCAPS;

typedef struct tagMCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;

typedef struct tagJOYCAPSW JOYCAPSW;

typedef struct joyinfoex_tag *LPJOYINFOEX;

typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;

typedef WAVEINCAPS2A WAVEINCAPS2;

typedef DWORD MCIERROR;

typedef PMIXERLINECONTROLSA PMIXERLINECONTROLS;

typedef struct tagMCI_VD_PLAY_PARMS *PMCI_VD_PLAY_PARMS;

typedef struct tagMCI_OPEN_PARMSW *PMCI_OPEN_PARMSW;

typedef PAUXCAPSA PAUXCAPS;

typedef struct tagWAVEINCAPSW WAVEINCAPSW;

typedef MIXERCAPS2A MIXERCAPS2;

typedef MIDIINCAPSA MIDIINCAPS;

typedef JOYCAPS2A JOYCAPS2;

typedef struct tagMIDIOUTCAPSW MIDIOUTCAPSW;

typedef struct tagMCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;

#define MMIOM_OPEN 3

#define MIXER_GETLINEINFOF_QUERYMASK 15

#define CALLBACK_WINDOW 65536

#define MCI_SEEK 2055

#define MIM_MOREDATA 972

#define MCI_OVLY_GETDEVCAPS_MAX_WINDOWS 16387

#define MCI_GETDEVCAPS_CAN_RECORD 1

#define MCI_ANIM_WINDOW_ENABLE_STRETCH 1048576

#define MIDI_MAPPER -1

#define MCI_VD_STEP_REVERSE 131072

#define MIXERCONTROL_CT_UNITS_DECIBELS 262144

#define MCI_VD_GETDEVCAPS_FAST_RATE 16387

#define MCIERR_BASE 256

#define MM_JOY1BUTTONUP 951

#define DRV_QUERYCONFIGURE 8

#define MCI_OPEN_TYPE_ID 4096

#define DRV_RESERVED 2048

#define MOM_OPEN 967

#define MEVT_COMMENT 130

#define MIXERCONTROL_CONTROLTYPE_TREBLE 1342373891

#define MCI_RESUME 2133

#define DRVCNF_CANCEL 0

#define TIME_CALLBACK_EVENT_SET 16

#define MIXERLINE_COMPONENTTYPE_SRC_LAST 4106

#define MCI_STATUS_CURRENT_TRACK 8

#define MMIO_INSTALLPROC 65536

#define MM_DRVM_ERROR 979

#define MM_MIM_LONGERROR 966

#define MIXERLINE_TARGETTYPE_WAVEOUT 1

#define MCIERR_DRIVER_INTERNAL 272

#define MCI_SEQ_STATUS_MASTER 16392

#define DRV_EXITSESSION 11

#define MMSYSERR_BADERRNUM 9

#define MCIERR_PARSER_INTERNAL 271

#define MCIERR_SEQ_NOMIDIPRESENT 343

#define MIXER_OBJECTF_HWAVEIN 2684354560

#define MCI_OVLY_RECT 65536

#define MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE 4099

#define WAVERR_SYNC 35

#define MCI_VD_MEDIA_CLV 1026

#define WAVE_FORMAT_48M08 4096

#define MIXER_GETCONTROLDETAILSF_QUERYMASK 15

#define MMSYSERR_LASTERROR 21

#define MIXERLINE_COMPONENTTYPE_DST_TELEPHONE 6

#define MCI_OVLY_INFO_TEXT 65536

#define MEVT_F_LONG 2147483648

#define MCI_ANIM_GETDEVCAPS_CAN_STRETCH 16391

#define MCI_GETDEVCAPS_COMPOUND_DEVICE 6

#define MCI_ALL_DEVICE_ID -1

#define WAVE_FORMAT_48M16 16384

#define MCI_CDA_STATUS_TYPE_TRACK 16385

#define DRV_REMOVE 10

#define MCIERR_WAVE_SETINPUTUNSUITABLE 329

#define MCI_DEVTYPE_CD_AUDIO 516

#define TIME_SMPTE 8

#define MIXERCONTROL_CT_CLASS_LIST 1879048192

#define MCI_SEEK_TO_START 256

#define MCIERR_PARAM_OVERFLOW 268

#define DRV_CANCEL 0

#define MIXERCONTROL_CONTROLTYPE_BUTTON 553713664

#define MIXERLINE_LINEF_DISCONNECTED 32768

#define JOY_BUTTON2CHG 512

#define MCI_ANIM_GETDEVCAPS_MAX_WINDOWS 16392

#define MIXER_GETLINEINFOF_TARGETTYPE 4

#define JOYERR_NOCANDO 166

#define MIXER_OBJECTF_HMIDIOUT 2952790016

#define WAVE_MAPPED 4

#define MCIERR_WAVE_SETINPUTINUSE 323

#define MCIERR_NONAPPLICABLE_FUNCTION 302

#define MCI_GETDEVCAPS_DEVICE_TYPE 4

#define DRV_INSTALL 9

#define MM_MIM_CLOSE 962

#define MMSYSERR_BASE 0

#define MCI_LOAD_FILE 256

#define JOY_CAL_READ6 8388608

#define MMIOERR_CANNOTWRITE 262

#define MIXER_LONG_NAME_CHARS 64

#define JOY_POVCENTERED -1

#define WAVE_FORMAT_44M08 256

#define JOY_CAL_READ3 262144

#define JOY_CAL_READ4 524288

#define JOY_CAL_READ5 4194304

#define MIXERCONTROL_CONTROLTYPE_SINGLESELECT 1879113728

#define MCI_SEQ_STATUS_PORT 16387

#define MCI_ANIM_STEP_REVERSE 65536

#define MCIERR_FLAGS_NOT_COMPATIBLE 284

#define WAVE_MAPPER -1

#define WAVE_INVALIDFORMAT 0

#define MIXER_OBJECTF_HANDLE 2147483648

#define MIXERCONTROL_CONTROLTYPE_DECIBELS 805568512

#define MCI_DEVTYPE_VCR 513

#define WAVE_FORMAT_44M16 1024

#define MCI_STATUS_LENGTH 1

#define MMIO_TOUPPER 16

#define SEEK_END 2

#define MIXER_OBJECTF_MIXER 0

#define MIXERLINE_COMPONENTTYPE_DST_SPEAKERS 4

#define MM_MOM_OPEN 967

#define MIXERLINE_COMPONENTTYPE_DST_LAST 8

#define MIXER_OBJECTF_HMIXER 2147483648

#define MIDIERR_STILLPLAYING 65

#define MCI_DEVTYPE_FIRST 513

#define WOM_OPEN 955

#define MIDIPROP_TIMEDIV 1

#define JOY_CAL_READZONLY 16777216

#define MM_WOM_OPEN 955

#define MM_JOY1MOVE 928

#define MEVT_F_SHORT 0

#define MCI_VD_SPIN_DOWN 131072

#define MIXERCONTROL_CONTROLTYPE_QSOUNDPAN 1073872898

#define MCI_WAVE_SET_CHANNELS 131072

#define MCI_MODE_SEEK 528

#define DRV_MCI_LAST 6143

#define DRV_DISABLE 5

#define MCIERR_SET_DRIVE 309

#define MCI_ANIM_GETDEVCAPS_PALETTES 16390

#define SND_NODEFAULT 2

#define MIDIPROP_TEMPO 2

#define WAVERR_BADFORMAT 32

#define MCI_ANIM_PLAY_SLOW 524288

#define MCI_ANIM_PLAY_SPEED 65536

#define MEVT_TEMPO 1

#define MCI_VD_SPIN_UP 65536

#define MCI_FIRST 2048

#define MCI_SET_DOOR_CLOSED 512

#define MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER 4103

#define MCIERR_ILLEGAL_FOR_AUTO_OPEN 303

#define SELECTDIB 41

#define MIXERCONTROL_CT_UNITS_MASK 16711680

#define MCI_OVLY_WHERE_SOURCE 131072

#define MMSYSERR_WRITEERROR 17

#define MM_JOY2ZMOVE 931

#define MIXERR_INVALVALUE 1026

#define MAXPNAMELEN 32

#define MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT 4104

#define WAVECAPS_SAMPLEACCURATE 32

#define MIDIERR_DONT_CONTINUE 71

#define MHDR_INQUEUE 4

#define MIXERLINE_COMPONENTTYPE_DST_DIGITAL 1

#define MCIERR_BAD_INTEGER 270

#define JOY_BUTTON32 2147483648

#define TIMERR_NOERROR 0

#define MMSYSERR_INVALPARAM 11

#define JOY_BUTTON30 536870912

#define JOY_BUTTON31 1073741824

#define MCI_DEVTYPE_SEQUENCER 523

#define MOD_SQSYNTH 3

#define MCIERR_DEVICE_LENGTH 310

#define JOY_BUTTON29 268435456

#define MCI_GETDEVCAPS_CAN_EJECT 7

#define JOY_BUTTON25 16777216

#define MEVT_VERSION 132

#define JOY_BUTTON26 33554432

#define JOY_BUTTON27 67108864

#define MMIO_FINDRIFF 32

#define JOY_BUTTON28 134217728

#define JOY_BUTTON21 1048576

#define JOY_BUTTON22 2097152

#define MCI_WAVE_OPEN_BUFFER 65536

#define JOY_BUTTON23 4194304

#define MCI_TRACK 16

#define JOY_BUTTON24 8388608

#define MCIERR_FILE_NOT_FOUND 275

#define JOY_BUTTON7 64

#define JOY_CAL_READXONLY 1048576

#define JOY_BUTTON8 128

#define JOY_BUTTON5 16

#define JOY_BUTTON6 32

#define JOY_BUTTON20 524288

#define JOY_BUTTON3 4

#define JOY_BUTTON4 8

#define JOY_BUTTON1 1

#define JOY_POVFORWARD 0

#define JOY_BUTTON2 2

#define MCI_VD_MEDIA_CAV 1027

#define TIME_ONESHOT 0

#define JOY_BUTTON9 256

#define MCI_ESCAPE 2053

#define MMSYSERR_KEYNOTFOUND 15

#define JOY_BUTTON18 131072

#define JOY_BUTTON19 262144

#define MIXERR_INVALCONTROL 1025

#define MMSYSERR_INVALIDALIAS 13

#define JOY_BUTTON14 8192

#define JOY_BUTTON15 16384

#define JOY_BUTTON16 32768

#define JOY_BUTTON17 65536

#define JOY_BUTTON10 512

#define JOY_BUTTON11 1024

#define JOY_BUTTON12 2048

#define JOY_BUTTON13 4096

#define MCIERR_NO_ELEMENT_ALLOWED 301

#define MCI_ANIM_STEP_FRAMES 131072

#define MCI_STATUS_MODE 4

#define MCI_OPEN_TYPE 8192

#define MCI_SEQ_DIV_SMPTE_30 1220

#define MIXERLINE_COMPONENTTYPE_SRC_DIGITAL 4097

#define MCIERR_EXTENSION_NOT_FOUND 281

#define MCI_ANIM_OPEN_PARENT 131072

#define MCI_FORMAT_TMSF 10

#define MCI_MODE_RECORD 527

#define MIXERLINE_TARGETTYPE_AUX 5

#define MEVT_F_CALLBACK 1073741824

#define MOM_CLOSE 968

#define MCI_DEVTYPE_OTHER 521

#define MIXERLINE_COMPONENTTYPE_SRC_FIRST 4096

#define WAVE_FORMAT_QUERY 1

#define MCI_SET_OFF 16384

#define MIXERLINE_COMPONENTTYPE_DST_FIRST 0

#define MIXERLINE_TARGETTYPE_MIDIIN 4

#define MIXERLINE_COMPONENTTYPE_SRC_LINE 4098

#define MM_WOM_DONE 957

#define TIME_SAMPLES 2

#define MCI_CDA_TRACK_AUDIO 1088

#define MMIO_DENYNONE 64

#define MIM_DATA 963

#define MCI_SEQ_DIV_SMPTE_24 1217

#define MCI_SEQ_DIV_SMPTE_25 1218

#define SEEK_SET 0

#define MCI_ANIM_REALIZE_BKGD 131072

#define MIXER_OBJECTF_WAVEOUT 268435456

#define MIXERCONTROL_CT_CLASS_FADER 1342177280

#define MIXERCONTROL_CT_CLASS_TIME 1610612736

#define MCI_MODE_PAUSE 529

#define MIXERLINE_COMPONENTTYPE_DST_LINE 2

#define MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE 4102

#define MIXERCONTROL_CONTROLTYPE_BASS 1342373890

#define MIXERLINE_COMPONENTTYPE_SRC_ANALOG 4106

#define MMIOERR_CANNOTREAD 261

#define MCI_INFO_NAME 4096

#define MIXER_GETCONTROLDETAILSF_LISTTEXT 1

#define MCI_SAVE_FILE 256

#define MCIERR_WAVE_INPUTUNSPECIFIED 325

#define MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT 1895890944

#define MCI_PLAY 2054

#define JOY_CAL_READVONLY 134217728

#define MCI_WAVE_SET_AVGBYTESPERSEC 524288

#define MCI_WAVE_STATUS_LEVEL 16391

#define MCIERR_MUST_USE_SHAREABLE 291

#define WOM_CLOSE 956

#define MCI_SEQ_STATUS_NAME 16395

#define MIXERCONTROL_CONTROLTYPE_VOLUME 1342373889

#define MIXERCONTROL_CT_UNITS_PERCENT 327680

#define WAVECAPS_PITCH 1

#define SND_APPLICATION 128

#define WAVE_FORMAT_1S08 2

#define MMIO_DELETE 512

#define MMIO_REMOVEPROC 131072

#define MCI_GETDEVCAPS_CAN_SAVE 9

#define MIXER_SETCONTROLDETAILSF_CUSTOM 1

#define MCI_VD_STEP_FRAMES 65536

#define WAVECAPS_PLAYBACKRATE 2

#define MIXER_GETLINEINFOF_DESTINATION 0

#define WAVE_FORMAT_1S16 8

#define MCIERR_SEQ_PORT_MAPNODEVICE 339

#define WAVECAPS_SYNC 16

#define MIDI_UNCACHE 4

#define MCI_REALIZE 2112

#define DRV_LOAD 1

#define WAVE_FORMAT_DIRECT_QUERY 9

#define MCIERR_WAVE_OUTPUTSINUSE 320

#define MCI_WAVE_STATUS_BLOCKALIGN 16389

#define MCI_VD_GETDEVCAPS_SLOW_RATE 16388

#define MCI_FORMAT_HMS 1

#define CALLBACK_EVENT 327680

#define MCI_NOTIFY_FAILURE 8

#define MCI_STATUS_ITEM 256

#define MCI_ANIM_GETDEVCAPS_SLOW_RATE 16387

#define MEVT_NOP 2

#define MCI_FORMAT_SMPTE_30DROP 7

#define JOY_RETURNALL 255

#define MCI_FORMAT_BYTES 8

#define MIXERCONTROL_CONTROLTYPE_PERCENT 805634048

#define MCI_DEVTYPE_ANIMATION 519

#define MCI_OVLY_WINDOW_TEXT 524288

#define MIXER_OBJECTF_MIDIOUT 805306368

#define MIXERCONTROL_CONTROLTYPE_MIXER 1895890945

#define MCI_VD_GETDEVCAPS_CAV 131072

#define MMIOERR_CHUNKNOTFOUND 265

#define DRV_OPEN 3

#define MCI_SET_VIDEO 4096

#define MCI_WAVE_MAPPER 1153

#define MMIO_RWMODE 3

#define MMIOERR_BASE 256

#define DRV_FREE 6

#define WAVE_FORMAT_96S08 131072

#define MMIOERR_OUTOFMEMORY 258

#define MIDICAPS_STREAM 8

#define WAVERR_LASTERROR 35

#define MCIERR_INVALID_DEVICE_NAME 263

#define MOD_SYNTH 2

#define WAVE_FORMAT_96S16 524288

#define MCI_MODE_PLAY 526

#define MCI_WAVE_SET_FORMATTAG 65536

#define MM_DRVM_CLOSE 977

#define MM_STREAM_DONE 982

#define MCI_TO 8

#define WAVERR_STILLPLAYING 33

#define JOY_RETURNBUTTONS 128

#define DRV_RESTART 2

#define MCI_RECORD 2063

#define MCI_VD_STATUS_MEDIA_TYPE 16388

#define MMIOERR_TOOMANYOPENFILES 271

#define MCI_ANIM_INFO_TEXT 65536

#define MIDIERR_NOMAP 66

#define MMSYSERR_ERROR 1

#define MIXER_GETLINECONTROLSF_ONEBYTYPE 2

#define JOYSTICKID1 0

#define JOYSTICKID2 1

#define MCI_OVLY_GETDEVCAPS_CAN_FREEZE 16386

#define MMIOERR_CANNOTOPEN 259

#define AUXCAPS_LRVOLUME 2

#define MCI_ANIM_PUT_SOURCE 131072

#define MIDIERR_BASE 64

#define MCI_UPDATE 2132

#define MIXERCONTROL_CONTROLTYPE_PAN 1073872897

#define MIXERCONTROL_CT_UNITS_CUSTOM 0

#define MIDIERR_LASTERROR 71

#define MIXERCONTROL_CONTROLTYPE_BOOLEANMETER 268500992

#define WAVERR_UNPREPARED 34

#define MCI_ANIM_STATUS_HPAL 16388

#define MCI_CDA_TRACK_OTHER 1089

#define JOYERR_BASE 160

#define MCI_ANIM_WINDOW_DEFAULT 0

#define MIXERLINE_LINEF_SOURCE 2147483648

#define MCI_SET_AUDIO_LEFT 1

#define MCIERR_DEVICE_NOT_INSTALLED 306

#define MMIO_DEFAULTBUFFER 8192

#define MCI_INFO_COPYRIGHT 8192

#define MCI_WAVE_STATUS_BITSPERSAMPLE 16390

#define MCI_OVLY_WHERE_DESTINATION 262144

#define MCI_SEQ_SET_MASTER 524288

#define MCI_SEQ_SET_TEMPO 65536

#define MIDIERR_NODEVICE 68

#define MCI_SYSINFO_QUANTITY 256

#define MCI_STATUS_POSITION 2

#define MIXERCONTROL_CT_SC_LIST_SINGLE 0

#define MMSYSERR_MOREDATA 21

#define MCIERR_GET_CD 307

#define MCIERR_MISSING_PARAMETER 273

#define MCI_OVLY_PUT_DESTINATION 262144

#define MCI_SET 2061

#define MCI_SEQ_STATUS_SLAVE 16391

#define MCI_ANIM_PUT_DESTINATION 262144

#define MCI_FORMAT_MILLISECONDS 0

#define WAVE_FORMAT_4S16 2048

#define WAVE_FORMAT_PCM 1

#define MCIERR_UNSUPPORTED_FUNCTION 274

#define MIXERCONTROL_CONTROLTYPE_LOUDNESS 536936452

#define MCI_OVLY_WINDOW_DEFAULT 0

#define MMIO_READWRITE 2

#define JOY_POVLEFT 27000

#define MCI_UNFREEZE 2117

#define WIM_DATA 960

#define MM_MOM_CLOSE 968

#define MCI_VD_STATUS_FORWARD 16387

#define MCI_STATUS_START 512

#define MCI_OVLY_PUT_VIDEO 1048576

#define JOY_RETURNX 1

#define MMIOM_WRITE 1

#define JOY_RETURNZ 4

#define JOY_RETURNY 2

#define MIXERCONTROL_CONTROLTYPE_MICROTIME 1610809344

#define JOY_RETURNV 32

#define JOY_RETURNU 16

#define JOY_RETURNR 8

#define WAVE_FORMAT_2M16 64

#define MM_JOY2BUTTONUP 952

#define MIDICAPS_LRVOLUME 2

#define MCI_DEVTYPE_DAT 517

#define MIDIERR_NOTREADY 67

#define SND_SYNC 0

#define MMIO_FINDLIST 64

#define MIDIERR_BADOPENMODE 70

#define MCI_PAUSE 2057

#define MIXER_GETLINECONTROLSF_QUERYMASK 15

#define MCI_SEQ_STATUS_DIVTYPE 16394

#define MCI_STATUS_NUMBER_OF_TRACKS 3

#define JOY_POVRIGHT 9000

#define WAVE_FORMAT_2M08 16

#define JOY_BUTTON1CHG 256

#define MMSYSERR_DELETEERROR 18

#define MM_JOY1ZMOVE 930

#define MCI_WAVE_SET_SAMPLESPERSEC 262144

#define MCI_GETDEVCAPS_HAS_VIDEO 3

#define DRV_OK 1

#define MIDICAPS_CACHE 4

#define DRV_ENABLE 2

#define MCI_SET_AUDIO_ALL 0

#define WAVECAPS_VOLUME 4

#define MCI_NOTIFY_SUPERSEDED 2

#define MIXERCONTROL_CONTROLTYPE_UNSIGNED 805502976

#define MIXERR_BASE 1024

#define MCIERR_NEW_REQUIRES_ALIAS 299

#define MCI_SPIN 2060

#define MCI_ANIM_GETDEVCAPS_FAST_RATE 16386

#define MCIERR_DRIVER 278

#define WAVE_ALLOWSYNC 2

#define MIXERCONTROL_CT_SUBCLASS_MASK 251658240

#define MIXERCONTROL_CT_SC_SWITCH_BUTTON 16777216

#define MIDISTRM_ERROR -2

#define MCI_SEQ_SET_OFFSET 16777216

#define MM_MCISIGNAL 971

#define MCI_OVLY_WINDOW_HWND 65536

#define WHDR_ENDLOOP 8

#define MCI_SET_ON 8192

#define MMIO_DIRTY 268435456

#define MCI_STOP 2056

#define MCI_WAVE_OUTPUT 8388608

#define MCI_VD_GETDEVCAPS_CLV 65536

#define WAVECAPS_LRVOLUME 8

#define WAVE_FORMAT_4S08 512

#define MCIERR_SEQ_PORT_NONEXISTENT 338

#define MIXERCONTROL_CONTROLTYPE_CUSTOM 0

#define MCIERR_INVALID_FILE 296

#define AUXCAPS_CDAUDIO 1

#define JOY_RETURNPOVCTS 512

#define JOY_POVBACKWARD 18000

#define MOM_POSITIONCB 970

#define MMIO_CREATERIFF 32

#define MM_MCINOTIFY 953

#define MIXERCONTROL_CT_CLASS_METER 268435456

#define MIXERCONTROL_CONTROLTYPE_SIGNED 805437440

#define MMIOM_WRITEFLUSH 5

#define MIXERCONTROL_CONTROLTYPE_ONOFF 536936449

#define MMSYSERR_ALLOCATED 4

#define MIXERCONTROL_CT_SC_TIME_MILLISECS 16777216

#define MIXERCONTROL_CT_CLASS_SWITCH 536870912

#define MIDIMAPPER -1

#define MIXER_GETLINEINFOF_COMPONENTTYPE 3

#define MIXERCONTROL_CT_CLASS_MASK 4026531840

#define DRV_POWER 15

#define MCI_FROM 4

#define MIXER_SETCONTROLDETAILSF_QUERYMASK 15

#define MIXERCONTROL_CT_CLASS_SLIDER 1073741824

#define MMSYSERR_INVALHANDLE 5

#define MCIERR_DUPLICATE_ALIAS 289

#define MIXERCONTROL_CT_UNITS_SIGNED 131072

#define MM_MOM_POSITIONCB 970

#define SND_NOWAIT 8192

#define MMSYSERR_VALNOTFOUND 19

#define MM_JOY1BUTTONDOWN 949

#define MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC 4101

#define MCIERR_WAVE_OUTPUTSUNSUITABLE 326

#define MIXERCONTROL_CONTROLF_UNIFORM 1

#define TIME_CALLBACK_FUNCTION 0

#define MOD_FMSYNTH 4

#define MCI_FORMAT_FRAMES 3

#define JOY_RETURNRAWDATA 256

#define MCIERR_MISSING_DEVICE_NAME 292

#define TIME_PERIODIC 1

#define MCI_OPEN_ELEMENT 512

#define TIME_MIDI 16

#define SND_ALIAS_START 0

#define MCI_OVLY_GETDEVCAPS_CAN_STRETCH 16385

#define MCI_STEP 2062

#define MM_MIXM_LINE_CHANGE 976

#define MCI_OPEN_ALIAS 1024

#define MCI_DELETE 2134

#define WAVE_FORMAT_44S08 512

#define MCI_WAVE_STATUS_AVGBYTESPERSEC 16388

#define MIXERLINE_COMPONENTTYPE_DST_UNDEFINED 0

#define MCI_RECORD_INSERT 256

#define MIXER_OBJECTF_WAVEIN 536870912

#define MIXERLINE_COMPONENTTYPE_DST_HEADPHONES 5

#define MCIERR_UNRECOGNIZED_KEYWORD 259

#define DRVCNF_RESTART 2

#define MIXERLINE_COMPONENTTYPE_DST_WAVEIN 7

#define WAVE_FORMAT_44S16 2048

#define MCI_VD_ESCAPE_STRING 256

#define MMSYSERR_INVALFLAG 10

#define MCI_WAVE_SET_ANYINPUT 67108864

#define MCI_SEQ_STATUS_COPYRIGHT 16396

#define MHDR_ISSTRM 8

#define MCI_ANIM_GETDEVCAPS_NORMAL_RATE 16388

#define SND_ASYNC 1

#define MCI_ANIM_STATUS_HWND 16387

#define MMIOM_SEEK 2

#define MIXERCONTROL_CT_UNITS_BOOLEAN 65536

#define MCIERR_SEQ_TIMER 341

#define MCI_OPEN 2051

#define MM_DRVM_OPEN 976

#define MCIERR_CANNOT_USE_ALL 279

#define MMIO_DENYWRITE 32

#define MIXERCONTROL_CONTROLTYPE_MILLITIME 1627586560

#define MCI_MODE_STOP 525

#define MCI_SEQ_MAPPER 65535

#define MCI_SEQ_SET_SLAVE 262144

#define MIXERCONTROL_CONTROLTYPE_SIGNEDMETER 268566528

#define MEVT_SHORTMSG 0

#define MCI_ANIM_STATUS_STRETCH 16389

#define SND_MEMORY 4

#define MCI_VD_MEDIA_OTHER 1028

#define MMIOERR_PATHNOTFOUND 267

#define MCI_INFO_FILE 512

#define MIXERCONTROL_CT_SC_METER_POLLED 0

#define MMIO_FINDPROC 262144

#define MCI_OPEN_ELEMENT_ID 2048

#define MCIERR_OUTOFRANGE 282

#define MCI_VD_GETDEVCAPS_NORMAL_RATE 16389

#define MCI_SEQ_FILE 16386

#define MIXERLINE_TARGETTYPE_WAVEIN 2

#define MCIERR_NO_INTEGER 312

#define WHDR_PREPARED 2

#define MCI_DEVTYPE_WAVEFORM_AUDIO 522

#define MCI_OVLY_WINDOW_DISABLE_STRETCH 2097152

#define MCIERR_FILE_READ 348

#define MMIO_DENYREAD 48

#define MCI_BREAK_HWND 512

#define MM_MIM_OPEN 961

#define MIXERCONTROL_CONTROLTYPE_BOOLEAN 536936448

#define MCIERR_INVALID_DEVICE_ID 257

#define MIXER_OBJECTF_HMIDIIN 3221225472

#define MCI_BREAK_KEY 256

#define JOYERR_NOERROR 0

#define MMIO_PARSE 256

#define MCI_VD_STATUS_SPEED 16386

#define MMIO_EXCLUSIVE 16

#define MCIERR_HARDWARE 262

#define MCI_SEQ_STATUS_OFFSET 16393

#define DRV_CLOSE 4

#define MCIERR_FILE_WRITE 349

#define SEEK_CUR 1

#define MM_WOM_CLOSE 956

#define MCI_DEVTYPE_VIDEODISC 514

#define MCI_ANIM_WHERE_DESTINATION 262144

#define MCIERR_MULTIPLE 280

#define TIMERR_NOCANDO 97

#define MCIERR_SEQ_DIV_INCOMPATIBLE 336

#define MCIERR_CANNOT_LOAD_DRIVER 266

#define MCIERR_CREATEWINDOW 347

#define MIXERCONTROL_CONTROLTYPE_MUTE 536936450

#define MCI_SEQ_STATUS_TEMPO 16386

#define MHDR_PREPARED 2

#define WAVE_FORMAT_1M08 1

#define WAVE_FORMAT_1M16 4

#define MIM_LONGERROR 966

#define MCI_OVLY_WHERE_FRAME 524288

#define TIMERR_BASE 96

#define MM_JOY2MOVE 929

#define MIM_ERROR 965

#define CALLBACK_THREAD 131072

#define WAVE_FORMAT_48S08 8192

#define MCI_MODE_OPEN 530

#define WAVE_FORMAT_48S16 32768

#define MCI_OPEN_SHAREABLE 256

#define MCI_VD_PLAY_FAST 131072

#define MCIERR_DEVICE_TYPE_REQUIRED 287

#define MIM_OPEN 961

#define MCIERR_WAVE_INPUTSINUSE 322

#define MCI_INFO_MEDIA_UPC 1024

#define SND_LOOP 8

#define MIXER_GETLINEINFOF_SOURCE 1

#define MMIO_GETTEMP 131072

#define MCI_BREAK_OFF 1024

#define SND_ALIAS_ID 1114112

#define MHDR_DONE 1

#define SND_RESOURCE 262148

#define MCI_DEVTYPE_LAST 523

#define MIXERCONTROL_CONTROLF_DISABLED 2147483648

#define MCI_ANIM_OPEN_WS 65536

#define MCI_LOAD 2128

#define MM_STREAM_OPEN 980

#define JOY_CAL_READYONLY 2097152

#define DRV_CONFIGURE 7

#define MCI_ANIM_UPDATE_HDC 131072

#define MCI_ANIM_OPEN_NOSTATIC 262144

#define MMIOERR_CANNOTEXPAND 264

#define TIME_KILL_SYNCHRONOUS 256

#define MCIERR_WAVE_SETOUTPUTINUSE 321

#define QUERYROPSUPPORT 40

#define MCIERR_WAVE_INPUTSUNSUITABLE 328

#define MMIOERR_ACCESSDENIED 268

#define MCIERR_BAD_CONSTANT 290

#define CALLBACK_FUNCTION 196608

#define MCI_INFO 2058

#define MCIERR_DEVICE_LOCKED 288

#define MIXERCONTROL_CT_SC_TIME_MICROSECS 0

#define MCI_SEQ_MIDI 16387

#define MCIERR_OUT_OF_MEMORY 264

#define MIDIPROP_GET 1073741824

#define MCI_PUT 2114

#define MCI_NOTIFY 1

#define MCI_ANIM_GETDEVCAPS_CAN_REVERSE 16385

#define MIXERCONTROL_CT_CLASS_NUMBER 805306368

#define MCI_WAVE_SET_BLOCKALIGN 1048576

#define MCI_ANIM_WINDOW_TEXT 524288

#define MCI_GETDEVCAPS_HAS_AUDIO 2

#define MCI_SEQ_DIV_PPQN 1216

#define MIXER_OBJECTF_MIDIIN 1073741824

#define MCI_VD_SEEK_REVERSE 65536

#define MCI_WAVE_PCM 1152

#define MCI_NOTIFY_SUCCESSFUL 1

#define MIDI_CACHE_ALL 1

#define AUXCAPS_VOLUME 1

#define DRV_USER 16384

#define MMSYSERR_NODRIVER 6

#define WHDR_INQUEUE 16

#define MCI_SET_DOOR_OPEN 256

#define MM_WIM_OPEN 958

#define MCIERR_NO_CLOSING_QUOTE 294

#define MCI_OVLY_WINDOW_ENABLE_STRETCH 1048576

#define MCI_STATUS 2068

#define JOY_BUTTON4CHG 2048

#define MCI_ANIM_STATUS_SPEED 16385

#define MIXERCONTROL_CT_SC_LIST_MULTIPLE 16777216

#define MCI_VD_OFFSET 1024

#define JOY_USEDEADZONE 2048

#define TIMERR_STRUCT 129

#define MOD_WAVETABLE 6

#define MCI_GETDEVCAPS 2059

#define MIDICAPS_VOLUME 1

#define MM_STREAM_CLOSE 981

#define MCI_BREAK 2065

#define MCI_DEVTYPE_OVERLAY 515

#define MCI_CUE 2096

#define MCIERR_SEQ_PORT_MISCERROR 340

#define MCI_CUT 2129

#define MCI_OVLY_PUT_SOURCE 131072

#define MCI_OVLY_STATUS_STRETCH 16386

#define MCI_SYSINFO_NAME 1024

#define MCI_WAVE_INPUT 4194304

#define MCI_WAVE_OFFSET 1152

#define MIXERCONTROL_CONTROLF_MULTIPLE 2

#define MCI_WAVE_GETDEVCAPS_OUTPUTS 16386

#define MCI_INFO_MEDIA_IDENTITY 2048

#define MMSYSERR_BADDB 14

#define NEWTRANSPARENT 3

#define MAX_JOYSTICKOEMVXDNAME 260

#define JOYERR_PARMS 165

#define MCIERR_MISSING_COMMAND_STRING 267

#define MMIO_GLOBALPROC 268435456

#define MCI_WAVE_SET_ANYOUTPUT 134217728

#define JOY_CAL_READXYONLY 131072

#define MMSYSERR_NOTENABLED 3

#define SND_PURGE 64

#define JOYCAPS_POVCTS 64

#define MCI_VD_PLAY_SCAN 524288

#define MCI_GETDEVCAPS_ITEM 256

#define MIXERLINE_COMPONENTTYPE_DST_MONITOR 3

#define MIDIPATCHSIZE 128

#define JOY_RETURNCENTERED 1024

#define MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED 4096

#define MMIO_FHOPEN 16

#define MCI_WAVE_STATUS_CHANNELS 16386

#define JOY_CAL_READUONLY 67108864

#define MMIOERR_FILENOTFOUND 257

#define MCI_ANIM_STATUS_FORWARD 16386

#define CALLBACK_TASK 131072

#define MIXER_GETCONTROLDETAILSF_VALUE 0

#define CALLBACK_NULL 0

#define MIXERR_LASTERROR 1026

#define MIXERLINE_COMPONENTTYPE_DST_VOICEIN 8

#define JOYCAPS_HASR 2

#define JOYCAPS_HASV 8

#define SND_ALIAS 65536

#define MCI_OVLY_OPEN_WS 65536

#define JOYCAPS_HASU 4

#define JOYCAPS_HASZ 1

#define MCI_CLOSE 2052

#define MIXERR_INVALLINE 1024

#define WAVE_FORMAT_4M08 256

#define MMIOERR_UNBUFFERED 266

#define MCI_SET_AUDIO_RIGHT 2

#define MMIO_FINDCHUNK 16

#define MCI_LAST 4095

#define MCIERR_WAVE_SETOUTPUTUNSUITABLE 327

#define MMIOERR_INVALIDFILE 272

#define MM_MOM_DONE 969

#define MIDI_IO_STATUS 32

#define MMIOM_CLOSE 4

#define MCIERR_FILE_NOT_SAVED 286

#define SND_FILENAME 131072

#define MIXER_OBJECTF_HWAVEOUT 2415919104

#define MM_MIM_MOREDATA 972

#define MIXERCONTROL_CONTROLTYPE_PEAKMETER 268566529

#define WHDR_DONE 1

#define MCI_PASTE 2131

#define MCI_ANIM_PLAY_SCAN 1048576

#define MCI_STATUS_TIME_FORMAT 6

#define MIXER_SHORT_NAME_CHARS 16

#define MCIERR_NO_IDENTITY 350

#define MIDI_CACHE_BESTFIT 2

#define WIM_OPEN 958

#define MCI_WINDOW 2113

#define MCI_ANIM_RECT 65536

#define MIXERCONTROL_CT_UNITS_UNSIGNED 196608

#define WAVE_FORMAT_DIRECT 8

#define JOY_RETURNPOV 64

#define MCI_ANIM_WINDOW_HWND 65536

#define MCI_WAVE_STATUS_SAMPLESPERSEC 16387

#define MCI_MODE_NOT_READY 524

#define TIME_TICKS 32

#define MMIO_COMPAT 0

#define WAVE_FORMAT_4M16 1024

#define WAVERR_BASE 32

#define MCI_OVLY_OPEN_PARENT 131072

#define MIDIERR_UNPREPARED 64

#define MCIERR_EXTRA_CHARACTERS 305

#define MCI_SEQ_FORMAT_SONGPTR 16385

#define MMIOERR_CANNOTSEEK 263

#define MCI_ANIM_PLAY_REVERSE 131072

#define MIXER_GETLINECONTROLSF_ONEBYID 1

#define JOYCAPS_HASPOV 16

#define MCI_USER_MESSAGES 3072

#define MIXERCONTROL_CONTROLTYPE_SLIDER 1073872896

#define MIXER_SETCONTROLDETAILSF_VALUE 0

#define MIXER_OBJECTF_AUX 1342177280

#define JOY_CAL_READRONLY 33554432

#define MCI_SAVE 2067

#define MCI_WAIT 2

#define MIDI_CACHE_QUERY 3

#define MCI_OVLY_WHERE_VIDEO 1048576

#define MCIERR_SEQ_PORT_INUSE 337

#define MCI_OVLY_WINDOW_STATE 262144

#define MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY 4105

#define MOD_SWSYNTH 7

#define MMSYSERR_NOMEM 7

#define MCI_SEQ_SMPTE 16388

#define MCIERR_FILENAME_REQUIRED 304

#define MCI_WAVE_STATUS_FORMATTAG 16385

#define MIXER_GETLINEINFOF_LINEID 2

#define MIXERCONTROL_CONTROLTYPE_BASS_BOOST 536945271

#define MCIERR_UNRECOGNIZED_COMMAND 261

#define MCI_SEQ_DIV_SMPTE_30DROP 1219

#define MMIOM_USER 32768

#define MMSYSERR_READERROR 16

#define MIXERLINE_TARGETTYPE_MIDIOUT 3

#define MCI_SET_TIME_FORMAT 1024

#define DRV_MCI_FIRST 2048

#define MCI_VD_PLAY_SPEED 262144

#define MIXERCONTROL_CONTROLTYPE_MUX 1879113729

#define MIM_CLOSE 962

#define MCI_RECORD_OVERWRITE 512

#define MCI_SEQ_SET_PORT 131072

#define MM_WIM_DATA 960

#define MCI_GETDEVCAPS_CAN_PLAY 8

#define MCI_DEVTYPE_DIGITAL_VIDEO 520

#define MCI_SYSINFO 2064

#define MCI_STATUS_MEDIA_PRESENT 5

#define MMSYSERR_HANDLEBUSY 12

#define MM_MIM_ERROR 965

#define MMSYSERR_NOTSUPPORTED 8

#define SND_NOSTOP 16

#define WHDR_BEGINLOOP 4

#define MMIO_EMPTYBUF 16

#define MCI_DEVTYPE_FIRST_USER 4096

#define WAVE_FORMAT_2S16 128

#define AUXCAPS_AUXIN 2

#define MCI_STATUS_READY 7

#define MMIO_SHAREMODE 112

#define MCI_GETDEVCAPS_USES_FILES 5

#define MCIERR_SET_CD 308

#define MIXERCONTROL_CONTROLTYPE_STEREOENH 536936453

#define MMIOERR_CANNOTCLOSE 260

#define MIXERCONTROL_CT_SC_SWITCH_BOOLEAN 0

#define MCI_ANIM_PLAY_FAST 262144

#define MMIO_CREATELIST 64

#define MIXERCONTROL_CONTROLTYPE_FADER 1342373888

#define MMIOERR_SHARINGVIOLATION 269

#define MMIO_CREATE 4096

#define MIM_LONGDATA 964

#define MCI_VD_GETDEVCAPS_CAN_REVERSE 16386

#define JOYCAPS_POV4DIR 32

#define MCI_FORMAT_SAMPLES 9

#define MM_MIM_DATA 963

#define MM_WIM_CLOSE 959

#define MMSYSERR_BADDEVICEID 2

#define MMIO_ALLOCBUF 65536

#define MCI_SEQ_OFFSET 1216

#define MM_MIM_LONGDATA 964

#define MCI_INFO_PRODUCT 256

#define WAVE_FORMAT_2S08 32

#define MCI_OVLY_STATUS_HWND 16385

#define MMIO_READ 0

#define TIME_CALLBACK_EVENT_PULSE 32

#define MMIOERR_NETWORKERROR 270

#define MCI_OVLY_PUT_FRAME 524288

#define MCI_SEEK_TO_END 512

#define MMIO_WRITE 1

#define MCI_ANIM_WHERE_SOURCE 131072

#define MCI_VD_PLAY_REVERSE 65536

#define AUX_MAPPER -1

#define MCIERR_NULL_PARAMETER_BLOCK 297

#define JOY_BUTTON3CHG 1024

#define MCI_FREEZE 2116

#define MMIO_EXIST 16384

#define MIDIERR_INVALIDSETUP 69

#define MCIERR_DEVICE_NOT_READY 276

#define MCIERR_SEQ_PORTUNSPECIFIED 342

#define MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER 268632064

#define MCIERR_WAVE_OUTPUTUNSPECIFIED 324

#define CALLBACK_TYPEMASK 458752

#define MCI_SEQ_NONE 65533

#define MCIERR_NO_WINDOW 346

#define MIXER_GETLINECONTROLSF_ALL 0

#define WIM_CLOSE 959

#define MIXERLINE_TARGETTYPE_UNDEFINED 0

#define MCI_WHERE 2115

#define MCI_FORMAT_SMPTE_30 6

#define MCI_FORMAT_SMPTE_24 4

#define MCI_FORMAT_SMPTE_25 5

#define MCIERR_CUSTOM_DRIVER_BASE 512

#define MM_DRVM_DATA 978

#define MCI_CD_OFFSET 1088

#define MCIERR_INTERNAL 277

#define MCIERR_UNNAMED_RESOURCE 298

#define MCI_COPY 2130

#define MM_STREAM_ERROR 983

#define MMSYSERR_NOERROR 0

#define MMIO_UNICODEPROC 16777216

#define MCI_VD_PLAY_SLOW 1048576

#define MOM_DONE 969

#define MIXERCONTROL_CONTROLTYPE_MONO 536936451

#define WOM_DONE 957

#define MCIERR_DUPLICATE_FLAGS 295

#define MCI_SET_AUDIO 2048

#define MAXERRORLENGTH 256

#define TIME_MS 1

#define MIXERCONTROL_CONTROLTYPE_EQUALIZER 1342373892

#define JOY_CAL_READALWAYS 65536

#define MOD_MAPPER 5

#define MCI_VD_FORMAT_TRACK 16385

#define MOD_MIDIPORT 1

#define MCI_SYSINFO_INSTALLNAME 2048

#define MIXERLINE_LINEF_ACTIVE 1

#define MMIOM_RENAME 6

#define MCI_FORMAT_MSF 2

#define MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER 4100

#define MCI_VD_MODE_PARK 1025

#define TIME_BYTES 4

#define MM_JOY2BUTTONDOWN 950

#define MIXERCONTROL_CT_CLASS_CUSTOM 0

#define MCI_STRING_OFFSET 512

#define MCI_WAVE_SET_BITSPERSAMPLE 2097152

#define MCI_ANIM_REALIZE_NORM 65536

#define MMSYSERR_NODRIVERCB 20

#define MCI_VD_STATUS_DISC_SIZE 16390

#define MCI_ANIM_WINDOW_STATE 262144

#define MCI_DEVTYPE_SCANNER 518

#define MCI_VD_STATUS_SIDE 16389

#define MIDIPROP_SET 2147483648

#define MCIERR_BAD_TIME_FORMAT 293

#define DRVCNF_OK 1

#define MCIERR_DEVICE_ORD_LENGTH 311

#define JOYERR_UNPLUGGED 167

#define MCI_WAVE_GETDEVCAPS_INPUTS 16385

#define MCI_NOTIFY_ABORTED 4

#define MCIERR_DEVICE_OPEN 265

#define MMIOM_READ 0

#define MCIERR_MISSING_STRING_ARGUMENT 269

#define WAVE_FORMAT_96M08 65536

#define MEVT_LONGMSG 128

#define WAVE_FORMAT_96M16 262144

#define MCI_SYSINFO_OPEN 512

#define MCIERR_NOTIFY_ON_AUTO_OPEN 300

#define MM_MIXM_CONTROL_CHANGE 977

#define MCI_ANIM_WINDOW_DISABLE_STRETCH 2097152

#define UNUSED32 4294967295

#define UNUSED16 65535

typedef struct _DATATYPES_INFO_1W _DATATYPES_INFO_1W, *P_DATATYPES_INFO_1W;

typedef struct _DATATYPES_INFO_1W *LPDATATYPES_INFO_1W;

struct _DATATYPES_INFO_1W {
    LPWSTR pName;
};

typedef struct _PRINTER_NOTIFY_INFO_DATA _PRINTER_NOTIFY_INFO_DATA, *P_PRINTER_NOTIFY_INFO_DATA;

typedef struct _PRINTER_NOTIFY_INFO_DATA PRINTER_NOTIFY_INFO_DATA;

typedef union _union_1480 _union_1480, *P_union_1480;

typedef struct _struct_1481 _struct_1481, *P_struct_1481;

struct _struct_1481 {
    DWORD cbBuf;
    LPVOID pBuf;
};

union _union_1480 {
    DWORD adwData[2];
    struct _struct_1481 Data;
};

struct _PRINTER_NOTIFY_INFO_DATA {
    WORD Type;
    WORD Field;
    DWORD Reserved;
    DWORD Id;
    union _union_1480 NotifyData;
};

typedef struct _DRIVER_INFO_3A _DRIVER_INFO_3A, *P_DRIVER_INFO_3A;

struct _DRIVER_INFO_3A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
};

typedef struct _DATATYPES_INFO_1A _DATATYPES_INFO_1A, *P_DATATYPES_INFO_1A;

typedef struct _DATATYPES_INFO_1A *LPDATATYPES_INFO_1A;

struct _DATATYPES_INFO_1A {
    LPSTR pName;
};

typedef struct _BINARY_CONTAINER _BINARY_CONTAINER, *P_BINARY_CONTAINER;

typedef BYTE *LPBYTE;

struct _BINARY_CONTAINER {
    DWORD cbBuf;
    LPBYTE pData;
};

typedef struct _PRINTER_DEFAULTSA _PRINTER_DEFAULTSA, *P_PRINTER_DEFAULTSA;

typedef struct _PRINTER_DEFAULTSA *PPRINTER_DEFAULTSA;

typedef PPRINTER_DEFAULTSA PPRINTER_DEFAULTS;

typedef struct _devicemodeA _devicemodeA, *P_devicemodeA;

typedef struct _devicemodeA *LPDEVMODEA;

typedef DWORD ACCESS_MASK;

typedef union _union_391 _union_391, *P_union_391;

typedef union _union_393.conflict _union_393.conflict, *P_union_393.conflict;

typedef struct _struct_392 _struct_392, *P_struct_392;

typedef struct _POINTL _POINTL, *P_POINTL;

typedef struct _POINTL POINTL;

struct _struct_392 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

struct _POINTL {
    LONG x;
    LONG y;
};

union _union_391 {
    struct _struct_392 field0;
    POINTL dmPosition;
};

struct _PRINTER_DEFAULTSA {
    LPSTR pDatatype;
    LPDEVMODEA pDevMode;
    ACCESS_MASK DesiredAccess;
};

union _union_393.conflict {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeA {
    BYTE dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_391 field6_0x2c;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    BYTE dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_393.conflict field21_0x74;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct _DRIVER_INFO_6W _DRIVER_INFO_6W, *P_DRIVER_INFO_6W;

typedef double ULONGLONG;

typedef ULONGLONG DWORDLONG;

struct _DRIVER_INFO_6W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPWSTR pszMfgName;
    LPWSTR pszOEMUrl;
    LPWSTR pszHardwareID;
    LPWSTR pszProvider;
};

typedef struct _BIDI_DATA _BIDI_DATA, *P_BIDI_DATA;

typedef struct _BIDI_DATA *PBIDI_DATA;

typedef union _union_1485 _union_1485, *P_union_1485;

typedef struct _BINARY_CONTAINER BINARY_CONTAINER;

union _union_1485 {
    BOOL bData;
    LONG iData;
    LPWSTR sData;
    FLOAT fData;
    BINARY_CONTAINER biData;
};

struct _BIDI_DATA {
    DWORD dwBidiType;
    union _union_1485 u;
};

typedef struct _PRINTER_INFO_7A _PRINTER_INFO_7A, *P_PRINTER_INFO_7A;

struct _PRINTER_INFO_7A {
    LPSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PRINTER_DEFAULTSW _PRINTER_DEFAULTSW, *P_PRINTER_DEFAULTSW;

typedef struct _devicemodeW _devicemodeW, *P_devicemodeW;

typedef struct _devicemodeW *LPDEVMODEW;

typedef union _union_395.conflict _union_395.conflict, *P_union_395.conflict;

typedef union _union_397.conflict _union_397.conflict, *P_union_397.conflict;

typedef struct _struct_396 _struct_396, *P_struct_396;

struct _struct_396 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_395.conflict {
    struct _struct_396 field0;
    POINTL dmPosition;
};

struct _PRINTER_DEFAULTSW {
    LPWSTR pDatatype;
    LPDEVMODEW pDevMode;
    ACCESS_MASK DesiredAccess;
};

union _union_397.conflict {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeW {
    WCHAR dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_395.conflict field6_0x4c;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    WCHAR dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_397.conflict field21_0xb4;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct _ADDJOB_INFO_1A _ADDJOB_INFO_1A, *P_ADDJOB_INFO_1A;

typedef struct _ADDJOB_INFO_1A *PADDJOB_INFO_1A;

struct _ADDJOB_INFO_1A {
    LPSTR Path;
    DWORD JobId;
};

typedef struct _PRINTPROCESSOR_CAPS_1 _PRINTPROCESSOR_CAPS_1, *P_PRINTPROCESSOR_CAPS_1;

struct _PRINTPROCESSOR_CAPS_1 {
    DWORD dwLevel;
    DWORD dwNupOptions;
    DWORD dwPageOrderFlags;
    DWORD dwNumberOfCopies;
};

typedef struct _BIDI_REQUEST_DATA _BIDI_REQUEST_DATA, *P_BIDI_REQUEST_DATA;

typedef struct _BIDI_DATA BIDI_DATA;

struct _BIDI_REQUEST_DATA {
    DWORD dwReqNumber;
    LPWSTR pSchema;
    BIDI_DATA data;
};

typedef struct _PRINTPROCESSOR_INFO_1W _PRINTPROCESSOR_INFO_1W, *P_PRINTPROCESSOR_INFO_1W;

typedef struct _PRINTPROCESSOR_INFO_1W PRINTPROCESSOR_INFO_1W;

struct _PRINTPROCESSOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _PRINTER_DEFAULTSW *PPRINTER_DEFAULTSW;

typedef struct _PRINTER_INFO_5A _PRINTER_INFO_5A, *P_PRINTER_INFO_5A;

struct _PRINTER_INFO_5A {
    LPSTR pPrinterName;
    LPSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PORT_INFO_2W _PORT_INFO_2W, *P_PORT_INFO_2W;

struct _PORT_INFO_2W {
    LPWSTR pPortName;
    LPWSTR pMonitorName;
    LPWSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1A;

typedef struct _PRINTPROCESSOR_INFO_1A _PRINTPROCESSOR_INFO_1A, *P_PRINTPROCESSOR_INFO_1A;

typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1A;

struct _PRINTPROCESSOR_INFO_1A {
    LPSTR pName;
};

typedef struct _MONITOR_INFO_1W _MONITOR_INFO_1W, *P_MONITOR_INFO_1W;

struct _MONITOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _DATATYPES_INFO_1A *PDATATYPES_INFO_1A;

typedef PDATATYPES_INFO_1A PDATATYPES_INFO_1;

typedef struct _ADDJOB_INFO_1W _ADDJOB_INFO_1W, *P_ADDJOB_INFO_1W;

typedef struct _ADDJOB_INFO_1W ADDJOB_INFO_1W;

struct _ADDJOB_INFO_1W {
    LPWSTR Path;
    DWORD JobId;
};

typedef struct _BIDI_RESPONSE_DATA _BIDI_RESPONSE_DATA, *P_BIDI_RESPONSE_DATA;

struct _BIDI_RESPONSE_DATA {
    DWORD dwResult;
    DWORD dwReqNumber;
    LPWSTR pSchema;
    BIDI_DATA data;
};

typedef struct _ADDJOB_INFO_1A *LPADDJOB_INFO_1A;

typedef struct _DRIVER_INFO_1A _DRIVER_INFO_1A, *P_DRIVER_INFO_1A;

struct _DRIVER_INFO_1A {
    LPSTR pName;
};

typedef struct _ADDJOB_INFO_1W *LPADDJOB_INFO_1W;

typedef struct _BIDI_REQUEST_DATA BIDI_REQUEST_DATA;

typedef struct _PROVIDOR_INFO_2A _PROVIDOR_INFO_2A, *P_PROVIDOR_INFO_2A;

typedef struct _PROVIDOR_INFO_2A PROVIDOR_INFO_2A;

typedef PROVIDOR_INFO_2A PROVIDOR_INFO_2;

struct _PROVIDOR_INFO_2A {
    LPSTR pOrder;
};

typedef struct _PROVIDOR_INFO_1A _PROVIDOR_INFO_1A, *P_PROVIDOR_INFO_1A;

typedef struct _PROVIDOR_INFO_1A PROVIDOR_INFO_1A;

typedef PROVIDOR_INFO_1A PROVIDOR_INFO_1;

struct _PROVIDOR_INFO_1A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _FORM_INFO_1A _FORM_INFO_1A, *P_FORM_INFO_1A;

typedef struct _FORM_INFO_1A FORM_INFO_1A;

typedef FORM_INFO_1A FORM_INFO_1;

typedef struct tagSIZE tagSIZE, *PtagSIZE;

typedef struct tagSIZE SIZE;

typedef SIZE SIZEL;

typedef struct _RECTL _RECTL, *P_RECTL;

typedef struct _RECTL RECTL;

struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagSIZE {
    LONG cx;
    LONG cy;
};

struct _FORM_INFO_1A {
    DWORD Flags;
    LPSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef struct _JOB_INFO_2A _JOB_INFO_2A, *P_JOB_INFO_2A;

typedef void *PVOID;

typedef PVOID PSECURITY_DESCRIPTOR;

typedef struct _SYSTEMTIME _SYSTEMTIME, *P_SYSTEMTIME;

typedef struct _SYSTEMTIME SYSTEMTIME;

struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
};

struct _JOB_INFO_2A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pNotifyName;
    LPSTR pDatatype;
    LPSTR pPrintProcessor;
    LPSTR pParameters;
    LPSTR pDriverName;
    LPDEVMODEA pDevMode;
    LPSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _JOB_INFO_1A _JOB_INFO_1A, *P_JOB_INFO_1A;

typedef struct _JOB_INFO_1A JOB_INFO_1A;

struct _JOB_INFO_1A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pDatatype;
    LPSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1A;

typedef struct _PRINTER_INFO_9A _PRINTER_INFO_9A, *P_PRINTER_INFO_9A;

struct _PRINTER_INFO_9A {
    LPDEVMODEA pDevMode;
};

typedef struct _BIDI_RESPONSE_CONTAINER _BIDI_RESPONSE_CONTAINER, *P_BIDI_RESPONSE_CONTAINER;

typedef struct _BIDI_RESPONSE_CONTAINER BIDI_RESPONSE_CONTAINER;

typedef struct _BIDI_RESPONSE_DATA BIDI_RESPONSE_DATA;

struct _BIDI_RESPONSE_CONTAINER {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    BIDI_RESPONSE_DATA aData[1];
};

typedef struct _DRIVER_INFO_5A _DRIVER_INFO_5A, *P_DRIVER_INFO_5A;

struct _DRIVER_INFO_5A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DATATYPES_INFO_1W *PDATATYPES_INFO_1W;

typedef struct _JOB_INFO_2W _JOB_INFO_2W, *P_JOB_INFO_2W;

typedef struct _JOB_INFO_2W JOB_INFO_2W;

struct _JOB_INFO_2W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pNotifyName;
    LPWSTR pDatatype;
    LPWSTR pPrintProcessor;
    LPWSTR pParameters;
    LPWSTR pDriverName;
    LPDEVMODEW pDevMode;
    LPWSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _PORT_INFO_3A _PORT_INFO_3A, *P_PORT_INFO_3A;

struct _PORT_INFO_3A {
    DWORD dwStatus;
    LPSTR pszStatus;
    DWORD dwSeverity;
};

typedef union _union_1482 _union_1482, *P_union_1482;

typedef struct _struct_1483 _struct_1483, *P_struct_1483;

struct _struct_1483 {
    DWORD cbBuf;
    LPVOID pBuf;
};

union _union_1482 {
    DWORD adwData[2];
    struct _struct_1483 Data;
};

typedef struct _DRIVER_INFO_1A *PDRIVER_INFO_1A;

typedef PDRIVER_INFO_1A PDRIVER_INFO_1;

typedef struct _JOB_INFO_2A JOB_INFO_2A;

typedef struct _DRIVER_INFO_6A _DRIVER_INFO_6A, *P_DRIVER_INFO_6A;

typedef struct _DRIVER_INFO_6A *PDRIVER_INFO_6A;

typedef PDRIVER_INFO_6A PDRIVER_INFO_6;

struct _DRIVER_INFO_6A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPSTR pszMfgName;
    LPSTR pszOEMUrl;
    LPSTR pszHardwareID;
    LPSTR pszProvider;
};

typedef struct _DRIVER_INFO_4A _DRIVER_INFO_4A, *P_DRIVER_INFO_4A;

typedef struct _DRIVER_INFO_4A *PDRIVER_INFO_4A;

typedef PDRIVER_INFO_4A PDRIVER_INFO_4;

struct _DRIVER_INFO_4A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_5A *PDRIVER_INFO_5A;

typedef PDRIVER_INFO_5A PDRIVER_INFO_5;

typedef struct _DRIVER_INFO_2A _DRIVER_INFO_2A, *P_DRIVER_INFO_2A;

typedef struct _DRIVER_INFO_2A *PDRIVER_INFO_2A;

typedef PDRIVER_INFO_2A PDRIVER_INFO_2;

struct _DRIVER_INFO_2A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
};

typedef struct _JOB_INFO_1W _JOB_INFO_1W, *P_JOB_INFO_1W;

typedef struct _JOB_INFO_1W JOB_INFO_1W;

struct _JOB_INFO_1W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pDatatype;
    LPWSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _DRIVER_INFO_3A *PDRIVER_INFO_3A;

typedef PDRIVER_INFO_3A PDRIVER_INFO_3;

typedef struct _PRINTER_INFO_3 _PRINTER_INFO_3, *P_PRINTER_INFO_3;

typedef struct _PRINTER_INFO_3 PRINTER_INFO_3;

struct _PRINTER_INFO_3 {
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
};

typedef struct _PRINTER_INFO_2A _PRINTER_INFO_2A, *P_PRINTER_INFO_2A;

typedef struct _PRINTER_INFO_2A PRINTER_INFO_2A;

typedef PRINTER_INFO_2A PRINTER_INFO_2;

struct _PRINTER_INFO_2A {
    LPSTR pServerName;
    LPSTR pPrinterName;
    LPSTR pShareName;
    LPSTR pPortName;
    LPSTR pDriverName;
    LPSTR pComment;
    LPSTR pLocation;
    LPDEVMODEA pDevMode;
    LPSTR pSepFile;
    LPSTR pPrintProcessor;
    LPSTR pDatatype;
    LPSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _PRINTER_INFO_1A _PRINTER_INFO_1A, *P_PRINTER_INFO_1A;

typedef struct _PRINTER_INFO_1A PRINTER_INFO_1A;

typedef PRINTER_INFO_1A PRINTER_INFO_1;

struct _PRINTER_INFO_1A {
    DWORD Flags;
    LPSTR pDescription;
    LPSTR pName;
    LPSTR pComment;
};

typedef struct _PRINTPROCESSOR_INFO_1W *LPPRINTPROCESSOR_INFO_1W;

typedef struct _PRINTER_INFO_9A PRINTER_INFO_9A;

typedef PRINTER_INFO_9A PRINTER_INFO_9;

typedef struct _PRINTER_INFO_8A _PRINTER_INFO_8A, *P_PRINTER_INFO_8A;

typedef struct _PRINTER_INFO_8A PRINTER_INFO_8A;

typedef PRINTER_INFO_8A PRINTER_INFO_8;

struct _PRINTER_INFO_8A {
    LPDEVMODEA pDevMode;
};

typedef struct _PRINTER_INFO_7A PRINTER_INFO_7A;

typedef PRINTER_INFO_7A PRINTER_INFO_7;

typedef struct _PRINTER_INFO_6 _PRINTER_INFO_6, *P_PRINTER_INFO_6;

typedef struct _PRINTER_INFO_6 PRINTER_INFO_6;

struct _PRINTER_INFO_6 {
    DWORD dwStatus;
};

typedef union _union_1487 _union_1487, *P_union_1487;

union _union_1487 {
    BOOL bData;
    LONG iData;
    LPWSTR sData;
    FLOAT fData;
    BINARY_CONTAINER biData;
};

typedef struct _PRINTER_INFO_5A PRINTER_INFO_5A;

typedef PRINTER_INFO_5A PRINTER_INFO_5;

typedef struct _PRINTER_INFO_4A _PRINTER_INFO_4A, *P_PRINTER_INFO_4A;

typedef struct _PRINTER_INFO_4A PRINTER_INFO_4A;

typedef PRINTER_INFO_4A PRINTER_INFO_4;

struct _PRINTER_INFO_4A {
    LPSTR pPrinterName;
    LPSTR pServerName;
    DWORD Attributes;
};

typedef struct _PORT_INFO_1A _PORT_INFO_1A, *P_PORT_INFO_1A;

struct _PORT_INFO_1A {
    LPSTR pName;
};

typedef LPADDJOB_INFO_1A LPADDJOB_INFO_1;

typedef struct _PRINTER_NOTIFY_INFO _PRINTER_NOTIFY_INFO, *P_PRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_INFO *PPRINTER_NOTIFY_INFO;

struct _PRINTER_NOTIFY_INFO {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PRINTER_NOTIFY_INFO_DATA aData[1];
};

typedef struct _DOC_INFO_2W _DOC_INFO_2W, *P_DOC_INFO_2W;

struct _DOC_INFO_2W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _PRINTER_INFO_1W _PRINTER_INFO_1W, *P_PRINTER_INFO_1W;

struct _PRINTER_INFO_1W {
    DWORD Flags;
    LPWSTR pDescription;
    LPWSTR pName;
    LPWSTR pComment;
};

typedef struct _PORT_INFO_1W _PORT_INFO_1W, *P_PORT_INFO_1W;

struct _PORT_INFO_1W {
    LPWSTR pName;
};

typedef struct _PORT_INFO_1A *PPORT_INFO_1A;

typedef struct _PORT_INFO_2A _PORT_INFO_2A, *P_PORT_INFO_2A;

struct _PORT_INFO_2A {
    LPSTR pPortName;
    LPSTR pMonitorName;
    LPSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE _PRINTER_NOTIFY_OPTIONS_TYPE, *P_PRINTER_NOTIFY_OPTIONS_TYPE;

typedef WORD *PWORD;

struct _PRINTER_NOTIFY_OPTIONS_TYPE {
    WORD Type;
    WORD Reserved0;
    DWORD Reserved1;
    DWORD Reserved2;
    DWORD Count;
    PWORD pFields;
};

typedef struct _FORM_INFO_1A *PFORM_INFO_1A;

typedef PFORM_INFO_1A PFORM_INFO_1;

typedef struct _PORT_INFO_3W _PORT_INFO_3W, *P_PORT_INFO_3W;

struct _PORT_INFO_3W {
    DWORD dwStatus;
    LPWSTR pszStatus;
    DWORD dwSeverity;
};

typedef struct _MONITOR_INFO_2A _MONITOR_INFO_2A, *P_MONITOR_INFO_2A;

typedef struct _MONITOR_INFO_2A *PMONITOR_INFO_2A;

typedef PMONITOR_INFO_2A PMONITOR_INFO_2;

struct _MONITOR_INFO_2A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _FORM_INFO_1A *LPFORM_INFO_1A;

typedef LPFORM_INFO_1A LPFORM_INFO_1;

typedef struct _MONITOR_INFO_1A _MONITOR_INFO_1A, *P_MONITOR_INFO_1A;

typedef struct _MONITOR_INFO_1A *PMONITOR_INFO_1A;

typedef PMONITOR_INFO_1A PMONITOR_INFO_1;

struct _MONITOR_INFO_1A {
    LPSTR pName;
};

typedef struct _PRINTER_INFO_9W _PRINTER_INFO_9W, *P_PRINTER_INFO_9W;

typedef struct _PRINTER_INFO_9W *LPPRINTER_INFO_9W;

struct _PRINTER_INFO_9W {
    LPDEVMODEW pDevMode;
};

typedef struct _PORT_INFO_3W *PPORT_INFO_3W;

typedef struct _PROVIDOR_INFO_1W _PROVIDOR_INFO_1W, *P_PROVIDOR_INFO_1W;

struct _PROVIDOR_INFO_1W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PRINTER_INFO_5W _PRINTER_INFO_5W, *P_PRINTER_INFO_5W;

struct _PRINTER_INFO_5W {
    LPWSTR pPrinterName;
    LPWSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_8W _PRINTER_INFO_8W, *P_PRINTER_INFO_8W;

typedef struct _PRINTER_INFO_8W *LPPRINTER_INFO_8W;

struct _PRINTER_INFO_8W {
    LPDEVMODEW pDevMode;
};

typedef struct _PRINTER_NOTIFY_INFO_DATA *LPPRINTER_NOTIFY_INFO_DATA;

typedef struct _struct_2039 _struct_2039, *P_struct_2039;

struct _struct_2039 {
    DWORD cbBuf;
    LPVOID pBuf;
};

typedef LPDATATYPES_INFO_1A LPDATATYPES_INFO_1;

typedef struct _PRINTER_INFO_9A *LPPRINTER_INFO_9A;

typedef struct _PORT_INFO_2A *PPORT_INFO_2A;

typedef struct _PORT_INFO_1W *PPORT_INFO_1W;

typedef struct _PORT_INFO_3A *PPORT_INFO_3A;

typedef struct _PROVIDOR_INFO_2W _PROVIDOR_INFO_2W, *P_PROVIDOR_INFO_2W;

struct _PROVIDOR_INFO_2W {
    LPWSTR pOrder;
};

typedef struct _PORT_INFO_2W *PPORT_INFO_2W;

typedef enum enum_1490 {
    BIDI_NULL=0,
    BIDI_INT=1,
    BIDI_FLOAT=2,
    BIDI_BOOL=3,
    BIDI_STRING=4,
    BIDI_TEXT=5,
    BIDI_ENUM=6,
    BIDI_BLOB=7
} enum_1490;

typedef enum enum_1492 {
    BIDI_NULL=0,
    BIDI_INT=1,
    BIDI_FLOAT=2,
    BIDI_BOOL=3,
    BIDI_STRING=4,
    BIDI_TEXT=5,
    BIDI_ENUM=6,
    BIDI_BLOB=7
} enum_1492;

typedef struct _MONITOR_INFO_1A MONITOR_INFO_1A;

typedef MONITOR_INFO_1A MONITOR_INFO_1;

typedef struct _MONITOR_INFO_2A MONITOR_INFO_2A;

typedef MONITOR_INFO_2A MONITOR_INFO_2;

typedef struct _PRINTER_ENUM_VALUESW _PRINTER_ENUM_VALUESW, *P_PRINTER_ENUM_VALUESW;

struct _PRINTER_ENUM_VALUESW {
    LPWSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _PRINTER_NOTIFY_OPTIONS _PRINTER_NOTIFY_OPTIONS, *P_PRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS *PPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE *PPRINTER_NOTIFY_OPTIONS_TYPE;

struct _PRINTER_NOTIFY_OPTIONS {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PPRINTER_NOTIFY_OPTIONS_TYPE pTypes;
};

typedef struct _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1A;

typedef PPRINTPROCESSOR_INFO_1A PPRINTPROCESSOR_INFO_1;

typedef LPPRINTPROCESSOR_INFO_1A LPPRINTPROCESSOR_INFO_1;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE *LPPRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _DOC_INFO_1A _DOC_INFO_1A, *P_DOC_INFO_1A;

struct _DOC_INFO_1A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
};

typedef struct _BIDI_REQUEST_CONTAINER _BIDI_REQUEST_CONTAINER, *P_BIDI_REQUEST_CONTAINER;

typedef struct _BIDI_REQUEST_CONTAINER *LPBIDI_REQUEST_CONTAINER;

struct _BIDI_REQUEST_CONTAINER {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    BIDI_REQUEST_DATA aData[1];
};

typedef struct _PRINTER_INFO_1W *LPPRINTER_INFO_1W;

typedef struct _DRIVER_INFO_4W _DRIVER_INFO_4W, *P_DRIVER_INFO_4W;

struct _DRIVER_INFO_4W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
};

typedef struct _PORT_INFO_1A *LPPORT_INFO_1A;

typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1A;

typedef DATATYPES_INFO_1A DATATYPES_INFO_1;

typedef struct _DOC_INFO_2A _DOC_INFO_2A, *P_DOC_INFO_2A;

typedef struct _DOC_INFO_2A DOC_INFO_2A;

typedef DOC_INFO_2A DOC_INFO_2;

struct _DOC_INFO_2A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _DOC_INFO_3A _DOC_INFO_3A, *P_DOC_INFO_3A;

typedef struct _DOC_INFO_3A DOC_INFO_3A;

typedef DOC_INFO_3A DOC_INFO_3;

struct _DOC_INFO_3A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _PORT_INFO_1W *LPPORT_INFO_1W;

typedef struct _PRINTER_INFO_2A *LPPRINTER_INFO_2A;

typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTSA;

typedef PRINTER_DEFAULTSA PRINTER_DEFAULTS;

typedef struct _PROVIDOR_INFO_2A *PPROVIDOR_INFO_2A;

typedef PPROVIDOR_INFO_2A PPROVIDOR_INFO_2;

typedef struct _DOC_INFO_1A DOC_INFO_1A;

typedef DOC_INFO_1A DOC_INFO_1;

typedef struct _PROVIDOR_INFO_1A *PPROVIDOR_INFO_1A;

typedef PPROVIDOR_INFO_1A PPROVIDOR_INFO_1;

typedef struct _MONITOR_INFO_1A *LPMONITOR_INFO_1A;

typedef LPMONITOR_INFO_1A LPMONITOR_INFO_1;

typedef struct _MONITOR_INFO_2A *LPMONITOR_INFO_2A;

typedef LPMONITOR_INFO_2A LPMONITOR_INFO_2;

typedef struct _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;

typedef struct _PRINTER_INFO_1A *LPPRINTER_INFO_1A;

typedef struct _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;

typedef struct _PORT_INFO_3A *LPPORT_INFO_3A;

typedef struct _PRINTER_INFO_4A *PPRINTER_INFO_4A;

typedef PPRINTER_INFO_4A PPRINTER_INFO_4;

typedef struct _PORT_INFO_3W *LPPORT_INFO_3W;

typedef struct _PRINTER_INFO_5A *PPRINTER_INFO_5A;

typedef PPRINTER_INFO_5A PPRINTER_INFO_5;

typedef struct _PRINTER_INFO_6 *PPRINTER_INFO_6;

typedef struct _PRINTER_INFO_7A *PPRINTER_INFO_7A;

typedef PPRINTER_INFO_7A PPRINTER_INFO_7;

typedef struct _PRINTER_INFO_8A *PPRINTER_INFO_8A;

typedef PPRINTER_INFO_8A PPRINTER_INFO_8;

typedef struct _PRINTER_INFO_9A *PPRINTER_INFO_9A;

typedef PPRINTER_INFO_9A PPRINTER_INFO_9;

typedef struct _PRINTER_INFO_4A *LPPRINTER_INFO_4A;

typedef struct _PRINTER_INFO_1A *PPRINTER_INFO_1A;

typedef PPRINTER_INFO_1A PPRINTER_INFO_1;

typedef struct _PRINTER_INFO_2A *PPRINTER_INFO_2A;

typedef PPRINTER_INFO_2A PPRINTER_INFO_2;

typedef struct _PRINTER_INFO_3 *PPRINTER_INFO_3;

typedef struct _PRINTER_INFO_2W _PRINTER_INFO_2W, *P_PRINTER_INFO_2W;

typedef struct _PRINTER_INFO_2W *LPPRINTER_INFO_2W;

struct _PRINTER_INFO_2W {
    LPWSTR pServerName;
    LPWSTR pPrinterName;
    LPWSTR pShareName;
    LPWSTR pPortName;
    LPWSTR pDriverName;
    LPWSTR pComment;
    LPWSTR pLocation;
    LPDEVMODEW pDevMode;
    LPWSTR pSepFile;
    LPWSTR pPrintProcessor;
    LPWSTR pDatatype;
    LPWSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _MONITOR_INFO_2W _MONITOR_INFO_2W, *P_MONITOR_INFO_2W;

typedef struct _MONITOR_INFO_2W MONITOR_INFO_2W;

struct _MONITOR_INFO_2W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PORT_INFO_2A *LPPORT_INFO_2A;

typedef struct _PORT_INFO_2W *LPPORT_INFO_2W;

typedef enum enum_1490 BIDI_TYPE;

typedef struct _PRINTER_INFO_5W *LPPRINTER_INFO_5W;

typedef struct _MONITOR_INFO_1W MONITOR_INFO_1W;

typedef struct _ADDJOB_INFO_1W *PADDJOB_INFO_1W;

typedef struct _PRINTER_INFO_4W _PRINTER_INFO_4W, *P_PRINTER_INFO_4W;

typedef struct _PRINTER_INFO_4W *LPPRINTER_INFO_4W;

struct _PRINTER_INFO_4W {
    LPWSTR pPrinterName;
    LPWSTR pServerName;
    DWORD Attributes;
};

typedef struct _PRINTER_INFO_5A *LPPRINTER_INFO_5A;

typedef struct _DRIVER_INFO_2W _DRIVER_INFO_2W, *P_DRIVER_INFO_2W;

struct _DRIVER_INFO_2W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
};

typedef struct _PRINTER_INFO_7W _PRINTER_INFO_7W, *P_PRINTER_INFO_7W;

typedef struct _PRINTER_INFO_7W *LPPRINTER_INFO_7W;

struct _PRINTER_INFO_7W {
    LPWSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PROVIDOR_INFO_1A *LPPROVIDOR_INFO_1A;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE PRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _PRINTPROCESSOR_CAPS_1 PRINTPROCESSOR_CAPS_1;

typedef struct _PRINTER_INFO_8A *LPPRINTER_INFO_8A;

typedef struct _PROVIDOR_INFO_1W *LPPROVIDOR_INFO_1W;

typedef struct _PROVIDOR_INFO_2A *LPPROVIDOR_INFO_2A;

typedef struct _FORM_INFO_1W _FORM_INFO_1W, *P_FORM_INFO_1W;

struct _FORM_INFO_1W {
    DWORD Flags;
    LPWSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef PPORT_INFO_2A PPORT_INFO_2;

typedef PPORT_INFO_1A PPORT_INFO_1;

typedef PPORT_INFO_3A PPORT_INFO_3;

typedef struct _PRINTER_INFO_7A *LPPRINTER_INFO_7A;

typedef struct _PRINTER_INFO_9W PRINTER_INFO_9W;

typedef struct _PRINTER_ENUM_VALUESW *PPRINTER_ENUM_VALUESW;

typedef struct _PROVIDOR_INFO_2W *LPPROVIDOR_INFO_2W;

typedef struct _PRINTER_NOTIFY_OPTIONS *LPPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_INFO_9W *PPRINTER_INFO_9W;

typedef struct _PRINTER_INFO_8W PRINTER_INFO_8W;

typedef struct _DRIVER_INFO_5W _DRIVER_INFO_5W, *P_DRIVER_INFO_5W;

struct _DRIVER_INFO_5W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DOC_INFO_1A *LPDOC_INFO_1A;

typedef struct _PRINTER_ENUM_VALUESA _PRINTER_ENUM_VALUESA, *P_PRINTER_ENUM_VALUESA;

typedef struct _PRINTER_ENUM_VALUESA *PPRINTER_ENUM_VALUESA;

struct _PRINTER_ENUM_VALUESA {
    LPSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _DOC_INFO_1W _DOC_INFO_1W, *P_DOC_INFO_1W;

typedef struct _DOC_INFO_1W *LPDOC_INFO_1W;

struct _DOC_INFO_1W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
};

typedef struct _DOC_INFO_1A *PDOC_INFO_1A;

typedef PDOC_INFO_1A PDOC_INFO_1;

typedef struct _DOC_INFO_2A *PDOC_INFO_2A;

typedef PDOC_INFO_2A PDOC_INFO_2;

typedef struct _DOC_INFO_3A *PDOC_INFO_3A;

typedef PDOC_INFO_3A PDOC_INFO_3;

typedef struct _JOB_INFO_3 _JOB_INFO_3, *P_JOB_INFO_3;

typedef struct _JOB_INFO_3 *PJOB_INFO_3;

struct _JOB_INFO_3 {
    DWORD JobId;
    DWORD NextJobId;
    DWORD Reserved;
};

typedef struct _DOC_INFO_2A *LPDOC_INFO_2A;

typedef struct _PRINTER_INFO_7W *PPRINTER_INFO_7W;

typedef struct _JOB_INFO_1A *PJOB_INFO_1A;

typedef PJOB_INFO_1A PJOB_INFO_1;

typedef struct _JOB_INFO_2A *PJOB_INFO_2A;

typedef PJOB_INFO_2A PJOB_INFO_2;

typedef struct _BIDI_RESPONSE_CONTAINER *LPBIDI_RESPONSE_CONTAINER;

typedef struct _DOC_INFO_2W *LPDOC_INFO_2W;

typedef struct _DRIVER_INFO_3W _DRIVER_INFO_3W, *P_DRIVER_INFO_3W;

struct _DRIVER_INFO_3W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
};

typedef struct _DOC_INFO_3A *LPDOC_INFO_3A;

typedef struct _BIDI_REQUEST_CONTAINER BIDI_REQUEST_CONTAINER;

typedef struct _PRINTER_INFO_8W *PPRINTER_INFO_8W;

typedef struct _PRINTER_ENUM_VALUESW PRINTER_ENUM_VALUESW;

typedef struct _DOC_INFO_3W _DOC_INFO_3W, *P_DOC_INFO_3W;

typedef struct _DOC_INFO_3W *LPDOC_INFO_3W;

struct _DOC_INFO_3W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _DRIVER_INFO_1A *LPDRIVER_INFO_1A;

typedef LPPORT_INFO_3A LPPORT_INFO_3;

typedef struct _PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUESA;

typedef LPPORT_INFO_2A LPPORT_INFO_2;

typedef LPPORT_INFO_1A LPPORT_INFO_1;

typedef struct _PRINTER_INFO_5W *PPRINTER_INFO_5W;

typedef struct _JOB_INFO_1A *LPJOB_INFO_1A;

typedef struct _DRIVER_INFO_1W _DRIVER_INFO_1W, *P_DRIVER_INFO_1W;

typedef struct _DRIVER_INFO_1W *LPDRIVER_INFO_1W;

struct _DRIVER_INFO_1W {
    LPWSTR pName;
};

typedef struct _DRIVER_INFO_2A *LPDRIVER_INFO_2A;

typedef struct _PRINTER_ENUM_VALUESA *LPPRINTER_ENUM_VALUESA;

typedef LPPRINTER_ENUM_VALUESA LPPRINTER_ENUM_VALUES;

typedef PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUES;

typedef struct _PRINTER_INFO_2W *PPRINTER_INFO_2W;

typedef struct _DRIVER_INFO_6A *LPDRIVER_INFO_6A;

typedef LPDRIVER_INFO_6A LPDRIVER_INFO_6;

typedef struct _JOB_INFO_2W *LPJOB_INFO_2W;

typedef LPDRIVER_INFO_1A LPDRIVER_INFO_1;

typedef struct _DRIVER_INFO_4A *LPDRIVER_INFO_4A;

typedef LPDRIVER_INFO_4A LPDRIVER_INFO_4;

typedef struct _DRIVER_INFO_5A *LPDRIVER_INFO_5A;

typedef LPDRIVER_INFO_5A LPDRIVER_INFO_5;

typedef LPDRIVER_INFO_2A LPDRIVER_INFO_2;

typedef struct _DRIVER_INFO_3A *LPDRIVER_INFO_3A;

typedef LPDRIVER_INFO_3A LPDRIVER_INFO_3;

typedef struct _JOB_INFO_1W *LPJOB_INFO_1W;

typedef struct _JOB_INFO_2A *LPJOB_INFO_2A;

typedef struct _PRINTER_INFO_4W *PPRINTER_INFO_4W;

typedef struct _DRIVER_INFO_4W *LPDRIVER_INFO_4W;

typedef struct _DOC_INFO_3W *PDOC_INFO_3W;

typedef struct _PRINTER_INFO_1W PRINTER_INFO_1W;

typedef struct _DRIVER_INFO_5W *LPDRIVER_INFO_5W;

typedef struct _DOC_INFO_1W *PDOC_INFO_1W;

typedef struct _DOC_INFO_2W *PDOC_INFO_2W;

typedef struct _DRIVER_INFO_6W *LPDRIVER_INFO_6W;

typedef struct _BIDI_DATA *LPBIDI_DATA;

typedef struct _JOB_INFO_3 *LPJOB_INFO_3;

typedef struct _DRIVER_INFO_2W *LPDRIVER_INFO_2W;

typedef LPJOB_INFO_2A LPJOB_INFO_2;

typedef LPJOB_INFO_1A LPJOB_INFO_1;

typedef LPDOC_INFO_1A LPDOC_INFO_1;

typedef LPDOC_INFO_3A LPDOC_INFO_3;

typedef LPDOC_INFO_2A LPDOC_INFO_2;

typedef struct _DRIVER_INFO_3W *LPDRIVER_INFO_3W;

typedef struct _PRINTER_INFO_2W PRINTER_INFO_2W;

typedef struct _MONITOR_INFO_2W *LPMONITOR_INFO_2W;

typedef struct _PRINTER_INFO_5W PRINTER_INFO_5W;

typedef struct _MONITOR_INFO_1W *LPMONITOR_INFO_1W;

typedef struct _PRINTER_INFO_4W PRINTER_INFO_4W;

typedef struct _PRINTER_NOTIFY_INFO PRINTER_NOTIFY_INFO;

typedef struct _BINARY_CONTAINER *PBINARY_CONTAINER;

typedef struct _PRINTER_NOTIFY_INFO *LPPRINTER_NOTIFY_INFO;

typedef struct _PRINTER_INFO_7W PRINTER_INFO_7W;

typedef struct _BIDI_REQUEST_DATA *PBIDI_REQUEST_DATA;

typedef struct _FORM_INFO_1W *LPFORM_INFO_1W;

typedef struct _PROVIDOR_INFO_2W PROVIDOR_INFO_2W;

typedef PADDJOB_INFO_1A PADDJOB_INFO_1;

typedef struct _BIDI_REQUEST_DATA *LPBIDI_REQUEST_DATA;

typedef struct _PROVIDOR_INFO_1W PROVIDOR_INFO_1W;

typedef struct _PORT_INFO_2A PORT_INFO_2A;

typedef PORT_INFO_2A PORT_INFO_2;

typedef struct _PORT_INFO_1A PORT_INFO_1A;

typedef PORT_INFO_1A PORT_INFO_1;

typedef struct _DRIVER_INFO_1W DRIVER_INFO_1W;

typedef struct _DRIVER_INFO_2A DRIVER_INFO_2A;

typedef struct _DRIVER_INFO_3W *PDRIVER_INFO_3W;

typedef struct _DRIVER_INFO_2W DRIVER_INFO_2W;

typedef struct _PROVIDOR_INFO_1W *PPROVIDOR_INFO_1W;

typedef LPPRINTER_DEFAULTSA LPPRINTER_DEFAULTS;

typedef struct _DRIVER_INFO_1A DRIVER_INFO_1A;

typedef struct _DRIVER_INFO_2W *PDRIVER_INFO_2W;

typedef struct _PORT_INFO_3A PORT_INFO_3A;

typedef PORT_INFO_3A PORT_INFO_3;

typedef union _union_2038 _union_2038, *P_union_2038;

union _union_2038 {
    DWORD adwData[2];
    struct _struct_2039 Data;
};

typedef DRIVER_INFO_1A DRIVER_INFO_1;

typedef struct _DRIVER_INFO_1W *PDRIVER_INFO_1W;

typedef struct _DRIVER_INFO_6A DRIVER_INFO_6A;

typedef DRIVER_INFO_6A DRIVER_INFO_6;

typedef struct _DRIVER_INFO_5A DRIVER_INFO_5A;

typedef DRIVER_INFO_5A DRIVER_INFO_5;

typedef struct _DRIVER_INFO_4A DRIVER_INFO_4A;

typedef DRIVER_INFO_4A DRIVER_INFO_4;

typedef struct _DRIVER_INFO_3A DRIVER_INFO_3A;

typedef DRIVER_INFO_3A DRIVER_INFO_3;

typedef DRIVER_INFO_2A DRIVER_INFO_2;

typedef PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1;

typedef struct _FORM_INFO_1W FORM_INFO_1W;

typedef struct _PROVIDOR_INFO_2W *PPROVIDOR_INFO_2W;

typedef struct _PRINTER_NOTIFY_OPTIONS PRINTER_NOTIFY_OPTIONS;

typedef struct _PORT_INFO_3W PORT_INFO_3W;

typedef struct _BIDI_RESPONSE_CONTAINER *PBIDI_RESPONSE_CONTAINER;

typedef struct _PRINTPROCESSOR_CAPS_1 *PPRINTPROCESSOR_CAPS_1;

typedef struct _DRIVER_INFO_6W DRIVER_INFO_6W;

typedef struct _PRINTPROCESSOR_INFO_1W *PPRINTPROCESSOR_INFO_1W;

typedef struct _DRIVER_INFO_5W DRIVER_INFO_5W;

typedef struct _PORT_INFO_2W PORT_INFO_2W;

typedef LPPRINTER_INFO_8A LPPRINTER_INFO_8;

typedef LPPRINTER_INFO_9A LPPRINTER_INFO_9;

typedef struct _PRINTER_NOTIFY_INFO_DATA *PPRINTER_NOTIFY_INFO_DATA;

typedef struct _FORM_INFO_1W *PFORM_INFO_1W;

typedef LPPROVIDOR_INFO_2A LPPROVIDOR_INFO_2;

typedef LPPROVIDOR_INFO_1A LPPROVIDOR_INFO_1;

typedef struct _PRINTER_INFO_6 *LPPRINTER_INFO_6;

typedef struct _DRIVER_INFO_4W DRIVER_INFO_4W;

typedef struct _PORT_INFO_1W PORT_INFO_1W;

typedef LPPRINTER_INFO_7A LPPRINTER_INFO_7;

typedef LPPRINTER_INFO_4A LPPRINTER_INFO_4;

typedef LPPRINTER_INFO_5A LPPRINTER_INFO_5;

typedef LPPRINTER_INFO_2A LPPRINTER_INFO_2;

typedef struct _DATATYPES_INFO_1W DATATYPES_INFO_1W;

typedef struct _PRINTER_INFO_3 *LPPRINTER_INFO_3;

typedef LPPRINTER_INFO_1A LPPRINTER_INFO_1;

typedef struct _DRIVER_INFO_3W DRIVER_INFO_3W;

typedef ADDJOB_INFO_1A ADDJOB_INFO_1;

typedef struct _JOB_INFO_3 JOB_INFO_3;

typedef struct _BIDI_RESPONSE_DATA *PBIDI_RESPONSE_DATA;

typedef JOB_INFO_1A JOB_INFO_1;

typedef JOB_INFO_2A JOB_INFO_2;

typedef struct _PRINTER_INFO_1W *PPRINTER_INFO_1W;

typedef struct _BIDI_RESPONSE_DATA *LPBIDI_RESPONSE_DATA;

typedef struct _DOC_INFO_3W DOC_INFO_3W;

typedef PPRINTER_ENUM_VALUESA PPRINTER_ENUM_VALUES;

typedef struct _BIDI_REQUEST_CONTAINER *PBIDI_REQUEST_CONTAINER;

typedef struct _JOB_INFO_2W *PJOB_INFO_2W;

typedef struct _PRINTER_DEFAULTSW PRINTER_DEFAULTSW;

typedef struct _MONITOR_INFO_1W *PMONITOR_INFO_1W;

typedef struct _JOB_INFO_1W *PJOB_INFO_1W;

typedef struct _DRIVER_INFO_6W *PDRIVER_INFO_6W;

typedef struct _PRINTER_ENUM_VALUESW *LPPRINTER_ENUM_VALUESW;

typedef struct _MONITOR_INFO_2W *PMONITOR_INFO_2W;

typedef struct _DOC_INFO_2W DOC_INFO_2W;

typedef struct _DRIVER_INFO_5W *PDRIVER_INFO_5W;

typedef struct _DOC_INFO_1W DOC_INFO_1W;

typedef struct _DRIVER_INFO_4W *PDRIVER_INFO_4W;

#define JOB_EXECUTE 131088

#define JOB_NOTIFY_FIELD_START_TIME 17

#define PORT_STATUS_NO_TONER 6

#define PORT_STATUS_OFFLINE 1

#define PORT_STATUS_PAPER_JAM 2

#define PRINTER_ATTRIBUTE_DEFAULT 4

#define MAX_PRIORITY 99

#define PRINTER_ATTRIBUTE_DIRECT 2

#define JOB_NOTIFY_FIELD_STATUS 10

#define PRINTER_ENUM_NAME 8

#define JOB_STATUS_DELETING 4

#define JOB_WRITE 131088

#define PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS 256

#define PORT_TYPE_READ 2

#define PRINTER_ENUM_FAVORITE 4

#define PRINTER_ENUM_CONTAINER 32768

#define PRINTER_ACCESS_ADMINISTER 4

#define JOB_STATUS_OFFLINE 32

#define SERVER_ACCESS_ENUMERATE 2

#define PRINTER_NOTIFY_FIELD_SEPFILE 8

#define SERVER_WRITE 131075

#define JOB_NOTIFY_FIELD_TIME 19

#define ERROR_BIDI_STATUS_OK 0

#define PRINTER_NOTIFY_FIELD_PRIORITY 14

#define PRINTER_WRITE 131080

#define PRINTER_ENUM_ICONMASK 16711680

#define PRINTER_NOTIFY_FIELD_PARAMETERS 10

#define PRINTER_STATUS_USER_INTERVENTION 1048576

#define PRINTER_CONTROL_RESUME 2

#define PRINTER_ERROR_JAM 2

#define PRINTER_STATUS_NO_TONER 262144

#define PRINTER_NOTIFY_FIELD_TOTAL_PAGES 22

#define PRINTER_NOTIFY_FIELD_CJOBS 20

#define PRINTER_CHANGE_ALL 2004353023

#define PRINTER_CHANGE_DELETE_PRINTER_DRIVER 1073741824

#define PRINTER_CONTROL_SET_STATUS 4

#define PRINTER_NOTIFY_FIELD_STATUS_STRING 19

#define JOB_NOTIFY_FIELD_TOTAL_PAGES 20

#define PRINTER_ATTRIBUTE_WORK_OFFLINE 1024

#define JOB_STATUS_ERROR 2

#define PORT_STATUS_TYPE_INFO 3

#define PRINTER_STATUS_INITIALIZING 32768

#define PRINTER_NOTIFY_FIELD_DATATYPE 11

#define JOB_NOTIFY_FIELD_POSITION 15

#define PRINTER_CHANGE_FAILED_CONNECTION_PRINTER 8

#define PORT_STATUS_WARMING_UP 11

#define DSPRINT_UPDATE 2

#define ERROR_BIDI_NOT_SUPPORTED 50

#define PORT_TYPE_REDIRECTED 4

#define PRINTER_ATTRIBUTE_HIDDEN 32

#define DPD_DELETE_SPECIFIC_VERSION 2

#define PRINTER_NOTIFY_FIELD_ATTRIBUTES 13

#define PRINTER_CHANGE_SET_PRINTER 2

#define DRIVER_USERMODE 2

#define PRINTER_STATUS_NOT_AVAILABLE 4096

#define PRINTER_NOTIFY_FIELD_DEVMODE 7

#define JOB_NOTIFY_FIELD_MACHINE_NAME 1

#define DI_READ_SPOOL_JOB 3

#define PRINTER_STATUS_WARMING_UP 65536

#define ERROR_BIDI_SERVER_OFFLINE 13003

#define PRINTER_CHANGE_ADD_PRINTER_DRIVER 268435456

#define JOB_NOTIFY_FIELD_PRINTER_NAME 0

#define PRINTER_CHANGE_ADD_JOB 256

#define PRINTER_CHANGE_ADD_PRINTER 1

#define PRINTER_ENUM_DEFAULT 1

#define PORT_STATUS_TYPE_ERROR 1

#define PRINTER_ATTRIBUTE_QUEUED 1

#define JOB_STATUS_RESTART 2048

#define PORT_STATUS_PAPER_PROBLEM 5

#define JOB_NOTIFY_FIELD_BYTES_PRINTED 23

#define PRINTER_NOTIFY_FIELD_SERVER_NAME 0

#define SERVER_READ 131074

#define PRINTER_READ 131080

#define PRINTER_NOTIFY_FIELD_BYTES_PRINTED 25

#define JOB_NOTIFY_FIELD_PRIORITY 14

#define PRINTER_NOTIFY_FIELD_PRINTER_NAME 1

#define JOB_NOTIFY_FIELD_DATATYPE 5

#define PORT_STATUS_OUT_OF_MEMORY 9

#define PRINTER_CHANGE_TIMEOUT 2147483648

#define SPOOL_FILE_TEMPORARY 2

#define SERVER_ALL_ACCESS 983043

#define PRINTER_CHANGE_SET_FORM 131072

#define PRINTER_CHANGE_DELETE_FORM 262144

#define PRINTER_ENUM_HIDE 16777216

#define DSPRINT_PENDING 2147483648

#define APD_STRICT_DOWNGRADE 2

#define PRINTER_NOTIFY_TYPE 0

#define DPD_DELETE_UNUSED_FILES 1

#define PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR 9

#define PRINTER_NOTIFY_FIELD_SHARE_NAME 2

#define REVERSE_PRINT 1

#define PRINTER_NOTIFY_INFO_DISCARDED 1

#define JOB_ALL_ACCESS 983056

#define PRINTER_STATUS_PRINTING 1024

#define PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY 15

#define DPD_DELETE_ALL_FILES 4

#define PRINTER_ENUM_EXPAND 16384

#define JOB_CONTROL_DELETE 5

#define APD_COPY_NEW_FILES 8

#define JOB_CONTROL_RESTART 4

#define PRINTER_STATUS_PROCESSING 16384

#define JOB_NOTIFY_FIELD_DRIVER_NAME 8

#define JOB_NOTIFY_FIELD_UNTIL_TIME 18

#define PORT_STATUS_TYPE_WARNING 2

#define FORM_BUILTIN 1

#define PRINTER_ERROR_SEVERE 536870912

#define SERVER_ACCESS_ADMINISTER 1

#define JOB_READ 131088

#define JOB_NOTIFY_FIELD_PORT_NAME 2

#define SPOOL_FILE_PERSISTENT 1

#define PRINTER_STATUS_PENDING_DELETION 4

#define PORT_STATUS_OUTPUT_BIN_FULL 4

#define ERROR_BIDI_DEVICE_OFFLINE 13004

#define BIDI_ACCESS_ADMINISTRATOR 1

#define PRINTER_STATUS_SERVER_UNKNOWN 8388608

#define JOB_NOTIFY_FIELD_DOCUMENT 13

#define PRINTER_ATTRIBUTE_FAX 16384

#define JOB_NOTIFY_FIELD_TOTAL_BYTES 22

#define PRINTER_CHANGE_PRINT_PROCESSOR 117440512

#define BIDI_ACCESS_USER 2

#define NO_PRIORITY 0

#define JOB_NOTIFY_FIELD_USER_NAME 3

#define PRINTER_NOTIFY_FIELD_UNTIL_TIME 17

#define PRINTER_CHANGE_DELETE_PRINT_PROCESSOR 67108864

#define PRINTER_CONTROL_PAUSE 1

#define PRINTER_CHANGE_ADD_PRINT_PROCESSOR 16777216

#define JOB_STATUS_COMPLETE 4096

#define PRINTER_CHANGE_DELETE_PORT 4194304

#define PRINTER_ERROR_OUTOFPAPER 1

#define PRINTER_CHANGE_WRITE_JOB 2048

#define PRINTER_STATUS_OUT_OF_MEMORY 2097152

#define JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define PRINTER_ATTRIBUTE_NETWORK 16

#define PRINTER_STATUS_PAGE_PUNT 524288

#define APD_STRICT_UPGRADE 1

#define FORM_PRINTER 2

#define PRINTER_NOTIFY_FIELD_AVERAGE_PPM 21

#define PRINTER_ALL_ACCESS 983052

#define JOB_STATUS_DELETED 256

#define PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define PRINTER_STATUS_POWER_SAVE 16777216

#define JOB_POSITION_UNSPECIFIED 0

#define PRINTER_ERROR_OUTOFTONER 4

#define PRINTER_CHANGE_ADD_PORT 1048576

#define PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST 512

#define JOB_CONTROL_CANCEL 3

#define PRINTER_ENUM_ICON7 4194304

#define PRINTER_ENUM_ICON6 2097152

#define JOB_NOTIFY_FIELD_PAGES_PRINTED 21

#define PRINTER_ENUM_ICON8 8388608

#define PRINTER_ENUM_ICON3 262144

#define PRINTER_STATUS_MANUAL_FEED 32

#define PRINTER_ENUM_ICON2 131072

#define PRINTER_ENUM_ICON5 1048576

#define PRINTER_ENUM_ICON4 524288

#define PRINTER_STATUS_PAUSED 1

#define PORT_STATUS_TONER_LOW 10

#define PRINTER_ENUM_ICON1 65536

#define DI_MEMORYMAP_WRITE 1

#define ERROR_BIDI_SCHEMA_NOT_SUPPORTED 13005

#define PORT_STATUS_DOOR_OPEN 7

#define PRINTER_NOTIFY_FIELD_START_TIME 16

#define PRINTER_ENUM_LOCAL 2

#define PRINTER_STATUS_OUTPUT_BIN_FULL 2048

#define PRINTER_CHANGE_SET_JOB 512

#define PRINTER_CHANGE_ADD_FORM 65536

#define APD_COPY_ALL_FILES 4

#define PRINTER_STATUS_WAITING 8192

#define PRINTER_STATUS_PAPER_JAM 8

#define JOB_ACCESS_ADMINISTER 16

#define FORM_USER 0

#define PORT_STATUS_POWER_SAVE 12

#define PRINTER_ERROR_INFORMATION 2147483648

#define DI_CHANNEL 1

#define JOB_NOTIFY_TYPE 1

#define PRINTER_CHANGE_SET_PRINTER_DRIVER 536870912

#define PRINTER_EXECUTE 131080

#define PRINTER_STATUS_IO_ACTIVE 256

#define PRINTER_CHANGE_JOB 65280

#define PRINTER_ENUM_NETWORK 64

#define PRINTER_ENUM_CONNECTIONS 4

#define PRINTER_ENUM_REMOTE 16

#define PRINTER_ATTRIBUTE_PUBLISHED 8192

#define JOB_NOTIFY_FIELD_PARAMETERS 7

#define PRINTER_ENUM_SHARED 32

#define PRINTER_CHANGE_PRINTER_DRIVER 1879048192

#define PRINTER_STATUS_ERROR 2

#define JOB_STATUS_USER_INTERVENTION 1024

#define PRINTER_CHANGE_FORM 458752

#define PRINTER_STATUS_PAPER_PROBLEM 64

#define PRINTER_CHANGE_CONFIGURE_PORT 2097152

#define JOB_STATUS_PAPEROUT 64

#define JOB_STATUS_PAUSED 1

#define PRINTER_CHANGE_DELETE_PRINTER 4

#define JOB_STATUS_PRINTING 16

#define PRINTER_ATTRIBUTE_SHARED 8

#define JOB_STATUS_SPOOLING 8

#define JOB_NOTIFY_FIELD_NOTIFY_NAME 4

#define PORT_TYPE_WRITE 1

#define DRIVER_KERNELMODE 1

#define JOB_NOTIFY_FIELD_STATUS_STRING 11

#define PRINTER_NOTIFY_FIELD_PORT_NAME 3

#define NORMAL_PRINT 0

#define PRINTER_ATTRIBUTE_RAW_ONLY 4096

#define JOB_STATUS_PRINTED 128

#define DEF_PRIORITY 1

#define PORT_STATUS_PAPER_OUT 3

#define ERROR_BIDI_SCHEMA_READ_ONLY 13002

#define PRINTER_NOTIFY_OPTIONS_REFRESH 1

#define PRINTER_NOTIFY_FIELD_TOTAL_BYTES 24

#define JOB_STATUS_BLOCKED_DEVQ 512

#define JOB_CONTROL_LAST_PAGE_EJECTED 7

#define ERROR_BIDI_ERROR_BASE 13000

#define PRINTER_ACCESS_USE 8

#define PRINTER_STATUS_OFFLINE 128

#define DSPRINT_REPUBLISH 8

#define ERROR_BIDI_STATUS_WARNING 13001

#define PRINTER_NOTIFY_FIELD_STATUS 18

#define PRINTER_NOTIFY_FIELD_COMMENT 5

#define PRINTER_NOTIFY_FIELD_LOCATION 6

#define PRINTER_ATTRIBUTE_ENABLE_DEVQ 128

#define PRINTER_CONTROL_PURGE 3

#define PORT_STATUS_USER_INTERVENTION 8

#define PRINTER_STATUS_PAPER_OUT 16

#define JOB_NOTIFY_FIELD_SUBMITTED 16

#define PRINTER_NOTIFY_FIELD_PAGES_PRINTED 23

#define PRINTER_NOTIFY_FIELD_OBJECT_GUID 26

#define PRINTER_ATTRIBUTE_ENABLE_BIDI 2048

#define JOB_NOTIFY_FIELD_DEVMODE 9

#define PRINTER_CHANGE_PORT 7340032

#define APD_COPY_FROM_DIRECTORY 16

#define JOB_CONTROL_RESUME 2

#define PRINTER_NOTIFY_FIELD_DRIVER_NAME 4

#define MIN_PRIORITY 1

#define PRINTER_STATUS_TONER_LOW 131072

#define PRINTER_ERROR_WARNING 1073741824

#define DSPRINT_PUBLISH 1

#define PRINTER_ATTRIBUTE_LOCAL 64

#define PRINTER_STATUS_DOOR_OPEN 4194304

#define PRINTER_CHANGE_DELETE_JOB 1024

#define JOB_CONTROL_SENT_TO_PRINTER 6

#define PRINTER_STATUS_BUSY 512

#define PORT_TYPE_NET_ATTACHED 8

#define DSPRINT_UNPUBLISH 4

#define JOB_CONTROL_PAUSE 1

#define PRINTER_CHANGE_PRINTER 255

#define SERVER_EXECUTE 131074

#define JOB_NOTIFY_FIELD_PRINT_PROCESSOR 6

typedef struct tagMULTI_QI tagMULTI_QI, *PtagMULTI_QI;

struct tagMULTI_QI {
    IID *pIID;
    struct IUnknown *pItf;
    HRESULT hr;
};

typedef struct IClientSecurityVtbl IClientSecurityVtbl, *PIClientSecurityVtbl;

typedef struct IClientSecurity IClientSecurity, *PIClientSecurity;

typedef WCHAR OLECHAR;

struct IClientSecurityVtbl {
    HRESULT (*QueryInterface)(struct IClientSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IClientSecurity *);
    ULONG (*Release)(struct IClientSecurity *);
    HRESULT (*QueryBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD *, DWORD *, OLECHAR **, DWORD *, DWORD *, void **, DWORD *);
    HRESULT (*SetBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD, DWORD, OLECHAR *, DWORD, DWORD, void *, DWORD);
    HRESULT (*CopyProxy)(struct IClientSecurity *, struct IUnknown *, struct IUnknown **);
};

struct IClientSecurity {
    struct IClientSecurityVtbl *lpVtbl;
};

typedef struct _COSERVERINFO _COSERVERINFO, *P_COSERVERINFO;

typedef struct _COSERVERINFO COSERVERINFO;

typedef struct _COAUTHINFO _COAUTHINFO, *P_COAUTHINFO;

typedef struct _COAUTHINFO COAUTHINFO;

typedef struct _COAUTHIDENTITY _COAUTHIDENTITY, *P_COAUTHIDENTITY;

typedef struct _COAUTHIDENTITY COAUTHIDENTITY;

typedef ushort USHORT;

struct _COAUTHINFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    LPWSTR pwszServerPrincName;
    DWORD dwAuthnLevel;
    DWORD dwImpersonationLevel;
    COAUTHIDENTITY *pAuthIdentityData;
    DWORD dwCapabilities;
};

struct _COAUTHIDENTITY {
    USHORT *User;
    ULONG UserLength;
    USHORT *Domain;
    ULONG DomainLength;
    USHORT *Password;
    ULONG PasswordLength;
    ULONG Flags;
};

struct _COSERVERINFO {
    DWORD dwReserved1;
    LPWSTR pwszName;
    COAUTHINFO *pAuthInfo;
    DWORD dwReserved2;
};

typedef struct tagFORMATETC tagFORMATETC, *PtagFORMATETC;

typedef struct tagFORMATETC FORMATETC;

typedef WORD CLIPFORMAT;

typedef struct tagDVTARGETDEVICE tagDVTARGETDEVICE, *PtagDVTARGETDEVICE;

typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;

struct tagFORMATETC {
    CLIPFORMAT cfFormat;
    DVTARGETDEVICE *ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

struct tagDVTARGETDEVICE {
    DWORD tdSize;
    WORD tdDriverNameOffset;
    WORD tdDeviceNameOffset;
    WORD tdPortNameOffset;
    WORD tdExtDevmodeOffset;
    BYTE tdData[1];
};

typedef struct IStdMarshalInfoVtbl IStdMarshalInfoVtbl, *PIStdMarshalInfoVtbl;

typedef struct IStdMarshalInfo IStdMarshalInfo, *PIStdMarshalInfo;

typedef GUID CLSID;

struct IStdMarshalInfo {
    struct IStdMarshalInfoVtbl *lpVtbl;
};

struct IStdMarshalInfoVtbl {
    HRESULT (*QueryInterface)(struct IStdMarshalInfo *, IID *, void **);
    ULONG (*AddRef)(struct IStdMarshalInfo *);
    ULONG (*Release)(struct IStdMarshalInfo *);
    HRESULT (*GetClassForHandler)(struct IStdMarshalInfo *, DWORD, void *, CLSID *);
};

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES {
    EOAC_NONE=0,
    EOAC_MUTUAL_AUTH=1,
    EOAC_SECURE_REFS=2,
    EOAC_ACCESS_CONTROL=4,
    EOAC_APPID=8,
    EOAC_DYNAMIC=16,
    EOAC_STATIC_CLOAKING=32,
    EOAC_DYNAMIC_CLOAKING=64,
    EOAC_ANY_AUTHORITY=128,
    EOAC_MAKE_FULLSIC=256,
    EOAC_REQUIRE_FULLSIC=512,
    EOAC_AUTO_IMPERSONATE=1024,
    EOAC_DEFAULT=2048,
    EOAC_DISABLE_AAA=4096,
    EOAC_NO_CUSTOM_MARSHAL=8192
} tagEOLE_AUTHENTICATION_CAPABILITIES;

typedef struct IMessageFilter IMessageFilter, *PIMessageFilter;

typedef struct IMessageFilter *LPMESSAGEFILTER;

typedef struct IMessageFilterVtbl IMessageFilterVtbl, *PIMessageFilterVtbl;

typedef struct tagINTERFACEINFO tagINTERFACEINFO, *PtagINTERFACEINFO;

typedef struct tagINTERFACEINFO *LPINTERFACEINFO;

struct tagINTERFACEINFO {
    struct IUnknown *pUnk;
    IID iid;
    WORD wMethod;
};

struct IMessageFilter {
    struct IMessageFilterVtbl *lpVtbl;
};

struct IMessageFilterVtbl {
    HRESULT (*QueryInterface)(struct IMessageFilter *, IID *, void **);
    ULONG (*AddRef)(struct IMessageFilter *);
    ULONG (*Release)(struct IMessageFilter *);
    DWORD (*HandleInComingCall)(struct IMessageFilter *, DWORD, HTASK, DWORD, LPINTERFACEINFO);
    DWORD (*RetryRejectedCall)(struct IMessageFilter *, HTASK, DWORD, DWORD);
    DWORD (*MessagePending)(struct IMessageFilter *, HTASK, DWORD, DWORD);
};

typedef struct tagSTATSTG tagSTATSTG, *PtagSTATSTG;

typedef struct tagSTATSTG STATSTG;

typedef OLECHAR *LPOLESTR;

typedef union _ULARGE_INTEGER _ULARGE_INTEGER, *P_ULARGE_INTEGER;

typedef union _ULARGE_INTEGER ULARGE_INTEGER;

typedef struct _struct_10.conflict _struct_10.conflict, *P_struct_10.conflict;

typedef struct _struct_11 _struct_11, *P_struct_11;

struct _struct_11 {
    DWORD LowPart;
    DWORD HighPart;
};

struct _struct_10.conflict {
    DWORD LowPart;
    DWORD HighPart;
};

union _ULARGE_INTEGER {
    struct _struct_10.conflict field0;
    struct _struct_11 u;
    ULONGLONG QuadPart;
};

struct tagSTATSTG {
    LPOLESTR pwcsName;
    DWORD type;
    ULARGE_INTEGER cbSize;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD grfMode;
    DWORD grfLocksSupported;
    CLSID clsid;
    DWORD grfStateBits;
    DWORD reserved;
};

typedef struct IAddrExclusionControl IAddrExclusionControl, *PIAddrExclusionControl;

typedef struct IAddrExclusionControlVtbl IAddrExclusionControlVtbl, *PIAddrExclusionControlVtbl;

struct IAddrExclusionControlVtbl {
    HRESULT (*QueryInterface)(struct IAddrExclusionControl *, IID *, void **);
    ULONG (*AddRef)(struct IAddrExclusionControl *);
    ULONG (*Release)(struct IAddrExclusionControl *);
    HRESULT (*GetCurrentAddrExclusionList)(struct IAddrExclusionControl *, IID *, void **);
    HRESULT (*UpdateAddrExclusionList)(struct IAddrExclusionControl *, struct IUnknown *);
};

struct IAddrExclusionControl {
    struct IAddrExclusionControlVtbl *lpVtbl;
};

typedef struct IRpcChannelBufferVtbl IRpcChannelBufferVtbl, *PIRpcChannelBufferVtbl;

typedef struct IRpcChannelBuffer IRpcChannelBuffer, *PIRpcChannelBuffer;

typedef struct tagRPCOLEMESSAGE tagRPCOLEMESSAGE, *PtagRPCOLEMESSAGE;

typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;

typedef ulong RPCOLEDATAREP;

struct IRpcChannelBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer *);
    ULONG (*Release)(struct IRpcChannelBuffer *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer *);
};

struct tagRPCOLEMESSAGE {
    void *reserved1;
    RPCOLEDATAREP dataRepresentation;
    void *Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    void *reserved2[5];
    ULONG rpcFlags;
};

struct IRpcChannelBuffer {
    struct IRpcChannelBufferVtbl *lpVtbl;
};

typedef enum tagMKSYS {
    MKSYS_NONE=0,
    MKSYS_GENERICCOMPOSITE=1,
    MKSYS_FILEMONIKER=2,
    MKSYS_ANTIMONIKER=3,
    MKSYS_ITEMMONIKER=4,
    MKSYS_POINTERMONIKER=5,
    MKSYS_CLASSMONIKER=7,
    MKSYS_OBJREFMONIKER=8,
    MKSYS_SESSIONMONIKER=9
} tagMKSYS;

typedef enum tagMKSYS MKSYS;

typedef struct IClassActivatorVtbl IClassActivatorVtbl, *PIClassActivatorVtbl;

typedef struct IClassActivator IClassActivator, *PIClassActivator;

typedef DWORD LCID;

struct IClassActivator {
    struct IClassActivatorVtbl *lpVtbl;
};

struct IClassActivatorVtbl {
    HRESULT (*QueryInterface)(struct IClassActivator *, IID *, void **);
    ULONG (*AddRef)(struct IClassActivator *);
    ULONG (*Release)(struct IClassActivator *);
    HRESULT (*GetClassObject)(struct IClassActivator *, IID *, DWORD, LCID, IID *, void **);
};

typedef struct _userFLAG_STGMEDIUM _userFLAG_STGMEDIUM, *P_userFLAG_STGMEDIUM;

typedef struct _userFLAG_STGMEDIUM userFLAG_STGMEDIUM;

typedef userFLAG_STGMEDIUM *wireFLAG_STGMEDIUM;

typedef struct _userSTGMEDIUM _userSTGMEDIUM, *P_userSTGMEDIUM;

typedef struct _userSTGMEDIUM userSTGMEDIUM;

typedef struct _STGMEDIUM_UNION _STGMEDIUM_UNION, *P_STGMEDIUM_UNION;

typedef union __MIDL_IAdviseSink_0003 __MIDL_IAdviseSink_0003, *P__MIDL_IAdviseSink_0003;

typedef struct _userHMETAFILEPICT _userHMETAFILEPICT, *P_userHMETAFILEPICT;

typedef struct _userHMETAFILEPICT userHMETAFILEPICT;

typedef userHMETAFILEPICT *wireHMETAFILEPICT;

typedef struct _userHENHMETAFILE _userHENHMETAFILE, *P_userHENHMETAFILE;

typedef struct _userHENHMETAFILE userHENHMETAFILE;

typedef userHENHMETAFILE *wireHENHMETAFILE;

typedef struct _GDI_OBJECT _GDI_OBJECT, *P_GDI_OBJECT;

typedef struct _GDI_OBJECT GDI_OBJECT;

typedef struct _userHGLOBAL _userHGLOBAL, *P_userHGLOBAL;

typedef struct _userHGLOBAL userHGLOBAL;

typedef userHGLOBAL *wireHGLOBAL;

typedef struct _BYTE_BLOB _BYTE_BLOB, *P_BYTE_BLOB;

typedef struct _BYTE_BLOB BYTE_BLOB;

typedef union __MIDL_IWinTypes_0005 __MIDL_IWinTypes_0005, *P__MIDL_IWinTypes_0005;

typedef union __MIDL_IWinTypes_0006 __MIDL_IWinTypes_0006, *P__MIDL_IWinTypes_0006;

typedef union __MIDL_IAdviseSink_0002 __MIDL_IAdviseSink_0002, *P__MIDL_IAdviseSink_0002;

typedef union __MIDL_IWinTypes_0003 __MIDL_IWinTypes_0003, *P__MIDL_IWinTypes_0003;


/* WARNING! conflicting data type names: /deps/rpcndr.h/byte - /byte */

typedef struct _remoteMETAFILEPICT _remoteMETAFILEPICT, *P_remoteMETAFILEPICT;

typedef struct _remoteMETAFILEPICT remoteMETAFILEPICT;

typedef struct _userHBITMAP _userHBITMAP, *P_userHBITMAP;

typedef struct _userHBITMAP userHBITMAP;

typedef userHBITMAP *wireHBITMAP;

typedef struct _userHPALETTE _userHPALETTE, *P_userHPALETTE;

typedef struct _userHPALETTE userHPALETTE;

typedef userHPALETTE *wireHPALETTE;

typedef struct _FLAGGED_BYTE_BLOB _FLAGGED_BYTE_BLOB, *P_FLAGGED_BYTE_BLOB;

typedef struct _FLAGGED_BYTE_BLOB FLAGGED_BYTE_BLOB;

typedef struct _userHMETAFILE _userHMETAFILE, *P_userHMETAFILE;

typedef struct _userHMETAFILE userHMETAFILE;

typedef union __MIDL_IWinTypes_0007 __MIDL_IWinTypes_0007, *P__MIDL_IWinTypes_0007;

typedef union __MIDL_IWinTypes_0008 __MIDL_IWinTypes_0008, *P__MIDL_IWinTypes_0008;

typedef union __MIDL_IWinTypes_0004 __MIDL_IWinTypes_0004, *P__MIDL_IWinTypes_0004;

typedef struct _userBITMAP _userBITMAP, *P_userBITMAP;

typedef struct _userBITMAP userBITMAP;

typedef struct tagLOGPALETTE tagLOGPALETTE, *PtagLOGPALETTE;

typedef struct tagLOGPALETTE LOGPALETTE;

typedef struct tagPALETTEENTRY tagPALETTEENTRY, *PtagPALETTEENTRY;

typedef struct tagPALETTEENTRY PALETTEENTRY;

union __MIDL_IAdviseSink_0003 {
    wireHMETAFILEPICT hMetaFilePict;
    wireHENHMETAFILE hHEnhMetaFile;
    GDI_OBJECT *hGdiHandle;
    wireHGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    BYTE_BLOB *pstm;
    BYTE_BLOB *pstg;
};

struct _STGMEDIUM_UNION {
    DWORD tymed;
    union __MIDL_IAdviseSink_0003 u;
};

union __MIDL_IWinTypes_0004 {
    long hInproc;
    BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0004 u;
};

struct _BYTE_BLOB {
    ulong clSize;
    byte abData[1];
};

union __MIDL_IWinTypes_0005 {
    long hInproc;
    remoteMETAFILEPICT *hRemote;
    longlong hInproc64;
};

struct _userHMETAFILEPICT {
    long fContext;
    union __MIDL_IWinTypes_0005 u;
};

union __MIDL_IAdviseSink_0002 {
    wireHBITMAP hBitmap;
    wireHPALETTE hPalette;
    wireHGLOBAL hGeneric;
};

struct _userBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    ULONG cbSize;
    byte pBuffer[1];
};

union __MIDL_IWinTypes_0006 {
    long hInproc;
    BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHENHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0006 u;
};

struct tagPALETTEENTRY {
    BYTE peRed;
    BYTE peGreen;
    BYTE peBlue;
    BYTE peFlags;
};

union __MIDL_IWinTypes_0007 {
    long hInproc;
    userBITMAP *hRemote;
    longlong hInproc64;
};

struct _userHBITMAP {
    long fContext;
    union __MIDL_IWinTypes_0007 u;
};

struct tagLOGPALETTE {
    WORD palVersion;
    WORD palNumEntries;
    PALETTEENTRY palPalEntry[1];
};

struct _GDI_OBJECT {
    DWORD ObjectType;
    union __MIDL_IAdviseSink_0002 u;
};

union __MIDL_IWinTypes_0003 {
    long hInproc;
    FLAGGED_BYTE_BLOB *hRemote;
    longlong hInproc64;
};

struct _userHGLOBAL {
    long fContext;
    union __MIDL_IWinTypes_0003 u;
};

struct _FLAGGED_BYTE_BLOB {
    ulong fFlags;
    ulong clSize;
    byte abData[1];
};

struct _userSTGMEDIUM {
    struct _STGMEDIUM_UNION field0_0x0;
    struct IUnknown *pUnkForRelease;
};

struct _userFLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    userSTGMEDIUM Stgmed;
};

union __MIDL_IWinTypes_0008 {
    long hInproc;
    LOGPALETTE *hRemote;
    longlong hInproc64;
};

struct _remoteMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    userHMETAFILE *hMF;
};

struct _userHPALETTE {
    long fContext;
    union __MIDL_IWinTypes_0008 u;
};

typedef struct ILockBytesVtbl ILockBytesVtbl, *PILockBytesVtbl;

typedef struct ILockBytes ILockBytes, *PILockBytes;

struct ILockBytes {
    struct ILockBytesVtbl *lpVtbl;
};

struct ILockBytesVtbl {
    HRESULT (*QueryInterface)(struct ILockBytes *, IID *, void **);
    ULONG (*AddRef)(struct ILockBytes *);
    ULONG (*Release)(struct ILockBytes *);
    HRESULT (*ReadAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*WriteAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*Flush)(struct ILockBytes *);
    HRESULT (*SetSize)(struct ILockBytes *, ULARGE_INTEGER);
    HRESULT (*LockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*UnlockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*Stat)(struct ILockBytes *, STATSTG *, DWORD);
};

typedef struct IRpcChannelBuffer2Vtbl IRpcChannelBuffer2Vtbl, *PIRpcChannelBuffer2Vtbl;

typedef struct IRpcChannelBuffer2 IRpcChannelBuffer2, *PIRpcChannelBuffer2;

struct IRpcChannelBuffer2 {
    struct IRpcChannelBuffer2Vtbl *lpVtbl;
};

struct IRpcChannelBuffer2Vtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer2 *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer2 *);
    ULONG (*Release)(struct IRpcChannelBuffer2 *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer2 *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer2 *);
    HRESULT (*GetProtocolVersion)(struct IRpcChannelBuffer2 *, DWORD *);
};

typedef struct IAsyncRpcChannelBufferVtbl IAsyncRpcChannelBufferVtbl, *PIAsyncRpcChannelBufferVtbl;

typedef struct IAsyncRpcChannelBuffer IAsyncRpcChannelBuffer, *PIAsyncRpcChannelBuffer;

typedef struct ISynchronize ISynchronize, *PISynchronize;

typedef struct ISynchronizeVtbl ISynchronizeVtbl, *PISynchronizeVtbl;

struct ISynchronizeVtbl {
    HRESULT (*QueryInterface)(struct ISynchronize *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronize *);
    ULONG (*Release)(struct ISynchronize *);
    HRESULT (*Wait)(struct ISynchronize *, DWORD, DWORD);
    HRESULT (*Signal)(struct ISynchronize *);
    HRESULT (*Reset)(struct ISynchronize *);
};

struct ISynchronize {
    struct ISynchronizeVtbl *lpVtbl;
};

struct IAsyncRpcChannelBuffer {
    struct IAsyncRpcChannelBufferVtbl *lpVtbl;
};

struct IAsyncRpcChannelBufferVtbl {
    HRESULT (*QueryInterface)(struct IAsyncRpcChannelBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IAsyncRpcChannelBuffer *);
    ULONG (*Release)(struct IAsyncRpcChannelBuffer *);
    HRESULT (*GetBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IAsyncRpcChannelBuffer *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IAsyncRpcChannelBuffer *);
    HRESULT (*GetProtocolVersion)(struct IAsyncRpcChannelBuffer *, DWORD *);
    HRESULT (*Send)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, struct ISynchronize *, ULONG *);
    HRESULT (*Receive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*GetDestCtxEx)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, DWORD *, void **);
};

typedef enum tagDATADIR {
    DATADIR_GET=1,
    DATADIR_SET=2
} tagDATADIR;

typedef enum tagDATADIR DATADIR;

typedef struct IROTDataVtbl IROTDataVtbl, *PIROTDataVtbl;

typedef struct IROTData IROTData, *PIROTData;

struct IROTDataVtbl {
    HRESULT (*QueryInterface)(struct IROTData *, IID *, void **);
    ULONG (*AddRef)(struct IROTData *);
    ULONG (*Release)(struct IROTData *);
    HRESULT (*GetComparisonData)(struct IROTData *, byte *, ULONG, ULONG *);
};

struct IROTData {
    struct IROTDataVtbl *lpVtbl;
};

typedef struct IMallocSpyVtbl IMallocSpyVtbl, *PIMallocSpyVtbl;

typedef struct IMallocSpy IMallocSpy, *PIMallocSpy;

typedef ULONG_PTR SIZE_T;

struct IMallocSpy {
    struct IMallocSpyVtbl *lpVtbl;
};

struct IMallocSpyVtbl {
    HRESULT (*QueryInterface)(struct IMallocSpy *, IID *, void **);
    ULONG (*AddRef)(struct IMallocSpy *);
    ULONG (*Release)(struct IMallocSpy *);
    SIZE_T (*PreAlloc)(struct IMallocSpy *, SIZE_T);
    void * (*PostAlloc)(struct IMallocSpy *, void *);
    void * (*PreFree)(struct IMallocSpy *, void *, BOOL);
    void (*PostFree)(struct IMallocSpy *, BOOL);
    SIZE_T (*PreRealloc)(struct IMallocSpy *, void *, SIZE_T, void **, BOOL);
    void * (*PostRealloc)(struct IMallocSpy *, void *, BOOL);
    void * (*PreGetSize)(struct IMallocSpy *, void *, BOOL);
    SIZE_T (*PostGetSize)(struct IMallocSpy *, SIZE_T, BOOL);
    void * (*PreDidAlloc)(struct IMallocSpy *, void *, BOOL);
    int (*PostDidAlloc)(struct IMallocSpy *, void *, BOOL, int);
    void (*PreHeapMinimize)(struct IMallocSpy *);
    void (*PostHeapMinimize)(struct IMallocSpy *);
};

typedef enum tagEXTCONN {
    EXTCONN_STRONG=1,
    EXTCONN_WEAK=2,
    EXTCONN_CALLABLE=4
} tagEXTCONN;

typedef enum tagEXTCONN EXTCONN;

typedef struct IUrlMonVtbl IUrlMonVtbl, *PIUrlMonVtbl;

typedef struct IUrlMon IUrlMon, *PIUrlMon;

typedef struct IBindCtx IBindCtx, *PIBindCtx;

typedef struct IBindCtxVtbl IBindCtxVtbl, *PIBindCtxVtbl;

typedef struct tagBIND_OPTS tagBIND_OPTS, *PtagBIND_OPTS;

typedef struct tagBIND_OPTS BIND_OPTS;

typedef struct IRunningObjectTable IRunningObjectTable, *PIRunningObjectTable;

typedef struct IEnumString IEnumString, *PIEnumString;

typedef struct IRunningObjectTableVtbl IRunningObjectTableVtbl, *PIRunningObjectTableVtbl;

typedef struct IMoniker IMoniker, *PIMoniker;

typedef struct IEnumMoniker IEnumMoniker, *PIEnumMoniker;

typedef struct IEnumStringVtbl IEnumStringVtbl, *PIEnumStringVtbl;

typedef struct IMonikerVtbl IMonikerVtbl, *PIMonikerVtbl;

typedef struct IStream IStream, *PIStream;

typedef struct IEnumMonikerVtbl IEnumMonikerVtbl, *PIEnumMonikerVtbl;

typedef struct IStreamVtbl IStreamVtbl, *PIStreamVtbl;

typedef union _LARGE_INTEGER _LARGE_INTEGER, *P_LARGE_INTEGER;

typedef union _LARGE_INTEGER LARGE_INTEGER;

typedef struct _struct_7 _struct_7, *P_struct_7;

typedef struct _struct_8 _struct_8, *P_struct_8;

typedef double LONGLONG;

struct IStreamVtbl {
    HRESULT (*QueryInterface)(struct IStream *, IID *, void **);
    ULONG (*AddRef)(struct IStream *);
    ULONG (*Release)(struct IStream *);
    HRESULT (*Read)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Write)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (*Seek)(struct IStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (*SetSize)(struct IStream *, ULARGE_INTEGER);
    HRESULT (*CopyTo)(struct IStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (*Commit)(struct IStream *, DWORD);
    HRESULT (*Revert)(struct IStream *);
    HRESULT (*LockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*UnlockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (*Stat)(struct IStream *, STATSTG *, DWORD);
    HRESULT (*Clone)(struct IStream *, struct IStream **);
};

struct IEnumStringVtbl {
    HRESULT (*QueryInterface)(struct IEnumString *, IID *, void **);
    ULONG (*AddRef)(struct IEnumString *);
    ULONG (*Release)(struct IEnumString *);
    HRESULT (*Next)(struct IEnumString *, ULONG, LPOLESTR *, ULONG *);
    HRESULT (*Skip)(struct IEnumString *, ULONG);
    HRESULT (*Reset)(struct IEnumString *);
    HRESULT (*Clone)(struct IEnumString *, struct IEnumString **);
};

struct IStream {
    struct IStreamVtbl *lpVtbl;
};

struct IMonikerVtbl {
    HRESULT (*QueryInterface)(struct IMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IMoniker *);
    ULONG (*Release)(struct IMoniker *);
    HRESULT (*GetClassID)(struct IMoniker *, CLSID *);
    HRESULT (*IsDirty)(struct IMoniker *);
    HRESULT (*Load)(struct IMoniker *, struct IStream *);
    HRESULT (*Save)(struct IMoniker *, struct IStream *, BOOL);
    HRESULT (*GetSizeMax)(struct IMoniker *, ULARGE_INTEGER *);
    HRESULT (*BindToObject)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void **);
    HRESULT (*BindToStorage)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void **);
    HRESULT (*Reduce)(struct IMoniker *, struct IBindCtx *, DWORD, struct IMoniker **, struct IMoniker **);
    HRESULT (*ComposeWith)(struct IMoniker *, struct IMoniker *, BOOL, struct IMoniker **);
    HRESULT (*Enum)(struct IMoniker *, BOOL, struct IEnumMoniker **);
    HRESULT (*IsEqual)(struct IMoniker *, struct IMoniker *);
    HRESULT (*Hash)(struct IMoniker *, DWORD *);
    HRESULT (*IsRunning)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, struct IMoniker *);
    HRESULT (*GetTimeOfLastChange)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, FILETIME *);
    HRESULT (*Inverse)(struct IMoniker *, struct IMoniker **);
    HRESULT (*CommonPrefixWith)(struct IMoniker *, struct IMoniker *, struct IMoniker **);
    HRESULT (*RelativePathTo)(struct IMoniker *, struct IMoniker *, struct IMoniker **);
    HRESULT (*GetDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR *);
    HRESULT (*ParseDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*IsSystemMoniker)(struct IMoniker *, DWORD *);
};

struct _struct_8 {
    DWORD LowPart;
    LONG HighPart;
};

struct _struct_7 {
    DWORD LowPart;
    LONG HighPart;
};

union _LARGE_INTEGER {
    struct _struct_7 field0;
    struct _struct_8 u;
    LONGLONG QuadPart;
};

struct IMoniker {
    struct IMonikerVtbl *lpVtbl;
};

struct IUrlMon {
    struct IUrlMonVtbl *lpVtbl;
};

struct IEnumString {
    struct IEnumStringVtbl *lpVtbl;
};

struct IEnumMonikerVtbl {
    HRESULT (*QueryInterface)(struct IEnumMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IEnumMoniker *);
    ULONG (*Release)(struct IEnumMoniker *);
    HRESULT (*Next)(struct IEnumMoniker *, ULONG, struct IMoniker **, ULONG *);
    HRESULT (*Skip)(struct IEnumMoniker *, ULONG);
    HRESULT (*Reset)(struct IEnumMoniker *);
    HRESULT (*Clone)(struct IEnumMoniker *, struct IEnumMoniker **);
};

struct IRunningObjectTable {
    struct IRunningObjectTableVtbl *lpVtbl;
};

struct tagBIND_OPTS {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
};

struct IBindCtx {
    struct IBindCtxVtbl *lpVtbl;
};

struct IBindCtxVtbl {
    HRESULT (*QueryInterface)(struct IBindCtx *, IID *, void **);
    ULONG (*AddRef)(struct IBindCtx *);
    ULONG (*Release)(struct IBindCtx *);
    HRESULT (*RegisterObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (*RevokeObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (*ReleaseBoundObjects)(struct IBindCtx *);
    HRESULT (*SetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (*GetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (*GetRunningObjectTable)(struct IBindCtx *, struct IRunningObjectTable **);
    HRESULT (*RegisterObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown *);
    HRESULT (*GetObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown **);
    HRESULT (*EnumObjectParam)(struct IBindCtx *, struct IEnumString **);
    HRESULT (*RevokeObjectParam)(struct IBindCtx *, LPOLESTR);
};

struct IEnumMoniker {
    struct IEnumMonikerVtbl *lpVtbl;
};

struct IUrlMonVtbl {
    HRESULT (*QueryInterface)(struct IUrlMon *, IID *, void **);
    ULONG (*AddRef)(struct IUrlMon *);
    ULONG (*Release)(struct IUrlMon *);
    HRESULT (*AsyncGetClassBits)(struct IUrlMon *, IID *, LPCWSTR, LPCWSTR, DWORD, DWORD, LPCWSTR, struct IBindCtx *, DWORD, IID *, DWORD);
};

struct IRunningObjectTableVtbl {
    HRESULT (*QueryInterface)(struct IRunningObjectTable *, IID *, void **);
    ULONG (*AddRef)(struct IRunningObjectTable *);
    ULONG (*Release)(struct IRunningObjectTable *);
    HRESULT (*Register)(struct IRunningObjectTable *, DWORD, struct IUnknown *, struct IMoniker *, DWORD *);
    HRESULT (*Revoke)(struct IRunningObjectTable *, DWORD);
    HRESULT (*IsRunning)(struct IRunningObjectTable *, struct IMoniker *);
    HRESULT (*GetObjectA)(struct IRunningObjectTable *, struct IMoniker *, struct IUnknown **);
    HRESULT (*NoteChangeTime)(struct IRunningObjectTable *, DWORD, FILETIME *);
    HRESULT (*GetTimeOfLastChange)(struct IRunningObjectTable *, struct IMoniker *, FILETIME *);
    HRESULT (*EnumRunning)(struct IRunningObjectTable *, struct IEnumMoniker **);
};

typedef struct ISynchronizeHandleVtbl ISynchronizeHandleVtbl, *PISynchronizeHandleVtbl;

typedef struct ISynchronizeHandle ISynchronizeHandle, *PISynchronizeHandle;

struct ISynchronizeHandle {
    struct ISynchronizeHandleVtbl *lpVtbl;
};

struct ISynchronizeHandleVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeHandle *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeHandle *);
    ULONG (*Release)(struct ISynchronizeHandle *);
    HRESULT (*GetHandle)(struct ISynchronizeHandle *, HANDLE *);
};

typedef struct ISurrogateVtbl ISurrogateVtbl, *PISurrogateVtbl;

typedef struct ISurrogate ISurrogate, *PISurrogate;

struct ISurrogate {
    struct ISurrogateVtbl *lpVtbl;
};

struct ISurrogateVtbl {
    HRESULT (*QueryInterface)(struct ISurrogate *, IID *, void **);
    ULONG (*AddRef)(struct ISurrogate *);
    ULONG (*Release)(struct ISurrogate *);
    HRESULT (*LoadDllServer)(struct ISurrogate *, IID *);
    HRESULT (*FreeSurrogate)(struct ISurrogate *);
};

typedef struct AsyncIAdviseSink2 AsyncIAdviseSink2, *PAsyncIAdviseSink2;

typedef struct AsyncIAdviseSink2Vtbl AsyncIAdviseSink2Vtbl, *PAsyncIAdviseSink2Vtbl;

typedef struct tagSTGMEDIUM tagSTGMEDIUM, *PtagSTGMEDIUM;

typedef struct tagSTGMEDIUM uSTGMEDIUM;

typedef uSTGMEDIUM STGMEDIUM;

typedef union _union_1695 _union_1695, *P_union_1695;

typedef struct HBITMAP__ HBITMAP__, *PHBITMAP__;

typedef struct HBITMAP__ *HBITMAP;

typedef void *HMETAFILEPICT;

typedef struct HENHMETAFILE__ HENHMETAFILE__, *PHENHMETAFILE__;

typedef struct HENHMETAFILE__ *HENHMETAFILE;

typedef HANDLE HGLOBAL;

typedef struct IStorage IStorage, *PIStorage;

typedef struct IStorageVtbl IStorageVtbl, *PIStorageVtbl;

typedef OLECHAR **SNB;

typedef struct IEnumSTATSTG IEnumSTATSTG, *PIEnumSTATSTG;

typedef struct IEnumSTATSTGVtbl IEnumSTATSTGVtbl, *PIEnumSTATSTGVtbl;

struct AsyncIAdviseSink2Vtbl {
    HRESULT (*QueryInterface)(struct AsyncIAdviseSink2 *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIAdviseSink2 *);
    ULONG (*Release)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnDataChange)(struct AsyncIAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (*Finish_OnDataChange)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnViewChange)(struct AsyncIAdviseSink2 *, DWORD, LONG);
    void (*Finish_OnViewChange)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnRename)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (*Finish_OnRename)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnSave)(struct AsyncIAdviseSink2 *);
    void (*Finish_OnSave)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnClose)(struct AsyncIAdviseSink2 *);
    void (*Finish_OnClose)(struct AsyncIAdviseSink2 *);
    void (*Begin_OnLinkSrcChange)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (*Finish_OnLinkSrcChange)(struct AsyncIAdviseSink2 *);
};

struct AsyncIAdviseSink2 {
    struct AsyncIAdviseSink2Vtbl *lpVtbl;
};

struct IStorageVtbl {
    HRESULT (*QueryInterface)(struct IStorage *, IID *, void **);
    ULONG (*AddRef)(struct IStorage *);
    ULONG (*Release)(struct IStorage *);
    HRESULT (*CreateStream)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStream **);
    HRESULT (*OpenStream)(struct IStorage *, OLECHAR *, void *, DWORD, DWORD, struct IStream **);
    HRESULT (*CreateStorage)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStorage **);
    HRESULT (*OpenStorage)(struct IStorage *, OLECHAR *, struct IStorage *, DWORD, SNB, DWORD, struct IStorage **);
    HRESULT (*CopyTo)(struct IStorage *, DWORD, IID *, SNB, struct IStorage *);
    HRESULT (*MoveElementTo)(struct IStorage *, OLECHAR *, struct IStorage *, OLECHAR *, DWORD);
    HRESULT (*Commit)(struct IStorage *, DWORD);
    HRESULT (*Revert)(struct IStorage *);
    HRESULT (*EnumElements)(struct IStorage *, DWORD, void *, DWORD, struct IEnumSTATSTG **);
    HRESULT (*DestroyElement)(struct IStorage *, OLECHAR *);
    HRESULT (*RenameElement)(struct IStorage *, OLECHAR *, OLECHAR *);
    HRESULT (*SetElementTimes)(struct IStorage *, OLECHAR *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (*SetClass)(struct IStorage *, IID *);
    HRESULT (*SetStateBits)(struct IStorage *, DWORD, DWORD);
    HRESULT (*Stat)(struct IStorage *, STATSTG *, DWORD);
};

struct IStorage {
    struct IStorageVtbl *lpVtbl;
};

struct IEnumSTATSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATSTG *);
    ULONG (*Release)(struct IEnumSTATSTG *);
    HRESULT (*Next)(struct IEnumSTATSTG *, ULONG, STATSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATSTG *);
    HRESULT (*Clone)(struct IEnumSTATSTG *, struct IEnumSTATSTG **);
};

union _union_1695 {
    HBITMAP hBitmap;
    HMETAFILEPICT hMetaFilePict;
    HENHMETAFILE hEnhMetaFile;
    HGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    struct IStream *pstm;
    struct IStorage *pstg;
};

struct tagSTGMEDIUM {
    DWORD tymed;
    union _union_1695 field1_0x4;
    struct IUnknown *pUnkForRelease;
};

struct HBITMAP__ {
    int unused;
};

struct IEnumSTATSTG {
    struct IEnumSTATSTGVtbl *lpVtbl;
};

struct HENHMETAFILE__ {
    int unused;
};

typedef struct IThumbnailExtractor IThumbnailExtractor, *PIThumbnailExtractor;

typedef struct IThumbnailExtractorVtbl IThumbnailExtractorVtbl, *PIThumbnailExtractorVtbl;

struct IThumbnailExtractor {
    struct IThumbnailExtractorVtbl *lpVtbl;
};

struct IThumbnailExtractorVtbl {
    HRESULT (*QueryInterface)(struct IThumbnailExtractor *, IID *, void **);
    ULONG (*AddRef)(struct IThumbnailExtractor *);
    ULONG (*Release)(struct IThumbnailExtractor *);
    HRESULT (*ExtractThumbnail)(struct IThumbnailExtractor *, struct IStorage *, ULONG, ULONG, ULONG *, ULONG *, HBITMAP *);
    HRESULT (*OnFileUpdated)(struct IThumbnailExtractor *, struct IStorage *);
};

typedef struct _FLAG_STGMEDIUM _FLAG_STGMEDIUM, *P_FLAG_STGMEDIUM;

typedef struct _FLAG_STGMEDIUM FLAG_STGMEDIUM;

struct _FLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    STGMEDIUM Stgmed;
};

typedef struct IPersist IPersist, *PIPersist;

typedef struct IPersistVtbl IPersistVtbl, *PIPersistVtbl;

struct IPersistVtbl {
    HRESULT (*QueryInterface)(struct IPersist *, IID *, void **);
    ULONG (*AddRef)(struct IPersist *);
    ULONG (*Release)(struct IPersist *);
    HRESULT (*GetClassID)(struct IPersist *, CLSID *);
};

struct IPersist {
    struct IPersistVtbl *lpVtbl;
};

typedef struct AsyncIPipeDouble AsyncIPipeDouble, *PAsyncIPipeDouble;

typedef struct AsyncIPipeDoubleVtbl AsyncIPipeDoubleVtbl, *PAsyncIPipeDoubleVtbl;

typedef double DOUBLE;

struct AsyncIPipeDouble {
    struct AsyncIPipeDoubleVtbl *lpVtbl;
};

struct AsyncIPipeDoubleVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeDouble *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeDouble *);
    ULONG (*Release)(struct AsyncIPipeDouble *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeDouble *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeDouble *, DOUBLE *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeDouble *, DOUBLE *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeDouble *);
};

typedef struct IFillLockBytes IFillLockBytes, *PIFillLockBytes;

typedef struct IFillLockBytesVtbl IFillLockBytesVtbl, *PIFillLockBytesVtbl;

struct IFillLockBytes {
    struct IFillLockBytesVtbl *lpVtbl;
};

struct IFillLockBytesVtbl {
    HRESULT (*QueryInterface)(struct IFillLockBytes *, IID *, void **);
    ULONG (*AddRef)(struct IFillLockBytes *);
    ULONG (*Release)(struct IFillLockBytes *);
    HRESULT (*FillAppend)(struct IFillLockBytes *, void *, ULONG, ULONG *);
    HRESULT (*FillAt)(struct IFillLockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (*SetFillSize)(struct IFillLockBytes *, ULARGE_INTEGER);
    HRESULT (*Terminate)(struct IFillLockBytes *, BOOL);
};

typedef struct IEnumFORMATETCVtbl IEnumFORMATETCVtbl, *PIEnumFORMATETCVtbl;

typedef struct IEnumFORMATETC IEnumFORMATETC, *PIEnumFORMATETC;

struct IEnumFORMATETC {
    struct IEnumFORMATETCVtbl *lpVtbl;
};

struct IEnumFORMATETCVtbl {
    HRESULT (*QueryInterface)(struct IEnumFORMATETC *, IID *, void **);
    ULONG (*AddRef)(struct IEnumFORMATETC *);
    ULONG (*Release)(struct IEnumFORMATETC *);
    HRESULT (*Next)(struct IEnumFORMATETC *, ULONG, FORMATETC *, ULONG *);
    HRESULT (*Skip)(struct IEnumFORMATETC *, ULONG);
    HRESULT (*Reset)(struct IEnumFORMATETC *);
    HRESULT (*Clone)(struct IEnumFORMATETC *, struct IEnumFORMATETC **);
};

typedef struct AsyncIPipeByte AsyncIPipeByte, *PAsyncIPipeByte;

typedef struct AsyncIPipeByteVtbl AsyncIPipeByteVtbl, *PAsyncIPipeByteVtbl;

struct AsyncIPipeByte {
    struct AsyncIPipeByteVtbl *lpVtbl;
};

struct AsyncIPipeByteVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeByte *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeByte *);
    ULONG (*Release)(struct AsyncIPipeByte *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeByte *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeByte *, BYTE *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeByte *, BYTE *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeByte *);
};

typedef struct IInternalUnknownVtbl IInternalUnknownVtbl, *PIInternalUnknownVtbl;

typedef struct IInternalUnknown IInternalUnknown, *PIInternalUnknown;

struct IInternalUnknownVtbl {
    HRESULT (*QueryInterface)(struct IInternalUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IInternalUnknown *);
    ULONG (*Release)(struct IInternalUnknown *);
    HRESULT (*QueryInternalInterface)(struct IInternalUnknown *, IID *, void **);
};

struct IInternalUnknown {
    struct IInternalUnknownVtbl *lpVtbl;
};

typedef struct IAsyncManager IAsyncManager, *PIAsyncManager;

typedef struct IAsyncManagerVtbl IAsyncManagerVtbl, *PIAsyncManagerVtbl;

struct IAsyncManagerVtbl {
    HRESULT (*QueryInterface)(struct IAsyncManager *, IID *, void **);
    ULONG (*AddRef)(struct IAsyncManager *);
    ULONG (*Release)(struct IAsyncManager *);
    HRESULT (*CompleteCall)(struct IAsyncManager *, HRESULT);
    HRESULT (*GetCallContext)(struct IAsyncManager *, IID *, void **);
    HRESULT (*GetState)(struct IAsyncManager *, ULONG *);
};

struct IAsyncManager {
    struct IAsyncManagerVtbl *lpVtbl;
};

typedef struct IDataAdviseHolder IDataAdviseHolder, *PIDataAdviseHolder;

typedef struct IDataAdviseHolder *LPDATAADVISEHOLDER;

typedef struct IDataAdviseHolderVtbl IDataAdviseHolderVtbl, *PIDataAdviseHolderVtbl;

typedef struct IDataObject IDataObject, *PIDataObject;

typedef struct IAdviseSink IAdviseSink, *PIAdviseSink;

typedef struct IEnumSTATDATA IEnumSTATDATA, *PIEnumSTATDATA;

typedef struct IDataObjectVtbl IDataObjectVtbl, *PIDataObjectVtbl;

typedef struct IAdviseSinkVtbl IAdviseSinkVtbl, *PIAdviseSinkVtbl;

typedef struct IEnumSTATDATAVtbl IEnumSTATDATAVtbl, *PIEnumSTATDATAVtbl;

typedef struct tagSTATDATA tagSTATDATA, *PtagSTATDATA;

typedef struct tagSTATDATA STATDATA;

struct IAdviseSink {
    struct IAdviseSinkVtbl *lpVtbl;
};

struct IAdviseSinkVtbl {
    HRESULT (*QueryInterface)(struct IAdviseSink *, IID *, void **);
    ULONG (*AddRef)(struct IAdviseSink *);
    ULONG (*Release)(struct IAdviseSink *);
    void (*OnDataChange)(struct IAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (*OnViewChange)(struct IAdviseSink *, DWORD, LONG);
    void (*OnRename)(struct IAdviseSink *, struct IMoniker *);
    void (*OnSave)(struct IAdviseSink *);
    void (*OnClose)(struct IAdviseSink *);
};

struct IDataObject {
    struct IDataObjectVtbl *lpVtbl;
};

struct IDataAdviseHolderVtbl {
    HRESULT (*QueryInterface)(struct IDataAdviseHolder *, IID *, void **);
    ULONG (*AddRef)(struct IDataAdviseHolder *);
    ULONG (*Release)(struct IDataAdviseHolder *);
    HRESULT (*Advise)(struct IDataAdviseHolder *, struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IDataAdviseHolder *, DWORD);
    HRESULT (*EnumAdvise)(struct IDataAdviseHolder *, struct IEnumSTATDATA **);
    HRESULT (*SendOnDataChange)(struct IDataAdviseHolder *, struct IDataObject *, DWORD, DWORD);
};

struct IEnumSTATDATA {
    struct IEnumSTATDATAVtbl *lpVtbl;
};

struct IDataObjectVtbl {
    HRESULT (*QueryInterface)(struct IDataObject *, IID *, void **);
    ULONG (*AddRef)(struct IDataObject *);
    ULONG (*Release)(struct IDataObject *);
    HRESULT (*GetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (*GetDataHere)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (*QueryGetData)(struct IDataObject *, FORMATETC *);
    HRESULT (*GetCanonicalFormatEtc)(struct IDataObject *, FORMATETC *, FORMATETC *);
    HRESULT (*SetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (*EnumFormatEtc)(struct IDataObject *, DWORD, struct IEnumFORMATETC **);
    HRESULT (*DAdvise)(struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (*DUnadvise)(struct IDataObject *, DWORD);
    HRESULT (*EnumDAdvise)(struct IDataObject *, struct IEnumSTATDATA **);
};

struct tagSTATDATA {
    FORMATETC formatetc;
    DWORD advf;
    struct IAdviseSink *pAdvSink;
    DWORD dwConnection;
};

struct IEnumSTATDATAVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATDATA *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATDATA *);
    ULONG (*Release)(struct IEnumSTATDATA *);
    HRESULT (*Next)(struct IEnumSTATDATA *, ULONG, STATDATA *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATDATA *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATDATA *);
    HRESULT (*Clone)(struct IEnumSTATDATA *, struct IEnumSTATDATA **);
};

struct IDataAdviseHolder {
    struct IDataAdviseHolderVtbl *lpVtbl;
};

typedef struct ICancelMethodCallsVtbl ICancelMethodCallsVtbl, *PICancelMethodCallsVtbl;

typedef struct ICancelMethodCalls ICancelMethodCalls, *PICancelMethodCalls;

struct ICancelMethodCalls {
    struct ICancelMethodCallsVtbl *lpVtbl;
};

struct ICancelMethodCallsVtbl {
    HRESULT (*QueryInterface)(struct ICancelMethodCalls *, IID *, void **);
    ULONG (*AddRef)(struct ICancelMethodCalls *);
    ULONG (*Release)(struct ICancelMethodCalls *);
    HRESULT (*Cancel)(struct ICancelMethodCalls *, ULONG);
    HRESULT (*TestCancel)(struct ICancelMethodCalls *);
};

typedef struct IDirectWriterLockVtbl IDirectWriterLockVtbl, *PIDirectWriterLockVtbl;

typedef struct IDirectWriterLock IDirectWriterLock, *PIDirectWriterLock;

struct IDirectWriterLock {
    struct IDirectWriterLockVtbl *lpVtbl;
};

struct IDirectWriterLockVtbl {
    HRESULT (*QueryInterface)(struct IDirectWriterLock *, IID *, void **);
    ULONG (*AddRef)(struct IDirectWriterLock *);
    ULONG (*Release)(struct IDirectWriterLock *);
    HRESULT (*WaitForWriteAccess)(struct IDirectWriterLock *, DWORD);
    HRESULT (*ReleaseWriteAccess)(struct IDirectWriterLock *);
    HRESULT (*HaveWriteAccess)(struct IDirectWriterLock *);
};

typedef struct IPipeLongVtbl IPipeLongVtbl, *PIPipeLongVtbl;

typedef struct IPipeLong IPipeLong, *PIPipeLong;

struct IPipeLong {
    struct IPipeLongVtbl *lpVtbl;
};

struct IPipeLongVtbl {
    HRESULT (*QueryInterface)(struct IPipeLong *, IID *, void **);
    ULONG (*AddRef)(struct IPipeLong *);
    ULONG (*Release)(struct IPipeLong *);
    HRESULT (*Pull)(struct IPipeLong *, LONG *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeLong *, LONG *, ULONG);
};

typedef struct IRpcHelper IRpcHelper, *PIRpcHelper;

typedef struct IRpcHelperVtbl IRpcHelperVtbl, *PIRpcHelperVtbl;

struct IRpcHelper {
    struct IRpcHelperVtbl *lpVtbl;
};

struct IRpcHelperVtbl {
    HRESULT (*QueryInterface)(struct IRpcHelper *, IID *, void **);
    ULONG (*AddRef)(struct IRpcHelper *);
    ULONG (*Release)(struct IRpcHelper *);
    HRESULT (*GetDCOMProtocolVersion)(struct IRpcHelper *, DWORD *);
    HRESULT (*GetIIDFromOBJREF)(struct IRpcHelper *, void *, IID **);
};

typedef enum _APTTYPE {
    APTTYPE_CURRENT=-1,
    APTTYPE_STA=0,
    APTTYPE_MTA=1,
    APTTYPE_NA=2,
    APTTYPE_MAINSTA=3
} _APTTYPE;

typedef enum _APTTYPE APTTYPE;

typedef struct IDummyHICONIncluder IDummyHICONIncluder, *PIDummyHICONIncluder;

typedef struct IDummyHICONIncluderVtbl IDummyHICONIncluderVtbl, *PIDummyHICONIncluderVtbl;

typedef struct HICON__ HICON__, *PHICON__;

typedef struct HICON__ *HICON;

struct IDummyHICONIncluderVtbl {
    HRESULT (*QueryInterface)(struct IDummyHICONIncluder *, IID *, void **);
    ULONG (*AddRef)(struct IDummyHICONIncluder *);
    ULONG (*Release)(struct IDummyHICONIncluder *);
    HRESULT (*Dummy)(struct IDummyHICONIncluder *, HICON, HDC);
};

struct HICON__ {
    int unused;
};

struct IDummyHICONIncluder {
    struct IDummyHICONIncluderVtbl *lpVtbl;
};

typedef enum tagSTREAM_SEEK {
    STREAM_SEEK_SET=0,
    STREAM_SEEK_CUR=1,
    STREAM_SEEK_END=2
} tagSTREAM_SEEK;

typedef enum tagSTREAM_SEEK STREAM_SEEK;

typedef struct tagSOLE_AUTHENTICATION_LIST tagSOLE_AUTHENTICATION_LIST, *PtagSOLE_AUTHENTICATION_LIST;

typedef struct tagSOLE_AUTHENTICATION_INFO tagSOLE_AUTHENTICATION_INFO, *PtagSOLE_AUTHENTICATION_INFO;

typedef struct tagSOLE_AUTHENTICATION_INFO SOLE_AUTHENTICATION_INFO;

struct tagSOLE_AUTHENTICATION_LIST {
    DWORD cAuthInfo;
    SOLE_AUTHENTICATION_INFO *aAuthInfo;
};

struct tagSOLE_AUTHENTICATION_INFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    void *pAuthInfo;
};

typedef DWORD APARTMENTID;

typedef struct ISynchronizeContainer ISynchronizeContainer, *PISynchronizeContainer;

typedef struct ISynchronizeContainerVtbl ISynchronizeContainerVtbl, *PISynchronizeContainerVtbl;

struct ISynchronizeContainer {
    struct ISynchronizeContainerVtbl *lpVtbl;
};

struct ISynchronizeContainerVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeContainer *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeContainer *);
    ULONG (*Release)(struct ISynchronizeContainer *);
    HRESULT (*AddSynchronize)(struct ISynchronizeContainer *, struct ISynchronize *);
    HRESULT (*WaitMultiple)(struct ISynchronizeContainer *, DWORD, DWORD, struct ISynchronize **);
};

typedef struct IBindCtx *LPBC;

typedef struct IBlockingLock IBlockingLock, *PIBlockingLock;

typedef struct IBlockingLockVtbl IBlockingLockVtbl, *PIBlockingLockVtbl;

struct IBlockingLock {
    struct IBlockingLockVtbl *lpVtbl;
};

struct IBlockingLockVtbl {
    HRESULT (*QueryInterface)(struct IBlockingLock *, IID *, void **);
    ULONG (*AddRef)(struct IBlockingLock *);
    ULONG (*Release)(struct IBlockingLock *);
    HRESULT (*Lock)(struct IBlockingLock *, DWORD);
    HRESULT (*Unlock)(struct IBlockingLock *);
};

typedef struct IMarshal2 IMarshal2, *PIMarshal2;

typedef struct IMarshal2 *LPMARSHAL2;

typedef struct IMarshal2Vtbl IMarshal2Vtbl, *PIMarshal2Vtbl;

struct IMarshal2Vtbl {
    HRESULT (*QueryInterface)(struct IMarshal2 *, IID *, void **);
    ULONG (*AddRef)(struct IMarshal2 *);
    ULONG (*Release)(struct IMarshal2 *);
    HRESULT (*GetUnmarshalClass)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (*GetMarshalSizeMax)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (*MarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (*UnmarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void **);
    HRESULT (*ReleaseMarshalData)(struct IMarshal2 *, struct IStream *);
    HRESULT (*DisconnectObject)(struct IMarshal2 *, DWORD);
};

struct IMarshal2 {
    struct IMarshal2Vtbl *lpVtbl;
};

typedef struct tagRemSNB tagRemSNB, *PtagRemSNB;

typedef struct tagRemSNB RemSNB;

struct tagRemSNB {
    ulong ulCntStr;
    ulong ulCntChar;
    OLECHAR rgString[1];
};

typedef enum tagBIND_FLAGS {
    BIND_MAYBOTHERUSER=1,
    BIND_JUSTTESTEXISTENCE=2
} tagBIND_FLAGS;

typedef struct ISynchronizeMutexVtbl ISynchronizeMutexVtbl, *PISynchronizeMutexVtbl;

typedef struct ISynchronizeMutex ISynchronizeMutex, *PISynchronizeMutex;

struct ISynchronizeMutexVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeMutex *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeMutex *);
    ULONG (*Release)(struct ISynchronizeMutex *);
    HRESULT (*Wait)(struct ISynchronizeMutex *, DWORD, DWORD);
    HRESULT (*Signal)(struct ISynchronizeMutex *);
    HRESULT (*Reset)(struct ISynchronizeMutex *);
    HRESULT (*ReleaseMutex)(struct ISynchronizeMutex *);
};

struct ISynchronizeMutex {
    struct ISynchronizeMutexVtbl *lpVtbl;
};

typedef struct tagStorageLayout tagStorageLayout, *PtagStorageLayout;

typedef struct tagStorageLayout StorageLayout;

struct tagStorageLayout {
    DWORD LayoutType;
    OLECHAR *pwcsElementName;
    LARGE_INTEGER cOffset;
    LARGE_INTEGER cBytes;
};

typedef CLIPFORMAT *LPCLIPFORMAT;

typedef struct AsyncIPipeLong AsyncIPipeLong, *PAsyncIPipeLong;

typedef struct AsyncIPipeLongVtbl AsyncIPipeLongVtbl, *PAsyncIPipeLongVtbl;

struct AsyncIPipeLongVtbl {
    HRESULT (*QueryInterface)(struct AsyncIPipeLong *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIPipeLong *);
    ULONG (*Release)(struct AsyncIPipeLong *);
    HRESULT (*Begin_Pull)(struct AsyncIPipeLong *, ULONG);
    HRESULT (*Finish_Pull)(struct AsyncIPipeLong *, LONG *, ULONG *);
    HRESULT (*Begin_Push)(struct AsyncIPipeLong *, LONG *, ULONG);
    HRESULT (*Finish_Push)(struct AsyncIPipeLong *);
};

struct AsyncIPipeLong {
    struct AsyncIPipeLongVtbl *lpVtbl;
};

typedef struct IGlobalInterfaceTable IGlobalInterfaceTable, *PIGlobalInterfaceTable;

typedef struct IGlobalInterfaceTable *LPGLOBALINTERFACETABLE;

typedef struct IGlobalInterfaceTableVtbl IGlobalInterfaceTableVtbl, *PIGlobalInterfaceTableVtbl;

struct IGlobalInterfaceTableVtbl {
    HRESULT (*QueryInterface)(struct IGlobalInterfaceTable *, IID *, void **);
    ULONG (*AddRef)(struct IGlobalInterfaceTable *);
    ULONG (*Release)(struct IGlobalInterfaceTable *);
    HRESULT (*RegisterInterfaceInGlobal)(struct IGlobalInterfaceTable *, struct IUnknown *, IID *, DWORD *);
    HRESULT (*RevokeInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD);
    HRESULT (*GetInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD, IID *, void **);
};

struct IGlobalInterfaceTable {
    struct IGlobalInterfaceTableVtbl *lpVtbl;
};

typedef struct IPersistFileVtbl IPersistFileVtbl, *PIPersistFileVtbl;

typedef struct IPersistFile IPersistFile, *PIPersistFile;

typedef OLECHAR *LPCOLESTR;

struct IPersistFile {
    struct IPersistFileVtbl *lpVtbl;
};

struct IPersistFileVtbl {
    HRESULT (*QueryInterface)(struct IPersistFile *, IID *, void **);
    ULONG (*AddRef)(struct IPersistFile *);
    ULONG (*Release)(struct IPersistFile *);
    HRESULT (*GetClassID)(struct IPersistFile *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistFile *);
    HRESULT (*Load)(struct IPersistFile *, LPCOLESTR, DWORD);
    HRESULT (*Save)(struct IPersistFile *, LPCOLESTR, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistFile *, LPCOLESTR);
    HRESULT (*GetCurFile)(struct IPersistFile *, LPOLESTR *);
};

typedef struct IOplockStorageVtbl IOplockStorageVtbl, *PIOplockStorageVtbl;

typedef struct IOplockStorage IOplockStorage, *PIOplockStorage;

struct IOplockStorage {
    struct IOplockStorageVtbl *lpVtbl;
};

struct IOplockStorageVtbl {
    HRESULT (*QueryInterface)(struct IOplockStorage *, IID *, void **);
    ULONG (*AddRef)(struct IOplockStorage *);
    ULONG (*Release)(struct IOplockStorage *);
    HRESULT (*CreateStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void **);
    HRESULT (*OpenStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void **);
};

typedef struct IDataObject *LPDATAOBJECT;

typedef struct IRpcChannelBuffer3Vtbl IRpcChannelBuffer3Vtbl, *PIRpcChannelBuffer3Vtbl;

typedef struct IRpcChannelBuffer3 IRpcChannelBuffer3, *PIRpcChannelBuffer3;

struct IRpcChannelBuffer3Vtbl {
    HRESULT (*QueryInterface)(struct IRpcChannelBuffer3 *, IID *, void **);
    ULONG (*AddRef)(struct IRpcChannelBuffer3 *);
    ULONG (*Release)(struct IRpcChannelBuffer3 *);
    HRESULT (*GetBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *);
    HRESULT (*SendReceive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*FreeBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (*GetDestCtx)(struct IRpcChannelBuffer3 *, DWORD *, void **);
    HRESULT (*IsConnected)(struct IRpcChannelBuffer3 *);
    HRESULT (*GetProtocolVersion)(struct IRpcChannelBuffer3 *, DWORD *);
    HRESULT (*Send)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (*Receive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG, ULONG *);
    HRESULT (*Cancel)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (*GetCallContext)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *, void **);
    HRESULT (*GetDestCtxEx)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *, void **);
    HRESULT (*GetState)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *);
    HRESULT (*RegisterAsync)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, struct IAsyncManager *);
};

struct IRpcChannelBuffer3 {
    struct IRpcChannelBuffer3Vtbl *lpVtbl;
};

typedef struct ILockBytes *LPLOCKBYTES;

typedef struct IAdviseSink2 IAdviseSink2, *PIAdviseSink2;

typedef struct IAdviseSink2 *LPADVISESINK2;

typedef struct IAdviseSink2Vtbl IAdviseSink2Vtbl, *PIAdviseSink2Vtbl;

struct IAdviseSink2 {
    struct IAdviseSink2Vtbl *lpVtbl;
};

struct IAdviseSink2Vtbl {
    HRESULT (*QueryInterface)(struct IAdviseSink2 *, IID *, void **);
    ULONG (*AddRef)(struct IAdviseSink2 *);
    ULONG (*Release)(struct IAdviseSink2 *);
    void (*OnDataChange)(struct IAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (*OnViewChange)(struct IAdviseSink2 *, DWORD, LONG);
    void (*OnRename)(struct IAdviseSink2 *, struct IMoniker *);
    void (*OnSave)(struct IAdviseSink2 *);
    void (*OnClose)(struct IAdviseSink2 *);
    void (*OnLinkSrcChange)(struct IAdviseSink2 *, struct IMoniker *);
};

typedef STGMEDIUM ASYNC_STGMEDIUM;

typedef struct IReleaseMarshalBuffers IReleaseMarshalBuffers, *PIReleaseMarshalBuffers;

typedef struct IReleaseMarshalBuffersVtbl IReleaseMarshalBuffersVtbl, *PIReleaseMarshalBuffersVtbl;

struct IReleaseMarshalBuffersVtbl {
    HRESULT (*QueryInterface)(struct IReleaseMarshalBuffers *, IID *, void **);
    ULONG (*AddRef)(struct IReleaseMarshalBuffers *);
    ULONG (*Release)(struct IReleaseMarshalBuffers *);
    HRESULT (*ReleaseMarshalBuffer)(struct IReleaseMarshalBuffers *, RPCOLEMESSAGE *, DWORD, struct IUnknown *);
};

struct IReleaseMarshalBuffers {
    struct IReleaseMarshalBuffersVtbl *lpVtbl;
};

typedef struct IPersistStorageVtbl IPersistStorageVtbl, *PIPersistStorageVtbl;

typedef struct IPersistStorage IPersistStorage, *PIPersistStorage;

struct IPersistStorage {
    struct IPersistStorageVtbl *lpVtbl;
};

struct IPersistStorageVtbl {
    HRESULT (*QueryInterface)(struct IPersistStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPersistStorage *);
    ULONG (*Release)(struct IPersistStorage *);
    HRESULT (*GetClassID)(struct IPersistStorage *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistStorage *);
    HRESULT (*InitNew)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*Load)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*Save)(struct IPersistStorage *, struct IStorage *, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistStorage *, struct IStorage *);
    HRESULT (*HandsOffStorage)(struct IPersistStorage *);
};

typedef struct IProgressNotify IProgressNotify, *PIProgressNotify;

typedef struct IProgressNotifyVtbl IProgressNotifyVtbl, *PIProgressNotifyVtbl;

struct IProgressNotify {
    struct IProgressNotifyVtbl *lpVtbl;
};

struct IProgressNotifyVtbl {
    HRESULT (*QueryInterface)(struct IProgressNotify *, IID *, void **);
    ULONG (*AddRef)(struct IProgressNotify *);
    ULONG (*Release)(struct IProgressNotify *);
    HRESULT (*OnProgress)(struct IProgressNotify *, DWORD, DWORD, BOOL, BOOL);
};

typedef struct IStream *LPSTREAM;

typedef struct IBindCtx *LPBINDCTX;

typedef struct IRpcOptions IRpcOptions, *PIRpcOptions;

typedef struct IRpcOptionsVtbl IRpcOptionsVtbl, *PIRpcOptionsVtbl;

struct IRpcOptions {
    struct IRpcOptionsVtbl *lpVtbl;
};

struct IRpcOptionsVtbl {
    HRESULT (*QueryInterface)(struct IRpcOptions *, IID *, void **);
    ULONG (*AddRef)(struct IRpcOptions *);
    ULONG (*Release)(struct IRpcOptions *);
    HRESULT (*Set)(struct IRpcOptions *, struct IUnknown *, DWORD, ULONG_PTR);
    HRESULT (*Query)(struct IRpcOptions *, struct IUnknown *, DWORD, ULONG_PTR *);
};

typedef enum _THDTYPE {
    THDTYPE_BLOCKMESSAGES=0,
    THDTYPE_PROCESSMESSAGES=1
} _THDTYPE;

typedef enum _THDTYPE THDTYPE;

typedef struct tagSOLE_AUTHENTICATION_SERVICE tagSOLE_AUTHENTICATION_SERVICE, *PtagSOLE_AUTHENTICATION_SERVICE;

struct tagSOLE_AUTHENTICATION_SERVICE {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    OLECHAR *pPrincipalName;
    HRESULT hr;
};

typedef enum tagTYMED {
    TYMED_NULL=0,
    TYMED_HGLOBAL=1,
    TYMED_FILE=2,
    TYMED_ISTREAM=4,
    TYMED_ISTORAGE=8,
    TYMED_GDI=16,
    TYMED_MFPICT=32,
    TYMED_ENHMF=64
} tagTYMED;

typedef enum tagTYMED TYMED;

typedef struct IChannelHook IChannelHook, *PIChannelHook;

typedef struct IChannelHookVtbl IChannelHookVtbl, *PIChannelHookVtbl;

struct IChannelHookVtbl {
    HRESULT (*QueryInterface)(struct IChannelHook *, IID *, void **);
    ULONG (*AddRef)(struct IChannelHook *);
    ULONG (*Release)(struct IChannelHook *);
    void (*ClientGetSize)(struct IChannelHook *, GUID *, IID *, ULONG *);
    void (*ClientFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *);
    void (*ClientNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD, HRESULT);
    void (*ServerNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD);
    void (*ServerGetSize)(struct IChannelHook *, GUID *, IID *, HRESULT, ULONG *);
    void (*ServerFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *, HRESULT);
};

struct IChannelHook {
    struct IChannelHookVtbl *lpVtbl;
};

typedef struct IExternalConnectionVtbl IExternalConnectionVtbl, *PIExternalConnectionVtbl;

typedef struct IExternalConnection IExternalConnection, *PIExternalConnection;

struct IExternalConnectionVtbl {
    HRESULT (*QueryInterface)(struct IExternalConnection *, IID *, void **);
    ULONG (*AddRef)(struct IExternalConnection *);
    ULONG (*Release)(struct IExternalConnection *);
    DWORD (*AddConnection)(struct IExternalConnection *, DWORD, DWORD);
    DWORD (*ReleaseConnection)(struct IExternalConnection *, DWORD, DWORD, BOOL);
};

struct IExternalConnection {
    struct IExternalConnectionVtbl *lpVtbl;
};

typedef STATDATA *LPSTATDATA;

typedef struct IMalloc IMalloc, *PIMalloc;

typedef struct IMallocVtbl IMallocVtbl, *PIMallocVtbl;

struct IMalloc {
    struct IMallocVtbl *lpVtbl;
};

struct IMallocVtbl {
    HRESULT (*QueryInterface)(struct IMalloc *, IID *, void **);
    ULONG (*AddRef)(struct IMalloc *);
    ULONG (*Release)(struct IMalloc *);
    void * (*Alloc)(struct IMalloc *, SIZE_T);
    void * (*Realloc)(struct IMalloc *, void *, SIZE_T);
    void (*Free)(struct IMalloc *, void *);
    SIZE_T (*GetSize)(struct IMalloc *, void *);
    int (*DidAlloc)(struct IMalloc *, void *);
    void (*HeapMinimize)(struct IMalloc *);
};

typedef struct tagFORMATETC *LPFORMATETC;

typedef struct IPersistStream IPersistStream, *PIPersistStream;

typedef struct IPersistStream *LPPERSISTSTREAM;

typedef struct IPersistStreamVtbl IPersistStreamVtbl, *PIPersistStreamVtbl;

struct IPersistStreamVtbl {
    HRESULT (*QueryInterface)(struct IPersistStream *, IID *, void **);
    ULONG (*AddRef)(struct IPersistStream *);
    ULONG (*Release)(struct IPersistStream *);
    HRESULT (*GetClassID)(struct IPersistStream *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistStream *);
    HRESULT (*Load)(struct IPersistStream *, struct IStream *);
    HRESULT (*Save)(struct IPersistStream *, struct IStream *, BOOL);
    HRESULT (*GetSizeMax)(struct IPersistStream *, ULARGE_INTEGER *);
};

struct IPersistStream {
    struct IPersistStreamVtbl *lpVtbl;
};

typedef struct IEnumFORMATETC *LPENUMFORMATETC;

typedef struct IEnumSTATDATA *LPENUMSTATDATA;

typedef struct tagBIND_OPTS2 tagBIND_OPTS2, *PtagBIND_OPTS2;

struct tagBIND_OPTS2 {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
    DWORD dwTrackFlags;
    DWORD dwClassContext;
    LCID locale;
    COSERVERINFO *pServerInfo;
};

typedef struct IRunnableObject IRunnableObject, *PIRunnableObject;

typedef struct IRunnableObjectVtbl IRunnableObjectVtbl, *PIRunnableObjectVtbl;

typedef CLSID *LPCLSID;

struct IRunnableObjectVtbl {
    HRESULT (*QueryInterface)(struct IRunnableObject *, IID *, void **);
    ULONG (*AddRef)(struct IRunnableObject *);
    ULONG (*Release)(struct IRunnableObject *);
    HRESULT (*GetRunningClass)(struct IRunnableObject *, LPCLSID);
    HRESULT (*Run)(struct IRunnableObject *, LPBINDCTX);
    BOOL (*IsRunning)(struct IRunnableObject *);
    HRESULT (*LockRunning)(struct IRunnableObject *, BOOL, BOOL);
    HRESULT (*SetContainedObject)(struct IRunnableObject *, BOOL);
};

struct IRunnableObject {
    struct IRunnableObjectVtbl *lpVtbl;
};

typedef struct IProcessInitControlVtbl IProcessInitControlVtbl, *PIProcessInitControlVtbl;

typedef struct IProcessInitControl IProcessInitControl, *PIProcessInitControl;

struct IProcessInitControl {
    struct IProcessInitControlVtbl *lpVtbl;
};

struct IProcessInitControlVtbl {
    HRESULT (*QueryInterface)(struct IProcessInitControl *, IID *, void **);
    ULONG (*AddRef)(struct IProcessInitControl *);
    ULONG (*Release)(struct IProcessInitControl *);
    HRESULT (*ResetInitializerTimeout)(struct IProcessInitControl *, DWORD);
};

typedef userSTGMEDIUM *wireASYNC_STGMEDIUM;

typedef struct ICancelMethodCalls *LPCANCELMETHODCALLS;

typedef struct IRpcProxyBuffer IRpcProxyBuffer, *PIRpcProxyBuffer;

typedef struct IRpcProxyBufferVtbl IRpcProxyBufferVtbl, *PIRpcProxyBufferVtbl;

struct IRpcProxyBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcProxyBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcProxyBuffer *);
    ULONG (*Release)(struct IRpcProxyBuffer *);
    HRESULT (*Connect)(struct IRpcProxyBuffer *, struct IRpcChannelBuffer *);
    void (*Disconnect)(struct IRpcProxyBuffer *);
};

struct IRpcProxyBuffer {
    struct IRpcProxyBufferVtbl *lpVtbl;
};

typedef struct IMoniker *LPMONIKER;

typedef struct tagRemSTGMEDIUM tagRemSTGMEDIUM, *PtagRemSTGMEDIUM;

typedef struct tagRemSTGMEDIUM RemSTGMEDIUM;

struct tagRemSTGMEDIUM {
    DWORD tymed;
    DWORD dwHandleType;
    ulong pData;
    ulong pUnkForRelease;
    ulong cbData;
    byte data[1];
};

typedef struct IForegroundTransferVtbl IForegroundTransferVtbl, *PIForegroundTransferVtbl;

typedef struct IForegroundTransfer IForegroundTransfer, *PIForegroundTransfer;

struct IForegroundTransferVtbl {
    HRESULT (*QueryInterface)(struct IForegroundTransfer *, IID *, void **);
    ULONG (*AddRef)(struct IForegroundTransfer *);
    ULONG (*Release)(struct IForegroundTransfer *);
    HRESULT (*AllowForegroundTransfer)(struct IForegroundTransfer *, void *);
};

struct IForegroundTransfer {
    struct IForegroundTransferVtbl *lpVtbl;
};

typedef struct IRootStorage IRootStorage, *PIRootStorage;

typedef struct IRootStorageVtbl IRootStorageVtbl, *PIRootStorageVtbl;

struct IRootStorageVtbl {
    HRESULT (*QueryInterface)(struct IRootStorage *, IID *, void **);
    ULONG (*AddRef)(struct IRootStorage *);
    ULONG (*Release)(struct IRootStorage *);
    HRESULT (*SwitchToFile)(struct IRootStorage *, LPOLESTR);
};

struct IRootStorage {
    struct IRootStorageVtbl *lpVtbl;
};

typedef enum tagSTGTY {
    STGTY_STORAGE=1,
    STGTY_STREAM=2,
    STGTY_LOCKBYTES=3,
    STGTY_PROPERTY=4
} tagSTGTY;

typedef struct AsyncIAdviseSinkVtbl AsyncIAdviseSinkVtbl, *PAsyncIAdviseSinkVtbl;

typedef struct AsyncIAdviseSink AsyncIAdviseSink, *PAsyncIAdviseSink;

struct AsyncIAdviseSinkVtbl {
    HRESULT (*QueryInterface)(struct AsyncIAdviseSink *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIAdviseSink *);
    ULONG (*Release)(struct AsyncIAdviseSink *);
    void (*Begin_OnDataChange)(struct AsyncIAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (*Finish_OnDataChange)(struct AsyncIAdviseSink *);
    void (*Begin_OnViewChange)(struct AsyncIAdviseSink *, DWORD, LONG);
    void (*Finish_OnViewChange)(struct AsyncIAdviseSink *);
    void (*Begin_OnRename)(struct AsyncIAdviseSink *, struct IMoniker *);
    void (*Finish_OnRename)(struct AsyncIAdviseSink *);
    void (*Begin_OnSave)(struct AsyncIAdviseSink *);
    void (*Finish_OnSave)(struct AsyncIAdviseSink *);
    void (*Begin_OnClose)(struct AsyncIAdviseSink *);
    void (*Finish_OnClose)(struct AsyncIAdviseSink *);
};

struct AsyncIAdviseSink {
    struct AsyncIAdviseSinkVtbl *lpVtbl;
};

typedef enum tagPENDINGMSG {
    PENDINGMSG_CANCELCALL=0,
    PENDINGMSG_WAITNOPROCESS=1,
    PENDINGMSG_WAITDEFPROCESS=2
} tagPENDINGMSG;

typedef struct IRpcSyntaxNegotiate IRpcSyntaxNegotiate, *PIRpcSyntaxNegotiate;

typedef struct IRpcSyntaxNegotiateVtbl IRpcSyntaxNegotiateVtbl, *PIRpcSyntaxNegotiateVtbl;

struct IRpcSyntaxNegotiate {
    struct IRpcSyntaxNegotiateVtbl *lpVtbl;
};

struct IRpcSyntaxNegotiateVtbl {
    HRESULT (*QueryInterface)(struct IRpcSyntaxNegotiate *, IID *, void **);
    ULONG (*AddRef)(struct IRpcSyntaxNegotiate *);
    ULONG (*Release)(struct IRpcSyntaxNegotiate *);
    HRESULT (*NegotiateSyntax)(struct IRpcSyntaxNegotiate *, RPCOLEMESSAGE *);
};

typedef struct tagMULTI_QI MULTI_QI;

typedef struct IPersist *LPPERSIST;

typedef struct ISequentialStream ISequentialStream, *PISequentialStream;

typedef struct ISequentialStreamVtbl ISequentialStreamVtbl, *PISequentialStreamVtbl;

struct ISequentialStream {
    struct ISequentialStreamVtbl *lpVtbl;
};

struct ISequentialStreamVtbl {
    HRESULT (*QueryInterface)(struct ISequentialStream *, IID *, void **);
    ULONG (*AddRef)(struct ISequentialStream *);
    ULONG (*Release)(struct ISequentialStream *);
    HRESULT (*Read)(struct ISequentialStream *, void *, ULONG, ULONG *);
    HRESULT (*Write)(struct ISequentialStream *, void *, ULONG, ULONG *);
};

typedef struct tagSOLE_AUTHENTICATION_LIST SOLE_AUTHENTICATION_LIST;

typedef struct IWaitMultiple IWaitMultiple, *PIWaitMultiple;

typedef struct IWaitMultipleVtbl IWaitMultipleVtbl, *PIWaitMultipleVtbl;

struct IWaitMultipleVtbl {
    HRESULT (*QueryInterface)(struct IWaitMultiple *, IID *, void **);
    ULONG (*AddRef)(struct IWaitMultiple *);
    ULONG (*Release)(struct IWaitMultiple *);
    HRESULT (*WaitMultiple)(struct IWaitMultiple *, DWORD, struct ISynchronize **);
    HRESULT (*AddSynchronize)(struct IWaitMultiple *, struct ISynchronize *);
};

struct IWaitMultiple {
    struct IWaitMultipleVtbl *lpVtbl;
};

typedef struct IMultiQI IMultiQI, *PIMultiQI;

typedef struct IMultiQIVtbl IMultiQIVtbl, *PIMultiQIVtbl;

struct IMultiQI {
    struct IMultiQIVtbl *lpVtbl;
};

struct IMultiQIVtbl {
    HRESULT (*QueryInterface)(struct IMultiQI *, IID *, void **);
    ULONG (*AddRef)(struct IMultiQI *);
    ULONG (*Release)(struct IMultiQI *);
    HRESULT (*QueryMultipleInterfaces)(struct IMultiQI *, ULONG, MULTI_QI *);
};

typedef struct IEnumUnknownVtbl IEnumUnknownVtbl, *PIEnumUnknownVtbl;

typedef struct IEnumUnknown IEnumUnknown, *PIEnumUnknown;

struct IEnumUnknown {
    struct IEnumUnknownVtbl *lpVtbl;
};

struct IEnumUnknownVtbl {
    HRESULT (*QueryInterface)(struct IEnumUnknown *, IID *, void **);
    ULONG (*AddRef)(struct IEnumUnknown *);
    ULONG (*Release)(struct IEnumUnknown *);
    HRESULT (*Next)(struct IEnumUnknown *, ULONG, struct IUnknown **, ULONG *);
    HRESULT (*Skip)(struct IEnumUnknown *, ULONG);
    HRESULT (*Reset)(struct IEnumUnknown *);
    HRESULT (*Clone)(struct IEnumUnknown *, struct IEnumUnknown **);
};

typedef struct ISynchronizeEvent ISynchronizeEvent, *PISynchronizeEvent;

typedef struct ISynchronizeEventVtbl ISynchronizeEventVtbl, *PISynchronizeEventVtbl;

struct ISynchronizeEvent {
    struct ISynchronizeEventVtbl *lpVtbl;
};

struct ISynchronizeEventVtbl {
    HRESULT (*QueryInterface)(struct ISynchronizeEvent *, IID *, void **);
    ULONG (*AddRef)(struct ISynchronizeEvent *);
    ULONG (*Release)(struct ISynchronizeEvent *);
    HRESULT (*GetHandle)(struct ISynchronizeEvent *, HANDLE *);
    HRESULT (*SetEventHandle)(struct ISynchronizeEvent *, HANDLE *);
};

typedef struct IComThreadingInfo IComThreadingInfo, *PIComThreadingInfo;

typedef struct IComThreadingInfoVtbl IComThreadingInfoVtbl, *PIComThreadingInfoVtbl;

struct IComThreadingInfoVtbl {
    HRESULT (*QueryInterface)(struct IComThreadingInfo *, IID *, void **);
    ULONG (*AddRef)(struct IComThreadingInfo *);
    ULONG (*Release)(struct IComThreadingInfo *);
    HRESULT (*GetCurrentApartmentType)(struct IComThreadingInfo *, APTTYPE *);
    HRESULT (*GetCurrentThreadType)(struct IComThreadingInfo *, THDTYPE *);
    HRESULT (*GetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
    HRESULT (*SetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
};

struct IComThreadingInfo {
    struct IComThreadingInfoVtbl *lpVtbl;
};

typedef struct IMarshal IMarshal, *PIMarshal;

typedef struct IMarshal *LPMARSHAL;

typedef struct IMarshalVtbl IMarshalVtbl, *PIMarshalVtbl;

struct IMarshal {
    struct IMarshalVtbl *lpVtbl;
};

struct IMarshalVtbl {
    HRESULT (*QueryInterface)(struct IMarshal *, IID *, void **);
    ULONG (*AddRef)(struct IMarshal *);
    ULONG (*Release)(struct IMarshal *);
    HRESULT (*GetUnmarshalClass)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (*GetMarshalSizeMax)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (*MarshalInterface)(struct IMarshal *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (*UnmarshalInterface)(struct IMarshal *, struct IStream *, IID *, void **);
    HRESULT (*ReleaseMarshalData)(struct IMarshal *, struct IStream *);
    HRESULT (*DisconnectObject)(struct IMarshal *, DWORD);
};

typedef enum tagADVF {
    ADVF_NODATA=1,
    ADVF_PRIMEFIRST=2,
    ADVF_ONLYONCE=4,
    ADVFCACHE_NOHANDLER=8,
    ADVFCACHE_FORCEBUILTIN=16,
    ADVFCACHE_ONSAVE=32,
    ADVF_DATAONSTOP=64
} tagADVF;

typedef struct tagBIND_OPTS2 *LPBIND_OPTS2;

typedef RPCOLEMESSAGE *PRPCOLEMESSAGE;

typedef struct tagSOLE_AUTHENTICATION_SERVICE SOLE_AUTHENTICATION_SERVICE;

typedef SOLE_AUTHENTICATION_SERVICE *PSOLE_AUTHENTICATION_SERVICE;

typedef struct SChannelHookCallInfo SChannelHookCallInfo, *PSChannelHookCallInfo;

struct SChannelHookCallInfo {
    IID iid;
    DWORD cbSize;
    GUID uCausality;
    DWORD dwServerPid;
    DWORD iMethod;
    void *pObject;
};

typedef struct IPipeByteVtbl IPipeByteVtbl, *PIPipeByteVtbl;

typedef struct IPipeByte IPipeByte, *PIPipeByte;

struct IPipeByte {
    struct IPipeByteVtbl *lpVtbl;
};

struct IPipeByteVtbl {
    HRESULT (*QueryInterface)(struct IPipeByte *, IID *, void **);
    ULONG (*AddRef)(struct IPipeByte *);
    ULONG (*Release)(struct IPipeByte *);
    HRESULT (*Pull)(struct IPipeByte *, BYTE *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeByte *, BYTE *, ULONG);
};

typedef enum tagCALLTYPE {
    CALLTYPE_TOPLEVEL=1,
    CALLTYPE_NESTED=2,
    CALLTYPE_ASYNC=3,
    CALLTYPE_TOPLEVEL_CALLPENDING=4,
    CALLTYPE_ASYNC_CALLPENDING=5
} tagCALLTYPE;

typedef enum tagDCOM_CALL_STATE {
    DCOM_NONE=0,
    DCOM_CALL_COMPLETE=1,
    DCOM_CALL_CANCELED=2
} tagDCOM_CALL_STATE;

typedef enum tagDCOM_CALL_STATE DCOM_CALL_STATE;

typedef struct tagSOLE_AUTHENTICATION_LIST *PSOLE_AUTHENTICATION_LIST;

typedef enum tagPENDINGTYPE {
    PENDINGTYPE_TOPLEVEL=1,
    PENDINGTYPE_NESTED=2
} tagPENDINGTYPE;

typedef enum tagPENDINGTYPE PENDINGTYPE;

typedef struct ICallFactory ICallFactory, *PICallFactory;

typedef struct ICallFactoryVtbl ICallFactoryVtbl, *PICallFactoryVtbl;

struct ICallFactoryVtbl {
    HRESULT (*QueryInterface)(struct ICallFactory *, IID *, void **);
    ULONG (*AddRef)(struct ICallFactory *);
    ULONG (*Release)(struct ICallFactory *);
    HRESULT (*CreateCall)(struct ICallFactory *, IID *, struct IUnknown *, IID *, struct IUnknown **);
};

struct ICallFactory {
    struct ICallFactoryVtbl *lpVtbl;
};

typedef struct IPersistStorage *LPPERSISTSTORAGE;

typedef struct IPipeDouble IPipeDouble, *PIPipeDouble;

typedef struct IPipeDoubleVtbl IPipeDoubleVtbl, *PIPipeDoubleVtbl;

struct IPipeDouble {
    struct IPipeDoubleVtbl *lpVtbl;
};

struct IPipeDoubleVtbl {
    HRESULT (*QueryInterface)(struct IPipeDouble *, IID *, void **);
    ULONG (*AddRef)(struct IPipeDouble *);
    ULONG (*Release)(struct IPipeDouble *);
    HRESULT (*Pull)(struct IPipeDouble *, DOUBLE *, ULONG, ULONG *);
    HRESULT (*Push)(struct IPipeDouble *, DOUBLE *, ULONG);
};

typedef struct IExternalConnection *LPEXTERNALCONNECTION;

typedef enum tagLOCKTYPE {
    LOCK_WRITE=1,
    LOCK_EXCLUSIVE=2,
    LOCK_ONLYONCE=4
} tagLOCKTYPE;

typedef struct ILayoutStorageVtbl ILayoutStorageVtbl, *PILayoutStorageVtbl;

typedef struct ILayoutStorage ILayoutStorage, *PILayoutStorage;

struct ILayoutStorage {
    struct ILayoutStorageVtbl *lpVtbl;
};

struct ILayoutStorageVtbl {
    HRESULT (*QueryInterface)(struct ILayoutStorage *, IID *, void **);
    ULONG (*AddRef)(struct ILayoutStorage *);
    ULONG (*Release)(struct ILayoutStorage *);
    HRESULT (*LayoutScript)(struct ILayoutStorage *, StorageLayout *, DWORD, DWORD);
    HRESULT (*BeginMonitor)(struct ILayoutStorage *);
    HRESULT (*EndMonitor)(struct ILayoutStorage *);
    HRESULT (*ReLayoutDocfile)(struct ILayoutStorage *, OLECHAR *);
    HRESULT (*ReLayoutDocfileOnILockBytes)(struct ILayoutStorage *, struct ILockBytes *);
};

typedef struct IMalloc *LPMALLOC;

typedef struct IAdviseSink *LPADVISESINK;

typedef struct IPSFactoryBufferVtbl IPSFactoryBufferVtbl, *PIPSFactoryBufferVtbl;

typedef struct IPSFactoryBuffer IPSFactoryBuffer, *PIPSFactoryBuffer;

typedef struct IRpcStubBuffer IRpcStubBuffer, *PIRpcStubBuffer;

typedef struct IRpcStubBufferVtbl IRpcStubBufferVtbl, *PIRpcStubBufferVtbl;

struct IPSFactoryBuffer {
    struct IPSFactoryBufferVtbl *lpVtbl;
};

struct IRpcStubBuffer {
    struct IRpcStubBufferVtbl *lpVtbl;
};

struct IRpcStubBufferVtbl {
    HRESULT (*QueryInterface)(struct IRpcStubBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IRpcStubBuffer *);
    ULONG (*Release)(struct IRpcStubBuffer *);
    HRESULT (*Connect)(struct IRpcStubBuffer *, struct IUnknown *);
    void (*Disconnect)(struct IRpcStubBuffer *);
    HRESULT (*Invoke)(struct IRpcStubBuffer *, RPCOLEMESSAGE *, struct IRpcChannelBuffer *);
    IRpcStubBuffer * (*IsIIDSupported)(struct IRpcStubBuffer *, IID *);
    ULONG (*CountRefs)(struct IRpcStubBuffer *);
    HRESULT (*DebugServerQueryInterface)(struct IRpcStubBuffer *, void **);
    void (*DebugServerRelease)(struct IRpcStubBuffer *, void *);
};

struct IPSFactoryBufferVtbl {
    HRESULT (*QueryInterface)(struct IPSFactoryBuffer *, IID *, void **);
    ULONG (*AddRef)(struct IPSFactoryBuffer *);
    ULONG (*Release)(struct IPSFactoryBuffer *);
    HRESULT (*CreateProxy)(struct IPSFactoryBuffer *, struct IUnknown *, IID *, struct IRpcProxyBuffer **, void **);
    HRESULT (*CreateStub)(struct IPSFactoryBuffer *, IID *, struct IUnknown *, struct IRpcStubBuffer **);
};

typedef enum tagSERVERCALL {
    SERVERCALL_ISHANDLED=0,
    SERVERCALL_REJECTED=1,
    SERVERCALL_RETRYLATER=2
} tagSERVERCALL;

typedef enum tagSERVERCALL SERVERCALL;

typedef struct IPersistFile *LPPERSISTFILE;

typedef enum tagPENDINGMSG PENDINGMSG;

typedef struct IRunnableObject *LPRUNNABLEOBJECT;

typedef struct IRootStorage *LPROOTSTORAGE;

typedef struct tagBIND_OPTS2 BIND_OPTS2;

typedef struct ISurrogate *LPSURROGATE;

typedef struct IRunningObjectTable *LPRUNNINGOBJECTTABLE;

typedef struct IStorage *LPSTORAGE;

typedef struct IStdMarshalInfo *LPSTDMARSHALINFO;

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES EOLE_AUTHENTICATION_CAPABILITIES;

typedef struct IEnumUnknown *LPENUMUNKNOWN;

typedef struct tagINTERFACEINFO INTERFACEINFO;

typedef struct IAddrTrackingControl IAddrTrackingControl, *PIAddrTrackingControl;

typedef struct IAddrTrackingControlVtbl IAddrTrackingControlVtbl, *PIAddrTrackingControlVtbl;

struct IAddrTrackingControlVtbl {
    HRESULT (*QueryInterface)(struct IAddrTrackingControl *, IID *, void **);
    ULONG (*AddRef)(struct IAddrTrackingControl *);
    ULONG (*Release)(struct IAddrTrackingControl *);
    HRESULT (*EnableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
    HRESULT (*DisableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
};

struct IAddrTrackingControl {
    struct IAddrTrackingControlVtbl *lpVtbl;
};

typedef STGMEDIUM *LPSTGMEDIUM;

typedef enum tagMKREDUCE {
    MKRREDUCE_ALL=0,
    MKRREDUCE_THROUGHUSER=65536,
    MKRREDUCE_TOUSER=131072,
    MKRREDUCE_ONE=196608
} tagMKREDUCE;

typedef enum tagMKREDUCE MKRREDUCE;

typedef struct ITimeAndNoticeControl ITimeAndNoticeControl, *PITimeAndNoticeControl;

typedef struct ITimeAndNoticeControlVtbl ITimeAndNoticeControlVtbl, *PITimeAndNoticeControlVtbl;

struct ITimeAndNoticeControl {
    struct ITimeAndNoticeControlVtbl *lpVtbl;
};

struct ITimeAndNoticeControlVtbl {
    HRESULT (*QueryInterface)(struct ITimeAndNoticeControl *, IID *, void **);
    ULONG (*AddRef)(struct ITimeAndNoticeControl *);
    ULONG (*Release)(struct ITimeAndNoticeControl *);
    HRESULT (*SuppressChanges)(struct ITimeAndNoticeControl *, DWORD, DWORD);
};

typedef RemSNB *wireSNB;

typedef enum tagADVF ADVF;

typedef struct AsyncIMultiQIVtbl AsyncIMultiQIVtbl, *PAsyncIMultiQIVtbl;

typedef struct AsyncIMultiQI AsyncIMultiQI, *PAsyncIMultiQI;

struct AsyncIMultiQI {
    struct AsyncIMultiQIVtbl *lpVtbl;
};

struct AsyncIMultiQIVtbl {
    HRESULT (*QueryInterface)(struct AsyncIMultiQI *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIMultiQI *);
    ULONG (*Release)(struct AsyncIMultiQI *);
    HRESULT (*Begin_QueryMultipleInterfaces)(struct AsyncIMultiQI *, ULONG, MULTI_QI *);
    HRESULT (*Finish_QueryMultipleInterfaces)(struct AsyncIMultiQI *, MULTI_QI *);
};

typedef struct IEnumMoniker *LPENUMMONIKER;

typedef struct IServerSecurity IServerSecurity, *PIServerSecurity;

typedef struct IServerSecurityVtbl IServerSecurityVtbl, *PIServerSecurityVtbl;

struct IServerSecurityVtbl {
    HRESULT (*QueryInterface)(struct IServerSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IServerSecurity *);
    ULONG (*Release)(struct IServerSecurity *);
    HRESULT (*QueryBlanket)(struct IServerSecurity *, DWORD *, DWORD *, OLECHAR **, DWORD *, DWORD *, void **, DWORD *);
    HRESULT (*ImpersonateClient)(struct IServerSecurity *);
    HRESULT (*RevertToSelf)(struct IServerSecurity *);
    BOOL (*IsImpersonating)(struct IServerSecurity *);
};

struct IServerSecurity {
    struct IServerSecurityVtbl *lpVtbl;
};

typedef enum tagLOCKTYPE LOCKTYPE;

typedef struct IEnumString *LPENUMSTRING;

typedef struct IEnumSTATSTG *LPENUMSTATSTG;

typedef struct tagBIND_OPTS *LPBIND_OPTS;

typedef struct IMallocSpy *LPMALLOCSPY;

typedef userSTGMEDIUM *wireSTGMEDIUM;

typedef enum tagCALLTYPE CALLTYPE;

typedef struct IAddrTrackingControl *LPADDRTRACKINGCONTROL;

typedef enum __MIDL___MIDL_itf_objidl_0055_0001 {
    COMBND_RPCTIMEOUT=1
} __MIDL___MIDL_itf_objidl_0055_0001;

typedef struct IAddrExclusionControl *LPADDREXCLUSIONCONTROL;

typedef struct tagSOLE_AUTHENTICATION_INFO *PSOLE_AUTHENTICATION_INFO;

typedef enum tagSTGTY STGTY;

typedef enum tagBIND_FLAGS BIND_FLAGS;

typedef struct IMultiQI *LPMULTIQI;

#define COLE_DEFAULT_AUTHINFO -1

#define COLE_DEFAULT_PRINCIPAL -1

typedef struct _CONTEXT _CONTEXT, *P_CONTEXT;

struct _CONTEXT {
};

typedef enum _EXCEPTION_DISPOSITION {
    ExceptionContinueExecution=0,
    ExceptionContinueSearch=1,
    ExceptionNestedException=2,
    ExceptionCollidedUnwind=3
} _EXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_RECORD _EXCEPTION_RECORD, *P_EXCEPTION_RECORD;

struct _EXCEPTION_RECORD {
};

typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_POINTERS _EXCEPTION_POINTERS, *P_EXCEPTION_POINTERS;


/* WARNING! conflicting data type names: /deps/winnt.h/_EXCEPTION_RECORD - /deps/excpt.h/_EXCEPTION_RECORD */

typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;

typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;


/* WARNING! conflicting data type names: /deps/winnt.h/_CONTEXT - /deps/excpt.h/_CONTEXT */

typedef struct _CONTEXT CONTEXT;

typedef CONTEXT *PCONTEXT;

struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
};

#define EXCEPTION_EXECUTE_HANDLER 1

#define EXCEPTION_CONTINUE_SEARCH 0

#define EXCEPTION_CONTINUE_EXECUTION -1

typedef struct ID3DXRenderToEnvMap ID3DXRenderToEnvMap, *PID3DXRenderToEnvMap;

typedef struct ID3DXRenderToEnvMapVtbl ID3DXRenderToEnvMapVtbl, *PID3DXRenderToEnvMapVtbl;

typedef struct IDirect3DVolume8 IDirect3DVolume8, *PIDirect3DVolume8;

typedef struct IDirect3DDevice8 IDirect3DDevice8, *PIDirect3DDevice8;

typedef struct IDirect3DDevice8 *LPDIRECT3DDEVICE8;

typedef struct _D3DXRTE_DESC _D3DXRTE_DESC, *P_D3DXRTE_DESC;

typedef struct _D3DXRTE_DESC D3DXRTE_DESC;

typedef struct IDirect3DCubeTexture8 IDirect3DCubeTexture8, *PIDirect3DCubeTexture8;

typedef struct IDirect3DCubeTexture8 *LPDIRECT3DCUBETEXTURE8;

typedef struct IDirect3DTexture8 IDirect3DTexture8, *PIDirect3DTexture8;

typedef struct IDirect3DTexture8 *LPDIRECT3DTEXTURE8;

typedef enum _D3DCUBEMAP_FACES {
    D3DCUBEMAP_FACE_POSITIVE_X=0,
    D3DCUBEMAP_FACE_NEGATIVE_X=1,
    D3DCUBEMAP_FACE_POSITIVE_Y=2,
    D3DCUBEMAP_FACE_NEGATIVE_Y=3,
    D3DCUBEMAP_FACE_POSITIVE_Z=4,
    D3DCUBEMAP_FACE_NEGATIVE_Z=5,
    D3DCUBEMAP_FACE_FORCE_DWORD=2147483647
} _D3DCUBEMAP_FACES;

typedef enum _D3DCUBEMAP_FACES D3DCUBEMAP_FACES;

typedef struct IDirect3DVolume8Vtbl IDirect3DVolume8Vtbl, *PIDirect3DVolume8Vtbl;

typedef struct _D3DVOLUME_DESC _D3DVOLUME_DESC, *P_D3DVOLUME_DESC;

typedef struct _D3DVOLUME_DESC D3DVOLUME_DESC;

typedef struct _D3DLOCKED_BOX _D3DLOCKED_BOX, *P_D3DLOCKED_BOX;

typedef struct _D3DLOCKED_BOX D3DLOCKED_BOX;

typedef struct _D3DBOX _D3DBOX, *P_D3DBOX;

typedef struct _D3DBOX D3DBOX;

typedef struct IDirect3DDevice8Vtbl IDirect3DDevice8Vtbl, *PIDirect3DDevice8Vtbl;

typedef struct IDirect3D8 IDirect3D8, *PIDirect3D8;

typedef struct _D3DDISPLAYMODE _D3DDISPLAYMODE, *P_D3DDISPLAYMODE;

typedef struct _D3DDISPLAYMODE D3DDISPLAYMODE;

typedef struct _D3DDEVICE_CREATION_PARAMETERS _D3DDEVICE_CREATION_PARAMETERS, *P_D3DDEVICE_CREATION_PARAMETERS;

typedef struct _D3DDEVICE_CREATION_PARAMETERS D3DDEVICE_CREATION_PARAMETERS;

typedef struct IDirect3DSurface8 IDirect3DSurface8, *PIDirect3DSurface8;

typedef struct _D3DPRESENT_PARAMETERS_ _D3DPRESENT_PARAMETERS_, *P_D3DPRESENT_PARAMETERS_;

typedef struct _D3DPRESENT_PARAMETERS_ D3DPRESENT_PARAMETERS;

typedef struct IDirect3DSwapChain8 IDirect3DSwapChain8, *PIDirect3DSwapChain8;

typedef struct _RGNDATA _RGNDATA, *P_RGNDATA;

typedef struct _RGNDATA RGNDATA;

typedef enum _D3DBACKBUFFER_TYPE {
    D3DBACKBUFFER_TYPE_MONO=0,
    D3DBACKBUFFER_TYPE_LEFT=1,
    D3DBACKBUFFER_TYPE_RIGHT=2,
    D3DBACKBUFFER_TYPE_FORCE_DWORD=2147483647
} _D3DBACKBUFFER_TYPE;

typedef enum _D3DBACKBUFFER_TYPE D3DBACKBUFFER_TYPE;

typedef struct _D3DRASTER_STATUS _D3DRASTER_STATUS, *P_D3DRASTER_STATUS;

typedef struct _D3DRASTER_STATUS D3DRASTER_STATUS;

typedef struct _D3DGAMMARAMP _D3DGAMMARAMP, *P_D3DGAMMARAMP;

typedef struct _D3DGAMMARAMP D3DGAMMARAMP;

typedef enum _D3DPOOL {
    D3DPOOL_DEFAULT=0,
    D3DPOOL_MANAGED=1,
    D3DPOOL_SYSTEMMEM=2,
    D3DPOOL_FORCE_DWORD=2147483647
} _D3DPOOL;

typedef enum _D3DPOOL D3DPOOL;

typedef struct IDirect3DVolumeTexture8 IDirect3DVolumeTexture8, *PIDirect3DVolumeTexture8;

typedef struct IDirect3DVertexBuffer8 IDirect3DVertexBuffer8, *PIDirect3DVertexBuffer8;

typedef struct IDirect3DIndexBuffer8 IDirect3DIndexBuffer8, *PIDirect3DIndexBuffer8;

typedef enum _D3DMULTISAMPLE_TYPE {
    D3DMULTISAMPLE_NONE=0,
    D3DMULTISAMPLE_2_SAMPLES=2,
    D3DMULTISAMPLE_3_SAMPLES=3,
    D3DMULTISAMPLE_4_SAMPLES=4,
    D3DMULTISAMPLE_5_SAMPLES=5,
    D3DMULTISAMPLE_6_SAMPLES=6,
    D3DMULTISAMPLE_7_SAMPLES=7,
    D3DMULTISAMPLE_8_SAMPLES=8,
    D3DMULTISAMPLE_9_SAMPLES=9,
    D3DMULTISAMPLE_10_SAMPLES=10,
    D3DMULTISAMPLE_11_SAMPLES=11,
    D3DMULTISAMPLE_12_SAMPLES=12,
    D3DMULTISAMPLE_13_SAMPLES=13,
    D3DMULTISAMPLE_14_SAMPLES=14,
    D3DMULTISAMPLE_15_SAMPLES=15,
    D3DMULTISAMPLE_16_SAMPLES=16,
    D3DMULTISAMPLE_FORCE_DWORD=2147483647
} _D3DMULTISAMPLE_TYPE;

typedef enum _D3DMULTISAMPLE_TYPE D3DMULTISAMPLE_TYPE;

typedef struct IDirect3DBaseTexture8 IDirect3DBaseTexture8, *PIDirect3DBaseTexture8;

typedef struct _D3DRECT _D3DRECT, *P_D3DRECT;

typedef struct _D3DRECT D3DRECT;

typedef enum _D3DTRANSFORMSTATETYPE {
    D3DTS_VIEW=2,
    D3DTS_PROJECTION=3,
    D3DTS_TEXTURE0=16,
    D3DTS_TEXTURE1=17,
    D3DTS_TEXTURE2=18,
    D3DTS_TEXTURE3=19,
    D3DTS_TEXTURE4=20,
    D3DTS_TEXTURE5=21,
    D3DTS_TEXTURE6=22,
    D3DTS_TEXTURE7=23,
    D3DTS_FORCE_DWORD=2147483647
} _D3DTRANSFORMSTATETYPE;

typedef enum _D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATETYPE;

typedef struct _D3DVIEWPORT8 _D3DVIEWPORT8, *P_D3DVIEWPORT8;

typedef struct _D3DVIEWPORT8 D3DVIEWPORT8;

typedef struct _D3DMATERIAL8 _D3DMATERIAL8, *P_D3DMATERIAL8;

typedef struct _D3DMATERIAL8 D3DMATERIAL8;

typedef struct _D3DLIGHT8 _D3DLIGHT8, *P_D3DLIGHT8;

typedef struct _D3DLIGHT8 D3DLIGHT8;

typedef enum _D3DRENDERSTATETYPE {
    D3DRS_ZENABLE=7,
    D3DRS_FILLMODE=8,
    D3DRS_SHADEMODE=9,
    D3DRS_LINEPATTERN=10,
    D3DRS_ZWRITEENABLE=14,
    D3DRS_ALPHATESTENABLE=15,
    D3DRS_LASTPIXEL=16,
    D3DRS_SRCBLEND=19,
    D3DRS_DESTBLEND=20,
    D3DRS_CULLMODE=22,
    D3DRS_ZFUNC=23,
    D3DRS_ALPHAREF=24,
    D3DRS_ALPHAFUNC=25,
    D3DRS_DITHERENABLE=26,
    D3DRS_ALPHABLENDENABLE=27,
    D3DRS_FOGENABLE=28,
    D3DRS_SPECULARENABLE=29,
    D3DRS_ZVISIBLE=30,
    D3DRS_FOGCOLOR=34,
    D3DRS_FOGTABLEMODE=35,
    D3DRS_FOGSTART=36,
    D3DRS_FOGEND=37,
    D3DRS_FOGDENSITY=38,
    D3DRS_EDGEANTIALIAS=40,
    D3DRS_ZBIAS=47,
    D3DRS_RANGEFOGENABLE=48,
    D3DRS_STENCILENABLE=52,
    D3DRS_STENCILFAIL=53,
    D3DRS_STENCILZFAIL=54,
    D3DRS_STENCILPASS=55,
    D3DRS_STENCILFUNC=56,
    D3DRS_STENCILREF=57,
    D3DRS_STENCILMASK=58,
    D3DRS_STENCILWRITEMASK=59,
    D3DRS_TEXTUREFACTOR=60,
    D3DRS_WRAP0=128,
    D3DRS_WRAP1=129,
    D3DRS_WRAP2=130,
    D3DRS_WRAP3=131,
    D3DRS_WRAP4=132,
    D3DRS_WRAP5=133,
    D3DRS_WRAP6=134,
    D3DRS_WRAP7=135,
    D3DRS_CLIPPING=136,
    D3DRS_LIGHTING=137,
    D3DRS_AMBIENT=139,
    D3DRS_FOGVERTEXMODE=140,
    D3DRS_COLORVERTEX=141,
    D3DRS_LOCALVIEWER=142,
    D3DRS_NORMALIZENORMALS=143,
    D3DRS_DIFFUSEMATERIALSOURCE=145,
    D3DRS_SPECULARMATERIALSOURCE=146,
    D3DRS_AMBIENTMATERIALSOURCE=147,
    D3DRS_EMISSIVEMATERIALSOURCE=148,
    D3DRS_VERTEXBLEND=151,
    D3DRS_CLIPPLANEENABLE=152,
    D3DRS_SOFTWAREVERTEXPROCESSING=153,
    D3DRS_POINTSIZE=154,
    D3DRS_POINTSIZE_MIN=155,
    D3DRS_POINTSPRITEENABLE=156,
    D3DRS_POINTSCALEENABLE=157,
    D3DRS_POINTSCALE_A=158,
    D3DRS_POINTSCALE_B=159,
    D3DRS_POINTSCALE_C=160,
    D3DRS_MULTISAMPLEANTIALIAS=161,
    D3DRS_MULTISAMPLEMASK=162,
    D3DRS_PATCHEDGESTYLE=163,
    D3DRS_PATCHSEGMENTS=164,
    D3DRS_DEBUGMONITORTOKEN=165,
    D3DRS_POINTSIZE_MAX=166,
    D3DRS_INDEXEDVERTEXBLENDENABLE=167,
    D3DRS_COLORWRITEENABLE=168,
    D3DRS_TWEENFACTOR=170,
    D3DRS_BLENDOP=171,
    D3DRS_FORCE_DWORD=2147483647
} _D3DRENDERSTATETYPE;

typedef enum _D3DRENDERSTATETYPE D3DRENDERSTATETYPE;

typedef enum _D3DSTATEBLOCKTYPE {
    D3DSBT_ALL=1,
    D3DSBT_PIXELSTATE=2,
    D3DSBT_VERTEXSTATE=3,
    D3DSBT_FORCE_DWORD=2147483647
} _D3DSTATEBLOCKTYPE;

typedef enum _D3DSTATEBLOCKTYPE D3DSTATEBLOCKTYPE;

typedef struct _D3DCLIPSTATUS8 _D3DCLIPSTATUS8, *P_D3DCLIPSTATUS8;

typedef struct _D3DCLIPSTATUS8 D3DCLIPSTATUS8;

typedef enum _D3DTEXTURESTAGESTATETYPE {
    D3DTSS_COLOROP=1,
    D3DTSS_COLORARG1=2,
    D3DTSS_COLORARG2=3,
    D3DTSS_ALPHAOP=4,
    D3DTSS_ALPHAARG1=5,
    D3DTSS_ALPHAARG2=6,
    D3DTSS_BUMPENVMAT00=7,
    D3DTSS_BUMPENVMAT01=8,
    D3DTSS_BUMPENVMAT10=9,
    D3DTSS_BUMPENVMAT11=10,
    D3DTSS_TEXCOORDINDEX=11,
    D3DTSS_ADDRESSU=13,
    D3DTSS_ADDRESSV=14,
    D3DTSS_BORDERCOLOR=15,
    D3DTSS_MAGFILTER=16,
    D3DTSS_MINFILTER=17,
    D3DTSS_MIPFILTER=18,
    D3DTSS_MIPMAPLODBIAS=19,
    D3DTSS_MAXMIPLEVEL=20,
    D3DTSS_MAXANISOTROPY=21,
    D3DTSS_BUMPENVLSCALE=22,
    D3DTSS_BUMPENVLOFFSET=23,
    D3DTSS_TEXTURETRANSFORMFLAGS=24,
    D3DTSS_ADDRESSW=25,
    D3DTSS_COLORARG0=26,
    D3DTSS_ALPHAARG0=27,
    D3DTSS_RESULTARG=28,
    D3DTSS_FORCE_DWORD=2147483647
} _D3DTEXTURESTAGESTATETYPE;

typedef enum _D3DTEXTURESTAGESTATETYPE D3DTEXTURESTAGESTATETYPE;

typedef enum _D3DPRIMITIVETYPE {
    D3DPT_POINTLIST=1,
    D3DPT_LINELIST=2,
    D3DPT_LINESTRIP=3,
    D3DPT_TRIANGLELIST=4,
    D3DPT_TRIANGLESTRIP=5,
    D3DPT_TRIANGLEFAN=6,
    D3DPT_FORCE_DWORD=2147483647
} _D3DPRIMITIVETYPE;

typedef enum _D3DPRIMITIVETYPE D3DPRIMITIVETYPE;

typedef struct _D3DRECTPATCH_INFO _D3DRECTPATCH_INFO, *P_D3DRECTPATCH_INFO;

typedef struct _D3DRECTPATCH_INFO D3DRECTPATCH_INFO;

typedef struct _D3DTRIPATCH_INFO _D3DTRIPATCH_INFO, *P_D3DTRIPATCH_INFO;

typedef struct _D3DTRIPATCH_INFO D3DTRIPATCH_INFO;

typedef struct IDirect3DCubeTexture8Vtbl IDirect3DCubeTexture8Vtbl, *PIDirect3DCubeTexture8Vtbl;

typedef enum _D3DRESOURCETYPE {
    D3DRTYPE_SURFACE=1,
    D3DRTYPE_VOLUME=2,
    D3DRTYPE_TEXTURE=3,
    D3DRTYPE_VOLUMETEXTURE=4,
    D3DRTYPE_CUBETEXTURE=5,
    D3DRTYPE_VERTEXBUFFER=6,
    D3DRTYPE_INDEXBUFFER=7,
    D3DRTYPE_FORCE_DWORD=2147483647
} _D3DRESOURCETYPE;

typedef enum _D3DRESOURCETYPE D3DRESOURCETYPE;

typedef struct _D3DSURFACE_DESC _D3DSURFACE_DESC, *P_D3DSURFACE_DESC;

typedef struct _D3DSURFACE_DESC D3DSURFACE_DESC;

typedef struct _D3DLOCKED_RECT _D3DLOCKED_RECT, *P_D3DLOCKED_RECT;

typedef struct _D3DLOCKED_RECT D3DLOCKED_RECT;

typedef struct IDirect3DTexture8Vtbl IDirect3DTexture8Vtbl, *PIDirect3DTexture8Vtbl;

typedef int INT;

typedef struct IDirect3D8Vtbl IDirect3D8Vtbl, *PIDirect3D8Vtbl;

typedef struct _D3DADAPTER_IDENTIFIER8 _D3DADAPTER_IDENTIFIER8, *P_D3DADAPTER_IDENTIFIER8;

typedef struct _D3DADAPTER_IDENTIFIER8 D3DADAPTER_IDENTIFIER8;

typedef struct HMONITOR__ HMONITOR__, *PHMONITOR__;

typedef struct HMONITOR__ *HMONITOR;

typedef struct IDirect3DSurface8Vtbl IDirect3DSurface8Vtbl, *PIDirect3DSurface8Vtbl;

typedef enum _D3DSWAPEFFECT {
    D3DSWAPEFFECT_DISCARD=1,
    D3DSWAPEFFECT_FLIP=2,
    D3DSWAPEFFECT_COPY=3,
    D3DSWAPEFFECT_COPY_VSYNC=4,
    D3DSWAPEFFECT_FORCE_DWORD=2147483647
} _D3DSWAPEFFECT;

typedef enum _D3DSWAPEFFECT D3DSWAPEFFECT;

typedef struct IDirect3DSwapChain8Vtbl IDirect3DSwapChain8Vtbl, *PIDirect3DSwapChain8Vtbl;

typedef struct _RGNDATAHEADER _RGNDATAHEADER, *P_RGNDATAHEADER;

typedef struct _RGNDATAHEADER RGNDATAHEADER;

typedef struct IDirect3DVolumeTexture8Vtbl IDirect3DVolumeTexture8Vtbl, *PIDirect3DVolumeTexture8Vtbl;

typedef struct IDirect3DVertexBuffer8Vtbl IDirect3DVertexBuffer8Vtbl, *PIDirect3DVertexBuffer8Vtbl;

typedef struct _D3DVERTEXBUFFER_DESC _D3DVERTEXBUFFER_DESC, *P_D3DVERTEXBUFFER_DESC;

typedef struct _D3DVERTEXBUFFER_DESC D3DVERTEXBUFFER_DESC;

typedef struct IDirect3DIndexBuffer8Vtbl IDirect3DIndexBuffer8Vtbl, *PIDirect3DIndexBuffer8Vtbl;

typedef struct _D3DINDEXBUFFER_DESC _D3DINDEXBUFFER_DESC, *P_D3DINDEXBUFFER_DESC;

typedef struct _D3DINDEXBUFFER_DESC D3DINDEXBUFFER_DESC;

typedef struct IDirect3DBaseTexture8Vtbl IDirect3DBaseTexture8Vtbl, *PIDirect3DBaseTexture8Vtbl;

typedef struct _D3DCOLORVALUE _D3DCOLORVALUE, *P_D3DCOLORVALUE;

typedef struct _D3DCOLORVALUE D3DCOLORVALUE;

typedef enum _D3DLIGHTTYPE {
    D3DLIGHT_POINT=1,
    D3DLIGHT_SPOT=2,
    D3DLIGHT_DIRECTIONAL=3,
    D3DLIGHT_FORCE_DWORD=2147483647
} _D3DLIGHTTYPE;

typedef enum _D3DLIGHTTYPE D3DLIGHTTYPE;

typedef struct _D3DVECTOR D3DVECTOR;

typedef enum _D3DBASISTYPE {
    D3DBASIS_BEZIER=0,
    D3DBASIS_BSPLINE=1,
    D3DBASIS_INTERPOLATE=2,
    D3DBASIS_FORCE_DWORD=2147483647
} _D3DBASISTYPE;

typedef enum _D3DBASISTYPE D3DBASISTYPE;

typedef enum _D3DORDERTYPE {
    D3DORDER_LINEAR=1,
    D3DORDER_CUBIC=3,
    D3DORDER_QUINTIC=5,
    D3DORDER_FORCE_DWORD=2147483647
} _D3DORDERTYPE;

typedef enum _D3DORDERTYPE D3DORDERTYPE;

struct ID3DXRenderToEnvMap {
    struct ID3DXRenderToEnvMapVtbl *lpVtbl;
};

struct _D3DINDEXBUFFER_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
};

struct _D3DXRTE_DESC {
    UINT Size;
    D3DFORMAT Format;
    BOOL DepthStencil;
    D3DFORMAT DepthStencilFormat;
};

struct _D3DGAMMARAMP {
    WORD red[256];
    WORD green[256];
    WORD blue[256];
};

struct IDirect3DVolume8 {
    struct IDirect3DVolume8Vtbl *lpVtbl;
};

struct IDirect3DVolumeTexture8 {
    struct IDirect3DVolumeTexture8Vtbl *lpVtbl;
};

struct _RGNDATAHEADER {
    DWORD dwSize;
    DWORD iType;
    DWORD nCount;
    DWORD nRgnSize;
    RECT rcBound;
};

struct IDirect3DTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DTexture8 *);
    ULONG (*Release)(struct IDirect3DTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DTexture8 *);
    void (*PreLoad)(struct IDirect3DTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DTexture8 *, UINT, D3DSURFACE_DESC *);
    HRESULT (*GetSurfaceLevel)(struct IDirect3DTexture8 *, UINT, struct IDirect3DSurface8 **);
    HRESULT (*LockRect)(struct IDirect3DTexture8 *, UINT, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DTexture8 *, UINT);
    HRESULT (*AddDirtyRect)(struct IDirect3DTexture8 *, RECT *);
};

struct _D3DRECTPATCH_INFO {
    UINT StartVertexOffsetWidth;
    UINT StartVertexOffsetHeight;
    UINT Width;
    UINT Height;
    UINT Stride;
    D3DBASISTYPE Basis;
    D3DORDERTYPE Order;
};

struct IDirect3DDevice8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DDevice8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DDevice8 *);
    ULONG (*Release)(struct IDirect3DDevice8 *);
    HRESULT (*TestCooperativeLevel)(struct IDirect3DDevice8 *);
    UINT (*GetAvailableTextureMem)(struct IDirect3DDevice8 *);
    HRESULT (*ResourceManagerDiscardBytes)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetDirect3D)(struct IDirect3DDevice8 *, struct IDirect3D8 **);
    HRESULT (*GetDeviceCaps)(struct IDirect3DDevice8 *, D3DCAPS8 *);
    HRESULT (*GetDisplayMode)(struct IDirect3DDevice8 *, D3DDISPLAYMODE *);
    HRESULT (*GetCreationParameters)(struct IDirect3DDevice8 *, D3DDEVICE_CREATION_PARAMETERS *);
    HRESULT (*SetCursorProperties)(struct IDirect3DDevice8 *, UINT, UINT, struct IDirect3DSurface8 *);
    void (*SetCursorPosition)(struct IDirect3DDevice8 *, UINT, UINT, DWORD);
    BOOL (*ShowCursor)(struct IDirect3DDevice8 *, BOOL);
    HRESULT (*CreateAdditionalSwapChain)(struct IDirect3DDevice8 *, D3DPRESENT_PARAMETERS *, struct IDirect3DSwapChain8 **);
    HRESULT (*Reset)(struct IDirect3DDevice8 *, D3DPRESENT_PARAMETERS *);
    HRESULT (*Present)(struct IDirect3DDevice8 *, RECT *, RECT *, HWND, RGNDATA *);
    HRESULT (*GetBackBuffer)(struct IDirect3DDevice8 *, UINT, D3DBACKBUFFER_TYPE, struct IDirect3DSurface8 **);
    HRESULT (*GetRasterStatus)(struct IDirect3DDevice8 *, D3DRASTER_STATUS *);
    void (*SetGammaRamp)(struct IDirect3DDevice8 *, DWORD, D3DGAMMARAMP *);
    void (*GetGammaRamp)(struct IDirect3DDevice8 *, D3DGAMMARAMP *);
    HRESULT (*CreateTexture)(struct IDirect3DDevice8 *, UINT, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DTexture8 **);
    HRESULT (*CreateVolumeTexture)(struct IDirect3DDevice8 *, UINT, UINT, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DVolumeTexture8 **);
    HRESULT (*CreateCubeTexture)(struct IDirect3DDevice8 *, UINT, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DCubeTexture8 **);
    HRESULT (*CreateVertexBuffer)(struct IDirect3DDevice8 *, UINT, DWORD, DWORD, D3DPOOL, struct IDirect3DVertexBuffer8 **);
    HRESULT (*CreateIndexBuffer)(struct IDirect3DDevice8 *, UINT, DWORD, D3DFORMAT, D3DPOOL, struct IDirect3DIndexBuffer8 **);
    HRESULT (*CreateRenderTarget)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, D3DMULTISAMPLE_TYPE, BOOL, struct IDirect3DSurface8 **);
    HRESULT (*CreateDepthStencilSurface)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, D3DMULTISAMPLE_TYPE, struct IDirect3DSurface8 **);
    HRESULT (*CreateImageSurface)(struct IDirect3DDevice8 *, UINT, UINT, D3DFORMAT, struct IDirect3DSurface8 **);
    HRESULT (*CopyRects)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *, RECT *, UINT, struct IDirect3DSurface8 *, POINT *);
    HRESULT (*UpdateTexture)(struct IDirect3DDevice8 *, struct IDirect3DBaseTexture8 *, struct IDirect3DBaseTexture8 *);
    HRESULT (*GetFrontBuffer)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *);
    HRESULT (*SetRenderTarget)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 *, struct IDirect3DSurface8 *);
    HRESULT (*GetRenderTarget)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 **);
    HRESULT (*GetDepthStencilSurface)(struct IDirect3DDevice8 *, struct IDirect3DSurface8 **);
    HRESULT (*BeginScene)(struct IDirect3DDevice8 *);
    HRESULT (*EndScene)(struct IDirect3DDevice8 *);
    HRESULT (*Clear)(struct IDirect3DDevice8 *, DWORD, D3DRECT *, DWORD, D3DCOLOR, float, DWORD);
    HRESULT (*SetTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*GetTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*MultiplyTransform)(struct IDirect3DDevice8 *, D3DTRANSFORMSTATETYPE, D3DMATRIX *);
    HRESULT (*SetViewport)(struct IDirect3DDevice8 *, D3DVIEWPORT8 *);
    HRESULT (*GetViewport)(struct IDirect3DDevice8 *, D3DVIEWPORT8 *);
    HRESULT (*SetMaterial)(struct IDirect3DDevice8 *, D3DMATERIAL8 *);
    HRESULT (*GetMaterial)(struct IDirect3DDevice8 *, D3DMATERIAL8 *);
    HRESULT (*SetLight)(struct IDirect3DDevice8 *, DWORD, D3DLIGHT8 *);
    HRESULT (*GetLight)(struct IDirect3DDevice8 *, DWORD, D3DLIGHT8 *);
    HRESULT (*LightEnable)(struct IDirect3DDevice8 *, DWORD, BOOL);
    HRESULT (*GetLightEnable)(struct IDirect3DDevice8 *, DWORD, BOOL *);
    HRESULT (*SetClipPlane)(struct IDirect3DDevice8 *, DWORD, float *);
    HRESULT (*GetClipPlane)(struct IDirect3DDevice8 *, DWORD, float *);
    HRESULT (*SetRenderState)(struct IDirect3DDevice8 *, D3DRENDERSTATETYPE, DWORD);
    HRESULT (*GetRenderState)(struct IDirect3DDevice8 *, D3DRENDERSTATETYPE, DWORD *);
    HRESULT (*BeginStateBlock)(struct IDirect3DDevice8 *);
    HRESULT (*EndStateBlock)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*ApplyStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*CaptureStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*DeleteStateBlock)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*CreateStateBlock)(struct IDirect3DDevice8 *, D3DSTATEBLOCKTYPE, DWORD *);
    HRESULT (*SetClipStatus)(struct IDirect3DDevice8 *, D3DCLIPSTATUS8 *);
    HRESULT (*GetClipStatus)(struct IDirect3DDevice8 *, D3DCLIPSTATUS8 *);
    HRESULT (*GetTexture)(struct IDirect3DDevice8 *, DWORD, struct IDirect3DBaseTexture8 **);
    HRESULT (*SetTexture)(struct IDirect3DDevice8 *, DWORD, struct IDirect3DBaseTexture8 *);
    HRESULT (*GetTextureStageState)(struct IDirect3DDevice8 *, DWORD, D3DTEXTURESTAGESTATETYPE, DWORD *);
    HRESULT (*SetTextureStageState)(struct IDirect3DDevice8 *, DWORD, D3DTEXTURESTAGESTATETYPE, DWORD);
    HRESULT (*ValidateDevice)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*GetInfo)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*SetPaletteEntries)(struct IDirect3DDevice8 *, UINT, PALETTEENTRY *);
    HRESULT (*GetPaletteEntries)(struct IDirect3DDevice8 *, UINT, PALETTEENTRY *);
    HRESULT (*SetCurrentTexturePalette)(struct IDirect3DDevice8 *, UINT);
    HRESULT (*GetCurrentTexturePalette)(struct IDirect3DDevice8 *, UINT *);
    HRESULT (*DrawPrimitive)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT);
    HRESULT (*DrawIndexedPrimitive)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT, UINT, UINT);
    HRESULT (*DrawPrimitiveUP)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, void *, UINT);
    HRESULT (*DrawIndexedPrimitiveUP)(struct IDirect3DDevice8 *, D3DPRIMITIVETYPE, UINT, UINT, UINT, void *, D3DFORMAT, void *, UINT);
    HRESULT (*ProcessVertices)(struct IDirect3DDevice8 *, UINT, UINT, UINT, struct IDirect3DVertexBuffer8 *, DWORD);
    HRESULT (*CreateVertexShader)(struct IDirect3DDevice8 *, DWORD *, DWORD *, DWORD *, DWORD);
    HRESULT (*SetVertexShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetVertexShader)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*DeleteVertexShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*SetVertexShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetVertexShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetVertexShaderDeclaration)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*GetVertexShaderFunction)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*SetStreamSource)(struct IDirect3DDevice8 *, UINT, struct IDirect3DVertexBuffer8 *, UINT);
    HRESULT (*GetStreamSource)(struct IDirect3DDevice8 *, UINT, struct IDirect3DVertexBuffer8 **, UINT *);
    HRESULT (*SetIndices)(struct IDirect3DDevice8 *, struct IDirect3DIndexBuffer8 *, UINT);
    HRESULT (*GetIndices)(struct IDirect3DDevice8 *, struct IDirect3DIndexBuffer8 **, UINT *);
    HRESULT (*CreatePixelShader)(struct IDirect3DDevice8 *, DWORD *, DWORD *);
    HRESULT (*SetPixelShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*GetPixelShader)(struct IDirect3DDevice8 *, DWORD *);
    HRESULT (*DeletePixelShader)(struct IDirect3DDevice8 *, DWORD);
    HRESULT (*SetPixelShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetPixelShaderConstant)(struct IDirect3DDevice8 *, DWORD, void *, DWORD);
    HRESULT (*GetPixelShaderFunction)(struct IDirect3DDevice8 *, DWORD, void *, DWORD *);
    HRESULT (*DrawRectPatch)(struct IDirect3DDevice8 *, UINT, float *, D3DRECTPATCH_INFO *);
    HRESULT (*DrawTriPatch)(struct IDirect3DDevice8 *, UINT, float *, D3DTRIPATCH_INFO *);
    HRESULT (*DeletePatch)(struct IDirect3DDevice8 *, UINT);
};

struct IDirect3D8 {
    struct IDirect3D8Vtbl *lpVtbl;
};

struct IDirect3DSurface8 {
    struct IDirect3DSurface8Vtbl *lpVtbl;
};

struct _D3DBOX {
    UINT Left;
    UINT Top;
    UINT Right;
    UINT Bottom;
    UINT Front;
    UINT Back;
};

struct _D3DDISPLAYMODE {
    UINT Width;
    UINT Height;
    UINT RefreshRate;
    D3DFORMAT Format;
};

struct ID3DXRenderToEnvMapVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DXRTE_DESC *);
    HRESULT (*BeginCube)(struct IDirect3DVolume8 *, LPDIRECT3DCUBETEXTURE8);
    HRESULT (*BeginSphere)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8);
    HRESULT (*BeginHemisphere)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, LPDIRECT3DTEXTURE8);
    HRESULT (*BeginParabolic)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, LPDIRECT3DTEXTURE8);
    HRESULT (*Face)(struct IDirect3DVolume8 *, D3DCUBEMAP_FACES);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

struct _D3DRASTER_STATUS {
    BOOL InVBlank;
    UINT ScanLine;
};

struct IDirect3DVolume8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVolume8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVolume8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVolume8 *, GUID *);
    HRESULT (*GetContainer)(struct IDirect3DVolume8 *, IID *, void **);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DVOLUME_DESC *);
    HRESULT (*LockBox)(struct IDirect3DVolume8 *, D3DLOCKED_BOX *, D3DBOX *, DWORD);
    HRESULT (*UnlockBox)(struct IDirect3DVolume8 *);
};

struct IDirect3DSurface8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DSurface8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DSurface8 *);
    ULONG (*Release)(struct IDirect3DSurface8 *);
    HRESULT (*GetDevice)(struct IDirect3DSurface8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DSurface8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DSurface8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DSurface8 *, GUID *);
    HRESULT (*GetContainer)(struct IDirect3DSurface8 *, IID *, void **);
    HRESULT (*GetDesc)(struct IDirect3DSurface8 *, D3DSURFACE_DESC *);
    HRESULT (*LockRect)(struct IDirect3DSurface8 *, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DSurface8 *);
};

struct _D3DCOLORVALUE {
    float r;
    float g;
    float b;
    float a;
};

struct _D3DMATERIAL8 {
    D3DCOLORVALUE Diffuse;
    D3DCOLORVALUE Ambient;
    D3DCOLORVALUE Specular;
    D3DCOLORVALUE Emissive;
    float Power;
};

struct IDirect3DIndexBuffer8 {
    struct IDirect3DIndexBuffer8Vtbl *lpVtbl;
};

struct _D3DLIGHT8 {
    D3DLIGHTTYPE Type;
    D3DCOLORVALUE Diffuse;
    D3DCOLORVALUE Specular;
    D3DCOLORVALUE Ambient;
    D3DVECTOR Position;
    D3DVECTOR Direction;
    float Range;
    float Falloff;
    float Attenuation0;
    float Attenuation1;
    float Attenuation2;
    float Theta;
    float Phi;
};

struct _D3DVIEWPORT8 {
    DWORD X;
    DWORD Y;
    DWORD Width;
    DWORD Height;
    float MinZ;
    float MaxZ;
};

struct IDirect3DDevice8 {
    struct IDirect3DDevice8Vtbl *lpVtbl;
};

struct _D3DADAPTER_IDENTIFIER8 {
    char Driver[512];
    char Description[512];
    LARGE_INTEGER DriverVersion;
    DWORD VendorId;
    DWORD DeviceId;
    DWORD SubSysId;
    DWORD Revision;
    GUID DeviceIdentifier;
    DWORD WHQLLevel;
};

struct IDirect3DBaseTexture8 {
    struct IDirect3DBaseTexture8Vtbl *lpVtbl;
};

struct IDirect3DVolumeTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolumeTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVolumeTexture8 *);
    ULONG (*Release)(struct IDirect3DVolumeTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolumeTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVolumeTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVolumeTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVolumeTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DVolumeTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DVolumeTexture8 *);
    void (*PreLoad)(struct IDirect3DVolumeTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DVolumeTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DVolumeTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DVolumeTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DVolumeTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DVolumeTexture8 *, UINT, D3DVOLUME_DESC *);
    HRESULT (*GetVolumeLevel)(struct IDirect3DVolumeTexture8 *, UINT, struct IDirect3DVolume8 **);
    HRESULT (*LockBox)(struct IDirect3DVolumeTexture8 *, UINT, D3DLOCKED_BOX *, D3DBOX *, DWORD);
    HRESULT (*UnlockBox)(struct IDirect3DVolumeTexture8 *, UINT);
    HRESULT (*AddDirtyBox)(struct IDirect3DVolumeTexture8 *, D3DBOX *);
};

struct _RGNDATA {
    RGNDATAHEADER rdh;
    char Buffer[1];
};

struct IDirect3DSwapChain8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DSwapChain8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DSwapChain8 *);
    ULONG (*Release)(struct IDirect3DSwapChain8 *);
    HRESULT (*Present)(struct IDirect3DSwapChain8 *, RECT *, RECT *, HWND, RGNDATA *);
    HRESULT (*GetBackBuffer)(struct IDirect3DSwapChain8 *, UINT, D3DBACKBUFFER_TYPE, struct IDirect3DSurface8 **);
};

struct IDirect3DVertexBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVertexBuffer8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DVertexBuffer8 *);
    ULONG (*Release)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*GetDevice)(struct IDirect3DVertexBuffer8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DVertexBuffer8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DVertexBuffer8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DVertexBuffer8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DVertexBuffer8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DVertexBuffer8 *);
    void (*PreLoad)(struct IDirect3DVertexBuffer8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*Lock)(struct IDirect3DVertexBuffer8 *, UINT, UINT, BYTE **, DWORD);
    HRESULT (*Unlock)(struct IDirect3DVertexBuffer8 *);
    HRESULT (*GetDesc)(struct IDirect3DVertexBuffer8 *, D3DVERTEXBUFFER_DESC *);
};

struct _D3DSURFACE_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    D3DMULTISAMPLE_TYPE MultiSampleType;
    UINT Width;
    UINT Height;
};

struct IDirect3DBaseTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DBaseTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DBaseTexture8 *);
    ULONG (*Release)(struct IDirect3DBaseTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DBaseTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DBaseTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DBaseTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DBaseTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DBaseTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DBaseTexture8 *);
    void (*PreLoad)(struct IDirect3DBaseTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DBaseTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DBaseTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DBaseTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DBaseTexture8 *);
};

struct _D3DLOCKED_RECT {
    INT Pitch;
    void *pBits;
};

struct _D3DTRIPATCH_INFO {
    UINT StartVertexOffset;
    UINT NumVertices;
    D3DBASISTYPE Basis;
    D3DORDERTYPE Order;
};

struct _D3DLOCKED_BOX {
    INT RowPitch;
    INT SlicePitch;
    void *pBits;
};

struct IDirect3DSwapChain8 {
    struct IDirect3DSwapChain8Vtbl *lpVtbl;
};

struct _D3DPRESENT_PARAMETERS_ {
    UINT BackBufferWidth;
    UINT BackBufferHeight;
    D3DFORMAT BackBufferFormat;
    UINT BackBufferCount;
    D3DMULTISAMPLE_TYPE MultiSampleType;
    D3DSWAPEFFECT SwapEffect;
    HWND hDeviceWindow;
    BOOL Windowed;
    BOOL EnableAutoDepthStencil;
    D3DFORMAT AutoDepthStencilFormat;
    DWORD Flags;
    UINT FullScreen_RefreshRateInHz;
    UINT FullScreen_PresentationInterval;
};

struct IDirect3DVertexBuffer8 {
    struct IDirect3DVertexBuffer8Vtbl *lpVtbl;
};

struct _D3DCLIPSTATUS8 {
    DWORD ClipUnion;
    DWORD ClipIntersection;
};

struct IDirect3D8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3D8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3D8 *);
    ULONG (*Release)(struct IDirect3D8 *);
    HRESULT (*RegisterSoftwareDevice)(struct IDirect3D8 *, void *);
    UINT (*GetAdapterCount)(struct IDirect3D8 *);
    HRESULT (*GetAdapterIdentifier)(struct IDirect3D8 *, UINT, DWORD, D3DADAPTER_IDENTIFIER8 *);
    UINT (*GetAdapterModeCount)(struct IDirect3D8 *, UINT);
    HRESULT (*EnumAdapterModes)(struct IDirect3D8 *, UINT, UINT, D3DDISPLAYMODE *);
    HRESULT (*GetAdapterDisplayMode)(struct IDirect3D8 *, UINT, D3DDISPLAYMODE *);
    HRESULT (*CheckDeviceType)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, D3DFORMAT, BOOL);
    HRESULT (*CheckDeviceFormat)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, DWORD, D3DRESOURCETYPE, D3DFORMAT);
    HRESULT (*CheckDeviceMultiSampleType)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, BOOL, D3DMULTISAMPLE_TYPE);
    HRESULT (*CheckDepthStencilMatch)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DFORMAT, D3DFORMAT, D3DFORMAT);
    HRESULT (*GetDeviceCaps)(struct IDirect3D8 *, UINT, D3DDEVTYPE, D3DCAPS8 *);
    HMONITOR (*GetAdapterMonitor)(struct IDirect3D8 *, UINT);
    HRESULT (*CreateDevice)(struct IDirect3D8 *, UINT, D3DDEVTYPE, HWND, DWORD, D3DPRESENT_PARAMETERS *, struct IDirect3DDevice8 **);
};

struct HMONITOR__ {
    int unused;
};

struct _D3DVOLUME_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    UINT Width;
    UINT Height;
    UINT Depth;
};

struct _D3DDEVICE_CREATION_PARAMETERS {
    UINT AdapterOrdinal;
    D3DDEVTYPE DeviceType;
    HWND hFocusWindow;
    DWORD BehaviorFlags;
};

struct _D3DVERTEXBUFFER_DESC {
    D3DFORMAT Format;
    D3DRESOURCETYPE Type;
    DWORD Usage;
    D3DPOOL Pool;
    UINT Size;
    DWORD FVF;
};

struct IDirect3DIndexBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DIndexBuffer8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DIndexBuffer8 *);
    ULONG (*Release)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*GetDevice)(struct IDirect3DIndexBuffer8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DIndexBuffer8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DIndexBuffer8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DIndexBuffer8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DIndexBuffer8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DIndexBuffer8 *);
    void (*PreLoad)(struct IDirect3DIndexBuffer8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*Lock)(struct IDirect3DIndexBuffer8 *, UINT, UINT, BYTE **, DWORD);
    HRESULT (*Unlock)(struct IDirect3DIndexBuffer8 *);
    HRESULT (*GetDesc)(struct IDirect3DIndexBuffer8 *, D3DINDEXBUFFER_DESC *);
};

struct IDirect3DCubeTexture8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DCubeTexture8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DCubeTexture8 *);
    ULONG (*Release)(struct IDirect3DCubeTexture8 *);
    HRESULT (*GetDevice)(struct IDirect3DCubeTexture8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DCubeTexture8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DCubeTexture8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DCubeTexture8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DCubeTexture8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DCubeTexture8 *);
    void (*PreLoad)(struct IDirect3DCubeTexture8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DCubeTexture8 *);
    DWORD (*SetLOD)(struct IDirect3DCubeTexture8 *, DWORD);
    DWORD (*GetLOD)(struct IDirect3DCubeTexture8 *);
    DWORD (*GetLevelCount)(struct IDirect3DCubeTexture8 *);
    HRESULT (*GetLevelDesc)(struct IDirect3DCubeTexture8 *, UINT, D3DSURFACE_DESC *);
    HRESULT (*GetCubeMapSurface)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT, struct IDirect3DSurface8 **);
    HRESULT (*LockRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT, D3DLOCKED_RECT *, RECT *, DWORD);
    HRESULT (*UnlockRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, UINT);
    HRESULT (*AddDirtyRect)(struct IDirect3DCubeTexture8 *, D3DCUBEMAP_FACES, RECT *);
};

struct IDirect3DCubeTexture8 {
    struct IDirect3DCubeTexture8Vtbl *lpVtbl;
};

struct _D3DRECT {
    LONG x1;
    LONG y1;
    LONG x2;
    LONG y2;
};

struct IDirect3DTexture8 {
    struct IDirect3DTexture8Vtbl *lpVtbl;
};

typedef struct ID3DXSpriteVtbl ID3DXSpriteVtbl, *PID3DXSpriteVtbl;

typedef struct _D3DMATRIX D3DXMATRIX;

struct ID3DXSpriteVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*Begin)(struct IDirect3DVolume8 *);
    HRESULT (*Draw)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, RECT *, struct D3DXVECTOR2 *, struct D3DXVECTOR2 *, FLOAT, struct D3DXVECTOR2 *, D3DCOLOR);
    HRESULT (*DrawTransform)(struct IDirect3DVolume8 *, LPDIRECT3DTEXTURE8, RECT *, D3DXMATRIX *, D3DCOLOR);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXRenderToSurface ID3DXRenderToSurface, *PID3DXRenderToSurface;

typedef struct ID3DXRenderToSurface *LPD3DXRENDERTOSURFACE;

typedef struct ID3DXRenderToSurfaceVtbl ID3DXRenderToSurfaceVtbl, *PID3DXRenderToSurfaceVtbl;

typedef struct _D3DXRTS_DESC _D3DXRTS_DESC, *P_D3DXRTS_DESC;

typedef struct _D3DXRTS_DESC D3DXRTS_DESC;

typedef struct IDirect3DSurface8 *LPDIRECT3DSURFACE8;

struct ID3DXRenderToSurface {
    struct ID3DXRenderToSurfaceVtbl *lpVtbl;
};

struct _D3DXRTS_DESC {
    UINT Width;
    UINT Height;
    D3DFORMAT Format;
    BOOL DepthStencil;
    D3DFORMAT DepthStencilFormat;
};

struct ID3DXRenderToSurfaceVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetDesc)(struct IDirect3DVolume8 *, D3DXRTS_DESC *);
    HRESULT (*BeginScene)(struct IDirect3DVolume8 *, LPDIRECT3DSURFACE8, D3DVIEWPORT8 *);
    HRESULT (*EndScene)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXFont ID3DXFont, *PID3DXFont;

typedef struct ID3DXFont *LPD3DXFONT;

typedef struct ID3DXFontVtbl ID3DXFontVtbl, *PID3DXFontVtbl;

typedef struct tagLOGFONTA tagLOGFONTA, *PtagLOGFONTA;

typedef struct tagLOGFONTA LOGFONTA;

typedef LOGFONTA LOGFONT;

typedef struct tagRECT *LPRECT;

struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[32];
};

struct ID3DXFont {
    struct ID3DXFontVtbl *lpVtbl;
};

struct ID3DXFontVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*GetDevice)(struct IDirect3DVolume8 *, LPDIRECT3DDEVICE8 *);
    HRESULT (*GetLogFont)(struct IDirect3DVolume8 *, LOGFONT *);
    HRESULT (*Begin)(struct IDirect3DVolume8 *);
    INT (*DrawTextA)(struct IDirect3DVolume8 *, LPCSTR, INT, LPRECT, DWORD, D3DCOLOR);
    INT (*DrawTextW)(struct IDirect3DVolume8 *, LPCWSTR, INT, LPRECT, DWORD, D3DCOLOR);
    HRESULT (*End)(struct IDirect3DVolume8 *);
};

typedef struct ID3DXSprite ID3DXSprite, *PID3DXSprite;

struct ID3DXSprite {
    struct ID3DXSpriteVtbl *lpVtbl;
};

typedef struct ID3DXBuffer ID3DXBuffer, *PID3DXBuffer;

typedef struct ID3DXBufferVtbl ID3DXBufferVtbl, *PID3DXBufferVtbl;

struct ID3DXBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    LPVOID (*GetBufferPointer)(struct IDirect3DVolume8 *);
    DWORD (*GetBufferSize)(struct IDirect3DVolume8 *);
};

struct ID3DXBuffer {
    struct ID3DXBufferVtbl *lpVtbl;
};

typedef struct ID3DXSprite *LPD3DXSPRITE;

typedef struct ID3DXRenderToEnvMap *LPD3DXRenderToEnvMap;

typedef struct ID3DXBuffer *LPD3DXBUFFER;

#define D3DXASM_DEBUG 1

#define D3DXASM_SKIPVALIDATION 2

#define D3DX_FILTER_NONE 1

#define D3DX_FILTER_TRIANGLE 4

#define D3DX_FILTER_MIRROR 458752

#define D3DX_FILTER_MIRROR_V 131072

#define D3DX_FILTER_MIRROR_U 65536

#define D3DX_FILTER_MIRROR_W 262144

#define D3DX_FILTER_POINT 2

#define D3DX_FILTER_DITHER 524288

#define D3DX_FILTER_BOX 5

#define D3DX_FILTER_LINEAR 3

typedef struct tagEMRSTRETCHBLT tagEMRSTRETCHBLT, *PtagEMRSTRETCHBLT;

typedef struct tagEMR tagEMR, *PtagEMR;

typedef struct tagEMR EMR;

typedef struct tagXFORM tagXFORM, *PtagXFORM;

typedef struct tagXFORM XFORM;

typedef DWORD COLORREF;

struct tagXFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

struct tagEMR {
    DWORD iType;
    DWORD nSize;
};

struct tagEMRSTRETCHBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRANGLEARC tagEMRANGLEARC, *PtagEMRANGLEARC;

typedef struct tagEMRANGLEARC *PEMRANGLEARC;

struct tagEMRANGLEARC {
    EMR emr;
    POINTL ptlCenter;
    DWORD nRadius;
    FLOAT eStartAngle;
    FLOAT eSweepAngle;
};

typedef struct tagEMRSCALEVIEWPORTEXTEX tagEMRSCALEVIEWPORTEXTEX, *PtagEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;

struct tagEMRSCALEVIEWPORTEXTEX {
    EMR emr;
    LONG xNum;
    LONG xDenom;
    LONG yNum;
    LONG yDenom;
};

typedef struct tagBITMAPFILEHEADER tagBITMAPFILEHEADER, *PtagBITMAPFILEHEADER;

struct tagBITMAPFILEHEADER {
    WORD bfType;
    DWORD bfSize;
    WORD bfReserved1;
    WORD bfReserved2;
    DWORD bfOffBits;
};

typedef struct tagEXTLOGFONTW tagEXTLOGFONTW, *PtagEXTLOGFONTW;

typedef struct tagEXTLOGFONTW *PEXTLOGFONTW;

typedef struct tagLOGFONTW tagLOGFONTW, *PtagLOGFONTW;

typedef struct tagLOGFONTW LOGFONTW;

typedef struct tagPANOSE tagPANOSE, *PtagPANOSE;

typedef struct tagPANOSE PANOSE;

struct tagLOGFONTW {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[32];
};

struct tagPANOSE {
    BYTE bFamilyType;
    BYTE bSerifStyle;
    BYTE bWeight;
    BYTE bProportion;
    BYTE bContrast;
    BYTE bStrokeVariation;
    BYTE bArmStyle;
    BYTE bLetterform;
    BYTE bMidline;
    BYTE bXHeight;
};

struct tagEXTLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

typedef struct _RGNDATA *PRGNDATA;

typedef struct tagEXTLOGFONTA tagEXTLOGFONTA, *PtagEXTLOGFONTA;

typedef struct tagEXTLOGFONTA *PEXTLOGFONTA;

struct tagEXTLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

typedef struct _RASTERIZER_STATUS _RASTERIZER_STATUS, *P_RASTERIZER_STATUS;

typedef struct _RASTERIZER_STATUS *LPRASTERIZER_STATUS;

struct _RASTERIZER_STATUS {
    short nSize;
    short wFlags;
    short nLanguageID;
};

typedef struct tagNEWTEXTMETRICW tagNEWTEXTMETRICW, *PtagNEWTEXTMETRICW;

struct tagNEWTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

typedef struct tagLOGCOLORSPACEA tagLOGCOLORSPACEA, *PtagLOGCOLORSPACEA;

typedef LONG LCSCSTYPE;

typedef LONG LCSGAMUTMATCH;

typedef struct tagICEXYZTRIPLE tagICEXYZTRIPLE, *PtagICEXYZTRIPLE;

typedef struct tagICEXYZTRIPLE CIEXYZTRIPLE;

typedef struct tagCIEXYZ tagCIEXYZ, *PtagCIEXYZ;

typedef struct tagCIEXYZ CIEXYZ;

typedef long FXPT2DOT30;

struct tagCIEXYZ {
    FXPT2DOT30 ciexyzX;
    FXPT2DOT30 ciexyzY;
    FXPT2DOT30 ciexyzZ;
};

struct tagICEXYZTRIPLE {
    CIEXYZ ciexyzRed;
    CIEXYZ ciexyzGreen;
    CIEXYZ ciexyzBlue;
};

struct tagLOGCOLORSPACEA {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    CHAR lcsFilename[260];
};

typedef struct tagCHARSETINFO tagCHARSETINFO, *PtagCHARSETINFO;

typedef struct tagCHARSETINFO *NPCHARSETINFO;

typedef struct tagFONTSIGNATURE tagFONTSIGNATURE, *PtagFONTSIGNATURE;

typedef struct tagFONTSIGNATURE FONTSIGNATURE;

struct tagFONTSIGNATURE {
    DWORD fsUsb[4];
    DWORD fsCsb[2];
};

struct tagCHARSETINFO {
    UINT ciCharset;
    UINT ciACP;
    FONTSIGNATURE fs;
};

typedef struct tagCHARSETINFO *LPCHARSETINFO;

typedef struct _MAT2 _MAT2, *P_MAT2;

typedef struct _MAT2 *LPMAT2;

typedef struct _FIXED _FIXED, *P_FIXED;

typedef struct _FIXED FIXED;

struct _FIXED {
    WORD fract;
    short value;
};

struct _MAT2 {
    FIXED eM11;
    FIXED eM12;
    FIXED eM21;
    FIXED eM22;
};

typedef struct tagEMRSETTEXTCOLOR tagEMRSETTEXTCOLOR, *PtagEMRSETTEXTCOLOR;

typedef struct tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;

struct tagEMRSETTEXTCOLOR {
    EMR emr;
    COLORREF crColor;
};

typedef struct tagGCP_RESULTSW tagGCP_RESULTSW, *PtagGCP_RESULTSW;

typedef struct tagGCP_RESULTSW *LPGCP_RESULTSW;

struct tagGCP_RESULTSW {
    DWORD lStructSize;
    LPWSTR lpOutString;
    UINT *lpOrder;
    int *lpDx;
    int *lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct _DOCINFOW _DOCINFOW, *P_DOCINFOW;

typedef struct _DOCINFOW DOCINFOW;

struct _DOCINFOW {
    int cbSize;
    LPCWSTR lpszDocName;
    LPCWSTR lpszOutput;
    LPCWSTR lpszDatatype;
    DWORD fwType;
};

typedef struct tagTEXTMETRICA tagTEXTMETRICA, *PtagTEXTMETRICA;

typedef struct tagTEXTMETRICA TEXTMETRICA;

typedef int (*OLDFONTENUMPROCA)(LOGFONTA *, TEXTMETRICA *, DWORD, LPARAM);

typedef OLDFONTENUMPROCA FONTENUMPROCA;

typedef FONTENUMPROCA FONTENUMPROC;

struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagEMRPOLYPOLYLINE16 tagEMRPOLYPOLYLINE16, *PtagEMRPOLYPOLYLINE16;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;

typedef struct tagPOINTS tagPOINTS, *PtagPOINTS;

typedef struct tagPOINTS POINTS;

typedef short SHORT;

struct tagPOINTS {
    SHORT x;
    SHORT y;
};

struct tagEMRPOLYPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cpts;
    DWORD aPolyCounts[1];
    POINTS apts[1];
};

typedef struct _ABC _ABC, *P_ABC;

typedef struct _ABC *LPABC;

struct _ABC {
    int abcA;
    UINT abcB;
    int abcC;
};

typedef struct tagEMRINVERTRGN tagEMRINVERTRGN, *PtagEMRINVERTRGN;

struct tagEMRINVERTRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    BYTE RgnData[1];
};

typedef struct tagTTPOLYGONHEADER tagTTPOLYGONHEADER, *PtagTTPOLYGONHEADER;

typedef struct tagPOINTFX tagPOINTFX, *PtagPOINTFX;

typedef struct tagPOINTFX POINTFX;

struct tagPOINTFX {
    FIXED x;
    FIXED y;
};

struct tagTTPOLYGONHEADER {
    DWORD cb;
    DWORD dwType;
    POINTFX pfxStart;
};

typedef struct tagPOLYTEXTA tagPOLYTEXTA, *PtagPOLYTEXTA;

typedef struct tagPOLYTEXTA POLYTEXTA;

struct tagPOLYTEXTA {
    int x;
    int y;
    UINT n;
    LPCSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int *pdx;
};

typedef struct tagGCP_RESULTSA tagGCP_RESULTSA, *PtagGCP_RESULTSA;

typedef struct tagGCP_RESULTSA *LPGCP_RESULTSA;

struct tagGCP_RESULTSA {
    DWORD lStructSize;
    LPSTR lpOutString;
    UINT *lpOrder;
    int *lpDx;
    int *lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct tagBITMAPFILEHEADER *PBITMAPFILEHEADER;

typedef struct tagEMRRESIZEPALETTE tagEMRRESIZEPALETTE, *PtagEMRRESIZEPALETTE;

struct tagEMRRESIZEPALETTE {
    EMR emr;
    DWORD ihPal;
    DWORD cEntries;
};

typedef struct tagEXTLOGFONTW *LPEXTLOGFONTW;

typedef struct _GLYPHMETRICSFLOAT _GLYPHMETRICSFLOAT, *P_GLYPHMETRICSFLOAT;

typedef struct _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;

typedef struct _POINTFLOAT _POINTFLOAT, *P_POINTFLOAT;

typedef struct _POINTFLOAT POINTFLOAT;

struct _POINTFLOAT {
    FLOAT x;
    FLOAT y;
};

struct _GLYPHMETRICSFLOAT {
    FLOAT gmfBlackBoxX;
    FLOAT gmfBlackBoxY;
    POINTFLOAT gmfptGlyphOrigin;
    FLOAT gmfCellIncX;
    FLOAT gmfCellIncY;
};

typedef struct tagEXTLOGFONTW *NPEXTLOGFONTW;

typedef struct tagEMRSETICMPROFILE tagEMRSETICMPROFILE, *PtagEMRSETICMPROFILE;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILE;

struct tagEMRSETICMPROFILE {
    EMR emr;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRPOLYLINE16 tagEMRPOLYLINE16, *PtagEMRPOLYLINE16;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINE16;

struct tagEMRPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
};

typedef struct tagEMRSETVIEWPORTEXTEX tagEMRSETVIEWPORTEXTEX, *PtagEMRSETVIEWPORTEXTEX;

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;

struct tagEMRSETVIEWPORTEXTEX {
    EMR emr;
    SIZEL szlExtent;
};

typedef struct tagEMRSELECTOBJECT tagEMRSELECTOBJECT, *PtagEMRSELECTOBJECT;

typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;

struct tagEMRSELECTOBJECT {
    EMR emr;
    DWORD ihObject;
};

typedef struct tagEMRCREATECOLORSPACEW tagEMRCREATECOLORSPACEW, *PtagEMRCREATECOLORSPACEW;

typedef struct tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;

typedef struct tagLOGCOLORSPACEW tagLOGCOLORSPACEW, *PtagLOGCOLORSPACEW;

typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;

struct tagLOGCOLORSPACEW {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    WCHAR lcsFilename[260];
};

struct tagEMRCREATECOLORSPACEW {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEW lcs;
    DWORD dwFlags;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER, *PtagBITMAPINFOHEADER;

struct tagBITMAPINFOHEADER {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
};

typedef struct _devicemodeW *NPDEVMODEW;

typedef struct tagEMREXCLUDECLIPRECT tagEMREXCLUDECLIPRECT, *PtagEMREXCLUDECLIPRECT;

typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;

struct tagEMREXCLUDECLIPRECT {
    EMR emr;
    RECTL rclClip;
};

typedef struct _devicemodeA DEVMODEA;

typedef DEVMODEA DEVMODE;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT tagEMRCREATEDIBPATTERNBRUSHPT, *PtagEMRCREATEDIBPATTERNBRUSHPT;

struct tagEMRCREATEDIBPATTERNBRUSHPT {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct tagEXTLOGFONTA *LPEXTLOGFONTA;

typedef struct tagRGBTRIPLE tagRGBTRIPLE, *PtagRGBTRIPLE;

typedef struct tagRGBTRIPLE RGBTRIPLE;

struct tagRGBTRIPLE {
    BYTE rgbtBlue;
    BYTE rgbtGreen;
    BYTE rgbtRed;
};

typedef struct tagEMRPOLYDRAW tagEMRPOLYDRAW, *PtagEMRPOLYDRAW;

struct tagEMRPOLYDRAW {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
    BYTE abTypes[1];
};

typedef struct tagHANDLETABLE tagHANDLETABLE, *PtagHANDLETABLE;

typedef struct tagHANDLETABLE HANDLETABLE;

typedef void *HGDIOBJ;

struct tagHANDLETABLE {
    HGDIOBJ objectHandle[1];
};

typedef struct tagEMRSETVIEWPORTORGEX tagEMRSETVIEWPORTORGEX, *PtagEMRSETVIEWPORTORGEX;

struct tagEMRSETVIEWPORTORGEX {
    EMR emr;
    POINTL ptlOrigin;
};

typedef struct tagEXTLOGFONTA *NPEXTLOGFONTA;

typedef struct _WGLSWAP _WGLSWAP, *P_WGLSWAP;

struct _WGLSWAP {
    HDC hdc;
    UINT uiFlags;
};

typedef struct tagEMREXTCREATEPEN tagEMREXTCREATEPEN, *PtagEMREXTCREATEPEN;

typedef struct tagEXTLOGPEN tagEXTLOGPEN, *PtagEXTLOGPEN;

typedef struct tagEXTLOGPEN EXTLOGPEN;

struct tagEXTLOGPEN {
    DWORD elpPenStyle;
    DWORD elpWidth;
    UINT elpBrushStyle;
    COLORREF elpColor;
    ULONG_PTR elpHatch;
    DWORD elpNumEntries;
    DWORD elpStyleEntry[1];
};

struct tagEMREXTCREATEPEN {
    EMR emr;
    DWORD ihPen;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
    EXTLOGPEN elp;
};

typedef struct tagEMRSETDIBITSTODEVICE tagEMRSETDIBITSTODEVICE, *PtagEMRSETDIBITSTODEVICE;

typedef struct tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;

struct tagEMRSETDIBITSTODEVICE {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD iStartScan;
    DWORD cScans;
};

typedef struct tagEMRINVERTRGN EMRPAINTRGN;

typedef struct tagCHARSETINFO *PCHARSETINFO;

typedef struct tagEMRSTRETCHDIBITS tagEMRSTRETCHDIBITS, *PtagEMRSTRETCHDIBITS;

struct tagEMRSTRETCHDIBITS {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD dwRop;
    LONG cxDest;
    LONG cyDest;
};

typedef struct _GLYPHMETRICS _GLYPHMETRICS, *P_GLYPHMETRICS;

struct _GLYPHMETRICS {
    UINT gmBlackBoxX;
    UINT gmBlackBoxY;
    POINT gmptGlyphOrigin;
    short gmCellIncX;
    short gmCellIncY;
};

typedef struct tagEMRSELECTCLIPPATH tagEMRSELECTCLIPPATH, *PtagEMRSELECTCLIPPATH;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETICMMODE;

struct tagEMRSELECTCLIPPATH {
    EMR emr;
    DWORD iMode;
};

typedef struct _TRIVERTEX _TRIVERTEX, *P_TRIVERTEX;

typedef USHORT COLOR16;

struct _TRIVERTEX {
    LONG x;
    LONG y;
    COLOR16 Red;
    COLOR16 Green;
    COLOR16 Blue;
    COLOR16 Alpha;
};

typedef struct tagABORTPATH tagABORTPATH, *PtagABORTPATH;

typedef struct tagABORTPATH *PEMRBEGINPATH;

struct tagABORTPATH {
    EMR emr;
};

typedef struct tagEMRPOLYTEXTOUTA tagEMRPOLYTEXTOUTA, *PtagEMRPOLYTEXTOUTA;

typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;

typedef struct tagEMRTEXT tagEMRTEXT, *PtagEMRTEXT;

typedef struct tagEMRTEXT EMRTEXT;

struct tagEMRTEXT {
    POINTL ptlReference;
    DWORD nChars;
    DWORD offString;
    DWORD fOptions;
    RECTL rcl;
    DWORD offDx;
};

struct tagEMRPOLYTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    LONG cStrings;
    EMRTEXT aemrtext[1];
};

typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;

typedef struct _PSFEATURE_OUTPUT _PSFEATURE_OUTPUT, *P_PSFEATURE_OUTPUT;

struct _PSFEATURE_OUTPUT {
    BOOL bPageIndependent;
    BOOL bSetPageDevice;
};

typedef struct tagABORTPATH *PEMRREALIZEPALETTE;

typedef struct tagEMRFRAMERGN tagEMRFRAMERGN, *PtagEMRFRAMERGN;

typedef struct tagEMRFRAMERGN *PEMRFRAMERGN;

struct tagEMRFRAMERGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    SIZEL szlStroke;
    BYTE RgnData[1];
};

typedef struct _PSFEATURE_CUSTPAPER _PSFEATURE_CUSTPAPER, *P_PSFEATURE_CUSTPAPER;

typedef struct _PSFEATURE_CUSTPAPER PSFEATURE_CUSTPAPER;

struct _PSFEATURE_CUSTPAPER {
    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;
};

typedef struct tagEMRSETCOLORADJUSTMENT tagEMRSETCOLORADJUSTMENT, *PtagEMRSETCOLORADJUSTMENT;

typedef struct tagCOLORADJUSTMENT tagCOLORADJUSTMENT, *PtagCOLORADJUSTMENT;

typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;

struct tagCOLORADJUSTMENT {
    WORD caSize;
    WORD caFlags;
    WORD caIlluminantIndex;
    WORD caRedGamma;
    WORD caGreenGamma;
    WORD caBlueGamma;
    WORD caReferenceBlack;
    WORD caReferenceWhite;
    SHORT caContrast;
    SHORT caBrightness;
    SHORT caColorfulness;
    SHORT caRedGreenTint;
};

struct tagEMRSETCOLORADJUSTMENT {
    EMR emr;
    COLORADJUSTMENT ColorAdjustment;
};

typedef struct tagLOCALESIGNATURE tagLOCALESIGNATURE, *PtagLOCALESIGNATURE;

struct tagLOCALESIGNATURE {
    DWORD lsUsb[4];
    DWORD lsCsbDefault[2];
    DWORD lsCsbSupported[2];
};

typedef struct tagLOCALESIGNATURE *PLOCALESIGNATURE;

typedef struct tagEMRSETWORLDTRANSFORM tagEMRSETWORLDTRANSFORM, *PtagEMRSETWORLDTRANSFORM;

typedef struct tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;

struct tagEMRSETWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
};

typedef struct tagPOLYTEXTW tagPOLYTEXTW, *PtagPOLYTEXTW;

typedef struct tagPOLYTEXTW *NPPOLYTEXTW;

struct tagPOLYTEXTW {
    int x;
    int y;
    UINT n;
    LPCWSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int *pdx;
};

typedef struct tagBITMAP tagBITMAP, *PtagBITMAP;

struct tagBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    LPVOID bmBits;
};

typedef struct tagEMRCREATEPEN tagEMRCREATEPEN, *PtagEMRCREATEPEN;

typedef struct tagLOGPEN tagLOGPEN, *PtagLOGPEN;

typedef struct tagLOGPEN LOGPEN;

struct tagLOGPEN {
    UINT lopnStyle;
    POINT lopnWidth;
    COLORREF lopnColor;
};

struct tagEMRCREATEPEN {
    EMR emr;
    DWORD ihPen;
    LOGPEN lopn;
};

typedef struct tagEMRPOLYPOLYLINE tagEMRPOLYPOLYLINE, *PtagEMRPOLYPOLYLINE;

struct tagEMRPOLYPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cptl;
    DWORD aPolyCounts[1];
    POINTL aptl[1];
};

typedef struct tagEMREXTSELECTCLIPRGN tagEMREXTSELECTCLIPRGN, *PtagEMREXTSELECTCLIPRGN;

typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;

struct tagEMREXTSELECTCLIPRGN {
    EMR emr;
    DWORD cbRgnData;
    DWORD iMode;
    BYTE RgnData[1];
};

typedef struct tagPOLYTEXTA *NPPOLYTEXTA;

typedef struct tagLOGBRUSH tagLOGBRUSH, *PtagLOGBRUSH;

typedef struct tagLOGBRUSH LOGBRUSH;

typedef LOGBRUSH PATTERN;

typedef PATTERN *NPPATTERN;

struct tagLOGBRUSH {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG_PTR lbHatch;
};

typedef struct tagLOGPEN *PLOGPEN;

typedef struct _DOCINFOA _DOCINFOA, *P_DOCINFOA;

typedef struct _DOCINFOA *LPDOCINFOA;

typedef LPDOCINFOA LPDOCINFO;

struct _DOCINFOA {
    int cbSize;
    LPCSTR lpszDocName;
    LPCSTR lpszOutput;
    LPCSTR lpszDatatype;
    DWORD fwType;
};

typedef struct tagNEWTEXTMETRICA tagNEWTEXTMETRICA, *PtagNEWTEXTMETRICA;

typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;

typedef NEWTEXTMETRICA NEWTEXTMETRIC;

struct tagNEWTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

typedef struct tagRGBQUAD tagRGBQUAD, *PtagRGBQUAD;

typedef struct tagRGBQUAD RGBQUAD;

struct tagRGBQUAD {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbReserved;
};

typedef CIEXYZTRIPLE *LPCIEXYZTRIPLE;

typedef struct tagBITMAP BITMAP;

typedef struct tagPALETTEENTRY *LPPALETTEENTRY;

typedef struct tagKERNINGPAIR tagKERNINGPAIR, *PtagKERNINGPAIR;

typedef struct tagKERNINGPAIR KERNINGPAIR;

struct tagKERNINGPAIR {
    WORD wFirst;
    WORD wSecond;
    int iKernAmount;
};

typedef struct tagPELARRAY tagPELARRAY, *PtagPELARRAY;

struct tagPELARRAY {
    LONG paXCount;
    LONG paYCount;
    LONG paXExt;
    LONG paYExt;
    BYTE paRGBs;
};

typedef struct tagEMRGDICOMMENT tagEMRGDICOMMENT, *PtagEMRGDICOMMENT;

typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;

struct tagEMRGDICOMMENT {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;

typedef struct tagENUMLOGFONTA tagENUMLOGFONTA, *PtagENUMLOGFONTA;

typedef struct tagENUMLOGFONTA ENUMLOGFONTA;

typedef ENUMLOGFONTA ENUMLOGFONT;

struct tagENUMLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
};

typedef struct tagTEXTMETRICW tagTEXTMETRICW, *PtagTEXTMETRICW;

struct tagTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagLOGBRUSH *LPLOGBRUSH;

typedef struct tagMETAHEADER tagMETAHEADER, *PtagMETAHEADER;

typedef struct tagMETAHEADER *PMETAHEADER;

struct tagMETAHEADER {
    WORD mtType;
    WORD mtHeaderSize;
    WORD mtVersion;
    DWORD mtSize;
    WORD mtNoObjects;
    DWORD mtMaxRecord;
    WORD mtNoParameters;
};

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;

typedef struct tagEMREOF tagEMREOF, *PtagEMREOF;

struct tagEMREOF {
    EMR emr;
    DWORD nPalEntries;
    DWORD offPalEntries;
    DWORD nSizeLast;
};

typedef struct tagEMRPLGBLT tagEMRPLGBLT, *PtagEMRPLGBLT;

struct tagEMRPLGBLT {
    EMR emr;
    RECTL rclBounds;
    POINTL aptlDest[3];
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagBITMAPINFO tagBITMAPINFO, *PtagBITMAPINFO;

typedef struct tagBITMAPINFO *PBITMAPINFO;

typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

struct tagBITMAPINFO {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[1];
};

typedef struct tagMETARECORD tagMETARECORD, *PtagMETARECORD;

typedef struct tagMETARECORD METARECORD;

struct tagMETARECORD {
    DWORD rdSize;
    WORD rdFunction;
    WORD rdParm[1];
};

typedef struct _TRIVERTEX *LPTRIVERTEX;

typedef struct tagEMRELLIPSE tagEMRELLIPSE, *PtagEMRELLIPSE;

typedef struct tagEMRELLIPSE *PEMRELLIPSE;

struct tagEMRELLIPSE {
    EMR emr;
    RECTL rclBox;
};

typedef struct tagEMRFILLRGN tagEMRFILLRGN, *PtagEMRFILLRGN;

typedef struct tagEMRFILLRGN EMRFILLRGN;

struct tagEMRFILLRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    BYTE RgnData[1];
};

typedef struct tagENHMETAHEADER tagENHMETAHEADER, *PtagENHMETAHEADER;

typedef struct tagENHMETAHEADER *PENHMETAHEADER;

struct tagENHMETAHEADER {
    DWORD iType;
    DWORD nSize;
    RECTL rclBounds;
    RECTL rclFrame;
    DWORD dSignature;
    DWORD nVersion;
    DWORD nBytes;
    DWORD nRecords;
    WORD nHandles;
    WORD sReserved;
    DWORD nDescription;
    DWORD offDescription;
    DWORD nPalEntries;
    SIZEL szlDevice;
    SIZEL szlMillimeters;
    DWORD cbPixelFormat;
    DWORD offPixelFormat;
    DWORD bOpenGL;
    SIZEL szlMicrometers;
};

typedef struct _BLENDFUNCTION _BLENDFUNCTION, *P_BLENDFUNCTION;

typedef struct _BLENDFUNCTION *PBLENDFUNCTION;

struct _BLENDFUNCTION {
    BYTE BlendOp;
    BYTE BlendFlags;
    BYTE SourceConstantAlpha;
    BYTE AlphaFormat;
};

typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;

typedef struct tagEMRPOLYLINE tagEMRPOLYLINE, *PtagEMRPOLYLINE;

typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;

struct tagEMRPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
};

typedef struct _OUTLINETEXTMETRICA _OUTLINETEXTMETRICA, *P_OUTLINETEXTMETRICA;

typedef struct _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;

typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC;

typedef CHAR *PSTR;

struct _OUTLINETEXTMETRICA {
    UINT otmSize;
    TEXTMETRICA otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct tagEMRRESTOREDC tagEMRRESTOREDC, *PtagEMRRESTOREDC;

typedef struct tagEMRRESTOREDC *PEMRRESTOREDC;

struct tagEMRRESTOREDC {
    EMR emr;
    LONG iRelative;
};

typedef struct _DRAWPATRECT _DRAWPATRECT, *P_DRAWPATRECT;

typedef struct _DRAWPATRECT *PDRAWPATRECT;

struct _DRAWPATRECT {
    POINT ptPosition;
    POINT ptSize;
    WORD wStyle;
    WORD wPattern;
};

typedef struct tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;

typedef struct tagTTPOLYCURVE tagTTPOLYCURVE, *PtagTTPOLYCURVE;

struct tagTTPOLYCURVE {
    WORD wType;
    WORD cpfx;
    POINTFX apfx[1];
};

typedef struct tagMETAHEADER *LPMETAHEADER;

typedef struct tagEMRALPHABLEND tagEMRALPHABLEND, *PtagEMRALPHABLEND;

typedef struct tagEMRALPHABLEND *PEMRALPHABLEND;

struct tagEMRALPHABLEND {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct _BLENDFUNCTION BLENDFUNCTION;

typedef struct tagTEXTMETRICA *LPTEXTMETRICA;

typedef LPTEXTMETRICA LPTEXTMETRIC;

typedef struct tagEMRSETPALETTEENTRIES tagEMRSETPALETTEENTRIES, *PtagEMRSETPALETTEENTRIES;

typedef struct tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;

struct tagEMRSETPALETTEENTRIES {
    EMR emr;
    DWORD ihPal;
    DWORD iStart;
    DWORD cEntries;
    PALETTEENTRY aPalEntries[1];
};

typedef struct tagPALETTEENTRY *PPALETTEENTRY;

typedef struct tagPOLYTEXTA *PPOLYTEXTA;

typedef PPOLYTEXTA PPOLYTEXT;

typedef struct tagMETAFILEPICT tagMETAFILEPICT, *PtagMETAFILEPICT;

typedef struct tagMETAFILEPICT METAFILEPICT;

typedef struct HMETAFILE__ HMETAFILE__, *PHMETAFILE__;

typedef struct HMETAFILE__ *HMETAFILE;

struct HMETAFILE__ {
    int unused;
};

struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    HMETAFILE hMF;
};

typedef struct tagEMRGRADIENTFILL tagEMRGRADIENTFILL, *PtagEMRGRADIENTFILL;

typedef struct tagEMRGRADIENTFILL *PEMRGRADIENTFILL;

typedef struct _TRIVERTEX TRIVERTEX;

struct tagEMRGRADIENTFILL {
    EMR emr;
    RECTL rclBounds;
    DWORD nVer;
    DWORD nTri;
    ULONG ulMode;
    TRIVERTEX Ver[1];
};

typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;

typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;

typedef struct _devicemodeA *PDEVMODEA;

typedef PDEVMODEA PDEVMODE;

typedef struct tagABORTPATH EMRENDPATH;

typedef struct _GRADIENT_TRIANGLE _GRADIENT_TRIANGLE, *P_GRADIENT_TRIANGLE;

typedef struct _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;

struct _GRADIENT_TRIANGLE {
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
};

typedef struct tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;

typedef struct tagLOGBRUSH *PLOGBRUSH;

typedef struct tagEMRFORMAT tagEMRFORMAT, *PtagEMRFORMAT;

typedef struct tagEMRFORMAT *PEMRFORMAT;

struct tagEMRFORMAT {
    DWORD dSignature;
    DWORD nVersion;
    DWORD cbData;
    DWORD offData;
};

typedef struct _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;

typedef struct tagEMRSETCOLORSPACE tagEMRSETCOLORSPACE, *PtagEMRSETCOLORSPACE;

struct tagEMRSETCOLORSPACE {
    EMR emr;
    DWORD ihCS;
};

typedef struct tagEMRSELECTPALETTE tagEMRSELECTPALETTE, *PtagEMRSELECTPALETTE;

typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;

struct tagEMRSELECTPALETTE {
    EMR emr;
    DWORD ihPal;
};

typedef struct tagLOGFONTA *NPLOGFONTA;

typedef NPLOGFONTA NPLOGFONT;

typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;

typedef struct tagEMRCREATEPALETTE tagEMRCREATEPALETTE, *PtagEMRCREATEPALETTE;

struct tagEMRCREATEPALETTE {
    EMR emr;
    DWORD ihPal;
    LOGPALETTE lgpl;
};

typedef struct tagTEXTMETRICA *PTEXTMETRICA;

typedef PTEXTMETRICA PTEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW _OUTLINETEXTMETRICW, *P_OUTLINETEXTMETRICW;

typedef struct _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

typedef struct tagTEXTMETRICW TEXTMETRICW;

struct _OUTLINETEXTMETRICW {
    UINT otmSize;
    TEXTMETRICW otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;

typedef struct tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;

typedef struct tagEMRPOLYLINE *PEMRPOLYLINE;

typedef LPDEVMODEA LPDEVMODE;

typedef struct _ABCFLOAT _ABCFLOAT, *P_ABCFLOAT;

typedef struct _ABCFLOAT *NPABCFLOAT;

struct _ABCFLOAT {
    FLOAT abcfA;
    FLOAT abcfB;
    FLOAT abcfC;
};

typedef struct tagEMRARC tagEMRARC, *PtagEMRARC;

typedef struct tagEMRARC EMRARC;

struct tagEMRARC {
    EMR emr;
    RECTL rclBox;
    POINTL ptlStart;
    POINTL ptlEnd;
};

typedef struct _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;

typedef struct tagEMRFILLPATH tagEMRFILLPATH, *PtagEMRFILLPATH;

struct tagEMRFILLPATH {
    EMR emr;
    RECTL rclBounds;
};

typedef struct tagENUMLOGFONTEXA tagENUMLOGFONTEXA, *PtagENUMLOGFONTEXA;

typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;

typedef ENUMLOGFONTEXA ENUMLOGFONTEX;

struct tagENUMLOGFONTEXA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    BYTE elfScript[32];
};

typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;

typedef struct tagABORTPATH EMRBEGINPATH;

typedef struct tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;

typedef struct tagABORTPATH EMRSAVEDC;

typedef struct tagENHMETARECORD tagENHMETARECORD, *PtagENHMETARECORD;

typedef struct tagENHMETARECORD ENHMETARECORD;

typedef int (*ENHMFENUMPROC)(HDC, HANDLETABLE *, ENHMETARECORD *, int, LPARAM);

struct tagENHMETARECORD {
    DWORD iType;
    DWORD nSize;
    DWORD dParm[1];
};

typedef struct tagENHMETAHEADER ENHMETAHEADER;

typedef struct _DOCINFOA DOCINFOA;

typedef struct tagXFORM *LPXFORM;

typedef struct _PSINJECTDATA _PSINJECTDATA, *P_PSINJECTDATA;

typedef struct _PSINJECTDATA *PPSINJECTDATA;

struct _PSINJECTDATA {
    DWORD DataBytes;
    WORD InjectionPoint;
    WORD PageNumber;
};

typedef struct tagABORTPATH *PEMRSETMETARGN;

typedef struct tagBITMAPINFO *LPBITMAPINFO;

typedef struct _RGNDATA *LPRGNDATA;

typedef struct BITMAPV4HEADER BITMAPV4HEADER, *PBITMAPV4HEADER;

typedef struct BITMAPV4HEADER *LPBITMAPV4HEADER;

struct BITMAPV4HEADER {
    DWORD bV4Size;
    LONG bV4Width;
    LONG bV4Height;
    WORD bV4Planes;
    WORD bV4BitCount;
    DWORD bV4V4Compression;
    DWORD bV4SizeImage;
    LONG bV4XPelsPerMeter;
    LONG bV4YPelsPerMeter;
    DWORD bV4ClrUsed;
    DWORD bV4ClrImportant;
    DWORD bV4RedMask;
    DWORD bV4GreenMask;
    DWORD bV4BlueMask;
    DWORD bV4AlphaMask;
    DWORD bV4CSType;
    CIEXYZTRIPLE bV4Endpoints;
    DWORD bV4GammaRed;
    DWORD bV4GammaGreen;
    DWORD bV4GammaBlue;
};

typedef struct tagEMRGLSBOUNDEDRECORD tagEMRGLSBOUNDEDRECORD, *PtagEMRGLSBOUNDEDRECORD;

typedef struct tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;

struct tagEMRGLSBOUNDEDRECORD {
    EMR emr;
    RECTL rclBounds;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRGLSRECORD tagEMRGLSRECORD, *PtagEMRGLSRECORD;

typedef struct tagEMRGLSRECORD EMRGLSRECORD;

struct tagEMRGLSRECORD {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;

typedef struct tagEMRFORMAT EMRFORMAT;

typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;

typedef struct tagEMRMODIFYWORLDTRANSFORM tagEMRMODIFYWORLDTRANSFORM, *PtagEMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;

struct tagEMRMODIFYWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
    DWORD iMode;
};

typedef struct tagEMRSETPIXELV tagEMRSETPIXELV, *PtagEMRSETPIXELV;

struct tagEMRSETPIXELV {
    EMR emr;
    POINTL ptlPixel;
    COLORREF crColor;
};

typedef struct tagENHMETAHEADER *LPENHMETAHEADER;

typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;

typedef struct tagBITMAPCOREINFO tagBITMAPCOREINFO, *PtagBITMAPCOREINFO;

typedef struct tagBITMAPCOREHEADER tagBITMAPCOREHEADER, *PtagBITMAPCOREHEADER;

typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;

struct tagBITMAPCOREHEADER {
    DWORD bcSize;
    WORD bcWidth;
    WORD bcHeight;
    WORD bcPlanes;
    WORD bcBitCount;
};

struct tagBITMAPCOREINFO {
    BITMAPCOREHEADER bmciHeader;
    RGBTRIPLE bmciColors[1];
};

typedef struct tagPELARRAY *LPPELARRAY;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;

typedef long *LPFXPT2DOT30;

typedef struct tagEMRLINETO tagEMRLINETO, *PtagEMRLINETO;

typedef struct tagEMRLINETO EMRMOVETOEX;

struct tagEMRLINETO {
    EMR emr;
    POINTL ptl;
};

typedef struct tagEMRCREATEBRUSHINDIRECT tagEMRCREATEBRUSHINDIRECT, *PtagEMRCREATEBRUSHINDIRECT;

typedef struct tagLOGBRUSH32 tagLOGBRUSH32, *PtagLOGBRUSH32;

typedef struct tagLOGBRUSH32 LOGBRUSH32;

struct tagLOGBRUSH32 {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG lbHatch;
};

struct tagEMRCREATEBRUSHINDIRECT {
    EMR emr;
    DWORD ihBrush;
    LOGBRUSH32 lb;
};

typedef NPEXTLOGFONTA NPEXTLOGFONT;

typedef struct tagTTPOLYCURVE *LPTTPOLYCURVE;

typedef struct tagLOGBRUSH32 *NPLOGBRUSH32;

typedef struct tagEMRCREATEPEN *PEMRCREATEPEN;

typedef struct tagEMREXTFLOODFILL tagEMREXTFLOODFILL, *PtagEMREXTFLOODFILL;

typedef struct tagEMREXTFLOODFILL *PEMREXTFLOODFILL;

struct tagEMREXTFLOODFILL {
    EMR emr;
    POINTL ptlStart;
    COLORREF crColor;
    DWORD iMode;
};

typedef struct tagCOLORCORRECTPALETTE tagCOLORCORRECTPALETTE, *PtagCOLORCORRECTPALETTE;

struct tagCOLORCORRECTPALETTE {
    EMR emr;
    DWORD ihPalette;
    DWORD nFirstEntry;
    DWORD nPalEntries;
    DWORD nReserved;
};

typedef struct tagEMRCREATEMONOBRUSH tagEMRCREATEMONOBRUSH, *PtagEMRCREATEMONOBRUSH;

struct tagEMRCREATEMONOBRUSH {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct _OUTLINETEXTMETRICA *NPOUTLINETEXTMETRICA;

typedef struct _OUTLINETEXTMETRICW *NPOUTLINETEXTMETRICW;

typedef struct tagTEXTMETRICW *LPTEXTMETRICW;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;

typedef struct tagLAYERPLANEDESCRIPTOR tagLAYERPLANEDESCRIPTOR, *PtagLAYERPLANEDESCRIPTOR;

typedef struct tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;

struct tagLAYERPLANEDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerPlane;
    BYTE bReserved;
    COLORREF crTransparent;
};

typedef union _union_393 _union_393, *P_union_393;

typedef struct _struct_394 _struct_394, *P_struct_394;

struct _struct_394 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_393 {
    struct _struct_394 field0;
    POINTL dmPosition;
};

typedef struct tagPELARRAY *PPELARRAY;

typedef struct tagNEWTEXTMETRICA *PNEWTEXTMETRICA;

typedef PNEWTEXTMETRICA PNEWTEXTMETRIC;

typedef struct tagEMRFILLPATH *PEMRFILLPATH;

typedef struct tagEMRSETMAPPERFLAGS tagEMRSETMAPPERFLAGS, *PtagEMRSETMAPPERFLAGS;

typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;

struct tagEMRSETMAPPERFLAGS {
    EMR emr;
    DWORD dwFlags;
};

typedef union _union_397 _union_397, *P_union_397;

typedef struct _struct_398 _struct_398, *P_struct_398;

struct _struct_398 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
};

union _union_397 {
    struct _struct_398 field0;
    POINTL dmPosition;
};

typedef union _union_395 _union_395, *P_union_395;

union _union_395 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;

typedef union _union_399 _union_399, *P_union_399;

union _union_399 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

typedef struct tagGCP_RESULTSA GCP_RESULTSA;

typedef struct _DISPLAY_DEVICEA _DISPLAY_DEVICEA, *P_DISPLAY_DEVICEA;

typedef struct _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;

typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;

struct _DISPLAY_DEVICEA {
    DWORD cb;
    CHAR DeviceName[32];
    CHAR DeviceString[128];
    DWORD StateFlags;
    CHAR DeviceID[128];
    CHAR DeviceKey[128];
};

typedef struct tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;

typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;

typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;

typedef struct tagEMRPOLYDRAW16 tagEMRPOLYDRAW16, *PtagEMRPOLYDRAW16;

struct tagEMRPOLYDRAW16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
    BYTE abTypes[1];
};

typedef struct tagEMRELLIPSE *PEMRRECTANGLE;

typedef struct tagEMROFFSETCLIPRGN tagEMROFFSETCLIPRGN, *PtagEMROFFSETCLIPRGN;

typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;

struct tagEMROFFSETCLIPRGN {
    EMR emr;
    POINTL ptlOffset;
};

typedef struct tagLOGPEN *LPLOGPEN;

typedef struct tagGCP_RESULTSW GCP_RESULTSW;

typedef GCP_RESULTSA GCP_RESULTS;

typedef struct tagEMRRESTOREDC EMRRESTOREDC;

typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;

typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;

typedef struct _PSINJECTDATA PSINJECTDATA;

typedef struct tagENHMETARECORD *LPENHMETARECORD;

typedef struct _RGNDATA *NPRGNDATA;

typedef struct _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;

typedef struct tagNEWTEXTMETRICA *NPNEWTEXTMETRICA;

typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC;

typedef struct BITMAPV5HEADER BITMAPV5HEADER, *PBITMAPV5HEADER;

struct BITMAPV5HEADER {
    DWORD bV5Size;
    LONG bV5Width;
    LONG bV5Height;
    WORD bV5Planes;
    WORD bV5BitCount;
    DWORD bV5Compression;
    DWORD bV5SizeImage;
    LONG bV5XPelsPerMeter;
    LONG bV5YPelsPerMeter;
    DWORD bV5ClrUsed;
    DWORD bV5ClrImportant;
    DWORD bV5RedMask;
    DWORD bV5GreenMask;
    DWORD bV5BlueMask;
    DWORD bV5AlphaMask;
    DWORD bV5CSType;
    CIEXYZTRIPLE bV5Endpoints;
    DWORD bV5GammaRed;
    DWORD bV5GammaGreen;
    DWORD bV5GammaBlue;
    DWORD bV5Intent;
    DWORD bV5ProfileData;
    DWORD bV5ProfileSize;
    DWORD bV5Reserved;
};

typedef struct tagEMRSETARCDIRECTION tagEMRSETARCDIRECTION, *PtagEMRSETARCDIRECTION;

struct tagEMRSETARCDIRECTION {
    EMR emr;
    DWORD iArcDirection;
};

typedef struct _DISPLAY_DEVICEW _DISPLAY_DEVICEW, *P_DISPLAY_DEVICEW;

struct _DISPLAY_DEVICEW {
    DWORD cb;
    WCHAR DeviceName[32];
    WCHAR DeviceString[128];
    DWORD StateFlags;
    WCHAR DeviceID[128];
    WCHAR DeviceKey[128];
};

typedef struct tagBITMAP *PBITMAP;

typedef long FXPT16DOT16;

typedef struct _GRADIENT_RECT _GRADIENT_RECT, *P_GRADIENT_RECT;

typedef struct _GRADIENT_RECT *LPGRADIENT_RECT;

struct _GRADIENT_RECT {
    ULONG UpperLeft;
    ULONG LowerRight;
};

typedef struct tagEMRCREATEPEN EMRCREATEPEN;

typedef struct _devicemodeA *NPDEVMODEA;

typedef NPDEVMODEA NPDEVMODE;

typedef struct tagFONTSIGNATURE *PFONTSIGNATURE;

typedef struct tagEMRGDICOMMENT *PEMRGDICOMMENT;

typedef struct tagCOLORMATCHTOTARGET tagCOLORMATCHTOTARGET, *PtagCOLORMATCHTOTARGET;

typedef struct tagCOLORMATCHTOTARGET EMRCOLORMATCHTOTARGET;

struct tagCOLORMATCHTOTARGET {
    EMR emr;
    DWORD dwAction;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagENUMLOGFONTW tagENUMLOGFONTW, *PtagENUMLOGFONTW;

struct tagENUMLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
};

typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIERTO;

typedef struct tagBITMAP *NPBITMAP;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;

typedef struct tagTEXTMETRICA *NPTEXTMETRICA;

typedef NPTEXTMETRICA NPTEXTMETRIC;

typedef struct tagBITMAPCOREINFO *PBITMAPCOREINFO;

typedef struct tagDIBSECTION tagDIBSECTION, *PtagDIBSECTION;

struct tagDIBSECTION {
    BITMAP dsBm;
    BITMAPINFOHEADER dsBmih;
    DWORD dsBitfields[3];
    HANDLE dshSection;
    DWORD dsOffset;
};

typedef struct tagEMRLINETO EMRLINETO;

typedef struct tagHANDLETABLE *LPHANDLETABLE;

typedef struct tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;

typedef void (*LINEDDAPROC)(int, int, LPARAM);

typedef struct tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;

typedef struct tagCOLORADJUSTMENT *PCOLORADJUSTMENT;

typedef struct tagEMRSELECTCLIPPATH EMRSETLAYOUT;

typedef struct tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;

typedef LPGCP_RESULTSA LPGCP_RESULTS;

typedef struct tagABORTPATH *PEMRENDPATH;

typedef struct tagEMRROUNDRECT tagEMRROUNDRECT, *PtagEMRROUNDRECT;

typedef struct tagEMRROUNDRECT *PEMRROUNDRECT;

struct tagEMRROUNDRECT {
    EMR emr;
    RECTL rclBox;
    SIZEL szlCorner;
};

typedef struct tagEMRARC *PEMRPIE;

typedef struct tagENUMLOGFONTEXW tagENUMLOGFONTEXW, *PtagENUMLOGFONTEXW;

struct tagENUMLOGFONTEXW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    WCHAR elfScript[32];
};

typedef POLYTEXTA POLYTEXT;

typedef struct _RGNDATAHEADER *PRGNDATAHEADER;

typedef struct tagDIBSECTION *PDIBSECTION;

typedef struct tagEMRPOLYLINE *PEMRPOLYLINETO;

typedef struct tagPOLYTEXTW POLYTEXTW;

typedef struct tagCOLORCORRECTPALETTE *PEMRCOLORCORRECTPALETTE;

typedef struct tagEMREXTESCAPE tagEMREXTESCAPE, *PtagEMREXTESCAPE;

struct tagEMREXTESCAPE {
    EMR emr;
    INT iEscape;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEXTLOGPEN *NPEXTLOGPEN;

typedef struct tagPOLYTEXTA *LPPOLYTEXTA;

typedef LPPOLYTEXTA LPPOLYTEXT;

typedef struct _ABC *NPABC;

typedef struct tagPIXELFORMATDESCRIPTOR tagPIXELFORMATDESCRIPTOR, *PtagPIXELFORMATDESCRIPTOR;

typedef struct tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;

struct tagPIXELFORMATDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerType;
    BYTE bReserved;
    DWORD dwLayerMask;
    DWORD dwVisibleMask;
    DWORD dwDamageMask;
};

typedef PATTERN *LPPATTERN;

typedef struct tagKERNINGPAIR *LPKERNINGPAIR;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;

typedef struct tagBITMAPINFO BITMAPINFO;

typedef struct _WGLSWAP *LPWGLSWAP;

typedef struct tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;

typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;

typedef struct tagABORTPATH *PEMRFLATTENPATH;

typedef struct tagENUMLOGFONTW *LPENUMLOGFONTW;

typedef struct tagEMRSETMITERLIMIT tagEMRSETMITERLIMIT, *PtagEMRSETMITERLIMIT;

struct tagEMRSETMITERLIMIT {
    EMR emr;
    FLOAT eMiterLimit;
};

typedef struct tagEMREXTESCAPE EMRDRAWESCAPE;

typedef struct tagXFORM *PXFORM;

typedef struct tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;

typedef struct tagEMREXTCREATEFONTINDIRECTW tagEMREXTCREATEFONTINDIRECTW, *PtagEMREXTCREATEFONTINDIRECTW;

typedef struct tagEXTLOGFONTW EXTLOGFONTW;

struct tagEMREXTCREATEFONTINDIRECTW {
    EMR emr;
    DWORD ihFont;
    EXTLOGFONTW elfw;
};

typedef TEXTMETRICA TEXTMETRIC;

typedef struct tagDIBSECTION *LPDIBSECTION;

typedef struct tagLOGFONTW *NPLOGFONTW;

typedef struct tagEMRROUNDRECT EMRROUNDRECT;

typedef struct tagENUMLOGFONTA *LPENUMLOGFONTA;

typedef struct tagEMRLINETO *PEMRLINETO;

typedef struct tagEXTLOGPEN *LPEXTLOGPEN;

typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;

typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;

typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;

typedef struct tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;

typedef struct tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;

typedef struct tagBITMAP *LPBITMAP;

typedef struct tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;

typedef RGBQUAD *LPRGBQUAD;

typedef struct tagABORTPATH *PEMRCLOSEFIGURE;

typedef LPEXTLOGFONTA LPEXTLOGFONT;

typedef struct tagABORTPATH EMRCLOSEFIGURE;

typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;

typedef struct _DOCINFOW *LPDOCINFOW;

typedef int (*MFENUMPROC)(HDC, HANDLETABLE *, METARECORD *, int, LPARAM);

typedef struct tagEMREXTTEXTOUTA tagEMREXTTEXTOUTA, *PtagEMREXTTEXTOUTA;

struct tagEMREXTTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    EMRTEXT emrtext;
};

typedef struct tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEW;

typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;

typedef struct tagEMRPIXELFORMAT tagEMRPIXELFORMAT, *PtagEMRPIXELFORMAT;

typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;

struct tagEMRPIXELFORMAT {
    EMR emr;
    PIXELFORMATDESCRIPTOR pfd;
};

typedef struct tagLOGFONTA *LPLOGFONTA;

typedef struct tagABORTPATH *PEMRWIDENPATH;

typedef struct tagNEWTEXTMETRICEXA tagNEWTEXTMETRICEXA, *PtagNEWTEXTMETRICEXA;

typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;

typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;

struct tagNEWTEXTMETRICEXA {
    NEWTEXTMETRICA ntmTm;
    FONTSIGNATURE ntmFontSig;
};

typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;

typedef LOGCOLORSPACEA LOGCOLORSPACE;

typedef struct tagEMRPOLYLINE EMRPOLYGON;

typedef struct tagEMRFRAMERGN EMRFRAMERGN;

typedef struct _ABCFLOAT *PABCFLOAT;

typedef struct tagEMRNAMEDESCAPE tagEMRNAMEDESCAPE, *PtagEMRNAMEDESCAPE;

typedef struct tagEMRNAMEDESCAPE EMRNAMEDESCAPE;

struct tagEMRNAMEDESCAPE {
    EMR emr;
    INT iEscape;
    INT cbDriver;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEMRPLGBLT *PEMRPLGBLT;

typedef struct tagNEWTEXTMETRICW *NPNEWTEXTMETRICW;

typedef struct tagEMRFILLPATH EMRSTROKEPATH;

typedef struct tagLOGPALETTE *NPLOGPALETTE;

typedef struct tagABORTPATH EMRSETMETARGN;

typedef struct tagEMRCREATECOLORSPACE tagEMRCREATECOLORSPACE, *PtagEMRCREATECOLORSPACE;

struct tagEMRCREATECOLORSPACE {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEA lcs;
};

typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;

typedef struct tagLOGFONTW *LPLOGFONTW;

typedef struct tagBITMAPCOREHEADER *PBITMAPCOREHEADER;

typedef struct tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;

typedef struct tagLOGFONTA *PLOGFONTA;

typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;

typedef struct tagTTPOLYCURVE TTPOLYCURVE;

typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;

typedef struct tagEMRELLIPSE EMRELLIPSE;

typedef struct tagEMRSETPIXELV EMRSETPIXELV;

typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC;

typedef BYTE BCHAR;

typedef struct tagEMRARC EMRARCTO;

typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;

typedef struct _MAT2 MAT2;

typedef struct _PSFEATURE_OUTPUT *PPSFEATURE_OUTPUT;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETBKMODE;

typedef struct tagEMRARC EMRCHORD;

typedef struct tagLOGBRUSH32 *LPLOGBRUSH32;

typedef struct tagEMRTRANSPARENTBLT tagEMRTRANSPARENTBLT, *PtagEMRTRANSPARENTBLT;

struct tagEMRTRANSPARENTBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct _GRADIENT_RECT GRADIENT_RECT;

typedef struct tagEMRSETCOLORSPACE EMRSETCOLORSPACE;

typedef struct tagNEWTEXTMETRICW *PNEWTEXTMETRICW;

typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;

typedef struct tagENHMETARECORD *PENHMETARECORD;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEA;

typedef struct tagEMRMASKBLT tagEMRMASKBLT, *PtagEMRMASKBLT;

typedef struct tagEMRMASKBLT EMRMASKBLT;

struct tagEMRMASKBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;

typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;

typedef struct tagPOINTFX *LPPOINTFX;

typedef struct _ABCFLOAT *LPABCFLOAT;

typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;

typedef struct tagHANDLETABLE *PHANDLETABLE;

typedef struct tagEMRBITBLT tagEMRBITBLT, *PtagEMRBITBLT;

typedef struct tagEMRBITBLT EMRBITBLT;

struct tagEMRBITBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
};

typedef int (*GOBJENUMPROC)(LPVOID, LPARAM);

typedef struct _ABC *PABC;

typedef struct tagPOLYTEXTW *PPOLYTEXTW;

typedef struct tagABORTPATH EMRWIDENPATH;

typedef struct _DRAWPATRECT DRAWPATRECT;

typedef struct tagEMRTRANSPARENTBLT *PEMRTRANSPARENTBLT;

typedef struct tagLOGFONTW *PLOGFONTW;

typedef struct tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;

typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX;

typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;

typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC;

typedef struct tagEMRSETPIXELV *PEMRSETPIXELV;

typedef struct tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;

typedef struct tagEMRALPHABLEND EMRALPHABLEND;

typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;

typedef struct tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;

typedef struct _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;

typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE;

typedef struct tagEMREXTCREATEPEN *PEMREXTCREATEPEN;

typedef struct tagEMRANGLEARC EMRANGLEARC;

typedef struct _GLYPHMETRICS GLYPHMETRICS;

typedef struct tagEXTLOGFONTA EXTLOGFONTA;

typedef struct tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;

typedef struct tagLOGBRUSH32 *PLOGBRUSH32;

typedef struct tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;

typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC;

typedef LPENUMLOGFONTA LPENUMLOGFONT;

typedef DWORD (*LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODE);

typedef struct tagPELARRAY PELARRAY;

typedef struct tagEMR *PEMR;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;

typedef LPLOGFONTA LPLOGFONT;

typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;

typedef struct tagEMRARC EMRPIE;

typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICEA;

typedef DISPLAY_DEVICEA DISPLAY_DEVICE;

typedef struct tagABORTPATH *PEMRSAVEDC;

typedef struct tagEMRINVERTRGN EMRINVERTRGN;

typedef PLOGFONTA PLOGFONT;

typedef struct _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;

typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;

typedef struct tagEXTLOGPEN *PEXTLOGPEN;

typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;

typedef struct tagEMRPIXELFORMAT *PEMRPIXELFORMAT;

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;

typedef struct _devicemodeW *PDEVMODEW;

typedef struct tagCHARSETINFO CHARSETINFO;

typedef struct tagEMRTEXT *PEMRTEXT;

typedef struct BITMAPV5HEADER *LPBITMAPV5HEADER;

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;

typedef struct tagTEXTMETRICW *PTEXTMETRICW;

typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;

typedef struct tagEMRINVERTRGN *PEMRPAINTRGN;

typedef struct tagNEWTEXTMETRICEXW tagNEWTEXTMETRICEXW, *PtagNEWTEXTMETRICEXW;

typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;

struct tagNEWTEXTMETRICEXW {
    NEWTEXTMETRICW ntmTm;
    FONTSIGNATURE ntmFontSig;
};

typedef int (*ICMENUMPROCA)(LPSTR, LPARAM);

typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;

typedef int (*ICMENUMPROCW)(LPWSTR, LPARAM);

typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;

typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;

typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;

typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;

typedef struct tagEMRSELECTOBJECT *PEMRSELECTOBJECT;

typedef struct _GLYPHMETRICS *LPGLYPHMETRICS;

typedef struct tagEMRPLGBLT EMRPLGBLT;

typedef long *LPFXPT16DOT16;

typedef struct tagEMRFILLPATH *PEMRSTROKEPATH;

typedef struct tagEMRNAMEDESCAPE *PEMRNAMEDESCAPE;

typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETROP2;

typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;

typedef struct tagLOCALESIGNATURE *LPLOCALESIGNATURE;

typedef int (*OLDFONTENUMPROCW)(LOGFONTW *, TEXTMETRICW *, DWORD, LPARAM);

typedef CIEXYZ *LPCIEXYZ;

typedef HINSTANCE HMODULE;

typedef UINT (*LPFNDEVMODE)(HWND, HMODULE, LPDEVMODE, LPSTR, LPSTR, LPDEVMODE, LPSTR, UINT);

typedef struct tagEMRSELECTCLIPPATH EMRSETICMMODE;

typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYGON16;

typedef struct tagEMRPIXELFORMAT EMRPIXELFORMAT;

typedef struct tagEMRELLIPSE EMRRECTANGLE;

typedef struct _PSFEATURE_CUSTPAPER *PPSFEATURE_CUSTPAPER;

typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;

typedef struct tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;

typedef struct tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

typedef struct tagEMRARC *PEMRCHORD;

typedef EXTLOGFONTA EXTLOGFONT;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILEW;

typedef struct _ABC ABC;

typedef struct tagCOLORCORRECTPALETTE EMRCOLORCORRECTPALETTE;

typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSETICMPROFILE *PEMRSETICMPROFILEA;

typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIER;

typedef struct tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;

typedef struct tagDIBSECTION DIBSECTION;

typedef struct tagEMRPOLYLINE *PEMRPOLYGON;

typedef struct tagLOGBRUSH *NPLOGBRUSH;

typedef struct tagTEXTMETRICW *NPTEXTMETRICW;

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRGLSRECORD *PEMRGLSRECORD;

typedef struct _WGLSWAP WGLSWAP;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;

typedef struct tagPANOSE *LPPANOSE;

typedef struct tagABORTPATH EMRREALIZEPALETTE;

typedef struct tagPOLYTEXTW *LPPOLYTEXTW;

typedef struct tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;

typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;

typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;

typedef struct _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

typedef struct _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;

typedef struct tagMETAFILEPICT *LPMETAFILEPICT;

typedef OLDFONTENUMPROCW FONTENUMPROCW;

typedef struct _devicemodeW DEVMODEW;

typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;

typedef NPPOLYTEXTA NPPOLYTEXT;

typedef struct tagEMREXTESCAPE EMREXTESCAPE;

typedef struct tagEMREXTESCAPE *PEMREXTESCAPE;

typedef struct tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;

typedef struct tagEMRFILLRGN *PEMRFILLRGN;

typedef struct _GRADIENT_RECT *PGRADIENT_RECT;

typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;

typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;

typedef struct tagABORTPATH EMRABORTPATH;

typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;

typedef struct tagEMRMASKBLT *PEMRMASKBLT;

typedef struct tagEMRPOLYLINE EMRPOLYLINE;

typedef struct tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;

typedef struct tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

typedef struct tagEMRLINETO *PEMRMOVETOEX;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILE;

typedef struct _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;

typedef struct tagENUMLOGFONTW ENUMLOGFONTW;

typedef struct tagEMREOF EMREOF;

typedef struct tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;

typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE;

typedef struct tagBITMAPCOREINFO *LPBITMAPCOREINFO;

typedef struct tagLOGPALETTE *PLOGPALETTE;

typedef struct tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;

typedef struct tagEMREXTESCAPE *PEMRDRAWESCAPE;

typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;

typedef struct tagEMRINVERTRGN *PEMRINVERTRGN;

typedef DOCINFOA DOCINFO;

typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;

typedef struct tagCOLORMATCHTOTARGET *PEMRCOLORMATCHTOTARGET;

typedef struct tagEMRPOLYDRAW *PEMRPOLYDRAW;

typedef struct tagEMRFILLPATH EMRFILLPATH;

typedef struct tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;

typedef struct tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;

typedef struct tagBITMAPINFOHEADER *PBITMAPINFOHEADER;

typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;

typedef struct tagEMREOF *PEMREOF;

typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINETO16;

typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;

typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;

typedef struct tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;

typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;

typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;

typedef struct _WGLSWAP *PWGLSWAP;

typedef struct _PSFEATURE_OUTPUT PSFEATURE_OUTPUT;

typedef struct tagEMRSELECTPALETTE *PEMRSELECTPALETTE;

typedef struct tagEMRBITBLT *PEMRBITBLT;

typedef struct tagEMRTRANSPARENTBLT EMRTRANSPARENTBLT;

typedef struct tagMETARECORD *PMETARECORD;

typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;

typedef struct _ABCFLOAT ABCFLOAT;

typedef struct tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;

typedef struct tagLOGPALETTE *LPLOGPALETTE;

typedef struct tagEMRSELECTOBJECT *PEMRDELETEOBJECT;

typedef struct tagPELARRAY *NPPELARRAY;

typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;

typedef struct _DISPLAY_DEVICEW DISPLAY_DEVICEW;

typedef struct tagEMRGRADIENTFILL EMRGRADIENTFILL;

typedef PATTERN *PPATTERN;

typedef struct tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;

typedef struct _POINTFLOAT *PPOINTFLOAT;

typedef struct tagLOGPEN *NPLOGPEN;

typedef BOOL (*ABORTPROC)(HDC, int);

typedef struct tagABORTPATH *PEMRABORTPATH;

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;

typedef struct tagABORTPATH EMRFLATTENPATH;

typedef struct tagMETAHEADER METAHEADER;

typedef PEXTLOGFONTA PEXTLOGFONT;

typedef struct _TRIVERTEX *PTRIVERTEX;

typedef struct tagEMRARC *PEMRARC;

typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;

typedef struct tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;

typedef struct tagEMRPOLYLINE EMRPOLYLINETO;

typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;

typedef struct tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;

typedef struct tagFONTSIGNATURE *LPFONTSIGNATURE;

typedef struct tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;

typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;

typedef struct tagEMRARC *PEMRARCTO;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;

typedef struct tagEMRSTRETCHBLT *PEMRSTRETCHBLT;

typedef struct tagMETARECORD *LPMETARECORD;

typedef struct tagEMRCREATEPALETTE *PEMRCREATEPALETTE;

typedef struct tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;

#define SETICMPROFILE_EMBEDED 1

#define DMPAPER_A6_ROTATED 83

#define PAN_LETT_NORMAL_BOXED 4

#define DMPAPER_LETTER_TRANSVERSE 54

#define PATPAINT 16452105

#define HEBREW_CHARSET 177

#define SET_ARC_DIRECTION 4102

#define GETFACENAME 513

#define DEFAULT_QUALITY 0

#define EMR_EXTCREATEFONTINDIRECTW 82

#define META_DELETEOBJECT 496

#define GETSETSCREENPARAMS 3072

#define CCHDEVICENAME 32

#define TA_CENTER 6

#define LC_INTERIORS 128

#define QUERYDIBSUPPORT 3073

#define LCS_CALIBRATED_RGB 0

#define PAN_STRAIGHT_ARMS_WEDGE 3

#define DMRES_DRAFT -1

#define META_ARC 2071

#define META_EXCLUDECLIPRECT 1045

#define DC_MODEL 24

#define PT_MOVETO 6

#define META_SETVIEWPORTEXT 526

#define PAN_CONTRAST_NONE 2

#define NTM_DSIG 2097152

#define SYSTEM_FIXED_FONT 16

#define GGO_GRAY4_BITMAP 5

#define META_CREATEREGION 1791

#define DESKTOPVERTRES 117

#define PAN_SERIF_NORMAL_SANS 11

#define ICM_DONE_OUTSIDEDC 4

#define DMPAPER_JENV_CHOU4_ROTATED 87

#define PAN_SERIF_PERP_SANS 13

#define HORZRES 8

#define HALFTONE 4

#define DMDITHER_FINE 3

#define RELATIVE 2

#define EMR_POLYGON 3

#define VTA_CENTER 6

#define NUMBRUSHES 16

#define SETDIBSCALING 32

#define FEATURESETTING_OUTPUT 1

#define PRINTRATEUNIT_CPS 2

#define GCP_NUMERICSLOCAL 134217728

#define DMPAPER_10X11 45

#define DMPAPER_DBL_JAPANESE_POSTCARD 69

#define DMBIN_USER 256

#define DMPAPER_10X14 16

#define DMPAPER_A_PLUS 57

#define EMR_SETPOLYFILLMODE 19

#define PSPROTOCOL_BINARY 3

#define DT_CHARSTREAM 4

#define ENUMPAPERBINS 31

#define ENABLEPAIRKERNING 769

#define EMR_SETWINDOWORGEX 10

#define PFD_SWAP_EXCHANGE 512

#define DMORIENT_PORTRAIT 1

#define TT_PRIM_LINE 1

#define SPCLPASSTHROUGH2 4568

#define DEVICE_DEFAULT_FONT 14

#define ENABLERELATIVEWIDTHS 768

#define RC_FLOODFILL 4096

#define FS_SYMBOL 2147483648

#define GETPAIRKERNTABLE 258

#define PAN_WEIGHT_DEMI 7

#define ILLUMINANT_F2 8

#define DC_COLLATE 22

#define LPD_TYPE_COLORINDEX 1

#define PAN_FAMILYTYPE_INDEX 0

#define GDICOMMENT_MULTIFORMATS 1073741828

#define DMPAPER_A4_EXTRA 53

#define R2_MASKPENNOT 5

#define META_CREATEPATTERNBRUSH 505

#define SB_PREMULT_ALPHA 4

#define EMR_POLYPOLYGON16 91

#define PAN_FAMILY_PICTORIAL 5

#define PC_STYLED 32

#define META_SETPIXEL 1055

#define DMPAPER_A3_ROTATED 76

#define CC_NONE 0

#define R2_BLACK 1

#define GETPRINTINGOFFSET 13

#define DMCOLLATE_FALSE 0

#define DISPLAY_DEVICE_DISCONNECT 33554432

#define HANGEUL_CHARSET 129

#define SETMITERLIMIT 23

#define SYSPAL_NOSTATIC256 3

#define ILLUMINANT_FLUORESCENT 8

#define PAN_SERIF_THIN 7

#define RC_SAVEBITMAP 64

#define TA_NOUPDATECP 0

#define ENCAPSULATED_POSTSCRIPT 4116

#define META_FILLREGION 552

#define FF_SWISS 32

#define END_PATH 4098

#define GCPGLYPH_LINKAFTER 16384

#define TC_CR_ANY 16

#define LCS_GM_IMAGES 4

#define DMPAPER_P32K_ROTATED 107

#define EMR_POLYTEXTOUTA 96

#define EMR_POLYTEXTOUTW 97

#define TA_BOTTOM 8

#define PAN_MIDLINE_CONSTANT_SERIFED 10

#define DM_NUP 64

#define CC_WIDESTYLED 64

#define MM_LOENGLISH 4

#define PAN_SERIF_EXAGGERATED 9

#define TC_SA_CONTIN 256

#define RC_OP_DX_OUTPUT 16384

#define SRCINVERT 6684742

#define VTA_BASELINE 24

#define PT_BEZIERTO 4

#define BS_DIBPATTERN 5

#define PANOSE_COUNT 10

#define GCP_SYMSWAPOFF 8388608

#define PS_STYLE_MASK 15

#define DMPAPER_B5_JIS_ROTATED 80

#define GETDEVICEUNITS 42

#define PAN_XHEIGHT_INDEX 9

#define EMR_OFFSETCLIPRGN 26

#define PS_DASH 1

#define PFD_DOUBLEBUFFER_DONTCARE 1073741824

#define RC_DEVBITS 32768

#define REFERENCE_WHITE_MIN 6000

#define SET_SPREAD 4106

#define WGL_SWAPMULTIPLE_MAX 16

#define COLOR_ADJ_MIN -100

#define DMPAPER_PENV_10 105

#define DMPAPER_TABLOID 3

#define MM_ANISOTROPIC 8

#define DMPAPER_B5_TRANSVERSE 62

#define DMPAPER_LEDGER 4

#define PAN_LETT_OBLIQUE_FLATTENED 12

#define GM_LAST 2

#define PAN_SERIF_COVE 2

#define CLIP_STROKE_PRECIS 2

#define MONO_FONT 8

#define PAN_MIDLINE_STANDARD_TRIMMED 2

#define PAN_PROP_MODERN 3

#define PFD_SUPPORT_GDI 16

#define EMR_MAX 122

#define ILLUMINANT_B 2

#define ILLUMINANT_C 3

#define ILLUMINANT_A 1

#define META_POLYPOLYGON 1336

#define EMR_STROKEPATH 64

#define PC_RECTANGLE 2

#define PSINJECT_VMRESTORE 201

#define CM_DEVICE_ICM 1

#define PSINJECT_BEGINSETUP 16

#define GGO_BITMAP 1

#define TC_SF_X_YINDEP 32

#define DMPAPER_B5 13

#define DMPAPER_B4 12

#define COLOR_ADJ_MAX 100

#define GREEK_CHARSET 161

#define FS_TURKISH 16

#define PC_PATHS 512

#define GETTRACKKERNTABLE 259

#define PRINTRATEUNIT_PPM 1

#define PAN_STROKE_RAPID_VERT 6

#define EMR_CHORD 46

#define DMPAPER_JENV_KAKU3_ROTATED 85

#define SRCERASE 4457256

#define META_INTERSECTCLIPRECT 1046

#define TC_UA_ABLE 2048

#define META_EXTTEXTOUT 2610

#define DMPAPER_A6 70

#define DMPAPER_A5 11

#define RC_BITMAP64 8

#define DMPAPER_A2 66

#define DMPAPER_A4 9

#define DMPAPER_A3 8

#define NUMPENS 18

#define DMDITHER_COARSE 2

#define TA_LEFT 0

#define PAN_PROP_VERY_EXPANDED 7

#define PFD_GENERIC_FORMAT 64

#define OUT_CHARACTER_PRECIS 2

#define SETABORTPROC 9

#define EASTEUROPE_CHARSET 238

#define PAN_XHEIGHT_CONSTANT_SMALL 2

#define DMICM_ABS_COLORIMETRIC 4

#define EMR_ARCTO 55

#define BS_HOLLOW 1

#define PT_CLOSEFIGURE 1

#define EMR_CREATEDIBPATTERNBRUSHPT 94

#define LTGRAY_BRUSH 1

#define DMPAPER_USER 256

#define GET_PS_FEATURESETTING 4121

#define EMR_EXCLUDECLIPRECT 29

#define SB_NONE 0

#define PFD_GENERIC_ACCELERATED 4096

#define WGL_SWAP_UNDERLAY6 2097152

#define WGL_SWAP_UNDERLAY5 1048576

#define WGL_SWAP_UNDERLAY8 8388608

#define WGL_SWAP_UNDERLAY7 4194304

#define CS_DISABLE 2

#define WGL_SWAP_UNDERLAY2 131072

#define WGL_SWAP_UNDERLAY1 65536

#define WGL_SWAP_UNDERLAY4 524288

#define WGL_SWAP_UNDERLAY3 262144

#define RC_STRETCHDIB 8192

#define WGL_SWAP_UNDERLAY9 16777216

#define R2_XORPEN 7

#define EMR_STRETCHBLT 77

#define PSINJECT_DOCSUPPLIEDRES 6

#define DM_SPECVERSION 1025

#define DMPAPER_PENV_8_ROTATED 116

#define PC_NONE 0

#define GETPHYSPAGESIZE 12

#define DMPAPER_ENV_C65 32

#define META_SETTEXTJUSTIFICATION 522

#define PSINJECT_PAGEORDER 7

#define DCTT_BITMAP 1

#define LPD_SUPPORT_OPENGL 32

#define PSINJECT_PLATECOLOR 104

#define HORZSIZE 4

#define DMPAPER_B6_JIS 88

#define EXT_DEVICE_CAPS 4099

#define BLACK_BRUSH 4

#define EMR_POLYBEZIERTO16 88

#define META_BITBLT 2338

#define PATCOPY 15728673

#define PAN_CONTRAST_LOW 4

#define TEXTCAPS 34

#define DMBIN_AUTO 7

#define R2_MERGEPEN 15

#define EMR_GLSRECORD 102

#define TC_IA_ABLE 1024

#define CLIP_CHARACTER_PRECIS 1

#define PAN_WEIGHT_BOOK 5

#define PAN_MIDLINE_INDEX 8

#define PFD_STEREO_DONTCARE 2147483648

#define FW_BLACK 900

#define EMR_BEGINPATH 59

#define DM_ICMINTENT 16777216

#define WGL_SWAP_OVERLAY10 1024

#define ANTIALIASED_QUALITY 4

#define WGL_SWAP_OVERLAY11 2048

#define WGL_SWAP_OVERLAY12 4096

#define WGL_SWAP_OVERLAY13 8192

#define WGL_SWAP_OVERLAY14 16384

#define WGL_SWAP_OVERLAY15 32768

#define ANSI_VAR_FONT 12

#define DISPLAY_DEVICE_ACTIVE 1

#define AC_SRC_ALPHA 1

#define PSINJECT_BOUNDINGBOX 9

#define DMTT_BITMAP 1

#define DMMEDIA_TRANSPARENCY 2

#define EMR_GRADIENTFILL 118

#define SB_GRAD_RECT 16

#define BEGIN_PATH 4096

#define GCPCLASS_LOCALNUMBER 4

#define DMPAPER_TABLOID_EXTRA 52

#define PSINJECT_PAGEBBOX 106

#define META_SETTEXTCHAREXTRA 264

#define PAN_STROKE_GRADUAL_HORZ 5

#define PC_WIDE 16

#define EMR_POLYPOLYLINE16 90

#define EMR_SETCOLORADJUSTMENT 23

#define DT_RASPRINTER 2

#define DMBIN_FIRST 1

#define EMR_MIN 1

#define BI_RGB 0

#define GETEXTENDEDTEXTMETRICS 256

#define DCB_RESET 1

#define DMICMMETHOD_DEVICE 4

#define PSINJECT_ENDSETUP 17

#define CLOSECHANNEL 4112

#define DM_PANNINGHEIGHT 268435456

#define LF_FACESIZE 32

#define ETO_OPAQUE 2

#define DMORIENT_LANDSCAPE 2

#define CC_WIDE 16

#define META_SETPOLYFILLMODE 262

#define DMPAPER_EXECUTIVE 7

#define R2_MERGEPENNOT 14

#define ASPECTX 40

#define ILLUMINANT_DAYLIGHT 3

#define ASPECTY 42

#define EMR_COLORCORRECTPALETTE 111

#define GCP_CLASSIN 524288

#define DT_PLOTTER 0

#define R2_NOTMASKPEN 8

#define VTA_RIGHT 0

#define DMBIN_MANUAL 4

#define EMR_POLYLINETO 6

#define EMR_DELETECOLORSPACE 101

#define ERROR 0

#define DMDITHER_LINEART 4

#define EMR_SETMAPMODE 17

#define META_CREATEPENINDIRECT 762

#define SP_APPABORT -2

#define FW_REGULAR 400

#define MFCOMMENT 15

#define DISPLAY_DEVICE_ATTACHED 2

#define PS_ENDCAP_FLAT 512

#define PAN_STRAIGHT_ARMS_HORZ 2

#define DM_DEFAULTSOURCE 512

#define PFD_SUPPORT_OPENGL 32

#define EMR_POLYDRAW16 92

#define PAN_SERIF_FLARED 14

#define CHECKJPEGFORMAT 4119

#define MWT_IDENTITY 1

#define EMR_REALIZEPALETTE 52

#define FW_HEAVY 900

#define LPD_TYPE_RGBA 0

#define BS_PATTERN 3

#define PSINJECT_BEGINPAGESETUP 101

#define DIB_RGB_COLORS 0

#define QUERYESCSUPPORT 8

#define DM_TTOPTION 16384

#define CM_IN_GAMUT 0

#define ARABIC_CHARSET 178

#define META_POLYLINE 805

#define PAN_MIDLINE_LOW_SERIFED 13

#define EMR_HEADER 1

#define EPS_SIGNATURE 1179865157

#define SELECTPAPERSOURCE 18

#define EMR_RECTANGLE 43

#define DMBIN_TRACTOR 8

#define CHINESEBIG5_CHARSET 136

#define FF_ROMAN 16

#define STARTDOC 10

#define BALTIC_CHARSET 186

#define MERGECOPY 12583114

#define TMPF_TRUETYPE 4

#define META_FLOODFILL 1049

#define GETSCALINGFACTOR 14

#define PAN_LETT_OBLIQUE_ROUNDED 13

#define DMPAPER_LETTER_ROTATED 75

#define VREFRESH 116

#define EMR_FLATTENPATH 65

#define NOTSRCERASE 1114278

#define CC_ELLIPSES 8

#define EMR_POLYDRAW 56

#define PAN_XHEIGHT_DUCKING_LARGE 7

#define META_ELLIPSE 1048

#define PAN_XHEIGHT_DUCKING_STD 6

#define VTA_BOTTOM 2

#define QDI_STRETCHDIB 8

#define GDICOMMENT_UNICODE_STRING 64

#define TMPF_FIXED_PITCH 1

#define MWT_LEFTMULTIPLY 2

#define RGN_AND 1

#define PAN_WEIGHT_BOLD 8

#define NEXTBAND 3

#define EMR_CLOSEFIGURE 61

#define PAN_CONTRAST_VERY_LOW 3

#define DMPAPER_PENV_6_ROTATED 114

#define PR_JOBSTATUS 0

#define VTA_LEFT 8

#define DC_PRINTRATEPPM 31

#define DM_POSITION 32

#define CLIP_LH_ANGLES 16

#define DM_ORIENTATION 1

#define OUT_OUTLINE_PRECIS 8

#define TCI_SRCCHARSET 1

#define ELF_VERSION 0

#define FF_MODERN 48

#define NUMCOLORS 24

#define COLORMATCHTOTARGET_EMBEDED 1

#define OUT_DEFAULT_PRECIS 0

#define FF_DONTCARE 0

#define PAN_BENT_ARMS_SINGLE_SERIF 10

#define PAN_LETT_NORMAL_WEIGHTED 3

#define TC_RESERVED 32768

#define DISPLAY_DEVICE_VGA_COMPATIBLE 16

#define PAN_STROKE_GRADUAL_TRAN 3

#define CA_NEGATIVE 1

#define SB_GRAD_TRI 32

#define DEFAULT_PALETTE 15

#define BANDINFO 24

#define GCP_LIGATE 32

#define DM_PAPERSIZE 2

#define STRETCH_ANDSCANS 1

#define GCP_NUMERICSLATIN 67108864

#define DMBIN_CASSETTE 14

#define CC_STYLED 32

#define CREATECOLORSPACE_EMBEDED 1

#define ICM_QUERYPROFILE 3

#define PHYSICALWIDTH 110

#define PS_ENDCAP_SQUARE 256

#define TA_TOP 0

#define PAN_FAMILY_TEXT_DISPLAY 2

#define PC_NOCOLLAPSE 4

#define NULL_PEN 8

#define ICM_REGISTERICMATCHER 5

#define TC_OP_STROKE 2

#define DM_PRINTQUALITY 1024

#define MOUSETRAILS 39

#define DT_METAFILE 5

#define DMPAPER_DSHEET 25

#define EMR_TRANSPARENTBLT 116

#define CM_NONE 0

#define PAN_WEIGHT_HEAVY 9

#define CHECKPNGFORMAT 4120

#define GCPCLASS_LATINNUMERICTERMINATOR 6

#define DMDUP_SIMPLEX 1

#define LAYOUT_VBH 4

#define DC_PRINTRATE 26

#define OBJ_COLORSPACE 14

#define COLORRES 108

#define PAN_STRAIGHT_ARMS_SINGLE_SERIF 5

#define EMR_PLGBLT 79

#define MM_HIMETRIC 3

#define PAN_LETT_OBLIQUE_WEIGHTED 10

#define PFD_STEREO 2

#define NOMIRRORBITMAP 2147483648

#define FS_CHINESETRAD 1048576

#define QDI_SETDIBITS 1

#define EMR_CREATEPALETTE 49

#define OPAQUE 2

#define META_SETSTRETCHBLTMODE 263

#define R2_LAST 16

#define CC_CHORD 4

#define DMPAPER_PENV_4 99

#define PC_TRAPEZOID 4

#define DMPAPER_PENV_5 100

#define DMPAPER_PENV_2 97

#define PS_ENDCAP_MASK 3840

#define DMPAPER_PENV_3 98

#define DMPAPER_PENV_8 103

#define DMPAPER_PENV_9 104

#define DISPLAY_DEVICE_MULTI_DRIVER 2

#define DMPAPER_PENV_6 101

#define DMPAPER_PENV_7 102

#define PAN_LETT_NORMAL_OFF_CENTER 7

#define EMR_GLSBOUNDEDRECORD 103

#define DMPAPER_PENV_1 96

#define BS_DIBPATTERN8X8 8

#define DRIVERVERSION 0

#define TT_POLYGON_TYPE 24

#define PSINJECT_PAGES 4

#define TC_SA_DOUBLE 64

#define SCALINGFACTORX 114

#define EMR_POLYGON16 86

#define SCALINGFACTORY 115

#define DMPAPER_LAST 118

#define GETTECHNOLOGY 20

#define PSINJECT_DOCNEEDEDRES 5

#define CS_DELETE_TRANSFORM 3

#define GETSETPRINTORIENT 30

#define HS_HORIZONTAL 0

#define META_SETLAYOUT 329

#define DMPAPER_JENV_KAKU2_ROTATED 84

#define SB_CONST_ALPHA 1

#define SETCOPYCOUNT 17

#define BLTALIGNMENT 119

#define EMR_SETLAYOUT 115

#define SETALLJUSTVALUES 771

#define PSINJECT_ENDPAGESETUP 102

#define SP_USERABORT -3

#define TC_EA_DOUBLE 512

#define DMNUP_ONEUP 2

#define META_FRAMEREGION 1065

#define SET_POLY_MODE 4104

#define GCP_KASHIDA 1024

#define NUMFONTS 22

#define PC_POLYPOLYGON 256

#define OBJ_DC 3

#define DM_SCALE 16

#define PS_USERSTYLE 7

#define BLACKNESS 66

#define GCP_USEKERNING 8

#define CM_GAMMA_RAMP 2

#define DMRES_HIGH -4

#define PAN_PROP_EVEN_WIDTH 4

#define SP_ERROR -1

#define EMR_CREATEPEN 38

#define LC_POLYMARKER 8

#define META_STRETCHDIB 3907

#define EMR_SETCOLORSPACE 100

#define BS_HATCHED 2

#define EMR_POLYLINE 4

#define PFD_SWAP_COPY 1024

#define ELF_VENDOR_SIZE 4

#define PSINJECT_VMSAVE 200

#define DMPAPER_A4_ROTATED 77

#define EMR_SELECTCLIPPATH 67

#define GDI_ERROR 4294967295

#define GRADIENT_FILL_TRIANGLE 2

#define ETO_GLYPH_INDEX 16

#define PC_RESERVED 1

#define R2_MASKNOTPEN 3

#define GDICOMMENT_IDENTIFIER 1128875079

#define ENABLEDUPLEX 28

#define TT_PRIM_QSPLINE 2

#define EMR_RESTOREDC 34

#define THAI_CHARSET 222

#define PS_ENDCAP_ROUND 0

#define FS_GREEK 8

#define DMPAPER_ESHEET 26

#define PAN_STROKE_INSTANT_VERT 8

#define NEWFRAME 1

#define PAN_ANY 0

#define DMRES_MEDIUM -3

#define NULL_BRUSH 5

#define META_CHORD 2096

#define STRETCH_ORSCANS 2

#define DRAFT_QUALITY 1

#define OUT_SCREEN_OUTLINE_PRECIS 9

#define PAN_CONTRAST_VERY_HIGH 9

#define PAN_BENT_ARMS_HORZ 7

#define GCPCLASS_POSTBOUNDRTL 16

#define DMPAPER_PENV_9_ROTATED 117

#define EMR_PIE 47

#define PAN_BENT_ARMS_WEDGE 8

#define DISPLAY_DEVICE_REMOTE 67108864

#define ETO_NUMERICSLATIN 2048

#define DMPAPER_FANFOLD_LGL_GERMAN 41

#define BS_MONOPATTERN 9

#define ILLUMINANT_MAX_INDEX 8

#define EMR_POLYPOLYLINE 7

#define R2_NOTCOPYPEN 4

#define DMPAPER_FANFOLD_US 39

#define FLUSHOUTPUT 6

#define REFERENCE_WHITE_MAX 10000

#define LPD_SWAP_EXCHANGE 512

#define GCPCLASS_ARABIC 2

#define FS_VIETNAMESE 256

#define META_RESIZEPALETTE 313

#define DMPAPER_NOTE 18

#define EMR_BITBLT 76

#define ILLUMINANT_D55 5

#define DEVICE_FONTTYPE 2

#define EMR_EXTTEXTOUTW 84

#define META_SETBKMODE 258

#define POLYFILL_LAST 2

#define ILLUMINANT_D50 4

#define META_SETTEXTALIGN 302

#define GCP_JUSTIFY 65536

#define META_SETPALENTRIES 55

#define EMR_EXTTEXTOUTA 83

#define FW_DEMIBOLD 600

#define DM_COPIES 256

#define FW_MEDIUM 500

#define PSINJECT_ENDDEFAULTS 13

#define ICM_UNREGISTERICMATCHER 6

#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF 6

#define DC_MANUFACTURER 23

#define FIXED_PITCH 1

#define FW_ULTRABOLD 800

#define DMDITHER_RESERVED9 9

#define DMDITHER_RESERVED8 8

#define DMPAPER_LETTER_PLUS 59

#define NOTSRCCOPY 3342344

#define FEATURESETTING_NUP 0

#define DMDITHER_RESERVED7 7

#define GCPCLASS_LATIN 1

#define DMDITHER_RESERVED6 6

#define HOLLOW_BRUSH 5

#define NTM_NONNEGATIVE_AC 65536

#define PSINJECT_BEGINDEFAULTS 12

#define SB_PIXEL_ALPHA 2

#define DT_DISPFILE 6

#define EMR_POLYLINE16 87

#define RGN_DIFF 4

#define OUT_DEVICE_PRECIS 5

#define DMPAPER_PENV_5_ROTATED 113

#define PAN_WEIGHT_NORD 11

#define PRINTRATEUNIT_LPM 3

#define OBJ_MEMDC 10

#define VARIABLE_PITCH 2

#define LINECAPS 30

#define DMPAPER_ENV_ITALY 36

#define LC_POLYLINE 2

#define EMR_POLYBEZIER 2

#define SYSPAL_STATIC 1

#define PC_EXPLICIT 2

#define DCBA_FACEUPRIGHT 3

#define FW_EXTRALIGHT 200

#define DMPAPER_LETTERSMALL 2

#define DC_PRINTERMEM 28

#define FS_HEBREW 32

#define DM_PELSHEIGHT 1048576

#define GB2312_CHARSET 134

#define RC_GDI20_STATE 32

#define PSIDENT_PSCENTRIC 1

#define EXTTEXTOUT 512

#define ICM_DELETEPROFILE 2

#define EMR_SETWORLDTRANSFORM 35

#define GGO_BEZIER 3

#define DMCOLOR_MONOCHROME 1

#define PAN_PROP_CONDENSED 6

#define RC_DIBTODEV 512

#define RC_PALETTE 256

#define GCP_NEUTRALOVERRIDE 33554432

#define WGL_FONT_LINES 0

#define EMR_DELETEOBJECT 40

#define DCBA_FACEUPLEFT 2

#define CCHFORMNAME 32

#define PS_JOIN_MASK 61440

#define BS_PATTERN8X8 7

#define DMMEDIA_USER 256

#define OBJ_PEN 1

#define DSTINVERT 5570569

#define DMPAPER_LEGAL_EXTRA 51

#define NUMMARKERS 20

#define RC_BITBLT 1

#define PAN_CONTRAST_MEDIUM_LOW 5

#define SYSRGN 4

#define BLACK_PEN 7

#define PAN_LETT_NORMAL_ROUNDED 6

#define EMR_COLORMATCHTOTARGETW 121

#define TA_MASK 287

#define CP_RECTANGLE 1

#define DMICMMETHOD_USER 256

#define DMICM_CONTRAST 2

#define FW_NORMAL 400

#define DMICM_SATURATE 1

#define PFD_DEPTH_DONTCARE 536870912

#define EMR_SETVIEWPORTORGEX 12

#define COLORONCOLOR 3

#define DI_ROPS_READ_DESTINATION 2

#define DMDUP_HORIZONTAL 3

#define DCB_ENABLE 4

#define META_RECTANGLE 1051

#define FS_THAI 65536

#define CC_ROUNDRECT 256

#define META_DIBBITBLT 2368

#define DMRES_LOW -2

#define DMPAPER_B5_EXTRA 65

#define RC_BANDING 2

#define EMR_POLYLINETO16 89

#define TT_PRIM_CSPLINE 3

#define TA_BASELINE 24

#define PAN_LETT_OBLIQUE_BOXED 11

#define DC_BINADJUST 19

#define GETVECTORBRUSHSIZE 27

#define DCTT_SUBDEV 4

#define DCBA_FACEDOWNCENTER 257

#define META_ESCAPE 1574

#define META_SETRELABS 261

#define DT_RASCAMERA 3

#define GETEXTENTTABLE 257

#define OBJ_PAL 5

#define DMBIN_LARGEFMT 10

#define DCB_DIRTY 2

#define ILLUMINANT_D75 7

#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82

#define DMCOLLATE_TRUE 1

#define META_SELECTCLIPREGION 300

#define EMR_ROUNDRECT 44

#define DISPLAY_DEVICE_REMOVABLE 32

#define ILLUMINANT_D65 6

#define DMPAPER_P32KBIG_ROTATED 108

#define SP_NOTREPORTED 16384

#define DCBA_FACEUPNONE 0

#define FLI_MASK 4155

#define OEM_FIXED_FONT 10

#define PAN_WEIGHT_BLACK 10

#define EMR_SETVIEWPORTEXTEX 11

#define LF_FULLFACESIZE 64

#define DOWNLOADHEADER 4111

#define GRAY_BRUSH 2

#define PS_COSMETIC 0

#define EMR_SETMITERLIMIT 58

#define DMICMMETHOD_DRIVER 3

#define PSINJECT_PAGESATEND 3

#define PAN_WEIGHT_THIN 4

#define DCB_ACCUMULATE 2

#define DMPAPER_FOLIO 14

#define EMR_SELECTPALETTE 48

#define EMR_MASKBLT 78

#define DMPAPER_9X11 44

#define META_SCALEVIEWPORTEXT 1042

#define FEATURESETTING_PRIVATE_BEGIN 4096

#define PAN_CONTRAST_INDEX 4

#define FW_DONTCARE 0

#define COLORMGMTCAPS 121

#define EMR_FILLPATH 62

#define FW_ULTRALIGHT 200

#define PATINVERT 5898313

#define SHIFTJIS_CHARSET 128

#define ILLUMINANT_TUNGSTEN 1

#define PAN_WEIGHT_LIGHT 3

#define PSINJECT_BEGINPROLOG 14

#define LC_WIDE 16

#define SYMBOL_CHARSET 2

#define R2_NOT 6

#define R2_NOP 11

#define PS_DASHDOT 3

#define PAN_MIDLINE_LOW_TRIMMED 11

#define EMR_GDICOMMENT 70

#define SAVE_CTM 4101

#define SETCHARSET 772

#define DMPAPER_JENV_YOU4_ROTATED 92

#define SET_SCREEN_ANGLE 4105

#define DM_MEDIATYPE 33554432

#define DCB_DISABLE 8

#define RC_DI_BITMAP 128

#define WHITE_PEN 6

#define RC_GDI20_OUTPUT 16

#define CURVECAPS 28

#define LPD_DOUBLEBUFFER 1

#define PHYSICALHEIGHT 111

#define META_SELECTOBJECT 301

#define DC_DATATYPE_PRODUCED 21

#define EMR_SCALEWINDOWEXTEX 32

#define OBJ_ENHMETADC 12

#define DRAFTMODE 7

#define RGN_XOR 3

#define PAN_PROP_VERY_CONDENSED 8

#define FS_JOHAB 2097152

#define MWT_MAX 3

#define FW_BOLD 700

#define META_SETWINDOWEXT 524

#define LC_NONE 0

#define SETKERNTRACK 770

#define PAN_SERIF_ROUNDED 15

#define PFD_SUPPORT_DIRECTDRAW 8192

#define MM_HIENGLISH 5

#define GGO_GLYPH_INDEX 128

#define MM_TWIPS 6

#define ICM_OFF 1

#define DKGRAY_BRUSH 3

#define META_PAINTREGION 299

#define PAN_WEIGHT_VERY_LIGHT 2

#define EMR_SETTEXTALIGN 22

#define RC_BIGFONT 1024

#define DMPAPER_A3_EXTRA_TRANSVERSE 68

#define META_SCALEWINDOWEXT 1040

#define DMPAPER_LETTER 1

#define DMDISPLAYFLAGS_TEXTMODE 4

#define META_CREATEFONTINDIRECT 763

#define DC_PRINTRATEUNIT 27

#define OBJ_BITMAP 7

#define PSINJECT_EOF 19

#define EMR_EXTSELECTCLIPRGN 75

#define META_TEXTOUT 1313

#define PAN_PROP_OLD_STYLE 2

#define ETO_RTLREADING 128

#define DMPAPER_P32KBIG 95

#define PAN_CONTRAST_MEDIUM 6

#define RDH_RECTANGLES 1

#define ETO_IGNORELANGUAGE 4096

#define LCS_GM_GRAPHICS 2

#define ANSI_FIXED_FONT 11

#define DMPAPER_ENV_INVITE 47

#define CLR_INVALID 4294967295

#define OBJ_FONT 6

#define EMR_CREATECOLORSPACEW 122

#define PAN_MIDLINE_CONSTANT_POINTED 9

#define OBJ_EXTPEN 11

#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 1

#define DC_PERSONALITY 25

#define PS_DASHDOTDOT 4

#define PAN_STRAIGHT_ARMS_VERT 4

#define DMPAPER_LETTER_EXTRA_TRANSVERSE 56

#define DMPAPER_QUARTO 15

#define META_PIE 2074

#define ENHMETA_STOCK_OBJECT 2147483648

#define DMPAPER_A3_EXTRA 63

#define DM_BITSPERPEL 262144

#define PSPROTOCOL_TBCP 2

#define GGO_METRICS 0

#define TURKISH_CHARSET 162

#define META_CREATEPALETTE 247

#define TC_OP_CHARACTER 1

#define MM_MAX 8

#define DM_DISPLAYFREQUENCY 4194304

#define DMPAPER_B6_JIS_ROTATED 89

#define DMPAPER_LEGAL 5

#define FEATURESETTING_PROTOCOL 6

#define RESTORE_CTM 4100

#define RGB_GAMMA_MAX 65000

#define PAN_STROKE_RAPID_HORZ 7

#define MWT_MIN 1

#define RGN_ERROR 0

#define HS_VERTICAL 1

#define PAN_XHEIGHT_CONSTANT_STD 3

#define DCTT_DOWNLOAD 2

#define LAYOUT_RTL 1

#define DMPAPER_FIRST 1

#define EMR_SETROP2 20

#define DMPAPER_PENV_4_ROTATED 112

#define DMPAPER_A5_TRANSVERSE 61

#define PFD_OVERLAY_PLANE 1

#define POSTSCRIPT_INJECTION 4118

#define DMDITHER_ERRORDIFFUSION 5

#define LC_WIDESTYLED 64

#define CP_NONE 0

#define PSINJECT_PSADOBE 2

#define EMR_POLYPOLYGON 8

#define WINDING 2

#define PC_WIDESTYLED 64

#define NUMRESERVED 106

#define OUT_STRING_PRECIS 1

#define MERGEPAINT 12255782

#define EMR_WIDENPATH 66

#define EMR_STROKEANDFILLPATH 63

#define WHITEONBLACK 2

#define NONANTIALIASED_QUALITY 3

#define PAN_SERIF_SQUARE 6

#define PAN_MIDLINE_LOW_POINTED 12

#define GETCOLORTABLE 5

#define BI_RLE8 1

#define ETO_NUMERICSLOCAL 1024

#define PAN_LETT_NORMAL_FLATTENED 5

#define PLANES 14

#define DMPAPER_ENV_PERSONAL 38

#define PFD_NEED_PALETTE 128

#define WHITENESS 16711778

#define STOCK_LAST 19

#define TA_RIGHT 2

#define EMR_SETPIXELV 15

#define EMR_SCALEVIEWPORTEXTEX 31

#define EMR_PAINTRGN 74

#define DMBIN_ONLYONE 1

#define DMTT_DOWNLOAD_OUTLINE 4

#define WGL_FONT_POLYGONS 1

#define CAPTUREBLT 1073741824

#define GGO_GRAY2_BITMAP 4

#define LCS_GM_BUSINESS 1

#define VERTSIZE 6

#define MM_TEXT 1

#define BI_RLE4 2

#define GRADIENT_FILL_OP_FLAG 255

#define NTM_ITALIC 1

#define DMBIN_UPPER 1

#define PFD_TYPE_COLORINDEX 1

#define DESKTOPHORZRES 118

#define TC_SCROLLBLT 65536

#define PFD_SWAP_LAYER_BUFFERS 2048

#define PAN_STROKE_GRADUAL_VERT 4

#define PAN_LETTERFORM_INDEX 7

#define RGN_OR 2

#define DMPAPER_ENV_9 19

#define LAYOUT_ORIENTATIONMASK 7

#define OBJ_METADC 4

#define EMR_SETBKMODE 18

#define FW_EXTRABOLD 800

#define MM_MIN 1

#define GCP_DISPLAYZWG 4194304

#define OUT_STROKE_PRECIS 3

#define TC_CR_90 8

#define META_STRETCHBLT 2851

#define CC_CIRCLES 1

#define PS_TYPE_MASK 983040

#define R2_WHITE 16

#define EMR_FILLRGN 71

#define SETLINEJOIN 22

#define OBJ_METAFILE 9

#define RASTER_FONTTYPE 1

#define CLIP_MASK 15

#define POSTSCRIPT_IGNORE 38

#define PS_ALTERNATE 8

#define DMPAPER_LETTER_EXTRA 50

#define DMPAPER_ENV_14 23

#define DMPAPER_ENV_12 22

#define DMPAPER_ENV_11 21

#define DMPAPER_ENV_10 20

#define EMR_POLYBEZIER16 85

#define DMDITHER_USER 256

#define LPD_TRANSPARENT 4096

#define ASPECT_FILTERING 1

#define PAN_MIDLINE_STANDARD_SERIFED 4

#define REFERENCE_BLACK_MIN 0

#define DMICM_COLORIMETRIC 3

#define OUT_TT_ONLY_PRECIS 7

#define FLI_GLYPHS 262144

#define EMR_SETBKCOLOR 25

#define RGN_COPY 5

#define PAN_BENT_ARMS_DOUBLE_SERIF 11

#define EPSPRINTING 33

#define CC_PIE 2

#define POLYGONALCAPS 32

#define FF_DECORATIVE 80

#define META_REALIZEPALETTE 53

#define PS_DOT 2

#define DMNUP_SYSTEM 1

#define DM_YRESOLUTION 8192

#define TCI_SRCCODEPAGE 2

#define DMCOLOR_COLOR 2

#define DMPAPER_PENV_10_ROTATED 118

#define BITSPIXEL 12

#define SETCOLORTABLE 4

#define GCPCLASS_PREBOUNDLTR 128

#define DM_PANNINGWIDTH 134217728

#define MM_LOMETRIC 2

#define PAN_SERIF_OBTUSE_SANS 12

#define META_SETROP2 260

#define PAN_SERIF_OBTUSE_SQUARE_COVE 5

#define PS_JOIN_MITER 8192

#define DRAWPATTERNRECT 25

#define FEATURESETTING_CUSTPAPER 3

#define PAN_PROP_MONOSPACED 9

#define TA_RTLREADING 256

#define ICM_ON 2

#define PFD_TYPE_RGBA 0

#define DMPAPER_P16K 93

#define PC_POLYGON 1

#define HS_FDIAGONAL 2

#define OEM_CHARSET 255

#define PSPROTOCOL_ASCII 0

#define GCPGLYPH_LINKBEFORE 32768

#define DMPAPER_A5_EXTRA 64

#define TRANSPARENT 1

#define STRETCH_HALFTONE 4

#define DMPAPER_JAPANESE_POSTCARD_ROTATED 81

#define VERTRES 10

#define R2_COPYPEN 13

#define DC_MEDIATYPES 35

#define FS_ARABIC 64

#define TRUETYPE_FONTTYPE 4

#define FEATURESETTING_MIRROR 4

#define FS_WANSUNG 524288

#define PAN_WEIGHT_MEDIUM 6

#define ENHMETA_SIGNATURE 1179469088

#define PSINJECT_DOCUMENTPROCESSCOLORS 10

#define DM_DUPLEX 4096

#define FS_CYRILLIC 4

#define HS_CROSS 4

#define EMR_CREATEMONOBRUSH 93

#define REFERENCE_BLACK_MAX 4000

#define DMPAPER_JENV_CHOU3 73

#define DMPAPER_JENV_CHOU4 74

#define GDICOMMENT_ENDGROUP 3

#define RC_STRETCHBLT 2048

#define EMR_RESERVED_120 120

#define RUSSIAN_CHARSET 204

#define BS_INDEXED 4

#define GGO_NATIVE 2

#define TECHNOLOGY 2

#define NTM_BOLD 32

#define PSPROTOCOL_BCP 1

#define PAN_LETT_OBLIQUE_OFF_CENTER 14

#define CS_ENABLE 1

#define GM_COMPATIBLE 1

#define META_ROUNDRECT 1564

#define DMPAPER_JENV_KAKU3 72

#define DMPAPER_JENV_KAKU2 71

#define PFD_DOUBLEBUFFER 1

#define DMDITHER_GRAYSCALE 10

#define GCPCLASS_POSTBOUNDLTR 32

#define DMPAPER_A4_TRANSVERSE 55

#define DIB_PAL_COLORS 1

#define EMR_SELECTOBJECT 37

#define PFD_NEED_SYSTEM_PALETTE 256

#define FS_JISJAPAN 131072

#define CLIP_TO_PATH 4097

#define PAN_PROP_EXPANDED 5

#define PT_LINETO 2

#define EMR_EXTCREATEPEN 95

#define DM_PELSWIDTH 524288

#define PSINJECT_COMMENTS 11

#define GCP_REORDER 2

#define POSTSCRIPT_IDENTIFY 4117

#define DCBA_FACEDOWNRIGHT 259

#define EMR_SETPALETTEENTRIES 50

#define DMICMMETHOD_NONE 1

#define DC_EMF_COMPLIANT 20

#define META_EXTFLOODFILL 1352

#define META_INVERTREGION 298

#define DMPAPER_12X11 90

#define DM_ICMMETHOD 8388608

#define DMPAPER_PENV_1_ROTATED 109

#define BI_BITFIELDS 3

#define ELF_CULTURE_LATIN 0

#define DT_RASDISPLAY 1

#define DMPAPER_ENV_MONARCH 37

#define DM_COLLATE 32768

#define EMR_SETARCDIRECTION 57

#define DMICMMETHOD_SYSTEM 2

#define ICM_SETDEFAULTPROFILE 4

#define SP_OUTOFDISK -4

#define PAN_FAMILY_SCRIPT 3

#define DMBIN_LOWER 2

#define PAN_LETT_OBLIQUE_CONTACT 9

#define PAN_SERIF_OBTUSE_COVE 3

#define DMBIN_ENVELOPE 5

#define PAN_CULTURE_LATIN 0

#define META_DIBSTRETCHBLT 2881

#define ABORTDOC 2

#define PRINTRATEUNIT_IPM 4

#define METAFILE_DRIVER 2049

#define PAN_STROKEVARIATION_INDEX 5

#define EMR_SETDIBITSTODEVICE 80

#define META_OFFSETVIEWPORTORG 529

#define LPD_SWAP_COPY 1024

#define ABSOLUTE 1

#define PAN_MIDLINE_CONSTANT_TRIMMED 8

#define META_LINETO 531

#define PC_INTERIORS 128

#define DI_APPBANDING 1

#define PFD_MAIN_PLANE 0

#define META_OFFSETCLIPRGN 544

#define DMMEDIA_STANDARD 1

#define NTM_TT_OPENTYPE 262144

#define DM_LOGPIXELS 131072

#define DEVICEDATA 19

#define VIETNAMESE_CHARSET 163

#define FF_SCRIPT 64

#define FW_THIN 100

#define WGL_SWAP_OVERLAY1 2

#define WGL_SWAP_OVERLAY2 4

#define DMPAPER_ENV_C6 31

#define DMPAPER_ENV_C5 28

#define DMPAPER_ENV_C4 30

#define DMPAPER_ENV_C3 29

#define BI_PNG 5

#define WGL_SWAP_OVERLAY9 512

#define WGL_SWAP_OVERLAY7 128

#define WGL_SWAP_OVERLAY8 256

#define WGL_SWAP_OVERLAY5 32

#define WGL_SWAP_OVERLAY6 64

#define WGL_SWAP_OVERLAY3 8

#define WGL_SWAP_OVERLAY4 16

#define GCPCLASS_PREBOUNDRTL 64

#define DMPAPER_PENV_3_ROTATED 111

#define GDICOMMENT_BEGINGROUP 2

#define DMPAPER_A4_PLUS 60

#define CLIP_TT_ALWAYS 32

#define GETTECHNOLGY 20

#define DMPAPER_ENV_DL 27

#define OBJ_BRUSH 2

#define GCP_ERROR 32768

#define DMPAPER_JENV_YOU4 91

#define SYSTEM_FONT 13

#define LCS_GM_ABS_COLORIMETRIC 8

#define DMPAPER_A3_TRANSVERSE 67

#define MAC_CHARSET 77

#define META_CREATEBRUSHINDIRECT 764

#define GGO_GRAY8_BITMAP 6

#define DMMEDIA_GLOSSY 3

#define DM_DISPLAYFLAGS 2097152

#define PSINJECT_ORIENTATION 8

#define PAN_WEIGHT_INDEX 2

#define EMR_ALPHABLEND 114

#define EMR_CREATECOLORSPACE 99

#define PFD_UNDERLAY_PLANE -1

#define LPD_SHARE_STENCIL 128

#define DMPAPER_ENV_B6 35

#define DMPAPER_ENV_B5 34

#define DMPAPER_ENV_B4 33

#define CLIPCAPS 36

#define DMPAPER_FANFOLD_STD_GERMAN 40

#define PAN_MIDLINE_HIGH_SERIFED 7

#define NULLREGION 1

#define DEFAULT_PITCH 0

#define META_MOVETO 532

#define BLACKONWHITE 1

#define SET_MIRROR_MODE 4110

#define EMR_INVERTRGN 73

#define OPENCHANNEL 4110

#define SET_CLIP_BOX 4108

#define DMBIN_LARGECAPACITY 11

#define META_DIBCREATEPATTERNBRUSH 322

#define DMPAPER_JAPANESE_POSTCARD 43

#define GETVECTORPENSIZE 26

#define ANSI_CHARSET 0

#define LOGPIXELSX 88

#define FLOODFILLBORDER 0

#define LOGPIXELSY 90

#define PAN_STROKE_GRADUAL_DIAG 2

#define EMR_RESERVED_119 119

#define EMR_RESERVED_117 117

#define EMR_RESERVED_110 110

#define SRCCOPY 13369376

#define PAN_SERIF_BONE 8

#define PSINJECT_DOCUMENTPROCESSCOLORSATEND 21

#define EMR_EXTFLOODFILL 53

#define GCP_DIACRITIC 256

#define META_SETVIEWPORTORG 525

#define EMR_RESERVED_107 107

#define EMR_RESERVED_108 108

#define PSIDENT_GDICENTRIC 0

#define EMR_RESERVED_105 105

#define PSINJECT_BEGINSTREAM 1

#define EMR_RESERVED_106 106

#define SYSPAL_ERROR 0

#define EMR_RESERVED_109 109

#define OUT_TT_PRECIS 4

#define BS_DIBPATTERNPT 6

#define EMR_ANGLEARC 41

#define PSINJECT_ENDPAGECOMMENTS 107

#define EMR_CREATEBRUSHINDIRECT 39

#define DMPAPER_A4SMALL 10

#define SYSPAL_NOSTATIC 2

#define JOHAB_CHARSET 130

#define CM_OUT_OF_GAMUT 255

#define DEFAULT_GUI_FONT 17

#define META_SETDIBTODEV 3379

#define SET_BOUNDS 4109

#define TC_VA_ABLE 16384

#define TC_SA_INTEGER 128

#define DMPAPER_RESERVED_48 48

#define DMPAPER_RESERVED_49 49

#define ILLUMINANT_DEVICE_DEFAULT 0

#define GDICOMMENT_WINDOWS_METAFILE 2147483649

#define ICM_ADDPROFILE 1

#define PSINJECT_SHOWPAGE 105

#define FW_LIGHT 300

#define CC_INTERIORS 128

#define EMR_SAVEDC 33

#define EMR_SETSTRETCHBLTMODE 21

#define META_PATBLT 1565

#define HS_BDIAGONAL 3

#define DMPAPER_CSHEET 24

#define LC_MARKER 4

#define PAN_BENT_ARMS_VERT 9

#define POSTSCRIPT_PASSTHROUGH 4115

#define DMPAPER_A5_ROTATED 78

#define WGL_SWAP_MAIN_PLANE 1

#define LAYOUT_BITMAPORIENTATIONPRESERVED 8

#define LAYOUT_BTT 2

#define TT_AVAILABLE 1

#define OBJ_REGION 8

#define HS_DIAGCROSS 5

#define ENUMPAPERMETRICS 34

#define GCPCLASS_LATINNUMERICSEPARATOR 7

#define GM_ADVANCED 2

#define EMR_EOF 14

#define CM_CMYK_COLOR 4

#define TMPF_DEVICE 8

#define ASPECTXY 44

#define EMR_FRAMERGN 72

#define PS_INSIDEFRAME 6

#define TC_SO_ABLE 4096

#define NTM_REGULAR 64

#define GCP_JUSTIFYIN 2097152

#define LC_STYLED 32

#define LPD_STEREO 2

#define CP_REGION 2

#define GRADIENT_FILL_RECT_V 1

#define BI_JPEG 4

#define R2_MERGENOTPEN 12

#define DMTT_SUBDEV 3

#define PS_SOLID 0

#define SET_BACKGROUND_COLOR 4103

#define R2_NOTMERGEPEN 2

#define TA_UPDATECP 1

#define GCP_DBCS 1

#define META_SETWINDOWORG 523

#define GCP_MAXEXTENT 1048576

#define DMBIN_ENVMANUAL 6

#define PFD_DRAW_TO_BITMAP 8

#define DMPAPER_P32K 94

#define META_RESTOREDC 295

#define PSINJECT_PAGETRAILER 103

#define DM_PAPERLENGTH 4

#define GRADIENT_FILL_RECT_H 0

#define SIZEPALETTE 104

#define TC_RA_ABLE 8192

#define GETSETPAPERBINS 29

#define OUT_RASTER_PRECIS 6

#define POSTSCRIPT_DATA 37

#define GETSETPAPERMETRICS 35

#define ETO_CLIPPED 4

#define EMR_SETMETARGN 28

#define GCP_GLYPHSHAPE 16

#define GETPENWIDTH 16

#define META_SETBKCOLOR 513

#define BKMODE_LAST 2

#define DCTT_DOWNLOAD_OUTLINE 8

#define DEFAULT_CHARSET 1

#define HANGUL_CHARSET 129

#define FS_LATIN1 1

#define PAN_NO_FIT 1

#define TC_CP_STROKE 4

#define PC_WINDPOLYGON 4

#define FS_LATIN2 2

#define DC_MEDIAREADY 29

#define EMR_RESIZEPALETTE 51

#define PS_JOIN_ROUND 0

#define PAN_XHEIGHT_DUCKING_SMALL 5

#define EMR_LINETO 54

#define SRCAND 8913094

#define MM_MAX_FIXEDSCALE 6

#define EMR_ENDPATH 60

#define DISPLAY_DEVICE_PRIMARY_DEVICE 4

#define MM_ISOTROPIC 7

#define CBM_INIT 4

#define MAXSTRETCHBLTMODE 4

#define LPD_SHARE_ACCUM 256

#define SHADEBLENDCAPS 120

#define EMR_POLYBEZIERTO 5

#define WHITE_BRUSH 0

#define RGB_GAMMA_MIN 1344

#define EMR_INTERSECTCLIPRECT 30

#define EMR_PIXELFORMAT 104

#define STRETCH_DELETESCANS 3

#define PAN_LETT_NORMAL_SQUARE 8

#define META_ANIMATEPALETTE 1078

#define FLOODFILLSURFACE 1

#define OBJ_ENHMETAFILE 13

#define AC_SRC_OVER 0

#define DMICM_USER 256

#define DMPAPER_15X11 46

#define PAN_CONTRAST_HIGH 8

#define RGN_MIN 1

#define PSINJECT_ENDPROLOG 15

#define DISPLAY_DEVICE_MIRRORING_DRIVER 8

#define BS_NULL 1

#define EMR_SETBRUSHORGEX 13

#define META_SELECTPALETTE 564

#define EMR_SETMAPPERFLAGS 16

#define PFD_DRAW_TO_WINDOW 4

#define CLIP_DEFAULT_PRECIS 0

#define DC_STAPLE 30

#define FONTMAPPER_MAX 10

#define EMR_ABORTPATH 68

#define LPD_SHARE_DEPTH 64

#define DCB_SET 3

#define ALTERNATE 1

#define LPD_SUPPORT_GDI 16

#define PAN_MIDLINE_HIGH_POINTED 6

#define PC_SCANLINE 8

#define GCPCLASS_NEUTRAL 3

#define CA_LOG_FILTER 2

#define PAN_MIDLINE_HIGH_TRIMMED 5

#define META_SETTEXTCOLOR 521

#define DMPAPER_B_PLUS 58

#define PASSTHROUGH 19

#define PAN_SERIFSTYLE_INDEX 1

#define EMR_MOVETOEX 27

#define DOWNLOADFACE 514

#define DCBA_FACEDOWNNONE 256

#define DM_DITHERTYPE 67108864

#define PAN_ARMSTYLE_INDEX 6

#define R2_MASKPEN 9

#define EMR_STRETCHDIBITS 81

#define EMR_ARC 45

#define FEATURESETTING_NEGATIVE 5

#define DC_NUP 33

#define META_SAVEDC 30

#define NTM_MULTIPLEMASTER 524288

#define DMDITHER_NONE 1

#define NTM_TYPE1 1048576

#define ILLUMINANT_NTSC 3

#define DMPAPER_ISO_B4 42

#define PAN_LETT_NORMAL_CONTACT 2

#define DMPAPER_P16K_ROTATED 106

#define PS_GEOMETRIC 65536

#define DMPAPER_PENV_2_ROTATED 110

#define GCPCLASS_NUMERICSEPARATOR 8

#define AD_CLOCKWISE 2

#define PSINJECT_ENDSTREAM 20

#define META_SETMAPPERFLAGS 561

#define HGDI_ERROR 4294967295

#define DMPAPER_STATEMENT 6

#define DMPAPER_PENV_7_ROTATED 115

#define GCPCLASS_LATINNUMBER 5

#define PAN_PROPORTION_INDEX 3

#define PAN_LETT_OBLIQUE_SQUARE 15

#define DCBA_FACEUPCENTER 1

#define DMPAPER_B4_JIS_ROTATED 79

#define PDEVICESIZE 26

#define DMBIN_MIDDLE 3

#define META_SETMAPMODE 259

#define SIMPLEREGION 2

#define TRANSFORM_CTM 4107

#define OUT_PS_ONLY_PRECIS 10

#define PSINJECT_PAGENUMBER 100

#define PS_NULL 5

#define DMBIN_FORMSOURCE 15

#define EMR_MODIFYWORLDTRANSFORM 36

#define BS_SOLID 0

#define RGN_MAX 5

#define RC_SCALING 4

#define STRETCHBLT 2048

#define PAN_MIDLINE_STANDARD_POINTED 3

#define GCP_NUMERICOVERRIDE 16777216

#define DMBIN_SMALLFMT 9

#define AD_COUNTERCLOCKWISE 1

#define EMR_SETICMMODE 98

#define QDI_DIBTOSCREEN 4

#define GDICOMMENT_UNICODE_END 128

#define FS_BALTIC 128

#define SRCPAINT 15597702

#define PROOF_QUALITY 2

#define RASTERCAPS 38

#define PAN_SERIF_TRIANGLE 10

#define R2_NOTXORPEN 10

#define DMDUP_VERTICAL 2

#define FW_SEMIBOLD 600

#define DC_MEDIATYPENAMES 34

#define DMPAPER_JENV_CHOU3_ROTATED 86

#define QDI_GETDIBITS 2

#define COMPLEXREGION 3

#define PSINJECT_TRAILER 18

#define EMR_SETTEXTCOLOR 24

#define GCPCLASS_HEBREW 2

#define SP_OUTOFMEMORY -5

#define DMBIN_LAST 15

#define FEATURESETTING_PSLEVEL 2

#define PAN_CONTRAST_MEDIUM_HIGH 7

#define DISPLAY_DEVICE_MODESPRUNED 134217728

#define ICM_QUERY 3

#define FS_CHINESESIMP 262144

#define VTA_TOP 0

#define DMPAPER_11X17 17

#define SETLINECAP 21

#define CLIP_EMBEDDED 128

#define NTM_PS_OPENTYPE 131072

#define DM_PAPERWIDTH 8

#define MWT_RIGHTMULTIPLY 3

#define PAN_XHEIGHT_CONSTANT_LARGE 4

#define DCBA_FACEDOWNLEFT 258

#define META_POLYGON 804

#define TCI_SRCFONTSIG 3

#define ENDDOC 11

#define PAN_FAMILY_DECORATIVE 4

#define FEATURESETTING_PRIVATE_END 8191

#define WGL_SWAP_UNDERLAY12 134217728

#define WGL_SWAP_UNDERLAY13 268435456

#define WGL_SWAP_UNDERLAY10 33554432

#define TT_ENABLED 2

#define PHYSICALOFFSETY 113

#define META_OFFSETWINDOWORG 527

#define WGL_SWAP_UNDERLAY11 67108864

#define PHYSICALOFFSETX 112

#define DC_COLORDEVICE 32

#define WGL_SWAP_UNDERLAY14 536870912

#define WGL_SWAP_UNDERLAY15 1073741824

#define EMR_SETICMPROFILEA 112

#define EMR_ELLIPSE 42

#define DM_FORMNAME 65536

#define ICM_QUERYMATCH 7

#define DMTT_DOWNLOAD 2

#define PAN_SERIF_SQUARE_COVE 4

#define TMPF_VECTOR 2

#define EMR_SETWINDOWEXTEX 9

#define PS_JOIN_BEVEL 4096

#define DM_COLOR 2048

#define EMR_SETICMPROFILEW 113

typedef struct _FLOAT128 _FLOAT128, *P_FLOAT128;

struct _FLOAT128 {
    longlong LowPart;
    longlong HighPart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE _SYSTEM_AUDIT_CALLBACK_ACE, *P_SYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _ACE_HEADER _ACE_HEADER, *P_ACE_HEADER;

typedef struct _ACE_HEADER ACE_HEADER;

struct _ACE_HEADER {
    BYTE AceType;
    BYTE AceFlags;
    WORD AceSize;
};

struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct LIST_ENTRY32 LIST_ENTRY32, *PLIST_ENTRY32;

struct LIST_ENTRY32 {
    DWORD Flink;
    DWORD Blink;
};

typedef struct _TOKEN_PRIVILEGES _TOKEN_PRIVILEGES, *P_TOKEN_PRIVILEGES;

typedef struct _LUID_AND_ATTRIBUTES _LUID_AND_ATTRIBUTES, *P_LUID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;

typedef struct _LUID _LUID, *P_LUID;

typedef struct _LUID LUID;

struct _LUID {
    DWORD LowPart;
    LONG HighPart;
};

struct _LUID_AND_ATTRIBUTES {
    LUID Luid;
    DWORD Attributes;
};

struct _TOKEN_PRIVILEGES {
    DWORD PrivilegeCount;
    LUID_AND_ATTRIBUTES Privileges[1];
};

typedef struct _IMAGE_THUNK_DATA32 _IMAGE_THUNK_DATA32, *P_IMAGE_THUNK_DATA32;

typedef union _union_156.conflict _union_156.conflict, *P_union_156.conflict;

union _union_156.conflict {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

struct _IMAGE_THUNK_DATA32 {
    union _union_156.conflict u1;
};

typedef struct _MESSAGE_RESOURCE_BLOCK _MESSAGE_RESOURCE_BLOCK, *P_MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_BLOCK {
    DWORD LowId;
    DWORD HighId;
    DWORD OffsetToEntries;
};

typedef union _union_261 _union_261, *P_union_261;

union _union_261 {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

typedef struct _OBJECT_TYPE_LIST _OBJECT_TYPE_LIST, *P_OBJECT_TYPE_LIST;

struct _OBJECT_TYPE_LIST {
    WORD Level;
    WORD Sbz;
    GUID *ObjectType;
};

typedef struct _IMAGE_OPTIONAL_HEADER _IMAGE_OPTIONAL_HEADER, *P_IMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_DATA_DIRECTORY _IMAGE_DATA_DIRECTORY, *P_IMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;

struct _IMAGE_DATA_DIRECTORY {
    DWORD VirtualAddress;
    DWORD Size;
};

struct _IMAGE_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    DWORD SizeOfStackReserve;
    DWORD SizeOfStackCommit;
    DWORD SizeOfHeapReserve;
    DWORD SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef union _union_253 _union_253, *P_union_253;

union _union_253 {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef ULONG_PTR KSPIN_LOCK;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U _IMAGE_RESOURCE_DIR_STRING_U, *P_IMAGE_RESOURCE_DIR_STRING_U;

struct _IMAGE_RESOURCE_DIR_STRING_U {
    WORD Length;
    WCHAR NameString[1];
};

typedef union _union_259 _union_259, *P_union_259;

union _union_259 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

typedef struct _SECURITY_QUALITY_OF_SERVICE _SECURITY_QUALITY_OF_SERVICE, *P_SECURITY_QUALITY_OF_SERVICE;

typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous=0,
    SecurityIdentification=1,
    SecurityImpersonation=2,
    SecurityDelegation=3
} _SECURITY_IMPERSONATION_LEVEL;

typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;

typedef BYTE BOOLEAN;

typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;

struct _SECURITY_QUALITY_OF_SERVICE {
    DWORD Length;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
    BOOLEAN EffectiveOnly;
};

typedef struct _IMAGE_FUNCTION_ENTRY _IMAGE_FUNCTION_ENTRY, *P_IMAGE_FUNCTION_ENTRY;

struct _IMAGE_FUNCTION_ENTRY {
    DWORD StartingAddress;
    DWORD EndingAddress;
    DWORD EndOfPrologue;
};

typedef LPCSTR LPCTSTR;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE _SECURITY_DESCRIPTOR_RELATIVE, *P_SECURITY_DESCRIPTOR_RELATIVE;

typedef WORD SECURITY_DESCRIPTOR_CONTROL;

struct _SECURITY_DESCRIPTOR_RELATIVE {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    DWORD Owner;
    DWORD Group;
    DWORD Sacl;
    DWORD Dacl;
};

typedef struct _LIST_ENTRY _LIST_ENTRY, *P_LIST_ENTRY;

struct _LIST_ENTRY {
    struct _LIST_ENTRY *Flink;
    struct _LIST_ENTRY *Blink;
};

typedef struct _SYSTEM_ALARM_CALLBACK_ACE _SYSTEM_ALARM_CALLBACK_ACE, *P_SYSTEM_ALARM_CALLBACK_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;

struct _SYSTEM_ALARM_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef union _union_228 _union_228, *P_union_228;

typedef struct _struct_229 _struct_229, *P_struct_229;

struct _struct_229 {
    DWORD Short;
    DWORD Long;
};

union _union_228 {
    BYTE ShortName[8];
    struct _struct_229 Name;
    DWORD LongName[2];
};

typedef struct SYSTEM_BATTERY_STATE SYSTEM_BATTERY_STATE, *PSYSTEM_BATTERY_STATE;

struct SYSTEM_BATTERY_STATE {
    BOOLEAN AcOnLine;
    BOOLEAN BatteryPresent;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Spare1[4];
    DWORD MaxCapacity;
    DWORD RemainingCapacity;
    DWORD Rate;
    DWORD EstimatedTime;
    DWORD DefaultAlert1;
    DWORD DefaultAlert2;
};

typedef union _union_226 _union_226, *P_union_226;

union _union_226 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

typedef struct _IMAGE_OPTIONAL_HEADER64 _IMAGE_OPTIONAL_HEADER64, *P_IMAGE_OPTIONAL_HEADER64;

struct _IMAGE_OPTIONAL_HEADER64 {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    ULONGLONG ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    ULONGLONG SizeOfStackReserve;
    ULONGLONG SizeOfStackCommit;
    ULONGLONG SizeOfHeapReserve;
    ULONGLONG SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct _TAPE_GET_DRIVE_PARAMETERS _TAPE_GET_DRIVE_PARAMETERS, *P_TAPE_GET_DRIVE_PARAMETERS;

struct _TAPE_GET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD DefaultBlockSize;
    DWORD MaximumBlockSize;
    DWORD MinimumBlockSize;
    DWORD MaximumPartitionCount;
    DWORD FeaturesLow;
    DWORD FeaturesHigh;
    DWORD EOTWarningZoneSize;
};

typedef struct _IMAGE_ROM_HEADERS _IMAGE_ROM_HEADERS, *P_IMAGE_ROM_HEADERS;

typedef struct _IMAGE_FILE_HEADER _IMAGE_FILE_HEADER, *P_IMAGE_FILE_HEADER;

typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER _IMAGE_ROM_OPTIONAL_HEADER, *P_IMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;

struct _IMAGE_ROM_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD BaseOfBss;
    DWORD GprMask;
    DWORD CprMask[4];
    DWORD GpValue;
};

struct _IMAGE_FILE_HEADER {
    WORD Machine;
    WORD NumberOfSections;
    DWORD TimeDateStamp;
    DWORD PointerToSymbolTable;
    DWORD NumberOfSymbols;
    WORD SizeOfOptionalHeader;
    WORD Characteristics;
};

struct _IMAGE_ROM_HEADERS {
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;

typedef struct _struct_138.conflict _struct_138.conflict, *P_struct_138.conflict;

struct _struct_138.conflict {
    WORD Linenumber;
    WORD Size;
};

typedef struct _OSVERSIONINFOW _OSVERSIONINFOW, *P_OSVERSIONINFOW;

typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;

struct _OSVERSIONINFOW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
};

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    LARGE_INTEGER TotalUserTime;
    LARGE_INTEGER TotalKernelTime;
    LARGE_INTEGER ThisPeriodTotalUserTime;
    LARGE_INTEGER ThisPeriodTotalKernelTime;
    DWORD TotalPageFaultCount;
    DWORD TotalProcesses;
    DWORD ActiveProcesses;
    DWORD TotalTerminatedProcesses;
};

typedef struct _IMAGE_SYMBOL _IMAGE_SYMBOL, *P_IMAGE_SYMBOL;

typedef union _union_133.conflict _union_133.conflict, *P_union_133.conflict;

typedef struct _struct_134 _struct_134, *P_struct_134;

struct _struct_134 {
    DWORD Short;
    DWORD Long;
};

union _union_133.conflict {
    BYTE ShortName[8];
    struct _struct_134 Name;
    DWORD LongName[2];
};

struct _IMAGE_SYMBOL {
    union _union_133.conflict N;
    DWORD Value;
    SHORT SectionNumber;
    WORD Type;
    BYTE StorageClass;
    BYTE NumberOfAuxSymbols;
};

typedef WCHAR *PUWSTR;

typedef struct _JOBOBJECT_JOBSET_INFORMATION _JOBOBJECT_JOBSET_INFORMATION, *P_JOBOBJECT_JOBSET_INFORMATION;

typedef struct _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;

struct _JOBOBJECT_JOBSET_INFORMATION {
    DWORD MemberLevel;
};

typedef struct _IMAGE_FUNCTION_ENTRY64 _IMAGE_FUNCTION_ENTRY64, *P_IMAGE_FUNCTION_ENTRY64;

typedef struct _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;

typedef union _union_184 _union_184, *P_union_184;

union _union_184 {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
};

struct _IMAGE_FUNCTION_ENTRY64 {
    ULONGLONG StartingAddress;
    ULONGLONG EndingAddress;
    union _union_184 field2_0x10;
};

typedef struct _EXCEPTION_RECORD32 _EXCEPTION_RECORD32, *P_EXCEPTION_RECORD32;

struct _EXCEPTION_RECORD32 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD ExceptionRecord;
    DWORD ExceptionAddress;
    DWORD NumberParameters;
    DWORD ExceptionInformation[15];
};

typedef void *PVOID64;

typedef struct _IMAGE_NT_HEADERS64 _IMAGE_NT_HEADERS64, *P_IMAGE_NT_HEADERS64;

typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;

struct _IMAGE_NT_HEADERS64 {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING _IMAGE_RESOURCE_DIRECTORY_STRING, *P_IMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;

struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    WORD Length;
    CHAR NameString[1];
};

typedef struct _ACCESS_ALLOWED_ACE _ACCESS_ALLOWED_ACE, *P_ACCESS_ALLOWED_ACE;

struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_SECTION_HEADER _IMAGE_SECTION_HEADER, *P_IMAGE_SECTION_HEADER;

typedef struct _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

typedef union _union_131 _union_131, *P_union_131;

union _union_131 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

struct _IMAGE_SECTION_HEADER {
    BYTE Name[8];
    union _union_131 Misc;
    DWORD VirtualAddress;
    DWORD SizeOfRawData;
    DWORD PointerToRawData;
    DWORD PointerToRelocations;
    DWORD PointerToLinenumbers;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD Characteristics;
};

typedef struct _SID_AND_ATTRIBUTES _SID_AND_ATTRIBUTES, *P_SID_AND_ATTRIBUTES;

typedef PVOID PSID;

struct _SID_AND_ATTRIBUTES {
    PSID Sid;
    DWORD Attributes;
};

typedef struct _SID _SID, *P_SID;

typedef struct _SID SID;

typedef struct _SID_IDENTIFIER_AUTHORITY _SID_IDENTIFIER_AUTHORITY, *P_SID_IDENTIFIER_AUTHORITY;

typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;

struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
};

struct _SID {
    BYTE Revision;
    BYTE SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
};

typedef struct BATTERY_REPORTING_SCALE BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;

struct BATTERY_REPORTING_SCALE {
    DWORD Granularity;
    DWORD Capacity;
};

typedef struct _IMAGE_THUNK_DATA64 _IMAGE_THUNK_DATA64, *P_IMAGE_THUNK_DATA64;

typedef union _union_154 _union_154, *P_union_154;

union _union_154 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

struct _IMAGE_THUNK_DATA64 {
    union _union_154 u1;
};

typedef struct _IMAGE_RELOCATION _IMAGE_RELOCATION, *P_IMAGE_RELOCATION;

typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;

typedef IMAGE_RELOCATION *PIMAGE_RELOCATION;

typedef union _union_146 _union_146, *P_union_146;

union _union_146 {
    DWORD VirtualAddress;
    DWORD RelocCount;
};

struct _IMAGE_RELOCATION {
    union _union_146 field0_0x0;
    DWORD SymbolTableIndex;
    WORD Type;
};

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR _RTL_VERIFIER_DLL_DESCRIPTOR, *P_RTL_VERIFIER_DLL_DESCRIPTOR;

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR RTL_VERIFIER_DLL_DESCRIPTOR;

typedef WCHAR *PWCHAR;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR _RTL_VERIFIER_THUNK_DESCRIPTOR, *P_RTL_VERIFIER_THUNK_DESCRIPTOR;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR *PRTL_VERIFIER_THUNK_DESCRIPTOR;

typedef CHAR *PCHAR;

struct _RTL_VERIFIER_THUNK_DESCRIPTOR {
    PCHAR ThunkName;
    PVOID ThunkOldAddress;
    PVOID ThunkNewAddress;
};

struct _RTL_VERIFIER_DLL_DESCRIPTOR {
    PWCHAR DllName;
    DWORD DllFlags;
    PVOID DllAddress;
    PRTL_VERIFIER_THUNK_DESCRIPTOR DllThunks;
};

typedef struct _EVENTSFORLOGFILE _EVENTSFORLOGFILE, *P_EVENTSFORLOGFILE;

typedef struct _EVENTSFORLOGFILE *PEVENTSFORLOGFILE;

typedef struct _EVENTLOGRECORD _EVENTLOGRECORD, *P_EVENTLOGRECORD;

typedef struct _EVENTLOGRECORD EVENTLOGRECORD;

struct _EVENTLOGRECORD {
    DWORD Length;
    DWORD Reserved;
    DWORD RecordNumber;
    DWORD TimeGenerated;
    DWORD TimeWritten;
    DWORD EventID;
    WORD EventType;
    WORD NumStrings;
    WORD EventCategory;
    WORD ReservedFlags;
    DWORD ClosingRecordNumber;
    DWORD StringOffset;
    DWORD UserSidLength;
    DWORD UserSidOffset;
    DWORD DataLength;
    DWORD DataOffset;
};

struct _EVENTSFORLOGFILE {
    DWORD ulSize;
    WCHAR szLogicalLogFile[256];
    DWORD ulNumRecords;
    EVENTLOGRECORD pEventLogRecords[0];
};

typedef CHAR *LPCH;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS _JOBOBJECT_BASIC_UI_RESTRICTIONS, *P_JOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;

struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    DWORD UIRestrictionsClass;
};

typedef struct _IMAGE_IMPORT_BY_NAME _IMAGE_IMPORT_BY_NAME, *P_IMAGE_IMPORT_BY_NAME;

struct _IMAGE_IMPORT_BY_NAME {
    WORD Hint;
    BYTE Name[1];
};

typedef enum _JOBOBJECTINFOCLASS {
    JobObjectBasicAccountingInformation=1,
    JobObjectBasicLimitInformation=2,
    JobObjectBasicProcessIdList=3,
    JobObjectBasicUIRestrictions=4,
    JobObjectSecurityLimitInformation=5,
    JobObjectEndOfJobTimeInformation=6,
    JobObjectAssociateCompletionPortInformation=7,
    JobObjectBasicAndIoAccountingInformation=8,
    JobObjectExtendedLimitInformation=9,
    JobObjectJobSetInformation=10,
    MaxJobObjectInfoClass=11
} _JOBOBJECTINFOCLASS;


/* WARNING! conflicting data type names: /deps/winnt.h/IMAGE_DOS_HEADER - /DOS/IMAGE_DOS_HEADER */

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF IMAGE_AUX_SYMBOL_TOKEN_DEF, *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    BYTE bAuxType;
    BYTE bReserved;
    DWORD SymbolTableIndex;
    BYTE rgbReserved[12];
};

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR _RTL_VERIFIER_PROVIDER_DESCRIPTOR, *P_RTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR *PRTL_VERIFIER_DLL_DESCRIPTOR;

typedef WCHAR *PWSTR;

typedef void (*RTL_VERIFIER_DLL_LOAD_CALLBACK)(PWSTR, PVOID, SIZE_T, PVOID);

typedef void (*RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(PWSTR, PVOID, SIZE_T, PVOID);

struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR {
    DWORD Length;
    PRTL_VERIFIER_DLL_DESCRIPTOR ProviderDlls;
    RTL_VERIFIER_DLL_LOAD_CALLBACK ProviderDllLoadCallback;
    RTL_VERIFIER_DLL_UNLOAD_CALLBACK ProviderDllUnloadCallback;
    PWSTR VerifierImage;
    DWORD VerifierFlags;
    DWORD VerifierDebug;
};

typedef HANDLE *PHANDLE;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR _IMAGE_BOUND_IMPORT_DESCRIPTOR, *P_IMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD NumberOfModuleForwarderRefs;
};

typedef enum _CM_SERVICE_LOAD_TYPE {
    BootLoad=0,
    SystemLoad=1,
    AutoLoad=2,
    DemandLoad=3,
    DisableLoad=4
} _CM_SERVICE_LOAD_TYPE;

typedef struct _FLOAT128 FLOAT128;

typedef FLOAT128 *PFLOAT128;

typedef struct _OSVERSIONINFOA _OSVERSIONINFOA, *P_OSVERSIONINFOA;

typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;

typedef LPOSVERSIONINFOA LPOSVERSIONINFO;

struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef struct _TOKEN_USER _TOKEN_USER, *P_TOKEN_USER;

typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;

struct _TOKEN_USER {
    SID_AND_ATTRIBUTES User;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE _SYSTEM_ALARM_OBJECT_ACE, *P_SYSTEM_ALARM_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;

struct _SYSTEM_ALARM_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ImageArchitectureEntry _ImageArchitectureEntry, *P_ImageArchitectureEntry;

typedef struct _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;

struct _ImageArchitectureEntry {
    DWORD FixupInstRVA;
    DWORD NewInst;
};

typedef struct _TAPE_WMI_OPERATIONS _TAPE_WMI_OPERATIONS, *P_TAPE_WMI_OPERATIONS;

typedef struct _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;

struct _TAPE_WMI_OPERATIONS {
    DWORD Method;
    DWORD DataBufferSize;
    PVOID DataBuffer;
};

typedef union _SLIST_HEADER _SLIST_HEADER, *P_SLIST_HEADER;

typedef struct _struct_193 _struct_193, *P_struct_193;

typedef struct _SINGLE_LIST_ENTRY _SINGLE_LIST_ENTRY, *P_SINGLE_LIST_ENTRY;

typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;

struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY *Next;
};

struct _struct_193 {
    SINGLE_LIST_ENTRY Next;
    WORD Depth;
    WORD Sequence;
};

union _SLIST_HEADER {
    ULONGLONG Alignment;
    struct _struct_193 field1;
};

typedef struct _PROCESSOR_POWER_POLICY _PROCESSOR_POWER_POLICY, *P_PROCESSOR_POWER_POLICY;

typedef struct _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;

typedef struct _PROCESSOR_POWER_POLICY_INFO _PROCESSOR_POWER_POLICY_INFO, *P_PROCESSOR_POWER_POLICY_INFO;

typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;

struct _PROCESSOR_POWER_POLICY_INFO {
    DWORD TimeCheck;
    DWORD DemoteLimit;
    DWORD PromoteLimit;
    BYTE DemotePercent;
    BYTE PromotePercent;
    BYTE Spare[2];
    DWORD AllowDemotion:1;
    DWORD AllowPromotion:1;
    DWORD Reserved:30;
};

struct _PROCESSOR_POWER_POLICY {
    DWORD Revision;
    BYTE DynamicThrottle;
    BYTE Spare[3];
    DWORD Reserved;
    DWORD PolicyCount;
    PROCESSOR_POWER_POLICY_INFO Policy[3];
};

typedef struct _TAPE_WRITE_MARKS _TAPE_WRITE_MARKS, *P_TAPE_WRITE_MARKS;

struct _TAPE_WRITE_MARKS {
    DWORD Type;
    DWORD Count;
    BOOLEAN Immediate;
};

typedef struct _MEMORY_BASIC_INFORMATION64 _MEMORY_BASIC_INFORMATION64, *P_MEMORY_BASIC_INFORMATION64;

struct _MEMORY_BASIC_INFORMATION64 {
    ULONGLONG BaseAddress;
    ULONGLONG AllocationBase;
    DWORD AllocationProtect;
    DWORD __alignment1;
    ULONGLONG RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
    DWORD __alignment2;
};

typedef struct _ACCESS_DENIED_ACE _ACCESS_DENIED_ACE, *P_ACCESS_DENIED_ACE;

typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;

struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _MESSAGE_RESOURCE_DATA _MESSAGE_RESOURCE_DATA, *P_MESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_DATA {
    DWORD NumberOfBlocks;
    MESSAGE_RESOURCE_BLOCK Blocks[1];
};

typedef LPSTR PTCH;

typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation=1,
    AclSizeInformation=2
} _ACL_INFORMATION_CLASS;

typedef struct _TAPE_CREATE_PARTITION _TAPE_CREATE_PARTITION, *P_TAPE_CREATE_PARTITION;

typedef struct _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;

struct _TAPE_CREATE_PARTITION {
    DWORD Method;
    DWORD Count;
    DWORD Size;
};

typedef struct _struct_142.conflict _struct_142.conflict, *P_struct_142.conflict;

struct _struct_142.conflict {
    BYTE Name[18];
};

typedef enum _CM_ERROR_CONTROL_TYPE {
    IgnoreError=0,
    NormalError=1,
    SevereError=2,
    CriticalError=3
} _CM_ERROR_CONTROL_TYPE;

typedef struct _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;

typedef struct _TAPE_GET_MEDIA_PARAMETERS _TAPE_GET_MEDIA_PARAMETERS, *P_TAPE_GET_MEDIA_PARAMETERS;

typedef struct _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;

struct _TAPE_GET_MEDIA_PARAMETERS {
    LARGE_INTEGER Capacity;
    LARGE_INTEGER Remaining;
    DWORD BlockSize;
    DWORD PartitionCount;
    BOOLEAN WriteProtected;
};

typedef struct _TAPE_SET_DRIVE_PARAMETERS _TAPE_SET_DRIVE_PARAMETERS, *P_TAPE_SET_DRIVE_PARAMETERS;

struct _TAPE_SET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD EOTWarningZoneSize;
};

typedef struct _IMAGE_BASE_RELOCATION _IMAGE_BASE_RELOCATION, *P_IMAGE_BASE_RELOCATION;

typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;

struct _IMAGE_BASE_RELOCATION {
    DWORD VirtualAddress;
    DWORD SizeOfBlock;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE _SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *P_SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _LIST_ENTRY LIST_ENTRY;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER _IMAGE_COFF_SYMBOLS_HEADER, *P_IMAGE_COFF_SYMBOLS_HEADER;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;

struct _IMAGE_COFF_SYMBOLS_HEADER {
    DWORD NumberOfSymbols;
    DWORD LvaToFirstSymbol;
    DWORD NumberOfLinenumbers;
    DWORD LvaToFirstLinenumber;
    DWORD RvaToFirstByteOfCode;
    DWORD RvaToLastByteOfCode;
    DWORD RvaToFirstByteOfData;
    DWORD RvaToLastByteOfData;
};

typedef struct _MEMORY_BASIC_INFORMATION32 _MEMORY_BASIC_INFORMATION32, *P_MEMORY_BASIC_INFORMATION32;

struct _MEMORY_BASIC_INFORMATION32 {
    DWORD BaseAddress;
    DWORD AllocationBase;
    DWORD AllocationProtect;
    DWORD RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef WCHAR *LPCUWSTR;

typedef CHAR *PCCH;

typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;

typedef struct _IMAGE_VXD_HEADER _IMAGE_VXD_HEADER, *P_IMAGE_VXD_HEADER;

struct _IMAGE_VXD_HEADER {
    WORD e32_magic;
    BYTE e32_border;
    BYTE e32_worder;
    DWORD e32_level;
    WORD e32_cpu;
    WORD e32_os;
    DWORD e32_ver;
    DWORD e32_mflags;
    DWORD e32_mpages;
    DWORD e32_startobj;
    DWORD e32_eip;
    DWORD e32_stackobj;
    DWORD e32_esp;
    DWORD e32_pagesize;
    DWORD e32_lastpagesize;
    DWORD e32_fixupsize;
    DWORD e32_fixupsum;
    DWORD e32_ldrsize;
    DWORD e32_ldrsum;
    DWORD e32_objtab;
    DWORD e32_objcnt;
    DWORD e32_objmap;
    DWORD e32_itermap;
    DWORD e32_rsrctab;
    DWORD e32_rsrccnt;
    DWORD e32_restab;
    DWORD e32_enttab;
    DWORD e32_dirtab;
    DWORD e32_dircnt;
    DWORD e32_fpagetab;
    DWORD e32_frectab;
    DWORD e32_impmod;
    DWORD e32_impmodcnt;
    DWORD e32_impproc;
    DWORD e32_pagesum;
    DWORD e32_datapage;
    DWORD e32_preload;
    DWORD e32_nrestab;
    DWORD e32_cbnrestab;
    DWORD e32_nressum;
    DWORD e32_autodata;
    DWORD e32_debuginfo;
    DWORD e32_debuglen;
    DWORD e32_instpreload;
    DWORD e32_instdemand;
    DWORD e32_heapsize;
    BYTE e32_res3[12];
    DWORD e32_winresoff;
    DWORD e32_winreslen;
    WORD e32_devid;
    WORD e32_ddkver;
};

typedef char CCHAR;

typedef LARGE_INTEGER *PLARGE_INTEGER;

typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY _IMAGE_RESOURCE_DIRECTORY_ENTRY, *P_IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef union _union_165 _union_165, *P_union_165;

typedef union _union_167.conflict _union_167.conflict, *P_union_167.conflict;

typedef struct _struct_166 _struct_166, *P_struct_166;

typedef struct _struct_168.conflict1 _struct_168.conflict1, *P_struct_168.conflict1;

struct _struct_168.conflict1 {
    DWORD OffsetToDirectory:31;
    DWORD DataIsDirectory:1;
};

union _union_167.conflict {
    DWORD OffsetToData;
    struct _struct_168.conflict1 field1;
};

struct _struct_166 {
    DWORD NameOffset:31;
    DWORD NameIsString:1;
};

union _union_165 {
    struct _struct_166 field0;
    DWORD Name;
    WORD Id;
};

struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union _union_165 field0_0x0;
    union _union_167.conflict field1_0x4;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE _ACCESS_ALLOWED_CALLBACK_ACE, *P_ACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;

struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct SYSTEM_POWER_LEVEL SYSTEM_POWER_LEVEL, *PSYSTEM_POWER_LEVEL;

typedef struct POWER_ACTION_POLICY POWER_ACTION_POLICY, *PPOWER_ACTION_POLICY;

typedef enum _SYSTEM_POWER_STATE {
    PowerSystemUnspecified=0,
    PowerSystemWorking=1,
    PowerSystemSleeping1=2,
    PowerSystemSleeping2=3,
    PowerSystemSleeping3=4,
    PowerSystemHibernate=5,
    PowerSystemShutdown=6,
    PowerSystemMaximum=7
} _SYSTEM_POWER_STATE;

typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;

typedef enum enum_105 {
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionSleep=2,
    PowerActionHibernate=3,
    PowerActionShutdown=4,
    PowerActionShutdownReset=5,
    PowerActionShutdownOff=6,
    PowerActionWarmEject=7
} enum_105;

typedef enum enum_105 POWER_ACTION;

struct POWER_ACTION_POLICY {
    POWER_ACTION Action;
    DWORD Flags;
    DWORD EventCode;
};

struct SYSTEM_POWER_LEVEL {
    BOOLEAN Enable;
    BYTE Spare[3];
    DWORD BatteryLevel;
    struct POWER_ACTION_POLICY PowerPolicy;
    SYSTEM_POWER_STATE MinSystemState;
};

typedef struct _MEMORY_BASIC_INFORMATION64 MEMORY_BASIC_INFORMATION64;

typedef struct _struct_56 _struct_56, *P_struct_56;

struct _struct_56 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _struct_55 _struct_55, *P_struct_55;

struct _struct_55 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _TAPE_ERASE _TAPE_ERASE, *P_TAPE_ERASE;

struct _TAPE_ERASE {
    DWORD Type;
    BOOLEAN Immediate;
};

typedef enum enum_108 {
    SystemPowerPolicyAc=0,
    SystemPowerPolicyDc=1,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    SystemPowerCapabilities=4,
    SystemBatteryState=5,
    SystemPowerStateHandler=6,
    ProcessorStateHandler=7,
    SystemPowerPolicyCurrent=8,
    AdministratorPowerPolicy=9,
    SystemReserveHiberFile=10,
    ProcessorInformation=11,
    SystemPowerInformation=12,
    ProcessorStateHandler2=13,
    LastWakeTime=14,
    LastSleepTime=15,
    SystemExecutionState=16,
    SystemPowerStateNotifyHandler=17,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyDc=19,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    ProcessorPowerPolicyCurrent=22
} enum_108;

typedef enum enum_108 POWER_INFORMATION_LEVEL;

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceUnspecified=0,
    PowerDeviceD0=1,
    PowerDeviceD1=2,
    PowerDeviceD2=3,
    PowerDeviceD3=4,
    PowerDeviceMaximum=5
} _DEVICE_POWER_STATE;

typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION _JOBOBJECT_SECURITY_LIMIT_INFORMATION, *P_JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _TOKEN_GROUPS _TOKEN_GROUPS, *P_TOKEN_GROUPS;

typedef struct _TOKEN_GROUPS *PTOKEN_GROUPS;

typedef struct _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;

struct _TOKEN_GROUPS {
    DWORD GroupCount;
    SID_AND_ATTRIBUTES Groups[1];
};

struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    DWORD SecurityLimitFlags;
    HANDLE JobToken;
    PTOKEN_GROUPS SidsToDisable;
    PTOKEN_PRIVILEGES PrivilegesToDelete;
    PTOKEN_GROUPS RestrictedSids;
};

typedef struct _FPO_DATA _FPO_DATA, *P_FPO_DATA;

typedef struct _FPO_DATA *PFPO_DATA;

struct _FPO_DATA {
    DWORD ulOffStart;
    DWORD cbProcSize;
    DWORD cdwLocals;
    WORD cdwParams;
    WORD cbProlog:8;
    WORD cbRegs:3;
    WORD fHasSEH:1;
    WORD fUseBP:1;
    WORD reserved:1;
    WORD cbFrame:2;
};

typedef enum ReplacesCorHdrNumericDefines {
    COR_VERSION_MINOR=0,
    COMIMAGE_FLAGS_ILONLY=1,
    COR_VTABLE_32BIT=1,
    IMAGE_COR_MIH_METHODRVA=1,
    NATIVE_TYPE_MAX_CB=1,
    COMIMAGE_FLAGS_32BITREQUIRED=2,
    COR_VERSION_MAJOR_V2=2,
    COR_VTABLE_64BIT=2,
    IMAGE_COR_MIH_EHRVA=2,
    COR_VERSION_MAJOR=3,
    COMIMAGE_FLAGS_IL_LIBRARY=4,
    COR_VTABLE_FROM_UNMANAGED=4,
    COR_DELETED_NAME_LENGTH=8,
    COR_VTABLEGAP_NAME_LENGTH=8,
    IMAGE_COR_MIH_BASICBLOCK=8,
    COR_VTABLE_CALL_MOST_DERIVED=16,
    IMAGE_COR_EATJ_THUNK_SIZE=32,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=255,
    MAX_CLASS_NAME=1024,
    MAX_PACKAGE_NAME=1024,
    COMIMAGE_FLAGS_TRACKDEBUGDATA=65536
} ReplacesCorHdrNumericDefines;

typedef struct IMAGE_COR20_HEADER IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;

struct IMAGE_COR20_HEADER {
    DWORD cb;
    WORD MajorRuntimeVersion;
    WORD MinorRuntimeVersion;
    IMAGE_DATA_DIRECTORY MetaData;
    DWORD Flags;
    DWORD EntryPointToken;
    IMAGE_DATA_DIRECTORY Resources;
    IMAGE_DATA_DIRECTORY StrongNameSignature;
    IMAGE_DATA_DIRECTORY CodeManagerTable;
    IMAGE_DATA_DIRECTORY VTableFixups;
    IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
    IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

typedef struct _IMAGE_DEBUG_MISC _IMAGE_DEBUG_MISC, *P_IMAGE_DEBUG_MISC;

typedef struct _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;

struct _IMAGE_DEBUG_MISC {
    DWORD DataType;
    DWORD Length;
    BOOLEAN Unicode;
    BYTE Reserved[3];
    BYTE Data[1];
};

typedef struct _OSVERSIONINFOW *LPOSVERSIONINFOW;

typedef LONG *PLONG;

typedef struct _struct_30 _struct_30, *P_struct_30;

struct _struct_30 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _MEMORY_BASIC_INFORMATION32 MEMORY_BASIC_INFORMATION32;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION _ASSEMBLY_FILE_DETAILED_INFORMATION, *P_ASSEMBLY_FILE_DETAILED_INFORMATION;

typedef WCHAR *PCWSTR;

struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulFilenameLength;
    DWORD ulPathLength;
    PCWSTR lpFileName;
    PCWSTR lpFilePath;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE _ACCESS_DENIED_CALLBACK_OBJECT_ACE, *P_ACCESS_DENIED_CALLBACK_OBJECT_ACE;

struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SECURITY_DESCRIPTOR _SECURITY_DESCRIPTOR, *P_SECURITY_DESCRIPTOR;

typedef struct _ACL _ACL, *P_ACL;

typedef struct _ACL ACL;

typedef ACL *PACL;

struct _ACL {
    BYTE AclRevision;
    BYTE Sbz1;
    WORD AclSize;
    WORD AceCount;
    WORD Sbz2;
};

struct _SECURITY_DESCRIPTOR {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    PSID Owner;
    PSID Group;
    PACL Sacl;
    PACL Dacl;
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _IO_COUNTERS _IO_COUNTERS, *P_IO_COUNTERS;

typedef struct _IO_COUNTERS IO_COUNTERS;

struct _IO_COUNTERS {
    ULONGLONG ReadOperationCount;
    ULONGLONG WriteOperationCount;
    ULONGLONG OtherOperationCount;
    ULONGLONG ReadTransferCount;
    ULONGLONG WriteTransferCount;
    ULONGLONG OtherTransferCount;
};

struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    IO_COUNTERS IoInfo;
};

typedef enum _CM_SERVICE_NODE_TYPE {
    DriverType=1,
    FileSystemType=2,
    AdapterType=4,
    RecognizerType=8,
    Win32ServiceOwnProcess=16,
    Win32ServiceShareProcess=32
} _CM_SERVICE_NODE_TYPE;

typedef union _IMAGE_AUX_SYMBOL _IMAGE_AUX_SYMBOL, *P_IMAGE_AUX_SYMBOL;

typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;

typedef struct _struct_136.conflict _struct_136.conflict, *P_struct_136.conflict;

typedef struct _struct_143.conflict _struct_143.conflict, *P_struct_143.conflict;

typedef union _union_137 _union_137, *P_union_137;

typedef union _union_139.conflict _union_139.conflict, *P_union_139.conflict;

typedef struct _struct_140.conflict _struct_140.conflict, *P_struct_140.conflict;

typedef struct _struct_141 _struct_141, *P_struct_141;

struct _struct_140.conflict {
    DWORD PointerToLinenumber;
    DWORD PointerToNextFunction;
};

struct _struct_141 {
    WORD Dimension[4];
};

union _union_139.conflict {
    struct _struct_140.conflict Function;
    struct _struct_141 Array;
};

union _union_137 {
    struct _struct_138.conflict LnSz;
    DWORD TotalSize;
};

struct _struct_136.conflict {
    DWORD TagIndex;
    union _union_137 Misc;
    union _union_139.conflict FcnAry;
    WORD TvIndex;
};

struct _struct_143.conflict {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
};

union _IMAGE_AUX_SYMBOL {
    struct _struct_136.conflict Sym;
    struct _struct_142.conflict File;
    struct _struct_143.conflict Section;
};

typedef struct _TOKEN_STATISTICS _TOKEN_STATISTICS, *P_TOKEN_STATISTICS;

typedef enum _TOKEN_TYPE {
    TokenPrimary=1,
    TokenImpersonation=2
} _TOKEN_TYPE;

typedef enum _TOKEN_TYPE TOKEN_TYPE;

struct _TOKEN_STATISTICS {
    LUID TokenId;
    LUID AuthenticationId;
    LARGE_INTEGER ExpirationTime;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    DWORD DynamicCharged;
    DWORD DynamicAvailable;
    DWORD GroupCount;
    DWORD PrivilegeCount;
    LUID ModifiedId;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _struct_19 _struct_19, *P_struct_19;

struct _struct_19 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _SYSTEM_NUMA_INFORMATION _SYSTEM_NUMA_INFORMATION, *P_SYSTEM_NUMA_INFORMATION;

typedef struct _SYSTEM_NUMA_INFORMATION SYSTEM_NUMA_INFORMATION;

typedef union _union_97 _union_97, *P_union_97;

union _union_97 {
    ULONGLONG ActiveProcessorsAffinityMask[16];
    ULONGLONG AvailableMemory[16];
};

struct _SYSTEM_NUMA_INFORMATION {
    DWORD HighestNodeNumber;
    DWORD Reserved;
    union _union_97 field2_0x8;
};

typedef struct _struct_13 _struct_13, *P_struct_13;

struct _struct_13 {
    DWORD LowPart;
    DWORD HighPart;
};

typedef struct _struct_12 _struct_12, *P_struct_12;

struct _struct_12 {
    DWORD LowPart;
    DWORD HighPart;
};

typedef struct _IMAGE_TLS_DIRECTORY32 _IMAGE_TLS_DIRECTORY32, *P_IMAGE_TLS_DIRECTORY32;

typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;

struct _IMAGE_TLS_DIRECTORY32 {
    DWORD StartAddressOfRawData;
    DWORD EndAddressOfRawData;
    DWORD AddressOfIndex;
    DWORD AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef struct _struct_10 _struct_10, *P_struct_10;

struct _struct_10 {
    DWORD LowPart;
    LONG HighPart;
};

typedef DWORD SECURITY_INFORMATION;

typedef struct _IMAGE_OS2_HEADER _IMAGE_OS2_HEADER, *P_IMAGE_OS2_HEADER;

typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;

struct _IMAGE_OS2_HEADER {
    WORD ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    WORD ne_enttab;
    WORD ne_cbenttab;
    LONG ne_crc;
    WORD ne_flags;
    WORD ne_autodata;
    WORD ne_heap;
    WORD ne_stack;
    LONG ne_csip;
    LONG ne_sssp;
    WORD ne_cseg;
    WORD ne_cmod;
    WORD ne_cbnrestab;
    WORD ne_segtab;
    WORD ne_rsrctab;
    WORD ne_restab;
    WORD ne_modtab;
    WORD ne_imptab;
    LONG ne_nrestab;
    WORD ne_cmovent;
    WORD ne_align;
    WORD ne_cres;
    BYTE ne_exetyp;
    BYTE ne_flagsothers;
    WORD ne_pretthunks;
    WORD ne_psegrefbytes;
    WORD ne_swaparea;
    WORD ne_expver;
};

typedef WCHAR *LPWCH;

typedef struct _struct_28 _struct_28, *P_struct_28;

struct _struct_28 {
    DWORD BaseMid:8;
    DWORD Type:5;
    DWORD Dpl:2;
    DWORD Pres:1;
    DWORD LimitHi:4;
    DWORD Sys:1;
    DWORD Reserved_0:1;
    DWORD Default_Big:1;
    DWORD Granularity:1;
    DWORD BaseHi:8;
};

typedef struct _SYSTEM_AUDIT_OBJECT_ACE _SYSTEM_AUDIT_OBJECT_ACE, *P_SYSTEM_AUDIT_OBJECT_ACE;

struct _SYSTEM_AUDIT_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _struct_27 _struct_27, *P_struct_27;

struct _struct_27 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _struct_29 _struct_29, *P_struct_29;

struct _struct_29 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;

typedef ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation=1,
    ActivationContextDetailedInformation=2,
    AssemblyDetailedInformationInActivationContext=3,
    AssemblyDetailedInformationInActivationContxt=3,
    FileInformationInAssemblyOfAssemblyInActivationContext=4,
    FileInformationInAssemblyOfAssemblyInActivationContxt=4,
    MaxActivationContextInfoClass=5
} _ACTIVATION_CONTEXT_INFO_CLASS;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _struct_20 _struct_20, *P_struct_20;

struct _struct_20 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _EXCEPTION_RECORD64 _EXCEPTION_RECORD64, *P_EXCEPTION_RECORD64;

typedef struct _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;

typedef ulonglong DWORD64;

struct _EXCEPTION_RECORD64 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD64 ExceptionRecord;
    DWORD64 ExceptionAddress;
    DWORD NumberParameters;
    DWORD __unusedAlignment;
    DWORD64 ExceptionInformation[15];
};

typedef LPCSTR LPCUTSTR;

typedef struct _TAPE_SET_POSITION _TAPE_SET_POSITION, *P_TAPE_SET_POSITION;

struct _TAPE_SET_POSITION {
    DWORD Method;
    DWORD Partition;
    LARGE_INTEGER Offset;
    BOOLEAN Immediate;
};

typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser=1,
    TokenGroups=2,
    TokenPrivileges=3,
    TokenOwner=4,
    TokenPrimaryGroup=5,
    TokenDefaultDacl=6,
    TokenSource=7,
    TokenType=8,
    TokenImpersonationLevel=9,
    TokenStatistics=10,
    TokenRestrictedSids=11,
    TokenSessionId=12,
    TokenGroupsAndPrivileges=13,
    TokenSessionReference=14,
    TokenSandBoxInert=15
} _TOKEN_INFORMATION_CLASS;

typedef struct _TAPE_ERASE TAPE_ERASE;

typedef struct _TOKEN_DEFAULT_DACL _TOKEN_DEFAULT_DACL, *P_TOKEN_DEFAULT_DACL;

typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;

struct _TOKEN_DEFAULT_DACL {
    PACL DefaultDacl;
};

typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;

typedef struct _FILE_NOTIFY_INFORMATION _FILE_NOTIFY_INFORMATION, *P_FILE_NOTIFY_INFORMATION;

struct _FILE_NOTIFY_INFORMATION {
    DWORD NextEntryOffset;
    DWORD Action;
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef struct _SYSTEM_AUDIT_ACE _SYSTEM_AUDIT_ACE, *P_SYSTEM_AUDIT_ACE;

typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;

struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_TLS_DIRECTORY64 _IMAGE_TLS_DIRECTORY64, *P_IMAGE_TLS_DIRECTORY64;

typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;

struct _IMAGE_TLS_DIRECTORY64 {
    ULONGLONG StartAddressOfRawData;
    ULONGLONG EndAddressOfRawData;
    ULONGLONG AddressOfIndex;
    ULONGLONG AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef enum _AUDIT_EVENT_TYPE {
    AuditEventObjectAccess=0,
    AuditEventDirectoryServiceAccess=1
} _AUDIT_EVENT_TYPE;

typedef enum _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;

typedef struct _JOB_SET_ARRAY _JOB_SET_ARRAY, *P_JOB_SET_ARRAY;

typedef struct _JOB_SET_ARRAY JOB_SET_ARRAY;

struct _JOB_SET_ARRAY {
    HANDLE JobHandle;
    DWORD MemberLevel;
    DWORD Flags;
};

typedef struct _PRIVILEGE_SET _PRIVILEGE_SET, *P_PRIVILEGE_SET;

struct _PRIVILEGE_SET {
    DWORD PrivilegeCount;
    DWORD Control;
    LUID_AND_ATTRIBUTES Privilege[1];
};

typedef struct _EVENTLOGRECORD *PEVENTLOGRECORD;

typedef struct _REPARSE_GUID_DATA_BUFFER _REPARSE_GUID_DATA_BUFFER, *P_REPARSE_GUID_DATA_BUFFER;

typedef struct _struct_104 _struct_104, *P_struct_104;

struct _struct_104 {
    BYTE DataBuffer[1];
};

struct _REPARSE_GUID_DATA_BUFFER {
    DWORD ReparseTag;
    WORD ReparseDataLength;
    WORD Reserved;
    GUID ReparseGuid;
    struct _struct_104 GenericReparseBuffer;
};

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION _JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *P_JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    DWORD EndOfJobTimeAction;
};

typedef struct _ACCESS_DENIED_OBJECT_ACE _ACCESS_DENIED_OBJECT_ACE, *P_ACCESS_DENIED_OBJECT_ACE;

struct _ACCESS_DENIED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _TEB _TEB, *P_TEB;

struct _TEB {
};

typedef struct _IMAGE_DEBUG_DIRECTORY _IMAGE_DEBUG_DIRECTORY, *P_IMAGE_DEBUG_DIRECTORY;

typedef struct _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;

struct _IMAGE_DEBUG_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Type;
    DWORD SizeOfData;
    DWORD AddressOfRawData;
    DWORD PointerToRawData;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY _IMAGE_RESOURCE_DIRECTORY, *P_IMAGE_RESOURCE_DIRECTORY;

typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;

struct _IMAGE_RESOURCE_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    WORD NumberOfNamedEntries;
    WORD NumberOfIdEntries;
};

typedef struct _MEMORY_BASIC_INFORMATION32 *PMEMORY_BASIC_INFORMATION32;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT _JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *P_JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    HANDLE CompletionPort;
};

typedef SHORT *PSHORT;

typedef union _union_148.conflict _union_148.conflict, *P_union_148.conflict;

union _union_148.conflict {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef union _union_192 _union_192, *P_union_192;

union _union_192 {
    WORD Ordinal;
    WORD Hint;
};

typedef union _union_190 _union_190, *P_union_190;

union _union_190 {
    WORD Ordinal;
    WORD Hint;
};

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION _JOBOBJECT_BASIC_LIMIT_INFORMATION, *P_JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    LARGE_INTEGER PerProcessUserTimeLimit;
    LARGE_INTEGER PerJobUserTimeLimit;
    DWORD LimitFlags;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    DWORD ActiveProcessLimit;
    ULONG_PTR Affinity;
    DWORD PriorityClass;
    DWORD SchedulingClass;
};

typedef struct _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY _IMAGE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD UnwindInfoAddress;
};

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR RTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef struct _ImageArchitectureHeader _ImageArchitectureHeader, *P_ImageArchitectureHeader;

struct _ImageArchitectureHeader {
    uint AmaskValue:1;
    int field1_0x0:7;
    uint AmaskShift:8;
    int field3_0x2:16;
    DWORD FirstEntryRVA;
};

typedef struct _MEMORY_BASIC_INFORMATION64 *PMEMORY_BASIC_INFORMATION64;

typedef struct _OSVERSIONINFOEXW _OSVERSIONINFOEXW, *P_OSVERSIONINFOEXW;

struct _OSVERSIONINFOEXW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef union _union_186 _union_186, *P_union_186;

union _union_186 {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
};

typedef struct _SE_IMPERSONATION_STATE _SE_IMPERSONATION_STATE, *P_SE_IMPERSONATION_STATE;

typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;

typedef PVOID PACCESS_TOKEN;

struct _SE_IMPERSONATION_STATE {
    PACCESS_TOKEN Token;
    BOOLEAN CopyOnOpen;
    BOOLEAN EffectiveOnly;
    SECURITY_IMPERSONATION_LEVEL Level;
};

typedef struct _OSVERSIONINFOEXA _OSVERSIONINFOEXA, *P_OSVERSIONINFOEXA;

struct _OSVERSIONINFOEXA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;

typedef union _FILE_SEGMENT_ELEMENT _FILE_SEGMENT_ELEMENT, *P_FILE_SEGMENT_ELEMENT;

typedef union _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;

union _FILE_SEGMENT_ELEMENT {
    PVOID64 Buffer;
    ULONGLONG Alignment;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG _RTL_CRITICAL_SECTION_DEBUG, *P_RTL_CRITICAL_SECTION_DEBUG;

typedef struct _RTL_CRITICAL_SECTION _RTL_CRITICAL_SECTION, *P_RTL_CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;
};

struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD Type;
    WORD CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Spare[2];
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS _TAPE_SET_MEDIA_PARAMETERS, *P_TAPE_SET_MEDIA_PARAMETERS;

struct _TAPE_SET_MEDIA_PARAMETERS {
    DWORD BlockSize;
};

typedef struct _NT_TIB _NT_TIB, *P_NT_TIB;

typedef struct _NT_TIB NT_TIB;

typedef struct _EXCEPTION_REGISTRATION_RECORD _EXCEPTION_REGISTRATION_RECORD, *P_EXCEPTION_REGISTRATION_RECORD;

typedef union _union_78 _union_78, *P_union_78;

union _union_78 {
    PVOID FiberData;
    DWORD Version;
};

struct _EXCEPTION_REGISTRATION_RECORD {
};

struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;
    union _union_78 field4_0x10;
    PVOID ArbitraryUserPointer;
    struct _NT_TIB *Self;
};

typedef struct _PACKEDEVENTINFO _PACKEDEVENTINFO, *P_PACKEDEVENTINFO;

typedef struct _PACKEDEVENTINFO *PPACKEDEVENTINFO;

struct _PACKEDEVENTINFO {
    DWORD ulSize;
    DWORD ulNumEventsForLogFile;
    DWORD ulOffsets[0];
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY _ADMINISTRATOR_POWER_POLICY, *P_ADMINISTRATOR_POWER_POLICY;

typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;

struct _ADMINISTRATOR_POWER_POLICY {
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    DWORD MinVideoTimeout;
    DWORD MaxVideoTimeout;
    DWORD MinSpindownTimeout;
    DWORD MaxSpindownTimeout;
};

typedef struct SYSTEM_POWER_CAPABILITIES SYSTEM_POWER_CAPABILITIES, *PSYSTEM_POWER_CAPABILITIES;

struct SYSTEM_POWER_CAPABILITIES {
    BOOLEAN PowerButtonPresent;
    BOOLEAN SleepButtonPresent;
    BOOLEAN LidPresent;
    BOOLEAN SystemS1;
    BOOLEAN SystemS2;
    BOOLEAN SystemS3;
    BOOLEAN SystemS4;
    BOOLEAN SystemS5;
    BOOLEAN HiberFilePresent;
    BOOLEAN FullWake;
    BOOLEAN VideoDimPresent;
    BOOLEAN ApmPresent;
    BOOLEAN UpsPresent;
    BOOLEAN ThermalControl;
    BOOLEAN ProcessorThrottle;
    BYTE ProcessorMinThrottle;
    BYTE ProcessorMaxThrottle;
    BYTE spare2[4];
    BOOLEAN DiskSpinDown;
    BYTE spare3[8];
    BOOLEAN SystemBatteriesPresent;
    BOOLEAN BatteriesAreShortTerm;
    struct BATTERY_REPORTING_SCALE BatteryScale[3];
    SYSTEM_POWER_STATE AcOnLineWake;
    SYSTEM_POWER_STATE SoftLidWake;
    SYSTEM_POWER_STATE RtcWake;
    SYSTEM_POWER_STATE MinDeviceWakeState;
    SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION _JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *P_JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    IO_COUNTERS IoInfo;
    SIZE_T ProcessMemoryLimit;
    SIZE_T JobMemoryLimit;
    SIZE_T PeakProcessMemoryUsed;
    SIZE_T PeakJobMemoryUsed;
};

typedef LONG (*PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *);

typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;

typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulEncodedAssemblyIdentityLength;
    DWORD ulManifestPathType;
    DWORD ulManifestPathLength;
    LARGE_INTEGER liManifestLastWriteTime;
    DWORD ulPolicyPathType;
    DWORD ulPolicyPathLength;
    LARGE_INTEGER liPolicyLastWriteTime;
    DWORD ulMetadataSatelliteRosterIndex;
    DWORD ulManifestVersionMajor;
    DWORD ulManifestVersionMinor;
    DWORD ulPolicyVersionMajor;
    DWORD ulPolicyVersionMinor;
    DWORD ulAssemblyDirectoryNameLength;
    PCWSTR lpAssemblyEncodedAssemblyIdentity;
    PCWSTR lpAssemblyManifestPath;
    PCWSTR lpAssemblyPolicyPath;
    PCWSTR lpAssemblyDirectoryName;
    DWORD ulFileCount;
};

typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;

typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

typedef struct _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;

typedef struct _ACCESS_DENIED_CALLBACK_ACE _ACCESS_DENIED_CALLBACK_ACE, *P_ACCESS_DENIED_CALLBACK_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;

struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef enum enum_105 *PPOWER_ACTION;

typedef struct _IMAGE_LINENUMBER _IMAGE_LINENUMBER, *P_IMAGE_LINENUMBER;

typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;

typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER;

struct _IMAGE_LINENUMBER {
    union _union_148.conflict Type;
    WORD Linenumber;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *P_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _TOKEN_PRIMARY_GROUP _TOKEN_PRIMARY_GROUP, *P_TOKEN_PRIMARY_GROUP;

struct _TOKEN_PRIMARY_GROUP {
    PSID PrimaryGroup;
};

typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;

typedef struct _SYSTEM_ALARM_ACE _SYSTEM_ALARM_ACE, *P_SYSTEM_ALARM_ACE;

typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;

struct _SYSTEM_ALARM_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD ExceptionHandler;
    DWORD HandlerData;
    DWORD PrologEndAddress;
};

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER _IMAGE_SEPARATE_DEBUG_HEADER, *P_IMAGE_SEPARATE_DEBUG_HEADER;

struct _IMAGE_SEPARATE_DEBUG_HEADER {
    WORD Signature;
    WORD Flags;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD ImageBase;
    DWORD SizeOfImage;
    DWORD NumberOfSections;
    DWORD ExportedNamesSize;
    DWORD DebugDirectorySize;
    DWORD SectionAlignment;
    DWORD Reserved[2];
};

typedef struct _TOKEN_GROUPS TOKEN_GROUPS;

typedef struct _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;

typedef struct _MESSAGE_RESOURCE_ENTRY _MESSAGE_RESOURCE_ENTRY, *P_MESSAGE_RESOURCE_ENTRY;

struct _MESSAGE_RESOURCE_ENTRY {
    WORD Length;
    WORD Flags;
    BYTE Text[1];
};

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST _JOBOBJECT_BASIC_PROCESS_ID_LIST, *P_JOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    DWORD NumberOfAssignedProcesses;
    DWORD NumberOfProcessIdsInList;
    ULONG_PTR ProcessIdList[1];
};

typedef struct _OSVERSIONINFOEXA *POSVERSIONINFOEXA;

typedef IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;

typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;

typedef struct _QUOTA_LIMITS _QUOTA_LIMITS, *P_QUOTA_LIMITS;

typedef struct _QUOTA_LIMITS QUOTA_LIMITS;

typedef QUOTA_LIMITS *PQUOTA_LIMITS;

struct _QUOTA_LIMITS {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;
    LARGE_INTEGER TimeLimit;
};

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION _ACTIVATION_CONTEXT_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    DWORD dwFlags;
    DWORD ulFormatVersion;
    DWORD ulAssemblyCount;
    DWORD ulRootManifestPathType;
    DWORD ulRootManifestPathChars;
    DWORD ulRootConfigurationPathType;
    DWORD ulRootConfigurationPathChars;
    DWORD ulAppDirPathType;
    DWORD ulAppDirPathChars;
    PCWSTR lpRootManifestPath;
    PCWSTR lpRootConfigurationPath;
    PCWSTR lpAppDirPath;
};

typedef struct _IMAGE_IMPORT_DESCRIPTOR _IMAGE_IMPORT_DESCRIPTOR, *P_IMAGE_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;

typedef IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;

typedef union _union_160 _union_160, *P_union_160;

union _union_160 {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
};

struct _IMAGE_IMPORT_DESCRIPTOR {
    union _union_160 field0_0x0;
    DWORD TimeDateStamp;
    DWORD ForwarderChain;
    DWORD Name;
    DWORD FirstThunk;
};

typedef struct _OBJECTID _OBJECTID, *P_OBJECTID;

struct _OBJECTID {
    GUID Lineage;
    DWORD Uniquifier;
};

typedef WCHAR *LPUWSTR;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY _IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    DWORD FuncStart;
    DWORD PrologLen:8;
    DWORD FuncLen:22;
    DWORD ThirtyTwoBit:1;
    DWORD ExceptionFlag:1;
};

typedef CHAR *PCH;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;

typedef struct CM_Power_Data_s CM_Power_Data_s, *PCM_Power_Data_s;

typedef struct CM_Power_Data_s *PCM_POWER_DATA;

struct CM_Power_Data_s {
    DWORD PD_Size;
    DEVICE_POWER_STATE PD_MostRecentPowerState;
    DWORD PD_Capabilities;
    DWORD PD_D1Latency;
    DWORD PD_D2Latency;
    DWORD PD_D3Latency;
    DEVICE_POWER_STATE PD_PowerStateMapping[7];
    SYSTEM_POWER_STATE PD_DeepestSystemWake;
};

typedef struct _ACL_SIZE_INFORMATION _ACL_SIZE_INFORMATION, *P_ACL_SIZE_INFORMATION;

typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;

typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;

struct _ACL_SIZE_INFORMATION {
    DWORD AceCount;
    DWORD AclBytesInUse;
    DWORD AclBytesFree;
};

typedef struct _IMAGE_RESOURCE_DATA_ENTRY _IMAGE_RESOURCE_DATA_ENTRY, *P_IMAGE_RESOURCE_DATA_ENTRY;

struct _IMAGE_RESOURCE_DATA_ENTRY {
    DWORD OffsetToData;
    DWORD Size;
    DWORD CodePage;
    DWORD Reserved;
};

typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;

typedef enum enum_106 {
    LT_DONT_CARE=0,
    LT_LOWEST_LATENCY=1
} enum_106;

typedef enum enum_106 LATENCY_TIME;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX _ACTIVATION_CONTEXT_QUERY_INDEX, *P_ACTIVATION_CONTEXT_QUERY_INDEX;

struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    DWORD ulAssemblyIndex;
    DWORD ulFileIndexInAssembly;
};

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef struct _TOKEN_CONTROL _TOKEN_CONTROL, *P_TOKEN_CONTROL;

typedef struct _TOKEN_SOURCE _TOKEN_SOURCE, *P_TOKEN_SOURCE;

typedef struct _TOKEN_SOURCE TOKEN_SOURCE;

struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    LUID SourceIdentifier;
};

struct _TOKEN_CONTROL {
    LUID TokenId;
    LUID AuthenticationId;
    LUID ModifiedId;
    TOKEN_SOURCE TokenSource;
};

typedef struct _TAPE_GET_POSITION _TAPE_GET_POSITION, *P_TAPE_GET_POSITION;

struct _TAPE_GET_POSITION {
    DWORD Type;
    DWORD Partition;
    LARGE_INTEGER Offset;
};

typedef char TCHAR;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;

typedef void (*PAPCFUNC)(ULONG_PTR);

typedef struct _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
    TapeDriveProblemNone=0,
    TapeDriveReadWriteWarning=1,
    TapeDriveReadWriteError=2,
    TapeDriveReadWarning=3,
    TapeDriveWriteWarning=4,
    TapeDriveReadError=5,
    TapeDriveWriteError=6,
    TapeDriveHardwareError=7,
    TapeDriveUnsupportedMedia=8,
    TapeDriveScsiConnectionError=9,
    TapeDriveTimetoClean=10,
    TapeDriveCleanDriveNow=11,
    TapeDriveMediaLifeExpired=12,
    TapeDriveSnappedTape=13
} _TAPE_DRIVE_PROBLEM_TYPE;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;

typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;

typedef enum _SID_NAME_USE {
    SidTypeUser=1,
    SidTypeGroup=2,
    SidTypeDomain=3,
    SidTypeAlias=4,
    SidTypeWellKnownGroup=5,
    SidTypeDeletedAccount=6,
    SidTypeInvalid=7,
    SidTypeUnknown=8,
    SidTypeComputer=9
} _SID_NAME_USE;

typedef IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;

typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;

typedef struct _IMAGE_EXPORT_DIRECTORY _IMAGE_EXPORT_DIRECTORY, *P_IMAGE_EXPORT_DIRECTORY;

struct _IMAGE_EXPORT_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Name;
    DWORD Base;
    DWORD NumberOfFunctions;
    DWORD NumberOfNames;
    DWORD AddressOfFunctions;
    DWORD AddressOfNames;
    DWORD AddressOfNameOrdinals;
};

typedef struct _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;

typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;

typedef struct _IMAGE_BOUND_FORWARDER_REF _IMAGE_BOUND_FORWARDER_REF, *P_IMAGE_BOUND_FORWARDER_REF;

struct _IMAGE_BOUND_FORWARDER_REF {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD Reserved;
};

typedef IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;

typedef struct _SYSTEM_POWER_POLICY _SYSTEM_POWER_POLICY, *P_SYSTEM_POWER_POLICY;

typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;

struct _SYSTEM_POWER_POLICY {
    DWORD Revision;
    struct POWER_ACTION_POLICY PowerButton;
    struct POWER_ACTION_POLICY SleepButton;
    struct POWER_ACTION_POLICY LidClose;
    SYSTEM_POWER_STATE LidOpenWake;
    DWORD Reserved;
    struct POWER_ACTION_POLICY Idle;
    DWORD IdleTimeout;
    BYTE IdleSensitivity;
    BYTE DynamicThrottle;
    BYTE Spare2[2];
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    SYSTEM_POWER_STATE ReducedLatencySleep;
    DWORD WinLogonFlags;
    DWORD Spare3;
    DWORD DozeS4Timeout;
    DWORD BroadcastCapacityResolution;
    struct SYSTEM_POWER_LEVEL DischargePolicy[4];
    DWORD VideoTimeout;
    BOOLEAN VideoDimDisplay;
    DWORD VideoReserved[3];
    DWORD SpindownTimeout;
    BOOLEAN OptimizeForPower;
    BYTE FanThrottleTolerance;
    BYTE ForcedThrottle;
    BYTE MinThrottle;
    struct POWER_ACTION_POLICY OverThrottled;
};

typedef struct _GENERIC_MAPPING _GENERIC_MAPPING, *P_GENERIC_MAPPING;

typedef struct _GENERIC_MAPPING GENERIC_MAPPING;

typedef GENERIC_MAPPING *PGENERIC_MAPPING;

struct _GENERIC_MAPPING {
    ACCESS_MASK GenericRead;
    ACCESS_MASK GenericWrite;
    ACCESS_MASK GenericExecute;
    ACCESS_MASK GenericAll;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE _ACCESS_ALLOWED_OBJECT_ACE, *P_ACCESS_ALLOWED_OBJECT_ACE;

struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF=1
} IMAGE_AUX_SYMBOL_TYPE;

typedef ACE_HEADER *PACE_HEADER;

typedef struct _IMAGE_NT_HEADERS _IMAGE_NT_HEADERS, *P_IMAGE_NT_HEADERS;

typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;

struct _IMAGE_NT_HEADERS {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef LPCSTR PCTSTR;

typedef TOKEN_TYPE *PTOKEN_TYPE;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES _TOKEN_GROUPS_AND_PRIVILEGES, *P_TOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;

struct _TOKEN_GROUPS_AND_PRIVILEGES {
    DWORD SidCount;
    DWORD SidLength;
    PSID_AND_ATTRIBUTES Sids;
    DWORD RestrictedSidCount;
    DWORD RestrictedSidLength;
    PSID_AND_ATTRIBUTES RestrictedSids;
    DWORD PrivilegeCount;
    DWORD PrivilegeLength;
    PLUID_AND_ATTRIBUTES Privileges;
    LUID AuthenticationId;
};

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;

typedef struct _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _TAPE_ERASE *PTAPE_ERASE;

typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;

typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _TOKEN_CONTROL TOKEN_CONTROL;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;

typedef struct _struct_195 _struct_195, *P_struct_195;

struct _struct_195 {
    SINGLE_LIST_ENTRY Next;
    WORD Depth;
    WORD Sequence;
};

typedef ACCESS_MASK *PACCESS_MASK;

typedef IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;

typedef struct _TOKEN_STATISTICS *PTOKEN_STATISTICS;

typedef struct _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;

typedef struct _struct_9 _struct_9, *P_struct_9;

struct _struct_9 {
    DWORD LowPart;
    LONG HighPart;
};

typedef struct _PRIVILEGE_SET PRIVILEGE_SET;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;

typedef struct _NON_PAGED_DEBUG_INFO _NON_PAGED_DEBUG_INFO, *P_NON_PAGED_DEBUG_INFO;

typedef struct _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;

struct _NON_PAGED_DEBUG_INFO {
    WORD Signature;
    WORD Flags;
    DWORD Size;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD SizeOfImage;
    ULONGLONG ImageBase;
};

typedef WCHAR *NWPSTR;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;

typedef struct _struct_170 _struct_170, *P_struct_170;

struct _struct_170 {
    DWORD OffsetToDirectory:31;
    DWORD DataIsDirectory:1;
};

typedef LONGLONG *PLONGLONG;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;

typedef struct _struct_168 _struct_168, *P_struct_168;

struct _struct_168 {
    BYTE DataBuffer[1];
};

typedef struct _TOKEN_OWNER _TOKEN_OWNER, *P_TOKEN_OWNER;

struct _TOKEN_OWNER {
    PSID Owner;
};

typedef struct _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;

typedef struct _NT_TIB64 _NT_TIB64, *P_NT_TIB64;

typedef union _union_83.conflict _union_83.conflict, *P_union_83.conflict;

union _union_83.conflict {
    DWORD64 FiberData;
    DWORD Version;
};

struct _NT_TIB64 {
    DWORD64 ExceptionList;
    DWORD64 StackBase;
    DWORD64 StackLimit;
    DWORD64 SubSystemTib;
    union _union_83.conflict field4_0x20;
    DWORD64 ArbitraryUserPointer;
    DWORD64 Self;
};

typedef ULONGLONG *PULONGLONG;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32;

struct IMAGE_LOAD_CONFIG_DIRECTORY32 {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    DWORD DeCommitFreeBlockThreshold;
    DWORD DeCommitTotalFreeThreshold;
    DWORD LockPrefixTable;
    DWORD MaximumAllocationSize;
    DWORD VirtualMemoryThreshold;
    DWORD ProcessHeapFlags;
    DWORD ProcessAffinityMask;
    WORD CSDVersion;
    WORD Reserved1;
    DWORD EditList;
    DWORD Reserved[1];
};

typedef struct _struct_138 _struct_138, *P_struct_138;

typedef union _union_139 _union_139, *P_union_139;

typedef union _union_141 _union_141, *P_union_141;

typedef struct _struct_140 _struct_140, *P_struct_140;

typedef struct _struct_142 _struct_142, *P_struct_142;

typedef struct _struct_143 _struct_143, *P_struct_143;

struct _struct_142 {
    DWORD PointerToLinenumber;
    DWORD PointerToNextFunction;
};

struct _struct_143 {
    WORD Dimension[4];
};

union _union_141 {
    struct _struct_142 Function;
    struct _struct_143 Array;
};

struct _struct_140 {
    WORD Linenumber;
    WORD Size;
};

union _union_139 {
    struct _struct_140 LnSz;
    DWORD TotalSize;
};

struct _struct_138 {
    DWORD TagIndex;
    union _union_139 Misc;
    union _union_141 FcnAry;
    WORD TvIndex;
};

typedef struct _struct_136 _struct_136, *P_struct_136;

struct _struct_136 {
    DWORD Short;
    DWORD Long;
};

typedef struct _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONGLONG BeginAddress;
    ULONGLONG EndAddress;
    ULONGLONG ExceptionHandler;
    ULONGLONG HandlerData;
    ULONGLONG PrologEndAddress;
};

typedef struct _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;

typedef struct _struct_145 _struct_145, *P_struct_145;

struct _struct_145 {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
};

typedef struct _struct_144 _struct_144, *P_struct_144;

struct _struct_144 {
    BYTE Name[18];
};

typedef struct _OSVERSIONINFOEXW *POSVERSIONINFOEXW;

typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;

typedef IO_COUNTERS *PIO_COUNTERS;

typedef struct _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;

typedef struct _struct_106 _struct_106, *P_struct_106;

struct _struct_106 {
    BYTE DataBuffer[1];
};

typedef DWORDLONG *PDWORDLONG;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64;

struct IMAGE_LOAD_CONFIG_DIRECTORY64 {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    ULONGLONG DeCommitFreeBlockThreshold;
    ULONGLONG DeCommitTotalFreeThreshold;
    ULONGLONG LockPrefixTable;
    ULONGLONG MaximumAllocationSize;
    ULONGLONG VirtualMemoryThreshold;
    ULONGLONG ProcessAffinityMask;
    DWORD ProcessHeapFlags;
    WORD CSDVersion;
    WORD Reserved1;
    ULONGLONG EditList;
    DWORD Reserved[2];
};

typedef struct _MEMORY_BASIC_INFORMATION _MEMORY_BASIC_INFORMATION, *P_MEMORY_BASIC_INFORMATION;

struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _LDT_ENTRY _LDT_ENTRY, *P_LDT_ENTRY;

typedef union _union_26 _union_26, *P_union_26;

union _union_26 {
    struct _struct_27 Bytes;
    struct _struct_28 Bits;
};

struct _LDT_ENTRY {
    WORD LimitLow;
    WORD BaseLow;
    union _union_26 HighWord;
};

typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;

typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;

typedef struct _FLOATING_SAVE_AREA _FLOATING_SAVE_AREA, *P_FLOATING_SAVE_AREA;

typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

struct _FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef DWORD FLONG;

typedef struct _LUID *PLUID;

typedef struct ANON_OBJECT_HEADER ANON_OBJECT_HEADER, *PANON_OBJECT_HEADER;

struct ANON_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    CLSID ClassID;
    DWORD SizeOfData;
};

typedef ULARGE_INTEGER *PULARGE_INTEGER;

typedef enum _SID_NAME_USE *PSID_NAME_USE;

typedef struct _OBJECTID OBJECTID;

typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;

typedef union _SLIST_HEADER SLIST_HEADER;

typedef WCHAR *PCWCH;

typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;

typedef BOOLEAN *PBOOLEAN;

typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;

typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;

typedef struct _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;

typedef struct _PACKEDEVENTINFO PACKEDEVENTINFO;

typedef struct _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;

typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;

typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;

typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;

typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;

typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;

typedef struct _LIST_ENTRY *PRLIST_ENTRY;

typedef struct _FPO_DATA FPO_DATA;

typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY;

typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;

typedef struct _TOKEN_CONTROL *PTOKEN_CONTROL;

typedef struct _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;

typedef LONGLONG USN;

typedef struct _LDT_ENTRY *PLDT_ENTRY;

typedef struct _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *P_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER _IMAGE_ARCHIVE_MEMBER_HEADER, *P_IMAGE_ARCHIVE_MEMBER_HEADER;

struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    BYTE Name[16];
    BYTE Date[12];
    BYTE UserID[6];
    BYTE GroupID[6];
    BYTE Mode[8];
    BYTE Size[10];
    BYTE EndHeader[2];
};

typedef struct _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;

typedef struct _LDT_ENTRY LDT_ENTRY;

typedef enum _HEAP_INFORMATION_CLASS {
    HeapCompatibilityInformation=0
} _HEAP_INFORMATION_CLASS;

typedef enum _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;

typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;

typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;

typedef LPSTR LPUTSTR;

typedef IMAGE_SYMBOL *PIMAGE_SYMBOL;

typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;

typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;

typedef struct IMPORT_OBJECT_HEADER IMPORT_OBJECT_HEADER, *PIMPORT_OBJECT_HEADER;

struct IMPORT_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    DWORD SizeOfData;
    union _union_190 field6_0x10;
    WORD Type:2;
    WORD NameType:3;
    WORD Reserved:11;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;

typedef struct _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;

typedef struct _struct_168.conflict _struct_168.conflict, *P_struct_168.conflict;

struct _struct_168.conflict {
    DWORD NameOffset:31;
    DWORD NameIsString:1;
};

typedef struct _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;

typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;

typedef struct _NT_TIB32 _NT_TIB32, *P_NT_TIB32;

typedef struct _NT_TIB32 *PNT_TIB32;

typedef union _union_81 _union_81, *P_union_81;

union _union_81 {
    DWORD FiberData;
    DWORD Version;
};

struct _NT_TIB32 {
    DWORD ExceptionList;
    DWORD StackBase;
    DWORD StackLimit;
    DWORD SubSystemTib;
    union _union_81 field4_0x10;
    DWORD ArbitraryUserPointer;
    DWORD Self;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;

typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;

typedef struct _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _TOKEN_SOURCE *PTOKEN_SOURCE;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;

typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;

typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;

typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;

typedef struct _TOKEN_OWNER TOKEN_OWNER;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _OSVERSIONINFOA *POSVERSIONINFOA;

typedef struct _NT_TIB32 NT_TIB32;

typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;

typedef WORD LANGID;

typedef struct _NT_TIB64 *PNT_TIB64;

typedef struct _OSVERSIONINFOW *POSVERSIONINFOW;

typedef struct _TOKEN_USER *PTOKEN_USER;

typedef enum _SID_NAME_USE SID_NAME_USE;

typedef struct _OSVERSIONINFOA OSVERSIONINFOA;

typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;

typedef struct _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;

typedef struct _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;

typedef struct _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;

typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;

typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

typedef struct CM_Power_Data_s CM_POWER_DATA;

typedef struct _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

typedef enum IMPORT_OBJECT_TYPE {
    IMPORT_OBJECT_CODE=0,
    IMPORT_OBJECT_DATA=1,
    IMPORT_OBJECT_CONST=2
} IMPORT_OBJECT_TYPE;

typedef struct _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;

typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;

typedef struct LIST_ENTRY64 LIST_ENTRY64, *PLIST_ENTRY64;

struct LIST_ENTRY64 {
    ULONGLONG Flink;
    ULONGLONG Blink;
};

typedef BYTE FCHAR;

typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;

typedef struct _ACL_REVISION_INFORMATION _ACL_REVISION_INFORMATION, *P_ACL_REVISION_INFORMATION;

struct _ACL_REVISION_INFORMATION {
    DWORD AclRevision;
};

typedef OSVERSIONINFOA OSVERSIONINFO;

typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;

typedef struct _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;

typedef OSVERSIONINFOEXA OSVERSIONINFOEX;

typedef struct _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;

typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;

typedef struct _IMAGE_DOS_HEADER _IMAGE_DOS_HEADER, *P_IMAGE_DOS_HEADER;

typedef struct _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

struct _IMAGE_DOS_HEADER {
    WORD e_magic;
    WORD e_cblp;
    WORD e_cp;
    WORD e_crlc;
    WORD e_cparhdr;
    WORD e_minalloc;
    WORD e_maxalloc;
    WORD e_ss;
    WORD e_sp;
    WORD e_csum;
    WORD e_ip;
    WORD e_cs;
    WORD e_lfarlc;
    WORD e_ovno;
    WORD e_res[4];
    WORD e_oemid;
    WORD e_oeminfo;
    WORD e_res2[10];
    LONG e_lfanew;
};

typedef CHAR *PCSTR;

typedef struct _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;

typedef uchar TBYTE;

typedef LPCSTR PCUTSTR;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _OSVERSIONINFOW OSVERSIONINFOW;

typedef WORD FSHORT;

typedef struct _JOB_SET_ARRAY *PJOB_SET_ARRAY;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;

typedef struct _TAPE_PREPARE _TAPE_PREPARE, *P_TAPE_PREPARE;

typedef struct _TAPE_PREPARE *PTAPE_PREPARE;

struct _TAPE_PREPARE {
    DWORD Operation;
    BOOLEAN Immediate;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;

typedef struct _EVENTSFORLOGFILE EVENTSFORLOGFILE;

typedef struct _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;

typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;

typedef union _union_133 _union_133, *P_union_133;

union _union_133 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

typedef union _union_135 _union_135, *P_union_135;

union _union_135 {
    BYTE ShortName[8];
    struct _struct_136 Name;
    DWORD LongName[2];
};

typedef uchar *PTBYTE;

typedef union _union_99 _union_99, *P_union_99;

union _union_99 {
    ULONGLONG ActiveProcessorsAffinityMask[16];
    ULONGLONG AvailableMemory[16];
};

typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;

typedef DWORD EXECUTION_STATE;

typedef union _union_83 _union_83, *P_union_83;

union _union_83 {
    DWORD FiberData;
    DWORD Version;
};

typedef enum enum_107 {
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionSleep=2,
    PowerActionHibernate=3,
    PowerActionShutdown=4,
    PowerActionShutdownReset=5,
    PowerActionShutdownOff=6,
    PowerActionWarmEject=7
} enum_107;

typedef union _union_85 _union_85, *P_union_85;

union _union_85 {
    DWORD64 FiberData;
    DWORD Version;
};

typedef union _union_80 _union_80, *P_union_80;

union _union_80 {
    PVOID FiberData;
    DWORD Version;
};

typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;

typedef WCHAR *PWCH;

typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;

typedef union _union_167 _union_167, *P_union_167;

union _union_167 {
    struct _struct_168.conflict field0;
    DWORD Name;
    WORD Id;
};

typedef struct _SID *PISID;

typedef union _union_169 _union_169, *P_union_169;

union _union_169 {
    DWORD OffsetToData;
    struct _struct_170 field1;
};

typedef union _union_28 _union_28, *P_union_28;

union _union_28 {
    struct _struct_29 Bytes;
    struct _struct_30 Bits;
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef union _union_150 _union_150, *P_union_150;

union _union_150 {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef union _union_54 _union_54, *P_union_54;

union _union_54 {
    struct _struct_55 Bytes;
    struct _struct_56 Bits;
};

typedef union _union_148 _union_148, *P_union_148;

union _union_148 {
    DWORD VirtualAddress;
    DWORD RelocCount;
};

typedef union _union_162 _union_162, *P_union_162;

union _union_162 {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
};

typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;

typedef struct _TAPE_PREPARE TAPE_PREPARE;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef union _union_156 _union_156, *P_union_156;

union _union_156 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

typedef void (*PIMAGE_TLS_CALLBACK)(PVOID, DWORD, PVOID);

typedef union _union_158 _union_158, *P_union_158;

union _union_158 {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

typedef IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;

typedef WCHAR *PCUWSTR;

typedef enum IMPORT_OBJECT_NAME_TYPE {
    IMPORT_OBJECT_ORDINAL=0,
    IMPORT_OBJECT_NAME=1,
    IMPORT_OBJECT_NAME_NO_PREFIX=2,
    IMPORT_OBJECT_NAME_UNDECORATE=3
} IMPORT_OBJECT_NAME_TYPE;

typedef LPSTR PTSTR;

typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;

typedef DWORD *PSECURITY_INFORMATION;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef struct _NT_TIB64 NT_TIB64;

typedef struct _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;

typedef enum enum_110 {
    SystemPowerPolicyAc=0,
    SystemPowerPolicyDc=1,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    SystemPowerCapabilities=4,
    SystemBatteryState=5,
    SystemPowerStateHandler=6,
    ProcessorStateHandler=7,
    SystemPowerPolicyCurrent=8,
    AdministratorPowerPolicy=9,
    SystemReserveHiberFile=10,
    ProcessorInformation=11,
    SystemPowerInformation=12,
    ProcessorStateHandler2=13,
    LastWakeTime=14,
    LastSleepTime=15,
    SystemExecutionState=16,
    SystemPowerStateNotifyHandler=17,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyDc=19,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    ProcessorPowerPolicyCurrent=22
} enum_110;

typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;

typedef struct _SYSTEM_NUMA_INFORMATION *PSYSTEM_NUMA_INFORMATION;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef WCHAR *LPCWCH;

typedef POSVERSIONINFOA POSVERSIONINFO;

typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;

typedef CHAR *NPSTR;

typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;

typedef LPSTR PUTSTR;

typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;

typedef struct _LIST_ENTRY *PLIST_ENTRY;

typedef DWORD *PDWORD;

typedef PDWORD PLCID;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

typedef struct _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;

typedef struct _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;

typedef char *PTCHAR;

typedef struct _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;

typedef struct _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;

typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;

typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;

typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;

typedef struct _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;

typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;

typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;

typedef struct _TAPE_GET_POSITION *PTAPE_GET_POSITION;

typedef IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;

typedef struct _TAPE_SET_POSITION *PTAPE_SET_POSITION;

typedef void (*WORKERCALLBACKFUNC)(PVOID);

typedef struct _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;

typedef POSVERSIONINFOEXA POSVERSIONINFOEX;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;

typedef KSPIN_LOCK *PKSPIN_LOCK;

typedef struct _TOKEN_USER TOKEN_USER;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;

typedef LPSTR LPTSTR;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;

typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

typedef NT_TIB *PNT_TIB;

typedef void (*APC_CALLBACK_FUNCTION)(DWORD, PVOID, PVOID);

typedef struct _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;

typedef enum _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;

typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;

typedef FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR RTL_VERIFIER_THUNK_DESCRIPTOR;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;

typedef void (*WAITORTIMERCALLBACKFUNC)(PVOID, BOOLEAN);

typedef struct _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;

typedef CHAR *LPCCH;

typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

typedef union _SLIST_HEADER *PSLIST_HEADER;

typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;

typedef LPSTR LPTCH;

typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;

typedef struct _TOKEN_OWNER *PTOKEN_OWNER;

typedef struct _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;

#define TAPE_ERASE_SHORT 0

#define IMAGE_FILE_EXECUTABLE_IMAGE 2

#define IMAGE_SYM_TYPE_VOID 1

#define VER_SUITE_ENTERPRISE 2

#define SEF_DEFAULT_OWNER_FROM_PARENT 32

#define IMAGE_REL_ALPHA_SECRELLO 17

#define TAPE_DRIVE_SET_ECC 2147483904

#define PROCESSOR_ARCHITECTURE_SHX 4

#define EVENTLOG_FORWARDS_READ 4

#define MUTANT_QUERY_STATE 1

#define N_BTSHFT 4

#define SUBLANG_KOREAN 1

#define IMAGE_SIZEOF_STD_OPTIONAL_HEADER 28

#define DOMAIN_GROUP_RID_ENTERPRISE_ADMINS 519

#define PROCESS_VM_WRITE 32

#define VER_SUITE_TERMINAL 16

#define JOB_OBJECT_UILIMIT_WRITECLIPBOARD 4

#define LANG_SPANISH 10

#define IMAGE_REL_AMD64_REL32 4

#define IMAGE_RESOURCE_NAME_IS_STRING 2147483648

#define VER_SERVICEPACKMINOR 16

#define FILE_ATTRIBUTE_SPARSE_FILE 512

#define IMAGE_FILE_LARGE_ADDRESS_AWARE 32

#define FILE_ADD_FILE 2

#define IMAGE_RESOURCE_DATA_IS_DIRECTORY 2147483648

#define CONTEXT_CONTROL 65537

#define ACTIVATION_CONTEXT_PATH_TYPE_URL 3

#define IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 2

#define RTL_CRITSECT_TYPE 0

#define IMAGE_REL_PPC_GPREL 21

#define IMAGE_REL_AMD64_ABSOLUTE 0

#define PROCESSOR_MOTOROLA_821 821

#define IMAGE_FILE_32BIT_MACHINE 256

#define DBG_CONTINUE 65538

#define JOB_OBJECT_LIMIT_WORKINGSET 1

#define TOKEN_IMPERSONATE 4

#define SUBLANG_ARABIC_OMAN 8

#define FILE_ATTRIBUTE_DEVICE 64

#define SORT_CHINESE_PRCP 0

#define IMAGE_SCN_ALIGN_MASK 15728640

#define IMAGE_REL_IA64_DIR32NB 16

#define PAGE_EXECUTE_READ 32

#define STATUS_SINGLE_STEP 2147483652

#define ACE_INHERITED_OBJECT_TYPE_PRESENT 2

#define PO_THROTTLE_NONE 0

#define TAPE_DRIVE_TAPE_REMAINING 512

#define KEY_CREATE_SUB_KEY 4

#define IMAGE_SUBSYSTEM_WINDOWS_CUI 3

#define KEY_EXECUTE 131097

#define DELETE 65536

#define EMARCH_ENC_I17_IMM41a_VAL_POS_X 22

#define IMAGE_SCN_MEM_16BIT 131072

#define REG_OPENED_EXISTING_KEY 2

#define JOB_OBJECT_SET_ATTRIBUTES 2

#define SECURITY_AUTHENTICATED_USER_RID 11

#define JOB_OBJECT_MSG_END_OF_JOB_TIME 1

#define IMAGE_FILE_MACHINE_UNKNOWN 0

#define APPLICATION_VERIFIER_DOUBLE_FREE 7

#define RTL_RESOURCE_TYPE 1

#define SUBLANG_ARABIC_LIBYA 4

#define POWER_ACTION_UI_ALLOWED 2

#define PAGE_EXECUTE 16

#define SECURITY_PRINCIPAL_SELF_RID 10

#define ACTIVATION_CONTEXT_PATH_TYPE_NONE 1

#define ACCESS_MAX_MS_ACE_TYPE 8

#define IMAGE_SYM_CLASS_MEMBER_OF_ENUM 16

#define IMAGE_REL_IA64_IMM14 1

#define MEM_FREE 65536

#define FILE_ADD_SUBDIRECTORY 4

#define EVENT_ALL_ACCESS 2031619

#define PF_ALPHA_BYTE_INSTRUCTIONS 5

#define FILE_NAMED_STREAMS 262144

#define REG_OPTION_VOLATILE 1

#define SUBLANG_ENGLISH_CARIBBEAN 9

#define STATUS_FLOAT_DIVIDE_BY_ZERO 3221225614

#define WT_EXECUTELONGFUNCTION 16

#define LANG_MARATHI 78

#define APPLICATION_ERROR_MASK 536870912

#define EMARCH_ENC_I17_IMM41a_INST_WORD_X 1

#define EMARCH_ENC_I17_IMM41c_INST_WORD_X 2

#define SECTION_MAP_WRITE 2

#define LANG_ASSAMESE 77

#define IMAGE_REL_I386_SECREL7 13

#define SEC_COMMIT 134217728

#define SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE 15

#define TAPE_DRIVE_COMPRESSION 131072

#define IMAGE_NT_OPTIONAL_HDR32_MAGIC 267

#define EMARCH_ENC_I17_IMM41c_SIZE_X 23

#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 256

#define STATUS_FLOAT_DENORMAL_OPERAND 3221225613

#define SECURITY_DIALUP_RID 1

#define IMAGE_DEBUG_TYPE_MISC 4

#define JOB_OBJECT_SET_SECURITY_ATTRIBUTES 16

#define SUBLANG_CHINESE_HONGKONG 3

#define REG_LEGAL_CHANGE_FILTER 15

#define LANG_VIETNAMESE 42

#define IMAGE_REL_ARM_ABSOLUTE 0

#define DBG_CONTROL_BREAK 1073807368

#define PAGE_NOCACHE 512

#define VER_SUITENAME 64

#define IMAGE_REL_IA64_IMM22 2

#define TIMER_QUERY_STATE 1

#define TAPE_DRIVE_REWIND_IMMEDIATE 2147483656

#define SORT_GEORGIAN_MODERN 1

#define IMAGE_SYM_DTYPE_FUNCTION 2

#define SUBLANG_ENGLISH_JAMAICA 8

#define IMAGE_SYM_CLASS_UNION_TAG 12

#define IMAGE_REL_M32R_ADDR24 3

#define VER_NT_DOMAIN_CONTROLLER 2

#define DOMAIN_ALIAS_RID_RAS_SERVERS 553

#define IMAGE_SYM_CLASS_EXTERNAL_DEF 5

#define TAPE_LONG_FILEMARKS 3

#define MINLONG 2147483648

#define MEM_PHYSICAL 4194304

#define IMAGE_REL_M32R_ADDR32 1

#define IMAGE_SYM_CLASS_ENUM_TAG 15

#define DISABLE_MAX_PRIVILEGE 1

#define APPLICATION_VERIFIER_NO_BREAK 536870912

#define FILE_NOTIFY_CHANGE_ATTRIBUTES 4

#define KEY_WRITE 131078

#define MEM_RESERVE 8192

#define SUBLANG_CHINESE_TRADITIONAL 1

#define IMAGE_SUBSYSTEM_WINDOWS_GUI 2

#define PROCESSOR_HITACHI_SH3 10003

#define PROCESSOR_HITACHI_SH4 10005

#define IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 1

#define IMAGE_OS2_SIGNATURE 17742

#define PF_RDTSC_INSTRUCTION_AVAILABLE 8

#define IMAGE_SYM_TYPE_BYTE 12

#define SEC_NOCACHE 268435456

#define SUBLANG_UZBEK_CYRILLIC 2

#define PROCESSOR_ARM720 1824

#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11

#define MAXIMUM_REPARSE_DATA_BUFFER_SIZE 16384

#define REG_QWORD_LITTLE_ENDIAN 11

#define THREAD_QUERY_INFORMATION 64

#define TLS_MINIMUM_AVAILABLE 64

#define IMAGE_REL_AM_SECTION 8

#define IMAGE_REL_CEE_ABSOLUTE 0

#define LANG_CATALAN 3

#define FILE_UNICODE_ON_DISK 4

#define PROCESS_QUERY_INFORMATION 1024

#define APPLICATION_VERIFIER_CORRUPTED_HEAP_BLOCK 8

#define IMAGE_REL_ALPHA_REFLONGNB 16

#define IMAGE_REL_IA64_IMM64 3

#define EMARCH_ENC_I17_IC_SIZE_X 1

#define ACCESS_ALLOWED_COMPOUND_ACE_TYPE 4

#define HEAP_DISABLE_COALESCE_ON_FREE 128

#define POWER_USER_NOTIFY_BUTTON 8

#define JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS 524287

#define JOB_OBJECT_SECURITY_ONLY_TOKEN 4

#define IMAGE_REL_IA64_GPREL32 28

#define REG_OPTION_CREATE_LINK 2

#define PO_THROTTLE_CONSTANT 1

#define PROCESSOR_ARM_7TDMI 70001

#define KEY_QUERY_VALUE 1

#define IMAGE_SIZEOF_FILE_HEADER 20

#define STATUS_SEGMENT_NOTIFICATION 1073741829

#define TAPE_DRIVE_SEQUENTIAL_FMKS 2148007936

#define WRITE_OWNER 524288

#define IMAGE_SYM_UNDEFINED 0

#define DOMAIN_GROUP_RID_GUESTS 514

#define STATUS_FLOAT_INVALID_OPERATION 3221225616

#define IMAGE_REL_IA64_GPREL22 9

#define PDCAP_WAKE_FROM_D0_SUPPORTED 16

#define IMAGE_SCN_MEM_WRITE 2147483648

#define ERROR_SEVERITY_INFORMATIONAL 1073741824

#define DOMAIN_GROUP_RID_USERS 513

#define SID_RECOMMENDED_SUB_AUTHORITIES 1

#define IMAGE_REL_SH3_DIRECT32_NB 16

#define TAPE_TENSION 2

#define STATUS_GUARD_PAGE_VIOLATION 2147483649

#define SECURITY_NETWORK_SERVICE_RID 20

#define FILE_NOTIFY_CHANGE_LAST_ACCESS 32

#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 128

#define LANG_SANSKRIT 79

#define STANDARD_RIGHTS_READ 131072

#define SEMAPHORE_ALL_ACCESS 2031619

#define LANG_GERMAN 7

#define THREAD_IMPERSONATE 256

#define APPLICATION_VERIFIER_LOCK_OVER_RELEASED 521

#define TAPE_LOGICAL_POSITION 1

#define MEM_RESET 524288

#define SORT_DEFAULT 0

#define SUBLANG_SPANISH_PUERTO_RICO 20

#define SUBLANG_PORTUGUESE_BRAZILIAN 1

#define FILE_WRITE_DATA 2

#define TAPE_SPACE_SEQUENTIAL_SMKS 9

#define IMAGE_SUBSYSTEM_EFI_ROM 13

#define IMAGE_REL_I386_SEG12 9

#define ACCESS_ALLOWED_CALLBACK_ACE_TYPE 9

#define DLL_THREAD_DETACH 3

#define TAPE_CHECK_FOR_DRIVE_PROBLEM 2

#define JOB_OBJECT_LIMIT_PROCESS_TIME 2

#define WT_EXECUTEONLYONCE 8

#define HEAP_CREATE_ALIGN_16 65536

#define VER_SERVICEPACKMAJOR 32

#define LANG_MALAY 62

#define TAPE_FILEMARKS 1

#define SUBLANG_SPANISH_DOMINICAN_REPUBLIC 7

#define TIME_ZONE_ID_UNKNOWN 0

#define VER_SUITE_SMALLBUSINESS 1

#define PROCESSOR_ARCHITECTURE_MSIL 8

#define MEMORY_ALLOCATION_ALIGNMENT 8

#define PROCESSOR_ARCHITECTURE_AMD64 9

#define TAPE_DRIVE_ECC 65536

#define ACL_REVISION 2

#define IMAGE_REL_M32R_SECTION 12

#define IMAGE_REL_ARM_GPREL7 7

#define SECTION_ALL_ACCESS 983071

#define SACL_SECURITY_INFORMATION 8

#define SORT_CHINESE_PRC 2

#define SECURITY_LOCAL_RID 0

#define LANG_HEBREW 13

#define IMAGE_COMDAT_SELECT_SAME_SIZE 3

#define IMAGE_REL_M32R_TOKEN 14

#define SE_DACL_DEFAULTED 8

#define EMARCH_ENC_I17_IMM7B_INST_WORD_X 3

#define ACCESS_MAX_MS_V4_ACE_TYPE 8

#define SECURITY_REMOTE_LOGON_RID 14

#define VER_PRODUCT_TYPE 128

#define NO_PROPAGATE_INHERIT_ACE 4

#define IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11

#define DOMAIN_ALIAS_RID_SYSTEM_OPS 549

#define THREAD_ALL_ACCESS 2032639

#define SE_SACL_AUTO_INHERIT_REQ 512

#define SYSTEM_AUDIT_CALLBACK_ACE_TYPE 13

#define SUBLANG_CHINESE_SIMPLIFIED 2

#define IMAGE_REL_M32R_PCREL8 7

#define JOB_OBJECT_QUERY 4

#define KEY_NOTIFY 16

#define SUBLANG_PORTUGUESE 2

#define TAPE_DRIVE_WRITE_MARK_IMMED 2415919104

#define MEM_PRIVATE 131072

#define KEY_WOW64_64KEY 256

#define IMAGE_WEAK_EXTERN_SEARCH_ALIAS 3

#define EMARCH_ENC_I17_IMM41b_VAL_POS_X 32

#define IS_TEXT_UNICODE_REVERSE_MASK 240

#define IMAGE_REL_ARM_SECREL 15

#define IMAGE_REL_ARM_GPREL12 6

#define ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF 4

#define PO_THROTTLE_ADAPTIVE 3

#define SUBLANG_ARABIC_QATAR 16

#define POWER_ACTION_DISABLE_WAKES 1073741824

#define DOMAIN_ALIAS_RID_ADMINS 544

#define SE_GROUP_LOGON_ID 3221225472

#define IMAGE_REL_PPC_ABSOLUTE 0

#define PROCESSOR_HITACHI_SH3E 10004

#define TAPE_DRIVE_LOAD_UNLD_IMMED 2147483680

#define LANG_BULGARIAN 2

#define STATUS_ABANDONED_WAIT_0 128

#define TAPE_SPACE_SETMARKS 8

#define IMAGE_REL_I386_DIR32 6

#define MAXBYTE 255

#define SORT_CHINESE_BIG5 0

#define READ_CONTROL 131072

#define MAXIMUM_PROCESSORS 32

#define ACCESS_MAX_LEVEL 4

#define LANG_PUNJABI 70

#define LANG_ENGLISH 9

#define TOKEN_ADJUST_SESSIONID 256

#define SANDBOX_INERT 2

#define APPLICATION_VERIFIER_INTERNAL_ERROR 2147483648

#define IMAGE_REL_MIPS_REFWORD 2

#define TAPE_DRIVE_SELECT 2

#define IMAGE_COMDAT_SELECT_LARGEST 6

#define PROCESS_VM_READ 16

#define IS_TEXT_UNICODE_DBCS_LEADBYTE 1024

#define LANG_ORIYA 72

#define IMAGE_REL_ALPHA_REFQUAD 2

#define PAGE_EXECUTE_WRITECOPY 128

#define IMAGE_SYM_CLASS_SECTION 104

#define GENERIC_READ 2147483648

#define COMPRESSION_FORMAT_LZNT1 2

#define FRAME_TSS 2

#define ACCESS_ALLOWED_ACE_TYPE 0

#define SE_PRIVILEGE_ENABLED_BY_DEFAULT 1

#define TOKEN_ASSIGN_PRIMARY 1

#define IMAGE_SYM_DEBUG -2

#define TAPE_DRIVE_LOCK_UNLK_IMMED 2147483776

#define IMAGE_REL_I386_DIR16 1

#define TAPE_DRIVE_WRITE_SHORT_FMKS 2214592512

#define FILE_ATTRIBUTE_NORMAL 128

#define STANDARD_RIGHTS_ALL 2031616

#define DBG_EXCEPTION_HANDLED 65537

#define IMAGE_ORDINAL_FLAG 2147483648

#define TIMER_ALL_ACCESS 2031619

#define TAPE_DRIVE_ERASE_IMMEDIATE 128

#define IMAGE_REL_IA64_UREL32 20

#define DOMAIN_GROUP_RID_POLICY_ADMINS 520

#define LANG_ARABIC 1

#define FILE_ACTION_RENAMED_OLD_NAME 4

#define APPLICATION_VERIFIER_UNSYNCHRONIZED_ACCESS 3

#define SE_DACL_AUTO_INHERITED 1024

#define TAPE_DRIVE_SETMARKS 2148532224

#define IMAGE_REL_SH3_DIRECT4 6

#define VALID_INHERIT_FLAGS 31

#define LANG_MACEDONIAN 47

#define LANG_FAEROESE 56

#define IMAGE_SYM_CLASS_TYPE_DEFINITION 13

#define CONTEXT_i486 65536

#define SE_SELF_RELATIVE 32768

#define MAXIMUM_SUPPORTED_EXTENSION 512

#define IMAGE_FILE_MACHINE_M32R 36929

#define NUM_DISCHARGE_POLICIES 4

#define IMAGE_REL_SH3_DIRECT8 3

#define VER_WORKSTATION_NT 1073741824

#define SERVICE_AUTO_START 2

#define IMAGE_SIZEOF_NT_OPTIONAL64_HEADER 240

#define EMARCH_ENC_I17_IMM9D_VAL_POS_X 7

#define IMAGE_SYM_TYPE_SHORT 3

#define DOMAIN_USER_RID_KRBTGT 502

#define IMAGE_SCN_ALIGN_1024BYTES 11534336

#define POWER_ACTION_CRITICAL 2147483648

#define SECURITY_STATIC_TRACKING 0

#define IMAGE_REL_M32R_ABSOLUTE 0

#define IMAGE_NT_SIGNATURE 17744

#define KEY_WOW64_32KEY 512

#define EVENTLOG_AUDIT_SUCCESS 8

#define JOB_OBJECT_LIMIT_JOB_MEMORY 512

#define IO_REPARSE_TAG_HSM 3221225476

#define SUBLANG_ARABIC_MOROCCO 6

#define FILE_TRAVERSE 32

#define SUBLANG_SPANISH_BOLIVIA 16

#define IMAGE_FILE_MACHINE_AMD64 34404

#define SUBLANG_SPANISH_URUGUAY 14

#define ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE 11

#define EVENTLOG_AUDIT_FAILURE 16

#define TAPE_QUERY_IO_ERROR_DATA 3

#define VER_CONDITION_MASK 7

#define IMAGE_REL_SH3_PCREL12_WORD 11

#define IMAGE_REL_MIPS_PAIR 37

#define LANG_POLISH 21

#define VER_SUITE_SMALLBUSINESS_RESTRICTED 32

#define TAPE_DRIVE_FIXED_BLOCK 1024

#define SERVICE_TYPE_ALL 319

#define PROCESSOR_MIPS_R4000 4000

#define IMAGE_REL_M32R_PAIR 11

#define NON_PAGED_DEBUG_SIGNATURE 18766

#define SUBLANG_CHINESE_MACAU 5

#define IMAGE_SIZEOF_ROM_OPTIONAL_HEADER 56

#define TAPE_DRIVE_SET_REPORT_SMKS 2147485696

#define SERVICE_ERROR_IGNORE 0

#define IO_REPARSE_TAG_RESERVED_ONE 1

#define SIZEOF_RFPO_DATA 16

#define RTL_VRF_FLG_HANDLE_CHECKS 4

#define REG_NOTIFY_CHANGE_SECURITY 8

#define IMAGE_SCN_SCALE_INDEX 1

#define SERVICE_WIN32_SHARE_PROCESS 32

#define IMAGE_SCN_ALIGN_8192BYTES 14680064

#define IMAGE_COMDAT_SELECT_NEWEST 7

#define IMAGE_SYM_CLASS_BIT_FIELD 18

#define DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS 555

#define FILE_ATTRIBUTE_OFFLINE 4096

#define REG_OPTION_BACKUP_RESTORE 4

#define LANG_ITALIAN 16

#define JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0

#define IMAGE_SCN_MEM_DISCARDABLE 33554432

#define UNICODE_STRING_MAX_BYTES 65534

#define VER_MAJORVERSION 2

#define TAPE_DRIVE_RESERVED_BIT 2147483648

#define SERVICE_WIN32 48

#define SE_GROUP_USE_FOR_DENY_ONLY 16

#define HEAP_CREATE_ENABLE_TRACING 131072

#define SECURITY_PROXY_RID 8

#define SE_GROUP_DEFAULTED 2

#define IMAGE_SCN_ALIGN_4096BYTES 13631488

#define SECURITY_RESTRICTED_CODE_RID 12

#define WT_EXECUTEDELETEWAIT 8

#define SUBLANG_ENGLISH_PHILIPPINES 13

#define IMAGE_REL_SH3_DIRECT4_WORD 7

#define IMAGE_SYM_TYPE_NULL 0

#define MEM_COMMIT 4096

#define EMARCH_ENC_I17_IC_VAL_POS_X 21

#define FILE_APPEND_DATA 4

#define TAPE_FORMAT 5

#define LANG_MONGOLIAN 80

#define IMAGE_REL_CEE_TOKEN 6

#define PDCAP_WAKE_FROM_D2_SUPPORTED 64

#define FILE_VOLUME_IS_COMPRESSED 32768

#define DOMAIN_ALIAS_RID_PRINT_OPS 550

#define PAGE_READWRITE 4

#define IO_REPARSE_TAG_MOUNT_POINT 2684354563

#define SUBLANG_ARABIC_ALGERIA 5

#define JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10

#define SUBLANG_ENGLISH_ZIMBABWE 12

#define IMAGE_REL_PPC_NEG 256

#define MAXIMUM_SUSPEND_COUNT 127

#define IMAGE_FILE_MACHINE_MIPS16 614

#define SERVICE_BOOT_START 0

#define DOMAIN_GROUP_RID_ADMINS 512

#define PAGE_NOACCESS 1

#define IS_TEXT_UNICODE_REVERSE_ASCII16 16

#define FILE_READ_ATTRIBUTES 128

#define TAPE_DRIVE_LOG_BLK_IMMED 2147516416

#define ERROR_SEVERITY_ERROR 3221225472

#define SUBLANG_SPANISH_MODERN 3

#define IMAGE_FILE_MACHINE_I386 332

#define IS_TEXT_UNICODE_NOT_ASCII_MASK 61440

#define IMAGE_FILE_MACHINE_POWERPC 496

#define SUBLANG_CHINESE_SINGAPORE 4

#define IMAGE_SYM_TYPE_DOUBLE 7

#define IMAGE_SCN_MEM_NOT_CACHED 67108864

#define LOCALE_NEUTRAL 0

#define LANG_CROATIAN 26

#define SUBLANG_ARABIC_LEBANON 12

#define IMAGE_SCN_LNK_REMOVE 2048

#define TAPE_DRIVE_LOCK_UNLOCK 2147483652

#define POWER_ACTION_QUERY_ALLOWED 1

#define TAPE_SHORT_FILEMARKS 2

#define FRAME_FPO 0

#define IMAGE_REL_PPC_ADDR32NB 10

#define PROCESSOR_STRONGARM 2577

#define TAPE_LOAD 0

#define SERVICE_ERROR_CRITICAL 3

#define VER_NT_WORKSTATION 1

#define ACCESS_SYSTEM_SECURITY 16777216

#define TOKEN_SOURCE_LENGTH 8

#define UNICODE_NULL 0

#define IMAGE_FILE_DLL 8192

#define APPLICATION_VERIFIER_INTERNAL_WARNING 1073741824

#define TAPE_DRIVE_PADDING 262144

#define IMAGE_REL_ALPHA_LITUSE 5

#define N_TMASK 48

#define EMARCH_ENC_I17_IMM5C_SIZE_X 5

#define TAPE_LOCK 3

#define JOB_OBJECT_UI_VALID_FLAGS 255

#define EVENTLOG_PAIRED_EVENT_INACTIVE 16

#define LANG_ESTONIAN 37

#define CONTEXT_i386 65536

#define SORT_CHINESE_UNICODE 1

#define MEM_4MB_PAGES 2147483648

#define PDCAP_WARM_EJECT_SUPPORTED 256

#define SUBLANG_ENGLISH_AUS 3

#define IMAGE_SCN_NO_DEFER_SPEC_EXC 16384

#define SEF_AVOID_PRIVILEGE_CHECK 8

#define IMAGE_SCN_ALIGN_2BYTES 2097152

#define IMAGE_FILE_MACHINE_MIPSFPU 870

#define IMAGE_SCN_ALIGN_2048BYTES 12582912

#define KEY_READ 131097

#define IMAGE_REL_PPC_SECTION 12

#define N_TMASK2 240

#define N_TMASK1 192

#define IMAGE_SIZEOF_LINENUMBER 6

#define IMAGE_FILE_MACHINE_SH3DSP 419

#define IMAGE_REL_BASED_MIPS_JMPADDR16 9

#define REG_LEGAL_OPTION 15

#define IMAGE_REL_SH3_PCREL8_LONG 10

#define SUBLANG_GERMAN_AUSTRIAN 3

#define TIMER_MODIFY_STATE 2

#define IO_REPARSE_TAG_RESERVED_RANGE 1

#define IMAGE_DEBUG_MISC_EXENAME 1

#define SYSTEM_AUDIT_OBJECT_ACE_TYPE 7

#define LANG_MANIPURI 88

#define MEM_TOP_DOWN 1048576

#define NLS_VALID_LOCALE_MASK 1048575

#define PROCESS_ALL_ACCESS 2035711

#define JOB_OBJECT_UILIMIT_DISPLAYSETTINGS 16

#define IMAGE_REL_CEE_SECREL 5

#define TAPE_DRIVE_REVERSE_POSITION 2151677952

#define IMAGE_DIRECTORY_ENTRY_BASERELOC 5

#define SECURITY_WORLD_RID 0

#define SUBLANG_SPANISH_NICARAGUA 19

#define DOMAIN_USER_RID_ADMIN 500

#define IMAGE_REL_PPC_REFHI 16

#define IO_REPARSE_TAG_RESERVED_ZERO 0

#define IMAGE_SYM_CLASS_END_OF_FUNCTION -1

#define DOMAIN_GROUP_RID_SCHEMA_ADMINS 518

#define IMAGE_DLLCHARACTERISTICS_WDM_DRIVER 8192

#define SEC_IMAGE 16777216

#define TAPE_DRIVE_REPORT_SMKS 524288

#define FRAME_TRAP 1

#define SE_SACL_AUTO_INHERITED 2048

#define IMAGE_FILE_MACHINE_ALPHA 388

#define SEF_SACL_AUTO_INHERIT 2

#define IMAGE_SUBSYSTEM_EFI_APPLICATION 10

#define IMAGE_SYM_DTYPE_POINTER 1

#define IMAGE_SYM_TYPE_PCODE 32768

#define N_BTMASK 15

#define STATUS_FLOAT_STACK_CHECK 3221225618

#define SUBLANG_FRENCH_SWISS 4

#define IS_TEXT_UNICODE_SIGNATURE 8

#define IMAGE_REL_MIPS_SECTION 10

#define IMAGE_SCN_MEM_NOT_PAGED 134217728

#define SUBLANG_SERBIAN_LATIN 2

#define REG_SZ 1

#define LANG_TAMIL 73

#define IMAGE_REL_IA64_SECTION 11

#define IMAGE_SYM_CLASS_UNDEFINED_STATIC 14

#define HEAP_TAIL_CHECKING_ENABLED 32

#define LANG_NEUTRAL 0

#define VER_SUITE_COMMUNICATIONS 8

#define IMAGE_SUBSYSTEM_UNKNOWN 0

#define IMAGE_REL_MIPS_JMPADDR 3

#define IMAGE_SCN_ALIGN_8BYTES 4194304

#define VER_LESS 4

#define SUBLANG_FRENCH 1

#define POWER_ACTION_LIGHTEST_FIRST 268435456

#define SIZE_OF_80387_REGISTERS 80

#define IMAGE_REL_PPC_TYPEMASK 255

#define SE_GROUP_RESOURCE 536870912

#define ES_USER_PRESENT 4

#define STATUS_WAIT_0 0

#define STATUS_FLOAT_MULTIPLE_FAULTS 3221226164

#define VER_GREATER 2

#define REG_MULTI_SZ 7

#define IMAGE_DIRECTORY_ENTRY_RESOURCE 2

#define TAPE_DRIVE_FIXED 1

#define ACE_OBJECT_TYPE_PRESENT 1

#define IS_TEXT_UNICODE_NOT_UNICODE_MASK 3840

#define FILE_GENERIC_EXECUTE 1179808

#define IMAGE_REL_IA64_SECREL32 14

#define OWNER_SECURITY_INFORMATION 1

#define TAPE_PSEUDO_LOGICAL_POSITION 2

#define IMAGE_DIRECTORY_ENTRY_SECURITY 4

#define IMAGE_REL_PPC_REFLO 17

#define SORT_KOREAN_KSC 0

#define SUBLANG_AZERI_LATIN 1

#define SUBLANG_ENGLISH_SOUTH_AFRICA 7

#define IMAGE_REL_I386_REL16 2

#define SUBLANG_ENGLISH_EIRE 6

#define POWER_SYSTEM_MAXIMUM 7

#define FILE_ATTRIBUTE_ARCHIVE 32

#define TAPE_SPACE_FILEMARKS 6

#define IMAGE_REL_CEF_SECTION 4

#define LANG_TELUGU 74

#define IMAGE_REL_BASED_MIPS_JMPADDR 5

#define IMAGE_REL_IA64_SECREL22 12

#define IMAGE_SYM_ABSOLUTE -1

#define IS_TEXT_UNICODE_STATISTICS 2

#define COMPRESSION_FORMAT_DEFAULT 1

#define IMAGE_SYM_TYPE_ENUM 10

#define LANG_GUJARATI 71

#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8

#define FILE_VOLUME_QUOTAS 32

#define DBG_CONTROL_C 1073807365

#define SUBLANG_FRENCH_LUXEMBOURG 5

#define SECURITY_CREATOR_OWNER_RID 0

#define ACCESS_ALLOWED_OBJECT_ACE_TYPE 5

#define IMAGE_SCN_LNK_COMDAT 4096

#define IMAGE_FILE_MACHINE_WCEMIPSV2 361

#define TAPE_DRIVE_FORMAT 2684354560

#define SUBLANG_ENGLISH_US 1

#define REG_FORCE_RESTORE 8

#define IMAGE_SCN_LNK_INFO 512

#define DOMAIN_USER_RID_GUEST 501

#define REG_DWORD_LITTLE_ENDIAN 4

#define IMAGE_REL_SH3_PCREL8_WORD 9

#define TAPE_DRIVE_WRITE_PROTECT 4096

#define IMAGE_SCN_LNK_NRELOC_OVFL 16777216

#define SUBLANG_SPANISH_PANAMA 6

#define SECTION_QUERY 1

#define SUBLANG_ENGLISH_UK 2

#define IMAGE_REL_ALPHA_ABSOLUTE 0

#define TAPE_DRIVE_SET_COMPRESSION 2147484160

#define SECURITY_LOCAL_SYSTEM_RID 18

#define LANG_AZERI 44

#define APPLICATION_VERIFIER_LOCK_IN_FREED_MEMORY 516

#define TAPE_DRIVE_INITIATOR 4

#define IMAGE_SYM_TYPE_UNION 9

#define LOCALE_SYSTEM_DEFAULT 2048

#define STATUS_PRIVILEGED_INSTRUCTION 3221225622

#define SUBLANG_SPANISH 1

#define SERVICE_INTERACTIVE_PROCESS 256

#define IMAGE_REL_I386_SECREL 11

#define MAXIMUM_WAIT_OBJECTS 64

#define TOKEN_ALL_ACCESS_P 983295

#define EVENTLOG_BACKWARDS_READ 8

#define IMAGE_SYM_CLASS_STATIC 3

#define THREAD_SET_THREAD_TOKEN 128

#define MEM_DECOMMIT 16384

#define AUDIT_ALLOW_NO_PRIVILEGE 1

#define THREAD_SUSPEND_RESUME 2

#define TAPE_DRIVE_TAPE_CAPACITY 256

#define IMAGE_REL_MIPS_REFLO 5

#define LANG_SLOVENIAN 36

#define IMAGE_REL_BASED_HIGHLOW 3

#define MESSAGE_RESOURCE_UNICODE 1

#define IMAGE_REL_PPC_TOKEN 22

#define IMAGE_REL_MIPS_SECREL 11

#define EVENTLOG_ERROR_TYPE 1

#define EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X 13

#define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE 7

#define DOMAIN_GROUP_RID_CONTROLLERS 516

#define MAXLOGICALLOGNAMESIZE 256

#define IMAGE_FILE_RELOCS_STRIPPED 1

#define SUBLANG_SPANISH_EL_SALVADOR 17

#define FILE_SUPPORTS_OBJECT_IDS 65536

#define MINCHAR 128

#define SUBLANG_SPANISH_VENEZUELA 8

#define TAPE_DRIVE_SPACE_IMMEDIATE 2155872256

#define JOB_OBJECT_UILIMIT_EXITWINDOWS 128

#define IMAGE_SYM_CLASS_ARGUMENT 9

#define IMAGE_SYM_TYPE_CHAR 2

#define EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X 0

#define PROCESS_SET_INFORMATION 512

#define IMAGE_REL_CEE_ADDR32 1

#define IMAGE_FILE_MACHINE_AM33 467

#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 32

#define WT_EXECUTEINLONGTHREAD 16

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3

#define GROUP_SECURITY_INFORMATION 2

#define LANG_RUSSIAN 25

#define SECURITY_LOGON_IDS_RID_COUNT 3

#define SUBLANG_SPANISH_COLOMBIA 9

#define PROCESSOR_ARCHITECTURE_PPC 3

#define STANDARD_RIGHTS_REQUIRED 983040

#define SUBLANG_SPANISH_MEXICAN 2

#define REG_NOTIFY_CHANGE_NAME 1

#define PF_3DNOW_INSTRUCTIONS_AVAILABLE 7

#define IS_TEXT_UNICODE_CONTROLS 4

#define SUCCESSFUL_ACCESS_ACE_FLAG 64

#define SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT 3

#define TAPE_UNLOAD 1

#define JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2

#define APPLICATION_VERIFIER_LOCK_IN_FREED_HEAP 514

#define SECURITY_LOCAL_SERVICE_RID 19

#define IMAGE_REL_ARM_BLX24 8

#define IMAGE_REL_MIPS_REFHI 4

#define DOMAIN_GROUP_RID_CERT_ADMINS 517

#define MAXDWORD 4294967295

#define IMAGE_REL_IA64_DIR64 5

#define IMAGE_SYM_CLASS_FILE 103

#define IMAGE_SYM_CLASS_NULL 0

#define LANG_INVARIANT 127

#define IMAGE_REL_I386_ABSOLUTE 0

#define IMAGE_REL_I386_REL32 20

#define IMAGE_REL_MIPS_REFWORDNB 34

#define IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 8

#define LANG_HUNGARIAN 14

#define FILE_CASE_SENSITIVE_SEARCH 1

#define IMAGE_FILE_MACHINE_AXP64 644

#define SE_DACL_PROTECTED 4096

#define IMAGE_REL_M32R_SECREL32 13

#define IMAGE_REL_ARM_BLX11 9

#define ACCESS_MIN_MS_OBJECT_ACE_TYPE 5

#define MEM_WRITE_WATCH 2097152

#define DOMAIN_ALIAS_RID_BACKUP_OPS 551

#define VER_PLATFORMID 8

#define COMPRESSION_ENGINE_MAXIMUM 256

#define SE_SACL_DEFAULTED 32

#define TAPE_UNLOCK 4

#define SE_DACL_PRESENT 4

#define TAPE_DRIVE_WRITE_LONG_FMKS 2281701376

#define SUBLANG_FRENCH_CANADIAN 3

#define APPLICATION_VERIFIER_UNKNOWN_ERROR 1

#define IMAGE_REL_ALPHA_SECTION 14

#define IMAGE_FILE_LOCAL_SYMS_STRIPPED 8

#define IMAGE_REL_BASED_LOW 2

#define ACCESS_MIN_MS_ACE_TYPE 0

#define WT_EXECUTEINPERSISTENTTHREAD 128

#define SORT_HUNGARIAN_TECHNICAL 1

#define SUBLANG_ITALIAN 1

#define MEM_IMAGE 16777216

#define ACCESS_DENIED_CALLBACK_ACE_TYPE 10

#define FILE_CREATE_PIPE_INSTANCE 4

#define REG_FULL_RESOURCE_DESCRIPTOR 9

#define TAPE_DRIVE_SET_EOT_WZ_SIZE 4194304

#define IMAGE_FILE_MACHINE_CEE 49390

#define IMAGE_FILE_MACHINE_CEF 3311

#define IMAGE_SIZEOF_NT_OPTIONAL32_HEADER 224

#define IMAGE_REL_IA64_DIR32 4

#define PDCAP_D2_SUPPORTED 4

#define IMAGE_SIZEOF_AUX_SYMBOL 18

#define PROCESS_VM_OPERATION 8

#define IMAGE_REL_ARM_ADDR32NB 2

#define IMAGE_REL_IA64_SREL32 19

#define CONTAINER_INHERIT_ACE 2

#define IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60

#define EMARCH_ENC_I17_IMM41a_SIZE_X 10

#define SECURITY_NT_NON_UNIQUE 21

#define PAGE_READONLY 2

#define TAPE_DRIVE_CLEAN_REQUESTS 33554432

#define EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X 24

#define IMAGE_REL_PPC_ADDR64 1

#define PROCESSOR_ARCHITECTURE_UNKNOWN 65535

#define IMAGE_COMDAT_SELECT_ANY 2

#define LANG_KYRGYZ 64

#define IMAGE_REL_IA64_ADDEND 31

#define LANG_BENGALI 69

#define IS_TEXT_UNICODE_REVERSE_SIGNATURE 128

#define IMAGE_REL_IA64_SREL22 18

#define VER_SUITE_PERSONAL 512

#define IMAGE_REL_AM_ABSOLUTE 0

#define SUBLANG_NEUTRAL 0

#define DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS 556

#define REG_REFRESH_HIVE 2

#define IMAGE_REL_PPC_ADDR32 2

#define IMAGE_SCN_MEM_LOCKED 262144

#define PDCAP_D0_SUPPORTED 1

#define VER_SUITE_DATACENTER 128

#define FILE_NOTIFY_CHANGE_CREATION 64

#define FILE_ATTRIBUTE_REPARSE_POINT 1024

#define GENERIC_EXECUTE 536870912

#define IMAGE_REL_IA64_SREL14 17

#define IMAGE_SYM_DTYPE_ARRAY 3

#define PAGE_WRITECOPY 8

#define IMAGE_REL_ALPHA_INLINE_REFLONG 9

#define STATUS_CONTROL_C_EXIT 3221225786

#define IMAGE_SYM_CLASS_BLOCK 100

#define IMAGE_SCN_CNT_INITIALIZED_DATA 64

#define HEAP_REALLOC_IN_PLACE_ONLY 16

#define IMAGE_SYM_CLASS_UNDEFINED_LABEL 7

#define JOB_OBJECT_LIMIT_RESERVED3 32768

#define EXCEPTION_MAXIMUM_PARAMETERS 15

#define JOB_OBJECT_LIMIT_RESERVED2 16384

#define JOB_OBJECT_LIMIT_RESERVED5 131072

#define JOB_OBJECT_LIMIT_RESERVED4 65536

#define JOB_OBJECT_UILIMIT_NONE 0

#define STATUS_REG_NAT_CONSUMPTION 3221226185

#define IMAGE_SCN_MEM_PRELOAD 524288

#define IMAGE_SUBSYSTEM_NATIVE 1

#define ERROR_SEVERITY_SUCCESS 0

#define IMAGE_FILE_MACHINE_THUMB 450

#define JOB_OBJECT_LIMIT_RESERVED6 262144

#define IMAGE_REL_ARM_BRANCH11 4

#define VER_PLATFORM_WIN32s 0

#define IMAGE_REL_AMD64_ADDR32 2

#define IMAGE_REL_PPC_ADDR14 5

#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10

#define IMAGE_REL_SH3_TOKEN 18

#define IMAGE_REL_CEF_TOKEN 6

#define ACCESS_DENIED_ACE_TYPE 1

#define EVENTLOG_SEEK_READ 2

#define SID_REVISION 1

#define IMAGE_REL_ALPHA_PAIR 12

#define IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9

#define STATUS_ARRAY_BOUNDS_EXCEEDED 3221225612

#define PF_XMMI_INSTRUCTIONS_AVAILABLE 6

#define HEAP_MAXIMUM_TAG 4095

#define IMAGE_REL_PPC_SECREL 11

#define IMAGE_REL_ARM_BRANCH24 3

#define OBJECT_INHERIT_ACE 1

#define IMAGE_REL_AMD64_SECREL 11

#define IMAGE_REL_PPC_ADDR24 3

#define RTL_VRF_FLG_FULL_PAGE_HEAP 1

#define PF_XMMI64_INSTRUCTIONS_AVAILABLE 10

#define IMAGE_REL_BASED_DIR64 10

#define TAPE_DRIVE_EOT_WZ_SIZE 8192

#define IMAGE_SEPARATE_DEBUG_SIGNATURE 18756

#define IMAGE_SYM_SECTION_MAX 65279

#define PROCESS_SET_QUOTA 256

#define IMAGE_REL_PPC_ADDR16 4

#define CONTEXT_EXTENDED_REGISTERS 65568

#define TOKEN_QUERY_SOURCE 16

#define ACCESS_OBJECT_GUID 0

#define ACL_REVISION_DS 4

#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 1024

#define SUBLANG_URDU_INDIA 2

#define IMAGE_DEBUG_TYPE_FPO 3

#define IMAGE_COMDAT_SELECT_EXACT_MATCH 4

#define FRAME_NONFPO 3

#define THREAD_GET_CONTEXT 8

#define FILE_ACTION_REMOVED 2

#define IMAGE_REL_CEE_ADDR64 2

#define REG_EXPAND_SZ 2

#define FILE_SHARE_READ 1

#define APPLICATION_VERIFIER_LOCK_INVALID_OWNER 518

#define FILE_READ_EA 8

#define SUBLANG_SPANISH_PERU 10

#define SYSTEM_ALARM_ACE_TYPE 3

#define TIME_ZONE_ID_DAYLIGHT 2

#define SERVICE_ADAPTER 4

#define SECURITY_DESCRIPTOR_REVISION 1

#define FILE_PERSISTENT_ACLS 8

#define ERROR_SEVERITY_WARNING 2147483648

#define SUBLANG_SPANISH_CHILE 13

#define IMAGE_REL_I386_SECTION 10

#define TAPE_DRIVE_SEQUENTIAL_SMKS 2149580800

#define REG_NO_COMPRESSION 4

#define APPLICATION_VERIFIER_UNEXPECTED_EXCEPTION 10

#define APPLICATION_VERIFIER_DESTROY_PROCESS_HEAP 9

#define POWER_LEVEL_USER_NOTIFY_SOUND 2

#define PROCESSOR_ARM920 2336

#define FILE_ATTRIBUTE_COMPRESSED 2048

#define SE_RM_CONTROL_VALID 16384

#define SUBLANG_ARABIC_EGYPT 3

#define ACCESS_PROPERTY_GUID 2

#define SUBLANG_MALAY_MALAYSIA 1

#define MIN_ACL_REVISION 2

#define SE_DACL_AUTO_INHERIT_REQ 256

#define TAPE_DRIVE_WRITE_FILEMARKS 2181038080

#define TAPE_INITIATOR_PARTITIONS 2

#define FILE_CASE_PRESERVED_NAMES 2

#define FILE_SHARE_WRITE 2

#define EMARCH_ENC_I17_IC_INST_WORD_POS_X 12

#define EVENTLOG_WARNING_TYPE 2

#define SUBLANG_GERMAN 1

#define TAPE_DRIVE_ABSOLUTE_BLK 2147487744

#define IMAGE_REL_PPC_BRNTAKEN 1024

#define IMAGE_SEPARATE_DEBUG_MISMATCH 32768

#define EMARCH_ENC_I17_SIGN_SIZE_X 1

#define LANG_HINDI 57

#define SECURITY_ENTERPRISE_CONTROLLERS_RID 9

#define IMAGE_SIZEOF_SECTION_HEADER 40

#define PROTECTED_SACL_SECURITY_INFORMATION 1073741824

#define SUBLANG_SPANISH_PARAGUAY 15

#define SE_GROUP_ENABLED_BY_DEFAULT 2

#define IMAGE_REL_ALPHA_GPRELLO 22

#define IMAGE_DEBUG_TYPE_EXCEPTION 5

#define UNICODE_STRING_MAX_CHARS 32767

#define GENERIC_WRITE 1073741824

#define IO_REPARSE_TAG_FILTER_MANAGER 2147483659

#define FILE_ATTRIBUTE_DIRECTORY 16

#define TAPE_DRIVE_END_OF_DATA 2147549184

#define SEC_FILE 8388608

#define IMAGE_SIZEOF_BASE_RELOCATION 8

#define IMAGE_REL_SH3_DIRECT8_WORD 4

#define EMARCH_ENC_I17_IMM5C_VAL_POS_X 16

#define LANG_THAI 30

#define SERVICE_WIN32_OWN_PROCESS 16

#define STATUS_IN_PAGE_ERROR 3221225478

#define SUBLANG_SPANISH_GUATEMALA 4

#define IMAGE_REL_MIPS_ABSOLUTE 0

#define ANSI_NULL 0

#define DOMAIN_ALIAS_RID_PREW2KCOMPACCESS 554

#define PF_PPC_MOVEMEM_64BIT_OK 4

#define FILE_ATTRIBUTE_HIDDEN 2

#define IMAGE_REL_SH3_SIZEOF_SECTION 13

#define STATUS_ILLEGAL_INSTRUCTION 3221225501

#define IMAGE_SYM_CLASS_END_OF_STRUCT 102

#define IMAGE_REL_PPC_REL14 7

#define LANG_BELARUSIAN 35

#define APPLICATION_VERIFIER_ACCESS_VIOLATION 2

#define IMAGE_REL_M32R_ADDR32NB 2

#define SECURITY_TERMINAL_SERVER_RID 13

#define N_TSHIFT 2

#define IMAGE_REL_AM_REL32_2 6

#define IS_TEXT_UNICODE_ILLEGAL_CHARS 256

#define IMAGE_REL_AM_REL32_1 5

#define IMAGE_SYM_DTYPE_NULL 0

#define IMAGE_REL_PPC_REL24 6

#define IMAGE_DIRECTORY_ENTRY_IAT 12

#define IMAGE_SYM_CLASS_REGISTER_PARAM 17

#define PF_PAE_ENABLED 9

#define IMAGE_REL_CEE_SECTION 4

#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16

#define IMAGE_FILE_MACHINE_ARM 448

#define FILE_NOTIFY_CHANGE_FILE_NAME 1

#define IMAGE_REL_ALPHA_GPRELHI 23

#define SID_MAX_SUB_AUTHORITIES 15

#define PO_THROTTLE_MAXIMUM 4

#define IMAGE_REL_AMD64_ADDR64 1

#define APPLICATION_VERIFIER_EXTREME_SIZE_REQUEST 4

#define SECURITY_DESCRIPTOR_REVISION1 1

#define PROCESSOR_ALPHA_21064 21064

#define LANG_KAZAK 63

#define SUBLANG_ARABIC_IRAQ 2

#define EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X 4

#define IMAGE_SCN_ALIGN_16BYTES 5242880

#define TAPE_DRIVE_TENSION_IMMED 2147483712

#define HEAP_NO_SERIALIZE 1

#define REG_CREATED_NEW_KEY 1

#define PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 10

#define APPLICATION_VERIFIER_LOCK_NOT_INITIALIZED 528

#define SYSTEM_AUDIT_ACE_TYPE 2

#define LANG_SYRIAC 90

#define SUBLANG_LITHUANIAN 1

#define JOB_OBJECT_LIMIT_VALID_FLAGS 524287

#define SERVICE_RECOGNIZER_DRIVER 8

#define REG_RESOURCE_REQUIREMENTS_LIST 10

#define VER_EQUAL 1

#define DBG_TERMINATE_PROCESS 1073807364

#define IMAGE_SIZEOF_SHORT_NAME 8

#define FILE_READ_ONLY_VOLUME 524288

#define IS_TEXT_UNICODE_ODD_LENGTH 512

#define IMAGE_REL_ALPHA_SECREL 15

#define POWER_ACTION_LOCK_CONSOLE 536870912

#define IMAGE_REL_AM_CALL32 3

#define JOB_OBJECT_MSG_EXIT_PROCESS 7

#define SECURITY_BATCH_RID 3

#define SE_PRIVILEGE_ENABLED 2

#define SUBLANG_GERMAN_SWISS 2

#define DLL_PROCESS_DETACH 0

#define JOB_OBJECT_UILIMIT_GLOBALATOMS 32

#define MAXIMUM_ALLOWED 33554432

#define HEAP_ZERO_MEMORY 8

#define IMAGE_REL_AMD64_TOKEN 13

#define PAGE_GUARD 256

#define APPLICATION_VERIFIER_INVALID_HANDLE 768

#define FILE_ATTRIBUTE_READONLY 1

#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 8192

#define MEM_MAPPED 262144

#define RTL_VRF_FLG_LOCK_CHECKS 2

#define THREAD_BASE_PRIORITY_MAX 2

#define MAXSHORT 32767

#define SYSTEM_ALARM_CALLBACK_ACE_TYPE 14

#define IMAGE_REL_MIPS_LITERAL 7

#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 8

#define REG_DWORD_BIG_ENDIAN 5

#define JOB_OBJECT_UILIMIT_READCLIPBOARD 2

#define VER_PLATFORM_WIN32_NT 2

#define FILE_LIST_DIRECTORY 1

#define IMAGE_DIRECTORY_ENTRY_EXPORT 0

#define CONTEXT_DEBUG_REGISTERS 65552

#define IMAGE_SCN_ALIGN_4BYTES 3145728

#define EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X 14

#define VER_SERVER_NT 2147483648

#define DISCHARGE_POLICY_CRITICAL 0

#define WT_EXECUTEINUITHREAD 2

#define SECURITY_ANONYMOUS_LOGON_RID 7

#define IMAGE_DEBUG_TYPE_CODEVIEW 2

#define DOMAIN_ALIAS_RID_POWER_USERS 547

#define FILE_GENERIC_WRITE 1179926

#define TOKEN_DUPLICATE 2

#define IMAGE_SUBSYSTEM_NATIVE_WINDOWS 8

#define FILE_ALL_ACCESS 2032127

#define IMAGE_REL_CEF_ADDR32NB 3

#define PROCESSOR_INTEL_IA64 2200

#define IMAGE_REL_SH3_DIRECT16 1

#define IMAGE_REL_PPC_TOCREL14 9

#define IMAGE_SCN_CNT_UNINITIALIZED_DATA 128

#define IMAGE_FILE_SYSTEM 4096

#define STATUS_STACK_OVERFLOW 3221225725

#define POWER_LEVEL_USER_NOTIFY_EXEC 4

#define APPLICATION_VERIFIER_LOCK_INVALID_RECURSION_COUNT 519

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4

#define IMAGE_SYM_CLASS_AUTOMATIC 1

#define VER_OR 7

#define PROCESSOR_ARCHITECTURE_IA64 6

#define IMAGE_SCN_ALIGN_512BYTES 10485760

#define REG_DWORD 4

#define IMAGE_REL_PPC_TOCREL16 8

#define IMAGE_REL_SH3_SECREL 15

#define SUBLANG_SWEDISH_FINLAND 2

#define PROCESSOR_INTEL_486 486

#define SYSTEM_ALARM_OBJECT_ACE_TYPE 8

#define IMAGE_REL_PPC_IMGLUE 14

#define IMAGE_COMDAT_SELECT_ASSOCIATIVE 5

#define LANG_NORWEGIAN 20

#define IMAGE_SYM_CLASS_WEAK_EXTERNAL 105

#define LANG_GALICIAN 86

#define FILE_ATTRIBUTE_TEMPORARY 256

#define IMAGE_REL_MIPS_REFHALF 1

#define TAPE_DRIVE_ABS_BLK_IMMED 2147491840

#define REG_RESOURCE_LIST 8

#define COMPRESSION_FORMAT_NONE 0

#define IMAGE_FILE_MACHINE_SH3 418

#define SE_SACL_PROTECTED 8192

#define IMAGE_FILE_MACHINE_SH4 422

#define SYNCHRONIZE 1048576

#define IMAGE_FILE_MACHINE_SH5 424

#define SECURITY_DYNAMIC_TRACKING 1

#define THREAD_SET_CONTEXT 16

#define THREAD_SET_INFORMATION 32

#define IMAGE_SCN_GPREL 32768

#define IMAGE_DIRECTORY_ENTRY_DEBUG 6

#define IMAGE_FILE_MACHINE_R4000 358

#define EMARCH_ENC_I17_IMM41b_SIZE_X 8

#define SUBLANG_AZERI_CYRILLIC 2

#define SPECIFIC_RIGHTS_ALL 65535

#define SEMAPHORE_MODIFY_STATE 2

#define LANG_LATVIAN 38

#define IMAGE_SCN_MEM_READ 1073741824

#define SUBLANG_MALAY_BRUNEI_DARUSSALAM 2

#define IMAGE_REL_ALPHA_MATCH 13

#define APPLICATION_VERIFIER_LOCK_DOUBLE_INITIALIZE 515

#define IMAGE_SEPARATE_DEBUG_FLAGS_MASK 32768

#define IMAGE_SCN_MEM_PURGEABLE 131072

#define STATUS_FLOAT_MULTIPLE_TRAPS 3221226165

#define PROCESS_SUSPEND_RESUME 2048

#define IMAGE_FILE_MACHINE_ALPHA64 644

#define IMAGE_REL_ALPHA_GPDISP 6

#define IMAGE_SCN_MEM_EXECUTE 536870912

#define STATUS_DATATYPE_MISALIGNMENT 2147483650

#define IMAGE_SYM_TYPE_UINT 14

#define TAPE_QUERY_DRIVE_PARAMETERS 0

#define DLL_PROCESS_VERIFIER 4

#define FILE_ACTION_ADDED 1

#define IMAGE_FILE_MACHINE_SH3E 420

#define THREAD_BASE_PRIORITY_MIN -2

#define SUBLANG_ENGLISH_CAN 4

#define VER_PLATFORM_WIN32_WINDOWS 1

#define LANG_KANNADA 75

#define IMAGE_FILE_MACHINE_TRICORE 1312

#define IMAGE_NT_OPTIONAL_HDR_MAGIC 267

#define LANG_JAPANESE 17

#define IMAGE_DEBUG_TYPE_COFF 1

#define JOB_OBJECT_UILIMIT_ALL 255

#define APPLICATION_VERIFIER_EXIT_THREAD_OWNS_LOCK 512

#define IMAGE_REL_SH3_DIRECT32 2

#define TAPE_DRIVE_SET_BLOCK_SIZE 2147483664

#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 64

#define IMAGE_REL_AM_TOKEN 9

#define HEAP_FREE_CHECKING_ENABLED 64

#define REG_NOTIFY_CHANGE_LAST_SET 4

#define MUTANT_ALL_ACCESS 2031617

#define VER_SUITE_SINGLEUSERTS 256

#define IMAGE_REL_PPC_SECRELLO 19

#define SUBLANG_FRENCH_BELGIAN 2

#define HEAP_GROWABLE 2

#define EMARCH_ENC_I17_IMM5C_INST_WORD_X 3

#define DACL_SECURITY_INFORMATION 4

#define SUBLANG_ARABIC_BAHRAIN 15

#define FILE_SUPPORTS_REPARSE_POINTS 128

#define FILE_GENERIC_READ 1179785

#define FILE_ATTRIBUTE_ENCRYPTED 16384

#define EVENTLOG_END_ALL_PAIRED_EVENTS 4

#define IS_TEXT_UNICODE_REVERSE_STATISTICS 32

#define IS_TEXT_UNICODE_UNICODE_MASK 15

#define PAGE_EXECUTE_READWRITE 64

#define SUBLANG_ENGLISH_NZ 5

#define SE_GROUP_OWNER 8

#define FILE_NOTIFY_CHANGE_LAST_WRITE 16

#define VER_SUITE_BACKOFFICE 4

#define IMAGE_SIZEOF_NT_OPTIONAL_HEADER 224

#define SERVICE_KERNEL_DRIVER 1

#define STATUS_NONCONTINUABLE_EXCEPTION 3221225509

#define ACCESS_MAX_MS_V3_ACE_TYPE 4

#define ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE 2

#define IS_TEXT_UNICODE_REVERSE_CONTROLS 64

#define KEY_WOW64_RES 768

#define IMAGE_SCN_TYPE_NO_PAD 8

#define IMAGE_DEBUG_TYPE_CLSID 11

#define SUBLANG_ARABIC_UAE 14

#define LANG_GEORGIAN 55

#define SUBLANG_ARABIC_KUWAIT 13

#define TAPE_DRIVE_SET_PADDING 2147484672

#define SORT_KOREAN_UNICODE 1

#define SUBLANG_SWEDISH 1

#define TAPE_SPACE_RELATIVE_BLOCKS 5

#define TOKEN_ADJUST_DEFAULT 128

#define CONTEXT_FLOATING_POINT 65544

#define EMARCH_ENC_I17_IC_INST_WORD_X 3

#define APPLICATION_VERIFIER_BAD_HEAP_HANDLE 5

#define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14

#define IMAGE_DIRECTORY_ENTRY_EXCEPTION 3

#define IMAGE_FILE_UP_SYSTEM_ONLY 16384

#define FILE_ATTRIBUTE_SYSTEM 4

#define MAILSLOT_WAIT_FOREVER -1

#define JOB_OBJECT_SECURITY_FILTER_TOKENS 8

#define STATUS_FLOAT_OVERFLOW 3221225617

#define POWER_FORCE_TRIGGER_RESET 2147483648

#define IMAGE_REL_AMD64_ADDR32NB 3

#define TAPE_DRIVE_ERASE_SHORT 16

#define SE_OWNER_DEFAULTED 1

#define SUBLANG_NORWEGIAN_BOKMAL 1

#define TAPE_ABSOLUTE_POSITION 0

#define IMAGE_REL_BASED_IA64_IMM64 9

#define IMAGE_REL_PPC_IFGLUE 13

#define REG_BINARY 3

#define LANG_USER_DEFAULT 1024

#define STATUS_FLOAT_INEXACT_RESULT 3221225615

#define FILE_WRITE_EA 16

#define IMAGE_REL_SH3_DIRECT8_LONG 5

#define IMAGE_REL_AM_SECREL 7

#define IMAGE_REL_AM_ADDR32NB 2

#define FILE_NOTIFY_CHANGE_SECURITY 256

#define JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS 8

#define IMAGE_SYM_TYPE_LONG 5

#define CONTEXT_SEGMENTS 65540

#define TAPE_ERASE_LONG 1

#define LANG_CZECH 5

#define SERVICE_ERROR_NORMAL 1

#define KEY_CREATE_LINK 32

#define SE_GROUP_MANDATORY 1

#define IMAGE_SUBSYSTEM_POSIX_CUI 7

#define IMAGE_REL_PPC_TOCDEFN 2048

#define WT_EXECUTEINPERSISTENTIOTHREAD 64

#define PROCESS_SET_SESSIONID 4

#define IMAGE_REL_AM_ADDR32 1

#define IMAGE_REL_CEF_ADDR64 2

#define SE_SACL_PRESENT 16

#define TAPE_QUERY_MEDIA_CAPACITY 1

#define SUBLANG_SYS_DEFAULT 2

#define IMAGE_REL_PPC_PAIR 18

#define STATUS_INVALID_DISPOSITION 3221225510

#define REG_OPTION_NON_VOLATILE 0

#define PF_COMPARE_EXCHANGE_DOUBLE 2

#define SUBLANG_DUTCH 1

#define IMAGE_REL_CEF_ADDR32 1

#define IMAGE_SYM_TYPE_DWORD 15

#define IMAGE_SCN_MEM_FARDATA 32768

#define PF_MMX_INSTRUCTIONS_AVAILABLE 3

#define TAPE_DRIVE_GET_ABSOLUTE_BLK 1048576

#define LANG_SWAHILI 65

#define IMAGE_REL_MIPS_SECRELLO 12

#define IO_COMPLETION_ALL_ACCESS 2031619

#define DOMAIN_ALIAS_RID_REPLICATOR 552

#define SECURITY_LOGON_IDS_RID 5

#define THREAD_BASE_PRIORITY_IDLE -15

#define REG_QWORD 11

#define IMAGE_REL_SH3_DIRECT4_LONG 8

#define FILE_NOTIFY_CHANGE_DIR_NAME 2

#define VER_NT_SERVER 3

#define PROCESS_CREATE_THREAD 2

#define REG_LINK 6

#define EMARCH_ENC_I17_IMM41c_VAL_POS_X 40

#define DOMAIN_GROUP_RID_COMPUTERS 515

#define LANG_ICELANDIC 15

#define KEY_ENUMERATE_SUB_KEYS 8

#define JOB_OBJECT_SECURITY_NO_ADMIN 1

#define IMAGE_REL_IA64_PCREL60B 22

#define REG_NONE 0

#define PROCESSOR_INTEL_PENTIUM 586

#define IMAGE_SYM_CLASS_LABEL 6

#define IMAGE_SYM_TYPE_WORD 13

#define IMAGE_REL_AMD64_REL32_1 5

#define IMAGE_COMDAT_SELECT_NODUPLICATES 1

#define PROCESSOR_SHx_SH3 103

#define IMAGE_REL_AMD64_REL32_3 7

#define IMAGE_REL_AMD64_REL32_2 6

#define IMAGE_REL_AMD64_REL32_5 9

#define PROCESSOR_SHx_SH4 104

#define IMAGE_REL_AMD64_REL32_4 8

#define IMAGE_REL_MIPS_TOKEN 14

#define APPLICATION_VERIFIER_RESERVED_BIT_28 268435456

#define IO_REPARSE_TAG_SIS 2147483655

#define IMAGE_VXD_SIGNATURE 17740

#define SEC_RESERVE 67108864

#define WRITE_WATCH_FLAG_RESET 1

#define IMAGE_REL_CEF_SECREL 5

#define IMAGE_REL_IA64_PCREL60X 21

#define IMAGE_REL_AMD64_SECREL7 12

#define IMAGE_REL_IA64_PCREL60M 25

#define WT_EXECUTEINTIMERTHREAD 32

#define IMAGE_REL_CEE_ADDR32NB 3

#define IMAGE_REL_IA64_PCREL60F 23

#define IMAGE_REL_IA64_PCREL60I 24

#define KEY_ALL_ACCESS 983103

#define EMARCH_ENC_I17_SIGN_INST_WORD_POS_X 27

#define SUBLANG_ENGLISH_TRINIDAD 11

#define PF_FLOATING_POINT_EMULATED 1

#define ANYSIZE_ARRAY 1

#define HEAP_TAG_SHIFT 18

#define IMAGE_REL_ARM_SECTION 14

#define THREAD_DIRECT_IMPERSONATION 512

#define SUBLANG_GERMAN_LIECHTENSTEIN 5

#define DOMAIN_ALIAS_RID_USERS 545

#define IMAGE_FILE_MACHINE_R10000 360

#define IMAGE_REL_AM_FUNCINFO 4

#define PROCESSOR_ARCHITECTURE_ALPHA64 7

#define IMAGE_SCN_ALIGN_32BYTES 6291456

#define IMAGE_REL_MIPS_SECRELHI 13

#define JOB_OBJECT_LIMIT_JOB_TIME 4

#define IMAGE_REL_IA64_TOKEN 27

#define JOB_OBJECT_UILIMIT_DESKTOP 64

#define SECURITY_NULL_RID 0

#define DLL_PROCESS_ATTACH 1

#define IMAGE_SUBSYSTEM_XBOX 14

#define TOKEN_READ 131080

#define STATUS_TIMEOUT 258

#define IS_TEXT_UNICODE_NULL_BYTES 4096

#define IMAGE_FILE_BYTES_REVERSED_HI 32768

#define FILE_SUPPORTS_REMOTE_STORAGE 256

#define MAXLONG 2147483647

#define SORT_HUNGARIAN_DEFAULT 0

#define JOB_OBJECT_MSG_NEW_PROCESS 6

#define SUBLANG_UZBEK_LATIN 1

#define COMPRESSION_ENGINE_HIBER 512

#define IMAGE_REL_M32R_GPREL16 4

#define SUBLANG_ARABIC_SAUDI_ARABIA 1

#define WT_EXECUTEINIOTHREAD 1

#define SUBLANG_ARABIC_SYRIA 10

#define SUBLANG_ARABIC_TUNISIA 7

#define SECURITY_CREATOR_OWNER_SERVER_RID 2

#define EVENTLOG_START_PAIRED_EVENT 1

#define PO_THROTTLE_DEGRADE 2

#define TOKEN_ADJUST_PRIVILEGES 32

#define JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 255

#define IMAGE_REL_ALPHA_HINT 8

#define ACL_REVISION4 4

#define JOB_OBJECT_SECURITY_VALID_FLAGS 15

#define MEM_RELEASE 32768

#define LANG_TATAR 68

#define LANG_SINDHI 89

#define LANG_SERBIAN 26

#define DUPLICATE_CLOSE_SOURCE 1

#define IMAGE_REL_ARM_ADDR32 1

#define IMAGE_REL_IA64_ABSOLUTE 0

#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 8192

#define ACL_REVISION3 3

#define ACL_REVISION2 2

#define ACL_REVISION1 1

#define IMAGE_REL_AMD64_SECTION 10

#define IMAGE_REL_MIPS_GPREL 6

#define IMAGE_SCN_ALIGN_1BYTES 1048576

#define SORT_JAPANESE_XJIS 0

#define EVENTLOG_PAIRED_EVENT_ACTIVE 8

#define IMAGE_REL_IA64_LTOFF22 10

#define GENERIC_ALL 268435456

#define IMAGE_SYM_CLASS_REGISTER 4

#define IMAGE_FILE_BYTES_REVERSED_LO 128

#define IMAGE_SYM_CLASS_MEMBER_OF_UNION 11

#define TOKEN_EXECUTE 131072

#define VER_SUITE_BLADE 1024

#define IMAGE_SCN_MEM_SHARED 268435456

#define IMAGE_SYM_TYPE_MOE 11

#define IMAGE_REL_IA64_PCREL21B 6

#define SECURITY_CREATOR_GROUP_SERVER_RID 3

#define IMAGE_REL_IA64_PCREL21F 8

#define IMAGE_SCN_ALIGN_128BYTES 8388608

#define RTL_VRF_FLG_STACK_CHECKS 8

#define PROCESS_TERMINATE 1

#define PROCESSOR_OPTIL 18767

#define IMAGE_REL_PPC_BRTAKEN 512

#define LANG_BASQUE 45

#define TAPE_DRIVE_FORMAT_IMMEDIATE 3221225472

#define LANG_AFRIKAANS 54

#define TAPE_QUERY_DEVICE_ERROR_DATA 4

#define PROCESS_CREATE_PROCESS 128

#define IMAGE_FILE_DEBUG_STRIPPED 512

#define DBG_TERMINATE_THREAD 1073807363

#define SEF_DEFAULT_GROUP_FROM_PARENT 64

#define IMAGE_DEBUG_TYPE_FIXUP 6

#define LANG_DUTCH 19

#define FILE_SHARE_DELETE 4

#define PROCESSOR_ARCHITECTURE_INTEL 0

#define IMAGE_REL_M32R_PCREL16 6

#define IMAGE_SUBSYSTEM_OS2_CUI 5

#define IMAGE_REL_ALPHA_BRADDR 7

#define IMAGE_REL_M32R_PCREL24 5

#define EVENTLOG_END_PAIRED_EVENT 2

#define IMAGE_DOS_SIGNATURE 23117

#define EXCEPTION_NONCONTINUABLE 1

#define TAPE_DRIVE_SET_CMP_BOP_ONLY 67108864

#define TAPE_REWIND 0

#define IMAGE_REL_BASED_HIGHADJ 4

#define SERVICE_DRIVER 11

#define EMARCH_ENC_I17_IMM7B_SIZE_X 7

#define TAPE_ABSOLUTE_BLOCK 1

#define MAXWORD 65535

#define JOB_OBJECT_ALL_ACCESS 2031647

#define EMARCH_ENC_I17_IMM9D_SIZE_X 9

#define IMAGE_REL_PPC_SECRELHI 20

#define FILE_NOTIFY_CHANGE_SIZE 8

#define MAILSLOT_NO_MESSAGE -1

#define LANG_SYSTEM_DEFAULT 2048

#define SUBLANG_SERBIAN_CYRILLIC 3

#define TAPE_DRIVE_LOGICAL_BLK 2147500032

#define SECTION_EXTEND_SIZE 16

#define TOKEN_ALL_ACCESS 983551

#define SUBLANG_ITALIAN_SWISS 2

#define SE_GROUP_ENABLED 4

#define TAPE_SPACE_SEQUENTIAL_FMKS 7

#define FILE_ACTION_RENAMED_NEW_NAME 5

#define APPLICATION_VERIFIER_STACK_OVERFLOW 11

#define IMAGE_REL_ALPHA_REFLO 11

#define SECTION_MAP_READ 4

#define SORT_GEORGIAN_TRADITIONAL 0

#define REG_OPTION_OPEN_LINK 8

#define IMAGE_REL_IA64_SECREL64I 13

#define FAILED_ACCESS_ACE_FLAG 128

#define APPLICATION_VERIFIER_TERMINATE_THREAD_CALL 256

#define CONTEXT_FULL 65543

#define PAGE_WRITECOMBINE 1024

#define POWER_ACTION_OVERRIDE_APPS 4

#define TAPE_SELECT_PARTITIONS 1

#define IMAGE_FILE_MACHINE_MIPSFPU16 1126

#define PROCESSOR_PPC_603 603

#define PROCESSOR_PPC_604 604

#define IMPORT_OBJECT_HDR_SIG2 65535

#define PROCESSOR_PPC_601 601

#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 1024

#define TAPE_DRIVE_LOAD_UNLOAD 2147483649

#define IMAGE_REL_SH3_SECTION 14

#define APPLICATION_VERIFIER_SWITCHED_HEAP_HANDLE 6

#define IMAGE_DEBUG_TYPE_UNKNOWN 0

#define IMAGE_REL_SH3_GPREL4_LONG 17

#define IMAGE_REL_ALPHA_LITERAL 4

#define FILE_DELETE_CHILD 64

#define EVENTLOG_SEQUENTIAL_READ 1

#define WT_EXECUTEDEFAULT 0

#define IMAGE_REL_IA64_PCREL21M 7

#define LANG_ROMANIAN 24

#define LANG_DIVEHI 101

#define TOKEN_QUERY 8

#define MAXIMUM_NUMA_NODES 16

#define ACCESS_MAX_MS_OBJECT_ACE_TYPE 8

#define IMAGE_SIZEOF_RELOCATION 10

#define IMAGE_REL_ALPHA_GPREL32 3

#define SORT_CHINESE_BOPOMOFO 3

#define STATUS_NO_MEMORY 3221225495

#define TAPE_LOGICAL_BLOCK 2

#define EMARCH_ENC_I17_IMM9D_INST_WORD_X 3

#define PROCESSOR_PPC_620 620

#define IMAGE_SYM_TYPE_INT 4

#define IMAGE_FILE_MACHINE_POWERPCFP 497

#define SORT_JAPANESE_UNICODE 1

#define DBG_EXCEPTION_NOT_HANDLED 2147549185

#define APPLICATION_VERIFIER_LOCK_CORRUPTED 517

#define SECURITY_CREATOR_GROUP_RID 1

#define IMAGE_REL_ALPHA_REFHI 10

#define REG_NOTIFY_CHANGE_ATTRIBUTES 2

#define TAPE_DRIVE_GET_LOGICAL_BLK 2097152

#define LANG_TURKISH 31

#define PROCESSOR_INTEL_386 386

#define IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8

#define WRITE_DAC 262144

#define IMAGE_FILE_AGGRESIVE_WS_TRIM 16

#define SERVICE_ERROR_SEVERE 2

#define IMAGE_REL_IA64_IMMGPREL64 26

#define VER_AND 6

#define SUBLANG_DUTCH_BELGIAN 2

#define TAPE_PSEUDO_LOGICAL_BLOCK 3

#define IMAGE_SYM_TYPE_STRUCT 8

#define LANG_URDU 32

#define UNPROTECTED_DACL_SECURITY_INFORMATION 536870912

#define REG_WHOLE_HIVE_VOLATILE 1

#define PROCESS_DUP_HANDLE 64

#define FILE_READ_DATA 1

#define ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE 12

#define APPLICATION_VERIFIER_LOCK_IN_UNLOADED_DLL 513

#define FILE_SUPPORTS_SPARSE_FILES 64

#define SUBLANG_NORWEGIAN_NYNORSK 2

#define PRIVILEGE_SET_ALL_NECESSARY 1

#define STATUS_BREAKPOINT 2147483651

#define LANG_KONKANI 87

#define IMAGE_REL_MIPS_JMPADDR16 16

#define PROCESSOR_ARM820 2080

#define LANG_FRENCH 12

#define DUPLICATE_SAME_ACCESS 2

#define FILE_FILE_COMPRESSION 16

#define TAPE_DRIVE_VARIABLE_BLOCK 2048

#define LANG_SWEDISH 29

#define EMARCH_ENC_I17_IMM7B_VAL_POS_X 0

#define EVENTLOG_SUCCESS 0

#define SUBLANG_GERMAN_LUXEMBOURG 4

#define TAPE_DRIVE_ERASE_LONG 32

#define SEF_DACL_AUTO_INHERIT 1

#define IMAGE_DEBUG_TYPE_RESERVED10 10

#define SUBLANG_URDU_PAKISTAN 1

#define LANG_UKRAINIAN 34

#define LANG_GREEK 8

#define JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8

#define LANG_NEPALI 97

#define SUBLANG_ARABIC_YEMEN 9

#define FILE_ACTION_MODIFIED 3

#define VER_NUM_BITS_PER_CONDITION_MASK 3

#define SUBLANG_ENGLISH_BELIZE 10

#define IMAGE_REL_SH3_STARTOF_SECTION 12

#define STATUS_INVALID_HANDLE 3221225480

#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 4096

#define SERVICE_DEMAND_START 3

#define DISCHARGE_POLICY_LOW 1

#define FILE_SUPPORTS_ENCRYPTION 131072

#define IMAGE_SCN_ALIGN_256BYTES 9437184

#define IMAGE_SYM_CLASS_STRUCT_TAG 10

#define IMAGE_SCN_CNT_CODE 32

#define EMARCH_ENC_I17_SIGN_INST_WORD_X 3

#define IMAGE_FILE_NET_RUN_FROM_SWAP 2048

#define LANG_UZBEK 67

#define JOB_OBJECT_POST_AT_END_OF_JOB 1

#define LANG_KOREAN 18

#define SERVICE_SYSTEM_START 1

#define PDCAP_WAKE_FROM_D1_SUPPORTED 32

#define EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X 18

#define THREAD_BASE_PRIORITY_LOWRT 15

#define IMAGE_ROM_OPTIONAL_HDR_MAGIC 263

#define JOB_OBJECT_LIMIT_AFFINITY 16

#define TAPE_DRIVE_TENSION 2147483650

#define IMAGE_SYM_CLASS_FUNCTION 101

#define INHERIT_ONLY_ACE 8

#define SUBLANG_SPANISH_COSTA_RICA 5

#define LANG_SLOVAK 27

#define STANDARD_RIGHTS_EXECUTE 131072

#define SUBLANG_SPANISH_ECUADOR 12

#define JOB_OBJECT_SECURITY_RESTRICTED_TOKEN 2

#define COMPRESSION_ENGINE_STANDARD 0

#define JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 32767

#define IMAGE_FILE_LINE_NUMS_STRIPPED 4

#define PROCESSOR_ARCHITECTURE_ARM 5

#define IMAGE_REL_PPC_SECREL16 15

#define MINSHORT 32768

#define APPLICATION_VERIFIER_LOCK_INVALID_LOCK_COUNT 520

#define IMAGE_SYM_TYPE_FLOAT 6

#define IMAGE_REL_BASED_ABSOLUTE 0

#define STANDARD_RIGHTS_WRITE 131072

#define EVENTLOG_INFORMATION_TYPE 4

#define IMAGE_REL_CEF_ABSOLUTE 0

#define IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7

#define IMAGE_OS2_SIGNATURE_LE 17740

#define REG_NO_LAZY_FLUSH 4

#define SUBLANG_DEFAULT 1

#define SECURITY_NETWORK_RID 2

#define SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT 4

#define KEY_SET_VALUE 2

#define IMAGE_REL_ALPHA_REFQ2 20

#define IMAGE_REL_ALPHA_REFQ1 21

#define IMAGE_REL_ALPHA_REFQ3 19

#define TAPE_DRIVE_WRITE_SETMARKS 2164260864

#define IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE 32768

#define SECURITY_INTERACTIVE_RID 4

#define ES_CONTINUOUS 2147483648

#define IO_COMPLETION_MODIFY_STATE 2

#define IMAGE_REL_M32R_REFLO 10

#define DOMAIN_ALIAS_RID_GUESTS 546

#define IMAGE_REL_I386_DIR32NB 7

#define STATUS_INTEGER_DIVIDE_BY_ZERO 3221225620

#define LOCALE_INVARIANT 127

#define SUBLANG_KASHMIRI_INDIA 2

#define IMAGE_REL_ALPHA_REFLONG 1

#define STATUS_INTEGER_OVERFLOW 3221225621

#define IMAGE_SCN_ALIGN_64BYTES 7340032

#define JOB_OBJECT_TERMINATE 8

#define SUBLANG_FRENCH_MONACO 6

#define SECURITY_SERVICE_RID 6

#define IMAGE_ARCHIVE_START_SIZE 8

#define VER_MINORVERSION 1

#define LANG_FINNISH 11

#define IMAGE_DLLCHARACTERISTICS_NO_BIND 2048

#define IMAGE_SYM_CLASS_CLR_TOKEN 107

#define SUBLANG_SPANISH_HONDURAS 18

#define ES_SYSTEM_REQUIRED 1

#define SERVICE_FILE_SYSTEM_DRIVER 2

#define REG_LATEST_FORMAT 2

#define IMAGE_FILE_MACHINE_R3000 354

#define POWER_LEVEL_USER_NOTIFY_TEXT 1

#define IS_TEXT_UNICODE_ASCII16 1

#define TAPE_DRIVE_HIGH_FEATURES 2147483648

#define TOKEN_WRITE 131296

#define IMAGE_REL_BASED_HIGH 1

#define PDCAP_WAKE_FROM_D3_SUPPORTED 128

#define VER_LESS_EQUAL 5

#define IMAGE_REL_SH3_ABSOLUTE 0

#define IMAGE_ORDINAL_FLAG32 2147483648

#define EVENT_MODIFY_STATE 2

#define PROCESSOR_ARCHITECTURE_MIPS 1

#define FILE_WRITE_ATTRIBUTES 256

#define EMARCH_ENC_I17_SIGN_VAL_POS_X 63

#define IMAGE_SYM_CLASS_EXTERNAL 2

#define DLL_THREAD_ATTACH 2

#define LANG_LITHUANIAN 39

#define IMAGE_DIRECTORY_ENTRY_TLS 9

#define ACCESS_PROPERTY_SET_GUID 1

#define TAPE_DRIVE_EJECT_MEDIA 16777216

#define VER_BUILDNUMBER 4

#define LANG_DANISH 6

#define IMAGE_SYM_CLASS_FAR_EXTERNAL 68

#define TAPE_DRIVE_ERASE_BOP_ONLY 64

#define PDCAP_D1_SUPPORTED 2

#define TOKEN_ADJUST_GROUPS 64

#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 2048

#define IMAGE_REL_M32R_REFHI 9

#define MAXCHAR 127

#define IMAGE_NT_OPTIONAL_HDR64_MAGIC 523

#define PROCESSOR_ARCHITECTURE_ALPHA 2

#define LANG_FARSI 41

#define SUBLANG_SPANISH_ARGENTINA 11

#define SUBLANG_NEPALI_INDIA 2

#define LANG_KASHMIRI 96

#define TAPE_SETMARKS 0

#define FILE_EXECUTE 32

#define IMAGE_DIRECTORY_ENTRY_IMPORT 1

#define TIME_ZONE_ID_STANDARD 1

#define TAPE_SPACE_END_OF_DATA 4

#define SECTION_MAP_EXECUTE 8

#define LOCALE_USER_DEFAULT 1024

#define HEAP_PSEUDO_TAG_FLAG 32768

#define VER_SUITE_EMBEDDEDNT 64

#define INHERITED_ACE 16

#define IMAGE_ORDINAL_FLAG64 -9223372036854775808

#define SE_PRIVILEGE_USED_FOR_ACCESS 2147483648

#define JOB_OBJECT_UILIMIT_HANDLES 1

#define LANG_ALBANIAN 28

#define HEAP_GENERATE_EXCEPTIONS 4

#define WT_EXECUTEINWAITTHREAD 4

#define PDCAP_D3_SUPPORTED 8

#define IMAGE_DEBUG_TYPE_BORLAND 9

#define SECURITY_BUILTIN_DOMAIN_RID 32

#define IMAGE_REL_M32R_REFHALF 8

#define LANG_PORTUGUESE 22

#define LANG_CHINESE 4

#define IMAGE_REL_ALPHA_SECRELHI 18

#define STATUS_USER_APC 192

#define JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9

#define SECURITY_SERVER_LOGON_RID 9

#define IMAGE_SCN_LNK_OTHER 256

#define PROTECTED_DACL_SECURITY_INFORMATION 2147483648

#define LANG_ARMENIAN 43

#define RTL_VRF_FLG_APPCOMPAT_CHECKS 16

#define SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE 16

#define SUBLANG_ARABIC_JORDAN 11

#define VER_GREATER_EQUAL 3

#define TAPE_FIXED_PARTITIONS 0

#define IMAGE_REL_ARM_TOKEN 5

#define CONTEXT_INTEGER 65538

#define ES_DISPLAY_REQUIRED 2

#define IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12

#define ACCESS_DENIED_OBJECT_ACE_TYPE 6

#define STATUS_PENDING 259

#define TAPE_DRIVE_RELATIVE_BLKS 2147614720

#define STATUS_ACCESS_VIOLATION 3221225477

#define STATUS_FLOAT_UNDERFLOW 3221225619

#define LANG_MALAYALAM 76

#define SORT_GERMAN_PHONE_BOOK 1

#define ACCESS_MAX_MS_V2_ACE_TYPE 3

#define REG_OPTION_RESERVED 0

#define SERVICE_DISABLED 4

#define REG_STANDARD_FORMAT 1

#define IMAGE_REL_I386_TOKEN 12

#define MAX_ACL_REVISION 4

#define IMAGE_FILE_MACHINE_EBC 3772

#define TAPE_DRIVE_FILEMARKS 2147745792

#define UNPROTECTED_SACL_SECURITY_INFORMATION 268435456

#define JOB_OBJECT_ASSIGN_PROCESS 1

#define DOMAIN_ALIAS_RID_ACCOUNT_OPS 548

#define PF_FLOATING_POINT_PRECISION_ERRATA 0

#define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT 13

#define SEF_AVOID_OWNER_CHECK 16

#define IMAGE_FILE_MACHINE_IA64 512

#define LANG_INDONESIAN 33

#define POWER_USER_NOTIFY_SHUTDOWN 16

#define THREAD_TERMINATE 1

#define EMARCH_ENC_I17_IMM41b_INST_WORD_X 1

#define ACCESS_MAX_MS_V5_ACE_TYPE 17

#define IMAGE_SIZEOF_SYMBOL 18

#define ERROR_LIBRARY_FULL 4322

#define ERROR_PROFILE_NOT_FOUND 2016

#define CRYPT_E_ASN1_RULE 2148086029

#define ERROR_DEPENDENT_RESOURCE_EXISTS 5001

#define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391

#define ERROR_IPSEC_IKE_INVALID_GROUP 13865

#define DNS_ERROR_INVALID_ZONE_OPERATION 9603

#define ERROR_INVALID_DATA 13

#define CO_E_CLASS_CREATE_FAILED 2148007937

#define ERROR_SECRET_TOO_LONG 1382

#define ERROR_DS_SOURCE_DOMAIN_IN_FOREST 8534

#define STG_E_INVALIDHEADER 2147680507

#define COMADMIN_E_INVALID_PARTITION 2148599819

#define ERROR_DS_DRA_REF_ALREADY_EXISTS 8448

#define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302

#define ERROR_UNABLE_TO_INVENTORY_TRANSPORT 4327

#define RPC_X_NULL_REF_POINTER 1780

#define CO_E_SXS_CONFIG 2147500082

#define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE 8502

#define RPC_S_NO_ENDPOINT_FOUND 1708

#define CERTSRV_E_SIGNATURE_POLICY_REQUIRED 2148091913

#define ERROR_NOACCESS 998

#define ERROR_IPSEC_IKE_SECLOADFAIL 13852

#define ERROR_DS_ALIAS_DEREF_PROBLEM 8244

#define OSS_CONSTRAINT_VIOLATED 2148085777

#define ERROR_DS_CROSS_DOM_MOVE_ERROR 8216

#define WSASERVICE_NOT_FOUND 10108

#define ERROR_RESOURCE_LANG_NOT_FOUND 1815

#define CO_E_APPSINGLEUSE 2147746294

#define COMQC_E_UNTRUSTED_ENQUEUER 2148599302

#define COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER 2148598862

#define ERROR_PKINIT_FAILURE 1263

#define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227

#define RPC_E_NO_SYNC 2147549472

#define OSS_PER_DLL_NOT_LINKED 2148085803

#define SEC_E_BAD_BINDINGS 2148074310

#define CO_E_FAILEDTOOPENTHREADTOKEN 2147549477

#define DV_E_FORMATETC 2147745892

#define SEC_E_WRONG_PRINCIPAL 2148074274

#define EVENT_E_INVALID_EVENT_CLASS_PARTITION 2147746319

#define CRYPT_E_INVALID_PRINTABLE_STRING 2148081697

#define INPLACE_S_FIRST 262560

#define STG_E_INSUFFICIENTMEMORY 2147680264

#define XACT_E_UNABLE_TO_READ_DTC_CONFIG 2147799079

#define ERROR_DS_INCOMPATIBLE_CONTROLS_USED 8574

#define EVENT_E_USER_EXCEPTION 2147746312

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS 2148599835

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 1177

#define CACHE_E_NOCACHE_UPDATED 2147746160

#define WSAEREMOTE 10071

#define ERROR_INVALID_STATE 5023

#define ERROR_SIGNAL_REFUSED 156

#define ERROR_SXS_XML_E_INCOMPLETE_ENCODING 14043

#define ERROR_INTERNAL_ERROR 1359

#define ERROR_IS_SUBST_PATH 146

#define ERROR_DS_INTERNAL_FAILURE 8430

#define CO_E_LAST 2147746303

#define ERROR_INVALID_FORM_SIZE 1903

#define RPC_S_FP_DIV_ZERO 1769

#define ERROR_DS_NO_PARENT_OBJECT 8329

#define CLASSFACTORY_E_FIRST 2147746064

#define ERROR_DS_CANT_FIND_NC_IN_CACHE 8421

#define ERROR_SETCOUNT_ON_BAD_LB 1433

#define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY 7005

#define STG_S_BLOCK 197121

#define DNS_ERROR_DATABASE_BASE 9700

#define OLE_E_BLANK 2147745799

#define ERROR_RESOURCE_DATA_NOT_FOUND 1812

#define DNS_STATUS_DOTTED_NAME 9558

#define WSAEUSERS 10068

#define CO_E_FAILEDTOSETDACL 2147549481

#define RPC_S_SERVER_TOO_BUSY 1723

#define FACILITY_WIN32 7

#define ERROR_TOO_MANY_SEM_REQUESTS 103

#define RPC_S_PROFILE_NOT_ADDED 1925

#define SPAPI_E_DI_DONT_INSTALL 2148467243

#define ERROR_IPSEC_IKE_OUT_OF_MEMORY 13859

#define OR_INVALID_SET 1912

#define CRYPT_E_SECURITY_SETTINGS 2148081702

#define CRYPT_E_MISSING_PUBKEY_PARA 2148081708

#define RPC_X_BAD_STUB_DATA 1783

#define COMADMIN_E_DLLLOADFAILED 2148598813

#define VIEW_S_ALREADY_FROZEN 262464

#define OSS_LIMITED 2148085770

#define S_OK 0

#define SPAPI_E_INVALID_INF_LOGCONFIG 2148467242

#define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD 8376

#define ERROR_NOT_ENOUGH_MEMORY 8

#define REGDB_E_KEYMISSING 2147746130

#define OSS_PDU_RANGE 2148085763

#define ERROR_CLUSTER_JOIN_ABORTED 5074

#define RPC_S_INTERFACE_NOT_EXPORTED 1924

#define XACT_S_ALLNORETAIN 315399

#define ERROR_INVALID_MINALLOCSIZE 195

#define ERROR_INVALID_SERVER_STATE 1352

#define ERROR_BAD_USER_PROFILE 1253

#define NTE_BAD_LEN 2148073476

#define STG_E_INVALIDFUNCTION 2147680257

#define ERROR_CTX_SHADOW_INVALID 7050

#define ERROR_NOT_EXPORT_FORMAT 6008

#define CERT_E_PURPOSE 2148204806

#define WSAENOTSOCK 10038

#define ERROR_DS_INSTALL_SCHEMA_MISMATCH 8467

#define ERROR_DS_DRA_RPC_CANCELLED 8455

#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386

#define SCARD_W_EOF 2148532333

#define ERROR_DS_CANT_MOD_OBJ_CLASS 8215

#define SCHED_S_TASK_HAS_NOT_RUN 267011

#define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST 5082

#define OSS_MEM_MGR_DLL_NOT_LINKED 2148085798

#define ERROR_DUPLICATE_TAG 2014

#define ERROR_CANT_OPEN_ANONYMOUS 1347

#define ERROR_NO_INHERITANCE 1391

#define ERROR_NON_MDICHILD_WINDOW 1445

#define CERTSRV_E_ISSUANCE_POLICY_REQUIRED 2148091916

#define ERROR_WMI_READ_ONLY 4213

#define ERROR_RESOURCE_PROPERTIES_STORED 5024

#define ERROR_CLUSTER_NODE_PAUSED 5070

#define OSS_CANT_OPEN_TRACE_WINDOW 2148085784

#define ERROR_CONNECTION_UNAVAIL 1201

#define SEC_E_TOO_MANY_PRINCIPALS 2148074299

#define ERROR_UNRECOGNIZED_MEDIA 1785

#define RPC_E_SERVER_DIED_DNE 2147549202

#define ERROR_DS_INAPPROPRIATE_AUTH 8233

#define ERROR_DEVICE_NOT_AVAILABLE 4319

#define SPAPI_E_BAD_SECTION_NAME_LINE 2148466689

#define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD 8585

#define ERROR_CLUSTER_NODE_NOT_MEMBER 5052

#define ERROR_INC_BACKUP 4003

#define ERROR_COLORSPACE_MISMATCH 2021

#define ERROR_PROCESS_ABORTED 1067

#define XACT_E_NOTIMEOUT 2147799063

#define ERROR_IPSEC_IKE_INVALID_SITUATION 13863

#define ERROR_SPECIAL_USER 1373

#define ERROR_INVALID_BLOCK 9

#define ERROR_PRINTER_DRIVER_BLOCKED 3014

#define ERROR_POTENTIAL_FILE_FOUND 1180

#define COMADMIN_E_OBJECTERRORS 2148598785

#define ERROR_CTX_NO_OUTBUF 7008

#define ERROR_HOOK_NEEDS_HMOD 1428

#define ERROR_REQUEST_ABORTED 1235

#define SPAPI_E_DUPLICATE_FOUND 2148467202

#define STG_E_TERMINATED 2147680770

#define STG_E_WRITEFAULT 2147680285

#define SEC_E_NOT_OWNER 2148074246

#define DNS_ERROR_NON_RFC_NAME 9556

#define SEC_E_UNFINISHED_CONTEXT_DELETED 2148074291

#define NTE_BAD_KEY_STATE 2148073483

#define CRYPT_E_STREAM_MSG_NOT_READY 2148077584

#define ERROR_CHILD_NOT_COMPLETE 129

#define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS 8549

#define OSS_MORE_INPUT 2148085764

#define CRYPT_E_NO_SIGNER 2148081678

#define ERROR_SOURCE_ELEMENT_EMPTY 1160

#define ERROR_DS_INIT_FAILURE_CONSOLE 8561

#define STG_E_NOMOREFILES 2147680274

#define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES 8556

#define ERROR_DS_INVALID_SCRIPT 8600

#define CRYPT_E_ISSUER_SERIALNUMBER 2148077581

#define RPC_E_CALL_COMPLETE 2147549463

#define CRYPT_E_ASN1_BADREAL 2148086026

#define COMADMIN_E_PRIVATE_ACCESSDENIED 2148599841

#define ERROR_DS_CANT_FIND_EXPECTED_NC 8420

#define CO_E_SCM_RPC_FAILURE 2148007939

#define XACT_E_NOTRANSACTION 2147799054

#define COMADMIN_E_CAT_INVALID_PARTITION_SET_NAME 2148600065

#define INPLACE_E_LAST 2147746223

#define ERROR_HOTKEY_ALREADY_REGISTERED 1409

#define CO_E_RUNAS_LOGON_FAILURE 2147500058

#define TYPE_E_ELEMENTNOTFOUND 2147647531

#define CO_E_LAUNCH_PERMSSION_DENIED 2147500059

#define DNS_ERROR_SETUP_BASE 9850

#define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT 9710

#define CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE 2148089870

#define RPC_S_INVALID_RPC_PROTSEQ 1704

#define STG_E_FILENOTFOUND 2147680258

#define SEC_I_INCOMPLETE_CREDENTIALS 590624

#define ERROR_DS_DRA_ACCESS_DENIED 8453

#define ERROR_BAD_DEV_TYPE 66

#define SPAPI_E_NO_CATALOG_FOR_OEM_INF 2148467247

#define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER 8520

#define ERROR_MEMBER_NOT_IN_ALIAS 1377

#define SEC_E_LOGON_DENIED 2148074252

#define RPC_X_WRONG_ES_VERSION 1828

#define RPC_X_WRONG_PIPE_ORDER 1831

#define SEVERITY_SUCCESS 0

#define ERROR_PROMOTION_ACTIVE 8221

#define CO_E_NOTCONSTRUCTED 2147803181

#define ERROR_CTX_SHADOW_DISABLED 7051

#define ERROR_TOO_MANY_MUXWAITERS 152

#define XACT_E_LAST 2147799083

#define ERROR_NOT_AUTHENTICATED 1244

#define ERROR_DRIVER_BLOCKED 1275

#define EVENT_S_NOSUBSCRIBERS 262658

#define ERROR_INVALID_SUB_AUTHORITY 1335

#define CO_E_DLLNOTFOUND 2147746296

#define ERROR_DS_NO_MORE_RIDS 8209

#define ERROR_EAS_NOT_SUPPORTED 282

#define ERROR_UNABLE_TO_INVENTORY_DRIVE 4325

#define SPAPI_E_NO_ASSOCIATED_CLASS 2148467200

#define SPAPI_E_INVALID_COINSTALLER 2148467239

#define CO_E_SERVER_INIT_TIMEOUT 2147500074

#define COMADMIN_E_CAT_SERVERFAULT 2148598918

#define DISP_E_ARRAYISLOCKED 2147614733

#define ERROR_BAD_THREADID_ADDR 159

#define COMADMIN_E_REGDB_SYSTEMERR 2148598900

#define RPC_S_NO_MORE_MEMBERS 1757

#define ERROR_FLOPPY_BAD_REGISTERS 1125

#define ERROR_SXS_VERSION_CONFLICT 14008

#define DISP_E_BADPARAMCOUNT 2147614734

#define DNS_ERROR_RCODE_YXRRSET 9007

#define WSAETOOMANYREFS 10059

#define ERROR_SXS_XML_E_INVALID_VERSION 14072

#define ERROR_CONTINUE 1246

#define NTE_BAD_HASH 2148073474

#define DNS_ERROR_PACKET_FMT_BASE 9500

#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006

#define SPAPI_E_FILEQUEUE_LOCKED 2148467222

#define CO_E_RELOAD_DLL 2147500066

#define ERROR_INVALID_PRINTER_NAME 1801

#define INPLACE_S_LAST 262575

#define E_NOINTERFACE 2147500034

#define OSS_TABLE_MISMATCH 2148085789

#define CO_E_RELEASED 2147746303

#define CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL 2148089868

#define ERROR_CLUSTER_NODE_UNREACHABLE 5051

#define STG_E_CSS_SCRAMBLED_SECTOR 2147681033

#define EVENT_E_TOO_MANY_METHODS 2147746313

#define RPC_S_INVALID_ASYNC_CALL 1915

#define ERROR_STACK_OVERFLOW 1001

#define CONVERT10_E_STG_FMT 2147746244

#define COMADMIN_E_USER_IN_SET 2148599822

#define ERROR_INVALID_SERVICE_CONTROL 1052

#define SCHED_S_TASK_NO_VALID_TRIGGERS 267015

#define ERROR_CANNOT_FIND_WND_CLASS 1407

#define ERROR_NOT_JOINED 136

#define RPC_S_WAITONTIMER 2147549462

#define ERROR_MESSAGE_EXCEEDS_MAX_SIZE 4336

#define DNS_ERROR_NAME_DOES_NOT_EXIST 9714

#define ERROR_DS_DRA_OBJ_IS_REP_SOURCE 8450

#define OLE_E_FIRST 2147745792

#define COMADMIN_E_CANTRECYCLELIBRARYAPPS 2148599823

#define ERROR_INVALID_PASSWORDNAME 1216

#define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 8201

#define DISP_E_TYPEMISMATCH 2147614725

#define OLE_E_INVALIDRECT 2147745805

#define ERROR_NOT_SUPPORTED_ON_SBS 1254

#define ERROR_DS_GC_NOT_AVAILABLE 8217

#define SCHED_E_TASK_NOT_RUNNING 2147750667

#define ERROR_SET_POWER_STATE_VETOED 1140

#define TRUST_E_ACTION_UNKNOWN 2148204546

#define RPC_S_PROTSEQ_NOT_SUPPORTED 1703

#define ERROR_IPSEC_IKE_INVALID_KEY_USAGE 13818

#define ERROR_DS_CROSS_REF_EXISTS 8374

#define OR_INVALID_OXID 1910

#define SPAPI_E_LINE_NOT_FOUND 2148466946

#define CRYPT_E_OID_FORMAT 2148077571

#define ERROR_DS_ALIAS_POINTS_TO_ALIAS 8336

#define ERROR_IRQ_BUSY 1119

#define ERROR_REPARSE_TAG_MISMATCH 4394

#define FRS_ERR_INVALID_API_SEQUENCE 8001

#define ERROR_DS_BAD_NAME_SYNTAX 8335

#define RPC_S_ADDRESS_ERROR 1768

#define MSSIPOTF_E_NOT_OPENTYPE 2148102162

#define EVENT_S_SOME_SUBSCRIBERS_FAILED 262656

#define RPC_E_CALL_REJECTED 2147549185

#define RPC_S_INVALID_VERS_OPTION 1756

#define ERROR_EXE_MACHINE_TYPE_MISMATCH 216

#define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND 5078

#define ERROR_IPSEC_IKE_INVALID_SIG 13875

#define DNS_ERROR_RCODE_BADTIME 9018

#define ERROR_IPSEC_IKE_RPC_DELETE 13877

#define ERROR_KEY_HAS_CHILDREN 1020

#define ERROR_PASSWORD_EXPIRED 1330

#define SEC_E_SMARTCARD_CERT_EXPIRED 2148074325

#define CONTEXT_E_ROLENOTFOUND 2147803148

#define ERROR_INVALID_PASSWORD 86

#define ERROR_INVALID_REPARSE_DATA 4392

#define SCARD_E_INVALID_HANDLE 2148532227

#define RPC_E_INVALID_OBJREF 2147549469

#define DNS_ERROR_ZONE_ALREADY_EXISTS 9609

#define ERROR_INVALID_OPLOCK_PROTOCOL 301

#define ERROR_DS_CANT_REMOVE_ATT_CACHE 8403

#define FRS_ERR_PARENT_AUTHENTICATION 8010

#define ERROR_EOM_OVERFLOW 1129

#define ERROR_SEM_IS_SET 102

#define ERROR_DS_DRA_MAIL_PROBLEM 8447

#define ERROR_INVALID_STARTING_CODESEG 188

#define DNS_ERROR_NAME_NOT_IN_ZONE 9706

#define CO_S_MACHINENAMENOTFOUND 524307

#define ERROR_ACCESS_DENIED 5

#define NTE_BAD_UID 2148073473

#define ERROR_FILE_READ_ONLY 6009

#define ERROR_SXS_XML_E_UNCLOSEDCOMMENT 14063

#define NTE_EXISTS 2148073487

#define MEM_E_INVALID_SIZE 2148007953

#define STG_E_ACCESSDENIED 2147680261

#define WSAECONNREFUSED 10061

#define XACT_E_HEURISTICDAMAGE 2147799046

#define RPC_S_INVALID_STRING_UUID 1705

#define SCARD_E_NO_SERVICE 2148532253

#define RPC_E_INVALID_DATA 2147549199

#define RPC_E_CANTCALLOUT_INASYNCCALL 2147549188

#define ERROR_IPSEC_IKE_ENCRYPT 13866

#define STG_E_DOCFILETOOLARGE 2147680529

#define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779

#define ERROR_IPSEC_IKE_MM_DELAY_DROP 13814

#define ERROR_VOLUME_NOT_SUPPORT_EFS 6014

#define ERROR_CONTROL_ID_NOT_FOUND 1421

#define SCARD_E_UNSUPPORTED_FEATURE 2148532258

#define CRYPT_E_FILERESIZED 2148081701

#define ERROR_DS_CANT_ON_NON_LEAF 8213

#define ERROR_LABEL_TOO_LONG 154

#define XACT_E_TIP_PROTOCOL_ERROR 2147799072

#define ERROR_NESTING_NOT_ALLOWED 215

#define ERROR_CLUSTER_WRONG_OS_VERSION 5899

#define ERROR_SERVER_NOT_DISABLED 1342

#define OLE_E_ADVISENOTSUPPORTED 2147745795

#define ERROR_IPSEC_IKE_AUTH_FAIL 13801

#define RPC_X_PIPE_DISCIPLINE_ERROR 1917

#define RPC_S_CALL_FAILED 1726

#define ERROR_DS_COULDNT_UPDATE_SPNS 8525

#define ERROR_INVALID_USER_BUFFER 1784

#define CO_E_ASYNC_WORK_REJECTED 2147500073

#define ERROR_DDE_FAIL 1156

#define ERROR_DS_REMOTE_CROSSREF_OP_FAILED 8601

#define DNS_WARNING_PTR_CREATE_FAILED 9715

#define SCHED_E_INVALID_TASK 2147750670

#define FACILITY_INTERNET 12

#define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT 8544

#define ERROR_DS_NCNAME_MUST_BE_NC 8357

#define ERROR_SUCCESS_REBOOT_INITIATED 1641

#define ERROR_DS_NO_CHAINING 8327

#define COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED 2148599827

#define RPC_E_NO_GOOD_SECURITY_PACKAGES 2147549466

#define MK_E_NOINVERSE 2147746284

#define XACT_S_LAST 315408

#define DATA_S_SAMEFORMATETC 262448

#define ERROR_SHUTDOWN_CLUSTER 5008

#define TRUST_E_BASIC_CONSTRAINTS 2148098073

#define ERROR_INVALID_DLL 1154

#define ERROR_DS_SINGLE_USER_MODE_FAILED 8590

#define CO_E_OBJNOTCONNECTED 2147746301

#define ERROR_DS_NAME_UNPARSEABLE 8350

#define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352

#define ERROR_DS_ATT_SCHEMA_REQ_ID 8399

#define ERROR_IPSEC_IKE_POLICY_CHANGE 13849

#define ERROR_DEVICE_NOT_CONNECTED 1167

#define ERROR_SXS_UNKNOWN_ENCODING 14013

#define ERROR_INDEX_ABSENT 1611

#define CO_E_CLASS_DISABLED 2147500071

#define ERROR_DS_SHUTTING_DOWN 8364

#define OLE_E_NOT_INPLACEACTIVE 2147745808

#define WSA_QOS_NO_RECEIVERS 11008

#define ERROR_RESOURCE_ONLINE 5019

#define ERROR_DS_DRA_ABANDON_SYNC 8462

#define CO_E_CLSREG_INCONSISTENT 2147500063

#define RPC_X_SS_CONTEXT_DAMAGED 1777

#define ERROR_SXS_DUPLICATE_CLSID 14023

#define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN 13800

#define TYPE_E_LIBNOTREGISTERED 2147647517

#define ERROR_EFS_ALG_BLOB_TOO_BIG 6013

#define TYPE_E_QUALIFIEDNAMEDISALLOWED 2147647528

#define ERROR_SHARING_VIOLATION 32

#define ERROR_NOT_QUORUM_CLASS 5025

#define CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED 2148089866

#define RPC_E_SYS_CALL_FAILED 2147549440

#define ERROR_CTX_SHADOW_DENIED 7044

#define SEC_E_MESSAGE_ALTERED 2148074255

#define XACT_E_UNABLE_TO_LOAD_DTC_PROXY 2147799080

#define ERROR_NOT_SAFEBOOT_SERVICE 1084

#define TRUST_E_NO_SIGNER_CERT 2148098050

#define DISP_E_BADCALLEE 2147614736

#define ERROR_IPSEC_IKE_MM_LIMIT 13882

#define MEM_E_INVALID_ROOT 2148007945

#define MK_E_EXCEEDEDDEADLINE 2147746273

#define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE 9651

#define ERROR_SXS_SECTION_NOT_FOUND 14000

#define CS_E_NO_CLASSSTORE 2147746152

#define ERROR_POLICY_OBJECT_NOT_FOUND 8219

#define ERROR_DS_NO_REF_DOMAIN 8575

#define ERROR_ITERATED_DATA_EXCEEDS_64k 194

#define SCARD_E_NO_DIR 2148532261

#define OSS_PDV_DLL_NOT_LINKED 2148085799

#define CO_E_CANT_REMOTE 2147500051

#define CO_E_FAILEDTOGETTOKENINFO 2147549478

#define TRUST_E_TIME_STAMP 2148098053

#define CRYPT_E_FILE_ERROR 2148081667

#define CLIENTSITE_E_FIRST 2147746192

#define ERROR_IPSEC_IKE_INVALID_HASH 13870

#define COMADMIN_E_OBJECT_DOES_NOT_EXIST 2148599817

#define CACHE_S_SOMECACHES_NOTUPDATED 262514

#define ERROR_MEDIA_NOT_AVAILABLE 4318

#define RPC_E_INVALID_IPID 2147549459

#define WSAENETRESET 10052

#define SPAPI_E_INVALID_PROPPAGE_PROVIDER 2148467236

#define TRUST_E_CERT_SIGNATURE 2148098052

#define ERROR_SERVICE_DOES_NOT_EXIST 1060

#define COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY 2148598858

#define SEC_E_NO_AUTHENTICATING_AUTHORITY 2148074257

#define PERSIST_E_SIZEINDEFINITE 2148204554

#define ERROR_CLEANER_SLOT_NOT_SET 4332

#define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND 13017

#define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE 7058

#define ERROR_SERVICE_REQUEST_TIMEOUT 1053

#define OSS_MEM_ERROR 2148085774

#define OSS_REAL_DLL_NOT_LINKED 2148085791

#define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED 8536

#define ERROR_TOO_MANY_TCBS 155

#define ERROR_GLOBAL_ONLY_HOOK 1429

#define CRYPT_E_NO_MATCH 2148081673

#define ERROR_SUBST_TO_SUBST 139

#define SCARD_E_NO_KEY_CONTAINER 2148532272

#define SPAPI_E_NO_INF 2148467210

#define MK_S_MONIKERALREADYREGISTERED 262631

#define RPC_S_DUPLICATE_ENDPOINT 1740

#define EVENT_S_FIRST 262656

#define SCHED_S_EVENT_TRIGGER 267016

#define COMADMIN_E_COREQCOMPINSTALLED 2148598837

#define RPC_S_INVALID_TIMEOUT 1709

#define XENROLL_E_KEYSPEC_SMIME_MISMATCH 2148093957

#define ERROR_NO_IMPERSONATION_TOKEN 1309

#define COMADMIN_E_OBJECTEXISTS 2148598840

#define ERROR_DS_DRA_SCHEMA_INFO_SHIP 8542

#define DNS_ERROR_RCODE_NXRRSET 9008

#define OLE_E_ENUM_NOMORE 2147745794

#define CERTSRV_E_SIGNATURE_COUNT 2148091914

#define SCHED_E_SERVICE_NOT_INSTALLED 2147750668

#define WSAEACCES 10013

#define WSA_QOS_EFLOWSPEC 11017

#define ERROR_DS_NAME_TYPE_UNKNOWN 8351

#define COMADMIN_E_APPDIRNOTFOUND 2148598815

#define ERROR_STATIC_INIT 4002

#define ERROR_INVALID_INDEX 1413

#define CONTEXT_E_ABORTED 2147803138

#define ERROR_NO_SYSTEM_RESOURCES 1450

#define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF 8589

#define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT 14075

#define STG_E_UNIMPLEMENTEDFUNCTION 2147680510

#define ERROR_BAD_DEVICE 1200

#define ERROR_INDIGENOUS_TYPE 4338

#define ERROR_DS_NO_CHECKPOINT_WITH_PDC 8551

#define ERROR_DS_EXISTS_IN_SUB_CLS 8394

#define EVENT_E_INVALID_PER_USER_SID 2147746311

#define TYPE_E_DUPLICATEID 2147649734

#define FACILITY_SECURITY 9

#define ERROR_NOT_SAME_DEVICE 17

#define XACT_E_TRANSACTIONCLOSED 2147799171

#define ERROR_FILE_OFFLINE 4350

#define ERROR_DS_INIT_FAILURE 8532

#define ERROR_TRANSFORM_NOT_SUPPORTED 2004

#define ERROR_BEGINNING_OF_MEDIA 1102

#define ERROR_SXS_XML_E_INVALID_STANDALONE 14070

#define ERROR_DS_RANGE_CONSTRAINT 8322

#define WSAEWOULDBLOCK 10035

#define ERROR_PRIVILEGE_NOT_HELD 1314

#define ERROR_NO_SCROLLBARS 1447

#define ERROR_END_OF_MEDIA 1100

#define ERROR_NETLOGON_NOT_STARTED 1792

#define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR 8591

#define ERROR_MAGAZINE_NOT_PRESENT 1163

#define FRS_ERR_SYSVOL_POPULATE_TIMEOUT 8014

#define ERROR_INVALID_EDIT_HEIGHT 1424

#define NTE_BAD_KEYSET 2148073494

#define ERROR_QUORUM_OWNER_ALIVE 5034

#define COMADMIN_E_COMPFILE_NOTINSTALLABLE 2148598825

#define ERROR_NO_MORE_ITEMS 259

#define XACT_S_OKINFORM 315396

#define DNS_ERROR_ZONE_CONFIGURATION_ERROR 9604

#define DNS_ERROR_AUTOZONE_ALREADY_EXISTS 9610

#define ERROR_SEM_USER_LIMIT 106

#define FRS_ERR_INVALID_SERVICE_PARAMETER 8017

#define STG_E_CANTSAVE 2147680515

#define RPC_X_BYTE_COUNT_TOO_SMALL 1782

#define CO_E_ERRORINAPP 2147746295

#define ENUM_S_LAST 262591

#define ERROR_SXS_XML_E_UNCLOSEDDECL 14064

#define ERROR_REGISTRY_IO_FAILED 1016

#define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164

#define ERROR_SXS_DUPLICATE_DLL_NAME 14021

#define SEC_E_DELEGATION_REQUIRED 2148074309

#define ERROR_INVALID_EVENT_COUNT 151

#define RPC_E_CLIENT_DIED 2147549192

#define REGDB_E_FIRST 2147746128

#define ERROR_ICM_NOT_ENABLED 2018

#define STG_E_PROPSETMISMATCHED 2147680496

#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION 2147750676

#define ERROR_DS_MISSING_EXPECTED_ATT 8411

#define DNS_ERROR_RCODE_BADKEY 9017

#define SCARD_E_DUPLICATE_READER 2148532251

#define CO_E_ACNOTINITIALIZED 2147549503

#define ERROR_DS_RECALCSCHEMA_FAILED 8396

#define ERROR_SXS_XML_E_MISSING_PAREN 14044

#define MSSIPOTF_E_DSIG_STRUCTURE 2148102166

#define CRYPT_E_HASH_VALUE 2148077575

#define ERROR_RESOURCE_TYPE_NOT_FOUND 1813

#define ENUM_E_LAST 2147746239

#define ERROR_INVALID_SERVICENAME 1213

#define COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM 2148598857

#define ERROR_INVALID_EA_HANDLE 278

#define ERROR_POLICY_ONLY_IN_DS 8220

#define WSAENOBUFS 10055

#define MK_E_CANTOPENFILE 2147746282

#define ERROR_MEMBERS_PRIMARY_GROUP 1374

#define ERROR_LISTBOX_ID_NOT_FOUND 1416

#define CLIPBRD_E_CANT_CLOSE 2147746260

#define ERROR_DS_FILTER_UNKNOWN 8254

#define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE 14053

#define CRYPT_E_ASN1_EXTENDED 2148086273

#define WSAECONNRESET 10054

#define ERROR_CLASS_ALREADY_EXISTS 1410

#define ERROR_CTX_WINSTATION_BUSY 7024

#define ERROR_DS_OBJ_TOO_LARGE 8312

#define XACT_E_ABORTING 2147799081

#define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD 8491

#define NTE_FAIL 2148073504

#define ERROR_DS_CANT_REM_MISSING_ATT 8324

#define ERROR_DC_NOT_FOUND 1425

#define DNS_ERROR_RCODE_REFUSED 9005

#define RPC_S_UNKNOWN_MGR_TYPE 1716

#define ERROR_IS_JOINED 134

#define NTE_FIXEDPARAMETER 2148073509

#define ERROR_DS_COMPARE_FALSE 8229

#define MK_E_FIRST 2147746272

#define ERROR_NO_LOG_SPACE 1019

#define FACILITY_WINDOWS_CE 24

#define COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET 2148599839

#define STG_E_EXTANTMARSHALLINGS 2147680520

#define OSS_REAL_CODE_NOT_LINKED 2148085792

#define ERROR_DS_NO_CHAINED_EVAL 8328

#define CO_E_BAD_SERVER_NAME 2147500052

#define CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED 2148091918

#define WSA_QOS_BAD_OBJECT 11013

#define ERROR_DS_DRA_INTERNAL_ERROR 8442

#define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER 8578

#define DRAGDROP_S_USEDEFAULTCURSORS 262402

#define CO_E_OBJISREG 2147746300

#define ERROR_DS_CANT_RETRIEVE_INSTANCE 8407

#define ERROR_CLASS_DOES_NOT_EXIST 1411

#define CERTSRV_E_BAD_REQUESTSUBJECT 2148089857

#define ERROR_DS_ADD_REPLICA_INHIBITED 8302

#define CO_E_OBJSRV_RPC_FAILURE 2148007942

#define ERROR_CTX_WINSTATION_ALREADY_EXISTS 7023

#define ERROR_PORT_UNREACHABLE 1234

#define ERROR_DS_ROOT_REQUIRES_CLASS_TOP 8432

#define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN 8515

#define FACILITY_BACKGROUNDCOPY 32

#define ERROR_INVALID_ACCOUNT_NAME 1315

#define ERROR_SERVICE_NOT_ACTIVE 1062

#define RPC_X_PIPE_CLOSED 1916

#define WSAEADDRNOTAVAIL 10049

#define XACT_E_HEURISTICCOMMIT 2147799045

#define ERROR_DS_EXISTS_IN_RDNATTID 8598

#define CERTSRV_E_UNSUPPORTED_CERT_TYPE 2148091904

#define SPAPI_E_DI_NOFILECOPY 2148467215

#define COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED 2148598917

#define ERROR_DS_CANT_ADD_SYSTEM_ONLY 8358

#define ERROR_CONNECTION_ACTIVE 1230

#define OSS_COMPARATOR_DLL_NOT_LINKED 2148085796

#define COMADMIN_E_ALREADYINSTALLED 2148598788

#define ERROR_NOT_A_REPARSE_POINT 4390

#define ERROR_REMOTE_STORAGE_NOT_ACTIVE 4351

#define SPAPI_E_DEVINST_ALREADY_EXISTS 2148467207

#define RPC_S_NO_INTERFACES 1817

#define COMADMIN_E_AUTHENTICATIONLEVEL 2148598803

#define ERROR_DS_OBJECT_BEING_REMOVED 8339

#define ERROR_NO_SUCH_PRIVILEGE 1313

#define DNS_ERROR_RCODE_LAST 9018

#define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER 8559

#define NTE_BAD_VER 2148073479

#define NTE_PROV_DLL_NOT_FOUND 2148073502

#define CERTSRV_E_NO_CERT_TYPE 2148091905

#define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP 8498

#define ERROR_CTX_MODEM_RESPONSE_TIMEOUT 7012

#define ERROR_DS_BACKLINK_WITHOUT_LINK 8482

#define CONTEXT_E_NOJIT 2147803174

#define ERROR_IPSEC_IKE_FAILQUERYSSP 13854

#define ERROR_IPSEC_IKE_POLICY_MATCH 13868

#define COMADMIN_E_NOTDELETEABLE 2148598827

#define TYPE_E_WRONGTYPEKIND 2147647530

#define ERROR_CTX_MODEM_RESPONSE_ERROR 7011

#define ERROR_DS_DST_NC_MISMATCH 8486

#define ERROR_DS_INVALID_LDAP_DISPLAY_NAME 8479

#define STG_S_RETRYNOW 197122

#define ERROR_CANT_ACCESS_FILE 1920

#define XACT_S_SINGLEPHASE 315401

#define ERROR_NOT_QUORUM_CAPABLE 5021

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT 2148599834

#define ERROR_INVALID_SERVICE_ACCOUNT 1057

#define ERROR_CLUSTER_NETWORK_NOT_FOUND 5045

#define ERROR_IPSEC_MM_FILTER_PENDING_DELETION 13018

#define ERROR_DS_DRA_NOT_SUPPORTED 8454

#define ERROR_REC_NON_EXISTENT 4005

#define ERROR_DS_OPERATIONS_ERROR 8224

#define ERROR_CLUSTERLOG_CORRUPT 5029

#define RPC_S_ZERO_DIVIDE 1767

#define DNS_ERROR_RCODE_BADSIG 9016

#define XACT_E_NOTSUPPORTED 2147799055

#define CONTEXT_E_OLDREF 2147803143

#define SEC_E_CANNOT_INSTALL 2148074247

#define ERROR_DS_DUP_MSDS_INTID 8597

#define CRYPT_E_NO_REVOCATION_DLL 2148081681

#define DISP_E_BUFFERTOOSMALL 2147614739

#define ERROR_SXS_DUPLICATE_PROGID 14026

#define ERROR_DS_MISSING_SUPREF 8406

#define CRYPT_E_INVALID_X500_STRING 2148081699

#define DNS_ERROR_INVALID_DATAFILE_NAME 9652

#define COMADMIN_E_NOTINREGISTRY 2148598846

#define ERROR_INVALID_PIXEL_FORMAT 2000

#define DNS_ERROR_NO_CREATE_CACHE_DATA 9713

#define STG_E_INVALIDFLAG 2147680511

#define ERROR_INFLOOP_IN_RELOC_CHAIN 202

#define ERROR_CTX_WINSTATION_ACCESS_DENIED 7045

#define EVENT_E_FIRST 2147746304

#define ERROR_WMI_ALREADY_ENABLED 4206

#define SCARD_E_NO_SUCH_CERTIFICATE 2148532268

#define ERROR_CANTWRITE 1013

#define OSS_BAD_ENCRULES 2148085782

#define ERROR_PRINTER_DRIVER_IN_USE 3001

#define XACT_S_READONLY 315394

#define RPC_S_NO_BINDINGS 1718

#define CONVERT10_S_LAST 262607

#define STG_E_CSS_AUTHENTICATION_FAILURE 2147681030

#define CO_E_INIT_SCM_MUTEX_EXISTS 2147500046

#define E_ACCESSDENIED 2147942405

#define COMADMIN_E_CAT_DUPLICATE_PARTITION_SET_NAME 2148600064

#define RPC_E_FAULT 2147549444

#define RPC_E_ATTEMPTED_MULTITHREAD 2147549442

#define ERROR_CANT_ACCESS_DOMAIN_INFO 1351

#define ERROR_INVALID_EVENTNAME 1211

#define ERROR_SERVICE_ALREADY_RUNNING 1056

#define ERROR_IPSEC_IKE_TIMED_OUT 13805

#define ERROR_WINDOW_OF_OTHER_THREAD 1408

#define ERROR_TOO_MANY_SIDS 1389

#define ERROR_DS_DRA_SCHEMA_MISMATCH 8418

#define TYPE_E_AMBIGUOUSNAME 2147647532

#define MSSIPOTF_E_BAD_OFFSET_TABLE 2148102149

#define DIGSIG_E_ENCODE 2148204549

#define WSAENOPROTOOPT 10042

#define RPC_S_ENTRY_TYPE_MISMATCH 1922

#define ERROR_CTX_CONSOLE_CONNECT 7042

#define ERROR_INVALID_GW_COMMAND 1443

#define STG_E_MEDIUMFULL 2147680368

#define ERROR_REPARSE_TAG_INVALID 4393

#define ERROR_KM_DRIVER_BLOCKED 1930

#define ERROR_FILENAME_EXCED_RANGE 206

#define ERROR_DS_ILLEGAL_SUPERIOR 8345

#define CONVERT10_E_LAST 2147746255

#define ERROR_PIPE_CONNECTED 535

#define ERROR_INVALID_HOOK_FILTER 1426

#define ERROR_IPSEC_IKE_PROCESS_ERR_SIG 13838

#define SEC_E_NOT_SUPPORTED 2148074242

#define ERROR_READ_FAULT 30

#define ERROR_DS_NO_TREE_DELETE_ABOVE_NC 8501

#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808

#define ERROR_INVALID_PRINT_MONITOR 3007

#define ERROR_WAIT_NO_CHILDREN 128

#define CO_E_NOSYNCHRONIZATION 2147803182

#define SEC_E_UNSUPPORTED_FUNCTION 2148074242

#define WSAETIMEDOUT 10060

#define CERT_E_PATHLENCONST 2148204804

#define SEC_E_STRONG_CRYPTO_NOT_SUPPORTED 2148074298

#define ERROR_IPSEC_MM_AUTH_NOT_FOUND 13011

#define ERROR_SEEK 25

#define TYPE_E_UNSUPFORMAT 2147647513

#define ERROR_SXS_UNKNOWN_ENCODING_GROUP 14012

#define STG_E_NOTCURRENT 2147680513

#define CO_E_WRONG_SERVER_IDENTITY 2147500053

#define WSAEALREADY 10037

#define RPC_S_NOT_RPC_ERROR 1823

#define CRYPT_E_ASN1_CHOICE 2148086028

#define SEC_E_TIME_SKEW 2148074276

#define ERROR_USER_MAPPED_FILE 1224

#define ERROR_INVALID_SEPARATOR_FILE 1799

#define CS_E_INTERNAL_ERROR 2147746159

#define ERROR_DS_SEMANTIC_ATT_TEST 8383

#define CO_E_RUNAS_SYNTAX 2147500055

#define DIGSIG_E_CRYPTO 2148204552

#define ERROR_INVALID_MEDIA_POOL 4302

#define ERROR_IPSEC_IKE_FAILSSPINIT 13853

#define XACT_E_ABORTED 2147799065

#define ERROR_IPSEC_MM_POLICY_EXISTS 13003

#define ERROR_IPSEC_IKE_INVALID_AUTH_ALG 13874

#define ERROR_INVALID_MESSAGE 1002

#define ERROR_DS_USER_BUFFER_TO_SMALL 8309

#define ERROR_PRINTER_NOT_FOUND 3012

#define ERROR_CANTREAD 1012

#define FRS_ERR_CHILD_TO_PARENT_COMM 8011

#define ERROR_DS_ROOT_MUST_BE_NC 8301

#define FACILITY_MEDIASERVER 13

#define ERROR_DS_CANT_DELETE_DSA_OBJ 8340

#define CRYPT_E_UNEXPECTED_ENCODING 2148077573

#define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE 5890

#define ERROR_SERVICE_DEPENDENCY_DELETED 1075

#define ERROR_DS_CONFIG_PARAM_MISSING 8427

#define CERT_E_REVOKED 2148204812

#define VIEW_E_DRAW 2147746112

#define STG_E_FILEALREADYEXISTS 2147680336

#define MK_E_LAST 2147746287

#define CERTSRV_E_ALIGNMENT_FAULT 2148089872

#define WSA_QOS_GENERIC_ERROR 11015

#define RPC_S_INVALID_AUTH_IDENTITY 1749

#define WSAHOST_NOT_FOUND 11001

#define MK_S_ME 262628

#define ERROR_FILE_CORRUPT 1392

#define ERROR_DS_DSA_MUST_BE_INT_MASTER 8342

#define ERROR_PATH_BUSY 148

#define ERROR_UNKNOWN_PRINTER_DRIVER 1797

#define ERROR_METAFILE_NOT_SUPPORTED 2003

#define NTE_PROV_TYPE_ENTRY_BAD 2148073496

#define ERROR_FLOPPY_WRONG_CYLINDER 1123

#define ERROR_TOO_MANY_CMDS 56

#define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID 14076

#define ERROR_SOME_NOT_MAPPED 1301

#define EPT_S_NOT_REGISTERED 1753

#define ERROR_DEVICE_DOOR_OPEN 1166

#define DNS_ERROR_RCODE_SERVER_FAILURE 9002

#define ERROR_MEDIA_CHANGED 1110

#define ERROR_SXS_XML_E_BADXMLDECL 14056

#define ERROR_FILE_NOT_FOUND 2

#define ERROR_DS_ATT_VAL_ALREADY_EXISTS 8323

#define NTE_TOKEN_KEYSET_STORAGE_FULL 2148073507

#define ERROR_NO_RECOVERY_PROGRAM 1082

#define SEC_E_MULTIPLE_ACCOUNTS 2148074311

#define ERROR_IPSEC_MM_AUTH_EXISTS 13010

#define ERROR_SXS_UNTRANSLATABLE_HRESULT 14077

#define CO_E_FAILEDTOIMPERSONATE 2147549475

#define XACT_E_TIP_PULL_FAILED 2147799073

#define ERROR_GROUP_NOT_AVAILABLE 5012

#define ERROR_INVALID_OPERATION_ON_QUORUM 5068

#define ERROR_NO_LOGON_SERVERS 1311

#define ERROR_DS_CANT_DEREF_ALIAS 8337

#define WSAEOPNOTSUPP 10045

#define DV_E_DVASPECT 2147745899

#define ERROR_PATCH_PACKAGE_OPEN_FAILED 1635

#define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079

#define CLASSFACTORY_S_FIRST 262416

#define ERROR_NO_SUCH_GROUP 1319

#define XACT_E_CONNECTION_DOWN 2147799068

#define WSAVERNOTSUPPORTED 10092

#define ERROR_INVALID_SHOWWIN_COMMAND 1449

#define SCARD_E_NOT_TRANSACTED 2148532246

#define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC 8487

#define ERROR_OBJECT_IN_LIST 5011

#define ERROR_DS_NO_ATTRIBUTE_OR_VALUE 8202

#define FACILITY_CONTROL 10

#define CONVERT10_E_STG_DIB_TO_BITMAP 2147746246

#define ERROR_INVALID_GROUP_ATTRIBUTES 1345

#define ERROR_DS_DATABASE_ERROR 8409

#define XACT_E_TIP_DISABLED 2147799075

#define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ 8560

#define ERROR_CTX_LOGON_DISABLED 7037

#define ERROR_NO_TOKEN 1008

#define CRYPT_E_BAD_LEN 2148081665

#define ERROR_CALL_NOT_IMPLEMENTED 120

#define XACT_E_TIP_CONNECT_FAILED 2147799071

#define OLEOBJ_S_INVALIDHWND 262530

#define SPAPI_E_INVALID_FILTER_DRIVER 2148467244

#define OLE_S_MAC_CLIPFORMAT 262146

#define ERROR_NO_MATCH 1169

#define RPC_E_REMOTE_DISABLED 2147549468

#define SCARD_E_READER_UNSUPPORTED 2148532250

#define CRYPT_E_EXISTS 2148081669

#define DISP_E_MEMBERNOTFOUND 2147614723

#define ENUM_S_FIRST 262576

#define NTE_PROVIDER_DLL_FAIL 2148073501

#define DNS_ERROR_ZONE_BASE 9600

#define ERROR_IPSEC_IKE_NO_PEER_CERT 13847

#define TYPE_E_TYPEMISMATCH 2147650720

#define CONTEXT_E_TMNOTAVAILABLE 2147803151

#define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774

#define ERROR_INVALID_SERVICE_LOCK 1071

#define CRYPT_E_ASN1_BADARGS 2148086025

#define ERROR_PATCH_TARGET_NOT_FOUND 1642

#define SPAPI_E_INCORRECTLY_COPIED_INF 2148467255

#define ERROR_ACCOUNT_DISABLED 1331

#define SPAPI_E_CANT_LOAD_CLASS_ICON 2148467212

#define ERROR_INVALID_SHARENAME 1215

#define SEC_E_CRYPTO_SYSTEM_INVALID 2148074295

#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201

#define ERROR_DS_DRA_BAD_INSTANCE_TYPE 8445

#define ERROR_SXS_XML_E_COMMENTSYNTAX 14031

#define REGDB_E_LAST 2147746143

#define EVENT_E_MISSING_EVENTCLASS 2147746314

#define ERROR_DEPENDENCY_NOT_FOUND 5002

#define CRYPT_E_ASN1_UTF8 2148086030

#define ERROR_DS_STRING_SD_CONVERSION_FAILED 8522

#define EPT_S_INVALID_ENTRY 1751

#define RPC_S_PROTSEQ_NOT_FOUND 1744

#define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN 13881

#define CO_E_APPNOTFOUND 2147746293

#define ERROR_DS_DRS_EXTENSIONS_CHANGED 8594

#define RPC_S_UUID_LOCAL_ONLY 1824

#define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE 5063

#define OSS_BAD_TIME 2148085772

#define ERROR_DS_COMPARE_TRUE 8230

#define MK_S_US 262630

#define ERROR_SEM_TIMEOUT 121

#define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR 13804

#define ERROR_DS_TREE_DELETE_NOT_FINISHED 8397

#define NTE_SIGNATURE_FILE_BAD 2148073500

#define ERROR_NO_DATA 232

#define CS_E_OBJECT_NOTFOUND 2147746153

#define ERROR_NO_BROWSER_SERVERS_FOUND 6118

#define ERROR_SERVICE_DATABASE_LOCKED 1055

#define S_FALSE 1

#define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION 8236

#define EVENT_E_PER_USER_SID_NOT_LOGGED_ON 2147746320

#define ERROR_FILE_ENCRYPTED 6002

#define WSAELOOP 10062

#define DNS_ERROR_SECONDARY_DATA 9712

#define SPAPI_E_DEVINFO_DATA_LOCKED 2148467219

#define ERROR_DS_IS_LEAF 8243

#define ERROR_SXS_FILE_HASH_MISMATCH 14028

#define STG_S_CANNOTCONSOLIDATE 197126

#define ERROR_LOCK_VIOLATION 33

#define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030

#define ERROR_CLUSTER_NODE_NOT_PAUSED 5058

#define ERROR_DS_DRA_SOURCE_DISABLED 8456

#define ERROR_SXS_XML_E_UNCLOSEDENDTAG 14061

#define ERROR_IPSEC_IKE_SA_REAPED 13808

#define ERROR_DS_DRA_SOURCE_REINSTALLED 8459

#define COMADMIN_E_COMP_MOVE_DEST 2148599837

#define ERROR_DS_INCOMPATIBLE_VERSION 8567

#define ERROR_UNRECOGNIZED_VOLUME 1005

#define DNS_ERROR_TRY_AGAIN_LATER 9554

#define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP 13810

#define EVENT_E_COMPLUS_NOT_INSTALLED 2147746316

#define ERROR_CANT_EVICT_ACTIVE_NODE 5009

#define ERROR_TIMEOUT 1460

#define ERROR_DS_NAMING_MASTER_GC 8523

#define ERROR_SXS_DUPLICATE_IID 14024

#define ERROR_INVALID_WORKSTATION 1329

#define WSAEMFILE 10024

#define ERROR_SXS_XML_E_XMLDECLSYNTAX 14035

#define CRYPT_E_INVALID_INDEX 2148077576

#define FRS_ERR_PARENT_TO_CHILD_COMM 8012

#define RPC_S_ALREADY_REGISTERED 1711

#define TYPE_E_INVALIDSTATE 2147647529

#define DNS_ERROR_UNKNOWN_RECORD_TYPE 9704

#define RPC_E_RETRY 2147549449

#define WSAEINTR 10004

#define ERROR_UNKNOWN_COMPONENT 1607

#define CACHE_E_LAST 2147746175

#define DNS_ERROR_RECORD_DOES_NOT_EXIST 9701

#define ERROR_INVALID_PRINTER_COMMAND 1803

#define DIGSIG_E_DECODE 2148204550

#define ERROR_DS_DRA_EXTN_CONNECTION_FAILED 8466

#define CERT_E_WRONG_USAGE 2148204816

#define CERTSRV_E_ROLECONFLICT 2148089864

#define ERROR_CLUSTER_NETWORK_EXISTS 5044

#define OLE_S_LAST 262399

#define CLIPBRD_E_FIRST 2147746256

#define CO_E_FAILEDTOCREATEFILE 2147549495

#define REGDB_E_READREGDB 2147746128

#define REGDB_E_CLASSNOTREG 2147746132

#define ERROR_NO_SUCH_ALIAS 1376

#define ERROR_DS_AFFECTS_MULTIPLE_DSAS 8249

#define DNS_ERROR_RESPONSE_CODES_BASE 9000

#define WSA_QOS_EFILTERSTYLE 11019

#define SCARD_E_NOT_READY 2148532240

#define SCARD_F_INTERNAL_ERROR 2148532225

#define ERROR_CTX_SERVICE_NAME_COLLISION 7006

#define MSSIPOTF_E_OUTOFMEMRANGE 2148102145

#define ERROR_SXS_XML_E_BADXMLCASE 14069

#define CRYPT_E_NO_VERIFY_USAGE_CHECK 2148081704

#define CRYPT_E_NOT_IN_REVOCATION_DATABASE 2148081684

#define DNS_ERROR_NO_TCPIP 9851

#define MSSIPOTF_E_TABLE_TAGORDER 2148102150

#define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081

#define ERROR_HOST_DOWN 1256

#define ERROR_NO_NET_OR_BAD_PATH 1203

#define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758

#define ERROR_SXS_PROTECTION_RECOVERY_FAILED 14074

#define ERROR_POSSIBLE_DEADLOCK 1131

#define CRYPT_E_ASN1_INTERNAL 2148086017

#define ERROR_DS_DUP_LINK_ID 8468

#define ERROR_FILE_EXISTS 80

#define ERROR_DS_UNWILLING_TO_PERFORM 8245

#define OSS_BAD_PTR 2148085771

#define NTE_BAD_FLAGS 2148073481

#define ERROR_WRITE_PROTECT 19

#define ERROR_IPSEC_QM_POLICY_PENDING_DELETION 13023

#define TYPE_E_BADMODULEKIND 2147649725

#define ERROR_MORE_DATA 234

#define SCARD_E_NO_FILE 2148532262

#define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE 14018

#define RPC_X_SS_IN_NULL_CONTEXT 1775

#define ERROR_DRIVE_LOCKED 108

#define COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED 2148599831

#define DV_E_STGMEDIUM 2147745894

#define CONVERT10_S_NO_PRESENTATION 262592

#define ERROR_DS_CONFIDENTIALITY_REQUIRED 8237

#define RPC_S_GROUP_MEMBER_NOT_FOUND 1898

#define ERROR_UNSUPPORTED_TYPE 1630

#define ERROR_INVALID_SID 1337

#define ERROR_DISK_RECALIBRATE_FAILED 1126

#define ERROR_BAD_REM_ADAP 60

#define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED 8426

#define RPC_S_UUID_NO_ADDRESS 1739

#define CRYPT_E_VERIFY_USAGE_OFFLINE 2148081705

#define NTE_PROV_TYPE_NOT_DEF 2148073495

#define CRYPT_E_MSG_ERROR 2148077569

#define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION 8533

#define SEC_E_NO_IMPERSONATION 2148074251

#define SCARD_E_INVALID_CHV 2148532266

#define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED 13883

#define WSA_QOS_EPSFLOWSPEC 11027

#define ERROR_DS_FOREST_VERSION_TOO_LOW 8565

#define ERROR_INVALID_DATATYPE 1804

#define ERROR_CHILD_WINDOW_MENU 1436

#define ERROR_CORE_RESOURCE 5026

#define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS 13008

#define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750

#define SCARD_W_CARD_NOT_AUTHENTICATED 2148532335

#define CERT_E_INVALID_POLICY 2148204819

#define NTE_BAD_PROV_TYPE 2148073492

#define ERROR_NO_SITENAME 1919

#define ERROR_DS_RIDMGR_INIT_ERROR 8211

#define TRUST_E_FAIL 2148204811

#define ERROR_INVALID_FLAGS 1004

#define RPC_E_CLIENT_CANTUNMARSHAL_DATA 2147549196

#define COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE 2148599298

#define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 8203

#define CERT_E_VALIDITYPERIODNESTING 2148204802

#define DNS_ERROR_ZONE_LOCKED 9607

#define ERROR_SET_NOT_FOUND 1170

#define CACHE_E_FIRST 2147746160

#define ERROR_SXS_XML_E_MULTIPLEROOTS 14054

#define ERROR_NO_SUPPORTING_DRIVES 4339

#define ERROR_DS_SERVER_DOWN 8250

#define CERTSRV_E_NO_CAADMIN_DEFINED 2148089869

#define SEC_E_SECPKG_NOT_FOUND 2148074245

#define DNS_ERROR_NO_DNS_SERVERS 9852

#define SCARD_S_SUCCESS 0

#define DNS_ERROR_INVALID_PROPERTY 9553

#define ERROR_DS_DST_DOMAIN_NOT_NATIVE 8496

#define ERROR_SERIAL_NO_DEVICE 1118

#define DISP_E_NOTACOLLECTION 2147614737

#define ERROR_SERVICE_DISABLED 1058

#define ERROR_INVALID_SIGNAL_NUMBER 209

#define COMADMIN_E_INVALIDUSERIDS 2148598800

#define CO_E_CANCEL_DISABLED 2147549504

#define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122

#define ERROR_CTX_SHADOW_NOT_RUNNING 7057

#define ERROR_DS_CLIENT_LOOP 8259

#define REGDB_E_BADTHREADINGMODEL 2147746134

#define RPC_S_NO_PROTSEQS 1719

#define CRYPT_E_ASN1_BADPDU 2148086024

#define NTE_BAD_ALGID 2148073480

#define XACT_E_UNKNOWNRMGRID 2147799056

#define MK_E_SYNTAX 2147746276

#define ERROR_REQUEST_REFUSED 4320

#define ERROR_LOCAL_USER_SESSION_KEY 1303

#define ERROR_CLUSTER_NETINTERFACE_EXISTS 5046

#define COMADMIN_E_CANNOT_ALIAS_EVENTCLASS 2148599840

#define MSSIPOTF_E_BAD_MAGICNUMBER 2148102148

#define CERTSRV_E_NO_DB_SESSIONS 2148089871

#define SEC_I_NO_LSA_CONTEXT 590627

#define COMADMIN_E_CAT_UNACCEPTABLEBITNESS 2148598915

#define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY 13879

#define FRS_ERR_SYSVOL_DEMOTE 8016

#define ERROR_DS_MUST_BE_RUN_ON_DST_DC 8558

#define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS 9606

#define CO_E_INIT_ONLY_SINGLE_THREADED 2147500050

#define ERROR_BADKEY 1010

#define ERROR_INVALID_STACKSEG 189

#define ERROR_CSCSHARE_OFFLINE 1262

#define COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET 2148599830

#define TYPE_E_DLLFUNCTIONNOTFOUND 2147647535

#define XACT_E_HEURISTICABORT 2147799044

#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174

#define OLE_E_CANT_GETMONIKER 2147745801

#define ERROR_DS_OBJ_NOT_FOUND 8333

#define ERROR_DISK_CHANGE 107

#define ERROR_SEM_NOT_FOUND 187

#define ERROR_THREAD_1_INACTIVE 210

#define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED 8552

#define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC 8553

#define CS_E_CLASS_NOTFOUND 2147746150

#define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG 13873

#define COMADMIN_E_SESSION 2148598828

#define DNS_ERROR_GENERAL_API_BASE 9550

#define ERROR_UNEXP_NET_ERR 59

#define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 8205

#define RPC_E_NO_CONTEXT 2147549470

#define ERROR_RESMON_ONLINE_FAILED 5018

#define RPC_S_INVALID_BINDING 1702

#define ERROR_DS_CONTROL_NOT_FOUND 8258

#define ERROR_DS_ENCODING_ERROR 8252

#define ERROR_OBJECT_ALREADY_EXISTS 5010

#define ERROR_GROUP_EXISTS 1318

#define COMADMIN_E_BADPATH 2148598794

#define SCARD_E_NO_MEMORY 2148532230

#define COMADMIN_E_COMPFILE_CLASSNOTAVAIL 2148598823

#define RPC_S_CANNOT_SUPPORT 1764

#define DNS_ERROR_ZONE_IS_SHUTDOWN 9621

#define ERROR_CLUSTER_INVALID_NODE 5039

#define ERROR_DATABASE_DOES_NOT_EXIST 1065

#define ERROR_BAD_EXE_FORMAT 193

#define ERROR_IPSEC_IKE_INVALID_CERT_TYPE 13819

#define EPT_S_CANT_PERFORM_OP 1752

#define FRS_ERR_INSUFFICIENT_PRIV 8007

#define ERROR_DS_BUSY 8206

#define SCARD_F_UNKNOWN_ERROR 2148532244

#define CO_E_TRACKER_CONFIG 2147500080

#define RPC_E_WRONG_THREAD 2147549454

#define ERROR_CTX_CONSOLE_DISCONNECT 7041

#define ERROR_CLUSTER_NODE_ALREADY_DOWN 5062

#define CERTSRV_E_BAD_RENEWAL_SUBJECT 2148091910

#define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED 5076

#define ERROR_NO_SIGNAL_SENT 205

#define ERROR_DS_NO_CROSSREF_FOR_NC 8363

#define WSAENETDOWN 10050

#define CO_E_INIT_CLASS_CACHE 2147500041

#define RPC_S_INVALID_ASYNC_HANDLE 1914

#define ERROR_DS_DECODING_ERROR 8253

#define ERROR_INVALID_HANDLE 6

#define SCHED_E_TASK_NOT_READY 2147750666

#define MSSIPOTF_E_TABLE_PADBYTES 2148102154

#define ERROR_SXS_XML_E_UNEXPECTEDENDTAG 14051

#define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130

#define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS 8555

#define ERROR_ALIAS_EXISTS 1379

#define ERROR_TOO_MANY_CONTEXT_IDS 1384

#define ERROR_JOIN_TO_SUBST 140

#define ERROR_WMI_INVALID_REGINFO 4211

#define CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED 2148091907

#define DNS_ERROR_DP_ALREADY_ENLISTED 9904

#define WSANOTINITIALISED 10093

#define ERROR_IPSEC_IKE_KERBEROS_ERROR 13827

#define RPC_S_BINDING_INCOMPLETE 1819

#define ERROR_MAPPED_ALIGNMENT 1132

#define ERROR_EXCEPTION_IN_SERVICE 1064

#define MSSIPOTF_E_FILE 2148102163

#define CO_E_FAILEDTOGETWINDIR 2147549492

#define WSABASEERR 10000

#define CO_S_NOTALLINTERFACES 524306

#define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT 14002

#define ERROR_IPSEC_IKE_SRVACQFAIL 13855

#define ERROR_UNKNOWN_PRODUCT 1605

#define ERROR_CANT_RESOLVE_FILENAME 1921

#define ERROR_EFS_VERSION_NOT_SUPPORT 6016

#define OLE_E_NOTRUNNING 2147745797

#define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND 13015

#define OLE_E_NOSTORAGE 2147745810

#define WSA_QOS_EUNKOWNPSOBJ 11024

#define ERROR_ILL_FORMED_PASSWORD 1324

#define DNS_ERROR_INVALID_ZONE_TYPE 9611

#define COMADMIN_E_MIG_SCHEMANOTFOUND 2148598913

#define ERROR_MEDIUM_NOT_ACCESSIBLE 4323

#define DRAGDROP_S_DROP 262400

#define COMADMIN_E_CLSIDORIIDMISMATCH 2148598808

#define ERROR_LAST_ADMIN 1322

#define ERROR_WMI_DP_FAILED 4209

#define TYPE_E_SIZETOOBIG 2147649733

#define OLE_E_CLASSDIFF 2147745800

#define SCARD_E_INVALID_VALUE 2148532241

#define ERROR_SINGLE_INSTANCE_APP 1152

#define ERROR_DS_SYNTAX_MISMATCH 8384

#define ERROR_IPSEC_IKE_NO_PUBLIC_KEY 13828

#define SCARD_E_READER_UNAVAILABLE 2148532247

#define ERROR_SXS_XML_E_UNEXPECTEDEOF 14058

#define ERROR_SEEK_ON_DEVICE 132

#define ERROR_TOO_MANY_LINKS 1142

#define OLE_E_NOCACHE 2147745798

#define ERROR_FLOPPY_UNKNOWN_ERROR 1124

#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB 2147746243

#define DRAGDROP_E_INVALIDHWND 2147746050

#define CS_E_OBJECT_ALREADY_EXISTS 2147746154

#define DNS_ERROR_NEED_SECONDARY_ADDRESSES 9614

#define WSASYSNOTREADY 10091

#define MK_E_ENUMERATION_FAILED 2147746287

#define RPC_S_PROTOCOL_ERROR 1728

#define ERROR_HOST_NODE_NOT_GROUP_OWNER 5016

#define ERROR_CLUSTER_NODE_EXISTS 5040

#define ERROR_NOT_SUBSTED 137

#define FACILITY_COMPLUS 17

#define WSAEPROVIDERFAILEDINIT 10106

#define SPAPI_E_ERROR_NOT_INSTALLED 2148470784

#define ERROR_DS_BAD_INSTANCE_TYPE 8313

#define ERROR_CTX_LICENSE_NOT_AVAILABLE 7054

#define ERROR_DISK_OPERATION_FAILED 1127

#define DNS_ERROR_FILE_WRITEBACK_FAILED 9654

#define SCARD_E_INSUFFICIENT_BUFFER 2148532232

#define ERROR_DS_NO_DELETED_NAME 8355

#define STG_E_CSS_REGION_MISMATCH 2147681034

#define MK_E_NOPREFIX 2147746286

#define OLEOBJ_S_CANNOT_DOVERB_NOW 262529

#define CO_E_MALFORMED_SPN 2147500083

#define STG_E_INVALIDNAME 2147680508

#define ERROR_NOT_REGISTRY_FILE 1017

#define ERROR_DS_CANT_MOD_PRIMARYGROUPID 8506

#define XACT_E_NOASYNC 2147799049

#define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH 5895

#define ERROR_NOT_CONTAINER 1207

#define ERROR_SXS_XML_E_MISSINGSEMICOLON 14039

#define ERROR_HANDLE_DISK_FULL 39

#define DNS_ERROR_RECORD_TIMED_OUT 9705

#define ERROR_NO_SUCH_DOMAIN 1355

#define ERROR_DATATYPE_MISMATCH 1629

#define CO_E_DBERROR 2147803179

#define SPAPI_E_DEVICE_INTERFACE_ACTIVE 2148467227

#define RPC_S_UNKNOWN_IF 1717

#define WSATYPE_NOT_FOUND 10109

#define OSS_NEGATIVE_UINTEGER 2148085762

#define ERROR_MR_MID_NOT_FOUND 317

#define RPC_S_CALL_FAILED_DNE 1727

#define ERROR_DS_CANT_REM_MISSING_ATT_VAL 8325

#define STG_E_INVALIDHANDLE 2147680262

#define ERROR_IS_JOIN_TARGET 133

#define MARSHAL_S_LAST 262447

#define ERROR_SXS_XML_E_EXPECTINGTAGEND 14038

#define CO_E_OBJNOTREG 2147746299

#define ERROR_OPLOCK_NOT_GRANTED 300

#define ERROR_RING2_STACK_IN_USE 207

#define SPAPI_E_NON_WINDOWS_DRIVER 2148467246

#define WSA_QOS_POLICY_FAILURE 11011

#define ERROR_NETWORK_NOT_AVAILABLE 5035

#define ERROR_JOURNAL_DELETE_IN_PROGRESS 1178

#define OSS_UNAVAIL_ENCRULES 2148085783

#define SCHED_E_SERVICE_NOT_RUNNING 2147750677

#define CO_E_ACESINWRONGORDER 2147549498

#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435

#define ERROR_MEDIA_OFFLINE 4304

#define OSS_NULL_TBL 2148085780

#define ERROR_BAD_COMMAND 22

#define ERROR_IPSEC_IKE_PROCESS_ERR_ID 13834

#define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST 8535

#define ERROR_NETWORK_UNREACHABLE 1231

#define ERROR_UNKNOWN_REVISION 1305

#define FACILITY_NT_BIT 268435456

#define ERROR_DS_DRA_SHUTDOWN 8463

#define COMADMIN_E_PROPERTYSAVEFAILED 2148598839

#define ERROR_RESOURCE_NOT_AVAILABLE 5006

#define SEC_E_ISSUING_CA_UNTRUSTED 2148074322

#define ERROR_DS_DRA_PREEMPTED 8461

#define ERROR_RING2SEG_MUST_BE_MOVABLE 200

#define WSAECONNABORTED 10053

#define SEC_E_BAD_PKGID 2148074262

#define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME 5900

#define ERROR_EA_FILE_CORRUPT 276

#define ERROR_DS_EXISTS_IN_MUST_HAVE 8385

#define ERROR_INSTALL_PACKAGE_INVALID 1620

#define CRYPT_E_ASN1_LARGE 2148086020

#define ERROR_INVALID_COMPUTERNAME 1210

#define ERROR_CONNECTION_REFUSED 1225

#define ERROR_BAD_USERNAME 2202

#define WSAEINVALIDPROCTABLE 10104

#define EVENT_E_INTERNALERROR 2147746310

#define SCARD_E_UNEXPECTED 2148532255

#define XACT_S_ASYNC 315392

#define ERROR_DS_INVALID_NAME_FOR_SPN 8554

#define DNS_ERROR_RCODE_NAME_ERROR 9003

#define ERROR_INVALID_DOMAIN_ROLE 1354

#define MSSIPOTF_E_PCONST_CHECK 2148102167

#define FACILITY_SCARD 16

#define ERROR_INVALID_ORDINAL 182

#define DNS_ERROR_RECORD_ALREADY_EXISTS 9711

#define ERROR_IPSEC_IKE_CRL_FAILED 13817

#define SCHED_S_TASK_NOT_SCHEDULED 267013

#define SEC_E_KDC_UNKNOWN_ETYPE 2148074306

#define ERROR_NOT_CONNECTED 2250

#define DNS_ERROR_CNAME_COLLISION 9709

#define ERROR_CTX_MODEM_RESPONSE_BUSY 7015

#define RPC_E_CONNECTION_TERMINATED 2147549190

#define ERROR_REM_NOT_LIST 51

#define CRYPT_E_ASN1_EOD 2148086018

#define ERROR_BAD_ARGUMENTS 160

#define ERROR_INVALID_HANDLE_STATE 1609

#define SCARD_E_CANCELLED 2148532226

#define E_NOTIMPL 2147500033

#define NTE_NO_KEY 2148073485

#define FACILITY_SETUPAPI 15

#define WSA_QOS_TRAFFIC_CTRL_ERROR 11014

#define CERT_E_CN_NO_MATCH 2148204815

#define ERROR_JOURNAL_ENTRY_DELETED 1181

#define WSAEINPROGRESS 10036

#define SEC_I_RENEGOTIATE 590625

#define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX 8400

#define ERROR_NOT_SUPPORTED 50

#define ERROR_CLASS_HAS_WINDOWS 1412

#define ERROR_IPSEC_TUNNEL_FILTER_EXISTS 13016

#define CLIPBRD_E_BAD_DATA 2147746259

#define WSAEREFUSED 10112

#define ERROR_SUCCESS_REBOOT_REQUIRED 3010

#define ERROR_INVALID_PROFILE 2011

#define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS 8372

#define ERROR_OVERRIDE_NOCHANGES 1252

#define ERROR_SERVER_DISABLED 1341

#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807

#define CO_E_NOTPOOLED 2147803180

#define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED 1274

#define FACILITY_SSPI 9

#define ERROR_DEVICE_ALREADY_REMEMBERED 1202

#define CRYPT_E_RECIPIENT_NOT_FOUND 2148077579

#define WSAEPROCLIM 10067

#define ERROR_ENCRYPTION_FAILED 6000

#define ERROR_INVALID_ICON_HANDLE 1414

#define CACHE_S_FIRST 262512

#define WSAEINVALIDPROVIDER 10105

#define XACT_E_CLERKEXISTS 2147799169

#define ERROR_INVALID_MODULETYPE 190

#define ERROR_IPSEC_IKE_NO_CERT 13806

#define FACILITY_UMI 22

#define ERROR_NON_ACCOUNT_SID 1257

#define NO_ERROR 0

#define ERROR_IPSEC_IKE_PROCESS_ERR 13829

#define ERROR_INVALID_MEDIA 4300

#define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS 8493

#define ERROR_INVALID_FILTER_PROC 1427

#define MK_E_CONNECTMANUALLY 2147746272

#define ERROR_DS_NON_BASE_SEARCH 8480

#define STG_E_LOCKVIOLATION 2147680289

#define OSS_MORE_BUF 2148085761

#define SPAPI_E_NO_SUCH_DEVICE_INTERFACE 2148467237

#define ERROR_INVALID_WINDOW_STYLE 2002

#define NTE_BAD_KEY 2148073475

#define SCARD_E_CANT_DISPOSE 2148532238

#define ERROR_IPSEC_IKE_INVALID_SIGNATURE 13826

#define ERROR_TIME_SKEW 1398

#define ERROR_NOT_LOGON_PROCESS 1362

#define SPAPI_E_BAD_SERVICE_INSTALLSECT 2148467223

#define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED 5081

#define DNS_INFO_AXFR_COMPLETE 9751

#define XACT_S_MADECHANGESCONTENT 315397

#define COMQC_E_UNAUTHENTICATED 2148599301

#define COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED 2148598875

#define CERTSRV_E_ARCHIVED_KEY_UNEXPECTED 2148091920

#define SCHED_E_TRIGGER_NOT_FOUND 2147750665

#define ERROR_UNKNOWN_FEATURE 1606

#define RPC_S_INVALID_BOUND 1734

#define ERROR_DS_DUP_MAPI_ID 8380

#define ERROR_SXS_POLICY_PARSE_ERROR 14029

#define CS_E_LAST 2147746159

#define ERROR_DS_SIZELIMIT_EXCEEDED 8227

#define SPAPI_E_NO_DRIVER_SELECTED 2148467203

#define ERROR_DS_DRA_REF_NOT_FOUND 8449

#define ERROR_DS_ROOT_CANT_BE_SUBREF 8326

#define DNS_ERROR_WINS_INIT_FAILED 9615

#define MK_E_NOTBINDABLE 2147746280

#define MSSIPOTF_E_TABLES_OVERLAP 2148102153

#define ERROR_INVALID_DOMAIN_STATE 1353

#define ERROR_SPOOL_FILE_NOT_FOUND 3002

#define ERROR_CLUSTER_INVALID_NETWORK 5054

#define ERROR_QUORUM_RESOURCE 5020

#define DNS_ERROR_DP_BASE 9900

#define STG_E_DISKISWRITEPROTECTED 2147680275

#define ERROR_IPSEC_IKE_PROCESS_ERR_KE 13833

#define ERROR_DS_CANT_ADD_TO_GC 8550

#define ERROR_NOT_EMPTY 4307

#define DRAGDROP_S_CANCEL 262401

#define COMADMIN_E_COMPFILE_BADTLB 2148598824

#define TRUST_E_FINANCIAL_CRITERIA 2148098078

#define ERROR_IPSEC_IKE_NO_MM_POLICY 13850

#define SPAPI_E_NO_ASSOCIATED_SERVICE 2148467225

#define ERROR_INVALID_HOOK_HANDLE 1404

#define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER 5049

#define ERROR_CLUSTER_JOIN_IN_PROGRESS 5041

#define ERROR_DEV_NOT_EXIST 55

#define DNS_ERROR_SOA_DELETE_INVALID 9618

#define ERROR_DS_OBJECT_CLASS_REQUIRED 8315

#define ERROR_GRACEFUL_DISCONNECT 1226

#define ERROR_DS_DRA_NO_REPLICA 8452

#define CO_E_INIT_TLS_CHANNEL_CONTROL 2147500044

#define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED 8304

#define ERROR_ILLEGAL_ELEMENT_ADDRESS 1162

#define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015

#define ERROR_NO_SUCH_USER 1317

#define RPC_S_CALL_CANCELLED 1818

#define ERROR_DEPENDENT_SERVICES_RUNNING 1051

#define OLE_E_INVALIDHWND 2147745807

#define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD 9605

#define FACILITY_URT 19

#define ERROR_SHUTDOWN_IN_PROGRESS 1115

#define SPAPI_E_KEY_DOES_NOT_EXIST 2148467204

#define ERROR_EMPTY 4306

#define MSSIPOTF_E_STRUCTURE 2148102168

#define STG_E_DOCFILECORRUPT 2147680521

#define ERROR_OUT_OF_STRUCTURES 84

#define ERROR_DS_RESERVED_LINK_ID 8576

#define ERROR_CLUSTER_NODE_ALREADY_UP 5061

#define ERROR_INTERNAL_DB_CORRUPTION 1358

#define ERROR_DS_ATT_IS_NOT_ON_OBJ 8310

#define STG_E_SEEKERROR 2147680281

#define ERROR_DS_CLASS_MUST_BE_CONCRETE 8359

#define ERROR_OLD_WIN_VERSION 1150

#define ERROR_CLUSTER_RESNAME_NOT_FOUND 5080

#define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821

#define SEC_E_SECURITY_QOS_FAILED 2148074290

#define ERROR_INVALID_OWNER 1307

#define STG_E_STATUS_COPY_PROTECTION_FAILURE 2147681029

#define CO_E_OLE1DDE_DISABLED 2147500054

#define RPC_X_WRONG_PIPE_VERSION 1832

#define ERROR_CLIPBOARD_NOT_OPEN 1418

#define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED 14006

#define ERROR_BAD_PROFILE 1206

#define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP 5894

#define TYPE_E_REGISTRYACCESS 2147647516

#define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN 8537

#define DNS_ERROR_RCODE_NOT_IMPLEMENTED 9004

#define ERROR_DS_NO_RESULTS_RETURNED 8257

#define ERROR_IPSEC_IKE_DECRYPT 13867

#define STG_E_ABNORMALAPIEXIT 2147680506

#define ERROR_INVALID_PARAMETER 87

#define ERROR_PARTIAL_COPY 299

#define ERROR_BAD_LENGTH 24

#define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT 14020

#define ERROR_IPSEC_IKE_INVALID_POLICY 13861

#define CO_E_INIT_SHARED_ALLOCATOR 2147500039

#define MARSHAL_E_FIRST 2147746080

#define COMADMIN_E_CAT_BITNESSMISMATCH 2148598914

#define CO_E_DECODEFAILED 2147549501

#define ERROR_INVALID_PRINTER_STATE 1906

#define ERROR_ALREADY_WAITING 1904

#define ERROR_DS_UNKNOWN_OPERATION 8365

#define OSS_PDV_CODE_NOT_LINKED 2148085800

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG 8581

#define ERROR_SXS_MANIFEST_PARSE_ERROR 14005

#define CRYPT_E_BAD_ENCODE 2148081666

#define ERROR_IPSEC_IKE_PROCESS_ERR_SA 13830

#define RPC_E_INVALID_STD_NAME 2147549474

#define CO_E_INITIALIZATIONFAILED 2147803173

#define TYPE_E_IOERROR 2147650722

#define SCARD_W_CANCELLED_BY_USER 2148532334

#define ERROR_DS_CANT_START 8531

#define OLEOBJ_E_LAST 2147746191

#define COMADMIN_E_ROLE_DOES_NOT_EXIST 2148598855

#define ERROR_WMI_TRY_AGAIN 4203

#define CO_E_ERRORINDLL 2147746297

#define ERROR_DS_DS_REQUIRED 8478

#define ERROR_IPSEC_IKE_LOAD_SOFT_SA 13844

#define ERROR_DS_NO_MSDS_INTID 8596

#define MK_E_MUSTBOTHERUSER 2147746283

#define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN 8569

#define RPC_E_INVALID_PARAMETER 2147549200

#define RPC_E_NOT_REGISTERED 2147549443

#define ERROR_DS_SECURITY_ILLEGAL_MODIFY 8423

#define DNS_ERROR_DATAFILE_BASE 9650

#define STG_S_CONVERTED 197120

#define NTE_BAD_PUBLIC_KEY 2148073493

#define ERROR_IPSEC_IKE_ERROR 13816

#define COMADMIN_E_CAN_NOT_START_APP 2148598859

#define RPC_S_NO_PROTSEQS_REGISTERED 1714

#define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER 9562

#define CERT_E_UNTRUSTEDTESTROOT 2148204813

#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS 2147500047

#define STG_E_CSS_KEY_NOT_PRESENT 2147681031

#define WSAEBADF 10009

#define OLE_E_NOCONNECTION 2147745796

#define ERROR_DS_OFFSET_RANGE_ERROR 8262

#define SCARD_E_NO_READERS_AVAILABLE 2148532270

#define DNS_ERROR_DP_NOT_ENLISTED 9903

#define DISP_E_BADINDEX 2147614731

#define ERROR_DS_DRA_DN_EXISTS 8441

#define CERT_E_MALFORMED 2148204808

#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063

#define E_POINTER 2147500035

#define ERROR_SYSTEM_TRACE 150

#define WSA_QOS_REQUEST_CONFIRMED 11009

#define ERROR_DS_CROSS_NC_DN_RENAME 8368

#define COMADMIN_E_BADREGISTRYPROGID 2148598802

#define ERROR_CLUSTER_NODE_SHUTTING_DOWN 5073

#define ERROR_IPSEC_IKE_QM_DELAY_DROP 13815

#define ERROR_DELETING_ICM_XFORM 2019

#define ERROR_LB_WITHOUT_TABSTOPS 1434

#define COMADMIN_E_REGDB_ALREADYRUNNING 2148598901

#define ERROR_DS_GC_REQUIRED 8547

#define RPC_S_GRP_ELT_NOT_REMOVED 1929

#define ERROR_MACHINE_LOCKED 1271

#define CERT_E_ISSUERCHAINING 2148204807

#define CERT_E_ROLE 2148204803

#define RPC_E_CANTPOST_INSENDCALL 2147549187

#define ERROR_INVALID_CATEGORY 117

#define CLIPBRD_E_CANT_SET 2147746258

#define SCARD_E_SERVICE_STOPPED 2148532254

#define INPLACE_E_FIRST 2147746208

#define WSA_QOS_RESERVED_PETYPE 11031

#define NTE_BAD_KEYSET_PARAM 2148073503

#define ERROR_INVALID_THREAD_ID 1444

#define ERROR_CANNOT_COPY 266

#define CRYPT_E_ASN1_PDU_TYPE 2148086067

#define RPC_S_COMM_FAILURE 1820

#define ERROR_DS_PARAM_ERROR 8255

#define ERROR_SMARTCARD_SUBSYSTEM_FAILURE 1264

#define SCARD_E_DIR_NOT_FOUND 2148532259

#define NTE_KEYSET_NOT_DEF 2148073497

#define SEC_E_NO_IP_ADDRESSES 2148074293

#define ERROR_TOO_MANY_SECRETS 1381

#define ERROR_INVALID_COLORINDEX 2022

#define DNS_ERROR_NO_PACKET 9503

#define XACT_E_CONNECTION_DENIED 2147799069

#define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN 13845

#define RPC_E_UNSECURE_CALL 2147549464

#define ERROR_INVALID_TRANSFORM 2020

#define DNS_ERROR_ZONE_DOES_NOT_EXIST 9601

#define CS_E_ADMIN_LIMIT_EXCEEDED 2147746157

#define ERROR_NO_MEDIA_IN_DRIVE 1112

#define ERROR_CTX_LICENSE_EXPIRED 7056

#define SPAPI_E_NO_SUCH_DEVINST 2148467211

#define ERROR_BAD_VALIDATION_CLASS 1348

#define CRYPT_E_DELETED_PREV 2148081672

#define SPAPI_E_NOT_DISABLEABLE 2148467249

#define WSAEADDRINUSE 10048

#define ERROR_NO_SECURITY_ON_OBJECT 1350

#define INPLACE_E_NOTOOLSPACE 2147746209

#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET 2147750671

#define REGDB_E_IIDNOTREG 2147746133

#define CRYPT_E_SELF_SIGNED 2148081671

#define ERROR_SXS_XML_E_BADCHARDATA 14036

#define CO_E_ACTIVATIONFAILED_TIMEOUT 2147803172

#define ERROR_PATCH_PACKAGE_INVALID 1636

#define DATA_E_LAST 2147746111

#define SPAPI_E_NO_COMPAT_DRIVERS 2148467240

#define COMADMIN_E_SERVICENOTINSTALLED 2148598838

#define SPAPI_E_NO_CONFIGMGR_SERVICES 2148467235

#define ERROR_CONNECTION_INVALID 1229

#define ERROR_DHCP_ADDRESS_CONFLICT 4100

#define ERROR_DS_NAME_ERROR_NOT_UNIQUE 8471

#define CERTSRV_E_SUBJECT_UPN_REQUIRED 2148091917

#define ERROR_INVALID_COMMAND_LINE 1639

#define ERROR_PIPE_LISTENING 536

#define ERROR_INVALID_CMM 2010

#define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED 8557

#define ERROR_IPSEC_IKE_SRVQUERYCRED 13856

#define ERROR_DS_NONSAFE_SCHEMA_CHANGE 8508

#define COMADMIN_E_COMPONENTEXISTS 2148598841

#define ERROR_REQ_NOT_ACCEP 71

#define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER 8538

#define MK_E_NO_NORMALIZED 2148007943

#define FACILITY_NULL 0

#define WSAENOTEMPTY 10066

#define DRAGDROP_S_LAST 262415

#define SEC_E_NO_KERB_KEY 2148074312

#define SPAPI_E_NO_DEVICE_ICON 2148467241

#define ERROR_CHILD_MUST_BE_VOLATILE 1021

#define ERROR_DS_DRA_SINK_DISABLED 8457

#define ERROR_DS_WRONG_LINKED_ATT_SYNTAX 8528

#define ERROR_INVALID_ACCESS 12

#define ERROR_INVALID_LB_MESSAGE 1432

#define CO_E_ACTIVATIONFAILED_CATALOGERROR 2147803171

#define ERROR_SXS_XML_E_BADNAMECHAR 14033

#define ERROR_FILE_INVALID 1006

#define MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT 2148102152

#define ERROR_SHARING_PAUSED 70

#define ERROR_INVALID_ID_AUTHORITY 1343

#define RPC_S_NOTHING_TO_EXPORT 1754

#define ERROR_SUCCESS_RESTART_REQUIRED 3011

#define ERROR_DIRECT_ACCESS_HANDLE 130

#define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION 13020

#define ERROR_ACCOUNT_EXPIRED 1793

#define RPC_X_PIPE_EMPTY 1918

#define ERROR_RETRY 1237

#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794

#define ERROR_DS_SUB_CLS_TEST_FAIL 8391

#define CO_S_LAST 262655

#define ERROR_IPSEC_IKE_NEG_STATUS_END 13897

#define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS 5067

#define CONTEXT_E_FIRST 2147803136

#define NTE_BAD_TYPE 2148073482

#define CAT_E_NODESCRIPTION 2147746145

#define CO_E_PATHTOOLONG 2147549493

#define ERROR_OPEN_FAILED 110

#define ERROR_IS_SUBST_TARGET 149

#define SPAPI_E_INVALID_MACHINENAME 2148467232

#define SCARD_E_INVALID_TARGET 2148532229

#define CO_E_ACTIVATIONFAILED_EVENTLOGGED 2147803170

#define OSS_COPIER_DLL_NOT_LINKED 2148085794

#define ERROR_DOWNGRADE_DETECTED 1265

#define ERROR_DS_SUBREF_MUST_HAVE_PARENT 8356

#define RPC_E_INVALID_OBJECT 2147549460

#define ERROR_DYNLINK_FROM_INVALID_RING 196

#define CERTSRV_E_BAD_REQUESTSTATUS 2148089859

#define VIEW_E_FIRST 2147746112

#define ERROR_NOT_OWNER 288

#define ERROR_CTX_GRAPHICS_INVALID 7035

#define XACT_E_NOIMPORTOBJECT 2147799060

#define ERROR_CLUSTER_NETWORK_NOT_INTERNAL 5060

#define MSSIPOTF_E_TABLE_LONGWORD 2148102151

#define SEC_E_NO_SPM 2148074244

#define CRYPT_E_SIGNER_NOT_FOUND 2148077582

#define SEC_E_MUST_BE_KDC 2148074297

#define RPC_S_PRF_ELT_NOT_REMOVED 1927

#define ERROR_BAD_UNIT 20

#define ERROR_CTX_INVALID_MODEMNAME 7010

#define ERROR_IPSEC_IKE_DH_FAIL 13822

#define RPC_S_NOT_LISTENING 1715

#define ERROR_WINS_INTERNAL 4000

#define ERROR_SIGNAL_PENDING 162

#define CRYPT_E_ASN1_NOEOD 2148086274

#define CAT_E_LAST 2147746145

#define ERROR_RMODE_APP 1153

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 8586

#define ERROR_SHARING_BUFFER_EXCEEDED 36

#define EVENT_E_INTERNALEXCEPTION 2147746309

#define NTE_BAD_DATA 2148073477

#define ERROR_DISK_RESET_FAILED 1128

#define FACILITY_ACS 20

#define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER 8517

#define ERROR_DOMAIN_TRUST_INCONSISTENT 1810

#define OLE_E_WRONGCOMPOBJ 2147745806

#define WSAENAMETOOLONG 10063

#define ERROR_WRONG_TARGET_NAME 1396

#define TYPE_E_UNDEFINEDTYPE 2147647527

#define RPC_S_ENTRY_ALREADY_EXISTS 1760

#define XACT_E_ALREADYINPROGRESS 2147799064

#define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED 8204

#define FACILITY_ITF 4

#define ERROR_OBJECT_NOT_FOUND 4312

#define ERROR_ALREADY_REGISTERED 1242

#define ERROR_DS_NAME_VALUE_TOO_LONG 8349

#define NTE_NO_MEMORY 2148073486

#define TYPE_E_INVALIDID 2147649743

#define CAT_E_FIRST 2147746144

#define OLE_E_OLEVERB 2147745792

#define ERROR_INVALID_TARGET_HANDLE 114

#define SPAPI_E_NON_WINDOWS_NT_DRIVER 2148467245

#define ERROR_DS_NO_RIDS_ALLOCATED 8208

#define ERROR_DS_AUTH_UNKNOWN 8234

#define ERROR_CURRENT_DIRECTORY 16

#define SCARD_E_TIMEOUT 2148532234

#define NTE_SILENT_CONTEXT 2148073506

#define WSAEMSGSIZE 10040

#define SCARD_E_COMM_DATA_LOST 2148532271

#define XACT_E_CANTRETAIN 2147799041

#define ERROR_IPSEC_MM_AUTH_IN_USE 13012

#define FACILITY_AAF 18

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE 14017

#define CS_E_FIRST 2147746148

#define ERROR_DS_CANT_RETRIEVE_DN 8405

#define XACT_E_RECOVERYINPROGRESS 2147799170

#define FACILITY_HTTP 25

#define SEC_I_COMPLETE_NEEDED 590611

#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773

#define ERROR_QUORUMLOG_OPEN_FAILED 5028

#define TRUST_E_SUBJECT_FORM_UNKNOWN 2148204547

#define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY 8548

#define ERROR_IPSEC_IKE_PROCESS_ERR_HASH 13837

#define CERT_E_UNTRUSTEDCA 2148204818

#define STG_S_MULTIPLEOPENS 197124

#define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER 8516

#define SPAPI_E_INVALID_REFERENCE_STRING 2148467231

#define CO_E_CANTDETERMINECLASS 2147746290

#define ERROR_INVALID_LIST_FORMAT 153

#define ERROR_WMI_GUID_NOT_FOUND 4200

#define RPC_E_CHANGED_MODE 2147549446

#define ERROR_DS_SECURITY_CHECKING_ERROR 8413

#define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA 8307

#define DNS_ERROR_NUMERIC_NAME 9561

#define ERROR_CRC 23

#define CS_E_NOT_DELETABLE 2147746149

#define ERROR_SXS_INVALID_XML_NAMESPACE_URI 14014

#define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109

#define ERROR_DS_KEY_NOT_UNIQUE 8527

#define SCHED_S_TASK_READY 267008

#define ERROR_SXS_XML_E_INVALID_DECIMAL 14047

#define ERROR_INVALID_SEGDPL 198

#define ERROR_DS_NAME_ERROR_DOMAIN_ONLY 8473

#define ERROR_CTX_BAD_VIDEO_MODE 7025

#define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN 8514

#define ERROR_CALLBACK_SUPPLIED_INVALID_DATA 1273

#define ERROR_MEDIA_UNAVAILABLE 4308

#define COMADMIN_E_COMP_MOVE_PRIVATE 2148599838

#define WSA_QOS_ESERVICETYPE 11016

#define ERROR_DS_OBJ_CLASS_NOT_DEFINED 8371

#define STG_S_CONSOLIDATIONFAILED 197125

#define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND 13014

#define SCARD_E_PCI_TOO_SMALL 2148532249

#define ERROR_DS_NAME_REFERENCE_INVALID 8373

#define SPAPI_E_NO_BACKUP 2148466947

#define ERROR_INSTALL_TEMP_UNWRITABLE 1632

#define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND 5043

#define OSS_BAD_ARG 2148085766

#define ERROR_LOGIN_TIME_RESTRICTION 1239

#define ERROR_ADDRESS_NOT_ASSOCIATED 1228

#define COMADMIN_E_SAFERINVALID 2148599842

#define ERROR_INVALID_AT_INTERRUPT_TIME 104

#define ERROR_DS_EXISTS_IN_MAY_HAVE 8386

#define ERROR_IPSEC_IKE_INVALID_HASH_SIZE 13872

#define ERROR_DS_NOT_ON_BACKLINK 8362

#define OLE_S_USEREG 262144

#define ERROR_MAX_THRDS_REACHED 164

#define CO_E_ISOLEVELMISMATCH 2147803183

#define ERROR_DS_DUP_OID 8379

#define CERTSRV_E_TEMPLATE_DENIED 2148089874

#define ERROR_REG_NAT_CONSUMPTION 1261

#define COMADMIN_E_REGISTRY_ACCESSDENIED 2148599843

#define ERROR_INVALID_IMPORT_OF_NON_DLL 1276

#define ERROR_DS_CODE_INCONSISTENCY 8408

#define COMADMIN_E_APPLICATIONEXISTS 2148598795

#define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA 8465

#define OSS_DATA_ERROR 2148085765

#define COMADMIN_E_PARTITION_ACCESSDENIED 2148599832

#define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE 14071

#define SCARD_W_RESET_CARD 2148532328

#define ERROR_DLL_NOT_FOUND 1157

#define ERROR_NOT_DOS_DISK 26

#define ERROR_INVALID_MENU_HANDLE 1401

#define CERTSRV_E_SERVER_SUSPENDED 2148089862

#define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080

#define SEC_E_OUT_OF_SEQUENCE 2148074256

#define CRYPT_E_ASN1_NYI 2148086068

#define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND 5047

#define ERROR_RESOURCE_FAILED 5038

#define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION 13019

#define ERROR_BOOT_ALREADY_ACCEPTED 1076

#define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER 8518

#define COMQC_E_NO_QUEUEABLE_INTERFACES 2148599297

#define XENROLL_E_RESPONSE_KA_HASH_MISMATCH 2148093956

#define COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES 2148598874

#define ERROR_DS_SAM_INIT_FAILURE 8504

#define SPAPI_E_NO_DEVICE_SELECTED 2148467217

#define ERROR_DS_CONSTRAINT_VIOLATION 8239

#define RPC_S_NO_CALL_ACTIVE 1725

#define ERROR_INVALID_ADDRESS 487

#define DISP_E_PARAMNOTFOUND 2147614724

#define ERROR_SERVICE_EXISTS 1073

#define ERROR_DS_SCHEMA_UPDATE_DISALLOWED 8509

#define INPLACE_S_TRUNCATED 262560

#define ERROR_INVALID_NETNAME 1214

#define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX 8392

#define OR_INVALID_OID 1911

#define ERROR_INVALID_DOMAINNAME 1212

#define ERROR_DS_CANT_MIX_MASTER_AND_REPS 8331

#define RPC_S_CANT_CREATE_ENDPOINT 1720

#define CRYPT_E_ALREADY_DECRYPTED 2148077577

#define ERROR_SXS_ASSEMBLY_NOT_FOUND 14003

#define ERROR_JOIN_TO_JOIN 138

#define RPC_E_FULLSIC_REQUIRED 2147549473

#define SPAPI_E_NO_CLASS_DRIVER_LIST 2148467224

#define WSAEDESTADDRREQ 10039

#define DATA_E_FIRST 2147746096

#define SPAPI_E_INVALID_TARGET 2148467251

#define CRYPT_E_PENDING_CLOSE 2148081679

#define DNS_ERROR_INVALID_NAME_CHAR 9560

#define ERROR_DEPENDENCY_ALREADY_EXISTS 5003

#define ERROR_DS_FOREST_VERSION_TOO_HIGH 8563

#define ERROR_TOO_MANY_LUIDS_REQUESTED 1333

#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390

#define XACT_E_XA_TX_DISABLED 2147799078

#define WSA_QOS_EFILTERCOUNT 11021

#define COMADMIN_E_COMPFILE_LOADDLLFAIL 2148598821

#define COMADMIN_E_BADREGISTRYLIBID 2148598814

#define ERROR_TOO_MANY_SESS 69

#define WSAENOMORE 10102

#define OSS_INDEFINITE_NOT_SUPPORTED 2148085773

#define DNS_STATUS_CONTINUE_NEEDED 9801

#define ERROR_DS_NONEXISTENT_MAY_HAVE 8387

#define ERROR_SXS_XML_E_MISSINGQUOTE 14030

#define SEC_E_NO_PA_DATA 2148074300

#define RPC_S_CALL_IN_PROGRESS 1791

#define ERROR_DS_CANT_RETRIEVE_SD 8526

#define ERROR_WRITE_FAULT 29

#define COMADMIN_E_REGDB_NOTOPEN 2148598899

#define TRUST_E_COUNTER_SIGNER 2148098051

#define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG 14060

#define ERROR_INVALID_SCROLLBAR_RANGE 1448

#define ERROR_SPECIAL_ACCOUNT 1371

#define SCARD_F_COMM_ERROR 2148532243

#define ERROR_ACCOUNT_LOCKED_OUT 1909

#define TYPE_E_UNKNOWNLCID 2147647534

#define ERROR_USER_EXISTS 1316

#define DNS_ERROR_INVALID_TYPE 9551

#define EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT 2147746317

#define TYPE_E_CIRCULARTYPE 2147654788

#define CO_E_ALREADYINITIALIZED 2147746289

#define ERROR_INSTALL_PACKAGE_OPEN_FAILED 1619

#define SEC_E_ALGORITHM_MISMATCH 2148074289

#define ERROR_ALL_SIDS_FILTERED 3221815298

#define COMADMIN_E_DLLREGISTERSERVER 2148598810

#define ERROR_PRINTQ_FULL 61

#define ERROR_DS_SENSITIVE_GROUP_VIOLATION 8505

#define CO_E_SCM_ERROR 2148007938

#define ERROR_PAGED_SYSTEM_RESOURCES 1452

#define ERROR_CANNOT_IMPERSONATE 1368

#define ERROR_APP_WRONG_OS 1151

#define SEC_E_UNTRUSTED_ROOT 2148074277

#define VIEW_S_LAST 262479

#define ERROR_IS_JOIN_PATH 147

#define ERROR_DS_EPOCH_MISMATCH 8483

#define ERROR_DS_UNABLE_TO_SURRENDER_ROLES 8435

#define XACT_E_FIRST 2147799040

#define ERROR_CTX_CLIENT_QUERY_TIMEOUT 7040

#define RPC_S_ENTRY_NOT_FOUND 1761

#define DNS_ERROR_RCODE_FORMAT_ERROR 9001

#define FACILITY_RPC 1

#define ERROR_COMMITMENT_LIMIT 1455

#define DISP_E_UNKNOWNNAME 2147614726

#define ERROR_DS_ADMIN_LIMIT_EXCEEDED 8228

#define ERROR_DS_DRA_INVALID_PARAMETER 8437

#define ERROR_IPSEC_QM_POLICY_NOT_FOUND 13001

#define E_FAIL 2147500037

#define ENUM_E_FIRST 2147746224

#define CO_E_INIT_SCM_EXEC_FAILURE 2147500049

#define XACT_E_INVALIDCOOKIE 2147799061

#define STG_E_READFAULT 2147680286

#define ERROR_NO_NETWORK 1222

#define ERROR_INVALID_SECURITY_DESCR 1338

#define ERROR_CAN_NOT_COMPLETE 1003

#define ERROR_IPSEC_IKE_BENIGN_REINIT 13878

#define OLEOBJ_S_INVALIDVERB 262528

#define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001

#define FRS_ERR_SERVICE_COMM 8006

#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL 2147500043

#define ERROR_MOD_NOT_FOUND 126

#define ERROR_INSUFFICIENT_BUFFER 122

#define OSS_CANT_OPEN_TRACE_FILE 2148085787

#define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033

#define ERROR_DS_CANT_DEL_MASTER_CROSSREF 8375

#define ERROR_PASSWORD_RESTRICTION 1325

#define RPC_E_CANTCALLOUT_INEXTERNALCALL 2147549189

#define ERROR_MEMBER_IN_GROUP 1320

#define ERROR_VOLUME_NOT_SIS_ENABLED 4500

#define ERROR_SERVICE_START_HANG 1070

#define ERROR_ADAP_HDW_ERR 57

#define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE 14045

#define RPC_E_SERVER_CANTUNMARSHAL_DATA 2147549198

#define ERROR_TRUSTED_DOMAIN_FAILURE 1788

#define ERROR_IPSEC_MM_AUTH_PENDING_DELETION 13022

#define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER 8497

#define ERROR_WMI_INVALID_MOF 4210

#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623

#define ERROR_NOT_ENOUGH_QUOTA 1816

#define ERROR_NO_MORE_USER_HANDLES 1158

#define RPC_S_WRONG_KIND_OF_BINDING 1701

#define SPAPI_E_IN_WOW64 2148467253

#define EVENT_S_LAST 262687

#define TRUST_E_BAD_DIGEST 2148098064

#define ERROR_WORKING_SET_QUOTA 1453

#define ERROR_ALREADY_RUNNING_LKG 1074

#define STG_E_PATHNOTFOUND 2147680259

#define ERROR_SXS_XML_E_BADPEREFINSUBSET 14059

#define ERROR_VC_DISCONNECTED 240

#define DNS_ERROR_UNSECURE_PACKET 9505

#define ERROR_IPSEC_QM_POLICY_IN_USE 13002

#define ERROR_SWAPERROR 999

#define ERROR_DS_INSUFF_ACCESS_RIGHTS 8344

#define STG_E_INVALIDPARAMETER 2147680343

#define ERROR_FULL_BACKUP 4004

#define OSS_BAD_TABLE 2148085775

#define ERROR_DS_SCHEMA_NOT_LOADED 8414

#define ERROR_BAD_DRIVER_LEVEL 119

#define DNS_ERROR_NODE_CREATION_FAILED 9703

#define ERROR_CTX_WD_NOT_FOUND 7004

#define CLASS_E_NOAGGREGATION 2147746064

#define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING 14078

#define SEC_E_KDC_INVALID_REQUEST 2148074304

#define ERROR_DS_BAD_HIERARCHY_FILE 8425

#define SEC_E_NO_CREDENTIALS 2148074254

#define ERROR_WMI_SET_FAILURE 4214

#define ERROR_INSTALL_ALREADY_RUNNING 1618

#define CONTEXT_E_NOTRANSACTION 2147803175

#define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2015

#define ERROR_AUDITING_DISABLED 3221815297

#define ERROR_INSTALL_REMOTE_DISALLOWED 1640

#define CONVERT10_E_OLESTREAM_FMT 2147746242

#define SEC_E_SMARTCARD_LOGON_REQUIRED 2148074302

#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR 2147500045

#define CRYPT_E_NOT_CHAR_STRING 2148081700

#define TRUST_E_EXPLICIT_DISTRUST 2148204817

#define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED 14015

#define ERROR_WMI_ITEMID_NOT_FOUND 4202

#define ERROR_TOO_MANY_NAMES 68

#define ERROR_TLW_WITH_WSCHILD 1406

#define DISP_E_UNKNOWNLCID 2147614732

#define STG_E_RESETS_EXHAUSTED 2147681035

#define DV_E_DVTARGETDEVICE_SIZE 2147745900

#define ERROR_INSTALL_SUSPEND 1604

#define RPC_S_UNSUPPORTED_TYPE 1732

#define MARSHAL_S_FIRST 262432

#define ERROR_BUS_RESET 1111

#define MEM_E_INVALID_LINK 2148007952

#define OSS_BAD_VERSION 2148085767

#define FACILITY_CERT 11

#define ERROR_CANCEL_VIOLATION 173

#define WSAEISCONN 10056

#define EVENT_E_ALL_SUBSCRIBERS_FAILED 2147746305

#define ERROR_DS_ALIAS_PROBLEM 8241

#define ERROR_SUBST_TO_JOIN 141

#define EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT 2147746318

#define SCHED_E_NO_SECURITY_SERVICES 2147750674

#define EVENT_E_QUERYSYNTAX 2147746307

#define ERROR_POPUP_ALREADY_ACTIVE 1446

#define SPAPI_E_WRONG_INF_STYLE 2148466944

#define ERROR_PRODUCT_UNINSTALLED 1614

#define RPC_E_THREAD_NOT_INIT 2147549455

#define ERROR_CONNECTION_COUNT_LIMIT 1238

#define WSAEFAULT 10014

#define ERROR_SESSION_CREDENTIAL_CONFLICT 1219

#define ERROR_HOST_NODE_NOT_AVAILABLE 5005

#define ERROR_RESOURCE_DISABLED 4309

#define RPC_E_ACCESS_DENIED 2147549467

#define COMADMIN_E_NOREGISTRYCLSID 2148598801

#define ERROR_NO_RECOVERY_POLICY 6003

#define FACILITY_MSMQ 14

#define OLE_E_CANTCONVERT 2147745809

#define CO_E_INIT_TLS 2147500038

#define ERROR_INVALID_MSGBOX_STYLE 1438

#define ERROR_DS_DNS_LOOKUP_FAILURE 8524

#define ERROR_DUPLICATE_SERVICE_NAME 1078

#define DNS_STATUS_PACKET_UNSECURE 9505

#define ERROR_TOKEN_ALREADY_IN_USE 1375

#define ERROR_SEM_OWNER_DIED 105

#define ERROR_DS_NONEXISTENT_POSS_SUP 8390

#define TYPE_E_INVDATAREAD 2147647512

#define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS 13832

#define ERROR_CIRCULAR_DEPENDENCY 1059

#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED 2147746279

#define SEC_E_CERT_UNKNOWN 2148074279

#define ERROR_WRONG_EFS 6005

#define SPAPI_E_DRIVER_NONNATIVE 2148467252

#define XACT_S_ABORTING 315400

#define VIEW_E_LAST 2147746127

#define ERROR_DUP_NAME 52

#define SEC_E_NO_TGT_REPLY 2148074292

#define SEC_E_INTERNAL_ERROR 2148074244

#define RPC_S_MAX_CALLS_TOO_SMALL 1742

#define WSA_QOS_EFILTERTYPE 11020

#define SCARD_E_UNKNOWN_READER 2148532233

#define CO_E_NO_SECCTX_IN_ACTIVATE 2147500075

#define RPC_X_INVALID_PIPE_OBJECT 1830

#define DNS_ERROR_RCODE_NOTAUTH 9009

#define SCHED_E_CANNOT_OPEN_TASK 2147750669

#define ERROR_DS_NAME_ERROR_RESOLVING 8469

#define ERROR_DS_REPLICATOR_ONLY 8370

#define XENROLL_E_KEY_NOT_EXPORTABLE 2148093952

#define ERROR_DS_GCVERIFY_ERROR 8417

#define FRS_ERR_STARTING_SERVICE 8002

#define OSS_OID_DLL_NOT_LINKED 2148085786

#define REGDB_E_INVALIDVALUE 2147746131

#define CLIENTSITE_E_LAST 2147746207

#define CONTEXT_E_SYNCH_TIMEOUT 2147803142

#define STG_E_SHAREVIOLATION 2147680288

#define CERT_E_EXPIRED 2148204801

#define ERROR_DS_CANT_RETRIEVE_ATTS 8481

#define ERROR_DS_EXISTS_IN_POSS_SUP 8395

#define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR 8595

#define RPC_E_CANTCALLOUT_ININPUTSYNCCALL 2147549453

#define CLASSFACTORY_S_LAST 262431

#define DISP_E_DIVBYZERO 2147614738

#define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027

#define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND 13013

#define ERROR_DS_DRA_REPL_PENDING 8477

#define ERROR_DS_OBJ_STRING_NAME_EXISTS 8305

#define SCARD_E_INVALID_ATR 2148532245

#define ERROR_LOGIN_WKSTA_RESTRICTION 1240

#define ERROR_CTX_WINSTATION_NAME_INVALID 7001

#define ERROR_SXS_XML_E_INVALIDATROOTLEVEL 14055

#define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK 14050

#define ERROR_INVALID_SPI_VALUE 1439

#define SEC_E_UNKNOWN_CREDENTIALS 2148074253

#define ERROR_SXS_XML_E_RESERVEDNAMESPACE 14066

#define ERROR_VOLUME_CONTAINS_SYS_FILES 4337

#define WSA_QOS_EPOLICYOBJ 11025

#define CRYPT_E_INVALID_MSG_TYPE 2148077572

#define ERROR_REGISTRY_CORRUPT 1015

#define DNS_ERROR_NOT_UNIQUE 9555

#define OLE_E_STATIC 2147745803

#define CLIPBRD_S_LAST 262623

#define SCHED_S_TASK_TERMINATED 267014

#define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD 8529

#define ERROR_CLUSTER_GUM_NOT_LOCKER 5085

#define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE 5089

#define ERROR_DS_LOCAL_ERROR 8251

#define CS_E_INVALID_PATH 2147746155

#define SPAPI_E_DI_BAD_PATH 2148467220

#define CLIENTSITE_S_FIRST 262544

#define CO_E_INCOMPATIBLESTREAMVERSION 2147549499

#define ERROR_DS_DRA_NAME_COLLISION 8458

#define COMADMIN_E_APP_FILE_VERSION 2148598793

#define RPC_S_UNSUPPORTED_TRANS_SYN 1730

#define ERROR_WMI_DP_NOT_FOUND 4204

#define ERROR_IPSEC_IKE_DROP_NO_RESPONSE 13813

#define ERROR_INVALID_FUNCTION 1

#define ERROR_DS_NO_SUCH_OBJECT 8240

#define ERROR_NO_WILDCARD_CHARACTERS 1417

#define RPC_E_SERVERFAULT 2147549445

#define ERROR_DS_OBJECT_RESULTS_TOO_LARGE 8248

#define ERROR_LOGON_SESSION_EXISTS 1363

#define ERROR_DS_CANT_DELETE 8398

#define DNS_ERROR_NO_MEMORY 14

#define RPC_S_NO_CONTEXT_AVAILABLE 1765

#define RPC_X_WRONG_STUB_VERSION 1829

#define XACT_E_NETWORK_TX_DISABLED 2147799076

#define NOERROR 0

#define ERROR_DS_EXISTS_IN_AUX_CLS 8393

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ 13836

#define ERROR_CLUSTER_MEMBERSHIP_HALT 5892

#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459

#define ERROR_INVALID_MESSAGEDEST 1218

#define ERROR_DS_NAME_ERROR_TRUST_REFERRAL 8583

#define ERROR_INCORRECT_ADDRESS 1241

#define ERROR_IS_SUBSTED 135

#define ERROR_INVALID_ENVIRONMENT 1805

#define ERROR_IPSEC_IKE_UNSUPPORTED_ID 13869

#define CLIENTSITE_S_LAST 262559

#define DNS_ERROR_NEED_WINS_SERVERS 9616

#define CO_E_INVALIDSID 2147549485

#define WSAEAFNOSUPPORT 10047

#define SEC_I_LOCAL_LOGON 590613

#define SPAPI_E_INVALID_DEVINST_NAME 2148467205

#define STG_E_OLDFORMAT 2147680516

#define SCHED_E_ACCOUNT_NAME_NOT_FOUND 2147750672

#define CRYPT_E_UNEXPECTED_MSG_TYPE 2148081674

#define ERROR_IPSEC_IKE_NOTCBPRIV 13851

#define MK_S_FIRST 262624

#define WSATRY_AGAIN 11002

#define COMADMIN_E_APP_FILE_READFAIL 2148598792

#define ERROR_INVALID_LIBRARY 4301

#define ERROR_INSTALL_FAILURE 1603

#define XACT_E_NOISORETAIN 2147799051

#define CRYPT_E_INVALID_NUMERIC_STRING 2148081696

#define CLASSFACTORY_E_LAST 2147746079

#define ERROR_KEY_DELETED 1018

#define ERROR_MEMBER_IN_ALIAS 1378

#define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE 14019

#define CRYPT_E_BAD_MSG 2148081677

#define ERROR_IPSEC_MM_POLICY_PENDING_DELETION 13021

#define TRUST_E_SYSTEM_ERROR 2148098049

#define OLEOBJ_E_FIRST 2147746176

#define ERROR_NETWORK_ACCESS_DENIED 65

#define SCARD_E_INVALID_PARAMETER 2148532228

#define ERROR_IPSEC_QM_POLICY_EXISTS 13000

#define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC 8580

#define RPC_S_FP_OVERFLOW 1771

#define ERROR_DS_COUNTING_AB_INDICES_FAILED 8428

#define CRYPT_E_ASN1_CORRUPT 2148086019

#define COMADMIN_E_REGDB_NOTINITIALIZED 2148598898

#define ERROR_CLUSTER_DATABASE_SEQMISMATCH 5083

#define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737

#define COMADMIN_E_REGISTERTLB 2148598832

#define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP 9612

#define ERROR_EXTENDED_ERROR 1208

#define ERROR_DS_LOW_DSA_VERSION 8568

#define ERROR_LOGON_SESSION_COLLISION 1366

#define WSANO_RECOVERY 11003

#define WSAESTALE 10070

#define SPAPI_E_SECTION_NAME_TOO_LONG 2148466690

#define COMADMIN_E_COMPFILE_GETCLASSOBJ 2148598822

#define CO_E_NOMATCHINGNAMEFOUND 2147549489

#define CRYPT_E_NOT_DECRYPTED 2148077578

#define ERROR_UNABLE_TO_CLEAN 4311

#define ERROR_DS_CLASS_NOT_DSA 8343

#define DISP_E_OVERFLOW 2147614730

#define CRYPT_E_NO_KEY_PROPERTY 2148081675

#define EVENT_E_LAST 2147746335

#define XACT_E_REPLAYREQUEST 2147799173

#define ERROR_APPHELP_BLOCK 1259

#define ERROR_IPSEC_IKE_INVALID_HASH_ALG 13871

#define CO_E_APPDIDNTREG 2147746302

#define ERROR_INSTALL_SERVICE_FAILURE 1601

#define SEC_E_TARGET_UNKNOWN 2148074243

#define DNS_ERROR_ZONE_CREATION_FAILED 9608

#define XACT_S_LOCALLY_OK 315402

#define ERROR_DS_INVALID_DMD 8360

#define WSA_QOS_EPROVSPECBUF 11018

#define E_OUTOFMEMORY 2147942414

#define COMADMIN_E_START_APP_DISABLED 2148598865

#define ERROR_BAD_NET_RESP 58

#define WSAEHOSTUNREACH 10065

#define TRUST_E_SUBJECT_NOT_TRUSTED 2148204548

#define DV_E_STATDATA 2147745895

#define ERROR_DS_NAME_TOO_MANY_PARTS 8347

#define WSAEPFNOSUPPORT 10046

#define ERROR_CONNECTION_ABORTED 1236

#define ERROR_NODE_NOT_AVAILABLE 5036

#define ERROR_CLUSTER_NODE_NOT_FOUND 5042

#define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE 5064

#define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE 8512

#define ERROR_CONTEXT_EXPIRED 1931

#define DISP_E_NONAMEDARGS 2147614727

#define ERROR_DS_INCORRECT_ROLE_OWNER 8210

#define ERROR_NO_VOLUME_ID 1173

#define CO_E_FAILEDTOGETSECCTX 2147549476

#define WSA_QOS_EFLOWCOUNT 11023

#define ERROR_DS_DUP_SCHEMA_ID_GUID 8381

#define DNS_ERROR_INVALID_DATA 13

#define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT 2147500068

#define SPAPI_E_INVALID_CLASS_INSTALLER 2148467213

#define ERROR_BAD_LOGON_SESSION_STATE 1365

#define ERROR_LIBRARY_OFFLINE 4305

#define CRYPT_E_ASN1_CONSTRAINT 2148086021

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT 1176

#define ERROR_INVALID_LOGON_HOURS 1328

#define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY 13840

#define ERROR_CLUSTER_NODE_ALREADY_MEMBER 5065

#define SCHED_E_ACCOUNT_DBASE_CORRUPT 2147750673

#define SPAPI_E_REMOTE_COMM_FAILURE 2148467233

#define ERROR_SET_POWER_STATE_FAILED 1141

#define SCARD_E_FILE_NOT_FOUND 2148532260

#define ERROR_OUT_OF_PAPER 28

#define CO_E_SERVER_PAUSED 2147500069

#define ERROR_IPSEC_IKE_UNKNOWN_DOI 13862

#define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP 5896

#define COMADMIN_E_PARTITION_MSI_ONLY 2148599833

#define SCARD_E_CARD_UNSUPPORTED 2148532252

#define ERROR_NODE_CANNOT_BE_CLUSTERED 5898

#define DNS_ERROR_DS_ZONE_ALREADY_EXISTS 9718

#define COMADMIN_E_COMP_MOVE_SOURCE 2148599836

#define ERROR_IPSEC_IKE_SA_DELETED 13807

#define ERROR_NO_TRACKING_SERVICE 1172

#define ERROR_EVENTLOG_CANT_START 1501

#define ERROR_INSTALL_TRANSFORM_REJECTED 1644

#define ERROR_INVALID_EXE_SIGNATURE 191

#define CS_E_INVALID_VERSION 2147746151

#define ERROR_NO_MORE_FILES 18

#define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE 13841

#define ERROR_FUNCTION_NOT_CALLED 1626

#define ERROR_SERVICE_NEVER_STARTED 1077

#define DISP_E_PARAMNOTOPTIONAL 2147614735

#define CONTEXT_S_LAST 319535

#define XACT_E_INDOUBT 2147799062

#define ERROR_IPSEC_IKE_NEGOTIATION_PENDING 13803

#define RPC_E_CALL_CANCELED 2147549186

#define CO_E_CLASSSTRING 2147746291

#define XACT_E_HEURISTICDANGER 2147799047

#define WSA_E_NO_MORE 10110

#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795

#define CONTEXT_E_ABORTING 2147803139

#define ERROR_DS_MISSING_REQUIRED_ATT 8316

#define ERROR_DS_SRC_GUID_MISMATCH 8488

#define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND 5891

#define ERROR_INVALID_BLOCK_LENGTH 1106

#define ERROR_NO_TRUST_LSA_SECRET 1786

#define CERTSRV_E_SMIME_REQUIRED 2148091909

#define MK_S_HIM 262629

#define RPC_S_INTERFACE_NOT_FOUND 1759

#define ERROR_EVENTLOG_FILE_CHANGED 1503

#define ERROR_IPSEC_IKE_PROCESS_ERR_PROP 13831

#define XACT_S_MADECHANGESINFORM 315398

#define FRS_ERR_AUTHENTICATION 8008

#define ERROR_CLUSTER_LAST_INTERNAL_NETWORK 5066

#define ERROR_ALREADY_INITIALIZED 1247

#define ERROR_WINDOW_NOT_COMBOBOX 1423

#define STG_E_SHAREREQUIRED 2147680518

#define ERROR_COUNTER_TIMEOUT 1121

#define ERROR_DS_SEC_DESC_TOO_SHORT 8353

#define ERROR_INVALID_ACL 1336

#define DV_E_TYMED 2147745897

#define E_PENDING 2147483658

#define RPC_S_PRF_ELT_NOT_ADDED 1926

#define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA 8303

#define XACT_S_DEFECT 315393

#define XACT_E_NOTCURRENT 2147799053

#define ERROR_DISK_FULL 112

#define ERROR_ALREADY_ASSIGNED 85

#define ERROR_CLUSTER_PARAMETER_MISMATCH 5897

#define ERROR_GROUP_NOT_ONLINE 5014

#define CO_E_FAILEDTOOPENPROCESSTOKEN 2147549500

#define XACT_E_REENLISTTIMEOUT 2147799070

#define XACT_E_CLERKNOTFOUND 2147799168

#define CO_E_FAILEDTOCLOSEHANDLE 2147549496

#define ERROR_CANNOT_MAKE 82

#define DNS_INFO_NO_RECORDS 9501

#define ERROR_DS_DRA_BAD_NC 8440

#define CERT_E_CHAINING 2148204810

#define RPC_S_INVALID_NAME_SYNTAX 1736

#define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL 14048

#define FACILITY_SXS 23

#define ERROR_INSTALL_SOURCE_ABSENT 1612

#define XACT_E_TMNOTAVAILABLE 2147799067

#define COMQC_E_BAD_MESSAGE 2148599300

#define CONTEXT_E_LAST 2147803183

#define WSASYSCALLFAILURE 10107

#define ERROR_NO_ASSOCIATION 1155

#define SCARD_E_SYSTEM_CANCELLED 2148532242

#define E_INVALIDARG 2147942487

#define FRS_ERR_SYSVOL_POPULATE 8013

#define ERROR_DS_DRA_OUT_OF_MEM 8446

#define ERROR_DS_CANT_ADD_ATT_VALUES 8320

#define ERROR_DS_PROTOCOL_ERROR 8225

#define CO_E_START_SERVICE_FAILURE 2147500060

#define ERROR_DS_NONEXISTENT_MUST_HAVE 8388

#define EVENT_E_QUERYFIELD 2147746308

#define OSS_TRACE_FILE_ALREADY_OPEN 2148085788

#define RPC_S_STRING_TOO_LONG 1743

#define OLE_E_CANT_BINDTOSOURCE 2147745802

#define DNS_ERROR_NBSTAT_INIT_FAILED 9617

#define ERROR_DS_DRA_SCHEMA_CONFLICT 8543

#define CACHE_S_SAMECACHE 262513

#define SEC_E_WRONG_CREDENTIAL_HANDLE 2148074294

#define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER 8584

#define SCARD_E_NO_SMARTCARD 2148532236

#define ERROR_NO_MORE_DEVICES 1248

#define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define ERROR_INVALID_NAME 123

#define ERROR_NO_MORE_SEARCH_HANDLES 113

#define DNS_ERROR_OPERATION_BASE 9750

#define ERROR_NODE_CANT_HOST_RESOURCE 5071

#define ERROR_SAM_INIT_FAILURE 8541

#define DNS_STATUS_FQDN 9557

#define OLE_S_STATIC 262145

#define ERROR_SPL_NO_STARTDOC 3003

#define ERROR_WMI_INSTANCE_NOT_FOUND 4201

#define ERROR_BAD_NET_NAME 67

#define SPAPI_E_INVALID_HWPROFILE 2148467216

#define OSS_FATAL_ERROR 2148085778

#define CO_E_SERVER_EXEC_FAILURE 2148007941

#define ERROR_DISK_CORRUPT 1393

#define SEC_E_SMARTCARD_CERT_REVOKED 2148074321

#define ERROR_DS_THREAD_LIMIT_EXCEEDED 8587

#define SEC_E_DECRYPT_FAILURE 2148074288

#define ERROR_DS_WRONG_OM_OBJ_CLASS 8476

#define ERROR_IPSEC_MM_FILTER_NOT_FOUND 13007

#define ERROR_NONE_MAPPED 1332

#define DNS_ERROR_RCODE_YXDOMAIN 9006

#define FRS_ERR_INTERNAL 8005

#define ERROR_INVALID_COLORSPACE 2017

#define EPT_S_CANT_CREATE 1899

#define ERROR_HWNDS_HAVE_DIFF_PARENT 1441

#define ERROR_DECRYPTION_FAILED 6001

#define ERROR_CTX_CLIENT_LICENSE_IN_USE 7052

#define ERROR_NO_USER_KEYS 6006

#define RPC_S_NO_MORE_BINDINGS 1806

#define OLE_E_ADVF 2147745793

#define COMADMIN_E_USERPASSWDNOTVALID 2148598804

#define ERROR_JOURNAL_NOT_ACTIVE 1179

#define ERROR_DS_REFERRAL 8235

#define ERROR_NO_SYSTEM_MENU 1437

#define ERROR_TAG_NOT_PRESENT 2013

#define STG_E_CSS_KEY_NOT_ESTABLISHED 2147681032

#define ERROR_CTX_MODEM_RESPONSE_VOICE 7016

#define ERROR_HOOK_TYPE_NOT_ALLOWED 1458

#define RPC_X_INVALID_ES_ACTION 1827

#define SEC_E_MAX_REFERRALS_EXCEEDED 2148074296

#define ERROR_FAIL_I24 83

#define ERROR_SXS_DUPLICATE_TLBID 14025

#define VIEW_S_FIRST 262464

#define ERROR_LOG_FILE_FULL 1502

#define ERROR_IO_INCOMPLETE 996

#define OLE_E_PROMPTSAVECANCELLED 2147745804

#define ERROR_DS_DIFFERENT_REPL_EPOCHS 8593

#define ERROR_NO_SUCH_MEMBER 1387

#define ERROR_CANT_DELETE_LAST_ITEM 4335

#define ERROR_BAD_CONFIGURATION 1610

#define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION 8492

#define ERROR_NO_UNICODE_TRANSLATION 1113

#define ERROR_INSTALL_USEREXIT 1602

#define CRYPT_E_ATTRIBUTES_MISSING 2148077583

#define COMADMIN_E_BASE_PARTITION_ONLY 2148598864

#define CLIPBRD_S_FIRST 262608

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME 14080

#define DNS_ERROR_FORWARDER_ALREADY_EXISTS 9619

#define COMADMIN_E_AMBIGUOUS_PARTITION_NAME 2148598877

#define SCHED_S_TASK_NO_MORE_RUNS 267012

#define WSAESHUTDOWN 10058

#define ERROR_INVALID_DRIVE 15

#define ERROR_SERVICE_SPECIFIC_ERROR 1066

#define RPC_S_NAME_SERVICE_UNAVAILABLE 1762

#define CS_E_NETWORK_ERROR 2147746156

#define ERROR_TAG_NOT_FOUND 2012

#define OSS_NULL_FCN 2148085781

#define NTE_PROV_TYPE_NO_MATCH 2148073499

#define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781

#define COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE 2148598863

#define ERROR_DEPENDENCY_NOT_ALLOWED 5069

#define ERROR_UNKNOWN_PRINTPROCESSOR 1798

#define ERROR_IPSEC_IKE_INVALID_PAYLOAD 13843

#define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET 8464

#define ERROR_DS_DRA_BAD_DN 8439

#define WAIT_TIMEOUT 258

#define CRYPT_E_ASN1_MEMORY 2148086022

#define ERROR_SHARED_POLICY 8218

#define ERROR_DATABASE_FULL 4314

#define ERROR_DS_INVALID_GROUP_TYPE 8513

#define RPC_S_INTERNAL_ERROR 1766

#define ERROR_UNEXPECTED_OMID 4334

#define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION 8511

#define RPC_E_SERVERCALL_RETRYLATER 2147549450

#define SCARD_W_UNRESPONSIVE_CARD 2148532326

#define RPC_E_TOO_LATE 2147549465

#define DNS_STATUS_SINGLE_PART_NAME 9559

#define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789

#define ERROR_TOO_MANY_POSTS 298

#define RPC_E_UNEXPECTED 2147614719

#define ERROR_IPSEC_MM_FILTER_EXISTS 13006

#define ERROR_DS_NOT_INSTALLED 8200

#define XACT_E_ISOLATIONLEVEL 2147799048

#define ERROR_WMI_GUID_DISCONNECTED 4207

#define CO_E_IIDREG_INCONSISTENT 2147500064

#define CO_E_NOCOOKIES 2147803178

#define ERROR_BADDB 1009

#define CO_E_THREADINGMODEL_CHANGED 2147803176

#define ERROR_ONLY_IF_CONNECTED 1251

#define ERROR_LOCKED 212

#define ERROR_INSTALL_UI_FAILURE 1621

#define DNS_INFO_ADDED_LOCAL_WINS 9753

#define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE 7014

#define E_HANDLE 2147942406

#define ERROR_QUORUM_DISK_NOT_FOUND 5086

#define CO_E_BAD_PATH 2148007940

#define ERROR_UNKNOWN_PROPERTY 1608

#define CRYPT_E_NO_PROVIDER 2148081670

#define ERROR_NEGATIVE_SEEK 131

#define CERTSRV_E_SIGNATURE_REJECTED 2148091915

#define ERROR_BAD_QUERY_SYNTAX 1615

#define ERROR_DISCARDED 157

#define CONVERT10_E_STG_NO_STD_STREAM 2147746245

#define ERROR_EVENTLOG_FILE_CORRUPT 1500

#define ERROR_DS_HAVE_PRIMARY_MEMBERS 8521

#define ERROR_DS_SAM_INIT_FAILURE_CONSOLE 8562

#define ERROR_EA_TABLE_FULL 277

#define ERROR_WMI_SERVER_UNAVAILABLE 4208

#define CLIPBRD_E_LAST 2147746271

#define COMADMIN_E_MIG_VERSIONNOTSUPPORTED 2148598912

#define ERROR_GEN_FAILURE 31

#define SEC_E_BUFFER_TOO_SMALL 2148074273

#define DNS_ERROR_RECORD_FORMAT 9702

#define ERROR_WRONG_DISK 34

#define COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME 2148598871

#define COMADMIN_E_REGFILE_CORRUPT 2148598843

#define SEVERITY_ERROR 1

#define MSDTC_E_DUPLICATE_RESOURCE 2148599553

#define SCARD_E_WRITE_TOO_MANY 2148532264

#define ERROR_DS_INVALID_DN_SYNTAX 8242

#define CO_E_NOMATCHINGSIDFOUND 2147549487

#define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE 14079

#define ERROR_INVALID_KEYBOARD_HANDLE 1457

#define ERROR_DS_LINK_ID_NOT_AVAILABLE 8577

#define WSA_QOS_ADMISSION_FAILURE 11010

#define WSA_E_CANCELLED 10111

#define CERTSRV_E_ARCHIVED_KEY_REQUIRED 2148091908

#define CO_E_EXCEEDSYSACLLIMIT 2147549497

#define RPC_E_INVALID_CALLDATA 2147549452

#define ERROR_TRANSPORT_FULL 4328

#define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY 8530

#define SEC_E_QOP_NOT_SUPPORTED 2148074250

#define RPC_S_OUT_OF_RESOURCES 1721

#define NTE_KEYSET_ENTRY_BAD 2148073498

#define RPC_S_CALLPENDING 2147549461

#define ERROR_EXCL_SEM_ALREADY_OWNED 101

#define RPC_E_INVALID_DATAPACKET 2147549193

#define ERROR_WMI_ALREADY_DISABLED 4212

#define DNS_ERROR_MASK 9000

#define ERROR_BAD_PIPE 230

#define ERROR_DS_SEC_DESC_INVALID 8354

#define DATA_S_FIRST 262448

#define DNS_ERROR_DATAFILE_PARSING 9655

#define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER 7013

#define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE 13839

#define CRYPT_E_ASN1_BADTAG 2148086027

#define ERROR_BROKEN_PIPE 109

#define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME 14027

#define NTE_DOUBLE_ENCRYPT 2148073490

#define CO_E_INIT_RPC_CHANNEL 2147500042

#define CRYPT_E_NO_VERIFY_USAGE_DLL 2148081703

#define ERROR_BUFFER_OVERFLOW 111

#define COMQC_E_APPLICATION_NOT_QUEUED 2148599296

#define ERROR_DESTINATION_ELEMENT_FULL 1161

#define ERROR_DEVICE_IN_USE 2404

#define ERROR_SXS_XML_E_BADCHARINSTRING 14034

#define OSS_ACCESS_SERIALIZATION_ERROR 2148085779

#define SCHED_S_TASK_RUNNING 267009

#define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 8572

#define CO_E_SERVER_START_TIMEOUT 2147500062

#define CERTSRV_E_INVALID_CA_CERTIFICATE 2148089861

#define ERROR_NO_SUCH_PACKAGE 1364

#define TYPE_E_NAMECONFLICT 2147647533

#define SCARD_W_UNPOWERED_CARD 2148532327

#define COMADMIN_E_CAT_WRONGAPPBITNESS 2148598916

#define XENROLL_E_CANNOT_ADD_ROOT_CERT 2148093953

#define ERROR_DS_GENERIC_ERROR 8341

#define ERROR_DRIVE_MEDIA_MISMATCH 4303

#define ERROR_NETNAME_DELETED 64

#define OSS_BERDER_DLL_NOT_LINKED 2148085802

#define XACT_E_WRONGUOW 2147799058

#define ERROR_DS_NOT_SUPPORTED_SORT_ORDER 8570

#define ERROR_ACTIVE_CONNECTIONS 2402

#define DNS_ERROR_ZONE_NOT_SECONDARY 9613

#define REGDB_S_LAST 262495

#define ERROR_UNABLE_TO_REMOVE_REPLACED 1175

#define ERROR_BAD_TOKEN_TYPE 1349

#define COMADMIN_E_COMPFILE_NOREGISTRAR 2148598836

#define ERROR_HOST_UNREACHABLE 1232

#define XACT_E_COMMITPREVENTED 2147799043

#define SCARD_E_NO_ACCESS 2148532263

#define ERROR_LICENSE_QUOTA_EXCEEDED 1395

#define ERROR_NO_PROMOTION_ACTIVE 8222

#define ERROR_INVALID_GROUPNAME 1209

#define ERROR_INVALID_SEGMENT_NUMBER 180

#define ERROR_DS_UNKNOWN_ERROR 8431

#define ERROR_PIPE_NOT_CONNECTED 233

#define CRYPT_E_CONTROL_TYPE 2148077580

#define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED 14016

#define ERROR_GENERIC_NOT_MAPPED 1360

#define ERROR_HANDLE_EOF 38

#define ERROR_EA_LIST_INCONSISTENT 255

#define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE 14042

#define ERROR_DS_CANT_MOD_SYSTEM_ONLY 8369

#define ERROR_DS_SCHEMA_ALLOC_FAILED 8415

#define ERROR_EA_ACCESS_DENIED 994

#define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX 8416

#define MK_S_REDUCED_TO_SELF 262626

#define ERROR_CLUSTER_NODE_DOWN 5050

#define CRYPT_E_ASN1_OVERFLOW 2148086023

#define NTE_BAD_PROVIDER 2148073491

#define ERROR_DS_SINGLE_VALUE_CONSTRAINT 8321

#define ERROR_SERVICE_NOT_IN_EXE 1083

#define COMADMIN_E_NOUSER 2148598799

#define ERROR_DS_DRA_DB_ERROR 8451

#define CRYPT_E_OSS_ERROR 2148085760

#define CRYPT_E_INVALID_IA5_STRING 2148081698

#define COMADMIN_E_CAN_NOT_EXPORT_SYS_APP 2148598860

#define ERROR_NO_VOLUME_LABEL 125

#define SPAPI_E_DI_POSTPROCESSING_REQUIRED 2148467238

#define RPC_S_INVALID_NETWORK_OPTIONS 1724

#define ERROR_INSTALL_PACKAGE_REJECTED 1625

#define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX 8377

#define ERROR_DS_CANT_MOVE_RESOURCE_GROUP 8499

#define SCARD_E_ICC_INSTALLATION 2148532256

#define ERROR_NON_DOMAIN_SID 1258

#define ERROR_CTX_NOT_CONSOLE 7038

#define ERROR_MUTUAL_AUTH_FAILED 1397

#define ERROR_UNABLE_TO_LOCK_MEDIA 1108

#define FRS_ERR_PARENT_INSUFFICIENT_PRIV 8009

#define E_UNEXPECTED 2147549183

#define ERROR_DS_NC_STILL_HAS_DSAS 8546

#define ERROR_OPEN_FILES 2401

#define ERROR_IO_PENDING 997

#define ERROR_INVALID_OPERATION 4317

#define ERROR_DUP_DOMAINNAME 1221

#define ERROR_DS_CHILDREN_EXIST 8332

#define ERROR_PRINT_CANCELLED 63

#define RPC_S_INVALID_NET_ADDR 1707

#define ERROR_DS_NAMING_VIOLATION 8247

#define ERROR_ALREADY_EXISTS 183

#define ERROR_NONPAGED_SYSTEM_RESOURCES 1451

#define COMADMIN_E_OBJECTINVALID 2148598786

#define ERROR_CLUSTER_INSTANCE_ID_MISMATCH 5893

#define DNS_ERROR_CNAME_LOOP 9707

#define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031

#define ERROR_CLEANER_CARTRIDGE_SPENT 4333

#define ERROR_ENVVAR_NOT_FOUND 203

#define ERROR_INVALID_COMBOBOX_MESSAGE 1422

#define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP 13809

#define CERTSRV_E_PROPERTY_EMPTY 2148089860

#define WSAEPROTONOSUPPORT 10043

#define CERTSRV_E_KEY_LENGTH 2148091921

#define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND 13009

#define WSAEDISCON 10101

#define ERROR_NO_SUCH_SITE 1249

#define FRS_ERR_SYSVOL_IS_BUSY 8015

#define SEC_E_CERT_EXPIRED 2148074280

#define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED 8231

#define ERROR_SAME_DRIVE 143

#define ERROR_LOGON_FAILURE 1326

#define ERROR_CLUSTER_NODE_UP 5056

#define SPAPI_E_NO_SUCH_INTERFACE_CLASS 2148467230

#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005

#define ERROR_INSTALL_NOTUSED 1634

#define ERROR_INVALID_MESSAGENAME 1217

#define MK_E_NOOBJECT 2147746277

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE 8495

#define ERROR_NOT_READY 21

#define ERROR_PRIVATE_DIALOG_INDEX 1415

#define ERROR_CTX_WINSTATION_NOT_FOUND 7022

#define ERROR_DEVICE_REMOVED 1617

#define ERROR_DS_INVALID_ROLE_OWNER 8366

#define REGDB_E_WRITEREGDB 2147746129

#define OSS_TYPE_NOT_SUPPORTED 2148085790

#define MK_S_LAST 262639

#define XACT_E_ALREADYOTHERSINGLEPHASE 2147799040

#define ERROR_INVALID_MEMBER 1388

#define ERROR_DS_CANT_REMOVE_CLASS_CACHE 8404

#define ERROR_INVALID_TABLE 1628

#define NTE_TEMPORARY_PROFILE 2148073508

#define ERROR_SXS_THREAD_QUERIES_DISABLED 14010

#define ERROR_SXS_XML_E_INVALIDENCODING 14067

#define CO_E_THREADPOOL_CONFIG 2147500081

#define ERROR_CURRENT_DOMAIN_NOT_ALLOWED 1399

#define ERROR_DS_SRC_NAME_MISMATCH 8484

#define ERROR_LOGON_NOT_GRANTED 1380

#define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116

#define ERROR_BAD_INHERITANCE_ACL 1340

#define NTE_BAD_HASH_STATE 2148073484

#define RPC_S_UNKNOWN_AUTHN_LEVEL 1748

#define ERROR_BAD_RECOVERY_POLICY 6012

#define DNS_ERROR_RCODE 9504

#define COMADMIN_E_CAT_INVALID_PARTITION_NAME 2148598872

#define COMADMIN_E_COMP_MOVE_LOCKED 2148598829

#define CS_E_PACKAGE_NOTFOUND 2147746148

#define WSA_QOS_RECEIVERS 11005

#define ERROR_DS_CONSTRUCTED_ATT_MOD 8475

#define ERROR_UNKNOWN_PORT 1796

#define ERROR_INVALID_FLAG_NUMBER 186

#define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD 8507

#define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM 13812

#define ERROR_RESMON_CREATE_FAILED 5017

#define DNS_ERROR_AXFR 9752

#define SEC_E_INSUFFICIENT_MEMORY 2148074240

#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809

#define ERROR_SERVICE_LOGON_FAILED 1069

#define ERROR_MORE_WRITES 1120

#define ERROR_PRINT_MONITOR_IN_USE 3008

#define SEC_E_INVALID_HANDLE 2148074241

#define COMADMIN_E_SYSTEMAPP 2148598835

#define ERROR_CLEANER_SLOT_SET 4331

#define COMADMIN_E_CANTCOPYFILE 2148598797

#define CRYPT_E_NO_DECRYPT_CERT 2148081676

#define ERROR_NOT_LOGGED_ON 1245

#define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH 8540

#define ERROR_SXS_XML_E_MISSINGEQUALS 14073

#define DRAGDROP_E_NOTREGISTERED 2147746048

#define XACT_E_DEST_TMNOTAVAILABLE 2147799074

#define ERROR_INSTALL_PACKAGE_VERSION 1613

#define ERROR_RESOURCE_NOT_ONLINE 5004

#define CO_E_IIDSTRING 2147746292

#define ERROR_SXS_WRONG_SECTION_TYPE 14009

#define RPC_S_SERVER_UNAVAILABLE 1722

#define CERTSRV_E_TEMPLATE_CONFLICT 2148091906

#define OSS_TOO_LONG 2148085776

#define SPAPI_E_SECTION_NOT_FOUND 2148466945

#define CO_E_FAILEDTOQUERYCLIENTBLANKET 2147549480

#define MSSIPOTF_E_FAILED_POLICY 2148102160

#define CO_E_NOT_SUPPORTED 2147500065

#define COMQC_E_NO_IPERSISTSTREAM 2148599299

#define RPC_S_ALREADY_LISTENING 1713

#define DNS_ERROR_DATAFILE_OPEN_FAILURE 9653

#define NTE_PERM 2148073488

#define DNS_ERROR_DP_DOES_NOT_EXIST 9901

#define WSANO_DATA 11004

#define RPC_E_DISCONNECTED 2147549448

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE 8579

#define ERROR_DS_NAME_TOO_LONG 8348

#define CRYPT_E_UNKNOWN_ALGO 2148077570

#define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET 14011

#define RPC_S_FP_UNDERFLOW 1770

#define ERROR_INVALID_LEVEL 124

#define ERROR_INVALID_VERIFY_SWITCH 118

#define ERROR_DIR_NOT_EMPTY 145

#define RPC_S_UNKNOWN_AUTHN_SERVICE 1747

#define MK_E_NOSTORAGE 2147746285

#define ERROR_DS_CANT_FIND_DSA_OBJ 8419

#define RPC_X_SS_HANDLES_MISMATCH 1778

#define SPAPI_E_DI_DO_DEFAULT 2148467214

#define RPC_E_INVALIDMETHOD 2147549447

#define RPC_E_SERVERCALL_REJECTED 2147549451

#define ERROR_NULL_LM_PASSWORD 1304

#define ERROR_CLUSTER_INVALID_REQUEST 5048

#define WSAESOCKTNOSUPPORT 10044

#define TRUST_E_PROVIDER_UNKNOWN 2148204545

#define ERROR_CTX_MODEM_INF_NOT_FOUND 7009

#define SPAPI_E_MACHINE_UNAVAILABLE 2148467234

#define CONTEXT_E_NOCONTEXT 2147803140

#define CLIPBRD_E_CANT_OPEN 2147746256

#define ERROR_DS_ATT_ALREADY_EXISTS 8318

#define ERROR_DS_NC_MUST_HAVE_NC_PARENT 8494

#define CO_E_NOTINITIALIZED 2147746288

#define ERROR_DS_DRA_CONNECTION_FAILED 8444

#define ERROR_SPECIAL_GROUP 1372

#define ERROR_RXACT_INVALID_STATE 1369

#define ERROR_DEVICE_NOT_PARTITIONED 1107

#define ERROR_DS_DUP_RDN 8378

#define FRS_ERR_STOPPING_SERVICE 8003

#define ERROR_RESOURCE_NAME_NOT_FOUND 1814

#define ERROR_DS_MISSING_FSMO_SETTINGS 8434

#define SCARD_E_UNKNOWN_RES_MNG 2148532267

#define ERROR_INVALID_FORM_NAME 1902

#define OSS_OUT_MEMORY 2148085768

#define ERROR_IOPL_NOT_ENABLED 197

#define ERROR_ACCESS_DISABLED_BY_POLICY 1260

#define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT 5088

#define SEC_E_CONTEXT_EXPIRED 2148074263

#define WSA_QOS_EFLOWDESC 11026

#define NTE_SYS_ERR 2148073505

#define ERROR_CTX_CLIENT_LICENSE_NOT_SET 7053

#define RPC_S_NO_PRINC_NAME 1822

#define ERROR_DS_NTDSCRIPT_PROCESS_ERROR 8592

#define ERROR_BUSY 170

#define RPC_S_PROCNUM_OUT_OF_RANGE 1745

#define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032

#define ERROR_IPSEC_IKE_PEER_CRL_FAILED 13848

#define SPAPI_E_INVALID_REG_PROPERTY 2148467209

#define MSSIPOTF_E_TABLE_CHECKSUM 2148102156

#define ERROR_IPSEC_IKE_LOAD_FAILED 13876

#define ERROR_SXS_XML_E_INVALID_UNICODE 14049

#define SPAPI_E_DEVINFO_NOT_REGISTERED 2148467208

#define ERROR_NO_USER_SESSION_KEY 1394

#define COMADMIN_E_APPLID_MATCHES_CLSID 2148598854

#define CRYPT_E_NO_REVOCATION_CHECK 2148081682

#define SCHED_S_TASK_DISABLED 267010

#define ERROR_DS_DRA_INCONSISTENT_DIT 8443

#define ERROR_DS_REFERRAL_LIMIT_EXCEEDED 8260

#define ERROR_UNKNOWN_PRINT_MONITOR 3000

#define CAT_E_CATIDNOEXIST 2147746144

#define ERROR_PASSWORD_MUST_CHANGE 1907

#define RPC_E_CLIENT_CANTMARSHAL_DATA 2147549195

#define CLIPBRD_E_CANT_EMPTY 2147746257

#define RPC_S_INVALID_ENDPOINT_FORMAT 1706

#define SCARD_E_PROTO_MISMATCH 2148532239

#define RPC_E_CANTCALLOUT_AGAIN 2147549201

#define STG_E_REVERTED 2147680514

#define ERROR_NOT_CHILD_WINDOW 1442

#define ERROR_DS_CANT_RETRIEVE_CHILD 8422

#define ERROR_DS_NOT_CLOSEST 8588

#define CO_E_ACTIVATIONFAILED 2147803169

#define ERROR_NET_WRITE_FAULT 88

#define WSAENOTCONN 10057

#define ERROR_IPSEC_IKE_ATTRIB_FAIL 13802

#define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA 8306

#define ERROR_IPSEC_IKE_INVALID_FILTER 13858

#define SEC_E_REVOCATION_OFFLINE_C 2148074323

#define ERROR_IPSEC_IKE_NO_POLICY 13825

#define CONVERT10_E_OLESTREAM_PUT 2147746241

#define DNS_ERROR_BAD_PACKET 9502

#define ERROR_DS_GOVERNSID_MISSING 8410

#define CACHE_S_LAST 262527

#define ERROR_INVALID_ACCEL_HANDLE 1403

#define OLE_E_LAST 2147746047

#define CERT_E_INVALID_NAME 2148204820

#define CRYPT_E_REVOKED 2148081680

#define SPAPI_E_INVALID_CLASS 2148467206

#define ERROR_REDIR_PAUSED 72

#define RPC_S_NO_ENTRY_NAME 1735

#define ERROR_CONTROLLING_IEPORT 4329

#define RPC_E_OUT_OF_RESOURCES 2147549441

#define OLE_S_FIRST 262144

#define CRYPT_E_AUTH_ATTR_MISSING 2148077574

#define MK_E_UNAVAILABLE 2147746275

#define OSS_COMPARATOR_CODE_NOT_LINKED 2148085797

#define ERROR_SXS_KEY_NOT_FOUND 14007

#define ERROR_MESSAGE_SYNC_ONLY 1159

#define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR 13842

#define COMADMIN_E_CANTRECYCLESERVICEAPPS 2148599825

#define ERROR_INVALID_PRIORITY 1800

#define CRYPT_I_NEW_PROTECTION_REQUIRED 593938

#define RPC_E_CANTTRANSMIT_CALL 2147549194

#define ERROR_CTX_LICENSE_CLIENT_INVALID 7055

#define COMADMIN_E_APP_FILE_WRITEFAIL 2148598791

#define CERTSRV_E_ENCODING_LENGTH 2148089863

#define ERROR_DOMAIN_CONTROLLER_EXISTS 1250

#define ERROR_UNABLE_TO_LOAD_MEDIUM 4324

#define TYPE_E_CANTLOADLIBRARY 2147654730

#define SCARD_E_UNKNOWN_CARD 2148532237

#define SCARD_W_CHV_BLOCKED 2148532332

#define DNS_ERROR_NODE_IS_CNAME 9708

#define SPAPI_E_BAD_INTERFACE_INSTALLSECT 2148467229

#define ERROR_DS_INVALID_SEARCH_FLAG 8500

#define DNS_ERROR_DS_UNAVAILABLE 9717

#define STG_E_BADBASEADDRESS 2147680528

#define ERROR_SETMARK_DETECTED 1103

#define ERROR_DIR_NOT_ROOT 144

#define ERROR_PROTOCOL_UNREACHABLE 1233

#define OSS_API_DLL_NOT_LINKED 2148085801

#define STG_E_OLDDLL 2147680517

#define DRAGDROP_E_ALREADYREGISTERED 2147746049

#define CO_E_LOOKUPACCNAMEFAILED 2147549490

#define SPAPI_E_SET_SYSTEM_RESTORE_POINT 2148467254

#define OSS_MUTEX_NOT_CREATED 2148085805

#define STG_S_MONITORING 197123

#define ERROR_NOT_ALL_ASSIGNED 1300

#define SEC_E_PKINIT_CLIENT_FAILURE 2148074324

#define ERROR_PRODUCT_VERSION 1638

#define ERROR_FULLSCREEN_MODE 1007

#define ERROR_DS_PDC_OPERATION_IN_PROGRESS 8490

#define ERROR_LOCK_FAILED 167

#define ERROR_IPSEC_IKE_DH_FAILURE 13864

#define RPC_S_OBJECT_NOT_FOUND 1710

#define ERROR_GROUP_NOT_FOUND 5013

#define ERROR_PRINTER_ALREADY_EXISTS 1802

#define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT 8582

#define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME 14022

#define SEC_E_ENCRYPT_FAILURE 2148074281

#define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM 8346

#define ERROR_DS_DRA_OBJ_NC_MISMATCH 8545

#define CO_E_NOIISINTRINSICS 2147803177

#define REGDB_S_FIRST 262480

#define ERROR_DS_DRA_GENERIC 8436

#define ERROR_RPL_NOT_ALLOWED 4006

#define TYPE_E_FIELDNOTFOUND 2147647511

#define ERROR_SXS_XML_E_UNCLOSEDTAG 14052

#define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE 8503

#define ERROR_DS_DUP_LDAP_DISPLAY_NAME 8382

#define ERROR_SXS_XML_E_MISSINGWHITESPACE 14037

#define CRYPT_E_ASN1_ERROR 2148086016

#define ERROR_CONNECTED_OTHER_PASSWORD 2108

#define RPC_E_SERVER_CANTMARSHAL_DATA 2147549197

#define COMADMIN_E_KEYMISSING 2148598787

#define DV_E_LINDEX 2147745896

#define XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND 2148093954

#define CERTSRV_E_ENROLL_DENIED 2148089873

#define XACT_E_PARTNER_NETWORK_TX_DISABLED 2147799077

#define ERROR_SXS_XML_E_BADSTARTNAMECHAR 14032

#define ERROR_BAD_PATHNAME 161

#define ERROR_DS_AUTHORIZATION_FAILED 8599

#define ERROR_IPSEC_IKE_QUEUE_DROP_MM 13811

#define ERROR_NO_SUCH_LOGON_SESSION 1312

#define DNS_ERROR_RCODE_NO_ERROR 0

#define CRYPT_E_REVOCATION_OFFLINE 2148081683

#define WSA_QOS_SENDERS 11006

#define FRS_ERR_INTERNAL_API 8004

#define SPAPI_E_SCE_DISABLED 2148467256

#define ERROR_DS_ILLEGAL_MOD_OPERATION 8311

#define MSSIPOTF_E_FILE_CHECKSUM 2148102157

#define ERROR_BAD_DESCRIPTOR_FORMAT 1361

#define CO_E_MSI_ERROR 2147500067

#define NTE_OP_OK 0

#define CO_E_CLRNOTAVAILABLE 2147500072

#define COMADMIN_E_CANTMAKEINPROCSERVICE 2148599828

#define ERROR_RESOURCE_NOT_FOUND 5007

#define MK_E_INVALIDEXTENSION 2147746278

#define SEC_E_OK 0

#define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE 9719

#define ERROR_NOT_LOCKED 158

#define ERROR_DIR_EFS_DISALLOWED 6010

#define FACILITY_DPLAY 21

#define ERROR_WINDOW_NOT_DIALOG 1420

#define CRYPT_E_NOT_FOUND 2148081668

#define ERROR_BAD_FORMAT 11

#define ERROR_ALL_NODES_NOT_AVAILABLE 5037

#define EVENT_E_NOT_ALL_REMOVED 2147746315

#define ERROR_FUNCTION_FAILED 1627

#define COMADMIN_E_START_APP_NEEDS_COMPONENTS 2148598856

#define WSAECANCELLED 10103

#define ERROR_ACCOUNT_RESTRICTION 1327

#define ERROR_DS_REFUSING_FSMO_ROLES 8433

#define ERROR_IPSEC_IKE_GETSPIFAIL 13857

#define ERROR_MENU_ITEM_NOT_FOUND 1456

#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908

#define CONTEXT_S_FIRST 319488

#define STG_E_TOOMANYOPENFILES 2147680260

#define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS 5075

#define ERROR_DS_OUT_OF_SCOPE 8338

#define ERROR_TOO_MANY_SEMAPHORES 100

#define ERROR_PRINTER_HAS_JOBS_QUEUED 3009

#define CRYPT_E_STREAM_INSUFFICIENT_DATA 2148077585

#define ERROR_OUTOFMEMORY 14

#define DNS_ERROR_INVALID_IP_ADDRESS 9552

#define SCARD_E_CERTIFICATE_UNAVAILABLE 2148532269

#define ERROR_DS_STRONG_AUTH_REQUIRED 8232

#define STG_E_INVALIDPOINTER 2147680265

#define XACT_E_LOGFULL 2147799066

#define ERROR_SXS_XML_E_INVALIDSWITCH 14068

#define XACT_E_XTIONEXISTS 2147799059

#define WSAEDQUOT 10069

#define ERROR_DS_DOMAIN_VERSION_TOO_LOW 8566

#define SEC_E_PKINIT_NAME_MISMATCH 2148074301

#define SEC_E_INCOMPLETE_MESSAGE 2148074264

#define OLEOBJ_S_FIRST 262528

#define ERROR_TOO_MANY_OPEN_FILES 4

#define ERROR_BAD_DRIVER 2001

#define TYPE_E_BUFFERTOOSMALL 2147647510

#define CO_E_RUNAS_CREATEPROCESS_FAILURE 2147500057

#define CO_E_ACCESSCHECKFAILED 2147549482

#define CO_E_TRUSTEEDOESNTMATCHCLIENT 2147549479

#define WSA_QOS_EOBJLENGTH 11022

#define ERROR_NO_SPOOL_SPACE 62

#define COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE 2148599821

#define ERROR_DS_OBJ_CLASS_VIOLATION 8212

#define SCARD_E_BAD_SEEK 2148532265

#define WSA_QOS_EPSFILTERSPEC 11028

#define COMADMIN_E_NOSERVERSHARE 2148598811

#define ERROR_SPL_NO_ADDJOB 3004

#define ERROR_DS_LOOP_DETECT 8246

#define COMADMIN_E_REGISTRARFAILED 2148598819

#define PERSIST_E_NOTSELFSIZING 2148204555

#define ERROR_CLUSTER_NODE_NOT_READY 5072

#define RPC_E_INVALID_EXTENSION 2147549458

#define ERROR_SECTOR_NOT_FOUND 27

#define COMADMIN_E_PROCESSALREADYRECYCLED 2148599826

#define FACILITY_CONFIGURATION 33

#define TYPE_E_CANTCREATETMPFILE 2147650723

#define RPC_S_INVALID_OBJECT 1900

#define RPC_S_INVALID_TAG 1733

#define ERROR_EXE_MARKED_INVALID 192

#define RPC_E_VERSION_MISMATCH 2147549456

#define ERROR_DELETE_PENDING 303

#define SEC_E_ILLEGAL_MESSAGE 2148074278

#define CO_E_CREATEPROCESS_FAILURE 2147500056

#define ERROR_DS_CANT_MOVE_DELETED_OBJECT 8489

#define SCARD_P_SHUTDOWN 2148532248

#define ERROR_MEDIA_INCOMPATIBLE 4315

#define DNS_ERROR_DP_ALREADY_EXISTS 9902

#define ERROR_PATH_NOT_FOUND 3

#define CO_E_WRONGTRUSTEENAMESYNTAX 2147549484

#define ERROR_CLEANER_CARTRIDGE_INSTALLED 4340

#define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS 5053

#define WSAENETUNREACH 10051

#define MARSHAL_E_LAST 2147746095

#define ERROR_CANT_DISABLE_MANDATORY 1310

#define CLASS_E_NOTLICENSED 2147746066

#define CONVERT10_E_FIRST 2147746240

#define ERROR_INTERNAL_DB_ERROR 1383

#define ERROR_CLUSTER_NO_SECURITY_CONTEXT 5059

#define DRAGDROP_E_LAST 2147746063

#define OSS_PDU_MISMATCH 2148085769

#define DISP_E_UNKNOWNINTERFACE 2147614721

#define ERROR_DISK_TOO_FRAGMENTED 302

#define RPC_S_SEC_PKG_ERROR 1825

#define CO_E_LOOKUPACCSIDFAILED 2147549488

#define SEC_I_CONTINUE_NEEDED 590610

#define CRYPT_E_NO_TRUSTED_SIGNER 2148081707

#define CONVERT10_S_FIRST 262592

#define ERROR_DS_CANT_REPLACE_HIDDEN_REC 8424

#define SEC_I_COMPLETE_AND_CONTINUE 590612

#define STG_E_UNKNOWN 2147680509

#define ERROR_FILE_NOT_ENCRYPTED 6007

#define SPAPI_E_NO_CLASSINSTALL_PARAMS 2148467221

#define ERROR_IPSEC_MM_POLICY_IN_USE 13005

#define CERTSRV_E_NO_REQUEST 2148089858

#define ERROR_TOO_MANY_MODULES 214

#define ERROR_IO_DEVICE 1117

#define SPAPI_E_CANT_REMOVE_DEVINST 2148467250

#define ERROR_IPSEC_IKE_NO_PRIVATE_KEY 13820

#define STG_E_INUSE 2147680512

#define SCARD_W_REMOVED_CARD 2148532329

#define ERROR_DS_SRC_AND_DST_NC_IDENTICAL 8485

#define ERROR_SXS_XML_E_UNCLOSEDSTRING 14062

#define ERROR_NO_PROC_SLOTS 89

#define ERROR_PRINTER_DRIVER_WARNED 3013

#define CERTSRV_E_RESTRICTEDOFFICER 2148089865

#define ERROR_INVALID_FIELD 1616

#define RPC_E_INVALID_HEADER 2147549457

#define COMADMIN_E_NOTCHANGEABLE 2148598826

#define RPC_S_SEND_INCOMPLETE 1913

#define RPC_E_SERVER_DIED 2147549191

#define ERROR_POINT_NOT_FOUND 1171

#define MK_E_NOTBOUND 2147746281

#define OLEOBJ_E_NOVERBS 2147746176

#define RPC_E_TIMEOUT 2147549471

#define MSSIPOTF_E_NOHEADTABLE 2148102147

#define OSS_UNIMPLEMENTED 2148085785

#define SPAPI_E_CLASS_MISMATCH 2148467201

#define ERROR_WRONG_PASSWORD 1323

#define ERROR_AUTODATASEG_EXCEEDS_64k 199

#define TYPE_E_OUTOFBOUNDS 2147650721

#define ERROR_INVALID_TIME 1901

#define RPC_S_NOT_CANCELLED 1826

#define SEC_E_SHUTDOWN_IN_PROGRESS 2148074303

#define INPLACE_E_NOTUNDOABLE 2147746208

#define ERROR_DS_MASTERDSA_REQUIRED 8314

#define ERROR_BAD_PROVIDER 1204

#define ERROR_BAD_ENVIRONMENT 10

#define ERROR_PATCH_PACKAGE_REJECTED 1643

#define DV_E_NOIVIEWOBJECT 2147745901

#define COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT 2148598861

#define ERROR_PARTITION_FAILURE 1105

#define ERROR_DS_CANT_ON_RDN 8214

#define ERROR_OPERATION_ABORTED 995

#define COMADMIN_E_COMP_MOVE_BAD_DEST 2148598830

#define CO_E_SERVER_NOT_PAUSED 2147500070

#define SEC_I_CONTEXT_EXPIRED 590615

#define DNS_WARNING_DOMAIN_UNDELETED 9716

#define ERROR_DS_AUX_CLS_TEST_FAIL 8389

#define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED 5077

#define ERROR_RESMON_INVALID_STATE 5084

#define SCHED_E_UNKNOWN_OBJECT_VERSION 2147750675

#define SCARD_W_WRONG_CHV 2148532331

#define ERROR_SERVICE_NO_THREAD 1054

#define ERROR_RXACT_COMMIT_FAILURE 1370

#define MSSIPOTF_E_BADVERSION 2148102165

#define CO_E_CONVERSIONFAILED 2147549486

#define ERROR_BUSY_DRIVE 142

#define CERTSRV_E_SUBJECT_DNS_REQUIRED 2148091919

#define ERROR_DS_SORT_CONTROL_MISSING 8261

#define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER 8519

#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061

#define ERROR_CTX_INVALID_PD 7002

#define ERROR_INVALID_CLEANER 4310

#define CO_E_SETSERLHNDLFAILED 2147549491

#define ERROR_INVALID_PRIMARY_GROUP 1308

#define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING 8474

#define TYPE_E_INCONSISTENTPROPFUNCS 2147654787

#define ERROR_INVALID_DWP_HANDLE 1405

#define CO_E_NETACCESSAPIFAILED 2147549483

#define ERROR_PROC_NOT_FOUND 127

#define CRYPT_E_NOT_IN_CTL 2148081706

#define CO_E_INIT_MEMORY_ALLOCATOR 2147500040

#define ERROR_FILEMARK_DETECTED 1101

#define OSS_CONSTRAINT_DLL_NOT_LINKED 2148085795

#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE 2147500048

#define ERROR_DOMAIN_LIMIT_EXCEEDED 1357

#define ERROR_DS_CANT_CACHE_ATT 8401

#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220

#define CO_E_SERVER_STOPPING 2148007944

#define ERROR_MEMBER_NOT_IN_GROUP 1321

#define ERROR_SERVICE_MARKED_FOR_DELETE 1072

#define CO_E_FAILEDTOGENUUID 2147549494

#define XACT_E_WRONGSTATE 2147799057

#define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205

#define ERROR_DS_SRC_SID_EXISTS_IN_FOREST 8539

#define COMADMIN_E_ROLEEXISTS 2148598796

#define SPAPI_E_GENERAL_SYNTAX 2148466691

#define DIGSIG_E_EXTENSIBILITY 2148204551

#define ERROR_DS_INAPPROPRIATE_MATCHING 8238

#define DRAGDROP_E_FIRST 2147746048

#define ERROR_DS_NCNAME_MISSING_CR_REF 8412

#define CO_S_FIRST 262640

#define XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH 2148093955

#define ERROR_TRUST_FAILURE 1790

#define MSSIPOTF_E_CANTGETOBJECT 2148102146

#define ERROR_NETWORK_BUSY 54

#define COMADMIN_E_PROGIDINUSEBYCLSID 2148599829

#define ERROR_DS_NOT_SUPPORTED 8256

#define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED 13860

#define E_ABORT 2147500036

#define RPC_S_BINDING_HAS_NO_AUTH 1746

#define DNS_ERROR_RCODE_NOTZONE 9010

#define ERROR_DS_NAME_NOT_UNIQUE 8571

#define RPC_S_INVALID_STRING_BINDING 1700

#define ERROR_DS_OBJ_GUID_EXISTS 8361

#define ERROR_CLUSTER_SHUTTING_DOWN 5022

#define SPAPI_E_EXPECTED_SECTION_NAME 2148466688

#define ERROR_HOOK_NOT_INSTALLED 1431

#define ERROR_INVALID_WINDOW_HANDLE 1400

#define WSAEINVAL 10022

#define XACT_S_LASTRESOURCEMANAGER 315408

#define ERROR_DS_UNAVAILABLE 8207

#define ERROR_PIPE_BUSY 231

#define SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE 2148467248

#define CO_E_REMOTE_COMMUNICATION_FAILURE 2147500061

#define FACILITY_WINDOWS 8

#define ERROR_REGISTRY_RECOVERED 1014

#define SCARD_W_UNSUPPORTED_CARD 2148532325

#define ERROR_DS_DRA_MISSING_PARENT 8460

#define XACT_S_SOMENORETAIN 315395

#define ERROR_INVALID_EA_NAME 254

#define ERROR_NOTIFY_ENUM_DIR 1022

#define ERROR_NO_DATA_DETECTED 1104

#define ERROR_DS_ATT_NOT_DEF_FOR_CLASS 8317

#define ERROR_DS_NAME_ERROR_NO_MAPPING 8472

#define ERROR_CTX_CLOSE_PENDING 7007

#define ERROR_LUIDS_EXHAUSTED 1334

#define SCHED_E_SERVICE_NOT_LOCALSYSTEM 6200

#define RPC_S_TYPE_ALREADY_REGISTERED 1712

#define ERROR_DS_OUT_OF_VERSION_STORE 8573

#define RPC_S_GRP_ELT_NOT_ADDED 1928

#define ERROR_SERVICE_DEPENDENCY_FAIL 1068

#define ERROR_CLIPPING_NOT_SUPPORTED 2005

#define ERROR_DOMAIN_EXISTS 1356

#define ERROR_PRINTER_DELETED 1905

#define COMADMIN_E_REMOTEINTERFACE 2148598809

#define CO_E_WRONGOSFORAPP 2147746298

#define COMADMIN_E_CAT_PARTITION_IN_USE 2148598873

#define OSS_OPEN_TYPE_ERROR 2148085804

#define SCARD_W_SECURITY_VIOLATION 2148532330

#define CONVERT10_E_OLESTREAM_GET 2147746240

#define ERROR_SXS_XML_E_UNCLOSEDCDATA 14065

#define ERROR_BAD_IMPERSONATION_LEVEL 1346

#define FACILITY_DISPATCH 2

#define ERROR_HOTKEY_NOT_REGISTERED 1419

#define ERROR_INSTALL_TRANSFORM_FAILURE 1624

#define ERROR_DS_PARENT_IS_AN_ALIAS 8330

#define ERROR_REVISION_MISMATCH 1306

#define OLEOBJ_S_LAST 262543

#define SEC_E_INVALID_TOKEN 2148074248

#define ERROR_RESOURCE_NOT_PRESENT 4316

#define ERROR_CTX_TD_ERROR 7017

#define ERROR_PAGEFILE_QUOTA 1454

#define DS_S_SUCCESS 0

#define RPC_S_INVALID_NAF_ID 1763

#define OLEOBJ_E_INVALIDVERB 2147746177

#define OSS_OUT_OF_RANGE 2148085793

#define STG_E_NOTFILEBASEDSTORAGE 2147680519

#define ERROR_UNABLE_TO_INVENTORY_SLOT 4326

#define WSA_QOS_ESDMODEOBJ 11029

#define NTE_NOT_FOUND 2148073489

#define STG_E_NOTSIMPLEFORMAT 2147680530

#define SCARD_F_WAITED_TOO_LONG 2148532231

#define ERROR_SXS_XML_E_MULTIPLE_COLONS 14046

#define RPC_S_UNKNOWN_AUTHN_TYPE 1741

#define MSSIPOTF_E_CRYPT 2148102164

#define ERROR_DIRECTORY 267

#define CERTSRV_E_TEMPLATE_POLICY_REQUIRED 2148091912

#define ERROR_META_EXPANSION_TOO_LONG 208

#define ERROR_DS_NAME_ERROR_NOT_FOUND 8470

#define ERROR_SERVICE_NOT_FOUND 1243

#define FACILITY_STORAGE 3

#define ERROR_SERVER_HAS_OPEN_HANDLES 1811

#define SEC_E_CANNOT_PACK 2148074249

#define COMADMIN_E_PROPERTY_OVERFLOW 2148598844

#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633

#define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE 2148467226

#define ERROR_SCREEN_ALREADY_LOCKED 1440

#define MSSIPOTF_E_FAILED_HINTS_CHECK 2148102161

#define ERROR_DS_DOMAIN_VERSION_TOO_HIGH 8564

#define ERROR_INVALID_DRIVE_OBJECT 4321

#define SPAPI_E_DEVINFO_LIST_LOCKED 2148467218

#define ERROR_EFS_SERVER_NOT_TRUSTED 6011

#define ERROR_INVALID_CURSOR_HANDLE 1402

#define COMADMIN_E_APP_NOT_RUNNING 2148599818

#define ERROR_CTX_INVALID_WD 7049

#define ERROR_IPSEC_MM_POLICY_NOT_FOUND 13004

#define ERROR_DS_NO_REQUESTED_ATTS_FOUND 8308

#define PERSIST_E_SIZEDEFINITE 2148204553

#define ERROR_ARENA_TRASHED 7

#define RPC_S_NOT_ALL_OBJS_EXPORTED 1923

#define STG_E_INCOMPLETE 2147680769

#define WSA_QOS_BAD_STYLE 11012

#define DNS_ERROR_NO_ZONE_INFO 9602

#define ERROR_DATABASE_BACKUP_CORRUPT 5087

#define NTE_BAD_SIGNATURE 2148073478

#define DV_E_CLIPFORMAT 2147745898

#define ERROR_DS_TIMELIMIT_EXCEEDED 8226

#define XACT_E_COMMITFAILED 2147799042

#define WSAEHOSTDOWN 10064

#define ERROR_ALLOTTED_SPACE_EXCEEDED 1344

#define DRAGDROP_S_FIRST 262400

#define CLASS_E_CLASSNOTAVAILABLE 2147746065

#define SCARD_E_ICC_CREATEORDER 2148532257

#define DNS_ERROR_INVALID_NAME 123

#define ERROR_DEVICE_REQUIRES_CLEANING 1165

#define DISP_E_EXCEPTION 2147614729

#define MK_E_NEEDGENERIC 2147746274

#define ERROR_DS_ALIASED_OBJ_MISSING 8334

#define CS_E_SCHEMA_MISMATCH 2147746158

#define DNS_ERROR_SECURE_BASE 9800

#define SCARD_E_SHARING_VIOLATION 2148532235

#define ERROR_DS_COULDNT_CONTACT_FSMO 8367

#define ERROR_SERVER_SHUTDOWN_IN_PROGRESS 1255

#define WSAEPROTOTYPE 10041

#define ERROR_DS_CANT_CACHE_CLASS 8402

#define ERROR_BAD_NETPATH 53

#define ERROR_ARITHMETIC_OVERFLOW 534

#define ERROR_CTX_PD_NOT_FOUND 7003

#define ERROR_DS_CANT_CREATE_UNDER_SCHEMA 8510

#define CERTSRV_E_BAD_TEMPLATE_VERSION 2148091911

#define ERROR_EFS_DISABLED 6015

#define ERROR_LOGON_TYPE_NOT_GRANTED 1385

#define XACT_E_NORESOURCE 2147799052

#define ERROR_SXS_XML_E_MISSINGROOT 14057

#define ERROR_DS_DRA_BUSY 8438

#define CACHE_S_FORMATETC_NOTSUPPORTED 262512

#define ERROR_NO_EFS 6004

#define ERROR_IPSEC_IKE_INVALID_COOKIE 13846

#define RPC_S_INCOMPLETE_NAME 1755

#define ERROR_DATABASE_FAILURE 4313

#define CERTSRV_E_NO_VALID_KRA 2148089867

#define ERROR_SXS_MANIFEST_FORMAT_ERROR 14004

#define ERROR_DS_NOT_AN_OBJECT 8352

#define COMADMIN_E_COMPFILE_DOESNOTEXIST 2148598820

#define MSSIPOTF_E_FILETOOSMALL 2148102155

#define SEC_E_KDC_UNABLE_TO_REFER 2148074305

#define ERROR_SXS_XML_E_UNBALANCEDPAREN 14040

#define WSA_QOS_NO_SENDERS 11007

#define ERROR_IPSEC_IKE_INVALID_HEADER 13824

#define CERT_E_CRITICAL 2148204805

#define WSA_QOS_ESHAPERATEOBJ 11030

#define XACT_S_FIRST 315392

#define TRUST_E_NOSIGNATURE 2148204800

#define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED 8429

#define SEC_E_INCOMPLETE_CREDENTIALS 2148074272

#define COMADMIN_E_OBJECTNOTPOOLABLE 2148598847

#define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED 5079

#define DV_E_DVTARGETDEVICE 2147745893

#define ERROR_JOURNAL_HOOK_SET 1430

#define SEC_E_UNSUPPORTED_PREAUTH 2148074307

#define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA 4330

#define XACT_E_NOENLIST 2147799050

#define ERROR_EAS_DIDNT_FIT 275

#define DISP_E_BADVARTYPE 2147614728

#define ERROR_CANNOT_OPEN_PROFILE 1205

#define RPC_X_NO_MORE_ENTRIES 1772

#define ERROR_SXS_CANT_GEN_ACTCTX 14001

#define OSS_CANT_CLOSE_TRACE_FILE 2148085806

#define COMADMIN_E_OBJECT_PARENT_MISSING 2148599816

#define ERROR_PATCH_PACKAGE_UNSUPPORTED 1637

#define SPAPI_E_DEVICE_INTERFACE_REMOVED 2148467228

#define DATA_S_LAST 262463

#define ERROR_CLUSTER_IPADDR_IN_USE 5057

#define ERROR_DLL_INIT_FAILED 1114

#define ERROR_CANCELLED 1223

#define ERROR_INSTALL_LOG_FAILURE 1622

#define ERROR_SXS_XML_E_INTERNALERROR 14041

#define ERROR_CANTOPEN 1011

#define COMADMIN_E_AMBIGUOUS_APPLICATION_NAME 2148598876

#define CO_E_FIRST 2147746288

#define ERROR_INVALID_LOGON_TYPE 1367

#define CERT_E_UNTRUSTEDROOT 2148204809

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT 13835

#define ERROR_INVALID_MONITOR_HANDLE 1461

#define ERROR_NO_TRUST_SAM_ACCOUNT 1787

#define ERROR_CREATE_FAILED 1631

#define ERROR_SUCCESS 0

#define CERT_E_REVOCATION_FAILURE 2148204814

#define XACT_E_INVALIDLSN 2147799172

#define ERROR_NOT_FOUND 1168

#define DNS_ERROR_ZONE_REQUIRES_MASTER_IP 9620

typedef struct tm tm, *Ptm;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
};

typedef long clock_t;

#define CLOCKS_PER_SEC 1000

#define CLK_TCK 1000

typedef struct tagRECONVERTSTRING tagRECONVERTSTRING, *PtagRECONVERTSTRING;

typedef struct tagRECONVERTSTRING *LPRECONVERTSTRING;

struct tagRECONVERTSTRING {
    DWORD dwSize;
    DWORD dwVersion;
    DWORD dwStrLen;
    DWORD dwStrOffset;
    DWORD dwCompStrLen;
    DWORD dwCompStrOffset;
    DWORD dwTargetStrLen;
    DWORD dwTargetStrOffset;
};

typedef struct HIMCC__ HIMCC__, *PHIMCC__;

struct HIMCC__ {
    int unused;
};

typedef struct tagCANDIDATEFORM tagCANDIDATEFORM, *PtagCANDIDATEFORM;

typedef struct tagCANDIDATEFORM CANDIDATEFORM;

struct tagCANDIDATEFORM {
    DWORD dwIndex;
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct tagREGISTERWORDA tagREGISTERWORDA, *PtagREGISTERWORDA;

typedef struct tagREGISTERWORDA *NPREGISTERWORDA;

typedef NPREGISTERWORDA NPREGISTERWORD;

struct tagREGISTERWORDA {
    LPSTR lpReading;
    LPSTR lpWord;
};

typedef struct tagIMEMENUITEMINFOA tagIMEMENUITEMINFOA, *PtagIMEMENUITEMINFOA;

typedef struct tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;

struct tagIMEMENUITEMINFOA {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    CHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct tagIMEMENUITEMINFOW tagIMEMENUITEMINFOW, *PtagIMEMENUITEMINFOW;

typedef struct tagIMEMENUITEMINFOW IMEMENUITEMINFOW;

struct tagIMEMENUITEMINFOW {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    WCHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct HIMC__ HIMC__, *PHIMC__;

typedef struct HIMC__ *HIMC;

typedef BOOL (*IMCENUMPROC)(HIMC, LPARAM);

struct HIMC__ {
    int unused;
};

typedef struct tagREGISTERWORDW tagREGISTERWORDW, *PtagREGISTERWORDW;

typedef struct tagREGISTERWORDW *NPREGISTERWORDW;

struct tagREGISTERWORDW {
    LPWSTR lpReading;
    LPWSTR lpWord;
};

typedef struct tagIMECHARPOSITION tagIMECHARPOSITION, *PtagIMECHARPOSITION;

typedef struct tagIMECHARPOSITION *NPIMECHARPOSITION;

struct tagIMECHARPOSITION {
    DWORD dwSize;
    DWORD dwCharPos;
    POINT pt;
    UINT cLineHeight;
    RECT rcDocument;
};

typedef struct tagREGISTERWORDA *LPREGISTERWORDA;

typedef struct tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;

typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO;

typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFOA;

typedef struct tagRECONVERTSTRING RECONVERTSTRING;

typedef struct tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;

typedef struct tagCANDIDATELIST tagCANDIDATELIST, *PtagCANDIDATELIST;

typedef struct tagCANDIDATELIST CANDIDATELIST;

struct tagCANDIDATELIST {
    DWORD dwSize;
    DWORD dwStyle;
    DWORD dwCount;
    DWORD dwSelection;
    DWORD dwPageStart;
    DWORD dwPageSize;
    DWORD dwOffset[1];
};

typedef struct tagIMEMENUITEMINFOA *NPIMEMENUITEMINFOA;

typedef struct tagREGISTERWORDA *PREGISTERWORDA;

typedef PREGISTERWORDA PREGISTERWORD;

typedef struct tagCANDIDATELIST *NPCANDIDATELIST;

typedef struct tagSTYLEBUFA tagSTYLEBUFA, *PtagSTYLEBUFA;

struct tagSTYLEBUFA {
    DWORD dwStyle;
    CHAR szDescription[32];
};

typedef struct tagCOMPOSITIONFORM tagCOMPOSITIONFORM, *PtagCOMPOSITIONFORM;

typedef struct tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;

struct tagCOMPOSITIONFORM {
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct tagCOMPOSITIONFORM COMPOSITIONFORM;

typedef struct tagIMEMENUITEMINFOW *NPIMEMENUITEMINFOW;

typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO;

typedef struct tagREGISTERWORDA REGISTERWORDA;

typedef REGISTERWORDA REGISTERWORD;

typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO;

typedef struct tagSTYLEBUFA *LPSTYLEBUFA;

typedef LPSTYLEBUFA LPSTYLEBUF;

typedef struct tagRECONVERTSTRING *PRECONVERTSTRING;

typedef IMEMENUITEMINFOA IMEMENUITEMINFO;

typedef struct tagCANDIDATELIST *LPCANDIDATELIST;

typedef struct tagRECONVERTSTRING *NPRECONVERTSTRING;

typedef struct tagSTYLEBUFA *PSTYLEBUFA;

typedef PSTYLEBUFA PSTYLEBUF;

typedef struct tagREGISTERWORDW *LPREGISTERWORDW;

typedef struct tagSTYLEBUFW tagSTYLEBUFW, *PtagSTYLEBUFW;

struct tagSTYLEBUFW {
    DWORD dwStyle;
    WCHAR szDescription[32];
};

typedef struct tagCOMPOSITIONFORM *NPCOMPOSITIONFORM;

typedef struct tagSTYLEBUFA *NPSTYLEBUFA;

typedef struct tagSTYLEBUFW *PSTYLEBUFW;

typedef struct tagIMECHARPOSITION IMECHARPOSITION;

typedef struct tagIMECHARPOSITION *PIMECHARPOSITION;

typedef struct tagSTYLEBUFA STYLEBUFA;

typedef STYLEBUFA STYLEBUF;

typedef int (*REGISTERWORDENUMPROCA)(LPCSTR, DWORD, LPCSTR, LPVOID);

typedef NPSTYLEBUFA NPSTYLEBUF;

typedef LPREGISTERWORDA LPREGISTERWORD;

typedef struct tagCANDIDATEFORM *PCANDIDATEFORM;

typedef struct tagSTYLEBUFW *NPSTYLEBUFW;

typedef struct tagIMECHARPOSITION *LPIMECHARPOSITION;

typedef struct tagCANDIDATEFORM *LPCANDIDATEFORM;

typedef struct tagCANDIDATELIST *PCANDIDATELIST;

typedef struct tagSTYLEBUFW STYLEBUFW;

typedef struct HIMCC__ *HIMCC;

typedef struct tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;

typedef struct tagSTYLEBUFW *LPSTYLEBUFW;

typedef struct tagCANDIDATEFORM *NPCANDIDATEFORM;

typedef struct HKL__ HKL__, *PHKL__;

typedef struct HKL__ *HKL;

typedef HKL *LPHKL;

struct HKL__ {
    int unused;
};

typedef struct tagCOMPOSITIONFORM *PCOMPOSITIONFORM;

typedef int (*REGISTERWORDENUMPROCW)(LPCWSTR, DWORD, LPCWSTR, LPVOID);

typedef struct tagREGISTERWORDW *PREGISTERWORDW;

typedef struct tagREGISTERWORDW REGISTERWORDW;

#define IME_REGWORD_STYLE_EUDC 1

#define SCS_SETSTR 9

#define IME_HOTKEY_PRIVATE_LAST 543

#define IME_PROP_COMPLETE_ON_UNSELECT 1048576

#define IMR_RECONVERTSTRING 4

#define IMN_SETCANDIDATEPOS 9

#define IMN_SETSTATUSWINDOWPOS 12

#define IGIMII_CMODE 1

#define IMFT_SUBMENU 4

#define IME_SMODE_AUTOMATIC 4

#define IME_CHOTKEY_IME_NONIME_TOGGLE 16

#define GL_ID_CANNOTSAVE 17

#define CS_NOMOVECARET 16384

#define IME_CMODE_ALPHANUMERIC 0

#define IME_KHOTKEY_SHAPE_TOGGLE 80

#define IMN_CLOSECANDIDATE 4

#define GL_ID_INPUTSYMBOL 39

#define ATTR_FIXEDCONVERTED 5

#define IGP_PROPERTY 4

#define IME_CMODE_HANGUL 1

#define IMC_CLOSESTATUSWINDOW 33

#define GCS_DELTASTART 256

#define IMFS_GRAYED 3

#define IMN_PRIVATE 14

#define GCL_REVERSE_LENGTH 3

#define IGIMII_CONFIGURE 4

#define IME_CMODE_FULLSHAPE 8

#define GL_LEVEL_ERROR 2

#define IME_ITHOTKEY_RESEND_RESULTSTR 512

#define CFS_CANDIDATEPOS 64

#define IMC_OPENSTATUSWINDOW 34

#define SCS_CAP_SETRECONVERTSTRING 4

#define IMN_OPENSTATUSWINDOW 2

#define GCS_COMPCLAUSE 32

#define SCS_CAP_MAKEREAD 2

#define GL_ID_NOCONVERT 32

#define IGIMII_TOOLS 8

#define GL_ID_CHOOSECANDIDATE 40

#define IME_ITHOTKEY_RECONVERTSTRING 515

#define CPS_COMPLETE 1

#define MOD_IGNORE_ALL_MODIFIER 1024

#define GCS_COMPREADATTR 2

#define IME_ESC_MAX_KEY 4101

#define IMFT_RADIOCHECK 1

#define ISC_SHOWUICANDIDATEWINDOW 1

#define GGL_LEVEL 1

#define GL_ID_INPUTRADICAL 37

#define SOFTKEYBOARD_TYPE_T1 1

#define IMN_OPENCANDIDATE 5

#define NI_CLOSECANDIDATE 17

#define IMFS_DEFAULT 4096

#define IACE_IGNORENOCONTEXT 32

#define IGIMII_HELP 16

#define IME_CAND_CODE 2

#define IMN_GUIDELINE 13

#define IME_HOTKEY_PRIVATE_FIRST 512

#define IMN_SETOPENSTATUS 8

#define GL_ID_NODICTIONARY 16

#define NI_OPENCANDIDATE 16

#define IME_PROP_SPECIAL_UI 131072

#define IME_PROP_CANDLIST_START_FROM_1 262144

#define IME_ITHOTKEY_PREVIOUS_COMPOSITION 513

#define IME_ITHOTKEY_UISTYLE_TOGGLE 514

#define IME_ESC_GETHELPFILENAME 4107

#define UI_CAP_ROTANY 4

#define CPS_CONVERT 2

#define IMC_GETSTATUSWINDOWPOS 15

#define IME_CMODE_ROMAN 16

#define IMEMENUITEM_STRING_SIZE 80

#define IMN_CHANGECANDIDATE 3

#define ATTR_INPUT_ERROR 4

#define STYLE_DESCRIPTION_SIZE 32

#define MOD_ON_KEYUP 2048

#define GL_ID_PRIVATE_FIRST 32768

#define GL_LEVEL_FATAL 1

#define IMFS_DISABLED 3

#define IMC_GETCANDIDATEPOS 7

#define IME_THOTKEY_SHAPE_TOGGLE 113

#define IME_ESC_SYNC_HOTKEY 4103

#define GCS_RESULTREADSTR 512

#define IME_ESC_RESERVED_FIRST 4

#define IMC_GETCOMPOSITIONFONT 9

#define ATTR_TARGET_CONVERTED 1

#define GCL_CONVERSION 1

#define MOD_RIGHT 16384

#define IME_THOTKEY_IME_NONIME_TOGGLE 112

#define IMR_CANDIDATEWINDOW 2

#define GCL_REVERSECONVERSION 2

#define IGIMII_OTHER 32

#define IME_ESC_SET_EUDC_DICTIONARY 4100

#define GL_ID_PRIVATE_LAST 65535

#define IMN_CLOSESTATUSWINDOW 1

#define IME_ESC_AUTOMATA 4105

#define GCS_COMPREADCLAUSE 4

#define IMR_COMPOSITIONFONT 3

#define IMFS_ENABLED 0

#define IMC_SETCOMPOSITIONFONT 10

#define IME_CMODE_NOCONVERSION 256

#define IMR_CONFIRMRECONVERTSTRING 5

#define IGIMIF_RIGHTMENU 1

#define ISC_SHOWUIALL 3221225487

#define IGIMII_INPUTTOOLS 64

#define SCS_CHANGECLAUSE 36

#define CS_INSERTCHAR 8192

#define IGP_SELECT 24

#define CFS_DEFAULT 0

#define IMFS_HILITE 128

#define IGP_SETCOMPSTR 20

#define IGP_SENTENCE 12

#define IMFS_UNCHECKED 0

#define IME_KHOTKEY_HANJACONVERT 81

#define IMFS_UNHILITE 0

#define IMN_SETCOMPOSITIONWINDOW 11

#define IMC_SETSTATUSWINDOWPOS 16

#define IME_CMODE_KATAKANA 2

#define IME_HOTKEY_DSWITCH_FIRST 256

#define IMFS_CHECKED 8

#define IME_CHOTKEY_SHAPE_TOGGLE 17

#define IGP_CONVERSION 8

#define CFS_POINT 2

#define GL_ID_TOOMANYSTROKE 34

#define GL_LEVEL_WARNING 3

#define IGP_GETIMEVERSION -4

#define CFS_FORCE_POSITION 32

#define IME_REGWORD_STYLE_USER_FIRST 2147483648

#define IMFT_SEPARATOR 2

#define IME_JHOTKEY_CLOSE_OPEN 48

#define IME_ESC_PRIVATE_FIRST 2048

#define IME_CMODE_JAPANESE 1

#define IME_CAND_READ 1

#define CFS_RECT 1

#define IME_CHOTKEY_SYMBOL_TOGGLE 18

#define IME_HOTKEY_DSWITCH_LAST 287

#define IME_ESC_SEQUENCE_TO_INTERNAL 4097

#define GL_ID_READINGCONFLICT 35

#define GL_ID_REVERSECONVERSION 41

#define SCS_CHANGEATTR 18

#define IACE_DEFAULT 16

#define GCS_COMPREADSTR 1

#define SELECT_CAP_CONVERSION 1

#define IME_ESC_GET_EUDC_DICTIONARY 4099

#define GGL_PRIVATE 4

#define IGP_UI 16

#define IME_CONFIG_GENERAL 1

#define IME_CAND_UNKNOWN 0

#define SOFTKEYBOARD_TYPE_C1 2

#define ISC_SHOWUIGUIDELINE 1073741824

#define IMC_SETCANDIDATEPOS 8

#define IMR_COMPOSITIONWINDOW 1

#define IME_THOTKEY_SYMBOL_TOGGLE 114

#define CPS_CANCEL 4

#define IME_CMODE_SOFTKBD 128

#define GL_ID_NOMODULE 1

#define IME_CMODE_HANJACONVERT 64

#define IMEVER_0310 196618

#define IME_KHOTKEY_ENGLISH 82

#define IME_CAND_RADICAL 4

#define ATTR_CONVERTED 2

#define IGIMII_SMODE 2

#define IMN_SETCONVERSIONMODE 6

#define ISC_SHOWUIALLCANDIDATEWINDOW 15

#define SCS_CAP_COMPSTR 1

#define IME_SMODE_NONE 0

#define UI_CAP_ROT90 2

#define ISC_SHOWUICOMPOSITIONWINDOW 2147483648

#define GGL_INDEX 2

#define GL_ID_UNKNOWN 0

#define NI_COMPOSITIONSTR 21

#define GCS_COMPSTR 8

#define NI_FINALIZECONVERSIONRESULT 20

#define IMR_QUERYCHARPOSITION 6

#define IME_SMODE_CONVERSATION 16

#define GCS_RESULTREADCLAUSE 1024

#define IME_CMODE_FIXED 2048

#define IME_SMODE_PLAURALCLAUSE 1

#define IME_ESC_HANJA_MODE 4104

#define IME_ESC_QUERY_SUPPORT 3

#define IME_PROP_AT_CARET 65536

#define MOD_LEFT 32768

#define IME_CMODE_SYMBOL 1024

#define IME_CONFIG_REGISTERWORD 2

#define ATTR_INPUT 0

#define IME_CAND_STROKE 5

#define IME_CMODE_LANGUAGE 3

#define NI_SETCANDIDATE_PAGESIZE 23

#define IACE_CHILDREN 1

#define GL_LEVEL_NOGUIDELINE 0

#define IMM_ERROR_GENERAL -2

#define CFS_EXCLUDE 128

#define IME_ESC_IME_NAME 4102

#define GCS_COMPATTR 16

#define GL_ID_TYPINGERROR 33

#define IME_PROP_UNICODE 524288

#define SELECT_CAP_SENTENCE 2

#define IME_CMODE_CHARCODE 32

#define GL_ID_INPUTCODE 38

#define IMN_SETSENTENCEMODE 7

#define NI_CHANGECANDIDATELIST 19

#define GCS_RESULTSTR 2048

#define IME_ESC_RESERVED_LAST 2047

#define IME_CMODE_CHINESE 1

#define IME_CMODE_NATIVE 1

#define GL_LEVEL_INFORMATION 4

#define IME_CMODE_HANGEUL 1

#define IME_CAND_MEANING 3

#define UI_CAP_2700 1

#define SCS_SETRECONVERTSTRING 65536

#define CPS_REVERT 3

#define IME_CONFIG_SELECTDICTIONARY 3

#define IME_SMODE_SINGLECONVERT 2

#define GCS_CURSORPOS 128

#define NI_IMEMENUSELECTED 24

#define GL_ID_INPUTREADING 36

#define NI_SELECTCANDIDATESTR 18

#define NI_SETCANDIDATE_PAGESTART 22

#define IME_REGWORD_STYLE_USER_LAST 4294967295

#define IME_SMODE_PHRASEPREDICT 8

#define SCS_QUERYRECONVERTSTRING 131072

#define ATTR_TARGET_NOTCONVERTED 3

#define GCS_RESULTCLAUSE 4096

#define GGL_STRING 3

#define IME_ESC_PRIVATE_HOTKEY 4106

#define IMM_ERROR_NODATA -1

#define IMC_GETCOMPOSITIONWINDOW 11

#define IMEVER_0400 262144

#define IMN_SETCOMPOSITIONFONT 10

#define IMR_DOCUMENTFEED 7

#define IME_CMODE_EUDC 512

#define IME_ESC_PRIVATE_LAST 4095

#define IMC_SETCOMPOSITIONWINDOW 12

#define D3DX_DEFAULT 4294967295

typedef struct _VIDEOPARAMETERS _VIDEOPARAMETERS, *P_VIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS *PVIDEOPARAMETERS;

typedef uchar UCHAR;

struct _VIDEOPARAMETERS {
    GUID Guid;
    ULONG dwOffset;
    ULONG dwCommand;
    ULONG dwFlags;
    ULONG dwMode;
    ULONG dwTVStandard;
    ULONG dwAvailableModes;
    ULONG dwAvailableTVStandard;
    ULONG dwFlickerFilter;
    ULONG dwOverScanX;
    ULONG dwOverScanY;
    ULONG dwMaxUnscaledX;
    ULONG dwMaxUnscaledY;
    ULONG dwPositionX;
    ULONG dwPositionY;
    ULONG dwBrightness;
    ULONG dwContrast;
    ULONG dwCPType;
    ULONG dwCPCommand;
    ULONG dwCPStandard;
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;
    UCHAR bOEMCopyProtection[256];
};

typedef struct _VIDEOPARAMETERS *LPVIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS VIDEOPARAMETERS;

#define VP_CP_CMD_CHANGE 4

#define VP_FLAGS_POSITION 32

#define VP_CP_CMD_ACTIVATE 1

#define VP_FLAGS_FLICKER 4

#define VP_FLAGS_MAX_UNSCALED 16

#define VP_TV_STANDARD_PAL_H 16

#define VP_TV_STANDARD_SECAM_K 4096

#define VP_TV_STANDARD_PAL_I 32

#define VP_TV_STANDARD_PAL_G 131072

#define VP_TV_STANDARD_SECAM_H 2048

#define VP_TV_STANDARD_PAL_D 8

#define VP_TV_STANDARD_PAL_B 4

#define VP_CP_TYPE_APS_TRIGGER 1

#define VP_TV_STANDARD_SECAM_L 16384

#define VP_TV_STANDARD_PAL_N 128

#define VP_TV_STANDARD_PAL_M 64

#define VP_MODE_WIN_GRAPHICS 1

#define VP_CP_TYPE_MACROVISION 2

#define VP_FLAGS_TV_MODE 1

#define VP_TV_STANDARD_NTSC_433 65536

#define VP_CP_CMD_DEACTIVATE 2

#define VP_FLAGS_CONTRAST 128

#define VP_TV_STANDARD_WIN_VGA 32768

#define VP_FLAGS_COPYPROTECT 256

#define VP_TV_STANDARD_SECAM_K1 8192

#define VP_COMMAND_GET 1

#define VP_COMMAND_SET 2

#define VP_FLAGS_BRIGHTNESS 64

#define VP_MODE_TV_PLAYBACK 2

#define VP_TV_STANDARD_SECAM_B 256

#define VP_TV_STANDARD_SECAM_G 1024

#define VP_TV_STANDARD_PAL_60 262144

#define VP_TV_STANDARD_SECAM_D 512

#define VP_TV_STANDARD_NTSC_M 1

#define VP_TV_STANDARD_SECAM_L1 524288

#define VP_TV_STANDARD_NTSC_M_J 2

#define VP_FLAGS_OVERSCAN 8

#define VP_FLAGS_TV_STANDARD 2

typedef struct tagSAFEARRAY tagSAFEARRAY, *PtagSAFEARRAY;

typedef struct tagSAFEARRAY SAFEARRAY;

typedef struct tagSAFEARRAYBOUND tagSAFEARRAYBOUND, *PtagSAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[1];
};

typedef struct ITypeInfoVtbl ITypeInfoVtbl, *PITypeInfoVtbl;

typedef struct ITypeInfo ITypeInfo, *PITypeInfo;

typedef struct tagTYPEATTR tagTYPEATTR, *PtagTYPEATTR;

typedef struct tagTYPEATTR TYPEATTR;

typedef struct ITypeComp ITypeComp, *PITypeComp;

typedef struct tagFUNCDESC tagFUNCDESC, *PtagFUNCDESC;

typedef struct tagFUNCDESC FUNCDESC;

typedef struct tagVARDESC tagVARDESC, *PtagVARDESC;

typedef struct tagVARDESC VARDESC;

typedef LONG DISPID;

typedef DISPID MEMBERID;

typedef OLECHAR *BSTR;

typedef DWORD HREFTYPE;

typedef struct tagDISPPARAMS tagDISPPARAMS, *PtagDISPPARAMS;

typedef struct tagDISPPARAMS DISPPARAMS;

typedef struct tagVARIANT tagVARIANT, *PtagVARIANT;

typedef struct tagVARIANT VARIANT;

typedef struct tagEXCEPINFO tagEXCEPINFO, *PtagEXCEPINFO;

typedef struct tagEXCEPINFO EXCEPINFO;

typedef enum tagINVOKEKIND {
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
} tagINVOKEKIND;

typedef enum tagINVOKEKIND INVOKEKIND;

typedef struct ITypeLib ITypeLib, *PITypeLib;

typedef enum tagTYPEKIND {
    TKIND_ENUM=0,
    TKIND_RECORD=1,
    TKIND_MODULE=2,
    TKIND_INTERFACE=3,
    TKIND_DISPATCH=4,
    TKIND_COCLASS=5,
    TKIND_ALIAS=6,
    TKIND_UNION=7,
    TKIND_MAX=8
} tagTYPEKIND;

typedef enum tagTYPEKIND TYPEKIND;

typedef struct tagTYPEDESC tagTYPEDESC, *PtagTYPEDESC;

typedef struct tagTYPEDESC TYPEDESC;

typedef struct tagIDLDESC tagIDLDESC, *PtagIDLDESC;

typedef struct tagIDLDESC IDLDESC;

typedef struct ITypeCompVtbl ITypeCompVtbl, *PITypeCompVtbl;

typedef enum tagDESCKIND {
    DESCKIND_NONE=0,
    DESCKIND_FUNCDESC=1,
    DESCKIND_VARDESC=2,
    DESCKIND_TYPECOMP=3,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5
} tagDESCKIND;

typedef enum tagDESCKIND DESCKIND;

typedef union tagBINDPTR tagBINDPTR, *PtagBINDPTR;

typedef union tagBINDPTR BINDPTR;

typedef LONG SCODE;

typedef struct tagELEMDESC tagELEMDESC, *PtagELEMDESC;

typedef struct tagELEMDESC ELEMDESC;

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL=0,
    FUNC_PUREVIRTUAL=1,
    FUNC_NONVIRTUAL=2,
    FUNC_STATIC=3,
    FUNC_DISPATCH=4
} tagFUNCKIND;

typedef enum tagFUNCKIND FUNCKIND;

typedef enum tagCALLCONV {
    CC_FASTCALL=0,
    CC_CDECL=1,
    CC_MSCPASCAL=2,
    CC_PASCAL=3,
    CC_MACPASCAL=4,
    CC_STDCALL=5,
    CC_FPFASTCALL=6,
    CC_SYSCALL=7,
    CC_MPWCDECL=8,
    CC_MPWPASCAL=9,
    CC_MAX=10
} tagCALLCONV;

typedef enum tagCALLCONV CALLCONV;

typedef union _union_2112 _union_2112, *P_union_2112;

typedef enum tagVARKIND {
    VAR_PERINSTANCE=0,
    VAR_STATIC=1,
    VAR_CONST=2,
    VAR_DISPATCH=3
} tagVARKIND;

typedef enum tagVARKIND VARKIND;

typedef VARIANT VARIANTARG;

typedef union _union_2084 _union_2084, *P_union_2084;

typedef struct ITypeLibVtbl ITypeLibVtbl, *PITypeLibVtbl;

typedef struct tagTLIBATTR tagTLIBATTR, *PtagTLIBATTR;

typedef struct tagTLIBATTR TLIBATTR;

typedef union _union_2092 _union_2092, *P_union_2092;

typedef ushort VARTYPE;

typedef union _union_2103 _union_2103, *P_union_2103;

typedef struct _struct_2085 _struct_2085, *P_struct_2085;

typedef struct tagDEC tagDEC, *PtagDEC;

typedef struct tagDEC DECIMAL;

typedef enum tagSYSKIND {
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_MAC=2,
    SYS_WIN64=3
} tagSYSKIND;

typedef enum tagSYSKIND SYSKIND;

typedef struct tagARRAYDESC tagARRAYDESC, *PtagARRAYDESC;

typedef struct tagPARAMDESC tagPARAMDESC, *PtagPARAMDESC;

typedef struct tagPARAMDESC PARAMDESC;

typedef union _union_2086 _union_2086, *P_union_2086;

typedef union _union_1274 _union_1274, *P_union_1274;

typedef union _union_1276.conflict _union_1276.conflict, *P_union_1276.conflict;

typedef struct tagPARAMDESCEX tagPARAMDESCEX, *PtagPARAMDESCEX;

typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

typedef short VARIANT_BOOL;

typedef union tagCY tagCY, *PtagCY;

typedef union tagCY CY;

typedef double DATE;

typedef struct IDispatch IDispatch, *PIDispatch;

typedef struct _struct_2087 _struct_2087, *P_struct_2087;

typedef struct _struct_1275 _struct_1275, *P_struct_1275;

typedef struct _struct_1277.conflict _struct_1277.conflict, *P_struct_1277.conflict;

typedef struct _struct_1272 _struct_1272, *P_struct_1272;

typedef struct IDispatchVtbl IDispatchVtbl, *PIDispatchVtbl;

typedef struct IRecordInfo IRecordInfo, *PIRecordInfo;

typedef struct IRecordInfoVtbl IRecordInfoVtbl, *PIRecordInfoVtbl;

struct _struct_1272 {
    ulong Lo;
    long Hi;
};

union tagCY {
    struct _struct_1272 field0;
    LONGLONG int64;
};

union _union_2092 {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
};

struct tagTYPEDESC {
    union _union_2092 field0_0x0;
    VARTYPE vt;
};

struct tagIDLDESC {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
};

struct tagPARAMDESC {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
};

union _union_2103 {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
};

struct tagELEMDESC {
    TYPEDESC tdesc;
    union _union_2103 field1_0x8;
};

struct tagFUNCDESC {
    MEMBERID memid;
    SCODE *lprgscode;
    ELEMDESC *lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
};

struct _struct_2087 {
    PVOID pvRecord;
    struct IRecordInfo *pRecInfo;
};

union _union_2086 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
    struct _struct_2087 field43;
};

struct _struct_2085 {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    union _union_2086 field4_0x8;
};

union _union_2112 {
    ULONG oInst;
    VARIANT *lpvarValue;
};

struct tagVARDESC {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union _union_2112 field2_0x8;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
};

struct ITypeCompVtbl {
    HRESULT (*QueryInterface)(struct ITypeComp *, IID *, void **);
    ULONG (*AddRef)(struct ITypeComp *);
    ULONG (*Release)(struct ITypeComp *);
    HRESULT (*Bind)(struct ITypeComp *, LPOLESTR, ULONG, WORD, struct ITypeInfo **, DESCKIND *, BINDPTR *);
    HRESULT (*BindType)(struct ITypeComp *, LPOLESTR, ULONG, struct ITypeInfo **, struct ITypeComp **);
};

struct tagTLIBATTR {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
};

struct tagARRAYDESC {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[1];
};

struct IRecordInfo {
    struct IRecordInfoVtbl *lpVtbl;
};

struct _struct_1277.conflict {
    ULONG Lo32;
    ULONG Mid32;
};

struct tagTYPEATTR {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
};

struct tagDISPPARAMS {
    VARIANTARG *rgvarg;
    DISPID *rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
};

union _union_1276.conflict {
    struct _struct_1277.conflict field0;
    ULONGLONG Lo64;
};

union tagBINDPTR {
    FUNCDESC *lpfuncdesc;
    VARDESC *lpvardesc;
    struct ITypeComp *lptcomp;
};

struct IDispatch {
    struct IDispatchVtbl *lpVtbl;
};

struct IDispatchVtbl {
    HRESULT (*QueryInterface)(struct IDispatch *, IID *, void **);
    ULONG (*AddRef)(struct IDispatch *);
    ULONG (*Release)(struct IDispatch *);
    HRESULT (*GetTypeInfoCount)(struct IDispatch *, UINT *);
    HRESULT (*GetTypeInfo)(struct IDispatch *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct _struct_1275 {
    BYTE scale;
    BYTE sign;
};

union _union_1274 {
    struct _struct_1275 field0;
    USHORT signscale;
};

struct tagDEC {
    USHORT wReserved;
    union _union_1274 field1_0x2;
    ULONG Hi32;
    union _union_1276.conflict field3_0x8;
};

union _union_2084 {
    struct _struct_2085 field0;
    DECIMAL decVal;
};

struct tagVARIANT {
    union _union_2084 field0_0x0;
};

struct tagPARAMDESCEX {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
};

struct ITypeInfoVtbl {
    HRESULT (*QueryInterface)(struct ITypeInfo *, IID *, void **);
    ULONG (*AddRef)(struct ITypeInfo *);
    ULONG (*Release)(struct ITypeInfo *);
    HRESULT (*GetTypeAttr)(struct ITypeInfo *, TYPEATTR **);
    HRESULT (*GetTypeComp)(struct ITypeInfo *, struct ITypeComp **);
    HRESULT (*GetFuncDesc)(struct ITypeInfo *, UINT, FUNCDESC **);
    HRESULT (*GetVarDesc)(struct ITypeInfo *, UINT, VARDESC **);
    HRESULT (*GetNames)(struct ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (*GetRefTypeOfImplType)(struct ITypeInfo *, UINT, HREFTYPE *);
    HRESULT (*GetImplTypeFlags)(struct ITypeInfo *, UINT, INT *);
    HRESULT (*GetIDsOfNames)(struct ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (*Invoke)(struct ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*GetDocumentation)(struct ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetDllEntry)(struct ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (*GetRefTypeInfo)(struct ITypeInfo *, HREFTYPE, struct ITypeInfo **);
    HRESULT (*AddressOfMember)(struct ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (*CreateInstance)(struct ITypeInfo *, struct IUnknown *, IID *, PVOID *);
    HRESULT (*GetMops)(struct ITypeInfo *, MEMBERID, BSTR *);
    HRESULT (*GetContainingTypeLib)(struct ITypeInfo *, struct ITypeLib **, UINT *);
    void (*ReleaseTypeAttr)(struct ITypeInfo *, TYPEATTR *);
    void (*ReleaseFuncDesc)(struct ITypeInfo *, FUNCDESC *);
    void (*ReleaseVarDesc)(struct ITypeInfo *, VARDESC *);
};

struct ITypeLibVtbl {
    HRESULT (*QueryInterface)(struct ITypeLib *, IID *, void **);
    ULONG (*AddRef)(struct ITypeLib *);
    ULONG (*Release)(struct ITypeLib *);
    UINT (*GetTypeInfoCount)(struct ITypeLib *);
    HRESULT (*GetTypeInfo)(struct ITypeLib *, UINT, struct ITypeInfo **);
    HRESULT (*GetTypeInfoType)(struct ITypeLib *, UINT, TYPEKIND *);
    HRESULT (*GetTypeInfoOfGuid)(struct ITypeLib *, GUID *, struct ITypeInfo **);
    HRESULT (*GetLibAttr)(struct ITypeLib *, TLIBATTR **);
    HRESULT (*GetTypeComp)(struct ITypeLib *, struct ITypeComp **);
    HRESULT (*GetDocumentation)(struct ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*IsName)(struct ITypeLib *, LPOLESTR, ULONG, BOOL *);
    HRESULT (*FindName)(struct ITypeLib *, LPOLESTR, ULONG, struct ITypeInfo **, MEMBERID *, USHORT *);
    void (*ReleaseTLibAttr)(struct ITypeLib *, TLIBATTR *);
};

struct ITypeComp {
    struct ITypeCompVtbl *lpVtbl;
};

struct IRecordInfoVtbl {
    HRESULT (*QueryInterface)(struct IRecordInfo *, IID *, void **);
    ULONG (*AddRef)(struct IRecordInfo *);
    ULONG (*Release)(struct IRecordInfo *);
    HRESULT (*RecordInit)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordClear)(struct IRecordInfo *, PVOID);
    HRESULT (*RecordCopy)(struct IRecordInfo *, PVOID, PVOID);
    HRESULT (*GetGuid)(struct IRecordInfo *, GUID *);
    HRESULT (*GetName)(struct IRecordInfo *, BSTR *);
    HRESULT (*GetSize)(struct IRecordInfo *, ULONG *);
    HRESULT (*GetTypeInfo)(struct IRecordInfo *, struct ITypeInfo **);
    HRESULT (*GetField)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNoCopy)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *, PVOID *);
    HRESULT (*PutField)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*PutFieldNoCopy)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (*GetFieldNames)(struct IRecordInfo *, ULONG *, BSTR *);
    BOOL (*IsMatchingType)(struct IRecordInfo *, struct IRecordInfo *);
    PVOID (*RecordCreate)(struct IRecordInfo *);
    HRESULT (*RecordCreateCopy)(struct IRecordInfo *, PVOID, PVOID *);
    HRESULT (*RecordDestroy)(struct IRecordInfo *, PVOID);
};

struct ITypeLib {
    struct ITypeLibVtbl *lpVtbl;
};

struct ITypeInfo {
    struct ITypeInfoVtbl *lpVtbl;
};

struct tagEXCEPINFO {
    WORD wCode;
    WORD wReserved;
    BSTR bstrSource;
    BSTR bstrDescription;
    BSTR bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (*pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
};

typedef struct _wireVARIANT _wireVARIANT, *P_wireVARIANT;

typedef union _union_2090 _union_2090, *P_union_2090;

typedef struct _FLAGGED_WORD_BLOB _FLAGGED_WORD_BLOB, *P_FLAGGED_WORD_BLOB;

typedef struct _FLAGGED_WORD_BLOB FLAGGED_WORD_BLOB;

typedef FLAGGED_WORD_BLOB *wireBSTR;

typedef struct _wireSAFEARRAY _wireSAFEARRAY, *P_wireSAFEARRAY;

typedef struct _wireSAFEARRAY *wireSAFEARRAY;

typedef wireSAFEARRAY *wirePSAFEARRAY;

typedef struct _wireBRECORD _wireBRECORD, *P_wireBRECORD;

typedef struct _wireBRECORD *wireBRECORD;

typedef struct _wireVARIANT *wireVARIANT;

typedef struct _wireSAFEARRAY_UNION _wireSAFEARRAY_UNION, *P_wireSAFEARRAY_UNION;

typedef struct _wireSAFEARRAY_UNION SAFEARRAYUNION;

typedef union __MIDL_IOleAutomationTypes_0001 __MIDL_IOleAutomationTypes_0001, *P__MIDL_IOleAutomationTypes_0001;

typedef struct _wireSAFEARR_BSTR _wireSAFEARR_BSTR, *P_wireSAFEARR_BSTR;

typedef struct _wireSAFEARR_BSTR SAFEARR_BSTR;

typedef struct _wireSAFEARR_UNKNOWN _wireSAFEARR_UNKNOWN, *P_wireSAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_UNKNOWN SAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_DISPATCH _wireSAFEARR_DISPATCH, *P_wireSAFEARR_DISPATCH;

typedef struct _wireSAFEARR_DISPATCH SAFEARR_DISPATCH;

typedef struct _wireSAFEARR_VARIANT _wireSAFEARR_VARIANT, *P_wireSAFEARR_VARIANT;

typedef struct _wireSAFEARR_VARIANT SAFEARR_VARIANT;

typedef struct _wireSAFEARR_BRECORD _wireSAFEARR_BRECORD, *P_wireSAFEARR_BRECORD;

typedef struct _wireSAFEARR_BRECORD SAFEARR_BRECORD;

typedef struct _wireSAFEARR_HAVEIID _wireSAFEARR_HAVEIID, *P_wireSAFEARR_HAVEIID;

typedef struct _wireSAFEARR_HAVEIID SAFEARR_HAVEIID;

typedef struct _BYTE_SIZEDARR _BYTE_SIZEDARR, *P_BYTE_SIZEDARR;

typedef struct _BYTE_SIZEDARR BYTE_SIZEDARR;

typedef struct _SHORT_SIZEDARR _SHORT_SIZEDARR, *P_SHORT_SIZEDARR;

typedef struct _SHORT_SIZEDARR WORD_SIZEDARR;

typedef struct _LONG_SIZEDARR _LONG_SIZEDARR, *P_LONG_SIZEDARR;

typedef struct _LONG_SIZEDARR DWORD_SIZEDARR;

typedef struct _HYPER_SIZEDARR _HYPER_SIZEDARR, *P_HYPER_SIZEDARR;

typedef struct _HYPER_SIZEDARR HYPER_SIZEDARR;

typedef double hyper;

struct _BYTE_SIZEDARR {
    ulong clSize;
    byte *pData;
};

struct _wireSAFEARR_UNKNOWN {
    ULONG Size;
    struct IUnknown **apUnknown;
};

struct _LONG_SIZEDARR {
    ulong clSize;
    ulong *pData;
};

struct _wireSAFEARR_VARIANT {
    ULONG Size;
    wireVARIANT *aVariant;
};

struct _wireSAFEARR_HAVEIID {
    ULONG Size;
    struct IUnknown **apUnknown;
    IID iid;
};

struct _wireSAFEARR_DISPATCH {
    ULONG Size;
    struct IDispatch **apDispatch;
};

struct _SHORT_SIZEDARR {
    ulong clSize;
    ushort *pData;
};

struct _wireSAFEARR_BRECORD {
    ULONG Size;
    wireBRECORD *aRecord;
};

struct _wireSAFEARR_BSTR {
    ULONG Size;
    wireBSTR *aBstr;
};

struct _HYPER_SIZEDARR {
    ulong clSize;
    hyper *pData;
};

union __MIDL_IOleAutomationTypes_0001 {
    SAFEARR_BSTR BstrStr;
    SAFEARR_UNKNOWN UnknownStr;
    SAFEARR_DISPATCH DispatchStr;
    SAFEARR_VARIANT VariantStr;
    SAFEARR_BRECORD RecordStr;
    SAFEARR_HAVEIID HaveIidStr;
    BYTE_SIZEDARR ByteStr;
    WORD_SIZEDARR WordStr;
    DWORD_SIZEDARR LongStr;
    HYPER_SIZEDARR HyperStr;
};

struct _wireSAFEARRAY_UNION {
    ULONG sfType;
    union __MIDL_IOleAutomationTypes_0001 u;
};

union _union_2090 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    wireBSTR bstrVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    wirePSAFEARRAY parray;
    wireBRECORD brecVal;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    wireBSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    wirePSAFEARRAY *pparray;
    wireVARIANT *pvarVal;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL decVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
};

struct _wireVARIANT {
    DWORD clSize;
    DWORD rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    union _union_2090 field6_0x10;
};

struct _wireSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    SAFEARRAYUNION uArrayStructs;
    SAFEARRAYBOUND rgsabound[1];
};

struct _FLAGGED_WORD_BLOB {
    ulong fFlags;
    ulong clSize;
    ushort asData[1];
};

struct _wireBRECORD {
    ULONG fFlags;
    ULONG clSize;
    struct IRecordInfo *pRecInfo;
    byte *pRecord;
};

typedef struct IPropertyBag IPropertyBag, *PIPropertyBag;

typedef struct IPropertyBagVtbl IPropertyBagVtbl, *PIPropertyBagVtbl;

typedef struct IErrorLog IErrorLog, *PIErrorLog;

typedef struct IErrorLogVtbl IErrorLogVtbl, *PIErrorLogVtbl;

struct IErrorLog {
    struct IErrorLogVtbl *lpVtbl;
};

struct IPropertyBag {
    struct IPropertyBagVtbl *lpVtbl;
};

struct IPropertyBagVtbl {
    HRESULT (*QueryInterface)(struct IPropertyBag *, IID *, void **);
    ULONG (*AddRef)(struct IPropertyBag *);
    ULONG (*Release)(struct IPropertyBag *);
    HRESULT (*Read)(struct IPropertyBag *, LPCOLESTR, VARIANT *, struct IErrorLog *);
    HRESULT (*Write)(struct IPropertyBag *, LPCOLESTR, VARIANT *);
};

struct IErrorLogVtbl {
    HRESULT (*QueryInterface)(struct IErrorLog *, IID *, void **);
    ULONG (*AddRef)(struct IErrorLog *);
    ULONG (*Release)(struct IErrorLog *);
    HRESULT (*AddError)(struct IErrorLog *, LPCOLESTR, EXCEPINFO *);
};

typedef struct ICreateTypeInfo2Vtbl ICreateTypeInfo2Vtbl, *PICreateTypeInfo2Vtbl;

typedef struct ICreateTypeInfo2 ICreateTypeInfo2, *PICreateTypeInfo2;

struct ICreateTypeInfo2Vtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeInfo2 *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeInfo2 *);
    ULONG (*Release)(struct ICreateTypeInfo2 *);
    HRESULT (*SetGuid)(struct ICreateTypeInfo2 *, GUID *);
    HRESULT (*SetTypeFlags)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*SetDocString)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeInfo2 *, DWORD);
    HRESULT (*SetVersion)(struct ICreateTypeInfo2 *, WORD, WORD);
    HRESULT (*AddRefTypeInfo)(struct ICreateTypeInfo2 *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (*AddFuncDesc)(struct ICreateTypeInfo2 *, UINT, FUNCDESC *);
    HRESULT (*AddImplType)(struct ICreateTypeInfo2 *, UINT, HREFTYPE);
    HRESULT (*SetImplTypeFlags)(struct ICreateTypeInfo2 *, UINT, INT);
    HRESULT (*SetAlignment)(struct ICreateTypeInfo2 *, WORD);
    HRESULT (*SetSchema)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (*AddVarDesc)(struct ICreateTypeInfo2 *, UINT, VARDESC *);
    HRESULT (*SetFuncAndParamNames)(struct ICreateTypeInfo2 *, UINT, LPOLESTR *, UINT);
    HRESULT (*SetVarName)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetTypeDescAlias)(struct ICreateTypeInfo2 *, TYPEDESC *);
    HRESULT (*DefineFuncAsDllEntry)(struct ICreateTypeInfo2 *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (*SetFuncDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetVarDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (*SetFuncHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (*SetVarHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (*SetMops)(struct ICreateTypeInfo2 *, UINT, BSTR);
    HRESULT (*SetTypeIdldesc)(struct ICreateTypeInfo2 *, IDLDESC *);
    HRESULT (*LayOut)(struct ICreateTypeInfo2 *);
    HRESULT (*DeleteFuncDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*DeleteFuncDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID, INVOKEKIND);
    HRESULT (*DeleteVarDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*DeleteVarDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID);
    HRESULT (*DeleteImplType)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (*SetCustData)(struct ICreateTypeInfo2 *, GUID *, VARIANT *);
    HRESULT (*SetFuncCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetParamCustData)(struct ICreateTypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (*SetVarCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetImplTypeCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*SetHelpStringContext)(struct ICreateTypeInfo2 *, ULONG);
    HRESULT (*SetFuncHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (*SetVarHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (*Invalidate)(struct ICreateTypeInfo2 *);
    HRESULT (*SetName)(struct ICreateTypeInfo2 *, LPOLESTR);
};

struct ICreateTypeInfo2 {
    struct ICreateTypeInfo2Vtbl *lpVtbl;
};

typedef struct ITypeMarshalVtbl ITypeMarshalVtbl, *PITypeMarshalVtbl;

typedef struct ITypeMarshal ITypeMarshal, *PITypeMarshal;

struct ITypeMarshal {
    struct ITypeMarshalVtbl *lpVtbl;
};

struct ITypeMarshalVtbl {
    HRESULT (*QueryInterface)(struct ITypeMarshal *, IID *, void **);
    ULONG (*AddRef)(struct ITypeMarshal *);
    ULONG (*Release)(struct ITypeMarshal *);
    HRESULT (*Size)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG *);
    HRESULT (*Marshal)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG, BYTE *, ULONG *);
    HRESULT (*Unmarshal)(struct ITypeMarshal *, PVOID, DWORD, ULONG, BYTE *, ULONG *);
    HRESULT (*Free)(struct ITypeMarshal *, PVOID);
};

typedef struct tagTYPEATTR *LPTYPEATTR;

typedef struct ISupportErrorInfoVtbl ISupportErrorInfoVtbl, *PISupportErrorInfoVtbl;

typedef struct ISupportErrorInfo ISupportErrorInfo, *PISupportErrorInfo;

struct ISupportErrorInfo {
    struct ISupportErrorInfoVtbl *lpVtbl;
};

struct ISupportErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct ISupportErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct ISupportErrorInfo *);
    ULONG (*Release)(struct ISupportErrorInfo *);
    HRESULT (*InterfaceSupportsErrorInfo)(struct ISupportErrorInfo *, IID *);
};

typedef struct ITypeChangeEvents ITypeChangeEvents, *PITypeChangeEvents;

typedef struct ITypeChangeEventsVtbl ITypeChangeEventsVtbl, *PITypeChangeEventsVtbl;

typedef enum tagCHANGEKIND {
    CHANGEKIND_ADDMEMBER=0,
    CHANGEKIND_DELETEMEMBER=1,
    CHANGEKIND_SETNAMES=2,
    CHANGEKIND_SETDOCUMENTATION=3,
    CHANGEKIND_GENERAL=4,
    CHANGEKIND_INVALIDATE=5,
    CHANGEKIND_CHANGEFAILED=6,
    CHANGEKIND_MAX=7
} tagCHANGEKIND;

typedef enum tagCHANGEKIND CHANGEKIND;

struct ITypeChangeEvents {
    struct ITypeChangeEventsVtbl *lpVtbl;
};

struct ITypeChangeEventsVtbl {
    HRESULT (*QueryInterface)(struct ITypeChangeEvents *, IID *, void **);
    ULONG (*AddRef)(struct ITypeChangeEvents *);
    ULONG (*Release)(struct ITypeChangeEvents *);
    HRESULT (*RequestTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR, INT *);
    HRESULT (*AfterTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR);
};

typedef struct ITypeLib *LPTYPELIB;

typedef SAFEARRAY *LPSAFEARRAY;

typedef union tagBINDPTR *LPBINDPTR;

typedef struct ICreateTypeLib ICreateTypeLib, *PICreateTypeLib;

typedef struct ICreateTypeLibVtbl ICreateTypeLibVtbl, *PICreateTypeLibVtbl;

typedef struct ICreateTypeInfo ICreateTypeInfo, *PICreateTypeInfo;

typedef struct ICreateTypeInfoVtbl ICreateTypeInfoVtbl, *PICreateTypeInfoVtbl;

struct ICreateTypeLibVtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeLib *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeLib *);
    ULONG (*Release)(struct ICreateTypeLib *);
    HRESULT (*CreateTypeInfo)(struct ICreateTypeLib *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo **);
    HRESULT (*SetName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetVersion)(struct ICreateTypeLib *, WORD, WORD);
    HRESULT (*SetGuid)(struct ICreateTypeLib *, GUID *);
    HRESULT (*SetDocString)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetHelpFileName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeLib *, DWORD);
    HRESULT (*SetLcid)(struct ICreateTypeLib *, LCID);
    HRESULT (*SetLibFlags)(struct ICreateTypeLib *, UINT);
    HRESULT (*SaveAllChanges)(struct ICreateTypeLib *);
};

struct ICreateTypeInfoVtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeInfo *);
    ULONG (*Release)(struct ICreateTypeInfo *);
    HRESULT (*SetGuid)(struct ICreateTypeInfo *, GUID *);
    HRESULT (*SetTypeFlags)(struct ICreateTypeInfo *, UINT);
    HRESULT (*SetDocString)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeInfo *, DWORD);
    HRESULT (*SetVersion)(struct ICreateTypeInfo *, WORD, WORD);
    HRESULT (*AddRefTypeInfo)(struct ICreateTypeInfo *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (*AddFuncDesc)(struct ICreateTypeInfo *, UINT, FUNCDESC *);
    HRESULT (*AddImplType)(struct ICreateTypeInfo *, UINT, HREFTYPE);
    HRESULT (*SetImplTypeFlags)(struct ICreateTypeInfo *, UINT, INT);
    HRESULT (*SetAlignment)(struct ICreateTypeInfo *, WORD);
    HRESULT (*SetSchema)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (*AddVarDesc)(struct ICreateTypeInfo *, UINT, VARDESC *);
    HRESULT (*SetFuncAndParamNames)(struct ICreateTypeInfo *, UINT, LPOLESTR *, UINT);
    HRESULT (*SetVarName)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetTypeDescAlias)(struct ICreateTypeInfo *, TYPEDESC *);
    HRESULT (*DefineFuncAsDllEntry)(struct ICreateTypeInfo *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (*SetFuncDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetVarDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (*SetFuncHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (*SetVarHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (*SetMops)(struct ICreateTypeInfo *, UINT, BSTR);
    HRESULT (*SetTypeIdldesc)(struct ICreateTypeInfo *, IDLDESC *);
    HRESULT (*LayOut)(struct ICreateTypeInfo *);
};

struct ICreateTypeInfo {
    struct ICreateTypeInfoVtbl *lpVtbl;
};

struct ICreateTypeLib {
    struct ICreateTypeLibVtbl *lpVtbl;
};

typedef struct tagCUSTDATAITEM tagCUSTDATAITEM, *PtagCUSTDATAITEM;

struct tagCUSTDATAITEM {
    GUID guid;
    VARIANTARG varValue;
};

typedef struct IEnumVARIANT IEnumVARIANT, *PIEnumVARIANT;

typedef struct IEnumVARIANT *LPENUMVARIANT;

typedef struct IEnumVARIANTVtbl IEnumVARIANTVtbl, *PIEnumVARIANTVtbl;

struct IEnumVARIANT {
    struct IEnumVARIANTVtbl *lpVtbl;
};

struct IEnumVARIANTVtbl {
    HRESULT (*QueryInterface)(struct IEnumVARIANT *, IID *, void **);
    ULONG (*AddRef)(struct IEnumVARIANT *);
    ULONG (*Release)(struct IEnumVARIANT *);
    HRESULT (*Next)(struct IEnumVARIANT *, ULONG, VARIANT *, ULONG *);
    HRESULT (*Skip)(struct IEnumVARIANT *, ULONG);
    HRESULT (*Reset)(struct IEnumVARIANT *);
    HRESULT (*Clone)(struct IEnumVARIANT *, struct IEnumVARIANT **);
};

typedef struct IErrorInfo IErrorInfo, *PIErrorInfo;

typedef struct IErrorInfoVtbl IErrorInfoVtbl, *PIErrorInfoVtbl;

struct IErrorInfo {
    struct IErrorInfoVtbl *lpVtbl;
};

struct IErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct IErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct IErrorInfo *);
    ULONG (*Release)(struct IErrorInfo *);
    HRESULT (*GetGUID)(struct IErrorInfo *, GUID *);
    HRESULT (*GetSource)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetDescription)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetHelpFile)(struct IErrorInfo *, BSTR *);
    HRESULT (*GetHelpContext)(struct IErrorInfo *, DWORD *);
};

typedef struct ICreateErrorInfo ICreateErrorInfo, *PICreateErrorInfo;

typedef struct ICreateErrorInfo *LPCREATEERRORINFO;

typedef struct ICreateErrorInfoVtbl ICreateErrorInfoVtbl, *PICreateErrorInfoVtbl;

struct ICreateErrorInfoVtbl {
    HRESULT (*QueryInterface)(struct ICreateErrorInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICreateErrorInfo *);
    ULONG (*Release)(struct ICreateErrorInfo *);
    HRESULT (*SetGUID)(struct ICreateErrorInfo *, GUID *);
    HRESULT (*SetSource)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetDescription)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetHelpFile)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateErrorInfo *, DWORD);
};

struct ICreateErrorInfo {
    struct ICreateErrorInfoVtbl *lpVtbl;
};

typedef struct tagCUSTDATA tagCUSTDATA, *PtagCUSTDATA;

typedef struct tagCUSTDATAITEM *LPCUSTDATAITEM;

struct tagCUSTDATA {
    DWORD cCustData;
    LPCUSTDATAITEM prgCustData;
};

typedef struct tagVARDESC *LPVARDESC;

typedef enum tagLIBFLAGS {
    LIBFLAG_FRESTRICTED=1,
    LIBFLAG_FCONTROL=2,
    LIBFLAG_FHIDDEN=4,
    LIBFLAG_FHASDISKIMAGE=8
} tagLIBFLAGS;

typedef struct tagPARAMDESCEX PARAMDESCEX;

typedef struct tagFUNCDESC *LPFUNCDESC;

typedef struct IErrorLog *LPERRORLOG;

typedef CY CURRENCY;

typedef struct ICreateTypeLib2 ICreateTypeLib2, *PICreateTypeLib2;

typedef struct ICreateTypeLib2 *LPCREATETYPELIB2;

typedef struct ICreateTypeLib2Vtbl ICreateTypeLib2Vtbl, *PICreateTypeLib2Vtbl;

struct ICreateTypeLib2Vtbl {
    HRESULT (*QueryInterface)(struct ICreateTypeLib2 *, IID *, void **);
    ULONG (*AddRef)(struct ICreateTypeLib2 *);
    ULONG (*Release)(struct ICreateTypeLib2 *);
    HRESULT (*CreateTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo **);
    HRESULT (*SetName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetVersion)(struct ICreateTypeLib2 *, WORD, WORD);
    HRESULT (*SetGuid)(struct ICreateTypeLib2 *, GUID *);
    HRESULT (*SetDocString)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetHelpFileName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetHelpContext)(struct ICreateTypeLib2 *, DWORD);
    HRESULT (*SetLcid)(struct ICreateTypeLib2 *, LCID);
    HRESULT (*SetLibFlags)(struct ICreateTypeLib2 *, UINT);
    HRESULT (*SaveAllChanges)(struct ICreateTypeLib2 *);
    HRESULT (*DeleteTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (*SetCustData)(struct ICreateTypeLib2 *, GUID *, VARIANT *);
    HRESULT (*SetHelpStringContext)(struct ICreateTypeLib2 *, ULONG);
    HRESULT (*SetHelpStringDll)(struct ICreateTypeLib2 *, LPOLESTR);
};

struct ICreateTypeLib2 {
    struct ICreateTypeLib2Vtbl *lpVtbl;
};

typedef struct ISupportErrorInfo *LPSUPPORTERRORINFO;

typedef struct IErrorInfo *LPERRORINFO;

typedef struct ITypeChangeEvents *LPTYPECHANGEEVENTS;

typedef struct ITypeFactory ITypeFactory, *PITypeFactory;

typedef struct ITypeFactoryVtbl ITypeFactoryVtbl, *PITypeFactoryVtbl;

struct ITypeFactory {
    struct ITypeFactoryVtbl *lpVtbl;
};

struct ITypeFactoryVtbl {
    HRESULT (*QueryInterface)(struct ITypeFactory *, IID *, void **);
    ULONG (*AddRef)(struct ITypeFactory *);
    ULONG (*Release)(struct ITypeFactory *);
    HRESULT (*CreateFromTypeInfo)(struct ITypeFactory *, struct ITypeInfo *, IID *, struct IUnknown **);
};

typedef struct ITypeInfo2 ITypeInfo2, *PITypeInfo2;

typedef struct ITypeInfo2 *LPTYPEINFO2;

typedef struct ITypeInfo2Vtbl ITypeInfo2Vtbl, *PITypeInfo2Vtbl;

typedef struct tagCUSTDATA CUSTDATA;

struct ITypeInfo2Vtbl {
    HRESULT (*QueryInterface)(struct ITypeInfo2 *, IID *, void **);
    ULONG (*AddRef)(struct ITypeInfo2 *);
    ULONG (*Release)(struct ITypeInfo2 *);
    HRESULT (*GetTypeAttr)(struct ITypeInfo2 *, TYPEATTR **);
    HRESULT (*GetTypeComp)(struct ITypeInfo2 *, struct ITypeComp **);
    HRESULT (*GetFuncDesc)(struct ITypeInfo2 *, UINT, FUNCDESC **);
    HRESULT (*GetVarDesc)(struct ITypeInfo2 *, UINT, VARDESC **);
    HRESULT (*GetNames)(struct ITypeInfo2 *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (*GetRefTypeOfImplType)(struct ITypeInfo2 *, UINT, HREFTYPE *);
    HRESULT (*GetImplTypeFlags)(struct ITypeInfo2 *, UINT, INT *);
    HRESULT (*GetIDsOfNames)(struct ITypeInfo2 *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (*Invoke)(struct ITypeInfo2 *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*GetDocumentation)(struct ITypeInfo2 *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetDllEntry)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (*GetRefTypeInfo)(struct ITypeInfo2 *, HREFTYPE, struct ITypeInfo **);
    HRESULT (*AddressOfMember)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (*CreateInstance)(struct ITypeInfo2 *, struct IUnknown *, IID *, PVOID *);
    HRESULT (*GetMops)(struct ITypeInfo2 *, MEMBERID, BSTR *);
    HRESULT (*GetContainingTypeLib)(struct ITypeInfo2 *, struct ITypeLib **, UINT *);
    void (*ReleaseTypeAttr)(struct ITypeInfo2 *, TYPEATTR *);
    void (*ReleaseFuncDesc)(struct ITypeInfo2 *, FUNCDESC *);
    void (*ReleaseVarDesc)(struct ITypeInfo2 *, VARDESC *);
    HRESULT (*GetTypeKind)(struct ITypeInfo2 *, TYPEKIND *);
    HRESULT (*GetTypeFlags)(struct ITypeInfo2 *, ULONG *);
    HRESULT (*GetFuncIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, UINT *);
    HRESULT (*GetVarIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, UINT *);
    HRESULT (*GetCustData)(struct ITypeInfo2 *, GUID *, VARIANT *);
    HRESULT (*GetFuncCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetParamCustData)(struct ITypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (*GetVarCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetImplTypeCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (*GetDocumentation2)(struct ITypeInfo2 *, MEMBERID, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetAllCustData)(struct ITypeInfo2 *, CUSTDATA *);
    HRESULT (*GetAllFuncCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (*GetAllParamCustData)(struct ITypeInfo2 *, UINT, UINT, CUSTDATA *);
    HRESULT (*GetAllVarCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (*GetAllImplTypeCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
};

struct ITypeInfo2 {
    struct ITypeInfo2Vtbl *lpVtbl;
};

typedef struct tagTLIBATTR *LPTLIBATTR;

typedef VARIANT *LPVARIANTARG;

typedef struct ITypeLib2Vtbl ITypeLib2Vtbl, *PITypeLib2Vtbl;

typedef struct ITypeLib2 ITypeLib2, *PITypeLib2;

struct ITypeLib2 {
    struct ITypeLib2Vtbl *lpVtbl;
};

struct ITypeLib2Vtbl {
    HRESULT (*QueryInterface)(struct ITypeLib2 *, IID *, void **);
    ULONG (*AddRef)(struct ITypeLib2 *);
    ULONG (*Release)(struct ITypeLib2 *);
    UINT (*GetTypeInfoCount)(struct ITypeLib2 *);
    HRESULT (*GetTypeInfo)(struct ITypeLib2 *, UINT, struct ITypeInfo **);
    HRESULT (*GetTypeInfoType)(struct ITypeLib2 *, UINT, TYPEKIND *);
    HRESULT (*GetTypeInfoOfGuid)(struct ITypeLib2 *, GUID *, struct ITypeInfo **);
    HRESULT (*GetLibAttr)(struct ITypeLib2 *, TLIBATTR **);
    HRESULT (*GetTypeComp)(struct ITypeLib2 *, struct ITypeComp **);
    HRESULT (*GetDocumentation)(struct ITypeLib2 *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (*IsName)(struct ITypeLib2 *, LPOLESTR, ULONG, BOOL *);
    HRESULT (*FindName)(struct ITypeLib2 *, LPOLESTR, ULONG, struct ITypeInfo **, MEMBERID *, USHORT *);
    void (*ReleaseTLibAttr)(struct ITypeLib2 *, TLIBATTR *);
    HRESULT (*GetCustData)(struct ITypeLib2 *, GUID *, VARIANT *);
    HRESULT (*GetLibStatistics)(struct ITypeLib2 *, ULONG *, ULONG *);
    HRESULT (*GetDocumentation2)(struct ITypeLib2 *, INT, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (*GetAllCustData)(struct ITypeLib2 *, CUSTDATA *);
};

typedef struct ICreateTypeLib *LPCREATETYPELIB;

typedef struct tagELEMDESC *LPELEMDESC;

typedef struct tagARRAYDESC ARRAYDESC;

typedef struct ICreateTypeInfo2 *LPCREATETYPEINFO2;

typedef struct ITypeInfo *LPTYPEINFO;

typedef struct IRecordInfo *LPRECORDINFO;

typedef VARIANT *LPVARIANT;

typedef struct tagEXCEPINFO *LPEXCEPINFO;

typedef enum tagTYPEFLAGS {
    TYPEFLAG_FAPPOBJECT=1,
    TYPEFLAG_FCANCREATE=2,
    TYPEFLAG_FLICENSED=4,
    TYPEFLAG_FPREDECLID=8,
    TYPEFLAG_FHIDDEN=16,
    TYPEFLAG_FCONTROL=32,
    TYPEFLAG_FDUAL=64,
    TYPEFLAG_FNONEXTENSIBLE=128,
    TYPEFLAG_FOLEAUTOMATION=256,
    TYPEFLAG_FRESTRICTED=512,
    TYPEFLAG_FAGGREGATABLE=1024,
    TYPEFLAG_FREPLACEABLE=2048,
    TYPEFLAG_FDISPATCHABLE=4096,
    TYPEFLAG_FREVERSEBIND=8192,
    TYPEFLAG_FPROXY=16384
} tagTYPEFLAGS;

typedef enum tagTYPEFLAGS TYPEFLAGS;

typedef struct tagPARAMDESC *LPPARAMDESC;

typedef struct tagCUSTDATAITEM CUSTDATAITEM;

typedef struct tagIDLDESC *LPIDLDESC;

typedef enum tagLIBFLAGS LIBFLAGS;

typedef struct IPropertyBag *LPPROPERTYBAG;

typedef enum tagVARFLAGS {
    VARFLAG_FREADONLY=1,
    VARFLAG_FSOURCE=2,
    VARFLAG_FBINDABLE=4,
    VARFLAG_FREQUESTEDIT=8,
    VARFLAG_FDISPLAYBIND=16,
    VARFLAG_FDEFAULTBIND=32,
    VARFLAG_FHIDDEN=64,
    VARFLAG_FRESTRICTED=128,
    VARFLAG_FDEFAULTCOLLELEM=256,
    VARFLAG_FUIDEFAULT=512,
    VARFLAG_FNONBROWSABLE=1024,
    VARFLAG_FREPLACEABLE=2048,
    VARFLAG_FIMMEDIATEBIND=4096
} tagVARFLAGS;

typedef enum tagFUNCFLAGS {
    FUNCFLAG_FRESTRICTED=1,
    FUNCFLAG_FSOURCE=2,
    FUNCFLAG_FBINDABLE=4,
    FUNCFLAG_FREQUESTEDIT=8,
    FUNCFLAG_FDISPLAYBIND=16,
    FUNCFLAG_FDEFAULTBIND=32,
    FUNCFLAG_FHIDDEN=64,
    FUNCFLAG_FUSESGETLASTERROR=128,
    FUNCFLAG_FDEFAULTCOLLELEM=256,
    FUNCFLAG_FUIDEFAULT=512,
    FUNCFLAG_FNONBROWSABLE=1024,
    FUNCFLAG_FREPLACEABLE=2048,
    FUNCFLAG_FIMMEDIATEBIND=4096
} tagFUNCFLAGS;

typedef enum tagSF_TYPE {
    SF_ERROR=0,
    SF_I1=1,
    SF_I2=2,
    SF_I4=3,
    SF_I8=4,
    SF_BSTR=5,
    SF_UNKNOWN=6,
    SF_DISPATCH=7,
    SF_VARIANT=8,
    SF_RECORD=9,
    SF_HAVEIID=10
} tagSF_TYPE;

typedef struct ICreateTypeInfo *LPCREATETYPEINFO;

typedef enum tagFUNCFLAGS FUNCFLAGS;

typedef struct tagCLEANLOCALSTORAGE tagCLEANLOCALSTORAGE, *PtagCLEANLOCALSTORAGE;

typedef struct tagCLEANLOCALSTORAGE CLEANLOCALSTORAGE;

struct tagCLEANLOCALSTORAGE {
    struct IUnknown *pInterface;
    PVOID pStorage;
    DWORD flags;
};

typedef enum tagSF_TYPE SF_TYPE;

typedef struct IDispatch *LPDISPATCH;

typedef struct ITypeComp *LPTYPECOMP;

typedef struct tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;

typedef struct ITypeLib2 *LPTYPELIB2;

typedef enum tagVARFLAGS VARFLAGS;

typedef struct tagCUSTDATA *LPCUSTDATA;

#define FADF_HAVEVARTYPE 128

#define FADF_HAVEIID 64

#define PARAMFLAG_FRETVAL 8

#define PARAMFLAG_FHASCUSTDATA 64

#define FADF_RECORD 32

#define IMPLTYPEFLAG_FDEFAULT 1

#define FADF_RESERVED 61448

#define IDLFLAG_FLCID 4

#define PARAMFLAG_NONE 0

#define DISPID_NEWENUM -4

#define PARAMFLAG_FLCID 4

#define PARAMFLAG_FOUT 2

#define DISPID_VALUE 0

#define FADF_UNKNOWN 512

#define FADF_STATIC 2

#define IMPLTYPEFLAG_FRESTRICTED 4

#define DISPID_UNKNOWN -1

#define DISPID_COLLECT -8

#define PARAMFLAG_FIN 1

#define FADF_BSTR 256

#define PARAMFLAG_FOPT 16

#define IDLFLAG_FRETVAL 8

#define PARAMFLAG_FHASDEFAULT 32

#define IMPLTYPEFLAG_FDEFAULTVTABLE 8

#define DISPID_CONSTRUCTOR -6

#define DISPID_PROPERTYPUT -3

#define IDLFLAG_FIN 1

#define DISPID_DESTRUCTOR -7

#define DISPID_EVALUATE -5

#define FADF_AUTO 1

#define IMPLTYPEFLAG_FSOURCE 2

#define FADF_EMBEDDED 4

#define FADF_DISPATCH 1024

#define IDLFLAG_FOUT 2

#define FADF_FIXEDSIZE 16

#define IDLFLAG_NONE 0

#define FADF_VARIANT 2048

typedef struct RPC_IMPORT_CONTEXT_P RPC_IMPORT_CONTEXT_P, *PRPC_IMPORT_CONTEXT_P;

typedef void *RPC_NS_HANDLE;

typedef void *I_RPC_HANDLE;

typedef I_RPC_HANDLE RPC_BINDING_HANDLE;

typedef struct _RPC_BINDING_VECTOR _RPC_BINDING_VECTOR, *P_RPC_BINDING_VECTOR;

typedef struct _RPC_BINDING_VECTOR RPC_BINDING_VECTOR;

struct _RPC_BINDING_VECTOR {
    ulong Count;
    RPC_BINDING_HANDLE BindingH[1];
};

struct RPC_IMPORT_CONTEXT_P {
    RPC_NS_HANDLE LookupContext;
    RPC_BINDING_HANDLE ProposedHandle;
    RPC_BINDING_VECTOR *Bindings;
};

typedef struct _exception _exception, *P_exception;

struct _exception {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
};

typedef struct _complex _complex, *P_complex;

struct _complex {
    double x;
    double y;
};

#define SING 2

#define _UNDERFLOW 4

#define _OVERFLOW 3

#define EDOM 33

#define TLOSS 5

#define PLOSS 6

#define _DOMAIN 1

#define _PLOSS 6

#define _SING 2

#define OVERFLOW 3

#define _TLOSS 5

#define ERANGE 34

#define DOMAIN 1

#define UNDERFLOW 4

typedef char *va_list;

typedef uint uintptr_t;

typedef struct _D3DMATRIX *LPD3DXMATRIX;

typedef struct ID3DXMatrixStack ID3DXMatrixStack, *PID3DXMatrixStack;

typedef struct ID3DXMatrixStack *LPD3DXMATRIXSTACK;

typedef struct ID3DXMatrixStackVtbl ID3DXMatrixStackVtbl, *PID3DXMatrixStackVtbl;

struct ID3DXMatrixStackVtbl {
    HRESULT (*QueryInterface)(struct IDirect3DVolume8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirect3DVolume8 *);
    ULONG (*Release)(struct IDirect3DVolume8 *);
    HRESULT (*Pop)(struct IDirect3DVolume8 *);
    HRESULT (*Push)(struct IDirect3DVolume8 *);
    HRESULT (*LoadIdentity)(struct IDirect3DVolume8 *);
    HRESULT (*LoadMatrix)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*MultMatrix)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*MultMatrixLocal)(struct IDirect3DVolume8 *, D3DXMATRIX *);
    HRESULT (*RotateAxis)(struct IDirect3DVolume8 *, D3DXVECTOR3 *, FLOAT);
    HRESULT (*RotateAxisLocal)(struct IDirect3DVolume8 *, D3DXVECTOR3 *, FLOAT);
    HRESULT (*RotateYawPitchRoll)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*RotateYawPitchRollLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*Scale)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*ScaleLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*Translate)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    HRESULT (*TranslateLocal)(struct IDirect3DVolume8 *, FLOAT, FLOAT, FLOAT);
    D3DXMATRIX * (*GetTop)(struct IDirect3DVolume8 *);
};

struct ID3DXMatrixStack {
    struct ID3DXMatrixStackVtbl *lpVtbl;
};

typedef struct D3DXQUATERNION D3DXQUATERNION, *PD3DXQUATERNION;

struct D3DXQUATERNION {
    FLOAT x;
    FLOAT y;
    FLOAT z;
    FLOAT w;
};

typedef struct D3DXCOLOR D3DXCOLOR, *PD3DXCOLOR;

struct D3DXCOLOR {
    FLOAT r;
    FLOAT g;
    FLOAT b;
    FLOAT a;
};

typedef struct D3DXPLANE D3DXPLANE, *PD3DXPLANE;

struct D3DXPLANE {
    FLOAT a;
    FLOAT b;
    FLOAT c;
    FLOAT d;
};

typedef struct D3DXVECTOR4 D3DXVECTOR4, *PD3DXVECTOR4;

struct D3DXVECTOR4 {
    FLOAT x;
    FLOAT y;
    FLOAT z;
    FLOAT w;
};

typedef struct D3DXCOLOR *LPD3DXCOLOR;

typedef struct D3DXQUATERNION *LPD3DXQUATERNION;

typedef struct _D3DVECTOR *LPD3DXVECTOR3;

typedef struct D3DXVECTOR2 *LPD3DXVECTOR2;

typedef struct D3DXVECTOR4 *LPD3DXVECTOR4;

typedef struct D3DXPLANE *LPD3DXPLANE;

typedef struct _EFS_RPC_BLOB _EFS_RPC_BLOB, *P_EFS_RPC_BLOB;

typedef BYTE *PBYTE;

struct _EFS_RPC_BLOB {
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _ENCRYPTION_CERTIFICATE_LIST _ENCRYPTION_CERTIFICATE_LIST, *P_ENCRYPTION_CERTIFICATE_LIST;

typedef struct _ENCRYPTION_CERTIFICATE _ENCRYPTION_CERTIFICATE, *P_ENCRYPTION_CERTIFICATE;

typedef struct _ENCRYPTION_CERTIFICATE *PENCRYPTION_CERTIFICATE;

typedef struct _CERTIFICATE_BLOB _CERTIFICATE_BLOB, *P_CERTIFICATE_BLOB;

typedef struct _CERTIFICATE_BLOB *PEFS_CERTIFICATE_BLOB;

struct _ENCRYPTION_CERTIFICATE_LIST {
    DWORD nUsers;
    PENCRYPTION_CERTIFICATE *pUsers;
};

struct _ENCRYPTION_CERTIFICATE {
    DWORD cbTotalLength;
    SID *pUserSid;
    PEFS_CERTIFICATE_BLOB pCertBlob;
};

struct _CERTIFICATE_BLOB {
    DWORD dwCertEncodingType;
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _EFS_HASH_BLOB _EFS_HASH_BLOB, *P_EFS_HASH_BLOB;

typedef struct _EFS_HASH_BLOB EFS_HASH_BLOB;

struct _EFS_HASH_BLOB {
    DWORD cbData;
    PBYTE pbData;
};

typedef struct _EFS_KEY_INFO _EFS_KEY_INFO, *P_EFS_KEY_INFO;

typedef struct _EFS_KEY_INFO *PEFS_KEY_INFO;

typedef uint ALG_ID;

struct _EFS_KEY_INFO {
    DWORD dwVersion;
    ULONG Entropy;
    ALG_ID Algorithm;
    ULONG KeyLength;
};

typedef struct _EFS_KEY_INFO EFS_KEY_INFO;

typedef struct _EFS_RPC_BLOB *PEFS_RPC_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST _ENCRYPTION_CERTIFICATE_HASH_LIST, *P_ENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _ENCRYPTION_CERTIFICATE_HASH _ENCRYPTION_CERTIFICATE_HASH, *P_ENCRYPTION_CERTIFICATE_HASH;

typedef struct _ENCRYPTION_CERTIFICATE_HASH *PENCRYPTION_CERTIFICATE_HASH;

typedef struct _EFS_HASH_BLOB *PEFS_HASH_BLOB;

struct _ENCRYPTION_CERTIFICATE_HASH {
    DWORD cbTotalLength;
    SID *pUserSid;
    PEFS_HASH_BLOB pHash;
    LPWSTR lpDisplayInformation;
};

struct _ENCRYPTION_CERTIFICATE_HASH_LIST {
    DWORD nCert_Hash;
    PENCRYPTION_CERTIFICATE_HASH *pUsers;
};

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST *PENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _EFS_RPC_BLOB EFS_RPC_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE_HASH ENCRYPTION_CERTIFICATE_HASH;

typedef struct _ENCRYPTION_CERTIFICATE_LIST *PENCRYPTION_CERTIFICATE_LIST;

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST ENCRYPTION_CERTIFICATE_HASH_LIST;

typedef struct _CERTIFICATE_BLOB EFS_CERTIFICATE_BLOB;

typedef struct _ENCRYPTION_CERTIFICATE ENCRYPTION_CERTIFICATE;

typedef struct _ENCRYPTION_CERTIFICATE_LIST ENCRYPTION_CERTIFICATE_LIST;

#define MAX_SID_SIZE 256

typedef struct tagCRGB tagCRGB, *PtagCRGB;

struct tagCRGB {
    BYTE bRed;
    BYTE bGreen;
    BYTE bBlue;
    BYTE bExtra;
};

typedef struct tagCRGB CRGB;

#define PRINTDLGEXORD 1549

#define grp2 1073

#define grp1 1072

#define grp4 1075

#define grp3 1074

#define cmb3 1138

#define cmb2 1137

#define cmb1 1136

#define rad12 1067

#define rad13 1068

#define rad10 1065

#define rad11 1066

#define rad16 1071

#define rad14 1069

#define rad15 1070

#define chx9 1048

#define chx8 1047

#define chx7 1046

#define chx6 1045

#define chx5 1044

#define chx4 1043

#define chx3 1042

#define chx2 1041

#define chx1 1040

#define edt1 1152

#define edt2 1153

#define FORMATDLGORD30 1544

#define edt3 1154

#define FORMATDLGORD31 1543

#define edt4 1155

#define edt5 1156

#define edt6 1157

#define edt7 1158

#define edt8 1159

#define edt9 1160

#define frm1 1076

#define frm2 1077

#define frm3 1078

#define frm4 1079

#define FILEOPENORD 1536

#define chx10 1049

#define chx11 1050

#define chx14 1053

#define chx15 1054

#define chx12 1051

#define chx13 1052

#define chx16 1055

#define ctl1 1184

#define RUNDLGORD 1545

#define ctlFirst 1024

#define COLORMGMTDLGORD 1551

#define MULTIFILEOPENORD 1537

#define NEWFILEOPENV2ORD 1552

#define stc10 1097

#define stc12 1099

#define stc11 1098

#define PRNSETUPDLGORD 1539

#define psh16 1039

#define psh14 1037

#define psh15 1038

#define psh12 1035

#define psh13 1036

#define psh10 1033

#define psh11 1034

#define REPLACEDLGORD 1541

#define NEWFILEOPENORD 1547

#define stc30 1117

#define stc32 1119

#define stc31 1118

#define stc25 1112

#define stc24 1111

#define stc27 1114

#define stc26 1113

#define stc29 1116

#define stc28 1115

#define rad7 1062

#define rad8 1063

#define rad5 1060

#define rad6 1061

#define rad3 1058

#define rad4 1059

#define rad1 1056

#define rad2 1057

#define stc21 1108

#define stc20 1107

#define stc23 1110

#define rad9 1064

#define stc22 1109

#define edt15 1166

#define stc14 1101

#define edt14 1165

#define stc13 1100

#define stc16 1103

#define edt16 1167

#define stc15 1102

#define edt11 1162

#define stc18 1105

#define edt10 1161

#define stc17 1104

#define edt13 1164

#define edt12 1163

#define stc19 1106

#define rct3 1082

#define rct4 1083

#define cmb15 1150

#define rct1 1080

#define PAGESETUPDLGORD 1546

#define cmb16 1151

#define rct2 1081

#define cmb11 1146

#define cmb12 1147

#define cmb13 1148

#define cmb9 1144

#define cmb14 1149

#define cmb8 1143

#define cmb7 1142

#define cmb6 1141

#define cmb5 1140

#define cmb10 1145

#define cmb4 1139

#define lst4 1123

#define lst3 1122

#define lst2 1121

#define lst1 1120

#define lst8 1127

#define lst7 1126

#define lst6 1125

#define lst5 1124

#define psh6 1029

#define psh5 1028

#define psh8 1031

#define lst9 1128

#define psh7 1030

#define psh2 1025

#define psh1 1024

#define psh4 1027

#define psh3 1026

#define psh9 1032

#define ctlLast 1279

#define FINDDLGORD 1540

#define PAGESETUPDLGORDMOTIF 1550

#define PRINTDLGORD 1538

#define lst16 1135

#define ico2 1085

#define ico1 1084

#define lst14 1133

#define ico4 1087

#define lst15 1134

#define ico3 1086

#define lst12 1131

#define lst13 1132

#define lst10 1129

#define lst11 1130

#define scr4 1171

#define stc4 1091

#define scr5 1172

#define stc5 1092

#define scr2 1169

#define stc2 1089

#define scr3 1170

#define stc3 1090

#define FONTDLGORD 1542

#define scr1 1168

#define stc1 1088

#define pshHelp 1038

#define scr8 1175

#define stc8 1095

#define stc9 1096

#define scr6 1173

#define stc6 1093

#define scr7 1174

#define stc7 1094

typedef uint *PUINT_PTR;

typedef int *PLONG32;

typedef uint UINT32;

typedef char *PINT8;

typedef longlong LONG64;

typedef short INT16;

typedef ULONG_PTR *PSIZE_T;

typedef ushort UHALF_PTR;

typedef uint DWORD32;

typedef short HALF_PTR;

typedef ulong HANDLE_PTR;

typedef ulonglong *PDWORD64;

typedef int INT32;

typedef short *PINT16;

typedef ulong *PULONG_PTR;

typedef ulonglong ULONG64;

typedef ULONG_PTR KAFFINITY;

typedef ushort *PUINT16;

typedef char INT8;

typedef ulong POINTER_64_INT;

typedef ulonglong *PULONG64;

typedef ULONG_PTR *PDWORD_PTR;

typedef LONG_PTR *PSSIZE_T;

typedef uchar *PUINT8;

typedef KAFFINITY *PKAFFINITY;

typedef uint *PDWORD32;

typedef longlong *PLONG64;

typedef long *PLONG_PTR;

typedef ulonglong UINT64;

typedef uint *PUINT32;

typedef int *PINT32;

typedef ushort UINT16;

typedef uchar UINT8;

typedef ulonglong *PUINT64;

typedef longlong *PINT64;

typedef int INT_PTR;

typedef uint *PULONG32;

typedef LONG_PTR SSIZE_T;

typedef longlong INT64;

typedef int *PINT_PTR;

typedef ushort *PUHALF_PTR;

typedef uint ULONG32;

typedef short *PHALF_PTR;

typedef int LONG32;

#define MININT_PTR 0

#define ADDRESS_TAG_BIT 2147483648

#define MAXINT_PTR -1

#define MAXUINT_PTR -1

#define MAXUHALF_PTR -1

#define MINLONG_PTR 0

#define MINHALF_PTR 0

#define MAXULONG_PTR -1

#define MAXLONG_PTR -1

#define MAXHALF_PTR -1

typedef struct _cpinfo _cpinfo, *P_cpinfo;

struct _cpinfo {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
};

typedef LONG GEOID;

typedef struct _numberfmtA _numberfmtA, *P_numberfmtA;

typedef struct _numberfmtA *LPNUMBERFMTA;

struct _numberfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef DWORD CALID;

typedef BOOL (*CALINFO_ENUMPROCEXA)(LPSTR, CALID);

typedef struct _currencyfmtW _currencyfmtW, *P_currencyfmtW;

typedef struct _currencyfmtW CURRENCYFMTW;

struct _currencyfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPWSTR lpCurrencySymbol;
};

typedef struct _currencyfmtA _currencyfmtA, *P_currencyfmtA;

typedef struct _currencyfmtA *LPCURRENCYFMTA;

typedef LPCURRENCYFMTA LPCURRENCYFMT;

struct _currencyfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPSTR lpCurrencySymbol;
};

typedef struct _numberfmtW _numberfmtW, *P_numberfmtW;

typedef struct _numberfmtW *LPNUMBERFMTW;

struct _numberfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef struct _numberfmtA NUMBERFMTA;

typedef struct _currencyfmtA CURRENCYFMTA;

typedef BOOL (*GEO_ENUMPROC)(GEOID);

typedef struct _cpinfoexA _cpinfoexA, *P_cpinfoexA;

typedef struct _cpinfoexA *LPCPINFOEXA;

typedef LPCPINFOEXA LPCPINFOEX;

struct _cpinfoexA {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    CHAR CodePageName[260];
};

typedef BOOL (*UILANGUAGE_ENUMPROCA)(LPSTR, LONG_PTR);

typedef enum SYSGEOTYPE {
    GEO_NATION=1,
    GEO_LATITUDE=2,
    GEO_LONGITUDE=3,
    GEO_ISO2=4,
    GEO_ISO3=5,
    GEO_RFC1766=6,
    GEO_LCID=7,
    GEO_FRIENDLYNAME=8,
    GEO_OFFICIALNAME=9,
    GEO_TIMEZONES=10,
    GEO_OFFICIALLANGUAGES=11
} SYSGEOTYPE;

typedef BOOL (*CALINFO_ENUMPROCEXW)(LPWSTR, CALID);

typedef struct _cpinfoexW _cpinfoexW, *P_cpinfoexW;

struct _cpinfoexW {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    WCHAR CodePageName[260];
};

typedef struct _currencyfmtW *LPCURRENCYFMTW;

typedef BOOL (*DATEFMT_ENUMPROCEXW)(LPWSTR, CALID);

typedef struct _cpinfo CPINFO;

typedef BOOL (*TIMEFMT_ENUMPROCA)(LPSTR);

typedef struct _cpinfoexA CPINFOEXA;

typedef CPINFOEXA CPINFOEX;

typedef DWORD LGRPID;

typedef BOOL (*LANGGROUPLOCALE_ENUMPROCW)(LGRPID, LCID, LPWSTR, LONG_PTR);

typedef struct _cpinfoexW *LPCPINFOEXW;

typedef BOOL (*UILANGUAGE_ENUMPROCW)(LPWSTR, LONG_PTR);

typedef BOOL (*LANGGROUPLOCALE_ENUMPROCA)(LGRPID, LCID, LPSTR, LONG_PTR);

typedef DWORD CALTYPE;

typedef BOOL (*CODEPAGE_ENUMPROCA)(LPSTR);

typedef BOOL (*CODEPAGE_ENUMPROCW)(LPWSTR);

typedef enum SYSGEOCLASS {
    GEOCLASS_REGION=14,
    GEOCLASS_NATION=16
} SYSGEOCLASS;

typedef BOOL (*TIMEFMT_ENUMPROCW)(LPWSTR);

typedef BOOL (*CALINFO_ENUMPROCA)(LPSTR);

typedef struct _cpinfoexW CPINFOEXW;

typedef struct _numberfmtW NUMBERFMTW;

typedef BOOL (*LANGUAGEGROUP_ENUMPROCW)(LGRPID, LPWSTR, LPWSTR, DWORD, LONG_PTR);

typedef BOOL (*CALINFO_ENUMPROCW)(LPWSTR);

typedef BOOL (*LANGUAGEGROUP_ENUMPROCA)(LGRPID, LPSTR, LPSTR, DWORD, LONG_PTR);

typedef struct _cpinfo *LPCPINFO;

typedef DWORD LCTYPE;

typedef BOOL (*DATEFMT_ENUMPROCEXA)(LPSTR, CALID);

typedef LPNUMBERFMTA LPNUMBERFMT;

typedef BOOL (*LOCALE_ENUMPROCA)(LPSTR);

typedef BOOL (*DATEFMT_ENUMPROCW)(LPWSTR);

typedef BOOL (*LOCALE_ENUMPROCW)(LPWSTR);

typedef DWORD GEOCLASS;

typedef BOOL (*DATEFMT_ENUMPROCA)(LPSTR);

typedef DWORD GEOTYPE;

typedef NUMBERFMTA NUMBERFMT;

typedef CURRENCYFMTA CURRENCYFMT;

#define C3_HIRAGANA 32

#define MAP_COMPOSITE 64

#define DATE_YEARMONTH 8

#define CTRY_YEMEN 967

#define CSTR_EQUAL 2

#define C2_EUROPENUMBER 3

#define NORM_IGNORECASE 1

#define CTRY_PUERTO_RICO 1

#define LCMAP_HALFWIDTH 4194304

#define LOCALE_SNATIVECURRNAME 4104

#define LOCALE_SDAYNAME7 48

#define LOCALE_SDAYNAME6 47

#define LOCALE_SDAYNAME5 46

#define LGRPID_VIETNAMESE 14

#define LCMAP_FULLWIDTH 8388608

#define CTRY_ESTONIA 372

#define CAL_IYEAROFFSETRANGE 3

#define LOCALE_SDAYNAME4 45

#define LOCALE_SDAYNAME3 44

#define LOCALE_SDAYNAME2 43

#define LOCALE_SDAYNAME1 42

#define CTRY_KAZAKSTAN 7

#define CTRY_BRAZIL 55

#define LOCALE_SNATIVELANGNAME 4

#define LOCALE_ICALENDARTYPE 4105

#define CAL_SMONTHNAME1 21

#define CAL_SMONTHNAME2 22

#define CAL_SMONTHNAME3 23

#define CAL_SMONTHNAME4 24

#define CAL_SMONTHNAME5 25

#define CAL_SMONTHNAME6 26

#define CAL_SMONTHNAME7 27

#define CAL_SMONTHNAME8 28

#define CAL_SMONTHNAME9 29

#define LOCALE_IDIGITSUBSTITUTION 4116

#define CTRY_CROATIA 385

#define MAX_DEFAULTCHAR 2

#define CTRY_MONACO 33

#define C1_ALPHA 256

#define C3_SYMBOL 8

#define CTRY_GUATEMALA 502

#define CTRY_PAKISTAN 92

#define LOCALE_INEGSYMPRECEDES 86

#define C1_CNTRL 32

#define C1_BLANK 64

#define CTRY_CARIBBEAN 1

#define LGRPID_CYRILLIC 5

#define CTRY_AUSTRALIA 61

#define CTRY_UKRAINE 380

#define LOCALE_RETURN_NUMBER 536870912

#define C1_LOWER 2

#define C2_EUROPESEPARATOR 4

#define CAL_SERASTRING 4

#define LOCALE_NOUSEROVERRIDE 2147483648

#define CTRY_MACAU 853

#define LGRPID_TURKISH 6

#define LOCALE_IPAPERSIZE 4106

#define LCMAP_TRADITIONAL_CHINESE 67108864

#define CTRY_MONGOLIA 976

#define CT_CTYPE2 2

#define CT_CTYPE1 1

#define CAL_HIJRI 6

#define LOCALE_ICURRENCY 27

#define CTRY_LIECHTENSTEIN 41

#define LGRPID_GREEK 4

#define CTRY_SPAIN 34

#define CTRY_SWEDEN 46

#define CTRY_VIET_NAM 84

#define C2_NOTAPPLICABLE 0

#define LGRPID_TRADITIONAL_CHINESE 9

#define LOCALE_SNEGATIVESIGN 81

#define CT_CTYPE3 4

#define C2_SEGMENTSEPARATOR 9

#define CTRY_UNITED_KINGDOM 44

#define WC_NO_BEST_FIT_CHARS 1024

#define LOCALE_SCOUNTRY 6

#define CTRY_LEBANON 961

#define MB_ERR_INVALID_CHARS 8

#define CTRY_RUSSIA 7

#define LOCALE_ICOUNTRY 5

#define CTRY_ARGENTINA 54

#define LOCALE_INEGSIGNPOSN 83

#define SORT_STRINGSORT 4096

#define C2_EUROPETERMINATOR 5

#define CTRY_GEORGIA 995

#define CAL_GREGORIAN_XLIT_ENGLISH 11

#define CTRY_BELIZE 501

#define CTRY_ZIMBABWE 263

#define C3_KASHIDA 512

#define LOCALE_SABBREVDAYNAME2 50

#define LOCALE_SABBREVDAYNAME1 49

#define CAL_SABBREVMONTHNAME5 38

#define LOCALE_SABBREVDAYNAME4 52

#define CTRY_ALGERIA 213

#define CAL_SABBREVMONTHNAME6 39

#define LOCALE_SABBREVDAYNAME3 51

#define LOCALE_INEGSEPBYSPACE 87

#define CAL_SABBREVMONTHNAME3 36

#define LOCALE_SABBREVDAYNAME6 54

#define CAL_SABBREVMONTHNAME4 37

#define LOCALE_SABBREVDAYNAME5 53

#define CAL_JAPAN 3

#define CAL_SABBREVMONTHNAME9 42

#define LOCALE_SABBREVDAYNAME7 55

#define CAL_SABBREVMONTHNAME7 40

#define DATE_USE_ALT_CALENDAR 4

#define CAL_SABBREVMONTHNAME8 41

#define CAL_SABBREVMONTHNAME1 34

#define CAL_SABBREVMONTHNAME2 35

#define CP_UTF8 65001

#define CP_UTF7 65000

#define LOCALE_IPOSSEPBYSPACE 85

#define C3_NOTAPPLICABLE 0

#define CTRY_UZBEKISTAN 7

#define CAL_SYEARMONTH 47

#define LOCALE_ITIMEMARKPOSN 4101

#define LOCALE_IMONLZERO 39

#define C2_OTHERNEUTRAL 11

#define CTRY_ARMENIA 374

#define CTRY_ECUADOR 593

#define CAL_SMONTHNAME10 30

#define CAL_SMONTHNAME11 31

#define CAL_SMONTHNAME12 32

#define CAL_SMONTHNAME13 33

#define LOCALE_SMONTHOUSANDSEP 23

#define CTRY_TATARSTAN 7

#define LGRPID_THAI 11

#define WC_SEPCHARS 32

#define LOCALE_IFIRSTWEEKOFYEAR 4109

#define LOCALE_SYEARMONTH 4102

#define LCID_ALTERNATE_SORTS 4

#define LCMAP_LINGUISTIC_CASING 16777216

#define LOCALE_IDATE 33

#define CTRY_ICELAND 354

#define CTRY_MOROCCO 212

#define LCMAP_UPPERCASE 512

#define TIME_NOMINUTESORSECONDS 1

#define C2_ARABICNUMBER 6

#define LCMAP_SIMPLIFIED_CHINESE 33554432

#define CTRY_KENYA 254

#define CTRY_SYRIA 963

#define CTRY_BRUNEI_DARUSSALAM 673

#define LOCALE_SMONTHNAME9 64

#define CTRY_BOLIVIA 591

#define CTRY_SWITZERLAND 41

#define CTRY_IRELAND 353

#define CTRY_HUNGARY 36

#define LOCALE_IDAYLZERO 38

#define ENUM_ALL_CALENDARS 4294967295

#define LOCALE_SLONGDATE 32

#define CAL_SCALNAME 2

#define LOCALE_SMONTHNAME2 57

#define LOCALE_SMONTHNAME1 56

#define LOCALE_SMONTHNAME4 59

#define LOCALE_SMONTHNAME3 58

#define LOCALE_SMONTHNAME6 61

#define LOCALE_SMONTHNAME5 60

#define LOCALE_SMONTHNAME8 63

#define LOCALE_SMONTHNAME7 62

#define CAL_GREGORIAN 1

#define CTRY_SLOVAK 421

#define MB_PRECOMPOSED 1

#define LOCALE_SNATIVECTRYNAME 8

#define LOCALE_SABBREVMONTHNAME13 4111

#define LOCALE_SABBREVMONTHNAME12 79

#define LOCALE_SABBREVMONTHNAME11 78

#define LOCALE_SABBREVMONTHNAME10 77

#define LOCALE_S1159 40

#define GEOID_NOT_AVAILABLE -1

#define LGRPID_ARMENIAN 17

#define CP_OEMCP 1

#define LOCALE_IDEFAULTEBCDICCODEPAGE 4114

#define LOCALE_IDEFAULTMACCODEPAGE 4113

#define CAL_SLONGDATE 6

#define WC_DEFAULTCHAR 64

#define CTRY_OMAN 968

#define CTRY_SOUTH_AFRICA 27

#define LOCALE_ILANGUAGE 1

#define CAL_ICALINTVALUE 1

#define CTRY_INDIA 91

#define CTRY_MALDIVES 960

#define CTRY_NETHERLANDS 31

#define LOCALE_SSHORTDATE 31

#define TIME_FORCE24HOURFORMAT 8

#define CTRY_KUWAIT 965

#define CAL_USE_CP_ACP 1073741824

#define LOCALE_SENGCURRNAME 4103

#define CTRY_LITHUANIA 370

#define LOCALE_SGROUPING 16

#define CTRY_TRINIDAD_Y_TOBAGO 1

#define CTRY_PRCHINA 86

#define CP_THREAD_ACP 3

#define CTRY_AZERBAIJAN 994

#define CTRY_PERU 51

#define NORM_IGNOREKANATYPE 65536

#define CTRY_HONG_KONG 852

#define CTRY_URUGUAY 598

#define CTRY_ROMANIA 40

#define CTRY_ITALY 39

#define CP_ACP 0

#define CTRY_IRAQ 964

#define CTRY_IRAN 981

#define MAX_LEADBYTES 12

#define LOCALE_IINTLCURRDIGITS 26

#define CTRY_PARAGUAY 595

#define LOCALE_SLANGUAGE 2

#define CTRY_FINLAND 358

#define CTRY_BELGIUM 32

#define CAL_TAIWAN 4

#define CAL_SSHORTDATE 5

#define LOCALE_ILZERO 18

#define C3_ALPHA 32768

#define CTRY_TURKEY 90

#define CP_INSTALLED 1

#define LGRPID_SUPPORTED 2

#define LOCALE_IDEFAULTCODEPAGE 11

#define LCMAP_SORTKEY 1024

#define CTRY_DOMINICAN_REPUBLIC 1

#define LOCALE_IPOSSYMPRECEDES 84

#define CTRY_EL_SALVADOR 503

#define LOCALE_IOPTIONALCALENDAR 4107

#define CTRY_TAIWAN 886

#define LOCALE_IDIGITS 17

#define LGRPID_INSTALLED 1

#define C3_LEXICAL 1024

#define C3_HALFWIDTH 64

#define LOCALE_FONTSIGNATURE 88

#define CTRY_GERMANY 49

#define CTRY_BELARUS 375

#define CP_SUPPORTED 2

#define LOCALE_SABBREVMONTHNAME1 68

#define LOCALE_SABBREVMONTHNAME2 69

#define LOCALE_SABBREVMONTHNAME3 70

#define CAL_KOREA 5

#define LOCALE_SABBREVMONTHNAME4 71

#define LOCALE_SABBREVMONTHNAME5 72

#define LOCALE_SABBREVMONTHNAME6 73

#define LOCALE_SABBREVMONTHNAME7 74

#define LOCALE_SABBREVMONTHNAME8 75

#define LOCALE_SABBREVMONTHNAME9 76

#define CTRY_SERBIA 381

#define C3_FULLWIDTH 128

#define CTRY_ISRAEL 972

#define C3_IDEOGRAPH 256

#define LOCALE_ICENTURY 36

#define LOCALE_ITLZERO 37

#define LOCALE_ICURRDIGITS 25

#define LOCALE_SENGCOUNTRY 4098

#define LOCALE_SNATIVEDIGITS 19

#define LCID_SUPPORTED 2

#define LOCALE_SCURRENCY 20

#define LOCALE_SISO639LANGNAME 89

#define C2_RIGHTTOLEFT 2

#define DATE_RTLREADING 32

#define C2_LEFTTORIGHT 1

#define CTRY_DENMARK 45

#define CTRY_BULGARIA 359

#define LOCALE_SISO3166CTRYNAME 90

#define LOCALE_IPOSSIGNPOSN 82

#define WC_COMPOSITECHECK 512

#define CP_MACCP 2

#define LOCALE_STIME 30

#define LCID_INSTALLED 1

#define CAL_GREGORIAN_US 2

#define TIME_NOSECONDS 2

#define DATE_LONGDATE 2

#define CTRY_MACEDONIA 389

#define C2_WHITESPACE 10

#define CTRY_QATAR 974

#define CTRY_BAHRAIN 973

#define MB_USEGLYPHCHARS 4

#define LOCALE_SSORTNAME 4115

#define CTRY_NEW_ZEALAND 64

#define CTRY_GREECE 30

#define LOCALE_ILDATE 34

#define LOCALE_INEGCURR 28

#define CTRY_PORTUGAL 351

#define NORM_IGNOREWIDTH 131072

#define LCMAP_LOWERCASE 256

#define MB_COMPOSITE 2

#define LOCALE_SPOSITIVESIGN 80

#define LOCALE_STIMEFORMAT 4099

#define C2_COMMONSEPARATOR 7

#define CTRY_POLAND 48

#define CTRY_UNITED_STATES 1

#define CSTR_LESS_THAN 1

#define CAL_GREGORIAN_ME_FRENCH 9

#define LOCALE_SENGLANGUAGE 4097

#define LOCALE_USE_CP_ACP 1073741824

#define C2_BLOCKSEPARATOR 8

#define LCMAP_HIRAGANA 1048576

#define LGRPID_ARABIC 13

#define C3_DIACRITIC 2

#define CTRY_UAE 971

#define LCMAP_BYTEREV 2048

#define LOCALE_SMONTHNAME11 66

#define LOCALE_SMONTHNAME10 65

#define CAL_GREGORIAN_XLIT_FRENCH 12

#define LOCALE_SMONTHNAME13 4110

#define LOCALE_SMONTHNAME12 67

#define CTRY_KYRGYZSTAN 996

#define C3_KATAKANA 16

#define CTRY_LUXEMBOURG 352

#define CAL_RETURN_NUMBER 536870912

#define MAP_EXPAND_LIGATURES 8192

#define CTRY_VENEZUELA 58

#define CAL_THAI 7

#define LOCALE_IDEFAULTLANGUAGE 9

#define CAL_HEBREW 8

#define C1_SPACE 8

#define CTRY_COSTA_RICA 506

#define CTRY_DEFAULT 0

#define LOCALE_SINTLSYMBOL 21

#define CAL_SABBREVDAYNAME7 20

#define LGRPID_GEORGIAN 16

#define NORM_IGNORESYMBOLS 4

#define CAL_SABBREVDAYNAME1 14

#define MAP_FOLDCZONE 16

#define CAL_SABBREVDAYNAME2 15

#define CAL_SABBREVDAYNAME3 16

#define CAL_SABBREVDAYNAME4 17

#define CAL_SABBREVDAYNAME5 18

#define LGRPID_WESTERN_EUROPE 1

#define CAL_SABBREVDAYNAME6 19

#define CTRY_LATVIA 371

#define LOCALE_STHOUSAND 15

#define LOCALE_INEGNUMBER 4112

#define CTRY_CZECH 420

#define LOCALE_IMEASURE 13

#define CAL_GREGORIAN_ARABIC 10

#define LCMAP_KATAKANA 2097152

#define LOCALE_IDEFAULTCOUNTRY 10

#define CTRY_CANADA 2

#define LOCALE_SABBREVLANGNAME 3

#define CTRY_SLOVENIA 386

#define CTRY_LIBYA 218

#define CTRY_SAUDI_ARABIA 966

#define C1_PUNCT 16

#define CTRY_HONDURAS 504

#define CAL_NOUSEROVERRIDE 2147483648

#define CTRY_FRANCE 33

#define C1_UPPER 1

#define CAL_SDAYNAME3 9

#define CAL_SDAYNAME4 10

#define CAL_SDAYNAME1 7

#define CTRY_NORWAY 47

#define CAL_SDAYNAME2 8

#define CAL_SDAYNAME7 13

#define CAL_SDAYNAME5 11

#define CAL_SDAYNAME6 12

#define CTRY_THAILAND 66

#define LOCALE_SDECIMAL 14

#define C1_XDIGIT 128

#define DATE_LTRREADING 16

#define CTRY_PANAMA 507

#define LOCALE_S2359 41

#define CTRY_JAPAN 81

#define CTRY_EGYPT 20

#define LOCALE_SMONGROUPING 24

#define CTRY_AUSTRIA 43

#define MAP_PRECOMPOSED 32

#define LGRPID_JAPANESE 7

#define LOCALE_SLIST 12

#define CTRY_JAMAICA 1

#define CP_SYMBOL 42

#define MAP_FOLDDIGITS 128

#define C1_DIGIT 4

#define CTRY_NICARAGUA 505

#define LOCALE_IDEFAULTANSICODEPAGE 4100

#define CTRY_TUNISIA 216

#define C3_VOWELMARK 4

#define CTRY_MEXICO 52

#define CTRY_CHILE 56

#define LGRPID_KOREAN 8

#define LOCALE_IFIRSTDAYOFWEEK 4108

#define LGRPID_INDIC 15

#define LGRPID_CENTRAL_EUROPE 2

#define LGRPID_SIMPLIFIED_CHINESE 10

#define CTRY_FAEROE_ISLANDS 298

#define DATE_SHORTDATE 1

#define CAL_ITWODIGITYEARMAX 48

#define CTRY_INDONESIA 62

#define CSTR_GREATER_THAN 3

#define LOCALE_SMONDECIMALSEP 22

#define CTRY_SINGAPORE 65

#define LOCALE_ITIME 35

#define CTRY_ALBANIA 355

#define LGRPID_HEBREW 12

#define TIME_NOTIMEMARKER 4

#define CTRY_PHILIPPINES 63

#define CTRY_COLOMBIA 57

#define WC_DISCARDNS 16

#define CTRY_JORDAN 962

#define C1_DEFINED 512

#define NORM_IGNORENONSPACE 2

#define CTRY_SOUTH_KOREA 82

#define CTRY_MALAYSIA 60

#define LOCALE_SDATE 29

#define CAL_SABBREVMONTHNAME13 46

#define CAL_SABBREVMONTHNAME12 45

#define CAL_SABBREVMONTHNAME11 44

#define CAL_SABBREVMONTHNAME10 43

#define LGRPID_BALTIC 3

#define C3_NONSPACING 1

#define LOCALE_SABBREVCTRYNAME 7

typedef ushort ino_t;

typedef uint _dev_t;

typedef long off_t;

typedef long _off_t;

typedef ushort _ino_t;

typedef uint dev_t;

typedef struct lconv lconv, *Plconv;

struct lconv {
    char *decimal_point;
    char *thousands_sep;
    char *grouping;
    char *int_curr_symbol;
    char *currency_symbol;
    char *mon_decimal_point;
    char *mon_thousands_sep;
    char *mon_grouping;
    char *positive_sign;
    char *negative_sign;
    char int_frac_digits;
    char frac_digits;
    char p_cs_precedes;
    char p_sep_by_space;
    char n_cs_precedes;
    char n_sep_by_space;
    char p_sign_posn;
    char n_sign_posn;
    wchar_t *_W_decimal_point;
    wchar_t *_W_thousands_sep;
    wchar_t *_W_int_curr_symbol;
    wchar_t *_W_currency_symbol;
    wchar_t *_W_mon_decimal_point;
    wchar_t *_W_mon_thousands_sep;
    wchar_t *_W_positive_sign;
    wchar_t *_W_negative_sign;
};

typedef uint size_t;

typedef ushort wint_t;

typedef struct threadlocaleinfostruct threadlocaleinfostruct, *Pthreadlocaleinfostruct;

typedef struct threadlocaleinfostruct *pthreadlocinfo;

typedef struct localerefcount localerefcount, *Plocalerefcount;

typedef struct localerefcount locrefcount;

typedef struct __lc_time_data __lc_time_data, *P__lc_time_data;

struct localerefcount {
    char *locale;
    wchar_t *wlocale;
    int *refcount;
    int *wrefcount;
};

struct threadlocaleinfostruct {
    int refcount;
    uint lc_codepage;
    uint lc_collate_cp;
    uint lc_time_cp;
    locrefcount lc_category[6];
    int lc_clike;
    int mb_cur_max;
    int *lconv_intl_refcount;
    int *lconv_num_refcount;
    int *lconv_mon_refcount;
    struct lconv *lconv;
    int *ctype1_refcount;
    ushort *ctype1;
    ushort *pctype;
    uchar *pclmap;
    uchar *pcumap;
    struct __lc_time_data *lc_time_curr;
    wchar_t *locale_name[6];
};

struct __lc_time_data {
    char *wday_abbr[7];
    char *wday[7];
    char *month_abbr[12];
    char *month[12];
    char *ampm[2];
    char *ww_sdatefmt;
    char *ww_ldatefmt;
    char *ww_timefmt;
    int ww_caltype;
    int refcount;
    wchar_t *_W_wday_abbr[7];
    wchar_t *_W_wday[7];
    wchar_t *_W_month_abbr[12];
    wchar_t *_W_month[12];
    wchar_t *_W_ampm[2];
    wchar_t *_W_ww_sdatefmt;
    wchar_t *_W_ww_ldatefmt;
    wchar_t *_W_ww_timefmt;
    wchar_t *_W_ww_locale_name;
};

typedef int errno_t;

typedef struct localeinfo_struct localeinfo_struct, *Plocaleinfo_struct;

typedef struct threadmbcinfostruct threadmbcinfostruct, *Pthreadmbcinfostruct;

typedef struct threadmbcinfostruct *pthreadmbcinfo;

struct threadmbcinfostruct {
    int refcount;
    int mbcodepage;
    int ismbcodepage;
    ushort mbulinfo[6];
    uchar mbctype[257];
    uchar mbcasemap[256];
    wchar_t *mblocalename;
};

struct localeinfo_struct {
    pthreadlocinfo locinfo;
    pthreadmbcinfo mbcinfo;
};

typedef int intptr_t;

typedef struct localeinfo_struct *_locale_t;

typedef ushort wctype_t;

typedef RPC_BINDING_HANDLE handle_t;

typedef struct RPC_STATS_VECTOR RPC_STATS_VECTOR, *PRPC_STATS_VECTOR;

struct RPC_STATS_VECTOR {
    uint Count;
    ulong Stats[1];
};

typedef struct _RPC_SECURITY_QOS _RPC_SECURITY_QOS, *P_RPC_SECURITY_QOS;

typedef struct _RPC_SECURITY_QOS RPC_SECURITY_QOS;

struct _RPC_SECURITY_QOS {
    ulong Version;
    ulong Capabilities;
    ulong IdentityTracking;
    ulong ImpersonationType;
};

typedef struct RPC_IF_ID_VECTOR RPC_IF_ID_VECTOR, *PRPC_IF_ID_VECTOR;

typedef struct _RPC_IF_ID _RPC_IF_ID, *P_RPC_IF_ID;

typedef struct _RPC_IF_ID RPC_IF_ID;

typedef GUID UUID;

struct _RPC_IF_ID {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

struct RPC_IF_ID_VECTOR {
    ulong Count;
    RPC_IF_ID *IfId[1];
};

typedef void *RPC_AUTHZ_HANDLE;

typedef struct _RPC_POLICY _RPC_POLICY, *P_RPC_POLICY;

struct _RPC_POLICY {
    uint Length;
    ulong EndpointFlags;
    ulong NICFlags;
};

typedef struct _RPC_PROTSEQ_VECTORW _RPC_PROTSEQ_VECTORW, *P_RPC_PROTSEQ_VECTORW;

typedef struct _RPC_PROTSEQ_VECTORW RPC_PROTSEQ_VECTORW;

struct _RPC_PROTSEQ_VECTORW {
    uint Count;
    ushort *Protseq[1];
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_W _SEC_WINNT_AUTH_IDENTITY_W, *P_SEC_WINNT_AUTH_IDENTITY_W;

struct _SEC_WINNT_AUTH_IDENTITY_W {
    ushort *User;
    ulong UserLength;
    ushort *Domain;
    ulong DomainLength;
    ushort *Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A _SEC_WINNT_AUTH_IDENTITY_A, *P_SEC_WINNT_AUTH_IDENTITY_A;

typedef struct _SEC_WINNT_AUTH_IDENTITY_A SEC_WINNT_AUTH_IDENTITY_A;

struct _SEC_WINNT_AUTH_IDENTITY_A {
    uchar *User;
    ulong UserLength;
    uchar *Domain;
    ulong DomainLength;
    uchar *Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef void *RPC_IF_HANDLE;

typedef struct _UUID_VECTOR _UUID_VECTOR, *P_UUID_VECTOR;

struct _UUID_VECTOR {
    ulong Count;
    UUID *Uuid[1];
};

typedef struct _RPC_PROTSEQ_VECTORA _RPC_PROTSEQ_VECTORA, *P_RPC_PROTSEQ_VECTORA;

typedef struct _RPC_PROTSEQ_VECTORA RPC_PROTSEQ_VECTORA;

struct _RPC_PROTSEQ_VECTORA {
    uint Count;
    uchar *Protseq[1];
};

typedef long RPC_STATUS;

typedef void (RPC_OBJECT_INQ_FN)(UUID *, UUID *, RPC_STATUS *);

typedef I_RPC_HANDLE *RPC_EP_INQ_HANDLE;

typedef struct RPC_CLIENT_INFORMATION1 RPC_CLIENT_INFORMATION1, *PRPC_CLIENT_INFORMATION1;

struct RPC_CLIENT_INFORMATION1 {
    uchar *UserName;
    uchar *ComputerName;
    ushort Privilege;
    ulong AuthFlags;
};

typedef struct _RPC_SECURITY_QOS *PRPC_SECURITY_QOS;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;

typedef struct _UUID_VECTOR UUID_VECTOR;

typedef void (*RPC_AUTH_KEY_RETRIEVAL_FN)(void *, ushort *, ulong, void **, RPC_STATUS *);

typedef RPC_STATUS (RPC_IF_CALLBACK_FN)(RPC_IF_HANDLE, void *);

typedef struct _RPC_POLICY RPC_POLICY;

typedef void *RPC_AUTH_IDENTITY_HANDLE;

typedef void (RPC_SECURITY_CALLBACK_FN)(void *);

typedef struct _SEC_WINNT_AUTH_IDENTITY_A *PSEC_WINNT_AUTH_IDENTITY_A;

typedef int (*RPC_MGMT_AUTHORIZATION_FN)(RPC_BINDING_HANDLE, ulong, RPC_STATUS *);

typedef struct _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;

typedef struct _RPC_POLICY *PRPC_POLICY;

#define RPC_C_PROTECT_LEVEL_DEFAULT 0

#define RPC_C_IMP_LEVEL_ANONYMOUS 1

#define RPC_C_MGMT_INQ_PRINC_NAME 1

#define RPC_C_AUTHN_GSS_SCHANNEL 14

#define RPC_C_AUTHN_LEVEL_CALL 3

#define RPC_C_OPT_MQ_AUTHN_SERVICE 5

#define RPC_C_AUTHN_DIGEST 21

#define RPC_C_AUTHN_DCE_PUBLIC 2

#define RPC_C_DONT_FAIL 4

#define RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY 16

#define RPC_C_USE_INTERNET_PORT 1

#define RPC_C_PROTECT_LEVEL_CONNECT 2

#define RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED 8

#define RPC_C_EP_MATCH_BY_IF 1

#define RPC_C_AUTHZ_NAME 1

#define RPC_C_BINDING_MAX_TIMEOUT 9

#define RPC_C_AUTHN_MQ 100

#define RPC_C_MQ_CLEAR_ON_OPEN 2

#define RPC_C_CANCEL_INFINITE_TIMEOUT -1

#define RPC_IF_ALLOW_SECURE_ONLY 8

#define RPC_C_MQ_JOURNAL_NONE 0

#define RPC_C_IMP_LEVEL_IDENTIFY 2

#define RPC_IF_ALLOW_UNKNOWN_AUTHORITY 4

#define RPC_C_AUTHN_WINNT 10

#define RPC_C_AUTHN_LEVEL_CONNECT 2

#define RPC_C_PROTECT_LEVEL_PKT_PRIVACY 6

#define RPC_C_AUTHN_DCE_PRIVATE 1

#define RPC_C_AUTHN_GSS_KERBEROS 16

#define RPC_C_AUTHN_LEVEL_PKT_PRIVACY 6

#define RPC_C_OPT_MQ_JOURNAL 3

#define RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY 4

#define SEC_WINNT_AUTH_IDENTITY_UNICODE 2

#define RPC_C_MQ_AUTHN_LEVEL_NONE 0

#define RPC_C_STATS_PKTS_OUT 3

#define RPC_C_MGMT_INQ_STATS 2

#define RPC_C_AUTHN_DPA 17

#define RPC_C_OPT_MQ_AUTHN_LEVEL 6

#define RPC_C_PROTSEQ_MAX_REQS_DEFAULT 10

#define DCE_C_ERROR_STRING_LEN 256

#define RPC_C_QOS_CAPABILITIES_DEFAULT 0

#define RPC_C_EP_MATCH_BY_OBJ 2

#define RPC_C_QOS_IDENTITY_STATIC 0

#define RPC_C_QOS_IDENTITY_DYNAMIC 1

#define RPC_C_MGMT_IS_SERVER_LISTEN 3

#define RPC_C_OPT_CALL_TIMEOUT 12

#define RPC_C_PROTECT_LEVEL_NONE 1

#define RPC_C_OPT_SECURITY_CALLBACK 10

#define RPC_C_FULL_CERT_CHAIN 1

#define RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC 2

#define RPC_C_OPT_MAX_OPTIONS 12

#define RPC_IF_AUTOLISTEN 1

#define RPC_C_EP_MATCH_BY_BOTH 3

#define RPC_C_LISTEN_MAX_CALLS_DEFAULT 1234

#define RPC_C_MGMT_INQ_IF_IDS 0

#define RPC_C_AUTHN_MSN 18

#define RPC_C_OPT_MQ_PRIORITY 2

#define RPC_C_STATS_CALLS_OUT 1

#define RPC_C_AUTHN_DEFAULT 4294967295

#define RPC_C_OPT_MQ_ACKNOWLEDGE 4

#define RPC_C_AUTHN_GSS_NEGOTIATE 9

#define RPC_C_OPT_UNIQUE_BINDING 11

#define RPC_C_MQ_TEMPORARY 0

#define RPC_C_IMP_LEVEL_IMPERSONATE 3

#define RPC_C_PROTECT_LEVEL_PKT 4

#define RPC_C_PROTECT_LEVEL_CALL 3

#define RPC_C_VERS_MAJOR_ONLY 4

#define RPC_C_MQ_PERMANENT 1

#define RPC_C_AUTHZ_DEFAULT 4294967295

#define SEC_WINNT_AUTH_IDENTITY_ANSI 1

#define RPC_C_VERS_UPTO 5

#define RPC_C_SECURITY_QOS_VERSION 1

#define RPC_C_VERS_EXACT 3

#define RPC_C_OPT_DONT_LINGER 13

#define RPC_C_BINDING_INFINITE_TIMEOUT 10

#define RPC_C_PARM_BUFFER_LENGTH 2

#define RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY 8

#define RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH 1

#define RPC_C_MQ_JOURNAL_DEADLETTER 1

#define RPC_C_EP_ALL_ELTS 0

#define RPC_C_AUTHN_LEVEL_NONE 1

#define RPC_C_MQ_RECOVERABLE 1

#define RPC_C_OPT_BINDING_NONCAUSAL 9

#define RPC_C_BINDING_MIN_TIMEOUT 0

#define RPC_C_AUTHN_LEVEL_PKT_INTEGRITY 5

#define RPC_C_BIND_TO_ALL_NICS 1

#define RPC_C_USE_INTRANET_PORT 2

#define RPC_C_NO_CREDENTIALS -1

#define RPC_C_IMP_LEVEL_DEFAULT 0

#define RPC_C_AUTHN_DEC_PUBLIC 4

#define RPC_C_VERS_COMPATIBLE 2

#define RPC_C_VERS_ALL 1

#define RPC_C_STATS_PKTS_IN 2

#define RPC_C_AUTHZ_DCE 2

#define RPC_C_PARM_MAX_PACKET_LENGTH 1

#define RPC_C_MQ_EXPRESS 0

#define RPC_IF_OLE 2

#define RPC_C_MQ_USE_EXISTING_SECURITY 4

#define RPC_C_BINDING_DEFAULT_TIMEOUT 5

#define RPC_C_AUTHN_LEVEL_DEFAULT 0

#define RPC_C_AUTHZ_NONE 0

#define RPC_C_OPT_MQ_DELIVERY 1

#define RPC_C_STATS_CALLS_IN 0

#define RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE 7

#define RPC_C_MGMT_STOP_SERVER_LISTEN 4

#define RPC_C_PROTECT_LEVEL_PKT_INTEGRITY 5

#define RPC_C_AUTHN_LEVEL_PKT 4

#define RPC_C_AUTHN_NONE 0

#define RPC_C_MQ_JOURNAL_ALWAYS 2

#define RPC_C_IMP_LEVEL_DELEGATE 4

typedef struct _BIN_COUNT _BIN_COUNT, *P_BIN_COUNT;

typedef struct _BIN_RANGE _BIN_RANGE, *P_BIN_RANGE;

typedef struct _BIN_RANGE BIN_RANGE;

struct _BIN_RANGE {
    LARGE_INTEGER StartValue;
    LARGE_INTEGER Length;
};

struct _BIN_COUNT {
    BIN_RANGE BinRange;
    DWORD BinCount;
};

typedef struct _struct_1349 _struct_1349, *P_struct_1349;

struct _struct_1349 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER _FSCTL_QUERY_FAT_BPB_BUFFER, *P_FSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER FSCTL_QUERY_FAT_BPB_BUFFER;

struct _FSCTL_QUERY_FAT_BPB_BUFFER {
    BYTE First0x24BytesOfBootSector[36];
};

typedef struct _STORAGE_PREDICT_FAILURE _STORAGE_PREDICT_FAILURE, *P_STORAGE_PREDICT_FAILURE;

struct _STORAGE_PREDICT_FAILURE {
    DWORD PredictFailure;
    BYTE VendorSpecific[512];
};

typedef struct _SENDCMDOUTPARAMS _SENDCMDOUTPARAMS, *P_SENDCMDOUTPARAMS;

typedef struct _DRIVERSTATUS _DRIVERSTATUS, *P_DRIVERSTATUS;

typedef struct _DRIVERSTATUS DRIVERSTATUS;

struct _DRIVERSTATUS {
    BYTE bDriverError;
    BYTE bIDEError;
    BYTE bReserved[2];
    DWORD dwReserved[2];
};

struct _SENDCMDOUTPARAMS {
    DWORD cBufferSize;
    DRIVERSTATUS DriverStatus;
    BYTE bBuffer[1];
};

typedef struct _STORAGE_BUS_RESET_REQUEST _STORAGE_BUS_RESET_REQUEST, *P_STORAGE_BUS_RESET_REQUEST;

typedef struct _STORAGE_BUS_RESET_REQUEST *PSTORAGE_BUS_RESET_REQUEST;

struct _STORAGE_BUS_RESET_REQUEST {
    BYTE PathId;
};

typedef struct _FILESYSTEM_STATISTICS _FILESYSTEM_STATISTICS, *P_FILESYSTEM_STATISTICS;

struct _FILESYSTEM_STATISTICS {
    WORD FileSystemType;
    WORD Version;
    DWORD SizeOfCompleteStructure;
    DWORD UserFileReads;
    DWORD UserFileReadBytes;
    DWORD UserDiskReads;
    DWORD UserFileWrites;
    DWORD UserFileWriteBytes;
    DWORD UserDiskWrites;
    DWORD MetaDataReads;
    DWORD MetaDataReadBytes;
    DWORD MetaDataDiskReads;
    DWORD MetaDataWrites;
    DWORD MetaDataWriteBytes;
    DWORD MetaDataDiskWrites;
};

typedef struct STARTING_LCN_INPUT_BUFFER STARTING_LCN_INPUT_BUFFER, *PSTARTING_LCN_INPUT_BUFFER;

struct STARTING_LCN_INPUT_BUFFER {
    LARGE_INTEGER StartingLcn;
};

typedef struct _STORAGE_PREDICT_FAILURE STORAGE_PREDICT_FAILURE;

typedef struct _CHANGER_PRODUCT_DATA _CHANGER_PRODUCT_DATA, *P_CHANGER_PRODUCT_DATA;

typedef struct _CHANGER_PRODUCT_DATA CHANGER_PRODUCT_DATA;

struct _CHANGER_PRODUCT_DATA {
    BYTE VendorId[8];
    BYTE ProductId[16];
    BYTE Revision[4];
    BYTE SerialNumber[32];
    BYTE DeviceType;
};

typedef struct _TAPE_STATISTICS _TAPE_STATISTICS, *P_TAPE_STATISTICS;

struct _TAPE_STATISTICS {
    DWORD Version;
    DWORD Flags;
    LARGE_INTEGER RecoveredWrites;
    LARGE_INTEGER UnrecoveredWrites;
    LARGE_INTEGER RecoveredReads;
    LARGE_INTEGER UnrecoveredReads;
    BYTE CompressionRatioReads;
    BYTE CompressionRatioWrites;
};

typedef struct _IDEREGS _IDEREGS, *P_IDEREGS;

struct _IDEREGS {
    BYTE bFeaturesReg;
    BYTE bSectorCountReg;
    BYTE bSectorNumberReg;
    BYTE bCylLowReg;
    BYTE bCylHighReg;
    BYTE bDriveHeadReg;
    BYTE bCommandReg;
    BYTE bReserved;
};

typedef struct _BIN_RESULTS _BIN_RESULTS, *P_BIN_RESULTS;

typedef struct _BIN_COUNT BIN_COUNT;

struct _BIN_RESULTS {
    DWORD NumberOfBins;
    BIN_COUNT BinCounts[1];
};

typedef struct _SENDCMDOUTPARAMS *PSENDCMDOUTPARAMS;

typedef struct _READ_ELEMENT_ADDRESS_INFO _READ_ELEMENT_ADDRESS_INFO, *P_READ_ELEMENT_ADDRESS_INFO;

typedef struct _CHANGER_ELEMENT_STATUS _CHANGER_ELEMENT_STATUS, *P_CHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_STATUS CHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT _CHANGER_ELEMENT, *P_CHANGER_ELEMENT;

typedef struct _CHANGER_ELEMENT CHANGER_ELEMENT;

typedef enum _ELEMENT_TYPE {
    AllElements=0,
    ChangerTransport=1,
    ChangerSlot=2,
    ChangerIEPort=3,
    ChangerDrive=4,
    ChangerDoor=5,
    ChangerKeypad=6,
    ChangerMaxElement=7
} _ELEMENT_TYPE;

typedef enum _ELEMENT_TYPE ELEMENT_TYPE;

struct _CHANGER_ELEMENT {
    ELEMENT_TYPE ElementType;
    DWORD ElementAddress;
};

struct _CHANGER_ELEMENT_STATUS {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
};

struct _READ_ELEMENT_ADDRESS_INFO {
    DWORD NumberOfElements;
    CHANGER_ELEMENT_STATUS ElementStatus[1];
};

typedef struct _DEVICE_MEDIA_INFO _DEVICE_MEDIA_INFO, *P_DEVICE_MEDIA_INFO;

typedef struct _DEVICE_MEDIA_INFO DEVICE_MEDIA_INFO;

typedef union _union_1296 _union_1296, *P_union_1296;

typedef struct _struct_1297 _struct_1297, *P_struct_1297;

typedef struct _struct_1298 _struct_1298, *P_struct_1298;

typedef struct _struct_1299.conflict _struct_1299.conflict, *P_struct_1299.conflict;

typedef enum _STORAGE_MEDIA_TYPE {
    DDS_4mm=32,
    MiniQic=33,
    Travan=34,
    QIC=35,
    MP_8mm=36,
    AME_8mm=37,
    AIT1_8mm=38,
    DLT=39,
    NCTP=40,
    IBM_3480=41,
    IBM_3490E=42,
    IBM_Magstar_3590=43,
    IBM_Magstar_MP=44,
    STK_DATA_D3=45,
    SONY_DTF=46,
    DV_6mm=47,
    DMI=48,
    SONY_D2=49,
    CLEANER_CARTRIDGE=50,
    CD_ROM=51,
    CD_R=52,
    CD_RW=53,
    DVD_ROM=54,
    DVD_R=55,
    DVD_RW=56,
    MO_3_RW=57,
    MO_5_WO=58,
    MO_5_RW=59,
    MO_5_LIMDOW=60,
    PC_5_WO=61,
    PC_5_RW=62,
    PD_5_RW=63,
    ABL_5_WO=64,
    PINNACLE_APEX_5_RW=65,
    SONY_12_WO=66,
    PHILIPS_12_WO=67,
    HITACHI_12_WO=68,
    CYGNET_12_WO=69,
    KODAK_14_WO=70,
    MO_NFR_525=71,
    NIKON_12_RW=72,
    IOMEGA_ZIP=73,
    IOMEGA_JAZ=74,
    SYQUEST_EZ135=75,
    SYQUEST_EZFLYER=76,
    SYQUEST_SYJET=77,
    AVATAR_F2=78,
    MP2_8mm=79,
    DST_S=80,
    DST_M=81,
    DST_L=82,
    VXATape_1=83,
    VXATape_2=84,
    STK_9840=85,
    LTO_Ultrium=86,
    LTO_Accelis=87,
    DVD_RAM=88,
    AIT_8mm=89,
    ADR_1=90,
    ADR_2=91
} _STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_MEDIA_TYPE STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_BUS_TYPE {
    BusTypeUnknown=0,
    BusTypeScsi=1,
    BusTypeAtapi=2,
    BusTypeAta=3,
    BusType1394=4,
    BusTypeSsa=5,
    BusTypeFibre=6,
    BusTypeUsb=7,
    BusTypeRAID=8,
    BusTypeMaxReserved=127
} _STORAGE_BUS_TYPE;

typedef enum _STORAGE_BUS_TYPE STORAGE_BUS_TYPE;

typedef union _union_1300 _union_1300, *P_union_1300;

typedef struct _struct_1301.conflict _struct_1301.conflict, *P_struct_1301.conflict;

struct _struct_1297 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

struct _struct_1301.conflict {
    BYTE MediumType;
    BYTE DensityCode;
};

union _union_1300 {
    struct _struct_1301.conflict ScsiInformation;
};

struct _struct_1299.conflict {
    STORAGE_MEDIA_TYPE MediaType;
    DWORD MediaCharacteristics;
    DWORD CurrentBlockSize;
    STORAGE_BUS_TYPE BusType;
    union _union_1300 BusSpecificData;
};

struct _struct_1298 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

union _union_1296 {
    struct _struct_1297 DiskInfo;
    struct _struct_1298 RemovableDiskInfo;
    struct _struct_1299.conflict TapeInfo;
};

struct _DEVICE_MEDIA_INFO {
    union _union_1296 DeviceSpecific;
};

typedef struct _GETVERSIONINPARAMS _GETVERSIONINPARAMS, *P_GETVERSIONINPARAMS;

struct _GETVERSIONINPARAMS {
    BYTE bVersion;
    BYTE bRevision;
    BYTE bReserved;
    BYTE bIDEDeviceMap;
    DWORD fCapabilities;
    DWORD dwReserved[4];
};

typedef struct _DISK_RECORD _DISK_RECORD, *P_DISK_RECORD;


/* WARNING! conflicting data type names: /deps/wtypes.h/BOOLEAN - /deps/winnt.h/BOOLEAN */

struct _DISK_RECORD {
    LARGE_INTEGER ByteOffset;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    PVOID VirtualAddress;
    DWORD NumberOfBytes;
    BYTE DeviceNumber;
    BOOLEAN ReadRequest;
};

typedef struct _SET_PARTITION_INFORMATION _SET_PARTITION_INFORMATION, *P_SET_PARTITION_INFORMATION;

typedef struct _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;

struct _SET_PARTITION_INFORMATION {
    BYTE PartitionType;
};

typedef struct _struct_1826 _struct_1826, *P_struct_1826;

struct _struct_1826 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _STORAGE_DEVICE_NUMBER _STORAGE_DEVICE_NUMBER, *P_STORAGE_DEVICE_NUMBER;

struct _STORAGE_DEVICE_NUMBER {
    DWORD DeviceType;
    DWORD DeviceNumber;
    DWORD PartitionNumber;
};

typedef struct NTFS_VOLUME_DATA_BUFFER NTFS_VOLUME_DATA_BUFFER, *PNTFS_VOLUME_DATA_BUFFER;

struct NTFS_VOLUME_DATA_BUFFER {
    LARGE_INTEGER VolumeSerialNumber;
    LARGE_INTEGER NumberSectors;
    LARGE_INTEGER TotalClusters;
    LARGE_INTEGER FreeClusters;
    LARGE_INTEGER TotalReserved;
    DWORD BytesPerSector;
    DWORD BytesPerCluster;
    DWORD BytesPerFileRecordSegment;
    DWORD ClustersPerFileRecordSegment;
    LARGE_INTEGER MftValidDataLength;
    LARGE_INTEGER MftStartLcn;
    LARGE_INTEGER Mft2StartLcn;
    LARGE_INTEGER MftZoneStart;
    LARGE_INTEGER MftZoneEnd;
};

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION _CHANGER_SEND_VOLUME_TAG_INFORMATION, *P_CHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION CHANGER_SEND_VOLUME_TAG_INFORMATION;

struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {
    CHANGER_ELEMENT StartingElement;
    DWORD ActionCode;
    BYTE VolumeIDTemplate[40];
};

typedef struct _FAT_STATISTICS _FAT_STATISTICS, *P_FAT_STATISTICS;

struct _FAT_STATISTICS {
    DWORD CreateHits;
    DWORD SuccessfulCreates;
    DWORD FailedCreates;
    DWORD NonCachedReads;
    DWORD NonCachedReadBytes;
    DWORD NonCachedWrites;
    DWORD NonCachedWriteBytes;
    DWORD NonCachedDiskReads;
    DWORD NonCachedDiskWrites;
};

typedef struct _CHANGER_PRODUCT_DATA *PCHANGER_PRODUCT_DATA;

typedef struct _REASSIGN_BLOCKS _REASSIGN_BLOCKS, *P_REASSIGN_BLOCKS;

struct _REASSIGN_BLOCKS {
    WORD Reserved;
    WORD Count;
    DWORD BlockNumber[1];
};

typedef enum _MEDIA_TYPE {
    Unknown=0,
    F5_1Pt2_512=1,
    F3_1Pt44_512=2,
    F3_2Pt88_512=3,
    F3_20Pt8_512=4,
    F3_720_512=5,
    F5_360_512=6,
    F5_320_512=7,
    F5_320_1024=8,
    F5_180_512=9,
    F5_160_512=10,
    RemovableMedia=11,
    FixedMedia=12,
    F3_120M_512=13,
    F3_640_512=14,
    F5_640_512=15,
    F5_720_512=16,
    F3_1Pt2_512=17,
    F3_1Pt23_1024=18,
    F5_1Pt23_1024=19,
    F3_128Mb_512=20,
    F3_230Mb_512=21,
    F8_256_128=22,
    F3_200Mb_512=23,
    F3_240M_512=24,
    F3_32M_512=25
} _MEDIA_TYPE;

typedef enum _MEDIA_TYPE MEDIA_TYPE;

typedef struct _FILE_PREFETCH _FILE_PREFETCH, *P_FILE_PREFETCH;

struct _FILE_PREFETCH {
    DWORD Type;
    DWORD Count;
    DWORDLONG Prefetch[1];
};

typedef enum _BIN_TYPES {
    RequestSize=0,
    RequestLocation=1
} _BIN_TYPES;

typedef struct _CHANGER_ELEMENT_STATUS_EX _CHANGER_ELEMENT_STATUS_EX, *P_CHANGER_ELEMENT_STATUS_EX;

typedef struct _CHANGER_ELEMENT_STATUS_EX *PCHANGER_ELEMENT_STATUS_EX;

struct _CHANGER_ELEMENT_STATUS_EX {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
    BYTE VendorIdentification[8];
    BYTE ProductIdentification[16];
    BYTE SerialNumber[32];
};

typedef struct _SENDCMDOUTPARAMS SENDCMDOUTPARAMS;

typedef struct _CHANGER_SET_ACCESS _CHANGER_SET_ACCESS, *P_CHANGER_SET_ACCESS;

struct _CHANGER_SET_ACCESS {
    CHANGER_ELEMENT Element;
    DWORD Control;
};

typedef struct _GET_CHANGER_PARAMETERS _GET_CHANGER_PARAMETERS, *P_GET_CHANGER_PARAMETERS;

struct _GET_CHANGER_PARAMETERS {
    DWORD Size;
    WORD NumberTransportElements;
    WORD NumberStorageElements;
    WORD NumberCleanerSlots;
    WORD NumberIEElements;
    WORD NumberDataTransferElements;
    WORD NumberOfDoors;
    WORD FirstSlotNumber;
    WORD FirstDriveNumber;
    WORD FirstTransportNumber;
    WORD FirstIEPortNumber;
    WORD FirstCleanerSlotAddress;
    WORD MagazineSize;
    DWORD DriveCleanTimeout;
    DWORD Features0;
    DWORD Features1;
    BYTE MoveFromTransport;
    BYTE MoveFromSlot;
    BYTE MoveFromIePort;
    BYTE MoveFromDrive;
    BYTE ExchangeFromTransport;
    BYTE ExchangeFromSlot;
    BYTE ExchangeFromIePort;
    BYTE ExchangeFromDrive;
    BYTE LockUnlockCapabilities;
    BYTE PositionCapabilities;
    BYTE Reserved1[2];
    DWORD Reserved2[2];
};

typedef struct _CHANGER_ELEMENT_LIST _CHANGER_ELEMENT_LIST, *P_CHANGER_ELEMENT_LIST;

struct _CHANGER_ELEMENT_LIST {
    CHANGER_ELEMENT Element;
    DWORD NumberOfElements;
};

typedef struct _FORMAT_EX_PARAMETERS _FORMAT_EX_PARAMETERS, *P_FORMAT_EX_PARAMETERS;

typedef struct _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;

struct _FORMAT_EX_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
    WORD FormatGapLength;
    WORD SectorsPerTrack;
    WORD SectorNumber[1];
};

typedef struct _NTFS_STATISTICS _NTFS_STATISTICS, *P_NTFS_STATISTICS;

typedef struct _NTFS_STATISTICS *PNTFS_STATISTICS;

typedef struct _struct_1357 _struct_1357, *P_struct_1357;

typedef struct _struct_1358 _struct_1358, *P_struct_1358;

typedef struct _struct_1359.conflict _struct_1359.conflict, *P_struct_1359.conflict;

typedef struct _struct_1360 _struct_1360, *P_struct_1360;

typedef struct _struct_1361.conflict _struct_1361.conflict, *P_struct_1361.conflict;

struct _struct_1359.conflict {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

struct _struct_1358 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1357 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1361.conflict {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

struct _struct_1360 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _NTFS_STATISTICS {
    DWORD LogFileFullExceptions;
    DWORD OtherExceptions;
    DWORD MftReads;
    DWORD MftReadBytes;
    DWORD MftWrites;
    DWORD MftWriteBytes;
    struct _struct_1357 MftWritesUserLevel;
    WORD MftWritesFlushForLogFileFull;
    WORD MftWritesLazyWriter;
    WORD MftWritesUserRequest;
    DWORD Mft2Writes;
    DWORD Mft2WriteBytes;
    struct _struct_1358 Mft2WritesUserLevel;
    WORD Mft2WritesFlushForLogFileFull;
    WORD Mft2WritesLazyWriter;
    WORD Mft2WritesUserRequest;
    DWORD RootIndexReads;
    DWORD RootIndexReadBytes;
    DWORD RootIndexWrites;
    DWORD RootIndexWriteBytes;
    DWORD BitmapReads;
    DWORD BitmapReadBytes;
    DWORD BitmapWrites;
    DWORD BitmapWriteBytes;
    WORD BitmapWritesFlushForLogFileFull;
    WORD BitmapWritesLazyWriter;
    WORD BitmapWritesUserRequest;
    struct _struct_1359.conflict BitmapWritesUserLevel;
    DWORD MftBitmapReads;
    DWORD MftBitmapReadBytes;
    DWORD MftBitmapWrites;
    DWORD MftBitmapWriteBytes;
    WORD MftBitmapWritesFlushForLogFileFull;
    WORD MftBitmapWritesLazyWriter;
    WORD MftBitmapWritesUserRequest;
    struct _struct_1360 MftBitmapWritesUserLevel;
    DWORD UserIndexReads;
    DWORD UserIndexReadBytes;
    DWORD UserIndexWrites;
    DWORD UserIndexWriteBytes;
    DWORD LogFileReads;
    DWORD LogFileReadBytes;
    DWORD LogFileWrites;
    DWORD LogFileWriteBytes;
    struct _struct_1361.conflict Allocate;
};

typedef struct _SENDCMDINPARAMS _SENDCMDINPARAMS, *P_SENDCMDINPARAMS;

typedef struct _SENDCMDINPARAMS *LPSENDCMDINPARAMS;

typedef struct _IDEREGS IDEREGS;

struct _SENDCMDINPARAMS {
    DWORD cBufferSize;
    IDEREGS irDriveRegs;
    BYTE bDriveNumber;
    BYTE bReserved[3];
    DWORD dwReserved[4];
    BYTE bBuffer[1];
};

typedef union _union_1302 _union_1302, *P_union_1302;

typedef struct _struct_1303 _struct_1303, *P_struct_1303;

struct _struct_1303 {
    BYTE MediumType;
    BYTE DensityCode;
};

union _union_1302 {
    struct _struct_1303 ScsiInformation;
};

typedef struct _struct_1351 _struct_1351, *P_struct_1351;

struct _struct_1351 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _CHANGER_READ_ELEMENT_STATUS _CHANGER_READ_ELEMENT_STATUS, *P_CHANGER_READ_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_LIST CHANGER_ELEMENT_LIST;

struct _CHANGER_READ_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN VolumeTagInfo;
};

typedef struct _HISTOGRAM_BUCKET _HISTOGRAM_BUCKET, *P_HISTOGRAM_BUCKET;

typedef struct _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;

struct _HISTOGRAM_BUCKET {
    DWORD Reads;
    DWORD Writes;
};

typedef struct _CHANGER_EXCHANGE_MEDIUM _CHANGER_EXCHANGE_MEDIUM, *P_CHANGER_EXCHANGE_MEDIUM;

struct _CHANGER_EXCHANGE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination1;
    CHANGER_ELEMENT Destination2;
    BOOLEAN Flip1;
    BOOLEAN Flip2;
};

typedef struct _struct_1849 _struct_1849, *P_struct_1849;

struct _struct_1849 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

typedef struct _struct_1848 _struct_1848, *P_struct_1848;

struct _struct_1848 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _struct_1847 _struct_1847, *P_struct_1847;

struct _struct_1847 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _TAPE_STATISTICS *PTAPE_STATISTICS;

typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;

typedef struct _GETVERSIONINPARAMS GETVERSIONINPARAMS;

typedef struct _CHANGER_ELEMENT_STATUS *PCHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_SET_POSITION _CHANGER_SET_POSITION, *P_CHANGER_SET_POSITION;

struct _CHANGER_SET_POSITION {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct MOVE_FILE_DATA MOVE_FILE_DATA, *PMOVE_FILE_DATA;

struct MOVE_FILE_DATA {
    HANDLE FileHandle;
    LARGE_INTEGER StartingVcn;
    LARGE_INTEGER StartingLcn;
    DWORD ClusterCount;
};

typedef struct _DISK_EXTENT _DISK_EXTENT, *P_DISK_EXTENT;

typedef struct _DISK_EXTENT DISK_EXTENT;

struct _DISK_EXTENT {
    DWORD DiskNumber;
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER ExtentLength;
};

typedef struct RETRIEVAL_POINTERS_BUFFER RETRIEVAL_POINTERS_BUFFER, *PRETRIEVAL_POINTERS_BUFFER;

struct RETRIEVAL_POINTERS_BUFFER {
    DWORD ExtentCount;
    LARGE_INTEGER StartingVcn;
    struct _struct_1349 Extents[1];
};

typedef struct _DISK_PERFORMANCE _DISK_PERFORMANCE, *P_DISK_PERFORMANCE;

typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;

struct _DISK_PERFORMANCE {
    LARGE_INTEGER BytesRead;
    LARGE_INTEGER BytesWritten;
    LARGE_INTEGER ReadTime;
    LARGE_INTEGER WriteTime;
    LARGE_INTEGER IdleTime;
    DWORD ReadCount;
    DWORD WriteCount;
    DWORD QueueDepth;
    DWORD SplitCount;
    LARGE_INTEGER QueryTime;
    DWORD StorageDeviceNumber;
    WCHAR StorageManagerName[8];
};

typedef struct _struct_1851 _struct_1851, *P_struct_1851;

struct _struct_1851 {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

typedef struct _struct_1850 _struct_1850, *P_struct_1850;

struct _struct_1850 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _GETVERSIONINPARAMS *LPGETVERSIONINPARAMS;

typedef struct _VERIFY_INFORMATION _VERIFY_INFORMATION, *P_VERIFY_INFORMATION;

struct _VERIFY_INFORMATION {
    LARGE_INTEGER StartingOffset;
    DWORD Length;
};

typedef struct _DISK_GEOMETRY _DISK_GEOMETRY, *P_DISK_GEOMETRY;

typedef struct _DISK_GEOMETRY *PDISK_GEOMETRY;

struct _DISK_GEOMETRY {
    LARGE_INTEGER Cylinders;
    MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
};

typedef struct _STORAGE_PREDICT_FAILURE *PSTORAGE_PREDICT_FAILURE;

typedef struct _GET_CHANGER_PARAMETERS GET_CHANGER_PARAMETERS;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER *PFSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _DISK_PERFORMANCE *PDISK_PERFORMANCE;

typedef struct _READ_ELEMENT_ADDRESS_INFO *PREAD_ELEMENT_ADDRESS_INFO;

typedef struct _DISK_RECORD DISK_RECORD;

typedef struct _PREVENT_MEDIA_REMOVAL _PREVENT_MEDIA_REMOVAL, *P_PREVENT_MEDIA_REMOVAL;

typedef struct _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;

struct _PREVENT_MEDIA_REMOVAL {
    BOOLEAN PreventMediaRemoval;
};

typedef struct NTFS_FILE_RECORD_OUTPUT_BUFFER NTFS_FILE_RECORD_OUTPUT_BUFFER, *PNTFS_FILE_RECORD_OUTPUT_BUFFER;

struct NTFS_FILE_RECORD_OUTPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
    DWORD FileRecordLength;
    BYTE FileRecordBuffer[1];
};

typedef struct STARTING_VCN_INPUT_BUFFER STARTING_VCN_INPUT_BUFFER, *PSTARTING_VCN_INPUT_BUFFER;

struct STARTING_VCN_INPUT_BUFFER {
    LARGE_INTEGER StartingVcn;
};

typedef struct _TAPE_STATISTICS TAPE_STATISTICS;

typedef struct _DISK_HISTOGRAM _DISK_HISTOGRAM, *P_DISK_HISTOGRAM;

typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;

struct _DISK_HISTOGRAM {
    LARGE_INTEGER DiskSize;
    LARGE_INTEGER Start;
    LARGE_INTEGER End;
    LARGE_INTEGER Average;
    LARGE_INTEGER AverageRead;
    LARGE_INTEGER AverageWrite;
    DWORD Granularity;
    DWORD Size;
    DWORD ReadCount;
    DWORD WriteCount;
    PHISTOGRAM_BUCKET Histogram;
};

typedef struct _PARTITION_INFORMATION _PARTITION_INFORMATION, *P_PARTITION_INFORMATION;

typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;

struct _PARTITION_INFORMATION {
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER PartitionLength;
    DWORD HiddenSectors;
    DWORD PartitionNumber;
    BYTE PartitionType;
    BOOLEAN BootIndicator;
    BOOLEAN RecognizedPartition;
    BOOLEAN RewritePartition;
};

typedef struct _GET_MEDIA_TYPES _GET_MEDIA_TYPES, *P_GET_MEDIA_TYPES;

typedef struct _GET_MEDIA_TYPES *PGET_MEDIA_TYPES;

struct _GET_MEDIA_TYPES {
    DWORD DeviceType;
    DWORD MediaInfoCount;
    DEVICE_MEDIA_INFO MediaInfo[1];
};

typedef struct _FILE_PREFETCH FILE_PREFETCH;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {
    DeviceProblemNone=0,
    DeviceProblemHardware=1,
    DeviceProblemCHMError=2,
    DeviceProblemDoorOpen=3,
    DeviceProblemCalibrationError=4,
    DeviceProblemTargetFailure=5,
    DeviceProblemCHMMoveError=6,
    DeviceProblemCHMZeroError=7,
    DeviceProblemCartridgeInsertError=8,
    DeviceProblemPositionError=9,
    DeviceProblemSensorError=10,
    DeviceProblemCartridgeEjectError=11,
    DeviceProblemGripperError=12,
    DeviceProblemDriveError=13
} _CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _PARTITION_INFORMATION *PPARTITION_INFORMATION;

typedef struct _DISK_RECORD *PDISK_RECORD;

typedef struct _GET_MEDIA_TYPES GET_MEDIA_TYPES;

typedef struct NTFS_FILE_RECORD_INPUT_BUFFER NTFS_FILE_RECORD_INPUT_BUFFER, *PNTFS_FILE_RECORD_INPUT_BUFFER;

struct NTFS_FILE_RECORD_INPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
};

typedef struct _VOLUME_DISK_EXTENTS _VOLUME_DISK_EXTENTS, *P_VOLUME_DISK_EXTENTS;

struct _VOLUME_DISK_EXTENTS {
    DWORD NumberOfDiskExtents;
    DISK_EXTENT Extents[1];
};

typedef struct _PATHNAME_BUFFER _PATHNAME_BUFFER, *P_PATHNAME_BUFFER;

typedef struct _PATHNAME_BUFFER PATHNAME_BUFFER;

struct _PATHNAME_BUFFER {
    DWORD PathNameLength;
    WCHAR Name[1];
};

typedef struct _STORAGE_HOTPLUG_INFO _STORAGE_HOTPLUG_INFO, *P_STORAGE_HOTPLUG_INFO;

struct _STORAGE_HOTPLUG_INFO {
    DWORD Size;
    BOOLEAN MediaRemovable;
    BOOLEAN MediaHotplug;
    BOOLEAN DeviceHotplug;
    BOOLEAN WriteCacheEnableOverride;
};

typedef struct _CHANGER_MOVE_MEDIUM _CHANGER_MOVE_MEDIUM, *P_CHANGER_MOVE_MEDIUM;

struct _CHANGER_MOVE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;

typedef struct _VERIFY_INFORMATION *PVERIFY_INFORMATION;

typedef struct _TAPE_GET_STATISTICS _TAPE_GET_STATISTICS, *P_TAPE_GET_STATISTICS;

typedef struct _TAPE_GET_STATISTICS TAPE_GET_STATISTICS;

struct _TAPE_GET_STATISTICS {
    DWORD Operation;
};

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS _CHANGER_INITIALIZE_ELEMENT_STATUS, *P_CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS *PCHANGER_INITIALIZE_ELEMENT_STATUS;

struct _CHANGER_INITIALIZE_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN BarCodeScan;
};

typedef struct _IDEREGS *PIDEREGS;

typedef struct _TAPE_GET_STATISTICS *PTAPE_GET_STATISTICS;

typedef enum _ELEMENT_TYPE *PELEMENT_TYPE;

typedef struct _CHANGER_ELEMENT_STATUS_EX CHANGER_ELEMENT_STATUS_EX;

typedef struct NTFS_EXTENDED_VOLUME_DATA NTFS_EXTENDED_VOLUME_DATA, *PNTFS_EXTENDED_VOLUME_DATA;

struct NTFS_EXTENDED_VOLUME_DATA {
    DWORD ByteCount;
    WORD MajorVersion;
    WORD MinorVersion;
};

typedef struct _IDEREGS *LPIDEREGS;

typedef struct _BIN_RANGE *PBIN_RANGE;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct VOLUME_BITMAP_BUFFER VOLUME_BITMAP_BUFFER, *PVOLUME_BITMAP_BUFFER;

struct VOLUME_BITMAP_BUFFER {
    LARGE_INTEGER StartingLcn;
    LARGE_INTEGER BitmapSize;
    BYTE Buffer[1];
};

typedef enum _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE;

typedef struct _DISK_HISTOGRAM *PDISK_HISTOGRAM;

typedef struct _CHANGER_SET_ACCESS *PCHANGER_SET_ACCESS;

typedef struct _BIN_RESULTS BIN_RESULTS;

typedef struct _CHANGER_EXCHANGE_MEDIUM *PCHANGER_EXCHANGE_MEDIUM;

typedef struct _DISK_LOGGING _DISK_LOGGING, *P_DISK_LOGGING;

struct _DISK_LOGGING {
    BYTE Function;
    PVOID BufferAddress;
    DWORD BufferSize;
};

typedef struct _DISK_CONTROLLER_NUMBER _DISK_CONTROLLER_NUMBER, *P_DISK_CONTROLLER_NUMBER;

struct _DISK_CONTROLLER_NUMBER {
    DWORD ControllerNumber;
    DWORD DiskNumber;
};

typedef union _union_1298 _union_1298, *P_union_1298;

typedef struct _struct_1299 _struct_1299, *P_struct_1299;

typedef struct _struct_1300 _struct_1300, *P_struct_1300;

typedef struct _struct_1301 _struct_1301, *P_struct_1301;

struct _struct_1299 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

struct _struct_1301 {
    STORAGE_MEDIA_TYPE MediaType;
    DWORD MediaCharacteristics;
    DWORD CurrentBlockSize;
    STORAGE_BUS_TYPE BusType;
    union _union_1302 BusSpecificData;
};

struct _struct_1300 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

union _union_1298 {
    struct _struct_1299 DiskInfo;
    struct _struct_1300 RemovableDiskInfo;
    struct _struct_1301 TapeInfo;
};

typedef struct _DISK_CONTROLLER_NUMBER DISK_CONTROLLER_NUMBER;

typedef struct _FORMAT_PARAMETERS _FORMAT_PARAMETERS, *P_FORMAT_PARAMETERS;

typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;

struct _FORMAT_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
};

typedef struct _CHANGER_MOVE_MEDIUM *PCHANGER_MOVE_MEDIUM;

typedef WORD *PBAD_TRACK_NUMBER;

typedef struct _DISK_LOGGING *PDISK_LOGGING;

typedef struct _CHANGER_READ_ELEMENT_STATUS *PCHANGER_READ_ELEMENT_STATUS;

typedef struct _PERF_BIN _PERF_BIN, *P_PERF_BIN;

struct _PERF_BIN {
    DWORD NumberOfBins;
    DWORD TypeOfBin;
    BIN_RANGE BinsRanges[1];
};

typedef struct _CHANGER_ELEMENT_LIST *PCHANGER_ELEMENT_LIST;

typedef struct _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;

typedef struct _DRIVE_LAYOUT_INFORMATION _DRIVE_LAYOUT_INFORMATION, *P_DRIVE_LAYOUT_INFORMATION;

struct _DRIVE_LAYOUT_INFORMATION {
    DWORD PartitionCount;
    DWORD Signature;
    PARTITION_INFORMATION PartitionEntry[1];
};

typedef enum _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE;

typedef struct _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;

typedef struct _STORAGE_BUS_RESET_REQUEST STORAGE_BUS_RESET_REQUEST;

typedef struct _FAT_STATISTICS FAT_STATISTICS;

typedef struct _SENDCMDINPARAMS *PSENDCMDINPARAMS;

typedef struct _GET_CHANGER_PARAMETERS *PGET_CHANGER_PARAMETERS;

typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;

typedef struct _VOLUME_DISK_EXTENTS VOLUME_DISK_EXTENTS;

typedef struct _FAT_STATISTICS *PFAT_STATISTICS;

typedef struct _DISK_LOGGING DISK_LOGGING;

typedef struct _VOLUME_DISK_EXTENTS *PVOLUME_DISK_EXTENTS;

typedef struct _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;

typedef struct _BIN_COUNT *PBIN_COUNT;

typedef struct _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;

typedef struct _CHANGER_READ_ELEMENT_STATUS CHANGER_READ_ELEMENT_STATUS;

typedef struct _FILE_PREFETCH *PFILE_PREFETCH;

typedef WORD BAD_TRACK_NUMBER;

typedef struct _SENDCMDINPARAMS SENDCMDINPARAMS;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _CHANGER_ELEMENT *PCHANGER_ELEMENT;

typedef struct _PERF_BIN PERF_BIN;

typedef struct _DEVICE_MEDIA_INFO *PDEVICE_MEDIA_INFO;

typedef struct _SENDCMDOUTPARAMS *LPSENDCMDOUTPARAMS;

typedef enum _MEDIA_TYPE *PMEDIA_TYPE;

typedef struct _DISK_GEOMETRY DISK_GEOMETRY;

typedef enum _BIN_TYPES BIN_TYPES;

typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;

typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;

typedef struct _STORAGE_DEVICE_NUMBER STORAGE_DEVICE_NUMBER;

typedef struct _CHANGER_MOVE_MEDIUM CHANGER_MOVE_MEDIUM;

typedef struct _STORAGE_DEVICE_NUMBER *PSTORAGE_DEVICE_NUMBER;

typedef struct _PERF_BIN *PPERF_BIN;

typedef struct _BIN_RESULTS *PBIN_RESULTS;

typedef struct _CHANGER_EXCHANGE_MEDIUM CHANGER_EXCHANGE_MEDIUM;

typedef struct _struct_1359 _struct_1359, *P_struct_1359;

struct _struct_1359 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _DISK_EXTENT *PDISK_EXTENT;

typedef struct _PATHNAME_BUFFER *PPATHNAME_BUFFER;

typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;

typedef struct _GETVERSIONINPARAMS *PGETVERSIONINPARAMS;

typedef struct _CHANGER_SET_POSITION *PCHANGER_SET_POSITION;

typedef struct _DRIVERSTATUS *PDRIVERSTATUS;

typedef struct _CHANGER_SET_POSITION CHANGER_SET_POSITION;

typedef struct _READ_ELEMENT_ADDRESS_INFO READ_ELEMENT_ADDRESS_INFO;

typedef struct _struct_1363 _struct_1363, *P_struct_1363;

struct _struct_1363 {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

typedef struct _struct_1362 _struct_1362, *P_struct_1362;

struct _struct_1362 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

typedef struct _struct_1361 _struct_1361, *P_struct_1361;

struct _struct_1361 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

typedef struct _STORAGE_HOTPLUG_INFO *PSTORAGE_HOTPLUG_INFO;

typedef struct _DRIVERSTATUS *LPDRIVERSTATUS;

typedef struct _STORAGE_HOTPLUG_INFO STORAGE_HOTPLUG_INFO;

typedef struct _CHANGER_SET_ACCESS CHANGER_SET_ACCESS;

typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION *PCHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;

typedef struct _DISK_CONTROLLER_NUMBER *PDISK_CONTROLLER_NUMBER;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _NTFS_STATISTICS NTFS_STATISTICS;

#define SERIAL_IOC_FCR_RCVR_TRIGGER_MSB 128

#define CHANGER_VOLUME_ASSERT 4194304

#define ASSERT_PRIMARY 8

#define IOCTL_CHANGER_GET_STATUS 3162116

#define SERIAL_LSRMST_LSR_DATA 1

#define SMART_CYL_HI 194

#define IOCTL_CHANGER_REINITIALIZE_TRANSPORT 3162152

#define FILE_DEVICE_DFS_VOLUME 54

#define ELEMENT_STATUS_LUN_VALID 4096

#define CHANGER_BAR_CODE_SCANNER_INSTALLED 1

#define SERIAL_LSRMST_MST 3

#define VALID_NTFT 192

#define REVISION_LENGTH 4

#define ERROR_LABEL_UNREADABLE 1

#define SMART_GET_VERSION 475264

#define CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE 2147483650

#define FILESYSTEM_STATISTICS_TYPE_NTFS 1

#define CHANGER_POSITION_TO_ELEMENT 1024

#define CHANGER_STORAGE_SLOT 16384

#define IOCTL_STORAGE_GET_MEDIA_TYPES 2952192

#define CHANGER_DRIVE_CLEANING_REQUIRED 65536

#define IOCTL_DISK_LOAD_MEDIA 477196

#define FILE_DEVICE_DISK_FILE_SYSTEM 8

#define FILE_DEVICE_DISK 7

#define EXTEND_IEPORT 2

#define FILE_DEVICE_ACPI 50

#define DISK_BINNING 3

#define FSCTL_IS_VOLUME_DIRTY 589944

#define IOCTL_DISK_PERFORMANCE_OFF 458848

#define FILE_DEVICE_MASS_STORAGE 45

#define SEARCH_ALL 0

#define FSCTL_OPBATCH_ACK_CLOSE_PENDING 589840

#define CHANGER_PREMOUNT_EJECT_REQUIRED 524288

#define CHANGER_CLEANER_AUTODISMOUNT 2147483652

#define CHANGER_CLEANER_ACCESS_NOT_VALID 262144

#define FILE_DEVICE_KS 47

#define FILE_DEVICE_NULL 21

#define FILE_DEVICE_INPORT_PORT 10

#define SMART_WRITE_LOG 214

#define CHANGER_PREDISMOUNT_ALIGN_TO_SLOT 2147483649

#define IOCTL_DISK_HISTOGRAM_STRUCTURE 458800

#define SMART_INVALID_REGISTER 8

#define IOCTL_STORAGE_RESET_BUS 2969600

#define SERIAL_IOC_FCR_FIFO_ENABLE 1

#define FILE_DEVICE_MIDI_IN 13

#define RECOVERED_READS_VALID 4

#define IOCTL_CHANGER_BASE 48

#define IOCTL_DISK_SET_PARTITION_INFO 507912

#define PRODUCT_ID_LENGTH 16

#define ASSERT_ALTERNATE 9

#define MEDIA_READ_ONLY 4

#define PARTITION_FAT32 11

#define IOCTL_STORAGE_LOAD_MEDIA2 2951180

#define WRITE_COMPRESSION_INFO_VALID 16

#define FSCTL_SET_COMPRESSION 639040

#define CAP_ATA_ID_CMD 1

#define ELEMENT_STATUS_SVALID 8388608

#define FILE_DEVICE_SCANNER 25

#define CHANGER_VOLUME_UNDEFINE 16777216

#define SMART_ERROR_NO_MEM 7

#define ERROR_TRAY_MALFUNCTION 16

#define FILE_DEVICE_TAPE 31

#define FILE_DEVICE_PHYSICAL_NETCARD 23

#define SMART_IDE_ERROR 1

#define FSCTL_MARK_VOLUME_DIRTY 589872

#define IOCTL_CHANGER_EXCHANGE_MEDIUM 3162144

#define ERROR_UNHANDLED_ERROR 4294967295

#define IOCTL_DISK_GET_DRIVE_LAYOUT 475148

#define VENDOR_ID_LENGTH 8

#define ERROR_SLOT_NOT_PRESENT 4

#define FSCTL_DISMOUNT_VOLUME 589856

#define IOCTL_CHANGER_SET_POSITION 3162140

#define SMART_INVALID_COMMAND 3

#define PARTITION_HUGE 6

#define SMART_INVALID_IOCTL 6

#define SERIAL_IOC_FCR_DMA_MODE 8

#define FILE_DEVICE_NETWORK 18

#define ELEMENT_STATUS_INENAB 32

#define FILE_DEVICE_PARALLEL_PORT 22

#define CHANGER_STATUS_NON_VOLATILE 16

#define CHANGER_MEDIUM_FLIP 512

#define IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS 3162136

#define FILE_DEVICE_CHANGER 48

#define FSCTL_OPLOCK_BREAK_ACKNOWLEDGE 589836

#define IOCTL_DISK_SET_DRIVE_LAYOUT 507920

#define FILE_DEVICE_SERIAL_MOUSE_PORT 26

#define LOCK_ELEMENT 0

#define CHANGER_CLEANER_OPS_NOT_SUPPORTED 2147483712

#define SMART_OFFLINE_ROUTINE_OFFLINE 0

#define MEDIA_WRITE_ONCE 2

#define OBSOLETE_IOCTL_STORAGE_RESET_BUS 3002368

#define CHANGER_KEYPAD_ENABLE_DISABLE 268435456

#define PARTITION_XENIX_2 3

#define PARTITION_XENIX_1 2

#define IOCTL_CHANGER_GET_ELEMENT_STATUS 3194900

#define IOCTL_STORAGE_MEDIA_REMOVAL 2967556

#define ELEMENT_STATUS_PVOLTAG 268435456

#define FILESYSTEM_STATISTICS_TYPE_FAT 2

#define UNRECOVERED_WRITES_VALID 2

#define MEDIA_ERASEABLE 1

#define CHANGER_SERIAL_NUMBER_VALID 67108864

#define FILE_DEVICE_KEYBOARD 11

#define METHOD_NEITHER 3

#define FILE_DEVICE_WAVE_IN 37

#define IOCTL_DISK_FIND_NEW_DEVICES 477208

#define SMART_NOT_SUPPORTED 9

#define READ_ATTRIBUTE_BUFFER_SIZE 512

#define FILE_PREFETCH_TYPE_FOR_CREATE 1

#define SEARCH_PRI_NO_SEQ 5

#define DISK_LOGGING_START 0

#define TAPE_RETURN_STATISTICS 0

#define IOCTL_STORAGE_SET_HOTPLUG_INFO 3001368

#define FILE_DEVICE_SERENUM 55

#define ERROR_DRIVE_NOT_INSTALLED 8

#define FSCTL_GET_COMPRESSION 589884

#define FSCTL_IS_VOLUME_MOUNTED 589864

#define FILE_DEVICE_CD_ROM_FILE_SYSTEM 3

#define SMART_INVALID_BUFFER 4

#define FSCTL_LOCK_VOLUME 589848

#define CHANGER_TO_DRIVE 8

#define RETURN_SMART_STATUS 218

#define IOCTL_DISK_HISTOGRAM_RESET 458808

#define FILE_DEVICE_DVD 51

#define CHANGER_STORAGE_TRANSPORT 32768

#define SMART_ABORT_OFFLINE_SELFTEST 127

#define MAX_VOLUME_ID_SIZE 36

#define IOCTL_DISK_FORMAT_TRACKS_EX 507948

#define SEARCH_PRIMARY 1

#define SMART_SHORT_SELFTEST_OFFLINE 1

#define FILE_DEVICE_CONTROLLER 4

#define PARTITION_EXTENDED 5

#define FSCTL_OPLOCK_BREAK_ACK_NO_2 589904

#define FILE_DEVICE_SOUND 29

#define FILE_DEVICE_UNKNOWN 34

#define FSCTL_UNLOCK_VOLUME 589852

#define FILE_DEVICE_MULTI_UNC_PROVIDER 16

#define FSCTL_FILESYSTEM_GET_STATISTICS 589920

#define FILE_ANY_ACCESS 0

#define CHANGER_STORAGE_DRIVE 4096

#define EXECUTE_OFFLINE_DIAGS 212

#define FILE_WRITE_ACCESS 2

#define ELEMENT_STATUS_NOT_BUS 32768

#define IDENTIFY_BUFFER_SIZE 512

#define FILE_DEVICE_SERIAL_PORT 27

#define CAP_ATAPI_ID_CMD 2

#define FSCTL_OPLOCK_BREAK_NOTIFY 589844

#define FILE_DEVICE_BEEP 1

#define FILE_READ_ACCESS 1

#define PARTITION_IFS 7

#define FILE_DEVICE_DATALINK 5

#define REPLACE_ALTERNATE 11

#define CHANGER_LOCK_UNLOCK 128

#define SEARCH_ALT_NO_SEQ 6

#define LOCK_UNLOCK_DOOR 2

#define SMART_NO_ERROR 0

#define FILE_DEVICE_TRANSPORT 33

#define FILE_DEVICE_KSEC 57

#define SERIAL_NUMBER_LENGTH 32

#define DISK_LOGGING_STOP 1

#define ATAPI_ID_CMD 161

#define SMART_EXTENDED_SELFTEST_CAPTIVE 130

#define FILE_DEVICE_SCREEN 28

#define ENABLE_DISABLE_AUTOSAVE 210

#define IOCTL_DISK_GET_DRIVE_GEOMETRY 458752

#define ELEMENT_STATUS_EXCEPT 4

#define PARTITION_XINT13_EXTENDED 15

#define IOCTL_DISK_GET_PARTITION_INFO 475140

#define PARTITION_UNIX 99

#define METHOD_IN_DIRECT 1

#define IOCTL_DISK_LOGGING 458792

#define IOCTL_CHANGER_GET_PRODUCT_DATA 3162120

#define FSCTL_GET_NTFS_VOLUME_DATA 589924

#define IOCTL_DISK_RELEASE 477204

#define FILE_DEVICE_BATTERY 41

#define IOCTL_DISK_PERFORMANCE 458784

#define FSCTL_GET_NTFS_FILE_RECORD 589928

#define FILE_DEVICE_TAPE_FILE_SYSTEM 32

#define OBSOLETE_IOCTL_STORAGE_RESET_DEVICE 3002372

#define FILE_DEVICE_MAILSLOT 12

#define CHANGER_CLOSE_IEPORT 4

#define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS 536870912

#define IOCTL_STORAGE_LOAD_MEDIA 2967564

#define UNRECOVERED_READS_VALID 8

#define ENABLE_DISABLE_AUTO_OFFLINE 219

#define FILE_DEVICE_VIDEO 35

#define IOCTL_DISK_IS_WRITABLE 458788

#define IOCTL_CHANGER_MOVE_MEDIUM 3162148

#define FSCTL_REQUEST_OPLOCK_LEVEL_1 589824

#define FSCTL_REQUEST_OPLOCK_LEVEL_2 589828

#define IOCTL_DISK_REASSIGN_BLOCKS 507932

#define READ_THRESHOLD_BUFFER_SIZE 512

#define UNLOCK_ELEMENT 1

#define PARTITION_XINT13 14

#define CHANGER_TO_SLOT 2

#define CAP_SMART_CMD 4

#define IOCTL_STORAGE_RESERVE 2967568

#define CHANGER_VOLUME_IDENTIFICATION 1048576

#define ID_CMD 236

#define IOCTL_SERIAL_LSRMST_INSERT 1769596

#define RECOVERED_WRITES_VALID 1

#define FSCTL_QUERY_RETRIEVAL_POINTERS 589883

#define FILE_DEVICE_WAVE_OUT 38

#define TAPE_RESET_STATISTICS 2

#define IOCTL_DISK_RESERVE 477200

#define CHANGER_TRUE_EXCHANGE_CAPABLE 2147483656

#define IOCTL_STORAGE_EJECT_MEDIA 2967560

#define IOCTL_DISK_REQUEST_DATA 458816

#define ELEMENT_STATUS_FULL 1

#define FILE_DEVICE_FULLSCREEN_VIDEO 52

#define FILE_DEVICE_SMARTCARD 49

#define IOCTL_SERENUM_REMOVE_HARDWARE 3604996

#define IOCTL_SERENUM_EXPOSE_HARDWARE 3604992

#define CHANGER_CLEANER_SLOT 64

#define CHANGER_MOVE_EXTENDS_IEPORT 2147484160

#define FILE_DEVICE_NETWORK_FILE_SYSTEM 20

#define FSCTL_INVALIDATE_VOLUMES 589908

#define LOCK_UNLOCK_IEPORT 1

#define PARTITION_NTFT 128

#define CHANGER_EXCHANGE_MEDIA 32

#define ERROR_INIT_STATUS_NEEDED 17

#define DISABLE_SMART 217

#define SMART_CMD 176

#define MEDIA_WRITE_PROTECTED 256

#define FSCTL_MARK_AS_SYSTEM_HIVE 589903

#define FSCTL_GET_VOLUME_BITMAP 589935

#define ERROR_LABEL_QUESTIONABLE 2

#define CHANGER_OPEN_IEPORT 8

#define CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR 2147483680

#define FILE_DEVICE_MOUSE 15

#define ELEMENT_STATUS_IMPEXP 2

#define IOCTL_SERENUM_PORT_DESC 3605000

#define IOCTL_DISK_REQUEST_STRUCTURE 458812

#define FSCTL_GET_RETRIEVAL_POINTERS 589939

#define IOCTL_DISK_EJECT_MEDIA 477192

#define FILE_DEVICE_VIRTUAL_DISK 36

#define SERIAL_LSRMST_ESCAPE 0

#define IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER 2952208

#define IOCTL_STORAGE_PREDICT_FAILURE 2953472

#define READ_COMPRESSION_INFO_VALID 32

#define IOCTL_STORAGE_RELEASE 2967572

#define CHANGER_VOLUME_REPLACE 8388608

#define FSCTL_REQUEST_FILTER_OPLOCK 589916

#define MAX_VOLUME_TEMPLATE_SIZE 40

#define LOCK_UNLOCK_KEYPAD 4

#define PARTITION_FAT_12 1

#define ELEMENT_STATUS_ID_VALID 8192

#define PARTITION_FAT_16 4

#define SMART_INVALID_DRIVE 5

#define IOCTL_STORAGE_CHECK_VERIFY2 2951168

#define PARTITION_LDM 66

#define SMART_INVALID_FLAG 2

#define FILE_DEVICE_SMB 46

#define SERIAL_LSRMST_LSR_NODATA 2

#define FILE_DEVICE_CD_ROM 2

#define CHANGER_PREDISMOUNT_EJECT_REQUIRED 131072

#define IOCTL_STORAGE_FIND_NEW_DEVICES 2967576

#define ELEMENT_STATUS_ACCESS 8

#define PARTITION_FAT32_XINT13 12

#define SERIAL_IOC_FCR_RES1 16

#define SERIAL_IOC_FCR_RES2 32

#define SERIAL_IOC_MCR_OUT1 4

#define IOCTL_STORAGE_MCN_CONTROL 2951492

#define IOCTL_DISK_FORMAT_TRACKS 507928

#define FILE_DEVICE_NAMED_PIPE 17

#define METHOD_BUFFERED 0

#define SERIAL_IOC_MCR_OUT2 8

#define CHANGER_SLOTS_USE_TRAYS 2147483664

#define IOCTL_DISK_VERIFY 458772

#define CHANGER_REPORT_IEPORT_STATE 2048

#define RETRACT_IEPORT 3

#define FILE_DEVICE_VDM 44

#define SERIAL_IOC_FCR_XMIT_RESET 4

#define FILE_DEVICE_PRINTER 24

#define SERIAL_IOC_MCR_LOOP 16

#define IOCTL_DISK_CHECK_VERIFY 477184

#define IOCTL_CHANGER_SET_ACCESS 3194896

#define SMART_CYL_LOW 79

#define SAVE_ATTRIBUTE_VALUES 211

#define READ_THRESHOLDS 209

#define IOCTL_DISK_HISTOGRAM_DATA 458804

#define IOCTL_STORAGE_RESET_DEVICE 2969604

#define CHANGER_INIT_ELEM_STAT_WITH_RANGE 2

#define FILE_DEVICE_DFS_FILE_SYSTEM 53

#define ELEMENT_STATUS_EXENAB 16

#define SERIAL_IOC_MCR_DTR 1

#define PARTITION_ENTRY_UNUSED 0

#define FSCTL_MOVE_FILE 589940

#define READ_ATTRIBUTES 208

#define UNDEFINE_ALTERNATE 13

#define SERIAL_IOC_FCR_RCVR_RESET 2

#define FILE_SPECIAL_ACCESS 0

#define REPLACE_PRIMARY 10

#define ELEMENT_STATUS_PRODUCT_DATA 64

#define PARTITION_PREP 65

#define ENABLE_SMART 216

#define FILE_DEVICE_MODEM 43

#define IOCTL_CHANGER_QUERY_VOLUME_TAGS 3194924

#define FSCTL_IS_PATHNAME_VALID 589868

#define FILE_DEVICE_FILE_SYSTEM 9

#define SMART_LOG_SECTOR_SIZE 512

#define SMART_RCV_DRIVE_DATA 508040

#define FILE_DEVICE_8042_PORT 39

#define CHANGER_TO_IEPORT 4

#define FSCTL_ALLOW_EXTENDED_DASD_IO 589955

#define CHANGER_VOLUME_SEARCH 2097152

#define IOCTL_STORAGE_GET_MEDIA_TYPES_EX 2952196

#define IOCTL_STORAGE_CHECK_VERIFY 2967552

#define ELEMENT_STATUS_INVERT 4194304

#define SEARCH_ALL_NO_SEQ 4

#define FILE_DEVICE_MIDI_OUT 14

#define IOCTL_DISK_GET_MEDIA_TYPES 461824

#define ELEMENT_STATUS_AVOLTAG 536870912

#define FSCTL_REQUEST_BATCH_OPLOCK 589832

#define FILE_DEVICE_STREAMS 30

#define CHANGER_IEPORT_USER_CONTROL_CLOSE 2147483904

#define FILE_DEVICE_NETWORK_BROWSER 19

#define CHANGER_DEVICE_REINITIALIZE_CAPABLE 134217728

#define FILE_DEVICE_BUS_EXTENDER 42

#define IOCTL_STORAGE_BREAK_RESERVATION 2969620

#define HIST_NO_OF_BUCKETS 24

#define CHANGER_MOVE_RETRACTS_IEPORT 2147484672

#define IOCTL_CHANGER_GET_PARAMETERS 3162112

#define SMART_EXTENDED_SELFTEST_OFFLINE 2

#define SMART_NO_IDE_DEVICE 10

#define CHANGER_TO_TRANSPORT 1

#define CHANGER_IEPORT_USER_CONTROL_OPEN 2147483776

#define IOCTL_STORAGE_EJECTION_CONTROL 2951488

#define IOCTL_STORAGE_GET_DEVICE_NUMBER 2953344

#define IOCTL_DISK_MEDIA_REMOVAL 477188

#define SMART_READ_LOG 213

#define SEARCH_ALTERNATE 2

#define CHANGER_RESERVED_BIT 2147483648

#define IOCTL_SERENUM_GET_PORT_NAME 3605004

#define IOCTL_DISK_CONTROLLER_NUMBER 458820

#define SERIAL_IOC_FCR_RCVR_TRIGGER_LSB 64

#define UNDEFINE_PRIMARY 12

#define SMART_SEND_DRIVE_COMMAND 508036

#define CHANGER_CARTRIDGE_MAGAZINE 256

#define IOCTL_STORAGE_BASE 45

#define DISK_LOGGING_DUMP 2

#define SMART_SHORT_SELFTEST_CAPTIVE 129

#define FILE_DEVICE_TERMSRV 56

#define CHANGER_STORAGE_IEPORT 8192

#define IOCTL_STORAGE_GET_HOTPLUG_INFO 2952212

#define FILE_DEVICE_NETWORK_REDIRECTOR 40

#define SERIAL_IOC_MCR_RTS 2

#define PARTITION_OS2BOOTMGR 10

#define MEDIA_CURRENTLY_MOUNTED 2147483648

#define IOCTL_DISK_BASE 7

#define MEDIA_READ_WRITE 8

#define FSCTL_QUERY_FAT_BPB 589912

#define METHOD_OUT_DIRECT 2

#define TAPE_RETURN_ENV_INFO 1

#define FILE_DEVICE_FIPS 58

#define FILE_DEVICE_DFS 6

typedef enum _D3DVERTEXBLENDFLAGS {
    D3DVBF_DISABLE=0,
    D3DVBF_1WEIGHTS=1,
    D3DVBF_2WEIGHTS=2,
    D3DVBF_3WEIGHTS=3,
    D3DVBF_TWEENING=255,
    D3DVBF_0WEIGHTS=256,
    D3DVBF_FORCE_DWORD=2147483647
} _D3DVERTEXBLENDFLAGS;

typedef enum _D3DVERTEXBLENDFLAGS D3DVERTEXBLENDFLAGS;

typedef enum _D3DBLEND {
    D3DBLEND_ZERO=1,
    D3DBLEND_ONE=2,
    D3DBLEND_SRCCOLOR=3,
    D3DBLEND_INVSRCCOLOR=4,
    D3DBLEND_SRCALPHA=5,
    D3DBLEND_INVSRCALPHA=6,
    D3DBLEND_DESTALPHA=7,
    D3DBLEND_INVDESTALPHA=8,
    D3DBLEND_DESTCOLOR=9,
    D3DBLEND_INVDESTCOLOR=10,
    D3DBLEND_SRCALPHASAT=11,
    D3DBLEND_BOTHSRCALPHA=12,
    D3DBLEND_BOTHINVSRCALPHA=13,
    D3DBLEND_FORCE_DWORD=2147483647
} _D3DBLEND;

typedef enum _D3DFOGMODE {
    D3DFOG_NONE=0,
    D3DFOG_EXP=1,
    D3DFOG_EXP2=2,
    D3DFOG_LINEAR=3,
    D3DFOG_FORCE_DWORD=2147483647
} _D3DFOGMODE;

typedef enum _D3DSHADEMODE {
    D3DSHADE_FLAT=1,
    D3DSHADE_GOURAUD=2,
    D3DSHADE_PHONG=3,
    D3DSHADE_FORCE_DWORD=2147483647
} _D3DSHADEMODE;

typedef struct _D3DRANGE _D3DRANGE, *P_D3DRANGE;

struct _D3DRANGE {
    UINT Offset;
    UINT Size;
};

typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE {
    D3DSIO_NOP=0,
    D3DSIO_MOV=1,
    D3DSIO_ADD=2,
    D3DSIO_SUB=3,
    D3DSIO_MAD=4,
    D3DSIO_MUL=5,
    D3DSIO_RCP=6,
    D3DSIO_RSQ=7,
    D3DSIO_DP3=8,
    D3DSIO_DP4=9,
    D3DSIO_MIN=10,
    D3DSIO_MAX=11,
    D3DSIO_SLT=12,
    D3DSIO_SGE=13,
    D3DSIO_EXP=14,
    D3DSIO_LOG=15,
    D3DSIO_LIT=16,
    D3DSIO_DST=17,
    D3DSIO_LRP=18,
    D3DSIO_FRC=19,
    D3DSIO_M4x4=20,
    D3DSIO_M4x3=21,
    D3DSIO_M3x4=22,
    D3DSIO_M3x3=23,
    D3DSIO_M3x2=24,
    D3DSIO_TEXCOORD=64,
    D3DSIO_TEXKILL=65,
    D3DSIO_TEX=66,
    D3DSIO_TEXBEM=67,
    D3DSIO_TEXBEML=68,
    D3DSIO_TEXREG2AR=69,
    D3DSIO_TEXREG2GB=70,
    D3DSIO_TEXM3x2PAD=71,
    D3DSIO_TEXM3x2TEX=72,
    D3DSIO_TEXM3x3PAD=73,
    D3DSIO_TEXM3x3TEX=74,
    D3DSIO_TEXM3x3DIFF=75,
    D3DSIO_TEXM3x3SPEC=76,
    D3DSIO_TEXM3x3VSPEC=77,
    D3DSIO_EXPP=78,
    D3DSIO_LOGP=79,
    D3DSIO_CND=80,
    D3DSIO_DEF=81,
    D3DSIO_COMMENT=65534,
    D3DSIO_END=65535,
    D3DSIO_FORCE_DWORD=2147483647
} _D3DSHADER_INSTRUCTION_OPCODE_TYPE;

typedef enum _D3DDEBUGMONITORTOKENS {
    D3DDMT_ENABLE=0,
    D3DDMT_DISABLE=1,
    D3DDMT_FORCE_DWORD=2147483647
} _D3DDEBUGMONITORTOKENS;

typedef enum _D3DDEBUGMONITORTOKENS D3DDEBUGMONITORTOKENS;

typedef enum _D3DVSD_TOKENTYPE {
    D3DVSD_TOKEN_NOP=0,
    D3DVSD_TOKEN_STREAM=1,
    D3DVSD_TOKEN_STREAMDATA=2,
    D3DVSD_TOKEN_TESSELLATOR=3,
    D3DVSD_TOKEN_CONSTMEM=4,
    D3DVSD_TOKEN_EXT=5,
    D3DVSD_TOKEN_END=7,
    D3DVSD_FORCE_DWORD=2147483647
} _D3DVSD_TOKENTYPE;

typedef enum _D3DVSD_TOKENTYPE D3DVSD_TOKENTYPE;

typedef enum _D3DFILLMODE {
    D3DFILL_POINT=1,
    D3DFILL_WIREFRAME=2,
    D3DFILL_SOLID=3,
    D3DFILL_FORCE_DWORD=2147483647
} _D3DFILLMODE;

typedef enum _D3DFILLMODE D3DFILLMODE;

typedef enum _D3DMATERIALCOLORSOURCE {
    D3DMCS_MATERIAL=0,
    D3DMCS_COLOR1=1,
    D3DMCS_COLOR2=2,
    D3DMCS_FORCE_DWORD=2147483647
} _D3DMATERIALCOLORSOURCE;

typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE {
    D3DSPSM_NONE=0,
    D3DSPSM_NEG=16777216,
    D3DSPSM_BIAS=33554432,
    D3DSPSM_BIASNEG=50331648,
    D3DSPSM_SIGN=67108864,
    D3DSPSM_SIGNNEG=83886080,
    D3DSPSM_COMP=100663296,
    D3DSPSM_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_SRCMOD_TYPE;

typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE D3DSHADER_PARAM_SRCMOD_TYPE;

typedef enum _D3DCULL {
    D3DCULL_NONE=1,
    D3DCULL_CW=2,
    D3DCULL_CCW=3,
    D3DCULL_FORCE_DWORD=2147483647
} _D3DCULL;

typedef enum _D3DCULL D3DCULL;

typedef enum _D3DPATCHEDGESTYLE {
    D3DPATCHEDGE_DISCRETE=0,
    D3DPATCHEDGE_CONTINUOUS=1,
    D3DPATCHEDGE_FORCE_DWORD=2147483647
} _D3DPATCHEDGESTYLE;

typedef enum _D3DPATCHEDGESTYLE D3DPATCHEDGESTYLE;

typedef enum _D3DCMPFUNC {
    D3DCMP_NEVER=1,
    D3DCMP_LESS=2,
    D3DCMP_EQUAL=3,
    D3DCMP_LESSEQUAL=4,
    D3DCMP_GREATER=5,
    D3DCMP_NOTEQUAL=6,
    D3DCMP_GREATEREQUAL=7,
    D3DCMP_ALWAYS=8,
    D3DCMP_FORCE_DWORD=2147483647
} _D3DCMPFUNC;

typedef enum _D3DCMPFUNC D3DCMPFUNC;

typedef enum _D3DSHADER_PARAM_DSTMOD_TYPE {
    D3DSPDM_NONE=0,
    D3DSPDM_SATURATE=1048576,
    D3DSPDM_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_DSTMOD_TYPE;

typedef enum _D3DTEXTURETRANSFORMFLAGS {
    D3DTTFF_DISABLE=0,
    D3DTTFF_COUNT1=1,
    D3DTTFF_COUNT2=2,
    D3DTTFF_COUNT3=3,
    D3DTTFF_COUNT4=4,
    D3DTTFF_PROJECTED=256,
    D3DTTFF_FORCE_DWORD=2147483647
} _D3DTEXTURETRANSFORMFLAGS;

typedef enum _D3DTEXTURETRANSFORMFLAGS D3DTEXTURETRANSFORMFLAGS;

typedef enum _D3DTEXTUREADDRESS {
    D3DTADDRESS_WRAP=1,
    D3DTADDRESS_MIRROR=2,
    D3DTADDRESS_CLAMP=3,
    D3DTADDRESS_BORDER=4,
    D3DTADDRESS_MIRRORONCE=5,
    D3DTADDRESS_FORCE_DWORD=2147483647
} _D3DTEXTUREADDRESS;

typedef struct _D3DRANGE D3DRANGE;

typedef enum _D3DBLENDOP {
    D3DBLENDOP_ADD=1,
    D3DBLENDOP_SUBTRACT=2,
    D3DBLENDOP_REVSUBTRACT=3,
    D3DBLENDOP_MIN=4,
    D3DBLENDOP_MAX=5,
    D3DBLENDOP_FORCE_DWORD=2147483647
} _D3DBLENDOP;

typedef enum _D3DBLEND D3DBLEND;

typedef union _union_2533 _union_2533, *P_union_2533;

typedef struct _struct_2534 _struct_2534, *P_struct_2534;

struct _struct_2534 {
    float _11;
    float _12;
    float _13;
    float _14;
    float _21;
    float _22;
    float _23;
    float _24;
    float _31;
    float _32;
    float _33;
    float _34;
    float _41;
    float _42;
    float _43;
    float _44;
};

union _union_2533 {
    struct _struct_2534 field0;
    float m[4][4];
};

typedef enum _D3DZBUFFERTYPE {
    D3DZB_FALSE=0,
    D3DZB_TRUE=1,
    D3DZB_USEW=2,
    D3DZB_FORCE_DWORD=2147483647
} _D3DZBUFFERTYPE;

typedef enum _D3DVS_RASTOUT_OFFSETS {
    D3DSRO_POSITION=0,
    D3DSRO_FOG=1,
    D3DSRO_POINT_SIZE=2,
    D3DSRO_FORCE_DWORD=2147483647
} _D3DVS_RASTOUT_OFFSETS;

typedef enum _D3DVS_RASTOUT_OFFSETS D3DVS_RASTOUT_OFFSETS;

typedef struct _D3DLINEPATTERN _D3DLINEPATTERN, *P_D3DLINEPATTERN;

typedef struct _D3DLINEPATTERN D3DLINEPATTERN;

struct _D3DLINEPATTERN {
    WORD wRepeatFactor;
    WORD wLinePattern;
};

typedef enum _D3DSTENCILOP {
    D3DSTENCILOP_KEEP=1,
    D3DSTENCILOP_ZERO=2,
    D3DSTENCILOP_REPLACE=3,
    D3DSTENCILOP_INCRSAT=4,
    D3DSTENCILOP_DECRSAT=5,
    D3DSTENCILOP_INVERT=6,
    D3DSTENCILOP_INCR=7,
    D3DSTENCILOP_DECR=8,
    D3DSTENCILOP_FORCE_DWORD=2147483647
} _D3DSTENCILOP;

typedef enum _D3DSTENCILOP D3DSTENCILOP;

typedef enum _D3DSHADEMODE D3DSHADEMODE;

typedef enum _D3DFOGMODE D3DFOGMODE;

typedef enum _D3DZBUFFERTYPE D3DZBUFFERTYPE;

typedef enum _D3DTEXTUREADDRESS D3DTEXTUREADDRESS;

typedef enum _D3DSHADER_PARAM_DSTMOD_TYPE D3DSHADER_PARAM_DSTMOD_TYPE;

typedef enum _D3DBLENDOP D3DBLENDOP;

typedef enum _D3DTEXTUREFILTERTYPE {
    D3DTEXF_NONE=0,
    D3DTEXF_POINT=1,
    D3DTEXF_LINEAR=2,
    D3DTEXF_ANISOTROPIC=3,
    D3DTEXF_FLATCUBIC=4,
    D3DTEXF_GAUSSIANCUBIC=5,
    D3DTEXF_FORCE_DWORD=2147483647
} _D3DTEXTUREFILTERTYPE;

typedef enum _D3DVS_ADDRESSMODE_TYPE {
    D3DVS_ADDRMODE_ABSOLUTE=0,
    D3DVS_ADDRMODE_RELATIVE=8192,
    D3DVS_ADDRMODE_FORCE_DWORD=2147483647
} _D3DVS_ADDRESSMODE_TYPE;

typedef enum _D3DVS_ADDRESSMODE_TYPE D3DVS_ADDRESSMODE_TYPE;

typedef enum _D3DTEXTUREOP {
    D3DTOP_DISABLE=1,
    D3DTOP_SELECTARG1=2,
    D3DTOP_SELECTARG2=3,
    D3DTOP_MODULATE=4,
    D3DTOP_MODULATE2X=5,
    D3DTOP_MODULATE4X=6,
    D3DTOP_ADD=7,
    D3DTOP_ADDSIGNED=8,
    D3DTOP_ADDSIGNED2X=9,
    D3DTOP_SUBTRACT=10,
    D3DTOP_ADDSMOOTH=11,
    D3DTOP_BLENDDIFFUSEALPHA=12,
    D3DTOP_BLENDTEXTUREALPHA=13,
    D3DTOP_BLENDFACTORALPHA=14,
    D3DTOP_BLENDTEXTUREALPHAPM=15,
    D3DTOP_BLENDCURRENTALPHA=16,
    D3DTOP_PREMODULATE=17,
    D3DTOP_MODULATEALPHA_ADDCOLOR=18,
    D3DTOP_MODULATECOLOR_ADDALPHA=19,
    D3DTOP_MODULATEINVALPHA_ADDCOLOR=20,
    D3DTOP_MODULATEINVCOLOR_ADDALPHA=21,
    D3DTOP_BUMPENVMAP=22,
    D3DTOP_BUMPENVMAPLUMINANCE=23,
    D3DTOP_DOTPRODUCT3=24,
    D3DTOP_MULTIPLYADD=25,
    D3DTOP_LERP=26,
    D3DTOP_FORCE_DWORD=2147483647
} _D3DTEXTUREOP;

typedef enum _D3DTEXTUREOP D3DTEXTUREOP;

typedef enum _D3DTEXTUREFILTERTYPE D3DTEXTUREFILTERTYPE;

typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE D3DSHADER_INSTRUCTION_OPCODE_TYPE;

typedef enum _D3DSHADER_PARAM_REGISTER_TYPE {
    D3DSPR_TEMP=0,
    D3DSPR_INPUT=268435456,
    D3DSPR_CONST=536870912,
    D3DSPR_ADDR=805306368,
    D3DSPR_TEXTURE=805306368,
    D3DSPR_RASTOUT=1073741824,
    D3DSPR_ATTROUT=1342177280,
    D3DSPR_TEXCRDOUT=1610612736,
    D3DSPR_FORCE_DWORD=2147483647
} _D3DSHADER_PARAM_REGISTER_TYPE;

typedef enum _D3DMATERIALCOLORSOURCE D3DMATERIALCOLORSOURCE;

typedef enum _D3DSHADER_PARAM_REGISTER_TYPE D3DSHADER_PARAM_REGISTER_TYPE;

#define D3DVSD_EXTINFOMASK 16777215

#define D3DCS_BOTTOM 8

#define D3DTA_TEXTURE 2

#define D3DSP_REGTYPE_MASK 1879048192

#define D3DSP_DSTSHIFT_SHIFT 24

#define D3DSP_SWIZZLE_SHIFT 16

#define D3DLOCK_READONLY 16

#define D3DCS_PLANE2 256

#define D3DCS_PLANE3 512

#define D3DCS_PLANE4 1024

#define D3DCS_PLANE5 2048

#define D3DCS_PLANE0 64

#define D3DCS_PLANE1 128

#define D3DVSDE_SPECULAR 6

#define D3DUSAGE_SOFTWAREPROCESSING 16

#define D3DVSDT_FLOAT2 1

#define D3DVSDT_FLOAT1 0

#define D3DVSD_CONSTADDRESSSHIFT 0

#define D3DFVF_PSIZE 32

#define D3DVSDT_FLOAT4 3

#define D3DVSDT_FLOAT3 2

#define D3DCLIPPLANE3 8

#define D3DCLIPPLANE4 16

#define D3DCLIPPLANE5 32

#define D3DCLIPPLANE0 1

#define D3DCLIPPLANE1 2

#define D3DCLIPPLANE2 4

#define D3DTA_COMPLEMENT 16

#define D3DVSD_STREAMTESSMASK 268435456

#define D3DUSAGE_DONOTCLIP 32

#define D3DVSD_EXTINFOSHIFT 0

#define D3DVSD_STREAMNUMBERSHIFT 0

#define D3DVSDE_PSIZE 4

#define D3DVSDE_POSITION2 15

#define D3DWRAPCOORD_0 1

#define D3DWRAPCOORD_2 4

#define D3DWRAPCOORD_1 2

#define D3DWRAPCOORD_3 8

#define D3DCS_LEFT 1

#define D3DSP_NOSWIZZLE 14942208

#define D3DVS_ADDRESSMODE_MASK 8192

#define D3DRENDERSTATE_WRAPBIAS 128

#define D3DSP_SWIZZLE_MASK 16711680

#define D3DFVF_DIFFUSE 64

#define D3DMAXUSERCLIPPLANES 32

#define D3DVS_X_X 0

#define D3DVS_X_Y 65536

#define D3DVS_X_Z 131072

#define D3DSI_COISSUE 1073741824

#define D3DVSD_TOKENTYPESHIFT 29

#define D3DVSD_CONSTRSSHIFT 16

#define D3DVSD_EXTCOUNTSHIFT 24

#define D3DVS_X_W 196608

#define D3DVSD_DATALOADTYPESHIFT 28

#define D3DVS_W_Y 4194304

#define D3DVS_W_Z 8388608

#define D3DTA_TEMP 5

#define D3DVSD_CONSTRSMASK 536805376

#define D3DSP_SRCMOD_MASK 251658240

#define D3DVSD_VERTEXREGMASK 31

#define D3DVS_W_W 12582912

#define D3DVS_W_X 0

#define D3DLOCK_NOOVERWRITE 4096

#define D3DVSD_STREAMNUMBERMASK 15

#define D3DTS_WORLD2 258

#define D3DTSS_TCI_CAMERASPACEPOSITION 131072

#define D3DTS_WORLD1 257

#define D3DPRESENT_RATE_DEFAULT 0

#define D3DVS_ADDRESSMODE_SHIFT 13

#define D3DTS_WORLD3 259

#define D3DPRESENT_RATE_UNLIMITED 2147483647

#define D3DVSDE_NORMAL2 16

#define D3DCLEAR_STENCIL 4

#define D3DFVF_NORMAL 16

#define D3DVSD_DATATYPESHIFT 16

#define D3DFVF_POSITION_MASK 14

#define D3DVSD_CONSTADDRESSMASK 127

#define D3DCLEAR_ZBUFFER 2

#define D3DCS_BACK 32

#define D3DTA_CURRENT 1

#define D3DSI_COMMENTSIZE_MASK 2147418112

#define D3DCOLORWRITEENABLE_BLUE 4

#define D3DUSAGE_POINTS 64

#define D3DLOCK_NOSYSLOCK 2048

#define D3DUSAGE_RENDERTARGET 1

#define D3DSI_COMMENTSIZE_SHIFT 16

#define D3DVSDT_D3DCOLOR 4

#define D3DCOLORWRITEENABLE_ALPHA 8

#define D3DLOCK_NO_DIRTY_UPDATE 32768

#define D3DTA_SPECULAR 4

#define D3DVSD_DATALOADTYPEMASK 268435456

#define D3DFVF_TEX3 768

#define D3DFVF_TEX4 1024

#define D3DFVF_TEX1 256

#define D3DFVF_TEX2 512

#define D3DFVF_TEX0 0

#define D3DVSD_VERTEXREGINMASK 15728640

#define D3DFVF_TEX7 1792

#define D3DFVF_TEX8 2048

#define D3DVSD_VERTEXREGINSHIFT 20

#define D3DFVF_TEX5 1280

#define D3DFVF_TEX6 1536

#define D3DVSD_TOKENTYPEMASK 3758096384

#define D3DSP_REPLICATEALPHA 16711680

#define D3DUSAGE_DYNAMIC 512

#define D3DVSD_CONSTCOUNTMASK 503316480

#define D3DPV_DONOTCOPYDATA 1

#define D3DTSS_TCI_PASSTHRU 0

#define D3DVSDE_BLENDINDICES 2

#define D3DFVF_RESERVED2 57344

#define D3DCS_RIGHT 2

#define D3DFVF_RESERVED0 1

#define D3DVSDE_NORMAL 3

#define D3DSP_WRITEMASK_0 65536

#define D3DSP_WRITEMASK_1 131072

#define D3DSP_WRITEMASK_2 262144

#define D3DSP_WRITEMASK_3 524288

#define D3DVS_Z_W 3145728

#define D3DVS_Z_X 0

#define D3DVS_Z_Y 1048576

#define D3DVS_Z_Z 2097152

#define D3DSP_WRITEMASK_ALL 983040

#define D3DTA_ALPHAREPLICATE 32

#define D3DUSAGE_NPATCHES 256

#define D3DVSDE_DIFFUSE 5

#define D3DVS_NOSWIZZLE 14942208

#define D3DSI_OPCODE_MASK 65535

#define D3DVSD_SKIPCOUNTMASK 983040

#define D3DVSDE_BLENDWEIGHT 1

#define D3DSP_SRCMOD_SHIFT 24

#define D3DVS_Y_W 786432

#define D3DVS_Y_X 0

#define D3DVS_Y_Y 262144

#define D3DVS_Y_Z 524288

#define D3DWRAP_U 1

#define D3DWRAP_W 4

#define D3DWRAP_V 2

#define D3DSP_DSTMOD_SHIFT 20

#define D3DFVF_LASTBETA_UBYTE4 4096

#define D3DUSAGE_DEPTHSTENCIL 2

#define D3DVSDE_POSITION 0

#define D3DUSAGE_WRITEONLY 8

#define D3DVS_SWIZZLE_SHIFT 16

#define D3DCS_FRONT 16

#define D3DFVF_SPECULAR 128

#define D3DVSDT_UBYTE4 5

#define D3DVSD_EXTCOUNTMASK 520093696

#define D3DPRESENTFLAG_LOCKABLE_BACKBUFFER 1

#define D3DSP_REGNUM_MASK 4095

#define D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR 196608

#define D3DVSD_CONSTCOUNTSHIFT 25

#define D3DUSAGE_RTPATCHES 128

#define D3DTA_DIFFUSE 0

#define D3DVSD_DATATYPEMASK 983040

#define D3DSP_DSTSHIFT_MASK 251658240

#define D3DFVF_TEXCOUNT_SHIFT 8

#define MAX_DEVICE_IDENTIFIER_STRING 512

#define D3DVSD_SKIPCOUNTSHIFT 16

#define D3DFVF_TEXCOUNT_MASK 3840

#define D3DCOLORWRITEENABLE_GREEN 2

#define D3DFVF_TEXTUREFORMAT4 2

#define D3DVSD_VERTEXREGSHIFT 0

#define D3DFVF_TEXTUREFORMAT2 0

#define D3DFVF_TEXTUREFORMAT3 1

#define D3DFVF_TEXTUREFORMAT1 3

#define D3DVSDE_TEXCOORD7 14

#define D3DVSDE_TEXCOORD6 13

#define D3DLOCK_DISCARD 8192

#define D3DVSDE_TEXCOORD3 10

#define D3DVSDE_TEXCOORD2 9

#define D3DVSDE_TEXCOORD5 12

#define D3DVSDE_TEXCOORD4 11

#define D3DDP_MAXTEXCOORD 8

#define D3DVSDE_TEXCOORD1 8

#define D3DVSDE_TEXCOORD0 7

#define D3DVSDT_SHORT4 7

#define D3DSP_REGTYPE_SHIFT 28

#define D3DVSDT_SHORT2 6

#define D3DCLEAR_TARGET 1

#define D3DFVF_XYZRHW 4

#define D3DTA_SELECTMASK 15

#define D3DVS_SWIZZLE_MASK 16711680

#define D3DTA_TFACTOR 3

#define D3DTSS_TCI_CAMERASPACENORMAL 65536

#define D3DVSD_STREAMTESSSHIFT 28

#define D3DTS_WORLD 256

#define D3DCOLORWRITEENABLE_RED 1

#define D3DSP_DSTMOD_MASK 15728640

#define D3DFVF_XYZ 2

#define D3DFVF_XYZB4 12

#define D3DFVF_XYZB3 10

#define D3DFVF_XYZB5 14

#define D3DCS_TOP 4

#define D3DFVF_XYZB2 8

#define D3DFVF_XYZB1 6

typedef struct tagVS_FIXEDFILEINFO tagVS_FIXEDFILEINFO, *PtagVS_FIXEDFILEINFO;

struct tagVS_FIXEDFILEINFO {
    DWORD dwSignature;
    DWORD dwStrucVersion;
    DWORD dwFileVersionMS;
    DWORD dwFileVersionLS;
    DWORD dwProductVersionMS;
    DWORD dwProductVersionLS;
    DWORD dwFileFlagsMask;
    DWORD dwFileFlags;
    DWORD dwFileOS;
    DWORD dwFileType;
    DWORD dwFileSubtype;
    DWORD dwFileDateMS;
    DWORD dwFileDateLS;
};

#define VOS_OS232_PM32 196611

#define VFT2_DRV_VERSIONED_PRINTER 12

#define VIF_DIFFLANG 8

#define VFF_BUFFTOOSMALL 4

#define VIF_CANNOTRENAME 8192

#define VOS_OS216 131072

#define VIFF_FORCEINSTALL 1

#define VOS_NT 262144

#define VFT2_FONT_VECTOR 2

#define VS_FF_DEBUG 1

#define VFT2_DRV_COMM 10

#define VOS_NT_WINDOWS32 262148

#define VIFF_DONTDELETEOLD 2

#define VIF_SHARINGVIOLATION 1024

#define VOS_UNKNOWN 0

#define VOS__WINDOWS32 4

#define VFT_FONT 4

#define VIF_FILEINUSE 128

#define VS_FF_PRIVATEBUILD 8

#define VFFF_ISSHAREDFILE 1

#define VIF_BUFFTOOSMALL 262144

#define VIF_OUTOFSPACE 256

#define VIF_WRITEPROT 64

#define VIF_DIFFCODEPG 16

#define VFT2_DRV_INSTALLABLE 8

#define VFT2_FONT_RASTER 1

#define VS_VERSION_INFO 1

#define VOS_OS232 196608

#define VIF_MISMATCH 2

#define VIF_OUTOFMEMORY 32768

#define VS_USER_DEFINED 100

#define VIF_TEMPFILE 1

#define VOS__BASE 0

#define VIF_CANNOTCREATE 2048

#define VOS__PM16 2

#define VFF_FILEINUSE 2

#define VOS_DOS 65536

#define VFT_DRV 3

#define VS_FF_INFOINFERRED 16

#define VIF_CANNOTDELETECUR 16384

#define VFT2_DRV_INPUTMETHOD 11

#define VS_FFI_FILEFLAGSMASK 63

#define VS_FFI_STRUCVERSION 65536

#define VIF_CANNOTREADSRC 65536

#define VFF_CURNEDEST 1

#define VIF_SRCOLD 4

#define VIF_ACCESSVIOLATION 512

#define VFT2_FONT_TRUETYPE 3

#define VIF_CANNOTLOADCABINET 1048576

#define VFT2_DRV_NETWORK 6

#define VFT_STATIC_LIB 7

#define VOS__PM32 3

#define VIF_CANNOTREADDST 131072

#define VOS_DOS_WINDOWS32 65540

#define VIF_CANNOTLOADLZ32 524288

#define VS_FF_PRERELEASE 2

#define VFT_DLL 2

#define VFT_VXD 5

#define VS_FF_PATCHED 4

#define VS_FF_SPECIALBUILD 32

#define VFT2_DRV_SOUND 9

#define VFT2_DRV_LANGUAGE 3

#define VOS_OS216_PM16 131074

#define VFT_UNKNOWN 0

#define VS_FFI_SIGNATURE 4277077181

#define VFT2_DRV_MOUSE 5

#define VIF_CANNOTDELETE 4096

#define VIF_DIFFTYPE 32

#define VFT2_DRV_KEYBOARD 2

#define VOS_DOS_WINDOWS16 65537

#define VOS__WINDOWS16 1

#define VFT2_UNKNOWN 0

#define VS_FILE_INFO 16

#define VFT2_DRV_DISPLAY 4

#define VFT2_DRV_SYSTEM 7

#define VFT_APP 1

#define VFT2_DRV_PRINTER 1

typedef struct _NOTIFYICONDATAW _NOTIFYICONDATAW, *P_NOTIFYICONDATAW;

struct _NOTIFYICONDATAW {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    WCHAR szTip[64];
};

typedef struct _SHFILEOPSTRUCTA _SHFILEOPSTRUCTA, *P_SHFILEOPSTRUCTA;

typedef struct _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCTA;

typedef WORD FILEOP_FLAGS;

struct _SHFILEOPSTRUCTA {
    HWND hwnd;
    UINT wFunc;
    LPCSTR pFrom;
    LPCSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCSTR lpszProgressTitle;
};

typedef struct _SHFILEINFOA _SHFILEINFOA, *P_SHFILEINFOA;

struct _SHFILEINFOA {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    CHAR szDisplayName[260];
    CHAR szTypeName[80];
};

typedef struct _DRAGINFOW _DRAGINFOW, *P_DRAGINFOW;

struct _DRAGINFOW {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPWSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _SHFILEOPSTRUCTW _SHFILEOPSTRUCTW, *P_SHFILEOPSTRUCTW;

struct _SHFILEOPSTRUCTW {
    HWND hwnd;
    UINT wFunc;
    LPCWSTR pFrom;
    LPCWSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCWSTR lpszProgressTitle;
};

typedef struct _SHNAMEMAPPINGA _SHNAMEMAPPINGA, *P_SHNAMEMAPPINGA;

typedef struct _SHNAMEMAPPINGA SHNAMEMAPPINGA;

struct _SHNAMEMAPPINGA {
    LPSTR pszOldPath;
    LPSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _NOTIFYICONDATAA _NOTIFYICONDATAA, *P_NOTIFYICONDATAA;

struct _NOTIFYICONDATAA {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    CHAR szTip[64];
};

typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCTA;

typedef struct _SHELLEXECUTEINFOA _SHELLEXECUTEINFOA, *P_SHELLEXECUTEINFOA;

typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;

typedef SHELLEXECUTEINFOA SHELLEXECUTEINFO;

typedef struct HKEY__ HKEY__, *PHKEY__;

typedef struct HKEY__ *HKEY;

typedef union _union_859 _union_859, *P_union_859;

struct HKEY__ {
    int unused;
};

union _union_859 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

struct _SHELLEXECUTEINFOA {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpFile;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    LPVOID lpIDList;
    LPCSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_859 field13_0x34;
    HANDLE hProcess;
};

typedef struct _SHCREATEPROCESSINFOW _SHCREATEPROCESSINFOW, *P_SHCREATEPROCESSINFOW;

typedef struct _SHCREATEPROCESSINFOW SHCREATEPROCESSINFOW;

typedef struct _SECURITY_ATTRIBUTES _SECURITY_ATTRIBUTES, *P_SECURITY_ATTRIBUTES;

typedef struct _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

typedef struct _STARTUPINFOW _STARTUPINFOW, *P_STARTUPINFOW;

typedef struct _STARTUPINFOW *LPSTARTUPINFOW;

typedef struct _PROCESS_INFORMATION _PROCESS_INFORMATION, *P_PROCESS_INFORMATION;

typedef struct _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

struct _SHCREATEPROCESSINFOW {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCWSTR pszFile;
    LPCWSTR pszParameters;
    LPCWSTR pszCurrentDirectory;
    HANDLE hUserToken;
    LPSECURITY_ATTRIBUTES lpProcessAttributes;
    LPSECURITY_ATTRIBUTES lpThreadAttributes;
    BOOL bInheritHandles;
    DWORD dwCreationFlags;
    LPSTARTUPINFOW lpStartupInfo;
    LPPROCESS_INFORMATION lpProcessInformation;
};

struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
};

struct _STARTUPINFOW {
    DWORD cb;
    LPWSTR lpReserved;
    LPWSTR lpDesktop;
    LPWSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

struct _PROCESS_INFORMATION {
    HANDLE hProcess;
    HANDLE hThread;
    DWORD dwProcessId;
    DWORD dwThreadId;
};

typedef struct _SHQUERYRBINFO _SHQUERYRBINFO, *P_SHQUERYRBINFO;

struct _SHQUERYRBINFO {
    DWORD cbSize;
    longlong i64Size;
    longlong i64NumItems;
};

typedef struct _SHFILEINFOW _SHFILEINFOW, *P_SHFILEINFOW;

struct _SHFILEINFOW {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    WCHAR szDisplayName[260];
    WCHAR szTypeName[80];
};

typedef struct HDROP__ HDROP__, *PHDROP__;

typedef struct HDROP__ *HDROP;

struct HDROP__ {
    int unused;
};

typedef struct _SHELLEXECUTEINFOW _SHELLEXECUTEINFOW, *P_SHELLEXECUTEINFOW;

typedef struct _SHELLEXECUTEINFOW SHELLEXECUTEINFOW;

typedef union _union_861 _union_861, *P_union_861;

union _union_861 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

struct _SHELLEXECUTEINFOW {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCWSTR lpVerb;
    LPCWSTR lpFile;
    LPCWSTR lpParameters;
    LPCWSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    LPVOID lpIDList;
    LPCWSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_861 field13_0x34;
    HANDLE hProcess;
};

typedef struct _SHFILEOPSTRUCTW SHFILEOPSTRUCTW;

typedef struct _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;

typedef struct _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFOA;

typedef LPSHELLEXECUTEINFOA LPSHELLEXECUTEINFO;

typedef struct _SHFILEINFOW SHFILEINFOW;

typedef LPSHFILEOPSTRUCTA LPSHFILEOPSTRUCT;

typedef struct _SHNAMEMAPPINGW _SHNAMEMAPPINGW, *P_SHNAMEMAPPINGW;

struct _SHNAMEMAPPINGW {
    LPWSTR pszOldPath;
    LPWSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _SHFILEINFOA SHFILEINFOA;

typedef struct _DRAGINFOW *LPDRAGINFOW;

typedef union _union_863 _union_863, *P_union_863;

union _union_863 {
    HANDLE hIcon;
    HANDLE hMonitor;
};

typedef struct _DRAGINFOA _DRAGINFOA, *P_DRAGINFOA;

typedef struct _DRAGINFOA DRAGINFOA;

typedef DRAGINFOA DRAGINFO;

struct _DRAGINFOA {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _SHQUERYRBINFO SHQUERYRBINFO;

typedef struct _SHNAMEMAPPINGW SHNAMEMAPPINGW;

typedef struct _DRAGINFOA *LPDRAGINFOA;

typedef struct _SHNAMEMAPPINGA *LPSHNAMEMAPPINGA;

typedef LPSHNAMEMAPPINGA LPSHNAMEMAPPING;

typedef struct _AppBarData _AppBarData, *P_AppBarData;

typedef struct _AppBarData *PAPPBARDATA;

struct _AppBarData {
    DWORD cbSize;
    HWND hWnd;
    UINT uCallbackMessage;
    UINT uEdge;
    RECT rc;
    LPARAM lParam;
};

typedef struct _SHCREATEPROCESSINFOW *PSHCREATEPROCESSINFOW;

typedef struct _NOTIFYICONDATAA *PNOTIFYICONDATAA;

typedef SHNAMEMAPPINGA SHNAMEMAPPING;

typedef struct _NOTIFYICONDATAW NOTIFYICONDATAW;

typedef struct _NOTIFYICONDATAW *PNOTIFYICONDATAW;

typedef SHFILEINFOA SHFILEINFO;

typedef PNOTIFYICONDATAA PNOTIFYICONDATA;

typedef struct _DRAGINFOW DRAGINFOW;

typedef struct _AppBarData APPBARDATA;

typedef struct _NOTIFYICONDATAA NOTIFYICONDATAA;

typedef struct _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;

typedef LPDRAGINFOA LPDRAGINFO;

typedef struct _SHNAMEMAPPINGW *LPSHNAMEMAPPINGW;

typedef SHFILEOPSTRUCTA SHFILEOPSTRUCT;

typedef WORD PRINTEROP_FLAGS;

typedef NOTIFYICONDATAA NOTIFYICONDATA;

typedef struct _SHQUERYRBINFO *LPSHQUERYRBINFO;

#define SHGNLI_PREFIXNAME 2

#define SEE_MASK_HMONITOR 2097152

#define ABM_REMOVE 1

#define ABM_GETTASKBARPOS 5

#define ABE_RIGHT 2

#define SEE_MASK_FLAG_NO_UI 1024

#define SHERB_NOPROGRESSUI 2

#define SHGFI_SYSICONINDEX 16384

#define SHGFI_ICONLOCATION 4096

#define SEE_MASK_CLASSKEY 3

#define FO_MOVE 1

#define SE_ERR_PNF 3

#define FOF_SIMPLEPROGRESS 256

#define SEE_MASK_INVOKEIDLIST 12

#define SE_ERR_DDEFAIL 29

#define SEE_MASK_IDLIST 4

#define SE_ERR_SHARE 26

#define SEE_MASK_HOTKEY 32

#define SHGFI_SHELLICONSIZE 4

#define FOF_RENAMEONCOLLISION 8

#define SEE_MASK_UNICODE 16384

#define FOF_CONFIRMMOUSE 2

#define PO_RENAME 20

#define SHERB_NOCONFIRMATION 1

#define SHGFI_TYPENAME 1024

#define SE_ERR_ACCESSDENIED 5

#define SHGFI_LINKOVERLAY 32768

#define FOF_ALLOWUNDO 64

#define ABM_WINDOWPOSCHANGED 9

#define SHGNLI_NOUNIQUE 4

#define SHGNLI_PIDL 1

#define ABN_FULLSCREENAPP 2

#define SHGFI_SMALLICON 1

#define ABS_AUTOHIDE 1

#define SE_ERR_OOM 8

#define SE_ERR_ASSOCINCOMPLETE 27

#define SE_ERR_FNF 2

#define ABE_BOTTOM 3

#define ABM_QUERYPOS 2

#define ABN_STATECHANGE 0

#define SEE_MASK_ICON 16

#define ABM_SETAUTOHIDEBAR 8

#define SHGFI_LARGEICON 0

#define ABE_LEFT 0

#define ABM_SETSTATE 10

#define PO_REN_PORT 52

#define PO_PORTCHANGE 32

#define FOF_NOERRORUI 1024

#define NIM_MODIFY 1

#define PRINTACTION_NETINSTALL 2

#define ABS_ALWAYSONTOP 2

#define SEE_MASK_DOENVSUBST 512

#define SEE_MASK_CONNECTNETDRV 128

#define SE_ERR_DDEBUSY 30

#define ABM_GETAUTOHIDEBAR 7

#define SEE_MASK_CLASSNAME 1

#define PRINTACTION_OPENNETPRN 5

#define PRINTACTION_OPEN 0

#define NIM_DELETE 2

#define FO_RENAME 4

#define ABM_NEW 0

#define ABM_ACTIVATE 6

#define SEE_MASK_FLAG_DDEWAIT 256

#define SHGFI_SELECTED 65536

#define NIM_ADD 0

#define ABE_TOP 1

#define FOF_FILESONLY 128

#define SHGFI_OPENICON 2

#define SHGFI_ATTRIBUTES 2048

#define FO_DELETE 3

#define SEE_MASK_ASYNCOK 1048576

#define SHGFI_ICON 256

#define FOF_NOCOPYSECURITYATTRIBS 2048

#define SE_ERR_DDETIMEOUT 28

#define ABN_POSCHANGED 1

#define NIF_TIP 4

#define SEE_MASK_NOCLOSEPROCESS 64

#define SHGFI_USEFILEATTRIBUTES 16

#define PRINTACTION_TESTPAGE 4

#define SE_ERR_DLLNOTFOUND 32

#define FO_COPY 2

#define SHERB_NOSOUND 4

#define SHGFI_PIDL 8

#define FOF_NORECURSION 4096

#define ABM_SETPOS 3

#define FOF_NOCONFIRMATION 16

#define ABN_WINDOWARRANGE 3

#define PO_DELETE 19

#define FOF_MULTIDESTFILES 1

#define NIF_MESSAGE 1

#define NIF_ICON 2

#define SE_ERR_NOASSOC 31

#define SHGFI_DISPLAYNAME 512

#define FOF_SILENT 4

#define ABM_GETSTATE 4

#define PRINTACTION_PROPERTIES 1

#define SHGFI_EXETYPE 8192

#define SHGFI_ATTR_SPECIFIED 131072

#define SEE_MASK_NO_CONSOLE 32768

#define FOF_WANTMAPPINGHANDLE 32

#define PRINTACTION_NETINSTALLLINK 3

#define FOF_NOCONFIRMMKDIR 512

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W tagRPC_CALL_ATTRIBUTES_V1_W, *PtagRPC_CALL_ATTRIBUTES_V1_W;

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W RPC_CALL_ATTRIBUTES_V1_W;

struct tagRPC_CALL_ATTRIBUTES_V1_W {
    uint Version;
    ulong Flags;
    ulong ServerPrincipalNameBufferLength;
    ushort *ServerPrincipalName;
    ulong ClientPrincipalNameBufferLength;
    ushort *ClientPrincipalName;
    ulong AuthenticationLevel;
    ulong AuthenticationService;
    BOOL NullSession;
};

typedef enum _RPC_NOTIFICATION_TYPES {
    RpcNotificationTypeNone=0,
    RpcNotificationTypeEvent=1,
    RpcNotificationTypeApc=2,
    RpcNotificationTypeIoc=3,
    RpcNotificationTypeHwnd=4,
    RpcNotificationTypeCallback=5
} _RPC_NOTIFICATION_TYPES;

typedef enum _RPC_NOTIFICATION_TYPES RPC_NOTIFICATION_TYPES;

typedef struct _struct_839 _struct_839, *P_struct_839;

typedef struct _OVERLAPPED _OVERLAPPED, *P_OVERLAPPED;

typedef struct _OVERLAPPED *LPOVERLAPPED;

typedef union _union_290 _union_290, *P_union_290;

typedef struct _struct_291 _struct_291, *P_struct_291;

struct _struct_291 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_290 {
    struct _struct_291 field0;
    PVOID Pointer;
};

struct _struct_839 {
    HANDLE hIOPort;
    DWORD dwNumberOfBytesTransferred;
    DWORD_PTR dwCompletionKey;
    LPOVERLAPPED lpOverlapped;
};

struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union _union_290 field2_0x8;
    HANDLE hEvent;
};

typedef struct tagBinaryParam tagBinaryParam, *PtagBinaryParam;

typedef struct tagBinaryParam BinaryParam;

struct tagBinaryParam {
    void *Buffer;
    short Size;
};

typedef struct _struct_838 _struct_838, *P_struct_838;

typedef struct _RPC_ASYNC_STATE _RPC_ASYNC_STATE, *P_RPC_ASYNC_STATE;

typedef enum _RPC_ASYNC_EVENT {
    RpcCallComplete=0,
    RpcSendComplete=1,
    RpcReceiveComplete=2
} _RPC_ASYNC_EVENT;

typedef enum _RPC_ASYNC_EVENT RPC_ASYNC_EVENT;

typedef void (RPCNOTIFICATION_ROUTINE)(struct _RPC_ASYNC_STATE *, void *, RPC_ASYNC_EVENT);

typedef RPCNOTIFICATION_ROUTINE *PFN_RPCNOTIFICATION_ROUTINE;

typedef union _union_837 _union_837, *P_union_837;

typedef struct _struct_840.conflict _struct_840.conflict, *P_struct_840.conflict;

struct _struct_838 {
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
    HANDLE hThread;
};

struct _struct_840.conflict {
    HWND hWnd;
    UINT Msg;
};

union _union_837 {
    struct _struct_838 APC;
    struct _struct_839 IOC;
    struct _struct_840.conflict HWND;
    HANDLE hEvent;
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
};

struct _RPC_ASYNC_STATE {
    uint Size;
    ulong Signature;
    long Lock;
    ulong Flags;
    void *StubInfo;
    void *UserInfo;
    void *RuntimeInfo;
    RPC_ASYNC_EVENT Event;
    RPC_NOTIFICATION_TYPES NotificationType;
    union _union_837 u;
    LONG_PTR Reserved[4];
};

typedef struct tagRPC_EXTENDED_ERROR_INFO tagRPC_EXTENDED_ERROR_INFO, *PtagRPC_EXTENDED_ERROR_INFO;

typedef union _union_845.conflict _union_845.conflict, *P_union_845.conflict;

typedef struct tagRPC_EE_INFO_PARAM tagRPC_EE_INFO_PARAM, *PtagRPC_EE_INFO_PARAM;

typedef struct tagRPC_EE_INFO_PARAM RPC_EE_INFO_PARAM;

typedef enum tagExtendedErrorParamTypes {
    eeptAnsiString=1,
    eeptUnicodeString=2,
    eeptLongVal=3,
    eeptShortVal=4,
    eeptPointerVal=5,
    eeptNone=6,
    eeptBinary=7
} tagExtendedErrorParamTypes;

typedef enum tagExtendedErrorParamTypes ExtendedErrorParamTypes;

typedef union _union_843 _union_843, *P_union_843;

union _union_845.conflict {
    SYSTEMTIME SystemTime;
    FILETIME FileTime;
};

union _union_843 {
    LPSTR AnsiString;
    LPWSTR UnicodeString;
    long LVal;
    short SVal;
    ULONGLONG PVal;
    BinaryParam BVal;
};

struct tagRPC_EE_INFO_PARAM {
    ExtendedErrorParamTypes ParameterType;
    union _union_843 u;
};

struct tagRPC_EXTENDED_ERROR_INFO {
    ULONG Version;
    LPWSTR ComputerName;
    ULONG ProcessID;
    union _union_845.conflict u;
    ULONG GeneratingComponent;
    ULONG Status;
    USHORT DetectionLocation;
    USHORT Flags;
    int NumberOfParameters;
    RPC_EE_INFO_PARAM Parameters[4];
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A tagRPC_CALL_ATTRIBUTES_V1_A, *PtagRPC_CALL_ATTRIBUTES_V1_A;

struct tagRPC_CALL_ATTRIBUTES_V1_A {
    uint Version;
    ulong Flags;
    ulong ServerPrincipalNameBufferLength;
    uchar *ServerPrincipalName;
    ulong ClientPrincipalNameBufferLength;
    uchar *ClientPrincipalName;
    ulong AuthenticationLevel;
    ulong AuthenticationService;
    BOOL NullSession;
};

typedef struct tagRPC_ERROR_ENUM_HANDLE tagRPC_ERROR_ENUM_HANDLE, *PtagRPC_ERROR_ENUM_HANDLE;

typedef struct tagRPC_ERROR_ENUM_HANDLE RPC_ERROR_ENUM_HANDLE;

struct tagRPC_ERROR_ENUM_HANDLE {
    ULONG Signature;
    void *CurrentPos;
    void *Head;
};

typedef union _union_845 _union_845, *P_union_845;

union _union_845 {
    LPSTR AnsiString;
    LPWSTR UnicodeString;
    long LVal;
    short SVal;
    ULONGLONG PVal;
    BinaryParam BVal;
};

typedef struct tagRPC_EXTENDED_ERROR_INFO RPC_EXTENDED_ERROR_INFO;

typedef union _union_847 _union_847, *P_union_847;

union _union_847 {
    SYSTEMTIME SystemTime;
    FILETIME FileTime;
};

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES_V1_A;

typedef struct _struct_842 _struct_842, *P_struct_842;

struct _struct_842 {
    HWND hWnd;
    UINT Msg;
};

typedef struct _struct_841 _struct_841, *P_struct_841;

struct _struct_841 {
    HANDLE hIOPort;
    DWORD dwNumberOfBytesTransferred;
    DWORD_PTR dwCompletionKey;
    LPOVERLAPPED lpOverlapped;
};

typedef struct _struct_840 _struct_840, *P_struct_840;

struct _struct_840 {
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
    HANDLE hThread;
};

typedef struct _RPC_ASYNC_STATE *PRPC_ASYNC_STATE;

typedef RPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES;

typedef union _union_839 _union_839, *P_union_839;

union _union_839 {
    struct _struct_840 APC;
    struct _struct_841 IOC;
    struct _struct_842 HWND;
    HANDLE hEvent;
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
};

typedef struct _RPC_ASYNC_STATE RPC_ASYNC_STATE;

#define EEInfoNextRecordsMissing 2

#define RPC_C_INFINITE_TIMEOUT 4294967295

#define EEInfoUseFileTime 4

#define RPC_QUERY_SERVER_PRINCIPAL_NAME 2

#define RPC_EEINFO_VERSION 1

#define RPC_QUERY_CLIENT_PRINCIPAL_NAME 4

#define RPC_CALL_ATTRIBUTES_VERSION 1

#define MaxNumberOfEEInfoParams 4

#define EEInfoGCCOM 11

#define RPC_C_NOTIFY_ON_SEND_COMPLETE 1

#define EEInfoPreviousRecordsMissing 1

#define FLT_ROUNDS 1

#define SW_STACKOVERFLOW 512

#define _MCW_DN 50331648

#define RC_DOWN 256

#define _FPE_DENORMAL 130

#define _FPCLASS_SNAN 1

#define _EM_INVALID 16

#define PC_64 0

#define CW_DEFAULT 589855

#define _SW_STACKOVERFLOW 512

#define FPE_UNDERFLOW 133

#define _IC_AFFINE 262144

#define _FPCLASS_PINF 512

#define FLT_MIN_EXP -125

#define _DBL_ROUNDS 1

#define _DBL_RADIX 2

#define _EM_UNDERFLOW 2

#define MCW_EM 524319

#define _PC_64 0

#define SW_STACKUNDERFLOW 1024

#define _RC_DOWN 256

#define _SW_OVERFLOW 4

#define FLT_GUARD 0

#define FPE_OVERFLOW 132

#define _MCW_EM 524319

#define DBL_MIN_10_EXP -307

#define EM_DENORMAL 524288

#define _SW_DENORMAL 524288

#define _FPE_EXPLICITGEN 140

#define DBL_MAX_EXP 1024

#define EM_ZERODIVIDE 8

#define FLT_MAX_EXP 128

#define SW_DENORMAL 524288

#define RC_CHOP 768

#define _FPCLASS_NN 8

#define _IC_PROJECTIVE 0

#define _FPCLASS_ND 16

#define _DN_SAVE_OPERANDS_FLUSH_RESULTS 50331648

#define RC_UP 512

#define _LDBL_ROUNDS 1

#define _FPCLASS_NZ 32

#define _MCW_PC 196608

#define _PC_53 65536

#define _FPE_STACKOVERFLOW 138

#define FLT_MANT_DIG 24

#define EM_UNDERFLOW 2

#define _PC_24 131072

#define _EM_INEXACT 1

#define _FPE_UNDERFLOW 133

#define _RC_NEAR 0

#define DBL_MAX_10_EXP 308

#define IC_AFFINE 262144

#define DBL_MANT_DIG 53

#define _FPCLASS_QNAN 2

#define MCW_IC 262144

#define LDBL_MIN_10_EXP -307

#define FPE_INVALID 129

#define FPE_INEXACT 134

#define _FPE_ZERODIVIDE 131

#define _SW_UNEMULATED 64

#define _MCW_RC 768

#define MCW_PC 196608

#define FPE_DENORMAL 130

#define FLT_MIN_10_EXP -37

#define _FPCLASS_NINF 4

#define DBL_ROUNDS 1

#define _SW_ZERODIVIDE 8

#define FLT_DIG 6

#define _FPE_UNEMULATED 135

#define _SW_INEXACT 1

#define _DN_FLUSH 16777216

#define _DN_FLUSH_OPERANDS_SAVE_RESULTS 33554432

#define _EM_DENORMAL 524288

#define _SW_INVALID 16

#define SW_OVERFLOW 4

#define _LDBL_RADIX 2

#define FPE_SQRTNEG 136

#define LDBL_MANT_DIG 53

#define FPE_UNEMULATED 135

#define EM_OVERFLOW 4

#define EM_INVALID 16

#define FPE_STACKUNDERFLOW 139

#define _FPCLASS_PN 256

#define _SW_STACKUNDERFLOW 1024

#define _FPCLASS_PD 128

#define _FPE_STACKUNDERFLOW 139

#define LDBL_MIN_EXP -1021

#define FPE_ZERODIVIDE 131

#define FLT_NORMALIZE 0

#define EM_INEXACT 1

#define FLT_MAX_10_EXP 38

#define _FPCLASS_PZ 64

#define FLT_RADIX 2

#define SW_ZERODIVIDE 8

#define _SW_SQRTNEG 128

#define LDBL_RADIX 2

#define _MCW_IC 262144

#define FPE_STACKOVERFLOW 138

#define DBL_DIG 15

#define LDBL_MAX_EXP 1024

#define RC_NEAR 0

#define LDBL_DIG 15

#define _FPE_INVALID 129

#define _RC_UP 512

#define _CW_DEFAULT 589855

#define LDBL_MAX_10_EXP 308

#define DBL_RADIX 2

#define PC_24 131072

#define SW_UNEMULATED 64

#define _EM_OVERFLOW 4

#define SW_UNDERFLOW 2

#define _FPE_OVERFLOW 132

#define _FPE_INEXACT 134

#define MCW_RC 768

#define _EM_ZERODIVIDE 8

#define SW_INVALID 16

#define _DN_SAVE 0

#define PC_53 65536

#define SW_SQRTNEG 128

#define DBL_MIN_EXP -1021

#define IC_PROJECTIVE 0

#define SW_INEXACT 1

#define _FPE_SQRTNEG 136

#define FPE_EXPLICITGEN 140

#define _RC_CHOP 768

#define LDBL_ROUNDS 1

#define _SW_UNDERFLOW 2

typedef struct tagBSTRBLOB tagBSTRBLOB, *PtagBSTRBLOB;

typedef struct tagBSTRBLOB BSTRBLOB;

struct tagBSTRBLOB {
    ULONG cbSize;
    BYTE *pData;
};

typedef BSTR *LPBSTR;

typedef struct tagRemHMETAFILEPICT tagRemHMETAFILEPICT, *PtagRemHMETAFILEPICT;

typedef struct tagRemHMETAFILEPICT RemHMETAFILEPICT;

struct tagRemHMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    ulong cbData;
    byte data[1];
};

typedef DECIMAL *LPDECIMAL;

typedef struct tagQUERYCONTEXT tagQUERYCONTEXT, *PtagQUERYCONTEXT;

typedef struct tagCSPLATFORM tagCSPLATFORM, *PtagCSPLATFORM;

typedef struct tagCSPLATFORM CSPLATFORM;

struct tagCSPLATFORM {
    DWORD dwPlatformId;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
    DWORD dwProcessorArch;
};

struct tagQUERYCONTEXT {
    DWORD dwContext;
    CSPLATFORM Platform;
    LCID Locale;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
};

typedef struct tagBLOB tagBLOB, *PtagBLOB;

struct tagBLOB {
    ULONG cbSize;
    BYTE *pBlobData;
};

typedef enum VARENUM {
    VT_EMPTY=0,
    VT_NULL=1,
    VT_I2=2,
    VT_I4=3,
    VT_R4=4,
    VT_R8=5,
    VT_CY=6,
    VT_DATE=7,
    VT_BSTR=8,
    VT_DISPATCH=9,
    VT_ERROR=10,
    VT_BOOL=11,
    VT_VARIANT=12,
    VT_UNKNOWN=13,
    VT_DECIMAL=14,
    VT_I1=16,
    VT_UI1=17,
    VT_UI2=18,
    VT_UI4=19,
    VT_I8=20,
    VT_UI8=21,
    VT_INT=22,
    VT_UINT=23,
    VT_VOID=24,
    VT_HRESULT=25,
    VT_PTR=26,
    VT_SAFEARRAY=27,
    VT_CARRAY=28,
    VT_USERDEFINED=29,
    VT_LPSTR=30,
    VT_LPWSTR=31,
    VT_RECORD=36,
    VT_INT_PTR=37,
    VT_UINT_PTR=38,
    VT_FILETIME=64,
    VT_BLOB=65,
    VT_STREAM=66,
    VT_STORAGE=67,
    VT_STREAMED_OBJECT=68,
    VT_STORED_OBJECT=69,
    VT_BLOB_OBJECT=70,
    VT_CF=71,
    VT_CLSID=72,
    VT_VERSIONED_STREAM=73,
    VT_BSTR_BLOB=4095,
    VT_ILLEGALMASKED=4095,
    VT_TYPEMASK=4095,
    VT_VECTOR=4096,
    VT_ARRAY=8192,
    VT_BYREF=16384,
    VT_RESERVED=32768,
    VT_ILLEGAL=65535
} VARENUM;

typedef struct _userCLIPFORMAT _userCLIPFORMAT, *P_userCLIPFORMAT;

typedef struct _userCLIPFORMAT userCLIPFORMAT;

typedef union __MIDL_IWinTypes_0001 __MIDL_IWinTypes_0001, *P__MIDL_IWinTypes_0001;

union __MIDL_IWinTypes_0001 {
    DWORD dwValue;
    wchar_t *pwszName;
};

struct _userCLIPFORMAT {
    long fContext;
    union __MIDL_IWinTypes_0001 u;
};

typedef struct tagRemHBITMAP tagRemHBITMAP, *PtagRemHBITMAP;

struct tagRemHBITMAP {
    ulong cbData;
    byte data[1];
};

typedef FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB;

typedef struct _RemotableHandle _RemotableHandle, *P_RemotableHandle;

typedef struct _RemotableHandle RemotableHandle;

typedef RemotableHandle *wireHDC;

typedef union __MIDL_IWinTypes_0009 __MIDL_IWinTypes_0009, *P__MIDL_IWinTypes_0009;

union __MIDL_IWinTypes_0009 {
    long hInproc;
    long hRemote;
};

struct _RemotableHandle {
    long fContext;
    union __MIDL_IWinTypes_0009 u;
};

typedef struct _struct_1709 _struct_1709, *P_struct_1709;

struct _struct_1709 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

typedef struct _GDI_NONREMOTE _GDI_NONREMOTE, *P_GDI_NONREMOTE;

typedef struct _GDI_NONREMOTE GDI_NONREMOTE;

typedef union __MIDL_IWinTypes_0002 __MIDL_IWinTypes_0002, *P__MIDL_IWinTypes_0002;

typedef struct _DWORD_BLOB _DWORD_BLOB, *P_DWORD_BLOB;

typedef struct _DWORD_BLOB DWORD_BLOB;

union __MIDL_IWinTypes_0002 {
    long hInproc;
    DWORD_BLOB *hRemote;
};

struct _DWORD_BLOB {
    ulong clSize;
    ulong alData[1];
};

struct _GDI_NONREMOTE {
    long fContext;
    union __MIDL_IWinTypes_0002 u;
};

typedef enum tagMSHLFLAGS {
    MSHLFLAGS_NORMAL=0,
    MSHLFLAGS_TABLESTRONG=1,
    MSHLFLAGS_TABLEWEAK=2,
    MSHLFLAGS_NOPING=4,
    MSHLFLAGS_RESERVED1=8,
    MSHLFLAGS_RESERVED2=16,
    MSHLFLAGS_RESERVED3=32,
    MSHLFLAGS_RESERVED4=64
} tagMSHLFLAGS;

typedef struct _struct_1710 _struct_1710, *P_struct_1710;

struct _struct_1710 {
    GUID ObjectId;
    GUID PolicyId;
};

typedef struct tagCLIPDATA tagCLIPDATA, *PtagCLIPDATA;

struct tagCLIPDATA {
    ULONG cbSize;
    long ulClipFmt;
    BYTE *pClipData;
};

typedef CY *LPCY;

typedef enum tagSTGMOVE {
    STGMOVE_MOVE=0,
    STGMOVE_COPY=1,
    STGMOVE_SHALLOWCOPY=2
} tagSTGMOVE;

typedef enum tagSTGMOVE STGMOVE;

typedef RemotableHandle *wireHFONT;

typedef struct tagBLOB *LPBLOB;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 __MIDL___MIDL_itf_wtypes_0000_0001_0001, *P__MIDL___MIDL_itf_wtypes_0000_0001_0001;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 uCLSSPEC;

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0005 __MIDL___MIDL_itf_wtypes_0000_0001_0005, *P__MIDL___MIDL_itf_wtypes_0000_0001_0005;

union __MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    CLSID clsid;
    LPOLESTR pFileExt;
    LPOLESTR pMimeType;
    LPOLESTR pProgId;
    LPOLESTR pFileName;
    struct _struct_1709 ByName;
    struct _struct_1710 ByObjectId;
};

struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 {
    DWORD tyspec;
    union __MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
};

typedef struct tagRemHENHMETAFILE tagRemHENHMETAFILE, *PtagRemHENHMETAFILE;

typedef struct tagRemHENHMETAFILE RemHENHMETAFILE;

struct tagRemHENHMETAFILE {
    ulong cbData;
    byte data[1];
};

typedef RemotableHandle *wireHWND;

typedef RemotableHandle *wireHBRUSH;

typedef enum tagSTATFLAG {
    STATFLAG_DEFAULT=0,
    STATFLAG_NONAME=1,
    STATFLAG_NOOPEN=2
} tagSTATFLAG;

typedef RemotableHandle *wireHICON;

typedef BYTE_BLOB *UP_BYTE_BLOB;

typedef union _union_1276 _union_1276, *P_union_1276;

typedef struct _struct_1277 _struct_1277, *P_struct_1277;

struct _struct_1277 {
    BYTE scale;
    BYTE sign;
};

union _union_1276 {
    struct _struct_1277 field0;
    USHORT signscale;
};

typedef struct tagRemBRUSH tagRemBRUSH, *PtagRemBRUSH;

struct tagRemBRUSH {
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHPALETTE tagRemHPALETTE, *PtagRemHPALETTE;

struct tagRemHPALETTE {
    ulong cbData;
    byte data[1];
};

typedef union _union_1278 _union_1278, *P_union_1278;

typedef struct _struct_1279 _struct_1279, *P_struct_1279;

struct _struct_1279 {
    ULONG Lo32;
    ULONG Mid32;
};

union _union_1278 {
    struct _struct_1279 field0;
    ULONGLONG Lo64;
};

typedef struct tagBSTRBLOB *LPBSTRBLOB;

typedef struct tagQUERYCONTEXT QUERYCONTEXT;

typedef struct _WORD_BLOB _WORD_BLOB, *P_WORD_BLOB;

struct _WORD_BLOB {
    ulong clSize;
    ushort asData[1];
};

typedef enum tagCLSCTX {
    CLSCTX_INPROC_SERVER=1,
    CLSCTX_INPROC_HANDLER=2,
    CLSCTX_LOCAL_SERVER=4,
    CLSCTX_INPROC_SERVER16=8,
    CLSCTX_REMOTE_SERVER=16,
    CLSCTX_INPROC_HANDLER16=32,
    CLSCTX_INPROC_SERVERX86=64,
    CLSCTX_INPROC_HANDLERX86=128,
    CLSCTX_ESERVER_HANDLER=256,
    CLSCTX_RESERVED=512,
    CLSCTX_NO_CODE_DOWNLOAD=1024,
    CLSCTX_NO_WX86_TRANSLATION=2048,
    CLSCTX_NO_CUSTOM_MARSHAL=4096,
    CLSCTX_ENABLE_CODE_DOWNLOAD=8192,
    CLSCTX_NO_FAILURE_LOG=16384,
    CLSCTX_DISABLE_AAA=32768,
    CLSCTX_ENABLE_AAA=65536,
    CLSCTX_FROM_DEFAULT_CONTEXT=131072
} tagCLSCTX;

typedef enum tagCLSCTX CLSCTX;

typedef union __MIDL___MIDL_itf_wtypes_0003_0005 __MIDL___MIDL_itf_wtypes_0003_0005, *P__MIDL___MIDL_itf_wtypes_0003_0005;

typedef struct _struct_1287 _struct_1287, *P_struct_1287;

typedef struct _struct_1288 _struct_1288, *P_struct_1288;

struct _struct_1287 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

struct _struct_1288 {
    GUID ObjectId;
    GUID PolicyId;
};

union __MIDL___MIDL_itf_wtypes_0003_0005 {
    CLSID clsid;
    LPOLESTR pFileExt;
    LPOLESTR pMimeType;
    LPOLESTR pProgId;
    LPOLESTR pFileName;
    struct _struct_1287 ByName;
    struct _struct_1288 ByObjectId;
};

typedef struct __MIDL___MIDL_itf_wtypes_0003_0001 __MIDL___MIDL_itf_wtypes_0003_0001, *P__MIDL___MIDL_itf_wtypes_0003_0001;

struct __MIDL___MIDL_itf_wtypes_0003_0001 {
    DWORD tyspec;
    union __MIDL___MIDL_itf_wtypes_0003_0005 tagged_union;
};

typedef struct tagRemHGLOBAL tagRemHGLOBAL, *PtagRemHGLOBAL;

struct tagRemHGLOBAL {
    long fNullHGlobal;
    ulong cbData;
    byte data[1];
};

typedef enum tagSTGC {
    STGC_DEFAULT=0,
    STGC_OVERWRITE=1,
    STGC_ONLYIFCURRENT=2,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE=4,
    STGC_CONSOLIDATE=8
} tagSTGC;

typedef struct tagRemHPALETTE RemHPALETTE;

typedef DWORD_BLOB *UP_DWORD_BLOB;

typedef userCLIPFORMAT *wireCLIPFORMAT;

typedef RemotableHandle *wireHMENU;

typedef enum tagMSHLFLAGS MSHLFLAGS;

typedef void *HCONTEXT;

typedef ULONG PROPID;

typedef struct _WORD_BLOB WORD_BLOB;

typedef WORD_BLOB *UP_WORD_BLOB;

typedef struct tagRemBRUSH RemHBRUSH;

typedef struct _struct_1274 _struct_1274, *P_struct_1274;

struct _struct_1274 {
    ulong Lo;
    long Hi;
};

typedef enum tagDVASPECT {
    DVASPECT_CONTENT=1,
    DVASPECT_THUMBNAIL=2,
    DVASPECT_ICON=4,
    DVASPECT_DOCPRINT=8
} tagDVASPECT;

typedef userHMETAFILE *wireHMETAFILE;

typedef struct _struct_1289 _struct_1289, *P_struct_1289;

struct _struct_1289 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

typedef enum tagSTGC STGC;


/* WARNING! conflicting data type names: /deps/wtypes.h/LANGID - /deps/winnt.h/LANGID */

typedef struct tagCLIPDATA CLIPDATA;

typedef enum tagSTATFLAG STATFLAG;

typedef struct _struct_1290 _struct_1290, *P_struct_1290;

struct _struct_1290 {
    GUID ObjectId;
    GUID PolicyId;
};

typedef enum tagMEMCTX {
    MEMCTX_SAME=-2,
    MEMCTX_UNKNOWN=-1,
    MEMCTX_TASK=1,
    MEMCTX_SHARED=2,
    MEMCTX_MACSYSTEM=3
} tagMEMCTX;

typedef SCODE *PSCODE;

typedef struct tagRemHBITMAP RemHBITMAP;

typedef enum tagMEMCTX MEMCTX;

typedef enum tagMSHCTX {
    MSHCTX_LOCAL=0,
    MSHCTX_NOSHAREDMEM=1,
    MSHCTX_DIFFERENTMACHINE=2,
    MSHCTX_INPROC=3,
    MSHCTX_CROSSCTX=4
} tagMSHCTX;

typedef enum tagMSHCTX MSHCTX;

typedef enum tagTYSPEC {
    TYSPEC_CLSID=0,
    TYSPEC_FILEEXT=1,
    TYSPEC_MIMETYPE=2,
    TYSPEC_FILENAME=3,
    TYSPEC_PROGID=4,
    TYSPEC_PACKAGENAME=5,
    TYSPEC_OBJECTID=6
} tagTYSPEC;

typedef struct tagBLOB BLOB;

typedef struct tagRemHGLOBAL RemHGLOBAL;

typedef enum tagDVASPECT DVASPECT;

typedef enum tagTYSPEC TYSPEC;

typedef RemotableHandle *wireHACCEL;

typedef FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB;

#define ROTFLAGS_ALLOWANYCLIENT 2

#define ROT_COMPARE_MAX 2048

#define WDT_INPROC64_CALL 1349805143

#define WDT_INPROC_CALL 1215587415

#define DECIMAL_NEG 128

#define WDT_REMOTE_CALL 1383359575

#define VARIANT_FALSE 0

#define VARIANT_TRUE -1

#define ROTFLAGS_REGISTRATIONKEEPSALIVE 1

#define __REQUIRED_RPCNDR_H_VERSION__ 500

typedef struct _OLESTREAM _OLESTREAM, *P_OLESTREAM;

typedef struct _OLESTREAM *LPOLESTREAM;

typedef struct _OLESTREAMVTBL _OLESTREAMVTBL, *P_OLESTREAMVTBL;

typedef struct _OLESTREAMVTBL OLESTREAMVTBL;

typedef OLESTREAMVTBL *LPOLESTREAMVTBL;

struct _OLESTREAM {
    LPOLESTREAMVTBL lpstbl;
};

struct _OLESTREAMVTBL {
    DWORD (*Get)(LPOLESTREAM, void *, DWORD);
    DWORD (*Put)(LPOLESTREAM, void *, DWORD);
};

typedef struct _OLESTREAM OLESTREAM;

#define OLEIVERB_SHOW -1

#define OLEIVERB_UIACTIVATE -4

#define WIN32 100

#define E_DRAW 2147746112

#define OLEIVERB_HIDE -3

#define EMBDHLP_CREATENOW 0

#define OLEIVERB_INPLACEACTIVATE -5

#define EMBDHLP_INPROC_SERVER 1

#define OLEIVERB_PRIMARY 0

#define EMBDHLP_DELAYCREATE 65536

#define EMBDHLP_INPROC_HANDLER 0

#define OLECREATE_LEAVERUNNING 1

#define OLEIVERB_OPEN -2

#define DATA_E_FORMATETC 2147745892

#define OLEIVERB_DISCARDUNDOSTATE -6

#define _PUNCT 16

#define _LOWER 2

#define _UPPER 1

#define _ALPHA 259

#define _BLANK 64

#define _SPACE 8

#define WEOF 65535

#define _LEADBYTE 32768

#define _DIGIT 4

#define _HEX 128

#define _CONTROL 32

typedef struct _SCARD_IO_REQUEST _SCARD_IO_REQUEST, *P_SCARD_IO_REQUEST;

struct _SCARD_IO_REQUEST {
    DWORD dwProtocol;
    DWORD cbPciLength;
};

typedef struct SCARD_T0_REQUEST SCARD_T0_REQUEST, *PSCARD_T0_REQUEST;

typedef struct _SCARD_IO_REQUEST SCARD_IO_REQUEST;

typedef union _union_1369 _union_1369, *P_union_1369;

typedef struct SCARD_T0_COMMAND SCARD_T0_COMMAND, *PSCARD_T0_COMMAND;

struct SCARD_T0_COMMAND {
    BYTE bCla;
    BYTE bIns;
    BYTE bP1;
    BYTE bP2;
    BYTE bP3;
};

union _union_1369 {
    struct SCARD_T0_COMMAND CmdBytes;
    BYTE rgbHeader[5];
};

struct SCARD_T0_REQUEST {
    SCARD_IO_REQUEST ioRequest;
    BYTE bSw1;
    BYTE bSw2;
    union _union_1369 field3_0xa;
};

typedef struct SCARD_T1_REQUEST SCARD_T1_REQUEST, *PSCARD_T1_REQUEST;

struct SCARD_T1_REQUEST {
    SCARD_IO_REQUEST ioRequest;
};

typedef WORD UWORD;

typedef struct SCARD_T0_COMMAND *LPSCARD_T0_COMMAND;

typedef SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;

typedef struct _SCARD_IO_REQUEST *LPSCARD_IO_REQUEST;

typedef struct _SCARD_IO_REQUEST *PSCARD_IO_REQUEST;

typedef struct SCARD_T1_REQUEST *LPSCARD_T1_REQUEST;


/* WARNING! conflicting data type names: /deps/winsmcrd.h/UCHAR - /deps/WinDef.h/UCHAR */

typedef struct SCARD_T0_REQUEST *LPSCARD_T0_REQUEST;

#define SCARD_ATTR_ESC_AUTHREQUEST 499717

#define SCARD_ATTR_CURRENT_CLK 524802

#define SCARD_CLASS_MECHANICAL 6

#define SCARD_READER_TYPE_SERIAL 1

#define SCARD_CLASS_SYSTEM 32767

#define SCARD_ATTR_CHANNEL_ID 131344

#define SCARD_WARM_RESET 2

#define SCARD_ATR_LENGTH 33

#define SCARD_T1_MAX_IFS 254

#define SCARD_PROTOCOL_T1 2

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_W 2147418117

#define SCARD_PROTOCOL_T0 1

#define IOCTL_SMARTCARD_IS_PRESENT 3211304

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_A 2147418115

#define SCARD_PERF_TRANSMISSION_TIME 2147352579

#define SCARD_CLASS_ICC_STATE 9

#define IOCTL_SMARTCARD_SET_PROTOCOL 3211312

#define IOCTL_SMARTCARD_GET_LAST_ERROR 3211324

#define SCARD_CLASS_COMMUNICATIONS 2

#define SCARD_READER_TYPE_PARALELL 2

#define IOCTL_SMARTCARD_SET_ATTRIBUTE 3211276

#define SCARD_SPECIFIC 6

#define SCARD_PRESENT 2

#define SCARD_ATTR_ICC_TYPE_PER_ATR 590596

#define SCARD_ATTR_CURRENT_PROTOCOL_TYPE 524801

#define SCARD_READER_TYPE_VENDOR 240

#define SCARD_ATTR_VENDOR_IFD_VERSION 65794

#define SCARD_PERF_BYTES_TRANSMITTED 2147352578

#define SCARD_PERF_NUM_TRANSMISSIONS 2147352577

#define SCARD_PROTOCOL_Tx 3

#define SCARD_ATTR_ICC_INTERFACE_STATUS 590593

#define SCARD_ATTR_DEFAULT_DATA_RATE 196899

#define SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE 328000

#define IOCTL_SMARTCARD_GET_STATE 3211320

#define SCARD_ATTR_MAX_CLK 196898

#define SCARD_ATTR_PROTOCOL_TYPES 196896

#define SCARD_ATTR_USER_AUTH_INPUT_DEVICE 328002

#define SCARD_SWALLOWED 3

#define SCARD_ATTR_ATR_STRING 590595

#define SCARD_CLASS_PROTOCOL 3

#define SCARD_PROTOCOL_UNDEFINED 0

#define SCARD_COLD_RESET 1

#define IOCTL_SMARTCARD_POWER 3211268

#define IOCTL_SMARTCARD_GET_PERF_CNTR 3211328

#define SCARD_POWER_DOWN 0

#define SCARD_ATTR_VENDOR_NAME 65792

#define SCARD_POWERED 4

#define SCARD_ATTR_CURRENT_CWT 524810

#define SCARD_CLASS_IFD_PROTOCOL 8

#define SCARD_UNKNOWN 0

#define SCARD_ATTR_CURRENT_EBC_ENCODING 524811

#define SCARD_ATTR_CURRENT_IFSC 524807

#define SCARD_ATTR_MAX_DATA_RATE 196900

#define SCARD_ATTR_CURRENT_IFSD 524808

#define SCARD_ATTR_ICC_PRESENCE 590592

#define SCARD_ATTR_CURRENT_D 524804

#define SCARD_ATTR_CURRENT_F 524803

#define SCARD_ATTR_CURRENT_N 524805

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME 2147418115

#define SCARD_READER_EJECTS 2

#define IOCTL_SMARTCARD_GET_ATTRIBUTE 3211272

#define SCARD_ATTR_CURRENT_BWT 524809

#define SCARD_T0_HEADER_LENGTH 7

#define SCARD_CLASS_VENDOR_INFO 1

#define IOCTL_SMARTCARD_CONFISCATE 3211280

#define SCARD_ATTR_DEVICE_IN_USE 2147418114

#define SCARD_T0_CMD_LENGTH 5

#define SCARD_READER_CONFISCATES 4

#define SCARD_CLASS_PERF 32766

#define SCARD_READER_TYPE_SCSI 8

#define SCARD_PROTOCOL_OPTIMAL 0

#define IOCTL_SMARTCARD_EJECT 3211288

#define IOCTL_SMARTCARD_SWALLOW 3211292

#define SCARD_READER_TYPE_PCMCIA 64

#define SCARD_ATTR_VENDOR_IFD_SERIAL_NO 65795

#define MAXIMUM_ATTR_STRING_LENGTH 32

#define SCARD_ATTR_MAX_IFSD 196901

#define SCARD_ATTR_CURRENT_W 524806

#define IOCTL_SMARTCARD_TRANSMIT 3211284

#define SCARD_ATTR_MAXINPUT 499719

#define SCARD_CLASS_POWER_MGMT 4

#define MAXIMUM_SMARTCARD_READERS 10

#define SCARD_PROTOCOL_DEFAULT 2147483648

#define SCARD_CLASS_SECURITY 5

#define SCARD_ATTR_SUPRESS_T1_IFS_REQUEST 2147418119

#define SCARD_READER_TYPE_USB 32

#define SCARD_READER_SWALLOWS 1

#define SCARD_ATTR_ESC_CANCEL 499715

#define SCARD_CLASS_VENDOR_DEFINED 7

#define SCARD_ATTR_DEVICE_SYSTEM_NAME 2147418116

#define SCARD_ATTR_ESC_RESET 499712

#define SCARD_PROTOCOL_RAW 65536

#define SCARD_T1_EPILOGUE_LENGTH 2

#define SCARD_ATTR_EXTENDED_BWT 524812

#define IOCTL_SMARTCARD_IS_ABSENT 3211308

#define SCARD_T1_PROLOGUE_LENGTH 3

#define SCARD_READER_TYPE_IDE 16

#define SCARD_ATTR_DEFAULT_CLK 196897

#define SCARD_ATTR_DEVICE_UNIT 2147418113

#define SCARD_NEGOTIABLE 5

#define SCARD_ATTR_VENDOR_IFD_TYPE 65793

#define SCARD_READER_TYPE_KEYBOARD 4

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_W 2147418118

#define SCARD_ABSENT 1

#define SCARD_ATTR_CURRENT_IO_STATE 590594

#define SCARD_ATTR_CHARACTERISTICS 393552

#define SCARD_ATTR_POWER_MGMT_SUPPORT 262449

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_A 2147418116

typedef double *png_doublep;

typedef long png_int_32;

typedef char ***png_charppp;

typedef char *png_charp;

typedef short png_int_16;

typedef ulong png_uint_32;

typedef png_uint_32 **png_uint_32pp;

typedef double **png_doublepp;

typedef char charf;

typedef charf *png_zcharp;

typedef struct z_stream_s z_stream_s, *Pz_stream_s;

typedef struct z_stream_s z_stream;

typedef z_stream *png_zstreamp;

typedef uchar Byte;

typedef Byte Bytef;

typedef uint uInt;

typedef ulong uLong;

typedef struct internal_state internal_state, *Pinternal_state;

typedef void *voidpf;

typedef voidpf (*alloc_func)(voidpf, uInt, uInt);

typedef void (*free_func)(voidpf, voidpf);

struct internal_state {
    int dummy;
};

struct z_stream_s {
    Bytef *next_in;
    uInt avail_in;
    uLong total_in;
    Bytef *next_out;
    uInt avail_out;
    uLong total_out;
    char *msg;
    struct internal_state *state;
    alloc_func zalloc;
    free_func zfree;
    voidpf opaque;
    int data_type;
    uLong adler;
    uLong reserved;
};

typedef uchar png_byte;

typedef ushort png_uint_16;

typedef png_uint_16 *png_uint_16p;

typedef char *png_const_charp;

typedef png_byte *png_bytep;

typedef png_int_32 **png_int_32pp;

typedef char **png_charpp;

typedef png_uint_16 **png_uint_16pp;

typedef size_t png_size_t;

typedef png_int_16 *png_int_16p;

typedef void *png_voidp;

typedef char **png_const_charpp;

typedef png_uint_32 *png_uint_32p;

typedef png_int_32 *png_int_32p;

typedef png_int_16 **png_int_16pp;

typedef png_byte **png_bytepp;

typedef charf **png_zcharpp;

#define PNG_ZBUF_SIZE 8192

typedef long time_t;

typedef struct _DSCBCAPS _DSCBCAPS, *P_DSCBCAPS;

typedef struct _DSCBCAPS DSCBCAPS;

typedef DSCBCAPS *LPCDSCBCAPS;

struct _DSCBCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
};

typedef struct _DSFXFlanger _DSFXFlanger, *P_DSFXFlanger;

struct _DSFXFlanger {
    FLOAT fWetDryMix;
    FLOAT fDepth;
    FLOAT fFeedback;
    FLOAT fFrequency;
    LONG lWaveform;
    FLOAT fDelay;
    LONG lPhase;
};

typedef struct IDirectSoundBuffer8Vtbl IDirectSoundBuffer8Vtbl, *PIDirectSoundBuffer8Vtbl;

typedef struct IDirectSoundBuffer8 IDirectSoundBuffer8, *PIDirectSoundBuffer8;

typedef struct _DSEFFECTDESC _DSEFFECTDESC, *P_DSEFFECTDESC;

typedef struct _DSEFFECTDESC *LPDSEFFECTDESC;

struct IDirectSoundBuffer8 {
    struct IDirectSoundBuffer8Vtbl *lpVtbl;
};

struct IDirectSoundBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundBuffer8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundBuffer8 *);
    ULONG (*Release)(struct IDirectSoundBuffer8 *);
    HRESULT (*GetCaps)(struct IDirectSoundBuffer8 *, LPDSBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundBuffer8 *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundBuffer8 *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetVolume)(struct IDirectSoundBuffer8 *, LPLONG);
    HRESULT (*GetPan)(struct IDirectSoundBuffer8 *, LPLONG);
    HRESULT (*GetFrequency)(struct IDirectSoundBuffer8 *, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundBuffer8 *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundBuffer8 *, LPDIRECTSOUND, LPCDSBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundBuffer8 *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Play)(struct IDirectSoundBuffer8 *, DWORD, DWORD, DWORD);
    HRESULT (*SetCurrentPosition)(struct IDirectSoundBuffer8 *, DWORD);
    HRESULT (*SetFormat)(struct IDirectSoundBuffer8 *, LPCWAVEFORMATEX);
    HRESULT (*SetVolume)(struct IDirectSoundBuffer8 *, LONG);
    HRESULT (*SetPan)(struct IDirectSoundBuffer8 *, LONG);
    HRESULT (*SetFrequency)(struct IDirectSoundBuffer8 *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundBuffer8 *);
    HRESULT (*Unlock)(struct IDirectSoundBuffer8 *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*Restore)(struct IDirectSoundBuffer8 *);
    HRESULT (*SetFX)(struct IDirectSoundBuffer8 *, DWORD, LPDSEFFECTDESC, LPDWORD);
    HRESULT (*AcquireResources)(struct IDirectSoundBuffer8 *, DWORD, DWORD, LPDWORD);
    HRESULT (*GetObjectInPath)(struct IDirectSoundBuffer8 *, GUID *, DWORD, GUID *, LPVOID *);
};

struct _DSEFFECTDESC {
    DWORD dwSize;
    DWORD dwFlags;
    GUID guidDSFXClass;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct IDirectSoundNotify IDirectSoundNotify, *PIDirectSoundNotify;

typedef struct IDirectSoundNotify *LPDIRECTSOUNDNOTIFY;

typedef struct IDirectSoundNotifyVtbl IDirectSoundNotifyVtbl, *PIDirectSoundNotifyVtbl;

typedef struct _DSBPOSITIONNOTIFY _DSBPOSITIONNOTIFY, *P_DSBPOSITIONNOTIFY;

typedef struct _DSBPOSITIONNOTIFY DSBPOSITIONNOTIFY;

typedef DSBPOSITIONNOTIFY *LPCDSBPOSITIONNOTIFY;

struct _DSBPOSITIONNOTIFY {
    DWORD dwOffset;
    HANDLE hEventNotify;
};

struct IDirectSoundNotify {
    struct IDirectSoundNotifyVtbl *lpVtbl;
};

struct IDirectSoundNotifyVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundNotify *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundNotify *);
    ULONG (*Release)(struct IDirectSoundNotify *);
    HRESULT (*SetNotificationPositions)(struct IDirectSoundNotify *, DWORD, LPCDSBPOSITIONNOTIFY);
};

typedef struct _DSFXEcho _DSFXEcho, *P_DSFXEcho;

typedef struct _DSFXEcho DSFXEcho;

typedef DSFXEcho *LPCDSFXEcho;

struct _DSFXEcho {
    FLOAT fWetDryMix;
    FLOAT fFeedback;
    FLOAT fLeftDelay;
    FLOAT fRightDelay;
    LONG lPanDelay;
};

typedef LPDIRECTSOUNDNOTIFY *LPLPDIRECTSOUNDNOTIFY;

typedef struct IDirectSoundCaptureBuffer IDirectSoundCaptureBuffer, *PIDirectSoundCaptureBuffer;

typedef struct IDirectSoundCaptureBuffer *LPDIRECTSOUNDCAPTUREBUFFER;

typedef LPDIRECTSOUNDCAPTUREBUFFER *LPLPDIRECTSOUNDCAPTUREBUFFER;

typedef struct IDirectSoundCaptureBufferVtbl IDirectSoundCaptureBufferVtbl, *PIDirectSoundCaptureBufferVtbl;

typedef struct _DSCBCAPS *LPDSCBCAPS;

typedef struct IDirectSoundCapture IDirectSoundCapture, *PIDirectSoundCapture;

typedef struct IDirectSoundCapture *LPDIRECTSOUNDCAPTURE;

typedef struct _DSCBUFFERDESC _DSCBUFFERDESC, *P_DSCBUFFERDESC;

typedef struct _DSCBUFFERDESC DSCBUFFERDESC;

typedef DSCBUFFERDESC *LPCDSCBUFFERDESC;

typedef struct IDirectSoundCaptureVtbl IDirectSoundCaptureVtbl, *PIDirectSoundCaptureVtbl;

typedef struct _DSCCAPS _DSCCAPS, *P_DSCCAPS;

typedef struct _DSCCAPS *LPDSCCAPS;

typedef struct _DSCEFFECTDESC _DSCEFFECTDESC, *P_DSCEFFECTDESC;

typedef struct _DSCEFFECTDESC *LPDSCEFFECTDESC;

struct IDirectSoundCaptureBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureBuffer *);
    ULONG (*Release)(struct IDirectSoundCaptureBuffer *);
    HRESULT (*GetCaps)(struct IDirectSoundCaptureBuffer *, LPDSCBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundCaptureBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundCaptureBuffer *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundCaptureBuffer *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundCaptureBuffer *, LPDIRECTSOUNDCAPTURE, LPCDSCBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundCaptureBuffer *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Start)(struct IDirectSoundCaptureBuffer *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundCaptureBuffer *);
    HRESULT (*Unlock)(struct IDirectSoundCaptureBuffer *, LPVOID, DWORD, LPVOID, DWORD);
};

struct _DSCCAPS {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwFormats;
    DWORD dwChannels;
};

struct IDirectSoundCaptureVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCapture *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCapture *);
    ULONG (*Release)(struct IDirectSoundCapture *);
    HRESULT (*CreateCaptureBuffer)(struct IDirectSoundCapture *, LPCDSCBUFFERDESC, LPDIRECTSOUNDCAPTUREBUFFER *, LPUNKNOWN);
    HRESULT (*GetCaps)(struct IDirectSoundCapture *, LPDSCCAPS);
    HRESULT (*Initialize)(struct IDirectSoundCapture *, LPCGUID);
};

struct IDirectSoundCaptureBuffer {
    struct IDirectSoundCaptureBufferVtbl *lpVtbl;
};

struct IDirectSoundCapture {
    struct IDirectSoundCaptureVtbl *lpVtbl;
};

struct _DSCEFFECTDESC {
    DWORD dwSize;
    DWORD dwFlags;
    GUID guidDSCFXClass;
    GUID guidDSCFXInstance;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct _DSCBUFFERDESC {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
    DWORD dwFXCount;
    LPDSCEFFECTDESC lpDSCFXDesc;
};

typedef struct _DSFXI3DL2Reverb _DSFXI3DL2Reverb, *P_DSFXI3DL2Reverb;

struct _DSFXI3DL2Reverb {
    LONG lRoom;
    LONG lRoomHF;
    FLOAT flRoomRolloffFactor;
    FLOAT flDecayTime;
    FLOAT flDecayHFRatio;
    LONG lReflections;
    FLOAT flReflectionsDelay;
    LONG lReverb;
    FLOAT flReverbDelay;
    FLOAT flDiffusion;
    FLOAT flDensity;
    FLOAT flHFReference;
};

typedef struct IDirectSound3DBuffer IDirectSound3DBuffer, *PIDirectSound3DBuffer;

typedef struct IDirectSound3DBuffer *LPDIRECTSOUND3DBUFFER8;

typedef struct IDirectSound3DBufferVtbl IDirectSound3DBufferVtbl, *PIDirectSound3DBufferVtbl;

typedef struct _DS3DBUFFER _DS3DBUFFER, *P_DS3DBUFFER;

typedef struct _DS3DBUFFER *LPDS3DBUFFER;


/* WARNING! conflicting data type names: /deps/dsound.h/D3DVECTOR - /deps/d3d8types.h/D3DVECTOR */

typedef float D3DVALUE;

typedef struct _DS3DBUFFER DS3DBUFFER;

typedef DS3DBUFFER *LPCDS3DBUFFER;

struct _DS3DBUFFER {
    DWORD dwSize;
    D3DVECTOR vPosition;
    D3DVECTOR vVelocity;
    DWORD dwInsideConeAngle;
    DWORD dwOutsideConeAngle;
    D3DVECTOR vConeOrientation;
    LONG lConeOutsideVolume;
    D3DVALUE flMinDistance;
    D3DVALUE flMaxDistance;
    DWORD dwMode;
};

struct IDirectSound3DBufferVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound3DBuffer *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound3DBuffer *);
    ULONG (*Release)(struct IDirectSound3DBuffer *);
    HRESULT (*GetAllParameters)(struct IDirectSound3DBuffer *, LPDS3DBUFFER);
    HRESULT (*GetConeAngles)(struct IDirectSound3DBuffer *, LPDWORD, LPDWORD);
    HRESULT (*GetConeOrientation)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*GetConeOutsideVolume)(struct IDirectSound3DBuffer *, LPLONG);
    HRESULT (*GetMaxDistance)(struct IDirectSound3DBuffer *, D3DVALUE *);
    HRESULT (*GetMinDistance)(struct IDirectSound3DBuffer *, D3DVALUE *);
    HRESULT (*GetMode)(struct IDirectSound3DBuffer *, LPDWORD);
    HRESULT (*GetPosition)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*GetVelocity)(struct IDirectSound3DBuffer *, D3DVECTOR *);
    HRESULT (*SetAllParameters)(struct IDirectSound3DBuffer *, LPCDS3DBUFFER, DWORD);
    HRESULT (*SetConeAngles)(struct IDirectSound3DBuffer *, DWORD, DWORD, DWORD);
    HRESULT (*SetConeOrientation)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetConeOutsideVolume)(struct IDirectSound3DBuffer *, LONG, DWORD);
    HRESULT (*SetMaxDistance)(struct IDirectSound3DBuffer *, D3DVALUE, DWORD);
    HRESULT (*SetMinDistance)(struct IDirectSound3DBuffer *, D3DVALUE, DWORD);
    HRESULT (*SetMode)(struct IDirectSound3DBuffer *, DWORD, DWORD);
    HRESULT (*SetPosition)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetVelocity)(struct IDirectSound3DBuffer *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
};

struct IDirectSound3DBuffer {
    struct IDirectSound3DBufferVtbl *lpVtbl;
};

typedef struct IDirectSoundFXEcho IDirectSoundFXEcho, *PIDirectSoundFXEcho;

typedef struct IDirectSoundFXEcho *LPDIRECTSOUNDFXECHO;

typedef struct IDirectSoundFXEchoVtbl IDirectSoundFXEchoVtbl, *PIDirectSoundFXEchoVtbl;

typedef struct _DSFXEcho *LPDSFXEcho;

struct IDirectSoundFXEcho {
    struct IDirectSoundFXEchoVtbl *lpVtbl;
};

struct IDirectSoundFXEchoVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXEcho *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXEcho *);
    ULONG (*Release)(struct IDirectSoundFXEcho *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXEcho *, LPCDSFXEcho);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXEcho *, LPDSFXEcho);
};

typedef struct _DSFXCompressor _DSFXCompressor, *P_DSFXCompressor;

typedef struct _DSFXCompressor DSFXCompressor;

struct _DSFXCompressor {
    FLOAT fGain;
    FLOAT fAttack;
    FLOAT fRelease;
    FLOAT fThreshold;
    FLOAT fRatio;
    FLOAT fPredelay;
};

typedef struct _DSCFXAec _DSCFXAec, *P_DSCFXAec;

typedef struct _DSCFXAec DSCFXAec;

typedef DSCFXAec *LPCDSCFXAec;

struct _DSCFXAec {
    BOOL fEnable;
    BOOL fReset;
};

typedef struct _DSFXWavesReverb _DSFXWavesReverb, *P_DSFXWavesReverb;

typedef struct _DSFXWavesReverb DSFXWavesReverb;

typedef DSFXWavesReverb *LPCDSFXWavesReverb;

struct _DSFXWavesReverb {
    FLOAT fInGain;
    FLOAT fReverbMix;
    FLOAT fReverbTime;
    FLOAT fHighFreqRTRatio;
};

typedef struct IKsPropertySet IKsPropertySet, *PIKsPropertySet;

typedef struct IKsPropertySetVtbl IKsPropertySetVtbl, *PIKsPropertySetVtbl;

typedef ULONG *PULONG;

struct IKsPropertySetVtbl {
    HRESULT (*QueryInterface)(struct IKsPropertySet *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IKsPropertySet *);
    ULONG (*Release)(struct IKsPropertySet *);
    HRESULT (*Get)(struct IKsPropertySet *, GUID *, ULONG, LPVOID, ULONG, LPVOID, ULONG, PULONG);
    HRESULT (*Set)(struct IKsPropertySet *, GUID *, ULONG, LPVOID, ULONG, LPVOID, ULONG);
    HRESULT (*QuerySupport)(struct IKsPropertySet *, GUID *, ULONG, PULONG);
};

struct IKsPropertySet {
    struct IKsPropertySetVtbl *lpVtbl;
};

typedef struct _DSCEFFECTDESC DSCEFFECTDESC;

typedef struct _DSCAPS DSCAPS;

typedef DSCAPS *LPCDSCAPS;

typedef struct IDirectSoundFXChorus IDirectSoundFXChorus, *PIDirectSoundFXChorus;

typedef struct IDirectSoundFXChorusVtbl IDirectSoundFXChorusVtbl, *PIDirectSoundFXChorusVtbl;

typedef struct _DSFXChorus _DSFXChorus, *P_DSFXChorus;

typedef struct _DSFXChorus DSFXChorus;

typedef DSFXChorus *LPCDSFXChorus;

typedef struct _DSFXChorus *LPDSFXChorus;

struct IDirectSoundFXChorus {
    struct IDirectSoundFXChorusVtbl *lpVtbl;
};

struct _DSFXChorus {
    FLOAT fWetDryMix;
    FLOAT fDepth;
    FLOAT fFeedback;
    FLOAT fFrequency;
    LONG lWaveform;
    FLOAT fDelay;
    LONG lPhase;
};

struct IDirectSoundFXChorusVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXChorus *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXChorus *);
    ULONG (*Release)(struct IDirectSoundFXChorus *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXChorus *, LPCDSFXChorus);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXChorus *, LPDSFXChorus);
};

typedef struct _DSFXGargle _DSFXGargle, *P_DSFXGargle;

typedef struct _DSFXGargle DSFXGargle;

struct _DSFXGargle {
    DWORD dwRateHz;
    DWORD dwWaveShape;
};

typedef struct IDirectSoundFXFlangerVtbl IDirectSoundFXFlangerVtbl, *PIDirectSoundFXFlangerVtbl;

typedef struct IDirectSoundFXFlanger IDirectSoundFXFlanger, *PIDirectSoundFXFlanger;

typedef struct _DSFXFlanger DSFXFlanger;

typedef DSFXFlanger *LPCDSFXFlanger;

typedef struct _DSFXFlanger *LPDSFXFlanger;

struct IDirectSoundFXFlangerVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXFlanger *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXFlanger *);
    ULONG (*Release)(struct IDirectSoundFXFlanger *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXFlanger *, LPCDSFXFlanger);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXFlanger *, LPDSFXFlanger);
};

struct IDirectSoundFXFlanger {
    struct IDirectSoundFXFlangerVtbl *lpVtbl;
};

typedef struct _DSBCAPS DSBCAPS;

typedef struct IDirectSound3DListener IDirectSound3DListener, *PIDirectSound3DListener;

typedef struct IDirectSound3DListener *LPDIRECTSOUND3DLISTENER;

typedef struct IDirectSound3DListenerVtbl IDirectSound3DListenerVtbl, *PIDirectSound3DListenerVtbl;

typedef struct _DS3DLISTENER _DS3DLISTENER, *P_DS3DLISTENER;

typedef struct _DS3DLISTENER *LPDS3DLISTENER;

typedef struct _DS3DLISTENER DS3DLISTENER;

typedef DS3DLISTENER *LPCDS3DLISTENER;

struct IDirectSound3DListenerVtbl {
    HRESULT (*QueryInterface)(struct IDirectSound3DListener *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSound3DListener *);
    ULONG (*Release)(struct IDirectSound3DListener *);
    HRESULT (*GetAllParameters)(struct IDirectSound3DListener *, LPDS3DLISTENER);
    HRESULT (*GetDistanceFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetDopplerFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetOrientation)(struct IDirectSound3DListener *, D3DVECTOR *, D3DVECTOR *);
    HRESULT (*GetPosition)(struct IDirectSound3DListener *, D3DVECTOR *);
    HRESULT (*GetRolloffFactor)(struct IDirectSound3DListener *, D3DVALUE *);
    HRESULT (*GetVelocity)(struct IDirectSound3DListener *, D3DVECTOR *);
    HRESULT (*SetAllParameters)(struct IDirectSound3DListener *, LPCDS3DLISTENER, DWORD);
    HRESULT (*SetDistanceFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetDopplerFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetOrientation)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetPosition)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*SetRolloffFactor)(struct IDirectSound3DListener *, D3DVALUE, DWORD);
    HRESULT (*SetVelocity)(struct IDirectSound3DListener *, D3DVALUE, D3DVALUE, D3DVALUE, DWORD);
    HRESULT (*CommitDeferredSettings)(struct IDirectSound3DListener *);
};

struct IDirectSound3DListener {
    struct IDirectSound3DListenerVtbl *lpVtbl;
};

struct _DS3DLISTENER {
    DWORD dwSize;
    D3DVECTOR vPosition;
    D3DVECTOR vVelocity;
    D3DVECTOR vOrientFront;
    D3DVECTOR vOrientTop;
    D3DVALUE flDistanceFactor;
    D3DVALUE flRolloffFactor;
    D3DVALUE flDopplerFactor;
};

typedef struct IDirectSoundFXParamEqVtbl IDirectSoundFXParamEqVtbl, *PIDirectSoundFXParamEqVtbl;

typedef struct IDirectSoundFXParamEq IDirectSoundFXParamEq, *PIDirectSoundFXParamEq;

typedef struct _DSFXParamEq _DSFXParamEq, *P_DSFXParamEq;

typedef struct _DSFXParamEq DSFXParamEq;

typedef DSFXParamEq *LPCDSFXParamEq;

typedef struct _DSFXParamEq *LPDSFXParamEq;

struct IDirectSoundFXParamEq {
    struct IDirectSoundFXParamEqVtbl *lpVtbl;
};

struct IDirectSoundFXParamEqVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXParamEq *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXParamEq *);
    ULONG (*Release)(struct IDirectSoundFXParamEq *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXParamEq *, LPCDSFXParamEq);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXParamEq *, LPDSFXParamEq);
};

struct _DSFXParamEq {
    FLOAT fCenter;
    FLOAT fBandwidth;
    FLOAT fGain;
};

typedef struct IDirectSoundNotify *LPDIRECTSOUNDNOTIFY8;

typedef struct IDirectSoundCaptureFXNoiseSuppress IDirectSoundCaptureFXNoiseSuppress, *PIDirectSoundCaptureFXNoiseSuppress;

typedef struct IDirectSoundCaptureFXNoiseSuppressVtbl IDirectSoundCaptureFXNoiseSuppressVtbl, *PIDirectSoundCaptureFXNoiseSuppressVtbl;

typedef struct _DSCFXNoiseSuppress _DSCFXNoiseSuppress, *P_DSCFXNoiseSuppress;

typedef struct _DSCFXNoiseSuppress DSCFXNoiseSuppress;

typedef DSCFXNoiseSuppress *LPCDSCFXNoiseSuppress;

typedef struct _DSCFXNoiseSuppress *LPDSCFXNoiseSuppress;

struct IDirectSoundCaptureFXNoiseSuppress {
    struct IDirectSoundCaptureFXNoiseSuppressVtbl *lpVtbl;
};

struct IDirectSoundCaptureFXNoiseSuppressVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureFXNoiseSuppress *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureFXNoiseSuppress *);
    ULONG (*Release)(struct IDirectSoundCaptureFXNoiseSuppress *);
    HRESULT (*SetAllParameters)(struct IDirectSoundCaptureFXNoiseSuppress *, LPCDSCFXNoiseSuppress);
    HRESULT (*GetAllParameters)(struct IDirectSoundCaptureFXNoiseSuppress *, LPDSCFXNoiseSuppress);
};

struct _DSCFXNoiseSuppress {
    BOOL fEnable;
    BOOL fReset;
};

typedef struct _DSFXWavesReverb *LPDSFXWavesReverb;

typedef struct IDirectSoundFXGargleVtbl IDirectSoundFXGargleVtbl, *PIDirectSoundFXGargleVtbl;

typedef struct IDirectSoundFXGargle IDirectSoundFXGargle, *PIDirectSoundFXGargle;

typedef DSFXGargle *LPCDSFXGargle;

typedef struct _DSFXGargle *LPDSFXGargle;

struct IDirectSoundFXGargleVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXGargle *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXGargle *);
    ULONG (*Release)(struct IDirectSoundFXGargle *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXGargle *, LPCDSFXGargle);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXGargle *, LPDSFXGargle);
};

struct IDirectSoundFXGargle {
    struct IDirectSoundFXGargleVtbl *lpVtbl;
};

typedef D3DVECTOR *LPD3DVECTOR;

typedef struct IDirectSoundFXDistortion IDirectSoundFXDistortion, *PIDirectSoundFXDistortion;

typedef struct IDirectSoundFXDistortionVtbl IDirectSoundFXDistortionVtbl, *PIDirectSoundFXDistortionVtbl;

typedef struct _DSFXDistortion _DSFXDistortion, *P_DSFXDistortion;

typedef struct _DSFXDistortion DSFXDistortion;

typedef DSFXDistortion *LPCDSFXDistortion;

typedef struct _DSFXDistortion *LPDSFXDistortion;

struct IDirectSoundFXDistortion {
    struct IDirectSoundFXDistortionVtbl *lpVtbl;
};

struct _DSFXDistortion {
    FLOAT fGain;
    FLOAT fEdge;
    FLOAT fPostEQCenterFrequency;
    FLOAT fPostEQBandwidth;
    FLOAT fPreLowpassCutoff;
};

struct IDirectSoundFXDistortionVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXDistortion *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXDistortion *);
    ULONG (*Release)(struct IDirectSoundFXDistortion *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXDistortion *, LPCDSFXDistortion);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXDistortion *, LPDSFXDistortion);
};

typedef DWORD *LPD3DCOLOR;

typedef struct _DSFXI3DL2Reverb DSFXI3DL2Reverb;

typedef struct IDirectSoundFXEcho *LPDIRECTSOUNDFXECHO8;

typedef struct IDirectSoundCapture *LPDIRECTSOUNDCAPTURE8;

typedef LPDIRECTSOUNDCAPTURE8 *LPLPDIRECTSOUNDCAPTURE8;

typedef struct IDirectSoundFXGargle *LPDIRECTSOUNDFXGARGLE8;

typedef LPDIRECTSOUND3DLISTENER *LPLPDIRECTSOUND3DLISTENER;

typedef struct IDirectSoundCaptureBuffer8 IDirectSoundCaptureBuffer8, *PIDirectSoundCaptureBuffer8;

typedef struct IDirectSoundCaptureBuffer8 *LPDIRECTSOUNDCAPTUREBUFFER8;

typedef struct IDirectSoundCaptureBuffer8Vtbl IDirectSoundCaptureBuffer8Vtbl, *PIDirectSoundCaptureBuffer8Vtbl;

struct IDirectSoundCaptureBuffer8Vtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureBuffer8 *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureBuffer8 *);
    ULONG (*Release)(struct IDirectSoundCaptureBuffer8 *);
    HRESULT (*GetCaps)(struct IDirectSoundCaptureBuffer8 *, LPDSCBCAPS);
    HRESULT (*GetCurrentPosition)(struct IDirectSoundCaptureBuffer8 *, LPDWORD, LPDWORD);
    HRESULT (*GetFormat)(struct IDirectSoundCaptureBuffer8 *, LPWAVEFORMATEX, DWORD, LPDWORD);
    HRESULT (*GetStatus)(struct IDirectSoundCaptureBuffer8 *, LPDWORD);
    HRESULT (*Initialize)(struct IDirectSoundCaptureBuffer8 *, LPDIRECTSOUNDCAPTURE, LPCDSCBUFFERDESC);
    HRESULT (*Lock)(struct IDirectSoundCaptureBuffer8 *, DWORD, DWORD, LPVOID *, LPDWORD, LPVOID *, LPDWORD, DWORD);
    HRESULT (*Start)(struct IDirectSoundCaptureBuffer8 *, DWORD);
    HRESULT (*Stop)(struct IDirectSoundCaptureBuffer8 *);
    HRESULT (*Unlock)(struct IDirectSoundCaptureBuffer8 *, LPVOID, DWORD, LPVOID, DWORD);
    HRESULT (*GetObjectInPath)(struct IDirectSoundCaptureBuffer8 *, GUID *, DWORD, GUID *, LPVOID *);
    HRESULT (*GetFXStatus)(DWORD, LPDWORD);
};

struct IDirectSoundCaptureBuffer8 {
    struct IDirectSoundCaptureBuffer8Vtbl *lpVtbl;
};

typedef DSFXI3DL2Reverb *LPCDSFXI3DL2Reverb;

typedef struct IDirectSoundFullDuplex IDirectSoundFullDuplex, *PIDirectSoundFullDuplex;

typedef struct IDirectSoundFullDuplex *LPDIRECTSOUNDFULLDUPLEX;

typedef struct IDirectSoundFullDuplexVtbl IDirectSoundFullDuplexVtbl, *PIDirectSoundFullDuplexVtbl;

typedef LPDIRECTSOUNDCAPTUREBUFFER8 *LPLPDIRECTSOUNDCAPTUREBUFFER8;

typedef struct IDirectSoundBuffer8 *LPDIRECTSOUNDBUFFER8;

typedef LPDIRECTSOUNDBUFFER8 *LPLPDIRECTSOUNDBUFFER8;

struct IDirectSoundFullDuplexVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFullDuplex *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFullDuplex *);
    ULONG (*Release)(struct IDirectSoundFullDuplex *);
    HRESULT (*Initialize)(struct IDirectSoundFullDuplex *, LPCGUID, LPCGUID, LPCDSCBUFFERDESC, LPCDSBUFFERDESC, HWND, DWORD, LPLPDIRECTSOUNDCAPTUREBUFFER8, LPLPDIRECTSOUNDBUFFER8);
};

struct IDirectSoundFullDuplex {
    struct IDirectSoundFullDuplexVtbl *lpVtbl;
};

typedef struct _DSBUFFERDESC1 _DSBUFFERDESC1, *P_DSBUFFERDESC1;

typedef struct _DSBUFFERDESC1 DSBUFFERDESC1;

struct _DSBUFFERDESC1 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
};

typedef struct _DSCCAPS DSCCAPS;

typedef struct IDirectSoundFXI3DL2Reverb IDirectSoundFXI3DL2Reverb, *PIDirectSoundFXI3DL2Reverb;

typedef struct IDirectSoundFXI3DL2ReverbVtbl IDirectSoundFXI3DL2ReverbVtbl, *PIDirectSoundFXI3DL2ReverbVtbl;

typedef struct _DSFXI3DL2Reverb *LPDSFXI3DL2Reverb;

struct IDirectSoundFXI3DL2Reverb {
    struct IDirectSoundFXI3DL2ReverbVtbl *lpVtbl;
};

struct IDirectSoundFXI3DL2ReverbVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXI3DL2Reverb *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXI3DL2Reverb *);
    ULONG (*Release)(struct IDirectSoundFXI3DL2Reverb *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXI3DL2Reverb *, LPCDSFXI3DL2Reverb);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXI3DL2Reverb *, LPDSFXI3DL2Reverb);
    HRESULT (*SetPreset)(struct IDirectSoundFXI3DL2Reverb *, DWORD);
    HRESULT (*GetPreset)(struct IDirectSoundFXI3DL2Reverb *, LPDWORD);
    HRESULT (*SetQuality)(struct IDirectSoundFXI3DL2Reverb *, LONG);
    HRESULT (*GetQuality)(struct IDirectSoundFXI3DL2Reverb *, LONG *);
};

typedef struct IDirectSoundFXWavesReverb IDirectSoundFXWavesReverb, *PIDirectSoundFXWavesReverb;

typedef struct IDirectSoundFXWavesReverbVtbl IDirectSoundFXWavesReverbVtbl, *PIDirectSoundFXWavesReverbVtbl;

struct IDirectSoundFXWavesReverb {
    struct IDirectSoundFXWavesReverbVtbl *lpVtbl;
};

struct IDirectSoundFXWavesReverbVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXWavesReverb *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXWavesReverb *);
    ULONG (*Release)(struct IDirectSoundFXWavesReverb *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXWavesReverb *, LPCDSFXWavesReverb);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXWavesReverb *, LPDSFXWavesReverb);
};

typedef struct _DSCFXAec *LPDSCFXAec;

typedef struct IDirectSoundFXDistortion *LPDIRECTSOUNDFXDISTORTION8;

typedef struct IDirectSoundFXGargle *LPDIRECTSOUNDFXGARGLE;

typedef struct IReferenceClockVtbl IReferenceClockVtbl, *PIReferenceClockVtbl;

typedef struct IReferenceClock IReferenceClock, *PIReferenceClock;

typedef LONGLONG REFERENCE_TIME;

struct IReferenceClockVtbl {
    HRESULT (*QueryInterface)(struct IReferenceClock *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IReferenceClock *);
    ULONG (*Release)(struct IReferenceClock *);
    HRESULT (*GetTime)(struct IReferenceClock *, REFERENCE_TIME *);
    HRESULT (*AdviseTime)(struct IReferenceClock *, REFERENCE_TIME, REFERENCE_TIME, HANDLE, LPDWORD);
    HRESULT (*AdvisePeriodic)(struct IReferenceClock *, REFERENCE_TIME, REFERENCE_TIME, HANDLE, LPDWORD);
    HRESULT (*Unadvise)(struct IReferenceClock *, DWORD);
};

struct IReferenceClock {
    struct IReferenceClockVtbl *lpVtbl;
};

typedef struct IDirectSoundFXChorus *LPDIRECTSOUNDFXCHORUS;

typedef struct IDirectSoundFXFlanger *LPDIRECTSOUNDFXFLANGER8;

typedef struct IDirectSoundCaptureFXAec IDirectSoundCaptureFXAec, *PIDirectSoundCaptureFXAec;

typedef struct IDirectSoundCaptureFXAec *LPDIRECTSOUNDCAPTUREFXAEC8;

typedef struct IDirectSoundCaptureFXAecVtbl IDirectSoundCaptureFXAecVtbl, *PIDirectSoundCaptureFXAecVtbl;

struct IDirectSoundCaptureFXAec {
    struct IDirectSoundCaptureFXAecVtbl *lpVtbl;
};

struct IDirectSoundCaptureFXAecVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundCaptureFXAec *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundCaptureFXAec *);
    ULONG (*Release)(struct IDirectSoundCaptureFXAec *);
    HRESULT (*SetAllParameters)(struct IDirectSoundCaptureFXAec *, LPCDSCFXAec);
    HRESULT (*GetAllParameters)(struct IDirectSoundCaptureFXAec *, LPDSCFXAec);
};

typedef struct _DSCBUFFERDESC1 _DSCBUFFERDESC1, *P_DSCBUFFERDESC1;

struct _DSCBUFFERDESC1 {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwBufferBytes;
    DWORD dwReserved;
    LPWAVEFORMATEX lpwfxFormat;
};

typedef LPDIRECTSOUNDBUFFER *LPLPDIRECTSOUNDBUFFER;

typedef struct _DSEFFECTDESC DSEFFECTDESC;

typedef DSEFFECTDESC *LPCDSEFFECTDESC;

typedef struct IDirectSoundFXParamEq *LPDIRECTSOUNDFXPARAMEQ;

typedef struct IDirectSoundFXWavesReverb *LPDIRECTSOUNDFXWAVESREVERB;

typedef struct _DSCBUFFERDESC1 *LPDSCBUFFERDESC1;

typedef struct IDirectSound3DListener *LPDIRECTSOUND3DLISTENER8;

typedef BOOL (*LPDSENUMCALLBACKA)(LPGUID, LPCSTR, LPCSTR, LPVOID);

typedef struct IDirectSoundCaptureFXAec *LPDIRECTSOUNDCAPTUREFXAEC;

typedef BOOL (*LPDSENUMCALLBACKW)(LPGUID, LPCWSTR, LPCWSTR, LPVOID);

typedef struct IDirectSoundFXCompressor IDirectSoundFXCompressor, *PIDirectSoundFXCompressor;

typedef struct IDirectSoundFXCompressor *LPDIRECTSOUNDFXCOMPRESSOR;

typedef struct IDirectSoundFXCompressorVtbl IDirectSoundFXCompressorVtbl, *PIDirectSoundFXCompressorVtbl;

typedef DSFXCompressor *LPCDSFXCompressor;

typedef struct _DSFXCompressor *LPDSFXCompressor;

struct IDirectSoundFXCompressorVtbl {
    HRESULT (*QueryInterface)(struct IDirectSoundFXCompressor *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectSoundFXCompressor *);
    ULONG (*Release)(struct IDirectSoundFXCompressor *);
    HRESULT (*SetAllParameters)(struct IDirectSoundFXCompressor *, LPCDSFXCompressor);
    HRESULT (*GetAllParameters)(struct IDirectSoundFXCompressor *, LPDSFXCompressor);
};

struct IDirectSoundFXCompressor {
    struct IDirectSoundFXCompressorVtbl *lpVtbl;
};

typedef struct _DSCBUFFERDESC *LPDSCBUFFERDESC;

typedef DSCEFFECTDESC *LPCDSCEFFECTDESC;

typedef struct IKsPropertySet *LPKSPROPERTYSET;

typedef struct IDirectSoundFXCompressor *LPDIRECTSOUNDFXCOMPRESSOR8;

typedef struct IDirectSoundFullDuplex *LPDIRECTSOUNDFULLDUPLEX8;

typedef struct _DSBPOSITIONNOTIFY *LPDSBPOSITIONNOTIFY;

typedef struct IDirectSound3DBuffer *LPDIRECTSOUND3DBUFFER;

typedef struct _DSBUFFERDESC *LPDSBUFFERDESC;


/* WARNING! conflicting data type names: /deps/dsound.h/_D3DVECTOR - /deps/d3d8types.h/_D3DVECTOR */

typedef struct IDirectSoundFXWavesReverb *LPDIRECTSOUNDFXWAVESREVERB8;

typedef struct IDirectSoundFXI3DL2Reverb *LPDIRECTSOUNDFXI3DL2REVERB;

typedef enum enum_2679 {
    DSFX_I3DL2_MATERIAL_PRESET_SINGLEWINDOW=0,
    DSFX_I3DL2_MATERIAL_PRESET_DOUBLEWINDOW=1,
    DSFX_I3DL2_MATERIAL_PRESET_THINDOOR=2,
    DSFX_I3DL2_MATERIAL_PRESET_THICKDOOR=3,
    DSFX_I3DL2_MATERIAL_PRESET_WOODWALL=4,
    DSFX_I3DL2_MATERIAL_PRESET_BRICKWALL=5,
    DSFX_I3DL2_MATERIAL_PRESET_STONEWALL=6,
    DSFX_I3DL2_MATERIAL_PRESET_CURTAIN=7
} enum_2679;

typedef enum enum_2559 {
    DSFXR_PRESENT=0,
    DSFXR_LOCHARDWARE=1,
    DSFXR_LOCSOFTWARE=2,
    DSFXR_UNALLOCATED=3,
    DSFXR_FAILED=4,
    DSFXR_UNKNOWN=5,
    DSFXR_SENDLOOP=6
} enum_2559;

typedef struct IDirectSoundCaptureFXNoiseSuppress *LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS8;

typedef enum enum_2680 {
    DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT=0,
    DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC=1,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL=2,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM=3,
    DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM=4,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM=5,
    DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM=6,
    DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM=7,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL=8,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE=9,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA=10,
    DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR=11,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY=12,
    DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY=13,
    DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR=14,
    DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY=15,
    DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST=16,
    DSFX_I3DL2_ENVIRONMENT_PRESET_CITY=17,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS=18,
    DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY=19,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN=20,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT=21,
    DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE=22,
    DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER=23,
    DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM=24,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM=25,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM=26,
    DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL=27,
    DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL=28,
    DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE=29
} enum_2680;

typedef struct IDirectSoundFXParamEq *LPDIRECTSOUNDFXPARAMEQ8;

typedef LPDIRECTSOUND8 *LPLPDIRECTSOUND8;

typedef LPDIRECTSOUND3DBUFFER *LPLPDIRECTSOUND3DBUFFER;

typedef LPDIRECTSOUNDCAPTURE *LPLPDIRECTSOUNDCAPTURE;

typedef struct IDirectSoundCaptureFXNoiseSuppress *LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS;

typedef struct _DSCBUFFERDESC1 DSCBUFFERDESC1;

typedef struct IDirectSoundFXDistortion *LPDIRECTSOUNDFXDISTORTION;

typedef DSBUFFERDESC1 *LPCDSBUFFERDESC1;

typedef DSBCAPS *LPCDSBCAPS;

typedef float *LPD3DVALUE;

typedef REFERENCE_TIME *LPREFERENCE_TIME;

typedef struct IDirectSoundFXFlanger *LPDIRECTSOUNDFXFLANGER;

typedef struct _DSBUFFERDESC1 *LPDSBUFFERDESC1;

typedef struct IDirectSoundFXChorus *LPDIRECTSOUNDFXCHORUS8;

typedef LPDIRECTSOUND *LPLPDIRECTSOUND;

typedef DSCCAPS *LPCDSCCAPS;

typedef struct IDirectSoundFXI3DL2Reverb *LPDIRECTSOUNDFXI3DL2REVERB8;

#define DSCCAPS_CERTIFIED 64

#define DSCAPS_CERTIFIED 64

#define DSCCAPS_EMULDRIVER 32

#define DS_SYSTEM_RESOURCES_NO_HOST_RESOURCES 0

#define DSFXFLANGER_PHASE_NEG_90 1

#define DSFXCHORUS_PHASE_NEG_180 0

#define DS_UNCERTIFIED 1

#define DS3D_DEFAULTCONEOUTSIDEVOLUME 0

#define DSBPAN_LEFT -10000

#define DSBCAPS_CTRLPAN 64

#define DSFXFLANGER_PHASE_MIN 0

#define DSFX_I3DL2REVERB_REFLECTIONS_MIN -10000

#define DSERR_INVALIDPARAM 2147942487

#define DIRECTSOUND_VERSION 2048

#define DSBSTATUS_PLAYING 1

#define DSBCAPS_STATIC 2

#define DSCAPS_PRIMARY8BIT 4

#define DSERR_UNINITIALIZED 2289565866

#define DSSPEAKER_GEOMETRY_MIN 5

#define DSBVOLUME_MIN -10000

#define DS3D_MAXCONEANGLE 360

#define DS_INCOMPLETE 142082068

#define DSFXCHORUS_WAVE_SIN 1

#define DSFX_I3DL2REVERB_ROOMHF_MAX 0

#define DSFXCHORUS_PHASE_ZERO 2

#define DSFXCHORUS_PHASE_90 3

#define DSBCAPS_LOCDEFER 262144

#define DSCAPS_SECONDARY8BIT 1024

#define DS3DMODE_DISABLE 2

#define DSBSIZE_MAX 268435455

#define DS_CERTIFIED 0

#define DS_SYSTEM_RESOURCES_UNDEFINED 2147483648

#define DSBPLAY_TERMINATEBY_TIME 8

#define DSBCAPS_PRIMARYBUFFER 1

#define KSPROPERTY_SUPPORT_GET 1

#define DSSPEAKER_GEOMETRY_WIDE 20

#define DSBSTATUS_LOCSOFTWARE 16

#define DSFXCHORUS_PHASE_MIN 0

#define DSCAPS_SECONDARYMONO 256

#define DS_OK 0

#define DSCAPS_EMULDRIVER 32

#define DS3DMODE_HEADRELATIVE 1

#define DSCFX_LOCHARDWARE 1

#define DS3D_DEFAULTCONEANGLE 360

#define DSFXGARGLE_RATEHZ_MIN 1

#define DSFX_I3DL2REVERB_ROOM_MIN -10000

#define DSERR_GENERIC 2147500037

#define DSBLOCK_FROMWRITECURSOR 1

#define DSERR_ALLOCATED 2289565706

#define DSBCAPS_STICKYFOCUS 16384

#define DS3DMODE_NORMAL 0

#define DSCAPS_SECONDARY16BIT 2048

#define DSCFXR_UNKNOWN 256

#define DSSCL_NORMAL 1

#define DS_SYSTEM_RESOURCES_ALL_HOST_RESOURCES 2147483647

#define DSCBCAPS_WAVEMAPPED 2147483648

#define DSFX_I3DL2REVERB_REVERB_DEFAULT 200

#define DSFX_LOCSOFTWARE 2

#define DSERR_BUFFERTOOSMALL 2289565876

#define DSSPEAKER_5POINT1 6

#define DSFX_LOCHARDWARE 1

#define DSCAPS_PRIMARY16BIT 8

#define DSFXFLANGER_PHASE_NEG_180 0

#define DSBCAPS_CTRLFX 512

#define DSERR_ALREADYINITIALIZED 2289565826

#define DSBPLAY_TERMINATEBY_DISTANCE 16

#define DSFX_I3DL2REVERB_REVERB_MAX 2000

#define DSERR_BUFFERLOST 2289565846

#define DSFXGARGLE_WAVE_SQUARE 1

#define DSBCAPS_GLOBALFOCUS 32768

#define DSERR_NODRIVER 2289565816

#define DSCFXR_LOCHARDWARE 16

#define DSERR_UNSUPPORTED 2147500033

#define DSFXECHO_PANDELAY_MIN 0

#define DSBSIZE_FX_MIN 150

#define DSFXGARGLE_WAVE_TRIANGLE 0

#define DSFX_I3DL2REVERB_QUALITY_MAX 3

#define DSSCL_EXCLUSIVE 3

#define DSCFXR_FAILED 128

#define DSBPLAY_LOOPING 1

#define DSBFREQUENCY_MAX 100000

#define DSCAPS_PRIMARYMONO 1

#define DSBCAPS_LOCSOFTWARE 8

#define DSCBSTATUS_CAPTURING 1

#define DSFX_I3DL2REVERB_QUALITY_DEFAULT 2

#define DSERR_NOAGGREGATION 2147746064

#define DSSCL_PRIORITY 2

#define DSERR_OUTOFMEMORY 2147942414

#define DSERR_DS8_REQUIRED 2289565886

#define DSFX_I3DL2REVERB_REFLECTIONS_MAX 1000

#define DSBCAPS_CTRL3D 16

#define DSBSTATUS_TERMINATED 32

#define DSBCAPS_CTRLPOSITIONNOTIFY 256

#define DSBPN_OFFSETSTOP 4294967295

#define DSFX_I3DL2REVERB_ROOM_DEFAULT -1000

#define DSBPLAY_TERMINATEBY_PRIORITY 32

#define DSBPLAY_LOCSOFTWARE 4

#define DSFXCHORUS_WAVE_TRIANGLE 0

#define DSBPLAY_LOCHARDWARE 2

#define DSFXFLANGER_PHASE_MAX 4

#define DSFX_I3DL2REVERB_REFLECTIONS_DEFAULT -2602

#define _FACDS 2168

#define DSERR_SENDLOOP 2289565896

#define DSFXFLANGER_PHASE_ZERO 2

#define DSBPAN_RIGHT 10000

#define DSFXCHORUS_PHASE_180 4

#define DSBSTATUS_BUFFERLOST 2

#define DSBLOCK_ENTIREBUFFER 2

#define DSCBSTATUS_LOOPING 2

#define DS3D_MINCONEANGLE 0

#define DSCBCAPS_CTRLFX 512

#define DSFX_I3DL2REVERB_ROOMHF_MIN -10000

#define KSPROPERTY_SUPPORT_SET 2

#define DSFXFLANGER_PHASE_180 4

#define DSCAPS_CONTINUOUSRATE 16

#define DSBCAPS_LOCHARDWARE 4

#define DSSPEAKER_MONO 2

#define DSBFREQUENCY_ORIGINAL 0

#define DSBPAN_CENTER 0

#define DSERR_ACCESSDENIED 2147942405

#define DSSPEAKER_STEREO 4

#define DSBCAPS_CTRLFREQUENCY 32

#define DSERR_NOINTERFACE 2147500034

#define DSERR_BADFORMAT 2289565796

#define DSBSIZE_MIN 4

#define DSSPEAKER_GEOMETRY_MAX 180

#define DSSPEAKER_SURROUND 5

#define DSBVOLUME_MAX 0

#define DS3D_IMMEDIATE 0

#define DSCFXR_LOCSOFTWARE 32

#define DSSPEAKER_QUAD 3

#define DSCAPS_PRIMARYSTEREO 2

#define DSCBSTART_LOOPING 1

#define DSCAPS_SECONDARYSTEREO 512

#define DS3D_DEFERRED 1

#define DSBSTATUS_LOCHARDWARE 8

#define DSBCAPS_GETCURRENTPOSITION2 65536

#define DSFXFLANGER_WAVE_TRIANGLE 0

#define DSCFXR_UNALLOCATED 64

#define DS_NO_VIRTUALIZATION 142082058

#define DSSCL_WRITEPRIMARY 4

#define DSFX_I3DL2REVERB_ROOM_MAX 0

#define DSERR_CONTROLUNAVAIL 2289565726

#define DSCFX_LOCSOFTWARE 2

#define DSFXCHORUS_PHASE_NEG_90 1

#define DSBCAPS_CTRLVOLUME 128

#define DSFX_I3DL2REVERB_ROOMHF_DEFAULT -100

#define DSFXCHORUS_PHASE_MAX 4

#define DSERR_PRIOLEVELNEEDED 2289565766

#define DSSPEAKER_GEOMETRY_NARROW 10

#define DSFXECHO_PANDELAY_MAX 1

#define DSERR_OBJECTNOTFOUND 2289570145

#define DSCBLOCK_ENTIREBUFFER 1

#define DSBSTATUS_LOOPING 4

#define DSFXFLANGER_PHASE_90 3

#define DSBCAPS_MUTE3DATMAXDISTANCE 131072

#define DSERR_BADSENDBUFFERGUID 2289565906

#define DSERR_INVALIDCALL 2289565746

#define DSFXFLANGER_WAVE_SIN 1

#define DSFX_I3DL2REVERB_REVERB_MIN -10000

#define DSBFREQUENCY_MIN 100

#define DSSPEAKER_HEADPHONE 1

#define DSFXGARGLE_RATEHZ_MAX 1000

#define DSERR_OTHERAPPHASPRIO 2289565856

#define DSFX_I3DL2REVERB_QUALITY_MIN 0

typedef struct IInternetBindInfo IInternetBindInfo, *PIInternetBindInfo;

typedef struct IInternetBindInfoVtbl IInternetBindInfoVtbl, *PIInternetBindInfoVtbl;

typedef struct _tagBINDINFO _tagBINDINFO, *P_tagBINDINFO;

typedef struct _tagBINDINFO BINDINFO;

typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;

struct _tagBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    STGMEDIUM stgmedData;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    SECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown *pUnk;
    DWORD dwReserved;
};

struct IInternetBindInfo {
    struct IInternetBindInfoVtbl *lpVtbl;
};

struct IInternetBindInfoVtbl {
    HRESULT (*QueryInterface)(struct IInternetBindInfo *, IID *, void **);
    ULONG (*AddRef)(struct IInternetBindInfo *);
    ULONG (*Release)(struct IInternetBindInfo *);
    HRESULT (*GetBindInfo)(struct IInternetBindInfo *, DWORD *, BINDINFO *);
    HRESULT (*GetBindString)(struct IInternetBindInfo *, ULONG, LPOLESTR *, ULONG, ULONG *);
};

typedef struct IInternetSessionVtbl IInternetSessionVtbl, *PIInternetSessionVtbl;

typedef struct IInternetSession IInternetSession, *PIInternetSession;

typedef struct IClassFactory IClassFactory, *PIClassFactory;

typedef struct IInternetProtocol IInternetProtocol, *PIInternetProtocol;

typedef struct IClassFactoryVtbl IClassFactoryVtbl, *PIClassFactoryVtbl;

typedef struct IInternetProtocolVtbl IInternetProtocolVtbl, *PIInternetProtocolVtbl;

typedef struct IInternetProtocolSink IInternetProtocolSink, *PIInternetProtocolSink;

typedef struct _tagPROTOCOLDATA _tagPROTOCOLDATA, *P_tagPROTOCOLDATA;

typedef struct _tagPROTOCOLDATA PROTOCOLDATA;

typedef struct IInternetProtocolSinkVtbl IInternetProtocolSinkVtbl, *PIInternetProtocolSinkVtbl;

struct IInternetSessionVtbl {
    HRESULT (*QueryInterface)(struct IInternetSession *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSession *);
    ULONG (*Release)(struct IInternetSession *);
    HRESULT (*RegisterNameSpace)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR, ULONG, LPCWSTR *, DWORD);
    HRESULT (*UnregisterNameSpace)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (*RegisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR);
    HRESULT (*UnregisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (*CreateBinding)(struct IInternetSession *, LPBC, LPCWSTR, struct IUnknown *, struct IUnknown **, struct IInternetProtocol **, DWORD);
    HRESULT (*SetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD, DWORD);
    HRESULT (*GetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD *, DWORD);
};

struct IInternetProtocolSink {
    struct IInternetProtocolSinkVtbl *lpVtbl;
};

struct _tagPROTOCOLDATA {
    DWORD grfFlags;
    DWORD dwState;
    LPVOID pData;
    ULONG cbData;
};

struct IInternetProtocolVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocol *);
    ULONG (*Release)(struct IInternetProtocol *);
    HRESULT (*Start)(struct IInternetProtocol *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (*Continue)(struct IInternetProtocol *, PROTOCOLDATA *);
    HRESULT (*Abort)(struct IInternetProtocol *, HRESULT, DWORD);
    HRESULT (*Terminate)(struct IInternetProtocol *, DWORD);
    HRESULT (*Suspend)(struct IInternetProtocol *);
    HRESULT (*Resume)(struct IInternetProtocol *);
    HRESULT (*Read)(struct IInternetProtocol *, void *, ULONG, ULONG *);
    HRESULT (*Seek)(struct IInternetProtocol *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (*LockRequest)(struct IInternetProtocol *, DWORD);
    HRESULT (*UnlockRequest)(struct IInternetProtocol *);
};

struct IInternetProtocol {
    struct IInternetProtocolVtbl *lpVtbl;
};

struct IInternetProtocolSinkVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolSink *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolSink *);
    ULONG (*Release)(struct IInternetProtocolSink *);
    HRESULT (*Switch)(struct IInternetProtocolSink *, PROTOCOLDATA *);
    HRESULT (*ReportProgress)(struct IInternetProtocolSink *, ULONG, LPCWSTR);
    HRESULT (*ReportData)(struct IInternetProtocolSink *, DWORD, ULONG, ULONG);
    HRESULT (*ReportResult)(struct IInternetProtocolSink *, HRESULT, DWORD, LPCWSTR);
};

struct IClassFactory {
    struct IClassFactoryVtbl *lpVtbl;
};

struct IClassFactoryVtbl {
    HRESULT (*QueryInterface)(struct IClassFactory *, IID *, void **);
    ULONG (*AddRef)(struct IClassFactory *);
    ULONG (*Release)(struct IClassFactory *);
    HRESULT (*CreateInstance)(struct IClassFactory *, struct IUnknown *, IID *, void **);
    HRESULT (*LockServer)(struct IClassFactory *, BOOL);
};

struct IInternetSession {
    struct IInternetSessionVtbl *lpVtbl;
};

typedef struct _tagSOFTDISTINFO _tagSOFTDISTINFO, *P_tagSOFTDISTINFO;

struct _tagSOFTDISTINFO {
    ULONG cbSize;
    DWORD dwFlags;
    DWORD dwAdState;
    LPWSTR szTitle;
    LPWSTR szAbstract;
    LPWSTR szHREF;
    DWORD dwInstalledVersionMS;
    DWORD dwInstalledVersionLS;
    DWORD dwUpdateVersionMS;
    DWORD dwUpdateVersionLS;
    DWORD dwAdvertisedVersionMS;
    DWORD dwAdvertisedVersionLS;
    DWORD dwReserved;
};

typedef enum __MIDL_IBindStatusCallback_0002 {
    BINDINFOF_URLENCODESTGMEDDATA=1,
    BINDINFOF_URLENCODEDEXTRAINFO=2
} __MIDL_IBindStatusCallback_0002;

typedef enum __MIDL_IBindStatusCallback_0002 BINDINFOF;

typedef struct IEncodingFilterFactory IEncodingFilterFactory, *PIEncodingFilterFactory;

typedef struct IEncodingFilterFactoryVtbl IEncodingFilterFactoryVtbl, *PIEncodingFilterFactoryVtbl;

typedef struct _tagDATAINFO _tagDATAINFO, *P_tagDATAINFO;

typedef struct _tagDATAINFO DATAINFO;

typedef struct IDataFilter IDataFilter, *PIDataFilter;

typedef struct IDataFilterVtbl IDataFilterVtbl, *PIDataFilterVtbl;

struct IEncodingFilterFactory {
    struct IEncodingFilterFactoryVtbl *lpVtbl;
};

struct _tagDATAINFO {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
};

struct IDataFilterVtbl {
    HRESULT (*QueryInterface)(struct IDataFilter *, IID *, void **);
    ULONG (*AddRef)(struct IDataFilter *);
    ULONG (*Release)(struct IDataFilter *);
    HRESULT (*DoEncode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (*DoDecode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (*SetEncodingLevel)(struct IDataFilter *, DWORD);
};

struct IDataFilter {
    struct IDataFilterVtbl *lpVtbl;
};

struct IEncodingFilterFactoryVtbl {
    HRESULT (*QueryInterface)(struct IEncodingFilterFactory *, IID *, void **);
    ULONG (*AddRef)(struct IEncodingFilterFactory *);
    ULONG (*Release)(struct IEncodingFilterFactory *);
    HRESULT (*FindBestFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, DATAINFO, struct IDataFilter **);
    HRESULT (*GetDefaultFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, struct IDataFilter **);
};

typedef struct _tagRemBINDINFO _tagRemBINDINFO, *P_tagRemBINDINFO;

typedef struct _tagRemBINDINFO RemBINDINFO;

typedef struct _REMSECURITY_ATTRIBUTES _REMSECURITY_ATTRIBUTES, *P_REMSECURITY_ATTRIBUTES;

typedef struct _REMSECURITY_ATTRIBUTES REMSECURITY_ATTRIBUTES;

struct _REMSECURITY_ATTRIBUTES {
    DWORD nLength;
    DWORD lpSecurityDescriptor;
    BOOL bInheritHandle;
};

struct _tagRemBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    REMSECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown *pUnk;
    DWORD dwReserved;
};

typedef enum __MIDL_IMonikerProp_0001 {
    MIMETYPEPROP=0
} __MIDL_IMonikerProp_0001;

typedef struct IInternetThreadSwitch IInternetThreadSwitch, *PIInternetThreadSwitch;

typedef struct IInternetThreadSwitchVtbl IInternetThreadSwitchVtbl, *PIInternetThreadSwitchVtbl;

struct IInternetThreadSwitch {
    struct IInternetThreadSwitchVtbl *lpVtbl;
};

struct IInternetThreadSwitchVtbl {
    HRESULT (*QueryInterface)(struct IInternetThreadSwitch *, IID *, void **);
    ULONG (*AddRef)(struct IInternetThreadSwitch *);
    ULONG (*Release)(struct IInternetThreadSwitch *);
    HRESULT (*Prepare)(struct IInternetThreadSwitch *);
    HRESULT (*Continue)(struct IInternetThreadSwitch *);
};

typedef struct IHttpSecurity IHttpSecurity, *PIHttpSecurity;

typedef struct IHttpSecurityVtbl IHttpSecurityVtbl, *PIHttpSecurityVtbl;

struct IHttpSecurity {
    struct IHttpSecurityVtbl *lpVtbl;
};

struct IHttpSecurityVtbl {
    HRESULT (*QueryInterface)(struct IHttpSecurity *, IID *, void **);
    ULONG (*AddRef)(struct IHttpSecurity *);
    ULONG (*Release)(struct IHttpSecurity *);
    HRESULT (*GetWindow)(struct IHttpSecurity *, GUID *, HWND *);
    HRESULT (*OnSecurityProblem)(struct IHttpSecurity *, DWORD);
};

typedef struct ICatalogFileInfo ICatalogFileInfo, *PICatalogFileInfo;

typedef struct ICatalogFileInfo *LPCATALOGFILEINFO;

typedef struct ICatalogFileInfoVtbl ICatalogFileInfoVtbl, *PICatalogFileInfoVtbl;

struct ICatalogFileInfoVtbl {
    HRESULT (*QueryInterface)(struct ICatalogFileInfo *, IID *, void **);
    ULONG (*AddRef)(struct ICatalogFileInfo *);
    ULONG (*Release)(struct ICatalogFileInfo *);
    HRESULT (*GetCatalogFile)(struct ICatalogFileInfo *, LPSTR *);
    HRESULT (*GetJavaTrust)(struct ICatalogFileInfo *, void **);
};

struct ICatalogFileInfo {
    struct ICatalogFileInfoVtbl *lpVtbl;
};

typedef struct IWinInetInfo IWinInetInfo, *PIWinInetInfo;

typedef struct IWinInetInfoVtbl IWinInetInfoVtbl, *PIWinInetInfoVtbl;

struct IWinInetInfoVtbl {
    HRESULT (*QueryInterface)(struct IWinInetInfo *, IID *, void **);
    ULONG (*AddRef)(struct IWinInetInfo *);
    ULONG (*Release)(struct IWinInetInfo *);
    HRESULT (*QueryOption)(struct IWinInetInfo *, DWORD, LPVOID, DWORD *);
};

struct IWinInetInfo {
    struct IWinInetInfoVtbl *lpVtbl;
};

typedef struct IBindStatusCallback IBindStatusCallback, *PIBindStatusCallback;

typedef struct IBindStatusCallback *LPBINDSTATUSCALLBACK;

typedef struct IBindStatusCallbackVtbl IBindStatusCallbackVtbl, *PIBindStatusCallbackVtbl;

typedef struct IBinding IBinding, *PIBinding;

typedef struct IBindingVtbl IBindingVtbl, *PIBindingVtbl;

struct IBinding {
    struct IBindingVtbl *lpVtbl;
};

struct IBindingVtbl {
    HRESULT (*QueryInterface)(struct IBinding *, IID *, void **);
    ULONG (*AddRef)(struct IBinding *);
    ULONG (*Release)(struct IBinding *);
    HRESULT (*Abort)(struct IBinding *);
    HRESULT (*Suspend)(struct IBinding *);
    HRESULT (*Resume)(struct IBinding *);
    HRESULT (*SetPriority)(struct IBinding *, LONG);
    HRESULT (*GetPriority)(struct IBinding *, LONG *);
    HRESULT (*GetBindResult)(struct IBinding *, CLSID *, DWORD *, LPOLESTR *, DWORD *);
};

struct IBindStatusCallback {
    struct IBindStatusCallbackVtbl *lpVtbl;
};

struct IBindStatusCallbackVtbl {
    HRESULT (*QueryInterface)(struct IBindStatusCallback *, IID *, void **);
    ULONG (*AddRef)(struct IBindStatusCallback *);
    ULONG (*Release)(struct IBindStatusCallback *);
    HRESULT (*OnStartBinding)(struct IBindStatusCallback *, DWORD, struct IBinding *);
    HRESULT (*GetPriority)(struct IBindStatusCallback *, LONG *);
    HRESULT (*OnLowResource)(struct IBindStatusCallback *, DWORD);
    HRESULT (*OnProgress)(struct IBindStatusCallback *, ULONG, ULONG, ULONG, LPCWSTR);
    HRESULT (*OnStopBinding)(struct IBindStatusCallback *, HRESULT, LPCWSTR);
    HRESULT (*GetBindInfo)(struct IBindStatusCallback *, DWORD *, BINDINFO *);
    HRESULT (*OnDataAvailable)(struct IBindStatusCallback *, DWORD, DWORD, FORMATETC *, STGMEDIUM *);
    HRESULT (*OnObjectAvailable)(struct IBindStatusCallback *, IID *, struct IUnknown *);
};

typedef struct IInternetZoneManagerVtbl IInternetZoneManagerVtbl, *PIInternetZoneManagerVtbl;

typedef struct IInternetZoneManager IInternetZoneManager, *PIInternetZoneManager;

typedef struct _ZONEATTRIBUTES _ZONEATTRIBUTES, *P_ZONEATTRIBUTES;

typedef struct _ZONEATTRIBUTES ZONEATTRIBUTES;

typedef enum _URLZONEREG {
    URLZONEREG_DEFAULT=0,
    URLZONEREG_HKLM=1,
    URLZONEREG_HKCU=2
} _URLZONEREG;

typedef enum _URLZONEREG URLZONEREG;

struct _ZONEATTRIBUTES {
    ULONG cbSize;
    WCHAR szDisplayName[260];
    WCHAR szDescription[200];
    WCHAR szIconPath[260];
    DWORD dwTemplateMinLevel;
    DWORD dwTemplateRecommended;
    DWORD dwTemplateCurrentLevel;
    DWORD dwFlags;
};

struct IInternetZoneManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetZoneManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetZoneManager *);
    ULONG (*Release)(struct IInternetZoneManager *);
    HRESULT (*GetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (*SetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (*GetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE **, DWORD *, URLZONEREG);
    HRESULT (*SetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE *, DWORD, URLZONEREG);
    HRESULT (*GetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (*SetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (*PromptAction)(struct IInternetZoneManager *, DWORD, HWND, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*LogAction)(struct IInternetZoneManager *, DWORD, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*CreateZoneEnumerator)(struct IInternetZoneManager *, DWORD *, DWORD *, DWORD);
    HRESULT (*GetZoneAt)(struct IInternetZoneManager *, DWORD, DWORD, DWORD *);
    HRESULT (*DestroyZoneEnumerator)(struct IInternetZoneManager *, DWORD);
    HRESULT (*CopyTemplatePoliciesToZone)(struct IInternetZoneManager *, DWORD, DWORD, DWORD);
};

struct IInternetZoneManager {
    struct IInternetZoneManagerVtbl *lpVtbl;
};

typedef struct IHttpNegotiate2Vtbl IHttpNegotiate2Vtbl, *PIHttpNegotiate2Vtbl;

typedef struct IHttpNegotiate2 IHttpNegotiate2, *PIHttpNegotiate2;

struct IHttpNegotiate2Vtbl {
    HRESULT (*QueryInterface)(struct IHttpNegotiate2 *, IID *, void **);
    ULONG (*AddRef)(struct IHttpNegotiate2 *);
    ULONG (*Release)(struct IHttpNegotiate2 *);
    HRESULT (*BeginningTransaction)(struct IHttpNegotiate2 *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (*OnResponse)(struct IHttpNegotiate2 *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
    HRESULT (*GetRootSecurityId)(struct IHttpNegotiate2 *, BYTE *, DWORD *, DWORD_PTR);
};

struct IHttpNegotiate2 {
    struct IHttpNegotiate2Vtbl *lpVtbl;
};

typedef struct IHttpNegotiateVtbl IHttpNegotiateVtbl, *PIHttpNegotiateVtbl;

typedef struct IHttpNegotiate IHttpNegotiate, *PIHttpNegotiate;

struct IHttpNegotiate {
    struct IHttpNegotiateVtbl *lpVtbl;
};

struct IHttpNegotiateVtbl {
    HRESULT (*QueryInterface)(struct IHttpNegotiate *, IID *, void **);
    ULONG (*AddRef)(struct IHttpNegotiate *);
    ULONG (*Release)(struct IHttpNegotiate *);
    HRESULT (*BeginningTransaction)(struct IHttpNegotiate *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (*OnResponse)(struct IHttpNegotiate *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
};

typedef struct IInternetProtocolRootVtbl IInternetProtocolRootVtbl, *PIInternetProtocolRootVtbl;

typedef struct IInternetProtocolRoot IInternetProtocolRoot, *PIInternetProtocolRoot;

struct IInternetProtocolRootVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolRoot *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolRoot *);
    ULONG (*Release)(struct IInternetProtocolRoot *);
    HRESULT (*Start)(struct IInternetProtocolRoot *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (*Continue)(struct IInternetProtocolRoot *, PROTOCOLDATA *);
    HRESULT (*Abort)(struct IInternetProtocolRoot *, HRESULT, DWORD);
    HRESULT (*Terminate)(struct IInternetProtocolRoot *, DWORD);
    HRESULT (*Suspend)(struct IInternetProtocolRoot *);
    HRESULT (*Resume)(struct IInternetProtocolRoot *);
};

struct IInternetProtocolRoot {
    struct IInternetProtocolRootVtbl *lpVtbl;
};

typedef struct IWinInetHttpInfo IWinInetHttpInfo, *PIWinInetHttpInfo;

typedef struct IWinInetHttpInfoVtbl IWinInetHttpInfoVtbl, *PIWinInetHttpInfoVtbl;

struct IWinInetHttpInfo {
    struct IWinInetHttpInfoVtbl *lpVtbl;
};

struct IWinInetHttpInfoVtbl {
    HRESULT (*QueryInterface)(struct IWinInetHttpInfo *, IID *, void **);
    ULONG (*AddRef)(struct IWinInetHttpInfo *);
    ULONG (*Release)(struct IWinInetHttpInfo *);
    HRESULT (*QueryOption)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *);
    HRESULT (*QueryInfo)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *, DWORD *, DWORD *);
};

typedef struct IWindowForBindingUI IWindowForBindingUI, *PIWindowForBindingUI;

typedef struct IWindowForBindingUI *LPWINDOWFORBINDINGUI;

typedef struct IWindowForBindingUIVtbl IWindowForBindingUIVtbl, *PIWindowForBindingUIVtbl;

struct IWindowForBindingUI {
    struct IWindowForBindingUIVtbl *lpVtbl;
};

struct IWindowForBindingUIVtbl {
    HRESULT (*QueryInterface)(struct IWindowForBindingUI *, IID *, void **);
    ULONG (*AddRef)(struct IWindowForBindingUI *);
    ULONG (*Release)(struct IWindowForBindingUI *);
    HRESULT (*GetWindow)(struct IWindowForBindingUI *, GUID *, HWND *);
};

typedef struct IInternetHostSecurityManagerVtbl IInternetHostSecurityManagerVtbl, *PIInternetHostSecurityManagerVtbl;

typedef struct IInternetHostSecurityManager IInternetHostSecurityManager, *PIInternetHostSecurityManager;

struct IInternetHostSecurityManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetHostSecurityManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetHostSecurityManager *);
    ULONG (*Release)(struct IInternetHostSecurityManager *);
    HRESULT (*GetSecurityId)(struct IInternetHostSecurityManager *, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (*ProcessUrlAction)(struct IInternetHostSecurityManager *, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (*QueryCustomPolicy)(struct IInternetHostSecurityManager *, GUID *, BYTE **, DWORD *, BYTE *, DWORD, DWORD);
};

struct IInternetHostSecurityManager {
    struct IInternetHostSecurityManagerVtbl *lpVtbl;
};

typedef struct IInternetProtocolSink *LPIINTERNETPROTOCOLSINK;

typedef struct IWrappedProtocol IWrappedProtocol, *PIWrappedProtocol;

typedef struct IWrappedProtocolVtbl IWrappedProtocolVtbl, *PIWrappedProtocolVtbl;

struct IWrappedProtocolVtbl {
    HRESULT (*QueryInterface)(struct IWrappedProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IWrappedProtocol *);
    ULONG (*Release)(struct IWrappedProtocol *);
    HRESULT (*GetWrapperCode)(struct IWrappedProtocol *, LONG *, DWORD_PTR);
};

struct IWrappedProtocol {
    struct IWrappedProtocolVtbl *lpVtbl;
};

typedef enum _tagPARSEACTION {
    PARSE_CANONICALIZE=1,
    PARSE_FRIENDLY=2,
    PARSE_SECURITY_URL=3,
    PARSE_ROOTDOCUMENT=4,
    PARSE_DOCUMENT=5,
    PARSE_ANCHOR=6,
    PARSE_ENCODE=7,
    PARSE_DECODE=8,
    PARSE_PATH_FROM_URL=9,
    PARSE_URL_FROM_PATH=10,
    PARSE_MIME=11,
    PARSE_SERVER=12,
    PARSE_SCHEMA=13,
    PARSE_SITE=14,
    PARSE_DOMAIN=15,
    PARSE_LOCATION=16,
    PARSE_SECURITY_DOMAIN=17,
    PARSE_ESCAPE=18,
    PARSE_UNESCAPE=19
} _tagPARSEACTION;

typedef enum _tagPARSEACTION PARSEACTION;

typedef enum __MIDL_IBindStatusCallback_0005 {
    BINDINFO_OPTIONS_WININETFLAG=65536,
    BINDINFO_OPTIONS_ENABLE_UTF8=131072,
    BINDINFO_OPTIONS_DISABLE_UTF8=262144,
    BINDINFO_OPTIONS_USE_IE_ENCODING=524288,
    BINDINFO_OPTIONS_BINDTOOBJECT=1048576
} __MIDL_IBindStatusCallback_0005;

typedef enum __MIDL_IBindStatusCallback_0005 BINDINFO_OPTIONS;

typedef struct IHttpNegotiate *LPHTTPNEGOTIATE;

typedef enum _tagOIBDG_FLAGS {
    OIBDG_APARTMENTTHREADED=256,
    OIBDG_DATAONLY=4096
} _tagOIBDG_FLAGS;

typedef enum __MIDL_IBindStatusCallback_0001 {
    BINDVERB_GET=0,
    BINDVERB_POST=1,
    BINDVERB_PUT=2,
    BINDVERB_CUSTOM=3
} __MIDL_IBindStatusCallback_0001;

typedef enum __MIDL_IBindStatusCallback_0001 BINDVERB;

typedef enum __MIDL_IBindStatusCallback_0006 {
    BSCF_FIRSTDATANOTIFICATION=1,
    BSCF_INTERMEDIATEDATANOTIFICATION=2,
    BSCF_LASTDATANOTIFICATION=4,
    BSCF_DATAFULLYAVAILABLE=8,
    BSCF_AVAILABLEDATASIZEUNKNOWN=16
} __MIDL_IBindStatusCallback_0006;

typedef enum __MIDL_IBindStatusCallback_0006 BSCF;

typedef enum __MIDL_IBindStatusCallback_0003 {
    BINDF_ASYNCHRONOUS=1,
    BINDF_ASYNCSTORAGE=2,
    BINDF_NOPROGRESSIVERENDERING=4,
    BINDF_OFFLINEOPERATION=8,
    BINDF_GETNEWESTVERSION=16,
    BINDF_NOWRITECACHE=32,
    BINDF_NEEDFILE=64,
    BINDF_PULLDATA=128,
    BINDF_IGNORESECURITYPROBLEM=256,
    BINDF_RESYNCHRONIZE=512,
    BINDF_HYPERLINK=1024,
    BINDF_NO_UI=2048,
    BINDF_SILENTOPERATION=4096,
    BINDF_PRAGMA_NO_CACHE=8192,
    BINDF_GETCLASSOBJECT=16384,
    BINDF_RESERVED_1=32768,
    BINDF_FREE_THREADED=65536,
    BINDF_DIRECT_READ=131072,
    BINDF_FORMS_SUBMIT=262144,
    BINDF_GETFROMCACHE_IF_NET_FAIL=524288,
    BINDF_FROMURLMON=1048576,
    BINDF_FWD_BACK=2097152,
    BINDF_PREFERDEFAULTHANDLER=4194304,
    BINDF_ENFORCERESTRICTED=8388608
} __MIDL_IBindStatusCallback_0003;

typedef enum __MIDL_IBindStatusCallback_0003 BINDF;

typedef struct _tagPROTOCOLFILTERDATA _tagPROTOCOLFILTERDATA, *P_tagPROTOCOLFILTERDATA;

typedef struct _tagPROTOCOLFILTERDATA PROTOCOLFILTERDATA;

struct _tagPROTOCOLFILTERDATA {
    DWORD cbSize;
    struct IInternetProtocolSink *pProtocolSink;
    struct IInternetProtocol *pProtocol;
    struct IUnknown *pUnk;
    DWORD dwFilterFlags;
};

typedef enum _tagPI_FLAGS {
    PI_PARSE_URL=1,
    PI_FILTER_MODE=2,
    PI_FORCE_ASYNC=4,
    PI_USE_WORKERTHREAD=8,
    PI_MIMEVERIFICATION=16,
    PI_CLSIDLOOKUP=32,
    PI_DATAPROGRESS=64,
    PI_SYNCHRONOUS=128,
    PI_APARTMENTTHREADED=256,
    PI_CLASSINSTALL=512,
    PI_PASSONBINDCTX=8192,
    PI_LOADAPPDIRECT=16384,
    PI_NOMIMEHANDLER=32768,
    PD_FORCE_SWITCH=65536,
    PI_PREFERDEFAULTHANDLER=131072
} _tagPI_FLAGS;

typedef enum __MIDL_IInternetZoneManager_0002 {
    ZAFLAGS_CUSTOM_EDIT=1,
    ZAFLAGS_ADD_SITES=2,
    ZAFLAGS_REQUIRE_VERIFICATION=4,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE=8,
    ZAFLAGS_INCLUDE_INTRANET_SITES=16,
    ZAFLAGS_NO_UI=32,
    ZAFLAGS_SUPPORTS_VERIFICATION=64,
    ZAFLAGS_UNC_AS_INTRANET=128
} __MIDL_IInternetZoneManager_0002;

typedef enum __MIDL_IInternetZoneManager_0002 ZAFLAGS;

typedef struct _tagHIT_LOGGING_INFO _tagHIT_LOGGING_INFO, *P_tagHIT_LOGGING_INFO;

typedef struct _tagHIT_LOGGING_INFO HIT_LOGGING_INFO;

struct _tagHIT_LOGGING_INFO {
    DWORD dwStructSize;
    LPSTR lpszLoggedUrlName;
    SYSTEMTIME StartTime;
    SYSTEMTIME EndTime;
    LPSTR lpszExtendedInfo;
};

typedef struct IInternetSecurityManager IInternetSecurityManager, *PIInternetSecurityManager;

typedef struct IInternetSecurityManagerVtbl IInternetSecurityManagerVtbl, *PIInternetSecurityManagerVtbl;

typedef struct IInternetSecurityMgrSite IInternetSecurityMgrSite, *PIInternetSecurityMgrSite;

typedef struct IInternetSecurityMgrSiteVtbl IInternetSecurityMgrSiteVtbl, *PIInternetSecurityMgrSiteVtbl;

struct IInternetSecurityManager {
    struct IInternetSecurityManagerVtbl *lpVtbl;
};

struct IInternetSecurityManagerVtbl {
    HRESULT (*QueryInterface)(struct IInternetSecurityManager *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSecurityManager *);
    ULONG (*Release)(struct IInternetSecurityManager *);
    HRESULT (*SetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite *);
    HRESULT (*GetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite **);
    HRESULT (*MapUrlToZone)(struct IInternetSecurityManager *, LPCWSTR, DWORD *, DWORD);
    HRESULT (*GetSecurityId)(struct IInternetSecurityManager *, LPCWSTR, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (*ProcessUrlAction)(struct IInternetSecurityManager *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (*QueryCustomPolicy)(struct IInternetSecurityManager *, LPCWSTR, GUID *, BYTE **, DWORD *, BYTE *, DWORD, DWORD);
    HRESULT (*SetZoneMapping)(struct IInternetSecurityManager *, DWORD, LPCWSTR, DWORD);
    HRESULT (*GetZoneMappings)(struct IInternetSecurityManager *, DWORD, struct IEnumString **, DWORD);
};

struct IInternetSecurityMgrSite {
    struct IInternetSecurityMgrSiteVtbl *lpVtbl;
};

struct IInternetSecurityMgrSiteVtbl {
    HRESULT (*QueryInterface)(struct IInternetSecurityMgrSite *, IID *, void **);
    ULONG (*AddRef)(struct IInternetSecurityMgrSite *);
    ULONG (*Release)(struct IInternetSecurityMgrSite *);
    HRESULT (*GetWindow)(struct IInternetSecurityMgrSite *, HWND *);
    HRESULT (*EnableModeless)(struct IInternetSecurityMgrSite *, BOOL);
};

typedef struct tagRemFORMATETC tagRemFORMATETC, *PtagRemFORMATETC;

typedef struct tagRemFORMATETC RemFORMATETC;

struct tagRemFORMATETC {
    DWORD cfFormat;
    DWORD ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

typedef struct IInternetProtocolInfo IInternetProtocolInfo, *PIInternetProtocolInfo;

typedef struct IInternetProtocolInfoVtbl IInternetProtocolInfoVtbl, *PIInternetProtocolInfoVtbl;

typedef enum _tagQUERYOPTION {
    QUERY_EXPIRATION_DATE=1,
    QUERY_TIME_OF_LAST_CHANGE=2,
    QUERY_CONTENT_ENCODING=3,
    QUERY_CONTENT_TYPE=4,
    QUERY_REFRESH=5,
    QUERY_RECOMBINE=6,
    QUERY_CAN_NAVIGATE=7,
    QUERY_USES_NETWORK=8,
    QUERY_IS_CACHED=9,
    QUERY_IS_INSTALLEDENTRY=10,
    QUERY_IS_CACHED_OR_MAPPED=11,
    QUERY_USES_CACHE=12,
    QUERY_IS_SECURE=13,
    QUERY_IS_SAFE=14
} _tagQUERYOPTION;

typedef enum _tagQUERYOPTION QUERYOPTION;

struct IInternetProtocolInfoVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolInfo *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolInfo *);
    ULONG (*Release)(struct IInternetProtocolInfo *);
    HRESULT (*ParseUrl)(struct IInternetProtocolInfo *, LPCWSTR, PARSEACTION, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (*CombineUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (*CompareUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (*QueryInfo)(struct IInternetProtocolInfo *, LPCWSTR, QUERYOPTION, DWORD, LPVOID, DWORD, DWORD *, DWORD);
};

struct IInternetProtocolInfo {
    struct IInternetProtocolInfoVtbl *lpVtbl;
};

typedef enum __MIDL_IInternetZoneManager_0001 {
    MAX_ZONE_DESCRIPTION=200,
    MAX_ZONE_PATH=260
} __MIDL_IInternetZoneManager_0001;

typedef struct IPersistMoniker IPersistMoniker, *PIPersistMoniker;

typedef struct IPersistMonikerVtbl IPersistMonikerVtbl, *PIPersistMonikerVtbl;

struct IPersistMoniker {
    struct IPersistMonikerVtbl *lpVtbl;
};

struct IPersistMonikerVtbl {
    HRESULT (*QueryInterface)(struct IPersistMoniker *, IID *, void **);
    ULONG (*AddRef)(struct IPersistMoniker *);
    ULONG (*Release)(struct IPersistMoniker *);
    HRESULT (*GetClassID)(struct IPersistMoniker *, CLSID *);
    HRESULT (*IsDirty)(struct IPersistMoniker *);
    HRESULT (*Load)(struct IPersistMoniker *, BOOL, struct IMoniker *, LPBC, DWORD);
    HRESULT (*Save)(struct IPersistMoniker *, struct IMoniker *, LPBC, BOOL);
    HRESULT (*SaveCompleted)(struct IPersistMoniker *, struct IMoniker *, LPBC);
    HRESULT (*GetCurMoniker)(struct IPersistMoniker *, struct IMoniker **);
};

typedef struct ICodeInstall ICodeInstall, *PICodeInstall;

typedef struct ICodeInstall *LPCODEINSTALL;

typedef struct ICodeInstallVtbl ICodeInstallVtbl, *PICodeInstallVtbl;

struct ICodeInstallVtbl {
    HRESULT (*QueryInterface)(struct ICodeInstall *, IID *, void **);
    ULONG (*AddRef)(struct ICodeInstall *);
    ULONG (*Release)(struct ICodeInstall *);
    HRESULT (*GetWindow)(struct ICodeInstall *, GUID *, HWND *);
    HRESULT (*OnCodeInstallProblem)(struct ICodeInstall *, ULONG, LPCWSTR, LPCWSTR, DWORD);
};

struct ICodeInstall {
    struct ICodeInstallVtbl *lpVtbl;
};

typedef struct IInternetProtocolSinkStackable IInternetProtocolSinkStackable, *PIInternetProtocolSinkStackable;

typedef struct IInternetProtocolSinkStackableVtbl IInternetProtocolSinkStackableVtbl, *PIInternetProtocolSinkStackableVtbl;

struct IInternetProtocolSinkStackableVtbl {
    HRESULT (*QueryInterface)(struct IInternetProtocolSinkStackable *, IID *, void **);
    ULONG (*AddRef)(struct IInternetProtocolSinkStackable *);
    ULONG (*Release)(struct IInternetProtocolSinkStackable *);
    HRESULT (*SwitchSink)(struct IInternetProtocolSinkStackable *, struct IInternetProtocolSink *);
    HRESULT (*CommitSwitch)(struct IInternetProtocolSinkStackable *);
    HRESULT (*RollbackSwitch)(struct IInternetProtocolSinkStackable *);
};

struct IInternetProtocolSinkStackable {
    struct IInternetProtocolSinkStackableVtbl *lpVtbl;
};

typedef enum __MIDL_IInternetSecurityManager_0001 {
    PUAF_DEFAULT=0,
    PUAF_NOUI=1,
    PUAF_ISFILE=2,
    PUAF_WARN_IF_DENIED=4,
    PUAF_FORCEUI_FOREGROUND=8,
    PUAF_CHECK_TIFS=16,
    PUAF_DONTCHECKBOXINDIALOG=32,
    PUAF_TRUSTED=64,
    PUAF_ACCEPT_WILDCARD_SCHEME=128,
    PUAF_ENFORCERESTRICTED=256
} __MIDL_IInternetSecurityManager_0001;

typedef enum __MIDL_IInternetSecurityManager_0001 PUAF;

typedef struct ISoftDistExt ISoftDistExt, *PISoftDistExt;

typedef struct ISoftDistExtVtbl ISoftDistExtVtbl, *PISoftDistExtVtbl;

typedef struct IXMLElement IXMLElement, *PIXMLElement;

typedef struct _tagSOFTDISTINFO *LPSOFTDISTINFO;

typedef struct _tagCODEBASEHOLD _tagCODEBASEHOLD, *P_tagCODEBASEHOLD;

typedef struct _tagCODEBASEHOLD *LPCODEBASEHOLD;

typedef struct IXMLElementVtbl IXMLElementVtbl, *PIXMLElementVtbl;

typedef struct IXMLElementCollection IXMLElementCollection, *PIXMLElementCollection;

typedef struct IXMLElementCollectionVtbl IXMLElementCollectionVtbl, *PIXMLElementCollectionVtbl;

struct IXMLElementCollection {
    struct IXMLElementCollectionVtbl *lpVtbl;
};

struct IXMLElement {
    struct IXMLElementVtbl *lpVtbl;
};

struct ISoftDistExtVtbl {
    HRESULT (*QueryInterface)(struct ISoftDistExt *, IID *, void **);
    ULONG (*AddRef)(struct ISoftDistExt *);
    ULONG (*Release)(struct ISoftDistExt *);
    HRESULT (*ProcessSoftDist)(struct ISoftDistExt *, LPCWSTR, struct IXMLElement *, LPSOFTDISTINFO);
    HRESULT (*GetFirstCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (*GetNextCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (*AsyncInstallDistributionUnit)(struct ISoftDistExt *, struct IBindCtx *, LPVOID, DWORD, LPCODEBASEHOLD);
};

struct IXMLElementVtbl {
    HRESULT (*QueryInterface)(struct IXMLElement *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElement *);
    ULONG (*Release)(struct IXMLElement *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElement *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElement *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_tagName)(struct IXMLElement *, BSTR *);
    HRESULT (*put_tagName)(struct IXMLElement *, BSTR);
    HRESULT (*get_parent)(struct IXMLElement *, struct IXMLElement **);
    HRESULT (*setAttribute)(struct IXMLElement *, BSTR, VARIANT);
    HRESULT (*getAttribute)(struct IXMLElement *, BSTR, VARIANT *);
    HRESULT (*removeAttribute)(struct IXMLElement *, BSTR);
    HRESULT (*get_children)(struct IXMLElement *, struct IXMLElementCollection **);
    HRESULT (*get_type)(struct IXMLElement *, long *);
    HRESULT (*get_text)(struct IXMLElement *, BSTR *);
    HRESULT (*put_text)(struct IXMLElement *, BSTR);
    HRESULT (*addChild)(struct IXMLElement *, struct IXMLElement *, long, long);
    HRESULT (*removeChild)(struct IXMLElement *, struct IXMLElement *);
};

struct _tagCODEBASEHOLD {
    ULONG cbSize;
    LPWSTR szDistUnit;
    LPWSTR szCodeBase;
    DWORD dwVersionMS;
    DWORD dwVersionLS;
    DWORD dwStyle;
};

struct IXMLElementCollectionVtbl {
    HRESULT (*QueryInterface)(struct IXMLElementCollection *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElementCollection *);
    ULONG (*Release)(struct IXMLElementCollection *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElementCollection *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElementCollection *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElementCollection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElementCollection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*put_length)(struct IXMLElementCollection *, long);
    HRESULT (*get_length)(struct IXMLElementCollection *, long *);
    HRESULT (*get__newEnum)(struct IXMLElementCollection *, struct IUnknown **);
    HRESULT (*item)(struct IXMLElementCollection *, VARIANT, VARIANT, struct IDispatch **);
};

struct ISoftDistExt {
    struct ISoftDistExtVtbl *lpVtbl;
};

typedef struct IInternetThreadSwitch *LPIINTERNETTHREADSWITCH;

typedef struct IBindProtocol IBindProtocol, *PIBindProtocol;

typedef struct IBindProtocolVtbl IBindProtocolVtbl, *PIBindProtocolVtbl;

struct IBindProtocolVtbl {
    HRESULT (*QueryInterface)(struct IBindProtocol *, IID *, void **);
    ULONG (*AddRef)(struct IBindProtocol *);
    ULONG (*Release)(struct IBindProtocol *);
    HRESULT (*CreateBinding)(struct IBindProtocol *, LPCWSTR, struct IBindCtx *, struct IBinding **);
};

struct IBindProtocol {
    struct IBindProtocolVtbl *lpVtbl;
};

typedef struct IInternet IInternet, *PIInternet;

typedef struct IInternetVtbl IInternetVtbl, *PIInternetVtbl;

struct IInternet {
    struct IInternetVtbl *lpVtbl;
};

struct IInternetVtbl {
    HRESULT (*QueryInterface)(struct IInternet *, IID *, void **);
    ULONG (*AddRef)(struct IInternet *);
    ULONG (*Release)(struct IInternet *);
};

typedef struct IMonikerProp IMonikerProp, *PIMonikerProp;

typedef struct IMonikerPropVtbl IMonikerPropVtbl, *PIMonikerPropVtbl;

typedef enum __MIDL_IMonikerProp_0001 MONIKERPROPERTY;

struct IMonikerProp {
    struct IMonikerPropVtbl *lpVtbl;
};

struct IMonikerPropVtbl {
    HRESULT (*QueryInterface)(struct IMonikerProp *, IID *, void **);
    ULONG (*AddRef)(struct IMonikerProp *);
    ULONG (*Release)(struct IMonikerProp *);
    HRESULT (*PutProperty)(struct IMonikerProp *, MONIKERPROPERTY, LPCWSTR);
};

typedef struct tagRemFORMATETC *LPREMFORMATETC;

typedef struct IInternetProtocolSinkStackable *LPIINTERNETPROTOCOLSINKStackable;

typedef enum __MIDL_IInternetSecurityManager_0002 {
    SZM_CREATE=0,
    SZM_DELETE=1
} __MIDL_IInternetSecurityManager_0002;

typedef enum __MIDL_IInternetSecurityManager_0002 SZM_FLAGS;

typedef struct IInternetSession *LPIINTERNETSESSION;

typedef struct IDataFilter *LPDATAFILTER;

typedef struct IInternetPriority IInternetPriority, *PIInternetPriority;

typedef struct IInternetPriorityVtbl IInternetPriorityVtbl, *PIInternetPriorityVtbl;

struct IInternetPriority {
    struct IInternetPriorityVtbl *lpVtbl;
};

struct IInternetPriorityVtbl {
    HRESULT (*QueryInterface)(struct IInternetPriority *, IID *, void **);
    ULONG (*AddRef)(struct IInternetPriority *);
    ULONG (*Release)(struct IInternetPriority *);
    HRESULT (*SetPriority)(struct IInternetPriority *, LONG);
    HRESULT (*GetPriority)(struct IInternetPriority *, LONG *);
};

typedef struct IBindHost IBindHost, *PIBindHost;

typedef struct IBindHost *LPBINDHOST;

typedef struct IBindHostVtbl IBindHostVtbl, *PIBindHostVtbl;

struct IBindHostVtbl {
    HRESULT (*QueryInterface)(struct IBindHost *, IID *, void **);
    ULONG (*AddRef)(struct IBindHost *);
    ULONG (*Release)(struct IBindHost *);
    HRESULT (*CreateMoniker)(struct IBindHost *, LPOLESTR, struct IBindCtx *, struct IMoniker **, DWORD);
    HRESULT (*MonikerBindToStorage)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void **);
    HRESULT (*MonikerBindToObject)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void **);
};

struct IBindHost {
    struct IBindHostVtbl *lpVtbl;
};

typedef enum __MIDL_ICodeInstall_0001 {
    CIP_DISK_FULL=0,
    CIP_ACCESS_DENIED=1,
    CIP_NEWER_VERSION_EXISTS=2,
    CIP_OLDER_VERSION_EXISTS=3,
    CIP_NAME_CONFLICT=4,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING=5,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT=6,
    CIP_UNSAFE_TO_ABORT=7,
    CIP_NEED_REBOOT=8
} __MIDL_ICodeInstall_0001;

typedef struct IBindProtocol *LPBINDPROTOCOL;

typedef enum __MIDL_IBindStatusCallback_0004 {
    URL_ENCODING_NONE=0,
    URL_ENCODING_ENABLE_UTF8=268435456,
    URL_ENCODING_DISABLE_UTF8=536870912
} __MIDL_IBindStatusCallback_0004;

typedef enum __MIDL_IBindStatusCallback_0004 URL_ENCODING;

typedef struct _tagStartParam _tagStartParam, *P_tagStartParam;

typedef struct _tagStartParam StartParam;

struct _tagStartParam {
    IID iid;
    struct IBindCtx *pIBindCtx;
    struct IUnknown *pItf;
};

typedef struct IInternetZoneManager *LPURLZONEMANAGER;

typedef enum tagURLTEMPLATE {
    URLTEMPLATE_CUSTOM=0,
    URLTEMPLATE_LOW=65536,
    URLTEMPLATE_PREDEFINED_MIN=65536,
    URLTEMPLATE_MEDLOW=66816,
    URLTEMPLATE_MEDIUM=69632,
    URLTEMPLATE_HIGH=73728,
    URLTEMPLATE_PREDEFINED_MAX=131072
} tagURLTEMPLATE;

typedef enum tagURLTEMPLATE URLTEMPLATE;

typedef struct IPersistMoniker *LPPERSISTMONIKER;

typedef struct IWrappedProtocol *LPIWRAPPEDPROTOCOL;

typedef struct _REMSECURITY_ATTRIBUTES *PREMSECURITY_ATTRIBUTES;

typedef struct _ZONEATTRIBUTES *LPZONEATTRIBUTES;

typedef enum tagURLZONE {
    URLZONE_LOCAL_MACHINE=0,
    URLZONE_PREDEFINED_MIN=0,
    URLZONE_INTRANET=1,
    URLZONE_TRUSTED=2,
    URLZONE_INTERNET=3,
    URLZONE_UNTRUSTED=4,
    URLZONE_PREDEFINED_MAX=999,
    URLZONE_USER_MIN=1000,
    URLZONE_USER_MAX=10000
} tagURLZONE;

typedef enum tagURLZONE URLZONE;

typedef enum __MIDL_ICodeInstall_0001 CIP_STATUS;

typedef enum _tagPSUACTION {
    PSU_DEFAULT=1,
    PSU_SECURITY_URL_ONLY=2
} _tagPSUACTION;

typedef enum _tagPSUACTION PSUACTION;

typedef struct IInternetProtocolRoot *LPIINTERNETPROTOCOLROOT;

typedef struct IAuthenticate IAuthenticate, *PIAuthenticate;

typedef struct IAuthenticateVtbl IAuthenticateVtbl, *PIAuthenticateVtbl;

struct IAuthenticate {
    struct IAuthenticateVtbl *lpVtbl;
};

struct IAuthenticateVtbl {
    HRESULT (*QueryInterface)(struct IAuthenticate *, IID *, void **);
    ULONG (*AddRef)(struct IAuthenticate *);
    ULONG (*Release)(struct IAuthenticate *);
    HRESULT (*Authenticate)(struct IAuthenticate *, HWND *, LPWSTR *, LPWSTR *);
};

typedef enum tagBINDSTRING {
    BINDSTRING_HEADERS=1,
    BINDSTRING_ACCEPT_MIMES=2,
    BINDSTRING_EXTRA_URL=3,
    BINDSTRING_LANGUAGE=4,
    BINDSTRING_USERNAME=5,
    BINDSTRING_PASSWORD=6,
    BINDSTRING_UA_PIXELS=7,
    BINDSTRING_UA_COLOR=8,
    BINDSTRING_OS=9,
    BINDSTRING_USER_AGENT=10,
    BINDSTRING_ACCEPT_ENCODINGS=11,
    BINDSTRING_POST_COOKIE=12,
    BINDSTRING_POST_DATA_MIME=13,
    BINDSTRING_URL=14,
    BINDSTRING_IID=15,
    BINDSTRING_FLAG_BIND_TO_OBJECT=16,
    BINDSTRING_PTR_BIND_CONTEXT=17
} tagBINDSTRING;

typedef enum tagBINDSTRING BINDSTRING;

typedef struct IInternetProtocolInfo *LPIINTERNETPROTOCOLINFO;

typedef struct IInternetBindInfo *LPIINTERNETBINDINFO;

typedef struct IEncodingFilterFactory *LPENCODINGFILTERFACTORY;

typedef struct IInternet *LPIINTERNET;

typedef struct _tagHIT_LOGGING_INFO *LPHIT_LOGGING_INFO;

typedef struct IInternetProtocol *LPIINTERNETPROTOCOL;

typedef enum _tagPI_FLAGS PI_FLAGS;

typedef struct _REMSECURITY_ATTRIBUTES *LPREMSECURITY_ATTRIBUTES;

typedef struct _tagSOFTDISTINFO SOFTDISTINFO;

typedef enum tagBINDSTATUS {
    BINDSTATUS_FINDINGRESOURCE=1,
    BINDSTATUS_CONNECTING=2,
    BINDSTATUS_REDIRECTING=3,
    BINDSTATUS_BEGINDOWNLOADDATA=4,
    BINDSTATUS_DOWNLOADINGDATA=5,
    BINDSTATUS_ENDDOWNLOADDATA=6,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS=7,
    BINDSTATUS_INSTALLINGCOMPONENTS=8,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS=9,
    BINDSTATUS_USINGCACHEDCOPY=10,
    BINDSTATUS_SENDINGREQUEST=11,
    BINDSTATUS_CLASSIDAVAILABLE=12,
    BINDSTATUS_MIMETYPEAVAILABLE=13,
    BINDSTATUS_CACHEFILENAMEAVAILABLE=14,
    BINDSTATUS_BEGINSYNCOPERATION=15,
    BINDSTATUS_ENDSYNCOPERATION=16,
    BINDSTATUS_BEGINUPLOADDATA=17,
    BINDSTATUS_UPLOADINGDATA=18,
    BINDSTATUS_ENDUPLOADDATA=19,
    BINDSTATUS_PROTOCOLCLASSID=20,
    BINDSTATUS_ENCODING=21,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE=22,
    BINDSTATUS_CLASSINSTALLLOCATION=23,
    BINDSTATUS_DECODING=24,
    BINDSTATUS_LOADINGMIMEHANDLER=25,
    BINDSTATUS_CONTENTDISPOSITIONATTACH=26,
    BINDSTATUS_FILTERREPORTMIMETYPE=27,
    BINDSTATUS_CLSIDCANINSTANTIATE=28,
    BINDSTATUS_IUNKNOWNAVAILABLE=29,
    BINDSTATUS_DIRECTBIND=30,
    BINDSTATUS_RAWMIMETYPE=31,
    BINDSTATUS_PROXYDETECTING=32,
    BINDSTATUS_ACCEPTRANGES=33,
    BINDSTATUS_COOKIE_SENT=34,
    BINDSTATUS_COMPACT_POLICY_RECEIVED=35,
    BINDSTATUS_COOKIE_SUPPRESSED=36,
    BINDSTATUS_COOKIE_STATE_UNKNOWN=37,
    BINDSTATUS_COOKIE_STATE_ACCEPT=38,
    BINDSTATUS_COOKIE_STATE_REJECT=39,
    BINDSTATUS_COOKIE_STATE_PROMPT=40,
    BINDSTATUS_COOKIE_STATE_LEASH=41,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE=42,
    BINDSTATUS_POLICY_HREF=43,
    BINDSTATUS_P3P_HEADER=44,
    BINDSTATUS_SESSION_COOKIE_RECEIVED=45,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED=46,
    BINDSTATUS_SESSION_COOKIES_ALLOWED=47
} tagBINDSTATUS;

typedef enum tagBINDSTATUS BINDSTATUS;

typedef struct IInternetPriority *LPIINTERNETPRIORITY;

typedef struct IWinInetInfo *LPWININETINFO;

typedef struct IHttpSecurity *LPHTTPSECURITY;

typedef struct IBinding *LPBINDING;

typedef struct CONFIRMSAFETY CONFIRMSAFETY, *PCONFIRMSAFETY;

struct CONFIRMSAFETY {
    CLSID clsid;
    struct IUnknown *pUnk;
    DWORD dwFlags;
};

typedef struct IHttpNegotiate2 *LPHTTPNEGOTIATE2;

typedef struct IAuthenticate *LPAUTHENTICATION;

typedef struct IWinInetHttpInfo *LPWININETHTTPINFO;

typedef enum _tagOIBDG_FLAGS OIBDG_FLAGS;

typedef struct IMonikerProp *LPMONIKERPROP;

typedef struct _tagCODEBASEHOLD CODEBASEHOLD;

#define URLACTION_HTML_MAX 6143

#define FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK 4

#define URLACTION_NETWORK_MIN 6656

#define URLACTION_CREDENTIALS_USE 6656

#define URLACTION_COOKIES_THIRD_PARTY 6661

#define INET_E_DEFAULT_ACTION 2148270097

#define SOFTDIST_FLAG_USAGE_AUTOINSTALL 4

#define URLACTION_SCRIPT_JAVA_USE 5122

#define URLACTION_ACTIVEX_RUN 4608

#define URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS 7426

#define URLACTION_NETWORK_CURR_MAX 6672

#define S_ASYNCHRONOUS 262632

#define INET_E_CANNOT_CONNECT 2148270084

#define URLACTION_HTML_FONT_DOWNLOAD 5636

#define CF_NULL 0

#define URLPOLICY_JAVA_HIGH 65536

#define URLPOLICY_LOG_ON_DISALLOW 128

#define PROTOCOLFLAG_NO_PICS_CHECK 1

#define URLPOLICY_DONTCHECKDLGBOX 256

#define URLACTION_COOKIES_ENABLED 6672

#define SOFTDIST_ADSTATE_INSTALLED 3

#define INET_E_QUERYOPTION_UNKNOWN 2148270099

#define INET_E_RESULT_DISPATCHED 2148270592

#define SOFTDIST_FLAG_DELETE_SUBSCRIPTION 8

#define URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY 4610

#define SOFTDIST_FLAG_USAGE_PRECACHE 2

#define INET_E_USE_DEFAULT_SETTING 2148270098

#define URLACTION_ACTIVEX_MIN 4608

#define URLACTION_ACTIVEX_CURR_MAX 4619

#define URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS 7428

#define URL_MK_NO_CANONICALIZE 2

#define URLPOLICY_CREDENTIALS_MUST_PROMPT_USER 65536

#define URLACTION_SHELL_FILE_DOWNLOAD 6147

#define URLACTION_HTML_SUBFRAME_NAVIGATE 5639

#define URLACTION_SCRIPT_MIN 5120

#define INET_E_SECURITY_PROBLEM 2148270094

#define URLACTION_SHELL_INSTALL_DTITEMS 6144

#define URLACTION_HTML_SUBMIT_FORMS 5633

#define URLACTION_ACTIVEX_TREATASUNTRUSTED 4613

#define URLACTION_SCRIPT_MAX 5631

#define FIEF_FLAG_FORCE_JITUI 1

#define URLPOLICY_DISALLOW 3

#define SOFTDIST_FLAG_USAGE_EMAIL 1

#define INET_E_OBJECT_NOT_FOUND 2148270086

#define INET_E_CANNOT_LOCK_REQUEST 2148270102

#define URLPOLICY_NOTIFY_ON_DISALLOW 32

#define INET_E_CANNOT_LOAD_DATA 2148270095

#define URLMON_OPTION_USERAGENT_REFRESH 268435458

#define URLPOLICY_JAVA_PROHIBIT 0

#define URLACTION_DOWNLOAD_MAX 4607

#define INET_E_ERROR_FIRST 2148270082

#define URLACTION_INFODELIVERY_NO_EDITING_CHANNELS 7425

#define URLACTION_INFODELIVERY_NO_ADDING_CHANNELS 7424

#define URLACTION_CHANNEL_SOFTDIST_MAX 7935

#define URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT 131072

#define URLPOLICY_ACTIVEX_CHECK_LIST 65536

#define URLPOLICY_NOTIFY_ON_ALLOW 16

#define URLACTION_SHELL_WEBVIEW_VERB 6149

#define MUTZ_ENFORCERESTRICTED 256

#define CFSTR_MIME_NULL 0

#define INET_E_DOWNLOAD_FAILURE 2148270088

#define URLACTION_JAVA_MAX 7423

#define FMFD_DEFAULT 0

#define URLACTION_HTML_SUBMIT_FORMS_FROM 5634

#define URLACTION_INFODELIVERY_MAX 7679

#define URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY 4609

#define URLACTION_JAVA_PERMISSIONS 7168

#define URLPOLICY_CREDENTIALS_SILENT_LOGON_OK 0

#define URLACTION_HTML_MIXED_CONTENT 5641

#define URLOSTRM_USECACHEDCOPY 2

#define SOFTDIST_ADSTATE_DOWNLOADED 2

#define URLACTION_COOKIES_SESSION 6659

#define URLACTION_CLIENT_CERT_PROMPT 6660

#define INET_E_CANNOT_INSTANTIATE_OBJECT 2148270096

#define URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL 196608

#define FIEF_FLAG_PEEK 2

#define WININETINFO_OPTION_LOCK_HANDLE 65534

#define URLACTION_SHELL_MIN 6144

#define INET_E_INVALID_REQUEST 2148270092

#define URL_MK_UNIFORM 1

#define URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS 7427

#define URLPOLICY_QUERY 1

#define URLACTION_JAVA_CURR_MAX 7168

#define URLACTION_CHANNEL_SOFTDIST_PERMISSIONS 7685

#define MUTZ_NOSAVEDFILECHECK 1

#define URLACTION_CROSS_DOMAIN_DATA 5126

#define URLACTION_HTML_SUBMIT_FORMS_TO 5635

#define URLPOLICY_CHANNEL_SOFTDIST_PRECACHE 131072

#define INET_E_NO_SESSION 2148270083

#define URLACTION_NETWORK_MAX 7167

#define INVALID_P_ROOT_SECURITY_ID -1

#define URLACTION_INFODELIVERY_CURR_MAX 7430

#define INET_E_CODE_DOWNLOAD_DECLINED 2148270336

#define URLOSTRM_USECACHEDCOPY_ONLY 1

#define SOFTDIST_ADSTATE_NONE 0

#define URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT 65536

#define URLACTION_HTML_MIN 5632

#define URLMON_OPTION_USERAGENT 268435457

#define INET_E_INVALID_URL 2148270082

#define INET_E_REDIRECT_FAILED 2148270100

#define URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS 7429

#define URLACTION_DOWNLOAD_SIGNED_ACTIVEX 4097

#define INET_E_RESOURCE_NOT_FOUND 2148270085

#define SOFTDIST_ADSTATE_AVAILABLE 1

#define INET_E_DATA_NOT_AVAILABLE 2148270087

#define INET_E_UNKNOWN_PROTOCOL 2148270093

#define URLACTION_SCRIPT_OVERRIDE_SAFETY 5121

#define INET_E_TERMINATED_BIND 2148270104

#define INET_E_REDIRECT_TO_DIR 2148270101

#define URLOSTRM_GETNEWESTVERSION 3

#define URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING 7430

#define URLPOLICY_AUTHENTICATE_MUTUAL_ONLY 196608

#define URLACTION_SCRIPT_CURR_MAX 5129

#define URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE 65536

#define URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX 4100

#define URLACTION_HTML_META_REFRESH 5640

#define MK_S_ASYNCHRONOUS 262632

#define INET_E_CANNOT_REPLACE_SFP_FILE 2148270848

#define URLACTION_SCRIPT_SAFE_ACTIVEX 5125

#define URLACTION_AUTHENTICATE_CLIENT 6657

#define URLACTION_HTML_JAVA_RUN 5637

#define URLACTION_ACTIVEX_MAX 5119

#define INET_E_ERROR_LAST 2148271361

#define FMFD_URLASFILENAME 1

#define URLACTION_SHELL_MOVE_OR_COPY 6146

#define INET_E_AUTHENTICATION_REQUIRED 2148270089

#define URLACTION_JAVA_MIN 7168

#define URLACTION_COOKIES_SESSION_THIRD_PARTY 6662

#define URLPOLICY_LOG_ON_ALLOW 64

#define URLACTION_CHANNEL_SOFTDIST_MIN 7680

#define URLPOLICY_JAVA_MEDIUM 131072

#define URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY 4611

#define URLACTION_DOWNLOAD_CURR_MAX 4100

#define CONFIRMSAFETYACTION_LOADOBJECT 1

#define URLPOLICY_JAVA_CUSTOM 8388608

#define URLACTION_SHELL_CURR_MAX 6159

#define URLPOLICY_JAVA_LOW 196608

#define URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY 196608

#define URLACTION_SCRIPT_PASTE 5127

#define INET_E_USE_DEFAULT_PROTOCOLHANDLER 2148270097

#define INET_E_CONNECTION_TIMEOUT 2148270091

#define URLACTION_SCRIPT_RUN 5120

#define URLACTION_MIN 4096

#define URLACTION_SHELL_VERB 6148

#define URLACTION_HTML_USERDATA_SAVE 5638

#define INET_E_NO_VALID_MEDIA 2148270090

#define MAX_SIZE_SECURITY_ID 512

#define URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY 4612

#define INET_E_REDIRECTING 2148270100

#define INET_E_USE_EXTEND_BINDING 2148270103

#define URL_MK_LEGACY 0

#define URLACTION_INFODELIVERY_MIN 7424

#define URLACTION_COOKIES 6658

#define URLACTION_DOWNLOAD_MIN 4096

#define URLPOLICY_MASK_PERMISSIONS 15

#define URLACTION_SHELL_MAX 6655

#define URLPOLICY_ALLOW 0

#define URLPOLICY_AUTHENTICATE_CLEARTEXT_OK 0

#define MKSYS_URLMONIKER 6

#define URLMON_OPTION_URL_ENCODING 268435460

typedef struct HGLRC__ HGLRC__, *PHGLRC__;

typedef struct HGLRC__ *HGLRC;

struct HGLRC__ {
    int unused;
};

typedef struct HFONT__ HFONT__, *PHFONT__;

struct HFONT__ {
    int unused;
};

typedef struct HUMPD__ HUMPD__, *PHUMPD__;

struct HUMPD__ {
    int unused;
};

typedef struct HBRUSH__ HBRUSH__, *PHBRUSH__;

struct HBRUSH__ {
    int unused;
};

typedef struct tagPOINT *PPOINT;

typedef struct HSTR__ HSTR__, *PHSTR__;

struct HSTR__ {
    int unused;
};

typedef struct HPEN__ HPEN__, *PHPEN__;

struct HPEN__ {
    int unused;
};

typedef struct HCOLORSPACE__ HCOLORSPACE__, *PHCOLORSPACE__;

struct HCOLORSPACE__ {
    int unused;
};

typedef struct HDESK__ HDESK__, *PHDESK__;

struct HDESK__ {
    int unused;
};

typedef struct HWINSTA__ HWINSTA__, *PHWINSTA__;

typedef struct HWINSTA__ *HWINSTA;

struct HWINSTA__ {
    int unused;
};

typedef struct HWINEVENTHOOK__ HWINEVENTHOOK__, *PHWINEVENTHOOK__;

struct HWINEVENTHOOK__ {
    int unused;
};

typedef struct _RECTL *LPRECTL;

typedef struct HACCEL__ HACCEL__, *PHACCEL__;

typedef struct HACCEL__ *HACCEL;

struct HACCEL__ {
    int unused;
};

typedef struct HRSRC__ HRSRC__, *PHRSRC__;

typedef struct HRSRC__ *HRSRC;

struct HRSRC__ {
    int unused;
};

typedef struct HRGN__ HRGN__, *PHRGN__;

struct HRGN__ {
    int unused;
};

typedef HICON HCURSOR;

typedef struct HFONT__ *HFONT;

typedef struct HHOOK__ HHOOK__, *PHHOOK__;

struct HHOOK__ {
    int unused;
};

typedef struct tagPOINTS *LPPOINTS;

typedef struct tagRECT *PRECT;

typedef struct HUMPD__ *HUMPD;

typedef struct tagSIZE *PSIZE;

typedef struct HSTR__ *HSTR;

typedef struct HDESK__ *HDESK;

typedef struct HCOLORSPACE__ *HCOLORSPACE;

typedef struct tagRECT *NPRECT;

typedef struct tagPOINT *LPPOINT;

typedef struct HPALETTE__ HPALETTE__, *PHPALETTE__;

struct HPALETTE__ {
    int unused;
};

typedef struct HRGN__ *HRGN;

typedef struct HHOOK__ *HHOOK;

typedef struct HBRUSH__ *HBRUSH;

typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;

typedef struct HPEN__ *HPEN;

typedef struct HPALETTE__ *HPALETTE;

typedef struct tagSIZE *LPSIZE;

typedef struct HMENU__ HMENU__, *PHMENU__;

typedef struct HMENU__ *HMENU;

struct HMENU__ {
    int unused;
};

typedef struct _RECTL *PRECTL;

typedef struct tagPOINTS *PPOINTS;

typedef HKEY *PHKEY;

typedef struct tagPOINT *NPPOINT;

typedef struct _POINTL *PPOINTL;

#define DM_MODIFY 8

#define DC_TRUETYPE 15

#define DM_COPY 2

#define TRUE 1

#define DC_PAPERSIZE 3

#define DC_ENUMRESOLUTIONS 13

#define DC_ORIENTATION 17

#define DC_DUPLEX 7

#define NULL 0

#define DC_MINEXTENT 4

#define DM_PROMPT 4

#define DC_VERSION 10

#define DC_EXTRA 9

#define DM_OUT_DEFAULT 1

#define HFILE_ERROR -1

#define DC_BINNAMES 12

#define DC_MAXEXTENT 5

#define DC_BINS 6

#define DM_IN_BUFFER 8

#define DC_DRIVER 11

#define STRICT 1

#define DC_SIZE 8

#define DM_UPDATE 1

#define DC_COPIES 18

#define FALSE 0

#define MAX_PATH 260

#define DC_FILEDEPENDENCIES 14

#define DC_PAPERS 2

#define DM_OUT_BUFFER 2

#define DC_FIELDS 1

#define DM_IN_PROMPT 4

#define DC_PAPERNAMES 16

#define PDERR_DEFAULTDIFFERENT 4108

#define CDERR_NOTEMPLATE 3

#define CDERR_NOHINSTANCE 4

#define PDERR_NODEFAULTPRN 4104

#define CDERR_GENERALCODES 0

#define CDERR_REGISTERMSGFAIL 12

#define CDERR_STRUCTSIZE 1

#define PDERR_DNDMMISMATCH 4105

#define PDERR_PRINTERNOTFOUND 4107

#define PDERR_CREATEICFAILURE 4106

#define FRERR_FINDREPLACECODES 16384

#define CFERR_NOFONTS 8193

#define CDERR_FINDRESFAILURE 6

#define FNERR_INVALIDFILENAME 12290

#define CDERR_MEMALLOCFAILURE 9

#define CDERR_DIALOGFAILURE 65535

#define PDERR_PARSEFAILURE 4098

#define PDERR_GETDEVMODEFAIL 4101

#define PDERR_SETUPFAILURE 4097

#define CDERR_LOCKRESFAILURE 8

#define CDERR_LOADSTRFAILURE 5

#define CFERR_MAXLESSTHANMIN 8194

#define FNERR_BUFFERTOOSMALL 12291

#define PDERR_PRINTERCODES 4096

#define CDERR_NOHOOK 11

#define CDERR_MEMLOCKFAILURE 10

#define CDERR_INITIALIZATION 2

#define FNERR_SUBCLASSFAILURE 12289

#define PDERR_LOADDRVFAILURE 4100

#define PDERR_INITFAILURE 4102

#define CDERR_LOADRESFAILURE 7

#define FNERR_FILENAMECODES 12288

#define CCERR_CHOOSECOLORCODES 20480

#define CFERR_CHOOSEFONTCODES 8192

#define PDERR_RETDEFFAILURE 4099

#define PDERR_NODEVICES 4103

#define FRERR_BUFFERLENGTHZERO 16385

typedef struct DDEACK DDEACK, *PDDEACK;

struct DDEACK {
    ushort bAppReturnCode:8;
    ushort reserved:6;
    ushort fBusy:1;
    ushort fAck:1;
};

typedef struct DDEADVISE DDEADVISE, *PDDEADVISE;

struct DDEADVISE {
    ushort reserved:14;
    ushort fDeferUpd:1;
    ushort fAckReq:1;
    short cfFormat;
};

typedef struct DDEDATA DDEDATA, *PDDEDATA;

struct DDEDATA {
    ushort unused:12;
    ushort fResponse:1;
    ushort fRelease:1;
    ushort reserved:1;
    ushort fAckReq:1;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDELN DDELN, *PDDELN;

struct DDELN {
    ushort unused:13;
    ushort fRelease:1;
    ushort fDeferUpd:1;
    ushort fAckReq:1;
    short cfFormat;
};

typedef struct DDEPOKE DDEPOKE, *PDDEPOKE;

struct DDEPOKE {
    ushort unused:13;
    ushort fRelease:1;
    ushort fReserved:2;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDEUP DDEUP, *PDDEUP;

struct DDEUP {
    ushort unused:12;
    ushort fAck:1;
    ushort fRelease:1;
    ushort fReserved:1;
    ushort fAckReq:1;
    short cfFormat;
    BYTE rgb[1];
};

#define WM_DDE_LAST 1000

#define WM_DDE_FIRST 992

#define WM_DDE_INITIATE 992

#define WM_DDE_DATA 997

#define WM_DDE_UNADVISE 995

#define WM_DDE_REQUEST 998

#define WM_DDE_POKE 999

#define WM_DDE_EXECUTE 1000

#define WM_DDE_TERMINATE 993

#define WM_DDE_ADVISE 994

#define WM_DDE_ACK 996

typedef struct _MODEMSETTINGS _MODEMSETTINGS, *P_MODEMSETTINGS;

struct _MODEMSETTINGS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwPreferredModemOptions;
    DWORD dwNegotiatedModemOptions;
    DWORD dwNegotiatedDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMSETTINGS MODEMSETTINGS;

typedef struct _MODEMDEVCAPS _MODEMDEVCAPS, *P_MODEMDEVCAPS;

typedef struct _MODEMDEVCAPS *LPMODEMDEVCAPS;

struct _MODEMDEVCAPS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwModemProviderVersion;
    DWORD dwModemManufacturerOffset;
    DWORD dwModemManufacturerSize;
    DWORD dwModemModelOffset;
    DWORD dwModemModelSize;
    DWORD dwModemVersionOffset;
    DWORD dwModemVersionSize;
    DWORD dwDialOptions;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwModemOptions;
    DWORD dwMaxDTERate;
    DWORD dwMaxDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMSETTINGS *PMODEMSETTINGS;

typedef struct _MODEMDEVCAPS MODEMDEVCAPS;

typedef struct _MODEMDEVCAPS *PMODEMDEVCAPS;

typedef struct _MODEMSETTINGS *LPMODEMSETTINGS;

#define MDM_PROTOCOL_X75_T_70 3342336

#define MDM_V110_SPEED_57DOT6K 10

#define MDMSPKRFLAG_OFF 1

#define MDM_PROTOCOL_ANALOG_RLP 458752

#define MDM_PROTOCOL_AUTO_1CH 67502080

#define MDMVOLFLAG_MEDIUM 2

#define MDM_PROTOCOL_V110_12DOT0K 5505024

#define MDM_PROTOCOL_GPRS 524288

#define MDM_V110_SPEED_19DOT2K 7

#define MDM_MASK_PROTOCOLINFO 268369920

#define MDM_PROTOCOLID_V128 2

#define DIALOPTION_QUIET 128

#define MDM_PROTOCOL_X75_BTX 4390912

#define MDM_SHIFT_PROTOCOLDATA 20

#define MDM_MASK_V110_SPEED 15

#define MDM_V120_SPEED_56K 2

#define MDM_V110_SPEED_28DOT8K 8

#define MDM_V110_SPEED_4DOT8K 3

#define MDM_PROTOCOL_ANALOG_V34 2555904

#define MDM_V110_SPEED_DEFAULT 0

#define MDM_FORCED_EC 4

#define MDM_PROTOCOLID_X75 3

#define MDM_HDLCPPP_ML_DEFAULT 0

#define MDM_HDLCPPP_SPEED_DEFAULT 0

#define MDM_SHIFT_X75_DATA 0

#define MDM_V110_SPEED_9DOT6K 4

#define MDM_PIAFS_INCOMING 0

#define MDMVOL_LOW 0

#define MDM_V23_OVERRIDE 1024

#define MDM_PROTOCOL_HDLCPPP_112K_CHAP 161546240

#define MDM_PROTOCOL_V120_128K 135593984

#define MDM_HDLCPPP_SPEED_56K 2

#define MDM_PROTOCOL_V110_14DOT4K 6553600

#define MDMSPKRFLAG_CALLSETUP 8

#define MDM_SHIFT_AUTO_SPEED 0

#define MDM_X75_DATA_DEFAULT 0

#define MDM_MASK_EXTENDEDINFO 268431360

#define DIALOPTION_BILLING 64

#define MDM_V120_ML_NONE 1

#define MDM_PROTOCOL_HDLCPPP_128K_CHAP 160497664

#define MDMVOL_MEDIUM 1

#define MDM_PROTOCOL_V110_19DOT2K 7602176

#define MDM_MASK_PROTOCOLID 983040

#define MDM_PROTOCOL_ANALOG_NRLP 1507328

#define MDM_PROTOCOL_HDLCPPP_64K 1114112

#define MDM_PROTOCOL_V110_4DOT8K 3407872

#define MDM_PROTOCOL_V110_38DOT4K 9699328

#define MDM_V120_SPEED_DEFAULT 0

#define MDMSPKRFLAG_DIAL 2

#define MDM_HDLCPPP_AUTH_DEFAULT 0

#define MDM_PROTOCOL_V110_57DOT6K 10747904

#define MDM_PROTOCOL_HDLCPPP_112K_MSCHAP 169934848

#define MDM_TONE_DIAL 256

#define MDM_SPEED_ADJUST 128

#define MDMSPKR_OFF 0

#define MDM_AUTO_ML_NONE 1

#define MDMVOLFLAG_LOW 1

#define MDM_FLOWCONTROL_SOFT 32

#define MDM_V120_SPEED_64K 1

#define MDM_PROTOCOLID_PIAFS 9

#define MDM_AUTO_SPEED_DEFAULT 0

#define MDM_V110_SPEED_12DOT0K 5

#define MDM_HDLCPPP_AUTH_CHAP 3

#define MDM_X75_DATA_BTX 4

#define MDMSPKR_ON 2

#define MDM_HDLCPPP_AUTH_NONE 1

#define MDM_HDLCPPP_ML_NONE 1

#define MDM_PROTOCOL_AUTO_2CH 134610944

#define MDM_X75_DATA_T_70 3

#define MDM_PROTOCOL_V120_112K 136642560

#define MDM_DIAGNOSTICS 2048

#define MDMSPKRFLAG_ON 4

#define MDM_ANALOG_RLP_ON 0

#define MDM_PROTOCOLID_GPRS 8

#define MDM_SHIFT_V120_ML 6

#define MDM_PROTOCOLID_ANALOG 7

#define MDM_PROTOCOL_V110_1DOT2K 1310720

#define MDM_SHIFT_PROTOCOLID 16

#define MDM_HDLCPPP_ML_2 2

#define MDM_SHIFT_HDLCPPP_SPEED 0

#define MDM_PIAFS_OUTGOING 1

#define MDM_PROTOCOL_HDLCPPP_56K 2162688

#define MDM_MASK_AUTO_ML 192

#define MDM_CCITT_OVERRIDE 64

#define MDM_PROTOCOL_HDLCPPP_128K_PAP 152109056

#define MDM_PROTOCOL_V120_64K 68485120

#define MDM_X75_DATA_128K 2

#define MDM_HDLCPPP_AUTH_PAP 2

#define MDM_PROTOCOL_HDLCPPP_128K_MSCHAP 168886272

#define MDM_ERROR_CONTROL 2

#define MDM_SHIFT_PROTOCOLINFO 16

#define MDM_MASK_PROTOCOLDATA 267386880

#define MDM_COMPRESSION 1

#define MDM_PROTOCOL_X75_64K 1245184

#define MDM_AUTO_ML_DEFAULT 0

#define MDM_SHIFT_V110_SPEED 0

#define MDM_CELLULAR 8

#define MDM_MASK_V120_ML 192

#define MDM_MASK_AUTO_SPEED 7

#define MDM_PROTOCOLID_DEFAULT 0

#define MDM_HDLCPPP_AUTH_MSCHAP 4

#define MDM_PROTOCOL_HDLCPPP_128K 135331840

#define MDM_SHIFT_EXTENDEDINFO 12

#define MDM_PROTOCOL_V110_28DOT8K 8650752

#define MDM_PROTOCOLID_HDLCPPP 1

#define MDM_PROTOCOL_V120_56K 69533696

#define MDMVOL_HIGH 2

#define MDM_PROTOCOL_V110_2DOT4K 2359296

#define MDM_BEARERMODE_ANALOG 0

#define MDM_FLOWCONTROL_HARD 16

#define MDMSPKR_CALLSETUP 3

#define MDM_AUTO_ML_2 2

#define MDM_V110_SPEED_1DOT2K 1

#define MDM_V110_SPEED_14DOT4K 6

#define MDM_PROTOCOL_PIAFS_OUTGOING 1638400

#define MDM_MASK_HDLCPPP_AUTH 56

#define MDM_MASK_HDLCPPP_ML 192

#define MDM_SHIFT_HDLCPPP_ML 6

#define MDM_BLIND_DIAL 512

#define MDM_SHIFT_AUTO_ML 6

#define MDM_MASK_HDLCPPP_SPEED 7

#define MDM_PROTOCOLID_AUTO 6

#define DIALOPTION_DIALTONE 256

#define MDM_ANALOG_V34 2

#define MDM_PROTOCOL_PIAFS_INCOMING 589824

#define MDM_ANALOG_RLP_OFF 1

#define MDM_X75_DATA_64K 1

#define MDM_V120_ML_2 2

#define MDM_PROTOCOL_HDLCPPP_112K 136380416

#define MDM_PROTOCOL_X75_128K 2293760

#define MDM_PROTOCOLID_V120 5

#define MDM_PROTOCOL_V110_9DOT6K 4456448

#define MDM_MASK_X75_DATA 7

#define MDM_V110_SPEED_2DOT4K 2

#define MDMVOLFLAG_HIGH 4

#define MDM_SHIFT_BEARERMODE 12

#define MDM_BEARERMODE_ISDN 1

#define MDM_HDLCPPP_SPEED_64K 1

#define MDM_MASK_BEARERMODE 61440

#define MDMSPKR_DIAL 1

#define MDM_V110_SPEED_38DOT4K 9

#define MDM_PROTOCOLID_V110 4

#define MDM_MASK_V120_SPEED 7

#define MDM_SHIFT_HDLCPPP_AUTH 3

#define MDM_PROTOCOL_HDLCPPP_112K_PAP 153157632

#define MDM_V120_ML_DEFAULT 0

#define MDM_BEARERMODE_GSM 2

#define MDM_SHIFT_V120_SPEED 0

#define _NLSCMPERROR 2147483647

typedef struct setloc_struct setloc_struct, *Psetloc_struct;

typedef struct _is_ctype_compatible _is_ctype_compatible, *P_is_ctype_compatible;

struct _is_ctype_compatible {
    ulong id;
    int is_clike;
};

struct setloc_struct {
    wchar_t *pchLanguage;
    wchar_t *pchCountry;
    int iLocState;
    int iPrimaryLen;
    BOOL bAbbrevLanguage;
    BOOL bAbbrevCountry;
    UINT _cachecp;
    wchar_t _cachein[131];
    wchar_t _cacheout[131];
    struct _is_ctype_compatible _Loc_c[5];
    wchar_t _cacheLocaleName[85];
};

typedef struct _tiddata _tiddata, *P_tiddata;

typedef struct setloc_struct _setloc_struct;

struct _tiddata {
    ulong _tid;
    uintptr_t _thandle;
    int _terrno;
    ulong _tdoserrno;
    uint _fpds;
    ulong _holdrand;
    char *_token;
    wchar_t *_wtoken;
    uchar *_mtoken;
    char *_errmsg;
    wchar_t *_werrmsg;
    char *_namebuf0;
    wchar_t *_wnamebuf0;
    char *_namebuf1;
    wchar_t *_wnamebuf1;
    char *_asctimebuf;
    wchar_t *_wasctimebuf;
    void *_gmtimebuf;
    char *_cvtbuf;
    uchar _con_ch_buf[5];
    ushort _ch_buf_used;
    void *_initaddr;
    void *_initarg;
    void *_pxcptacttab;
    void *_tpxcptinfoptrs;
    int _tfpecode;
    pthreadmbcinfo ptmbcinfo;
    pthreadlocinfo ptlocinfo;
    int _ownlocale;
    ulong _NLG_dwCode;
    void *_terminate;
    void *_unexpected;
    void *_translator;
    void *_purecall;
    void *_curexception;
    void *_curcontext;
    int _ProcessingThrow;
    void *_curexcspec;
    void *_pFrameInfoChain;
    _setloc_struct _setloc_data;
    void *_reserved1;
    void *_reserved2;
    void *_reserved3;
    void *_reserved4;
    void *_reserved5;
    int _cxxReThrow;
    ulong __initDomain;
    int _initapartment;
};

typedef struct _tiddata *_ptiddata;

typedef struct sockaddr sockaddr, *Psockaddr;

typedef struct sockaddr *PSOCKADDR;

typedef ushort u_short;

struct sockaddr {
    u_short sa_family;
    char sa_data[14];
};

typedef struct linger linger, *Plinger;

typedef struct linger *LPLINGER;

struct linger {
    u_short l_onoff;
    u_short l_linger;
};

typedef struct in_addr in_addr, *Pin_addr;

typedef struct in_addr *PIN_ADDR;

typedef union _union_880 _union_880, *P_union_880;

typedef struct _struct_881 _struct_881, *P_struct_881;

typedef struct _struct_882 _struct_882, *P_struct_882;

typedef ulong u_long;

typedef uchar u_char;

struct _struct_881 {
    u_char s_b1;
    u_char s_b2;
    u_char s_b3;
    u_char s_b4;
};

struct _struct_882 {
    u_short s_w1;
    u_short s_w2;
};

union _union_880 {
    struct _struct_881 S_un_b;
    struct _struct_882 S_un_w;
    u_long S_addr;
};

struct in_addr {
    union _union_880 S_un;
};

typedef struct sockaddr_in sockaddr_in, *Psockaddr_in;

typedef struct sockaddr_in *PSOCKADDR_IN;

struct sockaddr_in {
    short sin_family;
    u_short sin_port;
    struct in_addr sin_addr;
    char sin_zero[8];
};

typedef struct protoent protoent, *Pprotoent;

struct protoent {
    char *p_name;
    char **p_aliases;
    short p_proto;
};

typedef struct in_addr *LPIN_ADDR;

typedef struct sockaddr SOCKADDR;

typedef union _union_882 _union_882, *P_union_882;

typedef struct _struct_883 _struct_883, *P_struct_883;

typedef struct _struct_884 _struct_884, *P_struct_884;

struct _struct_883 {
    u_char s_b1;
    u_char s_b2;
    u_char s_b3;
    u_char s_b4;
};

struct _struct_884 {
    u_short s_w1;
    u_short s_w2;
};

union _union_882 {
    struct _struct_883 S_un_b;
    struct _struct_884 S_un_w;
    u_long S_addr;
};

typedef struct fd_set fd_set, *Pfd_set;

typedef struct fd_set FD_SET;

typedef uint u_int;

typedef UINT_PTR SOCKET;

struct fd_set {
    u_int fd_count;
    SOCKET fd_array[64];
};

typedef struct timeval timeval, *Ptimeval;

typedef struct timeval *PTIMEVAL;

struct timeval {
    long tv_sec;
    long tv_usec;
};

typedef struct hostent hostent, *Phostent;

struct hostent {
    char *h_name;
    char **h_aliases;
    short h_addrtype;
    short h_length;
    char **h_addr_list;
};

typedef struct WSAData WSAData, *PWSAData;

typedef struct WSAData WSADATA;

struct WSAData {
    WORD wVersion;
    WORD wHighVersion;
    char szDescription[257];
    char szSystemStatus[129];
    ushort iMaxSockets;
    ushort iMaxUdpDg;
    char *lpVendorInfo;
};

typedef struct timeval *LPTIMEVAL;

typedef struct protoent *PPROTOENT;

typedef struct _TRANSMIT_FILE_BUFFERS _TRANSMIT_FILE_BUFFERS, *P_TRANSMIT_FILE_BUFFERS;

typedef struct _TRANSMIT_FILE_BUFFERS *PTRANSMIT_FILE_BUFFERS;

struct _TRANSMIT_FILE_BUFFERS {
    PVOID Head;
    DWORD HeadLength;
    PVOID Tail;
    DWORD TailLength;
};

typedef WSADATA *LPWSADATA;

typedef struct servent servent, *Pservent;

typedef struct servent *LPSERVENT;

struct servent {
    char *s_name;
    char **s_aliases;
    short s_port;
    char *s_proto;
};

typedef struct netent netent, *Pnetent;

struct netent {
    char *n_name;
    char **n_aliases;
    short n_addrtype;
    u_long n_net;
};

typedef struct _TRANSMIT_FILE_BUFFERS *LPTRANSMIT_FILE_BUFFERS;

typedef struct protoent *LPPROTOENT;

typedef struct hostent HOSTENT;

typedef struct timeval TIMEVAL;

typedef struct hostent *PHOSTENT;

typedef struct sockaddr_in *LPSOCKADDR_IN;

typedef struct protoent PROTOENT;

typedef struct linger *PLINGER;

typedef struct fd_set *PFD_SET;

typedef struct servent *PSERVENT;

typedef struct in_addr IN_ADDR;

typedef struct ip_mreq ip_mreq, *Pip_mreq;

struct ip_mreq {
    struct in_addr imr_multiaddr;
    struct in_addr imr_interface;
};

typedef struct _TRANSMIT_FILE_BUFFERS TRANSMIT_FILE_BUFFERS;

typedef struct hostent *LPHOSTENT;

typedef struct sockaddr *LPSOCKADDR;

typedef struct fd_set *LPFD_SET;

typedef struct linger LINGER;

typedef struct servent SERVENT;

typedef struct sockaddr_in SOCKADDR_IN;

typedef struct sockproto sockproto, *Psockproto;

struct sockproto {
    u_short sp_family;
    u_short sp_protocol;
};

#define IN_CLASSC_NET 4294967040

#define IPPORT_SMTP 25

#define NO_RECOVERY 11003

#define PF_NS 6

#define PF_LAT 14

#define SO_UPDATE_ACCEPT_CONTEXT 28683

#define SO_DISCOPTLEN 28679

#define AF_MAX 22

#define AF_SNA 11

#define IPPORT_SUPDUP 95

#define WSANO_ADDRESS 11004

#define IPPORT_EXECSERVER 512

#define MSG_DONTROUTE 4

#define PF_ECMA 8

#define TF_WRITE_BEHIND 4

#define SO_REUSEADDR 4

#define IPPROTO_ND 77

#define IPPORT_TFTP 69

#define IPPORT_RESERVED 1024

#define IPPORT_CMDSERVER 514

#define PF_SNA 11

#define SO_ERROR 4103

#define IPPORT_TELNET 23

#define AF_LAT 14

#define IP_MAX_MEMBERSHIPS 20

#define IPPROTO_IDP 22

#define SO_KEEPALIVE 8

#define IN_CLASSB_NSHIFT 16

#define SO_CONNDATALEN 28676

#define SO_DONTROUTE 16

#define IOC_VOID 536870912

#define AF_CCITT 10

#define SO_TYPE 4104

#define MAXGETHOSTSTRUCT 1024

#define SO_USELOOPBACK 64

#define AF_APPLETALK 16

#define IP_TOS 8

#define PF_INET 2

#define AF_VOICEVIEW 18

#define IPPORT_LOGINSERVER 513

#define IPPORT_TIMESERVER 37

#define IP_MULTICAST_IF 2

#define IPPORT_RJE 77

#define IN_CLASSA_HOST 16777215

#define AF_DECnet 12

#define IPPROTO_ICMP 1

#define SO_CONNOPTLEN 28677

#define SO_SYNCHRONOUS_ALERT 16

#define SO_DISCOPT 28675

#define SO_SNDBUF 4097

#define SO_LINGER 128

#define PF_CCITT 10

#define FD_CLOSE 32

#define SO_BROADCAST 32

#define SO_DISCDATA 28674

#define PF_PUP 4

#define IPPORT_WHOSERVER 513

#define IMPLINK_HIGHEXPER 158

#define PF_FIREFOX 19

#define PF_OSI 7

#define AF_IMPLINK 3

#define AF_HYLINK 15

#define NO_ADDRESS 11004

#define IN_CLASSC_HOST 255

#define AF_INET 2

#define SO_DONTLINGER -129

#define IPPORT_FTP 21

#define IMPLINK_IP 155

#define NO_DATA 11004

#define IPPROTO_IP 0

#define TF_DISCONNECT 1

#define PF_UNKNOWN1 20

#define AF_NS 6

#define PF_MAX 22

#define IN_CLASSB_HOST 65535

#define IP_MULTICAST_LOOP 4

#define AF_IPX 6

#define IPPROTO_RAW 255

#define IPPORT_EFSSERVER 520

#define IPPORT_ECHO 7

#define SO_RCVTIMEO 4102

#define PF_UNSPEC 0

#define IPPORT_BIFFUDP 512

#define IPPORT_ROUTESERVER 520

#define TCP_BSDURGENT 28672

#define IP_TTL 7

#define IPPORT_DISCARD 9

#define TRY_AGAIN 11002

#define IP_DROP_MEMBERSHIP 6

#define IPPORT_MTP 57

#define IOC_IN 2147483648

#define INADDR_NONE 4294967295

#define HOST_NOT_FOUND 11001

#define AF_BAN 21

#define MSG_OOB 1

#define AF_DATAKIT 9

#define INVALID_SOCKET -1

#define AF_FIREFOX 19

#define FD_ACCEPT 8

#define IPPORT_DAYTIME 13

#define PF_VOICEVIEW 18

#define PF_DATAKIT 9

#define IOC_OUT 1073741824

#define SO_MAXPATHDG 28682

#define MSG_MAXIOVLEN 16

#define PF_ISO 7

#define IN_CLASSA_NET 4278190080

#define IPPROTO_MAX 256

#define WSASYS_STATUS_LEN 128

#define INADDR_BROADCAST 4294967295

#define IN_CLASSA_MAX 128

#define IPPROTO_GGP 3

#define AF_CHAOS 5

#define IP_DEFAULT_MULTICAST_LOOP 1

#define SO_OOBINLINE 256

#define PF_IMPLINK 3

#define PF_DLI 13

#define IPPROTO_UDP 17

#define AF_ECMA 8

#define SOCK_STREAM 1

#define IPPORT_TTYLINK 87

#define SO_SNDTIMEO 4101

#define AF_NETBIOS 17

#define PF_APPLETALK 16

#define MSG_PARTIAL 32768

#define FD_SETSIZE 64

#define TCP_NODELAY 1

#define SO_CONNECT_TIME 28684

#define IP_ADD_MEMBERSHIP 5

#define SOMAXCONN 5

#define SO_MAXDG 28681

#define IN_CLASSC_NSHIFT 8

#define SO_DISCDATALEN 28678

#define IP_DONTFRAGMENT 9

#define SO_OPENTYPE 28680

#define IPPROTO_TCP 6

#define PF_UNIX 1

#define SO_DEBUG 1

#define SO_CONNDATA 28672

#define AF_ISO 7

#define AF_UNKNOWN1 20

#define IP_DEFAULT_MULTICAST_TTL 1

#define IPPORT_FINGER 79

#define IOC_INOUT 3221225472

#define SO_SNDLOWAT 4099

#define SOCK_SEQPACKET 5

#define TF_REUSE_SOCKET 2

#define SO_CONNOPT 28673

#define AF_DLI 13

#define SOCK_RAW 3

#define AF_UNIX 1

#define IN_CLASSB_NET 4294901760

#define WSADESCRIPTION_LEN 256

#define FD_CONNECT 16

#define FD_READ 1

#define IPPORT_SYSTAT 11

#define PF_BAN 21

#define IPPORT_WHOIS 43

#define IP_MULTICAST_TTL 3

#define IP_OPTIONS 1

#define IN_CLASSB_MAX 65536

#define IOCPARM_MASK 127

#define IMPLINK_LOWEXPER 156

#define MSG_PEEK 2

#define SO_ACCEPTCONN 2

#define FD_WRITE 2

#define PF_DECnet 12

#define PF_HYLINK 15

#define IPPROTO_PUP 12

#define SOCK_DGRAM 2

#define INADDR_ANY 0

#define IN_CLASSA_NSHIFT 24

#define INADDR_LOOPBACK 2130706433

#define SO_SYNCHRONOUS_NONALERT 32

#define IPPORT_NAMESERVER 42

#define SOCKET_ERROR -1

#define FD_OOB 4

#define AF_OSI 7

#define PF_IPX 6

#define PF_CHAOS 5

#define AF_UNSPEC 0

#define SO_RCVLOWAT 4100

#define AF_PUP 4

#define SO_RCVBUF 4098

#define SOL_SOCKET 65535

#define IPPROTO_IGMP 2

#define IPPORT_NETSTAT 15

#define SOCK_RDM 4

typedef struct _SCARD_ATRMASK _SCARD_ATRMASK, *P_SCARD_ATRMASK;

struct _SCARD_ATRMASK {
    DWORD cbAtr;
    BYTE rgbAtr[36];
    BYTE rgbMask[36];
};

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIAA, *POPENCARD_SEARCH_CRITERIAA;

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIA;

typedef ULONG_PTR SCARDCONTEXT;

typedef ULONG_PTR SCARDHANDLE;

typedef BOOL (*LPOCNCHKPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

typedef SCARDHANDLE (*LPOCNCONNPROCA)(SCARDCONTEXT, LPSTR, LPSTR, PVOID);

typedef void (*LPOCNDSCPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

struct OPENCARD_SEARCH_CRITERIAA {
    DWORD dwStructSize;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

typedef struct OPENCARDNAMEA OPENCARDNAMEA, *POPENCARDNAMEA;

typedef POPENCARDNAMEA POPENCARDNAME;

struct OPENCARDNAMEA {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    LPCSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAMEW OPENCARDNAMEW, *POPENCARDNAMEW;

typedef SCARDHANDLE (*LPOCNCONNPROCW)(SCARDCONTEXT, LPWSTR, LPWSTR, PVOID);

struct OPENCARDNAMEW {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    LPCWSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct _SCARD_ATRMASK *PSCARD_ATRMASK;

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EXA, *POPENCARDNAME_EXA;

typedef struct OPENCARDNAME_EXA *LPOPENCARDNAME_EXA;

struct OPENCARDNAME_EXA {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCSTR lpstrTitle;
    LPCSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria;
    LPOCNCONNPROCA lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAMEA *LPOPENCARDNAMEA;

typedef struct SCARD_READERSTATEA SCARD_READERSTATEA, *PSCARD_READERSTATEA;

struct SCARD_READERSTATEA {
    LPCSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef POPENCARDNAME_EXA POPENCARDNAME_EX;

typedef struct _SCARD_ATRMASK SCARD_ATRMASK;

typedef struct OPENCARDNAME_EXW OPENCARDNAME_EXW, *POPENCARDNAME_EXW;

typedef struct OPENCARD_SEARCH_CRITERIAW OPENCARD_SEARCH_CRITERIAW, *POPENCARD_SEARCH_CRITERIAW;

struct OPENCARD_SEARCH_CRITERIAW {
    DWORD dwStructSize;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

struct OPENCARDNAME_EXW {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCWSTR lpstrTitle;
    LPCWSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
    LPOCNCONNPROCW lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARD_SEARCH_CRITERIAA *LPOPENCARD_SEARCH_CRITERIAA;

typedef LPOPENCARD_SEARCH_CRITERIAA LPOPENCARD_SEARCH_CRITERIA;

typedef SCARDHANDLE *PSCARDHANDLE;

typedef BYTE *LPCBYTE;

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EX;

typedef LPOPENCARDNAME_EXA LPOPENCARDNAME_EX;

typedef struct OPENCARDNAME_EXW *LPOPENCARDNAME_EXW;

typedef LPOPENCARDNAMEA LPOPENCARDNAME;

typedef struct SCARD_READERSTATEA SCARD_READERSTATE;

typedef PSCARD_READERSTATEA PSCARD_READERSTATE;

typedef struct SCARD_READERSTATEW SCARD_READERSTATEW, *PSCARD_READERSTATEW;

struct SCARD_READERSTATEW {
    LPCWSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef struct _SCARD_ATRMASK *LPSCARD_ATRMASK;

typedef struct OPENCARDNAMEW *LPOPENCARDNAMEW;

typedef SCARDHANDLE *LPSCARDHANDLE;

typedef struct SCARD_READERSTATEA *LPSCARD_READERSTATEA;

typedef struct OPENCARDNAMEA OPENCARDNAME;

typedef POPENCARD_SEARCH_CRITERIAA POPENCARD_SEARCH_CRITERIA;

typedef SCARDCONTEXT *PSCARDCONTEXT;

typedef SCARDCONTEXT *LPSCARDCONTEXT;

typedef LPSCARD_READERSTATEA LPSCARD_READERSTATE;

typedef struct OPENCARD_SEARCH_CRITERIAW *LPOPENCARD_SEARCH_CRITERIAW;

typedef struct SCARD_READERSTATEW *LPSCARD_READERSTATEW;

#define SCARD_STATE_PRESENT 32

#define SCARD_RESET_CARD 1

#define SCARD_STATE_CHANGED 2

#define SC_DLG_NO_UI 2

#define SCARD_STATE_EMPTY 16

#define SCARD_SHARE_SHARED 2

#define SCERR_NOGUIDS 32768

#define SCARD_STATE_UNKNOWN 4

#define SCARD_SHARE_DIRECT 3

#define SCARD_STATE_UNPOWERED 1024

#define SCARD_SCOPE_SYSTEM 2

#define SCARD_PROVIDER_PRIMARY 1

#define SCARD_LEAVE_CARD 0

#define SCARD_EJECT_CARD 3

#define SCARD_SCOPE_TERMINAL 1

#define SCARD_AUTOALLOCATE -1

#define SCARD_STATE_IGNORE 1

#define SCARD_STATE_EXCLUSIVE 128

#define SCARD_STATE_UNAWARE 0

#define SCARD_PROVIDER_CSP 2

#define SCARD_SCOPE_USER 0

#define SCARD_SHARE_EXCLUSIVE 1

#define SCERR_NOCARDNAME 16384

#define SCARD_STATE_INUSE 256

#define SC_DLG_FORCE_UI 4

#define SC_DLG_MINIMAL_UI 1

#define SCARD_STATE_MUTE 512

#define SCARD_STATE_ATRMATCH 64

#define SCARD_UNPOWER_CARD 2

#define SCARD_STATE_UNAVAILABLE 8

typedef struct RPC_DISPATCH_TABLE RPC_DISPATCH_TABLE, *PRPC_DISPATCH_TABLE;

typedef struct _RPC_MESSAGE _RPC_MESSAGE, *P_RPC_MESSAGE;

typedef struct _RPC_MESSAGE *PRPC_MESSAGE;

typedef void (*RPC_DISPATCH_FUNCTION)(PRPC_MESSAGE);

typedef struct _RPC_SYNTAX_IDENTIFIER _RPC_SYNTAX_IDENTIFIER, *P_RPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_SYNTAX_IDENTIFIER *PRPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_VERSION _RPC_VERSION, *P_RPC_VERSION;

typedef struct _RPC_VERSION RPC_VERSION;

struct RPC_DISPATCH_TABLE {
    uint DispatchTableCount;
    RPC_DISPATCH_FUNCTION *DispatchTable;
    LONG_PTR Reserved;
};

struct _RPC_VERSION {
    ushort MajorVersion;
    ushort MinorVersion;
};

struct _RPC_SYNTAX_IDENTIFIER {
    GUID SyntaxGUID;
    RPC_VERSION SyntaxVersion;
};

struct _RPC_MESSAGE {
    RPC_BINDING_HANDLE Handle;
    ulong DataRepresentation;
    void *Buffer;
    uint BufferLength;
    uint ProcNum;
    PRPC_SYNTAX_IDENTIFIER TransferSyntax;
    void *RpcInterfaceInformation;
    void *ReservedForRuntime;
    void *ManagerEpv;
    void *ImportContext;
    ulong RpcFlags;
};

typedef RPC_STATUS (*RPC_BLOCKING_FN)(void *, void *, void *);

typedef enum RPC_ADDRESS_CHANGE_TYPE {
    PROTOCOL_NOT_LOADED=1,
    PROTOCOL_LOADED=2,
    PROTOCOL_ADDRESS_CHANGE=3
} RPC_ADDRESS_CHANGE_TYPE;

typedef struct _RPC_TRANSFER_SYNTAX _RPC_TRANSFER_SYNTAX, *P_RPC_TRANSFER_SYNTAX;

typedef struct _RPC_TRANSFER_SYNTAX RPC_TRANSFER_SYNTAX;

struct _RPC_TRANSFER_SYNTAX {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

typedef struct _RPC_MESSAGE RPC_MESSAGE;

typedef struct _RPC_PROTSEQ_ENDPOINT _RPC_PROTSEQ_ENDPOINT, *P_RPC_PROTSEQ_ENDPOINT;

struct _RPC_PROTSEQ_ENDPOINT {
    uchar *RpcProtocolSequence;
    uchar *Endpoint;
};

typedef void (*RPCLT_PDU_FILTER_FUNC)(void *, uint, int);

typedef void (*RPC_SETFILTER_FUNC)(RPCLT_PDU_FILTER_FUNC);

typedef void (RPC_ADDRESS_CHANGE_FN)(void *);

typedef struct _RPC_CLIENT_INTERFACE _RPC_CLIENT_INTERFACE, *P_RPC_CLIENT_INTERFACE;

typedef struct _RPC_CLIENT_INTERFACE RPC_CLIENT_INTERFACE;

typedef struct _RPC_SYNTAX_IDENTIFIER RPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_PROTSEQ_ENDPOINT *PRPC_PROTSEQ_ENDPOINT;

struct _RPC_CLIENT_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    ULONG_PTR Reserved;
    void *InterpreterInfo;
    uint Flags;
};

typedef void (*PRPC_RUNDOWN)(void *);

typedef RPC_STATUS (RPC_FORWARD_FUNCTION)(UUID *, RPC_VERSION *, UUID *, uchar *, void **);

typedef struct _RPC_SERVER_INTERFACE _RPC_SERVER_INTERFACE, *P_RPC_SERVER_INTERFACE;

typedef struct _RPC_SERVER_INTERFACE RPC_SERVER_INTERFACE;

struct _RPC_SERVER_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    void *DefaultManagerEpv;
    void *InterpreterInfo;
    uint Flags;
};

typedef struct _RPC_SERVER_INTERFACE *PRPC_SERVER_INTERFACE;

typedef void *I_RPC_MUTEX;

typedef struct _RPC_PROTSEQ_ENDPOINT RPC_PROTSEQ_ENDPOINT;

typedef struct _RPC_CLIENT_INTERFACE *PRPC_CLIENT_INTERFACE;

#define TRANSPORT_TYPE_DG 2

#define RPCFLG_ASYNCHRONOUS 1073741824

#define RPCFLG_HAS_MULTI_SYNTAXES 33554432

#define RPC_NCA_FLAGS_IDEMPOTENT 1

#define RPC_INTERFACE_HAS_PIPES 1

#define RPCFLG_LOCAL_CALL 268435456

#define RPC_BUFFER_NONOTIFY 65536

#define RPC_CONTEXT_HANDLE_DONT_SERIALIZE 536870912

#define NT351_INTERFACE_SIZE 64

#define RPC_BUFFER_EXTRA 16384

#define TRANSPORT_TYPE_CN 1

#define TRANSPORT_TYPE_WMSG 8

#define RPC_NCA_FLAGS_MAYBE 4

#define RPCFLG_AUTO_COMPLETE 134217728

#define RPC_NCA_FLAGS_DEFAULT 0

#define RPC_NCA_FLAGS_BROADCAST 2

#define RPC_BUFFER_COMPLETE 4096

#define RPC_CONTEXT_HANDLE_FLAGS 805306368

#define RPCFLG_HAS_CALLBACK 67108864

#define RPC_BUFFER_PARTIAL 8192

#define RPC_CONTEXT_HANDLE_DEFAULT_GUARD 4294963213

#define RPCFLG_MESSAGE 16777216

#define TRANSPORT_TYPE_LPC 4

#define RPC_BUFFER_ASYNC 32768

#define RPC_P_ADDR_FORMAT_TCP_IPV6 2

#define RPC_CONTEXT_HANDLE_SERIALIZE 268435456

#define RPC_P_ADDR_FORMAT_TCP_IPV4 1

#define RPCFLG_INPUT_SYNCHRONOUS 536870912

#define RPC_FLAGS_VALID_BIT 32768

#define RPCFLG_NON_NDR 2147483648

#define RPC_CONTEXT_HANDLE_DEFAULT_FLAGS 0

typedef struct IServiceProvider IServiceProvider, *PIServiceProvider;

typedef struct IServiceProviderVtbl IServiceProviderVtbl, *PIServiceProviderVtbl;

struct IServiceProvider {
    struct IServiceProviderVtbl *lpVtbl;
};

struct IServiceProviderVtbl {
    HRESULT (*QueryInterface)(struct IServiceProvider *, IID *, void **);
    ULONG (*AddRef)(struct IServiceProvider *);
    ULONG (*Release)(struct IServiceProvider *);
    HRESULT (*QueryService)(struct IServiceProvider *, GUID *, IID *, void **);
};

typedef struct IServiceProvider *LPSERVICEPROVIDER;

#define RPC_C_PROFILE_ALL_ELTS 1

#define RPC_C_PROFILE_ALL_ELT 1

#define RPC_C_PROFILE_MATCH_BY_BOTH 4

#define RPC_C_NS_DEFAULT_EXP_AGE -1

#define RPC_C_PROFILE_DEFAULT_ELT 0

#define RPC_C_PROFILE_MATCH_BY_MBR 3

#define RPC_C_NS_SYNTAX_DEFAULT 0

#define RPC_C_NS_SYNTAX_DCE 3

#define RPC_C_PROFILE_MATCH_BY_IF 2

typedef struct IViewObject2 IViewObject2, *PIViewObject2;

typedef struct IViewObject2Vtbl IViewObject2Vtbl, *PIViewObject2Vtbl;

typedef RECTL *LPCRECTL;

typedef SIZE *LPSIZEL;

struct IViewObject2Vtbl {
    HRESULT (*QueryInterface)(struct IViewObject2 *, IID *, void **);
    ULONG (*AddRef)(struct IViewObject2 *);
    ULONG (*Release)(struct IViewObject2 *);
    HRESULT (*Draw)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (*)(ULONG_PTR), ULONG_PTR);
    HRESULT (*GetColorSet)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE **);
    HRESULT (*Freeze)(struct IViewObject2 *, DWORD, LONG, void *, DWORD *);
    HRESULT (*Unfreeze)(struct IViewObject2 *, DWORD);
    HRESULT (*SetAdvise)(struct IViewObject2 *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (*GetAdvise)(struct IViewObject2 *, DWORD *, DWORD *, struct IAdviseSink **);
    HRESULT (*GetExtent)(struct IViewObject2 *, DWORD, LONG, DVTARGETDEVICE *, LPSIZEL);
};

struct IViewObject2 {
    struct IViewObject2Vtbl *lpVtbl;
};

typedef struct IOleLink IOleLink, *PIOleLink;

typedef struct IOleLinkVtbl IOleLinkVtbl, *PIOleLinkVtbl;

struct IOleLinkVtbl {
    HRESULT (*QueryInterface)(struct IOleLink *, IID *, void **);
    ULONG (*AddRef)(struct IOleLink *);
    ULONG (*Release)(struct IOleLink *);
    HRESULT (*SetUpdateOptions)(struct IOleLink *, DWORD);
    HRESULT (*GetUpdateOptions)(struct IOleLink *, DWORD *);
    HRESULT (*SetSourceMoniker)(struct IOleLink *, struct IMoniker *, IID *);
    HRESULT (*GetSourceMoniker)(struct IOleLink *, struct IMoniker **);
    HRESULT (*SetSourceDisplayName)(struct IOleLink *, LPCOLESTR);
    HRESULT (*GetSourceDisplayName)(struct IOleLink *, LPOLESTR *);
    HRESULT (*BindToSource)(struct IOleLink *, DWORD, struct IBindCtx *);
    HRESULT (*BindIfRunning)(struct IOleLink *);
    HRESULT (*GetBoundSource)(struct IOleLink *, struct IUnknown **);
    HRESULT (*UnbindSource)(struct IOleLink *);
    HRESULT (*Update)(struct IOleLink *, struct IBindCtx *);
};

struct IOleLink {
    struct IOleLinkVtbl *lpVtbl;
};

typedef enum tagOLEUPDATE {
    OLEUPDATE_ALWAYS=1,
    OLEUPDATE_ONCALL=3
} tagOLEUPDATE;

typedef enum tagOLEUPDATE OLEUPDATE;

typedef OLEUPDATE *POLEUPDATE;

typedef struct IOleInPlaceSite IOleInPlaceSite, *PIOleInPlaceSite;

typedef struct IOleInPlaceSiteVtbl IOleInPlaceSiteVtbl, *PIOleInPlaceSiteVtbl;

typedef struct IOleInPlaceFrame IOleInPlaceFrame, *PIOleInPlaceFrame;

typedef struct IOleInPlaceUIWindow IOleInPlaceUIWindow, *PIOleInPlaceUIWindow;

typedef struct tagOIFI tagOIFI, *PtagOIFI;

typedef struct tagOIFI *LPOLEINPLACEFRAMEINFO;

typedef RECT *LPCRECT;

typedef struct IOleInPlaceFrameVtbl IOleInPlaceFrameVtbl, *PIOleInPlaceFrameVtbl;

typedef LPCRECT LPCBORDERWIDTHS;

typedef struct IOleInPlaceActiveObject IOleInPlaceActiveObject, *PIOleInPlaceActiveObject;

typedef struct tagOleMenuGroupWidths tagOleMenuGroupWidths, *PtagOleMenuGroupWidths;

typedef struct tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;

typedef HGLOBAL HOLEMENU;

typedef struct tagMSG tagMSG, *PtagMSG;

typedef struct tagMSG *LPMSG;

typedef struct IOleInPlaceUIWindowVtbl IOleInPlaceUIWindowVtbl, *PIOleInPlaceUIWindowVtbl;

typedef struct IOleInPlaceActiveObjectVtbl IOleInPlaceActiveObjectVtbl, *PIOleInPlaceActiveObjectVtbl;

typedef UINT_PTR WPARAM;

struct IOleInPlaceActiveObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceActiveObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceActiveObject *);
    ULONG (*Release)(struct IOleInPlaceActiveObject *);
    HRESULT (*GetWindow)(struct IOleInPlaceActiveObject *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*TranslateAcceleratorA)(struct IOleInPlaceActiveObject *, LPMSG);
    HRESULT (*OnFrameWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*OnDocWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (*ResizeBorder)(struct IOleInPlaceActiveObject *, LPCRECT, struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (*EnableModeless)(struct IOleInPlaceActiveObject *, BOOL);
};

struct IOleInPlaceUIWindow {
    struct IOleInPlaceUIWindowVtbl *lpVtbl;
};

struct tagOleMenuGroupWidths {
    LONG width[6];
};

struct tagOIFI {
    UINT cb;
    BOOL fMDIApp;
    HWND hwndFrame;
    HACCEL haccel;
    UINT cAccelEntries;
};

struct IOleInPlaceSite {
    struct IOleInPlaceSiteVtbl *lpVtbl;
};

struct IOleInPlaceUIWindowVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceUIWindow *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceUIWindow *);
    ULONG (*Release)(struct IOleInPlaceUIWindow *);
    HRESULT (*GetWindow)(struct IOleInPlaceUIWindow *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (*GetBorder)(struct IOleInPlaceUIWindow *, LPRECT);
    HRESULT (*RequestBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (*SetBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (*SetActiveObject)(struct IOleInPlaceUIWindow *, struct IOleInPlaceActiveObject *, LPCOLESTR);
};

struct IOleInPlaceSiteVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceSite *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceSite *);
    ULONG (*Release)(struct IOleInPlaceSite *);
    HRESULT (*GetWindow)(struct IOleInPlaceSite *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceSite *, BOOL);
    HRESULT (*CanInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (*OnInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (*OnUIActivate)(struct IOleInPlaceSite *);
    HRESULT (*GetWindowContext)(struct IOleInPlaceSite *, struct IOleInPlaceFrame **, struct IOleInPlaceUIWindow **, LPRECT, LPRECT, LPOLEINPLACEFRAMEINFO);
    HRESULT (*Scroll)(struct IOleInPlaceSite *, SIZE);
    HRESULT (*OnUIDeactivate)(struct IOleInPlaceSite *, BOOL);
    HRESULT (*OnInPlaceDeactivate)(struct IOleInPlaceSite *);
    HRESULT (*DiscardUndoState)(struct IOleInPlaceSite *);
    HRESULT (*DeactivateAndUndo)(struct IOleInPlaceSite *);
    HRESULT (*OnPosRectChange)(struct IOleInPlaceSite *, LPCRECT);
};

struct IOleInPlaceFrame {
    struct IOleInPlaceFrameVtbl *lpVtbl;
};

struct IOleInPlaceFrameVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceFrame *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceFrame *);
    ULONG (*Release)(struct IOleInPlaceFrame *);
    HRESULT (*GetWindow)(struct IOleInPlaceFrame *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (*GetBorder)(struct IOleInPlaceFrame *, LPRECT);
    HRESULT (*RequestBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (*SetBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (*SetActiveObject)(struct IOleInPlaceFrame *, struct IOleInPlaceActiveObject *, LPCOLESTR);
    HRESULT (*InsertMenus)(struct IOleInPlaceFrame *, HMENU, LPOLEMENUGROUPWIDTHS);
    HRESULT (*SetMenu)(struct IOleInPlaceFrame *, HMENU, HOLEMENU, HWND);
    HRESULT (*RemoveMenus)(struct IOleInPlaceFrame *, HMENU);
    HRESULT (*SetStatusText)(struct IOleInPlaceFrame *, LPCOLESTR);
    HRESULT (*EnableModeless)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (*TranslateAcceleratorA)(struct IOleInPlaceFrame *, LPMSG, WORD);
};

struct IOleInPlaceActiveObject {
    struct IOleInPlaceActiveObjectVtbl *lpVtbl;
};

struct tagMSG {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
};

typedef struct IOleInPlaceObject IOleInPlaceObject, *PIOleInPlaceObject;

typedef struct IOleInPlaceObject *LPOLEINPLACEOBJECT;

typedef struct IOleInPlaceObjectVtbl IOleInPlaceObjectVtbl, *PIOleInPlaceObjectVtbl;

struct IOleInPlaceObject {
    struct IOleInPlaceObjectVtbl *lpVtbl;
};

struct IOleInPlaceObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleInPlaceObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleInPlaceObject *);
    ULONG (*Release)(struct IOleInPlaceObject *);
    HRESULT (*GetWindow)(struct IOleInPlaceObject *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleInPlaceObject *, BOOL);
    HRESULT (*InPlaceDeactivate)(struct IOleInPlaceObject *);
    HRESULT (*UIDeactivate)(struct IOleInPlaceObject *);
    HRESULT (*SetObjectRects)(struct IOleInPlaceObject *, LPCRECT, LPCRECT);
    HRESULT (*ReactivateAndUndo)(struct IOleInPlaceObject *);
};

typedef struct IOleItemContainer IOleItemContainer, *PIOleItemContainer;

typedef struct IOleItemContainerVtbl IOleItemContainerVtbl, *PIOleItemContainerVtbl;

struct IOleItemContainerVtbl {
    HRESULT (*QueryInterface)(struct IOleItemContainer *, IID *, void **);
    ULONG (*AddRef)(struct IOleItemContainer *);
    ULONG (*Release)(struct IOleItemContainer *);
    HRESULT (*ParseDisplayName)(struct IOleItemContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*EnumObjects)(struct IOleItemContainer *, DWORD, struct IEnumUnknown **);
    HRESULT (*LockContainer)(struct IOleItemContainer *, BOOL);
    HRESULT (*GetObjectA)(struct IOleItemContainer *, LPOLESTR, DWORD, struct IBindCtx *, IID *, void **);
    HRESULT (*GetObjectStorage)(struct IOleItemContainer *, LPOLESTR, struct IBindCtx *, IID *, void **);
    HRESULT (*IsRunning)(struct IOleItemContainer *, LPOLESTR);
};

struct IOleItemContainer {
    struct IOleItemContainerVtbl *lpVtbl;
};

typedef struct tagOBJECTDESCRIPTOR tagOBJECTDESCRIPTOR, *PtagOBJECTDESCRIPTOR;

struct tagOBJECTDESCRIPTOR {
    ULONG cbSize;
    CLSID clsid;
    DWORD dwDrawAspect;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwStatus;
    DWORD dwFullUserTypeName;
    DWORD dwSrcOfCopy;
};

typedef enum tagOLERENDER {
    OLERENDER_NONE=0,
    OLERENDER_DRAW=1,
    OLERENDER_FORMAT=2,
    OLERENDER_ASIS=3
} tagOLERENDER;

typedef enum tagOLERENDER OLERENDER;

typedef OLERENDER *LPOLERENDER;

typedef enum tagOLECONTF {
    OLECONTF_EMBEDDINGS=1,
    OLECONTF_LINKS=2,
    OLECONTF_OTHERS=4,
    OLECONTF_ONLYUSER=8,
    OLECONTF_ONLYIFRUNNING=16
} tagOLECONTF;

typedef enum tagOLECONTF OLECONTF;

typedef enum tagOLELINKBIND {
    OLELINKBIND_EVENIFCLASSDIFF=1
} tagOLELINKBIND;

typedef struct IEnumOLEVERB IEnumOLEVERB, *PIEnumOLEVERB;

typedef struct IEnumOLEVERB *LPENUMOLEVERB;

typedef struct IEnumOLEVERBVtbl IEnumOLEVERBVtbl, *PIEnumOLEVERBVtbl;

typedef struct tagOLEVERB tagOLEVERB, *PtagOLEVERB;

typedef struct tagOLEVERB *LPOLEVERB;

struct tagOLEVERB {
    LONG lVerb;
    LPOLESTR lpszVerbName;
    DWORD fuFlags;
    DWORD grfAttribs;
};

struct IEnumOLEVERB {
    struct IEnumOLEVERBVtbl *lpVtbl;
};

struct IEnumOLEVERBVtbl {
    HRESULT (*QueryInterface)(struct IEnumOLEVERB *, IID *, void **);
    ULONG (*AddRef)(struct IEnumOLEVERB *);
    ULONG (*Release)(struct IEnumOLEVERB *);
    HRESULT (*Next)(struct IEnumOLEVERB *, ULONG, LPOLEVERB, ULONG *);
    HRESULT (*Skip)(struct IEnumOLEVERB *, ULONG);
    HRESULT (*Reset)(struct IEnumOLEVERB *);
    HRESULT (*Clone)(struct IEnumOLEVERB *, struct IEnumOLEVERB **);
};

typedef struct IOleCacheVtbl IOleCacheVtbl, *PIOleCacheVtbl;

typedef struct IOleCache IOleCache, *PIOleCache;

struct IOleCacheVtbl {
    HRESULT (*QueryInterface)(struct IOleCache *, IID *, void **);
    ULONG (*AddRef)(struct IOleCache *);
    ULONG (*Release)(struct IOleCache *);
    HRESULT (*Cache)(struct IOleCache *, FORMATETC *, DWORD, DWORD *);
    HRESULT (*Uncache)(struct IOleCache *, DWORD);
    HRESULT (*EnumCache)(struct IOleCache *, struct IEnumSTATDATA **);
    HRESULT (*InitCache)(struct IOleCache *, struct IDataObject *);
    HRESULT (*SetData)(struct IOleCache *, FORMATETC *, STGMEDIUM *, BOOL);
};

struct IOleCache {
    struct IOleCacheVtbl *lpVtbl;
};

typedef struct IOleCacheControlVtbl IOleCacheControlVtbl, *PIOleCacheControlVtbl;

typedef struct IOleCacheControl IOleCacheControl, *PIOleCacheControl;

struct IOleCacheControl {
    struct IOleCacheControlVtbl *lpVtbl;
};

struct IOleCacheControlVtbl {
    HRESULT (*QueryInterface)(struct IOleCacheControl *, IID *, void **);
    ULONG (*AddRef)(struct IOleCacheControl *);
    ULONG (*Release)(struct IOleCacheControl *);
    HRESULT (*OnRun)(struct IOleCacheControl *, LPDATAOBJECT);
    HRESULT (*OnStop)(struct IOleCacheControl *);
};

typedef struct IDropSource IDropSource, *PIDropSource;

typedef struct IDropSourceVtbl IDropSourceVtbl, *PIDropSourceVtbl;

struct IDropSource {
    struct IDropSourceVtbl *lpVtbl;
};

struct IDropSourceVtbl {
    HRESULT (*QueryInterface)(struct IDropSource *, IID *, void **);
    ULONG (*AddRef)(struct IDropSource *);
    ULONG (*Release)(struct IDropSource *);
    HRESULT (*QueryContinueDrag)(struct IDropSource *, BOOL, DWORD);
    HRESULT (*GiveFeedback)(struct IDropSource *, DWORD);
};

typedef struct IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;

typedef enum tagDISCARDCACHE {
    DISCARDCACHE_SAVEIFDIRTY=0,
    DISCARDCACHE_NOSAVE=1
} tagDISCARDCACHE;

typedef enum tagDISCARDCACHE DISCARDCACHE;

typedef struct tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;

typedef struct IOleCache *LPOLECACHE;

typedef struct IViewObject IViewObject, *PIViewObject;

typedef struct IViewObject *LPVIEWOBJECT;

typedef struct IViewObjectVtbl IViewObjectVtbl, *PIViewObjectVtbl;

struct IViewObjectVtbl {
    HRESULT (*QueryInterface)(struct IViewObject *, IID *, void **);
    ULONG (*AddRef)(struct IViewObject *);
    ULONG (*Release)(struct IViewObject *);
    HRESULT (*Draw)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (*)(ULONG_PTR), ULONG_PTR);
    HRESULT (*GetColorSet)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE **);
    HRESULT (*Freeze)(struct IViewObject *, DWORD, LONG, void *, DWORD *);
    HRESULT (*Unfreeze)(struct IViewObject *, DWORD);
    HRESULT (*SetAdvise)(struct IViewObject *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (*GetAdvise)(struct IViewObject *, DWORD *, DWORD *, struct IAdviseSink **);
};

struct IViewObject {
    struct IViewObjectVtbl *lpVtbl;
};

typedef struct IOleClientSite IOleClientSite, *PIOleClientSite;

typedef struct IOleClientSiteVtbl IOleClientSiteVtbl, *PIOleClientSiteVtbl;

typedef struct IOleContainer IOleContainer, *PIOleContainer;

typedef struct IOleContainerVtbl IOleContainerVtbl, *PIOleContainerVtbl;

struct IOleContainerVtbl {
    HRESULT (*QueryInterface)(struct IOleContainer *, IID *, void **);
    ULONG (*AddRef)(struct IOleContainer *);
    ULONG (*Release)(struct IOleContainer *);
    HRESULT (*ParseDisplayName)(struct IOleContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
    HRESULT (*EnumObjects)(struct IOleContainer *, DWORD, struct IEnumUnknown **);
    HRESULT (*LockContainer)(struct IOleContainer *, BOOL);
};

struct IOleContainer {
    struct IOleContainerVtbl *lpVtbl;
};

struct IOleClientSite {
    struct IOleClientSiteVtbl *lpVtbl;
};

struct IOleClientSiteVtbl {
    HRESULT (*QueryInterface)(struct IOleClientSite *, IID *, void **);
    ULONG (*AddRef)(struct IOleClientSite *);
    ULONG (*Release)(struct IOleClientSite *);
    HRESULT (*SaveObject)(struct IOleClientSite *);
    HRESULT (*GetMoniker)(struct IOleClientSite *, DWORD, DWORD, struct IMoniker **);
    HRESULT (*GetContainer)(struct IOleClientSite *, struct IOleContainer **);
    HRESULT (*ShowObject)(struct IOleClientSite *);
    HRESULT (*OnShowWindow)(struct IOleClientSite *, BOOL);
    HRESULT (*RequestNewObjectLayout)(struct IOleClientSite *);
};

typedef struct tagOIFI OLEINPLACEFRAMEINFO;

typedef struct IParseDisplayName IParseDisplayName, *PIParseDisplayName;

typedef struct IParseDisplayNameVtbl IParseDisplayNameVtbl, *PIParseDisplayNameVtbl;

struct IParseDisplayNameVtbl {
    HRESULT (*QueryInterface)(struct IParseDisplayName *, IID *, void **);
    ULONG (*AddRef)(struct IParseDisplayName *);
    ULONG (*Release)(struct IParseDisplayName *);
    HRESULT (*ParseDisplayName)(struct IParseDisplayName *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker **);
};

struct IParseDisplayName {
    struct IParseDisplayNameVtbl *lpVtbl;
};

typedef enum tagOLEMISC {
    OLEMISC_RECOMPOSEONRESIZE=1,
    OLEMISC_ONLYICONIC=2,
    OLEMISC_INSERTNOTREPLACE=4,
    OLEMISC_STATIC=8,
    OLEMISC_CANTLINKINSIDE=16,
    OLEMISC_CANLINKBYOLE1=32,
    OLEMISC_ISLINKOBJECT=64,
    OLEMISC_INSIDEOUT=128,
    OLEMISC_ACTIVATEWHENVISIBLE=256,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT=512,
    OLEMISC_INVISIBLEATRUNTIME=1024,
    OLEMISC_ALWAYSRUN=2048,
    OLEMISC_ACTSLIKEBUTTON=4096,
    OLEMISC_ACTSLIKELABEL=8192,
    OLEMISC_NOUIACTIVATE=16384,
    OLEMISC_ALIGNABLE=32768,
    OLEMISC_SIMPLEFRAME=65536,
    OLEMISC_SETCLIENTSITEFIRST=131072,
    OLEMISC_IMEMODE=262144,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE=524288,
    OLEMISC_WANTSTOMENUMERGE=1048576,
    OLEMISC_SUPPORTSMULTILEVELUNDO=2097152
} tagOLEMISC;

typedef enum tagOLEMISC OLEMISC;

typedef struct IOleItemContainer *LPOLEITEMCONTAINER;

typedef struct IOleCache2Vtbl IOleCache2Vtbl, *PIOleCache2Vtbl;

typedef struct IOleCache2 IOleCache2, *PIOleCache2;

struct IOleCache2Vtbl {
    HRESULT (*QueryInterface)(struct IOleCache2 *, IID *, void **);
    ULONG (*AddRef)(struct IOleCache2 *);
    ULONG (*Release)(struct IOleCache2 *);
    HRESULT (*Cache)(struct IOleCache2 *, FORMATETC *, DWORD, DWORD *);
    HRESULT (*Uncache)(struct IOleCache2 *, DWORD);
    HRESULT (*EnumCache)(struct IOleCache2 *, struct IEnumSTATDATA **);
    HRESULT (*InitCache)(struct IOleCache2 *, struct IDataObject *);
    HRESULT (*SetData)(struct IOleCache2 *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (*UpdateCache)(struct IOleCache2 *, LPDATAOBJECT, DWORD, LPVOID);
    HRESULT (*DiscardCache)(struct IOleCache2 *, DWORD);
};

struct IOleCache2 {
    struct IOleCache2Vtbl *lpVtbl;
};

typedef struct IDropSource *LPDROPSOURCE;

typedef struct IOleCacheControl *LPOLECACHECONTROL;

typedef enum tagUSERCLASSTYPE {
    USERCLASSTYPE_FULL=1,
    USERCLASSTYPE_SHORT=2,
    USERCLASSTYPE_APPNAME=3
} tagUSERCLASSTYPE;

typedef enum tagOLEGETMONIKER {
    OLEGETMONIKER_ONLYIFTHERE=1,
    OLEGETMONIKER_FORCEASSIGN=2,
    OLEGETMONIKER_UNASSIGN=3,
    OLEGETMONIKER_TEMPFORUSER=4
} tagOLEGETMONIKER;

typedef RECT BORDERWIDTHS;

typedef struct IViewObject2 *LPVIEWOBJECT2;

typedef struct IParseDisplayName *LPPARSEDISPLAYNAME;

typedef struct IOleLink *LPOLELINK;

typedef struct IOleAdviseHolderVtbl IOleAdviseHolderVtbl, *PIOleAdviseHolderVtbl;

typedef struct IOleAdviseHolder IOleAdviseHolder, *PIOleAdviseHolder;

struct IOleAdviseHolderVtbl {
    HRESULT (*QueryInterface)(struct IOleAdviseHolder *, IID *, void **);
    ULONG (*AddRef)(struct IOleAdviseHolder *);
    ULONG (*Release)(struct IOleAdviseHolder *);
    HRESULT (*Advise)(struct IOleAdviseHolder *, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IOleAdviseHolder *, DWORD);
    HRESULT (*EnumAdvise)(struct IOleAdviseHolder *, struct IEnumSTATDATA **);
    HRESULT (*SendOnRename)(struct IOleAdviseHolder *, struct IMoniker *);
    HRESULT (*SendOnSave)(struct IOleAdviseHolder *);
    HRESULT (*SendOnClose)(struct IOleAdviseHolder *);
};

struct IOleAdviseHolder {
    struct IOleAdviseHolderVtbl *lpVtbl;
};

typedef enum tagOLEWHICHMK {
    OLEWHICHMK_CONTAINER=1,
    OLEWHICHMK_OBJREL=2,
    OLEWHICHMK_OBJFULL=3
} tagOLEWHICHMK;

typedef enum tagOLEWHICHMK OLEWHICHMK;

typedef enum tagOLECLOSE {
    OLECLOSE_SAVEIFDIRTY=0,
    OLECLOSE_NOSAVE=1,
    OLECLOSE_PROMPTSAVE=2
} tagOLECLOSE;

typedef enum tagOLECLOSE OLECLOSE;

typedef struct IContinue IContinue, *PIContinue;

typedef struct IContinueVtbl IContinueVtbl, *PIContinueVtbl;

struct IContinueVtbl {
    HRESULT (*QueryInterface)(struct IContinue *, IID *, void **);
    ULONG (*AddRef)(struct IContinue *);
    ULONG (*Release)(struct IContinue *);
    HRESULT (*FContinue)(struct IContinue *);
};

struct IContinue {
    struct IContinueVtbl *lpVtbl;
};

typedef struct IOleObject IOleObject, *PIOleObject;

typedef struct IOleObjectVtbl IOleObjectVtbl, *PIOleObjectVtbl;

struct IOleObjectVtbl {
    HRESULT (*QueryInterface)(struct IOleObject *, IID *, void **);
    ULONG (*AddRef)(struct IOleObject *);
    ULONG (*Release)(struct IOleObject *);
    HRESULT (*SetClientSite)(struct IOleObject *, struct IOleClientSite *);
    HRESULT (*GetClientSite)(struct IOleObject *, struct IOleClientSite **);
    HRESULT (*SetHostNames)(struct IOleObject *, LPCOLESTR, LPCOLESTR);
    HRESULT (*Close)(struct IOleObject *, DWORD);
    HRESULT (*SetMoniker)(struct IOleObject *, DWORD, struct IMoniker *);
    HRESULT (*GetMoniker)(struct IOleObject *, DWORD, DWORD, struct IMoniker **);
    HRESULT (*InitFromData)(struct IOleObject *, struct IDataObject *, BOOL, DWORD);
    HRESULT (*GetClipboardData)(struct IOleObject *, DWORD, struct IDataObject **);
    HRESULT (*DoVerb)(struct IOleObject *, LONG, LPMSG, struct IOleClientSite *, LONG, HWND, LPCRECT);
    HRESULT (*EnumVerbs)(struct IOleObject *, struct IEnumOLEVERB **);
    HRESULT (*Update)(struct IOleObject *);
    HRESULT (*IsUpToDate)(struct IOleObject *);
    HRESULT (*GetUserClassID)(struct IOleObject *, CLSID *);
    HRESULT (*GetUserType)(struct IOleObject *, DWORD, LPOLESTR *);
    HRESULT (*SetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (*GetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (*Advise)(struct IOleObject *, struct IAdviseSink *, DWORD *);
    HRESULT (*Unadvise)(struct IOleObject *, DWORD);
    HRESULT (*EnumAdvise)(struct IOleObject *, struct IEnumSTATDATA **);
    HRESULT (*GetMiscStatus)(struct IOleObject *, DWORD, DWORD *);
    HRESULT (*SetColorScheme)(struct IOleObject *, LOGPALETTE *);
};

struct IOleObject {
    struct IOleObjectVtbl *lpVtbl;
};

typedef enum tagOLEVERBATTRIB {
    OLEVERBATTRIB_NEVERDIRTIES=1,
    OLEVERBATTRIB_ONCONTAINERMENU=2
} tagOLEVERBATTRIB;

typedef struct IOleAdviseHolder *LPOLEADVISEHOLDER;

typedef struct tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;

typedef struct IDropTarget IDropTarget, *PIDropTarget;

typedef struct IDropTarget *LPDROPTARGET;

typedef struct IDropTargetVtbl IDropTargetVtbl, *PIDropTargetVtbl;

struct IDropTargetVtbl {
    HRESULT (*QueryInterface)(struct IDropTarget *, IID *, void **);
    ULONG (*AddRef)(struct IDropTarget *);
    ULONG (*Release)(struct IDropTarget *);
    HRESULT (*DragEnter)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
    HRESULT (*DragOver)(struct IDropTarget *, DWORD, POINTL, DWORD *);
    HRESULT (*DragLeave)(struct IDropTarget *);
    HRESULT (*Drop)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
};

struct IDropTarget {
    struct IDropTargetVtbl *lpVtbl;
};

typedef struct IOleCache2 *LPOLECACHE2;

typedef LPRECT LPBORDERWIDTHS;

typedef struct IOleInPlaceFrame *LPOLEINPLACEFRAME;

typedef struct IOleInPlaceSite *LPOLEINPLACESITE;

typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;

typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;

typedef struct IOleObject *LPOLEOBJECT;

typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;

typedef struct IOleContainer *LPOLECONTAINER;

typedef struct IOleWindowVtbl IOleWindowVtbl, *PIOleWindowVtbl;

typedef struct IOleWindow IOleWindow, *PIOleWindow;

struct IOleWindowVtbl {
    HRESULT (*QueryInterface)(struct IOleWindow *, IID *, void **);
    ULONG (*AddRef)(struct IOleWindow *);
    ULONG (*Release)(struct IOleWindow *);
    HRESULT (*GetWindow)(struct IOleWindow *, HWND *);
    HRESULT (*ContextSensitiveHelp)(struct IOleWindow *, BOOL);
};

struct IOleWindow {
    struct IOleWindowVtbl *lpVtbl;
};

typedef struct IOleClientSite *LPOLECLIENTSITE;

typedef struct IOleWindow *LPOLEWINDOW;

typedef enum tagOLELINKBIND OLELINKBIND;

typedef struct tagOLEVERB OLEVERB;

typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;

typedef enum tagOLEGETMONIKER OLEGETMONIKER;

typedef struct IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;

typedef OLEUPDATE *LPOLEUPDATE;

typedef enum tagBINDSPEED {
    BINDSPEED_INDEFINITE=1,
    BINDSPEED_MODERATE=2,
    BINDSPEED_IMMEDIATE=3
} tagBINDSPEED;

typedef enum tagBINDSPEED BINDSPEED;

typedef struct tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;

typedef enum tagUSERCLASSTYPE USERCLASSTYPE;

#define MK_ALT 32

#define DD_DEFDRAGDELAY 200

#define DROPEFFECT_MOVE 2

#define DROPEFFECT_SCROLL 2147483648

#define DD_DEFSCROLLINSET 11

#define UPDFCACHE_ONSAVECACHE 2

#define UPDFCACHE_NODATACACHE 1

#define DD_DEFSCROLLDELAY 50

#define UPDFCACHE_IFBLANK 16

#define UPDFCACHE_ONSTOPCACHE 4

#define UPDFCACHE_NORMALCACHE 8

#define DD_DEFSCROLLINTERVAL 50

#define UPDFCACHE_ALLBUTNODATACACHE -2147483650

#define UPDFCACHE_ALL -2147483649

#define DROPEFFECT_LINK 4

#define DROPEFFECT_COPY 1

#define UPDFCACHE_ONLYIFBLANK 2147483648

#define DROPEFFECT_NONE 0

#define UPDFCACHE_IFBLANKORONSAVECACHE 18

#define DD_DEFDRAGMINDIST 2

typedef struct fpos_t fpos_t, *Pfpos_t;

struct fpos_t {
    uint lopart;
    int hipart;
};

#define _IOWRT 2

#define FOPEN_MAX 20

#define _IORW 128

#define _IONBF 4

#define _IOEOF 16

#define _IOMYBUF 8

#define _IOERR 32

#define _IOLBF 64

#define SYS_OPEN 20

#define _SYS_OPEN 20

#define EOF -1

#define _IOSTRG 64

#define _IOFBF 0

#define _IOREAD 1

#define _IOB_ENTRIES 20

#define FILENAME_MAX 260

#define TMP_MAX 32767

#define BUFSIZ 512

#define _NSTREAM_ 512

#define _NFILE 512

typedef z_stream *z_streamp;

typedef void *voidp;

typedef voidp gzFile;

#define Z_DEFLATED 8

#define Z_DEFAULT_STRATEGY 0

#define Z_FILTERED 1

#define Z_BEST_SPEED 1

#define Z_PARTIAL_FLUSH 1

#define Z_ERRNO -1

#define Z_STREAM_END 1

#define Z_VERSION_ERROR -6

#define Z_SYNC_FLUSH 2

#define Z_UNKNOWN 2

#define Z_NO_FLUSH 0

#define Z_DEFAULT_COMPRESSION -1

#define Z_NEED_DICT 2

#define Z_FINISH 4

#define Z_DATA_ERROR -3

#define Z_BEST_COMPRESSION 9

#define Z_NO_COMPRESSION 0

#define Z_STREAM_ERROR -2

#define Z_BINARY 0

#define Z_ASCII 1

#define Z_FULL_FLUSH 3

#define Z_BUF_ERROR -5

#define Z_HUFFMAN_ONLY 2

#define Z_MEM_ERROR -4

#define Z_NULL 0

#define Z_OK 0

typedef struct _UNIVERSAL_NAME_INFOA _UNIVERSAL_NAME_INFOA, *P_UNIVERSAL_NAME_INFOA;

typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;

typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;

struct _UNIVERSAL_NAME_INFOA {
    LPSTR lpUniversalName;
};

typedef struct _CONNECTDLGSTRUCTW _CONNECTDLGSTRUCTW, *P_CONNECTDLGSTRUCTW;

typedef struct _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

typedef struct _NETRESOURCEW _NETRESOURCEW, *P_NETRESOURCEW;

typedef struct _NETRESOURCEW *LPNETRESOURCEW;

struct _CONNECTDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEW lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

struct _NETRESOURCEW {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    LPWSTR lpComment;
    LPWSTR lpProvider;
};

typedef UINT (*PFNGETPROFILEPATHW)(LPCWSTR, LPWSTR, UINT);

typedef UINT (*PFNRECONCILEPROFILEA)(LPCSTR, LPCSTR, DWORD);

typedef struct _NETRESOURCEA _NETRESOURCEA, *P_NETRESOURCEA;

typedef struct _NETRESOURCEA *LPNETRESOURCEA;

struct _NETRESOURCEA {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    LPSTR lpComment;
    LPSTR lpProvider;
};

typedef struct _REMOTE_NAME_INFOW _REMOTE_NAME_INFOW, *P_REMOTE_NAME_INFOW;

struct _REMOTE_NAME_INFOW {
    LPWSTR lpUniversalName;
    LPWSTR lpConnectionName;
    LPWSTR lpRemainingPath;
};

typedef struct _CONNECTDLGSTRUCTA _CONNECTDLGSTRUCTA, *P_CONNECTDLGSTRUCTA;

typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;

struct _CONNECTDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEA lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

typedef struct _DISCDLGSTRUCTA _DISCDLGSTRUCTA, *P_DISCDLGSTRUCTA;

struct _DISCDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _NETINFOSTRUCT _NETINFOSTRUCT, *P_NETINFOSTRUCT;

typedef struct _NETINFOSTRUCT *LPNETINFOSTRUCT;

struct _NETINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwProviderVersion;
    DWORD dwStatus;
    DWORD dwCharacteristics;
    ULONG_PTR dwHandle;
    WORD wNetType;
    DWORD dwPrinters;
    DWORD dwDrives;
};

typedef struct _NETCONNECTINFOSTRUCT _NETCONNECTINFOSTRUCT, *P_NETCONNECTINFOSTRUCT;

struct _NETCONNECTINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwFlags;
    DWORD dwSpeed;
    DWORD dwDelay;
    DWORD dwOptDataSize;
};

typedef LPNETRESOURCEA LPNETRESOURCE;

typedef struct _UNIVERSAL_NAME_INFOW _UNIVERSAL_NAME_INFOW, *P_UNIVERSAL_NAME_INFOW;

struct _UNIVERSAL_NAME_INFOW {
    LPWSTR lpUniversalName;
};

typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCTA;

typedef DISCDLGSTRUCTA DISCDLGSTRUCT;

typedef BOOL (*PFNPROCESSPOLICIESW)(HWND, LPCWSTR, LPCWSTR, LPCWSTR, DWORD);

typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;

typedef struct _REMOTE_NAME_INFOA _REMOTE_NAME_INFOA, *P_REMOTE_NAME_INFOA;

typedef struct _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;

typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO;

struct _REMOTE_NAME_INFOA {
    LPSTR lpUniversalName;
    LPSTR lpConnectionName;
    LPSTR lpRemainingPath;
};

typedef struct _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;

typedef struct _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;

typedef BOOL (*PFNPROCESSPOLICIESA)(HWND, LPCSTR, LPCSTR, LPCSTR, DWORD);

typedef struct _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;

typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO;

typedef struct _DISCDLGSTRUCTW _DISCDLGSTRUCTW, *P_DISCDLGSTRUCTW;

typedef struct _DISCDLGSTRUCTW DISCDLGSTRUCTW;

struct _DISCDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;

typedef struct _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;

typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT;

typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;

typedef struct _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;

typedef struct _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;

typedef struct _NETRESOURCEA NETRESOURCEA;

typedef NETRESOURCEA NETRESOURCE;

typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT;

typedef struct _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;

typedef struct _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

typedef struct _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

typedef struct _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;

typedef UINT (*PFNGETPROFILEPATHA)(LPCSTR, LPSTR, UINT);

typedef struct _NETINFOSTRUCT NETINFOSTRUCT;

typedef struct _NETRESOURCEW NETRESOURCEW;

typedef struct _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;

typedef UINT (*PFNRECONCILEPROFILEW)(LPCWSTR, LPCWSTR, DWORD);

#define RESOURCE_CONNECTED 1

#define RESOURCEUSAGE_CONTAINER 2

#define RESOURCEDISPLAYTYPE_FILE 4

#define WNNC_CRED_MANAGER 4294901760

#define CONNECT_UPDATE_RECENT 2

#define RESOURCEDISPLAYTYPE_TREE 10

#define WN_OUT_OF_MEMORY 8

#define WN_WINDOWS_ERROR 59

#define WNNC_NET_KNOWARE 3080192

#define CONNDLG_PERSIST 16

#define WNNC_NET_SYMFONET 1376256

#define WNNC_NET_LOCK 3473408

#define RESOURCEUSAGE_CONNECTABLE 1

#define CONNDLG_CONN_POINT 2

#define WN_NOT_AUTHENTICATED 1244

#define WN_BAD_LOCALNAME 1200

#define WN_CONNECTION_CLOSED 1201

#define WNNC_NET_MSNET 65536

#define WN_FUNCTION_BUSY 170

#define WNNC_NET_COGENT 1114112

#define WN_BAD_NETNAME 67

#define WNNC_NET_MASFAX 3211264

#define WNNC_NET_RIVERFRONT1 1966080

#define WNNC_NET_RIVERFRONT2 2031616

#define WN_NOT_CONNECTED 2250

#define NETINFO_PRINTERRED 8

#define WNNC_NET_AS400 720896

#define NETINFO_DISKRED 4

#define WNNC_NET_NETWARE 196608

#define WN_ACCESS_DENIED 5

#define WN_DEVICE_ALREADY_REMEMBERED 1202

#define RESOURCEDISPLAYTYPE_GENERIC 0

#define WN_RETRY 1237

#define UNIVERSAL_NAME_INFO_LEVEL 1

#define RESOURCETYPE_UNKNOWN 4294967295

#define RESOURCEUSAGE_RESERVED 2147483648

#define CONNECT_UPDATE_PROFILE 1

#define WNNC_NET_PATHWORKS 851968

#define WN_CANCEL 1223

#define RESOURCETYPE_DISK 1

#define WNNC_NET_LIFENET 917504

#define CONNDLG_RO_PATH 1

#define RESOURCETYPE_ANY 0

#define CONNECT_DEFERRED 1024

#define WN_BAD_LEVEL 124

#define CONNECT_RESERVED 4278190080

#define PP_DISPLAYERRORS 1

#define CONNDLG_HIDE_BOX 8

#define WNNC_NET_EXIFS 2949120

#define CONNECT_NEED_DRIVE 32

#define WNNC_NET_TWINS 2359296

#define WNNC_NET_CLEARCASE 1441792

#define WN_NO_MORE_DEVICES 1248

#define CONNECT_PROMPT 16

#define WNNC_NET_LANSTEP 524288

#define WNNC_NET_FTP_NFS 786432

#define WN_NOT_INITIALIZING 1247

#define WNNC_NET_PROTSTOR 2162688

#define CONNDLG_NOT_PERSIST 32

#define WN_MORE_DATA 234

#define WN_NOT_CONTAINER 1207

#define WNNC_NET_TERMSRV 3538944

#define WN_BAD_HANDLE 6

#define WN_NO_NET_OR_BAD_PATH 1203

#define WNNC_NET_SERNET 1900544

#define RESOURCEDISPLAYTYPE_SHAREADMIN 8

#define DISC_UPDATE_PROFILE 1

#define WNNC_NET_FOXBAT 2818048

#define RESOURCEDISPLAYTYPE_SERVER 2

#define RESOURCEUSAGE_ATTACHED 16

#define WNNC_NET_SHIVA 3342336

#define WNNC_NET_BWNFS 1048576

#define WN_BAD_PROFILE 1206

#define WNCON_FORNETCARD 1

#define WNNC_NET_9TILES 589824

#define WNNC_NET_FRONTIER 1507328

#define WNNC_NET_INTERGRAPH 1310720

#define WN_NOT_VALIDATED 1311

#define WN_NOT_LOGGED_ON 1245

#define WN_BAD_DEV_TYPE 66

#define RESOURCE_CONTEXT 5

#define WN_SUCCESS 0

#define WN_BAD_PASSWORD 86

#define WNNC_NET_VINES 262144

#define CONNDLG_USE_MRU 4

#define WNFMT_CONNECTION 32

#define WN_CANNOT_OPEN_PROFILE 1205

#define WNNC_NET_YAHOO 2883584

#define RESOURCEDISPLAYTYPE_NDSCONTAINER 11

#define WNNC_NET_LANMAN 131072

#define RESOURCEUSAGE_ALL 19

#define WNNC_NET_AVID 1703936

#define WN_NET_ERROR 59

#define WNNC_NET_DECORB 2097152

#define WN_DEVICE_ERROR 31

#define WNNC_NET_CSC 2490368

#define RESOURCEDISPLAYTYPE_NETWORK 6

#define WNNC_NET_LANTASTIC 655360

#define WNCON_DYNAMIC 8

#define WNNC_NET_STAC 2752512

#define WNNC_NET_MANGOSOFT 1835008

#define WN_ALREADY_CONNECTED 85

#define WN_OPEN_FILES 2401

#define RESOURCEDISPLAYTYPE_ROOT 7

#define RESOURCE_RECENT 4

#define WN_BAD_VALUE 87

#define WNNC_NET_FJ_REDIR 2228224

#define WN_NO_MORE_ENTRIES 259

#define WNCON_NOTROUTED 2

#define CONNECT_REFCOUNT 64

#define WNNC_NET_DISTINCT 2293760

#define WN_NOT_SUPPORTED 50

#define WNNC_NET_SUN_PC_NFS 458752

#define RESOURCEDISPLAYTYPE_DOMAIN 1

#define CONNECT_LOCALDRIVE 256

#define WN_CONNECTED_OTHER_PASSWORD 2108

#define DISC_NO_FORCE 64

#define WN_DEVICE_IN_USE 2404

#define WNNC_NET_DOCUSPACE 1769472

#define WN_NO_NETWORK 1222

#define RESOURCEDISPLAYTYPE_DIRECTORY 9

#define RESOURCEDISPLAYTYPE_SHARE 3

#define CONNECT_CMD_SAVECRED 4096

#define WNNC_NET_HOB_NFS 3276800

#define WNCON_SLOWLINK 4

#define WN_BAD_POINTER 487

#define NETPROPERTY_PERSISTENT 1

#define WNNC_NET_LOCUS 393216

#define WN_EXTENDED_ERROR 1208

#define WNNC_NET_APPLETALK 1245184

#define WNNC_NET_FARALLON 1179648

#define RESOURCE_REMEMBERED 3

#define CONNECT_INTERACTIVE 8

#define WNNC_NET_IBMAL 3407872

#define RP_LOGON 1

#define RP_INIFILE 2

#define RESOURCE_GLOBALNET 2

#define RESOURCEUSAGE_SIBLING 8

#define RESOURCEUSAGE_NOLOCALDEVICE 4

#define CONNECT_CURRENT_MEDIA 512

#define WNNC_NET_3IN1 2555904

#define WNNC_NET_BMC 1572864

#define WN_BAD_USER 2202

#define WNNC_NET_EXTENDNET 2686976

#define WNNC_NET_10NET 327680

#define RESOURCEDISPLAYTYPE_GROUP 5

#define WNNC_NET_OBJECT_DIRE 3145728

#define WN_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define CONNECT_COMMANDLINE 2048

#define WNNC_NET_DAV 3014656

#define NETINFO_DLL16 1

#define WNNC_NET_POWERLAN 983040

#define WNFMT_INENUM 16

#define WNNC_NET_RDR2SAMPLE 2424832

#define WNNC_NET_DCE 1638400

#define WNFMT_MULTILINE 1

#define WN_NO_ERROR 0

#define REMOTE_NAME_INFO_LEVEL 2

#define WN_BAD_PROVIDER 1204

#define WNFMT_ABBREVIATED 2

#define CONNECT_REDIRECT 128

#define CONNECT_TEMPORARY 4

#define RESOURCETYPE_PRINT 2

#define RESOURCETYPE_RESERVED 8

typedef struct tagPDEXW tagPDEXW, *PtagPDEXW;

typedef struct tagPRINTPAGERANGE tagPRINTPAGERANGE, *PtagPRINTPAGERANGE;

typedef struct tagPRINTPAGERANGE *LPPRINTPAGERANGE;

typedef struct _PSP _PSP, *P_PSP;

typedef struct _PSP *HPROPSHEETPAGE;

struct tagPRINTPAGERANGE {
    DWORD nFromPage;
    DWORD nToPage;
};

struct tagPDEXW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCWSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE *lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

struct _PSP {
};

typedef struct _OFNOTIFYA _OFNOTIFYA, *P_OFNOTIFYA;

typedef struct _OFNOTIFYA OFNOTIFYA;

typedef struct tagNMHDR tagNMHDR, *PtagNMHDR;

typedef struct tagNMHDR NMHDR;

typedef struct tagOFNA tagOFNA, *PtagOFNA;

typedef struct tagOFNA *LPOPENFILENAMEA;

typedef UINT_PTR (*LPOFNHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagNMHDR {
    HWND hwndFrom;
    UINT_PTR idFrom;
    UINT code;
};

struct _OFNOTIFYA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPSTR pszFile;
};

struct tagOFNA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagCHOOSEFONTA tagCHOOSEFONTA, *PtagCHOOSEFONTA;

typedef UINT_PTR (*LPCFHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagCHOOSEFONTA {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTA lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
    HINSTANCE hInstance;
    LPSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

typedef struct tagDEVNAMES tagDEVNAMES, *PtagDEVNAMES;

struct tagDEVNAMES {
    WORD wDriverOffset;
    WORD wDeviceOffset;
    WORD wOutputOffset;
    WORD wDefault;
};

typedef struct _OFNOTIFYW _OFNOTIFYW, *P_OFNOTIFYW;

typedef struct tagOFNW tagOFNW, *PtagOFNW;

typedef struct tagOFNW *LPOPENFILENAMEW;

struct _OFNOTIFYW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPWSTR pszFile;
};

struct tagOFNW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct _OFNOTIFYW OFNOTIFYW;

typedef struct _OFNOTIFYEXA _OFNOTIFYEXA, *P_OFNOTIFYEXA;

typedef struct _OFNOTIFYEXA OFNOTIFYEXA;

struct _OFNOTIFYEXA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

typedef OFNOTIFYEXA OFNOTIFYEX;

typedef struct tagFINDREPLACEA tagFINDREPLACEA, *PtagFINDREPLACEA;

typedef struct tagFINDREPLACEA *LPFINDREPLACEA;

typedef LPFINDREPLACEA LPFINDREPLACE;

typedef UINT_PTR (*LPFRHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagFINDREPLACEA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPSTR lpstrFindWhat;
    LPSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagCHOOSECOLORW tagCHOOSECOLORW, *PtagCHOOSECOLORW;

typedef struct tagCHOOSECOLORW CHOOSECOLORW;

typedef UINT_PTR (*LPCCHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagCHOOSECOLORW {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF *lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct tagPDA tagPDA, *PtagPDA;

typedef struct tagPDA PRINTDLGA;

typedef PRINTDLGA PRINTDLG;

typedef UINT_PTR (*LPPRINTHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

typedef UINT_PTR (*LPSETUPHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagPDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCSTR lpPrintTemplateName;
    LPCSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct _OFNOTIFYEXW _OFNOTIFYEXW, *P_OFNOTIFYEXW;

struct _OFNOTIFYEXW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

typedef struct tagPDEXA tagPDEXA, *PtagPDEXA;

typedef struct tagPDEXA PRINTDLGEXA;

typedef PRINTDLGEXA PRINTDLGEX;

struct tagPDEXA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE *lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

typedef struct _OFNOTIFYEXW OFNOTIFYEXW;

typedef struct tagOFNW OPENFILENAMEW;

typedef LPOPENFILENAMEA LPOPENFILENAME;

typedef struct tagOFN_NT4A tagOFN_NT4A, *PtagOFN_NT4A;

typedef struct tagOFN_NT4A OPENFILENAME_NT4A;

struct tagOFN_NT4A {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct _OFNOTIFYW *LPOFNOTIFYW;

typedef struct tagCHOOSECOLORA tagCHOOSECOLORA, *PtagCHOOSECOLORA;

typedef struct tagCHOOSECOLORA CHOOSECOLORA;

struct tagCHOOSECOLORA {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF *lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagPSDA tagPSDA, *PtagPSDA;

typedef struct tagPSDA PAGESETUPDLGA;

typedef PAGESETUPDLGA PAGESETUPDLG;

typedef UINT_PTR (*LPPAGESETUPHOOK)(HWND, UINT, WPARAM, LPARAM);

typedef UINT_PTR (*LPPAGEPAINTHOOK)(HWND, UINT, WPARAM, LPARAM);

struct tagPSDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef struct tagOFN_NT4W tagOFN_NT4W, *PtagOFN_NT4W;

typedef struct tagOFN_NT4W OPENFILENAME_NT4W;

struct tagOFN_NT4W {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct tagPDEXA *LPPRINTDLGEXA;

typedef LPPRINTDLGEXA LPPRINTDLGEX;

typedef struct _OFNOTIFYA *LPOFNOTIFYA;

typedef struct tagPDW tagPDW, *PtagPDW;

struct tagPDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCWSTR lpPrintTemplateName;
    LPCWSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct tagOFNA OPENFILENAMEA;

typedef struct IPrintDialogServicesVtbl IPrintDialogServicesVtbl, *PIPrintDialogServicesVtbl;

typedef struct IPrintDialogServices IPrintDialogServices, *PIPrintDialogServices;

struct IPrintDialogServicesVtbl {
    HRESULT (*QueryInterface)(struct IPrintDialogServices *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IPrintDialogServices *);
    ULONG (*Release)(struct IPrintDialogServices *);
    HRESULT (*GetCurrentDevMode)(struct IPrintDialogServices *, LPDEVMODE, UINT *);
    HRESULT (*GetCurrentPrinterName)(struct IPrintDialogServices *, LPTSTR, UINT *);
    HRESULT (*GetCurrentPortName)(struct IPrintDialogServices *, LPTSTR, UINT *);
};

struct IPrintDialogServices {
    struct IPrintDialogServicesVtbl *lpVtbl;
};

typedef struct tagPRINTPAGERANGE PRINTPAGERANGE;

typedef struct _OFNOTIFYEXA *LPOFNOTIFYEXA;

typedef struct tagPDW PRINTDLGW;

typedef struct tagCHOOSECOLORW *LPCHOOSECOLORW;

typedef struct tagOFN_NT4A *LPOPENFILENAME_NT4A;

typedef struct tagFINDREPLACEA FINDREPLACEA;

typedef FINDREPLACEA FINDREPLACE;

typedef OPENFILENAMEA OPENFILENAME;

typedef struct tagCHOOSEFONTA CHOOSEFONTA;

typedef struct tagFINDREPLACEW tagFINDREPLACEW, *PtagFINDREPLACEW;

typedef struct tagFINDREPLACEW *LPFINDREPLACEW;

struct tagFINDREPLACEW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPWSTR lpstrFindWhat;
    LPWSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct _OFNOTIFYEXW *LPOFNOTIFYEXW;

typedef struct tagCHOOSEFONTW tagCHOOSEFONTW, *PtagCHOOSEFONTW;

struct tagCHOOSEFONTW {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTW lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
    HINSTANCE hInstance;
    LPWSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

typedef struct tagCHOOSEFONTA *LPCHOOSEFONTA;

typedef LPCHOOSEFONTA LPCHOOSEFONT;

typedef struct tagPDEXW PRINTDLGEXW;

typedef struct tagCHOOSEFONTW CHOOSEFONTW;

typedef struct tagPDEXW *LPPRINTDLGEXW;

typedef struct tagCHOOSEFONTW *LPCHOOSEFONTW;

typedef struct tagPDA *LPPRINTDLGA;

typedef LPPRINTDLGA LPPRINTDLG;

typedef struct IPrintDialogCallback IPrintDialogCallback, *PIPrintDialogCallback;

typedef struct IPrintDialogCallbackVtbl IPrintDialogCallbackVtbl, *PIPrintDialogCallbackVtbl;

struct IPrintDialogCallback {
    struct IPrintDialogCallbackVtbl *lpVtbl;
};

struct IPrintDialogCallbackVtbl {
    HRESULT (*QueryInterface)(struct IPrintDialogCallback *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IPrintDialogCallback *);
    ULONG (*Release)(struct IPrintDialogCallback *);
    HRESULT (*InitDone)(struct IPrintDialogCallback *);
    HRESULT (*SelectionChange)(struct IPrintDialogCallback *);
    HRESULT (*HandleMessage)(struct IPrintDialogCallback *, HWND, UINT, WPARAM, LPARAM, LRESULT *);
};

typedef struct tagPSDW tagPSDW, *PtagPSDW;

typedef struct tagPSDW PAGESETUPDLGW;

struct tagPSDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCWSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef OFNOTIFYA OFNOTIFY;

typedef struct tagCHOOSECOLORA *LPCHOOSECOLORA;

typedef struct tagPSDW *LPPAGESETUPDLGW;

typedef struct tagPSDA *LPPAGESETUPDLGA;

typedef LPPAGESETUPDLGA LPPAGESETUPDLG;

typedef LPCHOOSECOLORA LPCHOOSECOLOR;

typedef struct tagDEVNAMES DEVNAMES;

typedef struct tagPDW *LPPRINTDLGW;

typedef LPOFNOTIFYA LPOFNOTIFY;

typedef struct tagOFN_NT4W *LPOPENFILENAME_NT4W;

typedef CHOOSEFONTA CHOOSEFONT;

typedef OPENFILENAME_NT4A OPENFILENAME_NT4;

typedef struct tagFINDREPLACEW FINDREPLACEW;

typedef LPOFNOTIFYEXA LPOFNOTIFYEX;

typedef CHOOSECOLORA CHOOSECOLOR;

typedef LPOPENFILENAME_NT4A LPOPENFILENAME_NT4;

typedef struct tagDEVNAMES *LPDEVNAMES;

#define FR_REPLACE 16

#define CF_NOSIMULATIONS 4096

#define SIMULATED_FONTTYPE 32768

#define OFN_FILEMUSTEXIST 4096

#define PD_ALLPAGES 0

#define WM_PSD_PAGESETUPDLG 1024

#define CF_NOSIZESEL 2097152

#define PSD_ENABLEPAGESETUPTEMPLATEHANDLE 131072

#define CF_ENABLETEMPLATE 16

#define PD_NOPAGENUMS 8

#define CF_SCREENFONTS 1

#define PD_ENABLESETUPTEMPLATE 32768

#define CF_NOSTYLESEL 1048576

#define FR_MATCHKASHIDA 1073741824

#define PD_COLLATE 16

#define CDM_LAST 1224

#define CF_LIMITSIZE 8192

#define OFN_SHARENOWARN 1

#define CDN_FIRST -601

#define REGULAR_FONTTYPE 1024

#define WM_CHOOSEFONT_SETFLAGS 1126

#define OFN_SHAREFALLTHROUGH 2

#define PSD_DISABLEPRINTER 32

#define CDN_TYPECHANGE -607

#define CDN_INITDONE -601

#define OFN_ENABLEHOOK 32

#define WM_PSD_FULLPAGERECT 1025

#define CDN_HELP -605

#define CF_BOTH 3

#define OFN_NONETWORKBUTTON 131072

#define OFN_OVERWRITEPROMPT 2

#define CF_SCALABLEONLY 131072

#define CF_NOOEMFONTS 2048

#define CDN_FILEOK -606

#define PSD_INTHOUSANDTHSOFINCHES 4

#define FR_ENABLETEMPLATEHANDLE 8192

#define CDM_GETFILEPATH 1125

#define CC_FULLOPEN 2

#define CDN_INCLUDEITEM -608

#define PD_ENABLEPRINTTEMPLATEHANDLE 65536

#define START_PAGE_GENERAL 4294967295

#define CF_ENABLETEMPLATEHANDLE 32

#define PD_RETURNIC 512

#define CDN_FOLDERCHANGE -603

#define PSD_MINMARGINS 1

#define PSD_ENABLEPAGESETUPTEMPLATE 32768

#define CF_FORCEFONTEXIST 65536

#define CF_FIXEDPITCHONLY 16384

#define OFN_LONGNAMES 2097152

#define PD_EXCL_COPIESANDCOLLATE 33024

#define PSD_ENABLEPAGEPAINTHOOK 262144

#define PD_USEDEVMODECOPIESANDCOLLATE 262144

#define CF_EFFECTS 256

#define CDM_FIRST 1124

#define CF_NOVECTORFONTS 2048

#define OFN_NOCHANGEDIR 8

#define WM_PSD_MARGINRECT 1027

#define CDM_HIDECONTROL 1129

#define PD_RESULT_APPLY 2

#define PD_NONETWORKBUTTON 2097152

#define CC_ENABLETEMPLATEHANDLE 64

#define FR_HIDEMATCHCASE 32768

#define PSD_INWININIINTLMEASURE 0

#define PD_NOWARNING 128

#define OFN_ENABLEINCLUDENOTIFY 4194304

#define CF_ENABLEHOOK 8

#define FR_HIDEUPDOWN 16384

#define PD_ENABLEPRINTTEMPLATE 16384

#define PSD_SHOWHELP 2048

#define PD_SHOWHELP 2048

#define CF_WYSIWYG 32768

#define OFN_CREATEPROMPT 8192

#define OFN_SHAREWARN 0

#define PD_RESULT_PRINT 1

#define PD_RETURNDC 256

#define FR_ENABLETEMPLATE 512

#define FR_ENABLEHOOK 256

#define PD_EXCLUSIONFLAGS 16777216

#define CDN_SELCHANGE -602

#define CF_PRINTERFONTS 2

#define OFN_PATHMUSTEXIST 2048

#define PSD_INHUNDREDTHSOFMILLIMETERS 8

#define WM_PSD_ENVSTAMPRECT 1029

#define PD_USELARGETEMPLATE 268435456

#define PD_RETURNDEFAULT 1024

#define PSD_RETURNDEFAULT 1024

#define WM_CHOOSEFONT_GETLOGFONT 1025

#define OFN_ENABLETEMPLATE 64

#define CC_ANYCOLOR 256

#define PD_ENABLESETUPTEMPLATEHANDLE 131072

#define OFN_NODEREFERENCELINKS 1048576

#define CD_LBSELADD 2

#define PSD_DISABLEPAGEPAINTING 524288

#define OFN_NOTESTFILECREATE 65536

#define OFN_SHOWHELP 16

#define FR_MATCHDIAC 536870912

#define FR_FINDNEXT 8

#define OFN_READONLY 1

#define FR_WHOLEWORD 2

#define OFN_NOREADONLYRETURN 32768

#define PRINTER_FONTTYPE 16384

#define FR_MATCHALEFHAMZA 2147483648

#define PD_CURRENTPAGE 4194304

#define FR_NOMATCHCASE 2048

#define CF_SCRIPTSONLY 1024

#define CC_ENABLETEMPLATE 32

#define CD_LBSELNOITEMS -1

#define CDN_SHAREVIOLATION -604

#define OFN_NOVALIDATE 256

#define CF_ANSIONLY 1024

#define WM_PSD_GREEKTEXTRECT 1028

#define PSD_DISABLEPAPER 512

#define SCREEN_FONTTYPE 8192

#define FR_DIALOGTERM 64

#define CF_SHOWHELP 4

#define FR_RAW 131072

#define BOLD_FONTTYPE 256

#define CF_NOFACESEL 524288

#define PD_RESULT_CANCEL 0

#define CDM_GETFOLDERIDLIST 1127

#define CF_USESTYLE 128

#define CD_LBSELCHANGE 0

#define PD_NOCURRENTPAGE 8388608

#define PSD_DISABLEORIENTATION 256

#define OFN_EXTENSIONDIFFERENT 1024

#define PD_PAGENUMS 2

#define FR_MATCHCASE 4

#define CDM_SETDEFEXT 1130

#define CF_SELECTSCRIPT 4194304

#define CF_TTONLY 262144

#define OFN_ENABLETEMPLATEHANDLE 128

#define CF_NOSCRIPTSEL 8388608

#define PD_NOSELECTION 4

#define PSD_NOWARNING 128

#define CC_RGBINIT 1

#define PSD_DISABLEMARGINS 16

#define PD_PRINTSETUP 64

#define PSD_MARGINS 2

#define PD_ENABLESETUPHOOK 8192

#define PD_HIDEPRINTTOFILE 1048576

#define CDM_GETFOLDERPATH 1126

#define OFN_ENABLESIZING 8388608

#define CD_LBSELSUB 1

#define PD_DISABLEPRINTTOFILE 524288

#define WM_PSD_MINMARGINRECT 1026

#define PSD_DEFAULTMINMARGINS 0

#define PSD_NONETWORKBUTTON 2097152

#define FR_SHOWHELP 128

#define PD_PRINTTOFILE 32

#define PD_SELECTION 1

#define ITALIC_FONTTYPE 512

#define CC_SHOWHELP 8

#define OFN_NOLONGNAMES 262144

#define OFN_SHAREAWARE 16384

#define WM_CHOOSEFONT_SETLOGFONT 1125

#define PSD_ENABLEPAGESETUPHOOK 8192

#define CDM_GETSPEC 1124

#define CF_APPLY 512

#define CDM_SETCONTROLTEXT 1128

#define PD_USEDEVMODECOPIES 262144

#define CC_ENABLEHOOK 16

#define WM_PSD_YAFULLPAGERECT 1030

#define FR_HIDEWHOLEWORD 65536

#define FR_NOWHOLEWORD 4096

#define OFN_HIDEREADONLY 4

#define OFN_ALLOWMULTISELECT 512

#define CF_NOVERTFONTS 16777216

#define DN_DEFAULTPRN 1

#define CC_SOLIDCOLOR 128

#define FR_REPLACEALL 32

#define CC_PREVENTFULLOPEN 4

#define CDN_LAST -699

#define FR_DOWN 1

#define FR_NOUPDOWN 1024

#define CF_INITTOLOGFONTSTRUCT 64

#define PD_ENABLEPRINTHOOK 4096

#define OFN_EXPLORER 524288

typedef struct HCONVLIST__ HCONVLIST__, *PHCONVLIST__;

struct HCONVLIST__ {
    int unused;
};

typedef struct tagMONHSZSTRUCTA tagMONHSZSTRUCTA, *PtagMONHSZSTRUCTA;

typedef struct HSZ__ HSZ__, *PHSZ__;

typedef struct HSZ__ *HSZ;

struct tagMONHSZSTRUCTA {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    CHAR str[1];
};

struct HSZ__ {
    int unused;
};

typedef struct tagMONMSGSTRUCT tagMONMSGSTRUCT, *PtagMONMSGSTRUCT;

typedef struct tagDDEML_MSG_HOOK_DATA tagDDEML_MSG_HOOK_DATA, *PtagDDEML_MSG_HOOK_DATA;

typedef struct tagDDEML_MSG_HOOK_DATA DDEML_MSG_HOOK_DATA;

struct tagDDEML_MSG_HOOK_DATA {
    UINT_PTR uiLo;
    UINT_PTR uiHi;
    DWORD cbData;
    DWORD Data[8];
};

struct tagMONMSGSTRUCT {
    UINT cb;
    HWND hwndTo;
    DWORD dwTime;
    HANDLE hTask;
    UINT wMsg;
    WPARAM wParam;
    LPARAM lParam;
    DDEML_MSG_HOOK_DATA dmhd;
};

typedef struct tagCONVINFO tagCONVINFO, *PtagCONVINFO;

typedef struct tagCONVINFO CONVINFO;

typedef struct HCONV__ HCONV__, *PHCONV__;

typedef struct HCONV__ *HCONV;

typedef struct HCONVLIST__ *HCONVLIST;

typedef struct tagCONVCONTEXT tagCONVCONTEXT, *PtagCONVCONTEXT;

typedef struct tagCONVCONTEXT CONVCONTEXT;

struct tagCONVCONTEXT {
    UINT cb;
    UINT wFlags;
    UINT wCountryID;
    int iCodePage;
    DWORD dwLangID;
    DWORD dwSecurity;
    SECURITY_QUALITY_OF_SERVICE qos;
};

struct tagCONVINFO {
    DWORD cb;
    DWORD_PTR hUser;
    HCONV hConvPartner;
    HSZ hszSvcPartner;
    HSZ hszServiceReq;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    UINT wType;
    UINT wStatus;
    UINT wConvst;
    UINT wLastError;
    HCONVLIST hConvList;
    CONVCONTEXT ConvCtxt;
    HWND hwnd;
    HWND hwndPartner;
};

struct HCONV__ {
    int unused;
};

typedef struct tagMONCBSTRUCT tagMONCBSTRUCT, *PtagMONCBSTRUCT;

typedef struct tagMONCBSTRUCT *PMONCBSTRUCT;

typedef struct HDDEDATA__ HDDEDATA__, *PHDDEDATA__;

typedef struct HDDEDATA__ *HDDEDATA;

struct tagMONCBSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    DWORD dwRet;
    UINT wType;
    UINT wFmt;
    HCONV hConv;
    HSZ hsz1;
    HSZ hsz2;
    HDDEDATA hData;
    ULONG_PTR dwData1;
    ULONG_PTR dwData2;
    CONVCONTEXT cc;
    DWORD cbData;
    DWORD Data[8];
};

struct HDDEDATA__ {
    int unused;
};

typedef struct tagMONHSZSTRUCTA MONHSZSTRUCTA;

typedef MONHSZSTRUCTA MONHSZSTRUCT;

typedef struct tagMONHSZSTRUCTW tagMONHSZSTRUCTW, *PtagMONHSZSTRUCTW;

struct tagMONHSZSTRUCTW {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    WCHAR str[1];
};

typedef struct tagMONERRSTRUCT tagMONERRSTRUCT, *PtagMONERRSTRUCT;

typedef struct tagMONERRSTRUCT *PMONERRSTRUCT;

struct tagMONERRSTRUCT {
    UINT cb;
    UINT wLastError;
    DWORD dwTime;
    HANDLE hTask;
};

typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;

typedef struct tagMONCONVSTRUCT tagMONCONVSTRUCT, *PtagMONCONVSTRUCT;

typedef struct tagMONCONVSTRUCT *PMONCONVSTRUCT;

struct tagMONCONVSTRUCT {
    UINT cb;
    BOOL fConnect;
    DWORD dwTime;
    HANDLE hTask;
    HSZ hszSvc;
    HSZ hszTopic;
    HCONV hConvClient;
    HCONV hConvServer;
};

typedef HDDEDATA (FNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

typedef struct tagHSZPAIR tagHSZPAIR, *PtagHSZPAIR;

typedef struct tagHSZPAIR HSZPAIR;

typedef HSZPAIR *PHSZPAIR;

struct tagHSZPAIR {
    HSZ hszSvc;
    HSZ hszTopic;
};

typedef CONVINFO *PCONVINFO;

typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;

typedef struct tagMONMSGSTRUCT *PMONMSGSTRUCT;

typedef CONVCONTEXT *PCONVCONTEXT;

typedef struct tagMONLINKSTRUCT tagMONLINKSTRUCT, *PtagMONLINKSTRUCT;

struct tagMONLINKSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    BOOL fEstablished;
    BOOL fNoData;
    HSZ hszSvc;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    BOOL fServer;
    HCONV hConvServer;
    HCONV hConvClient;
};

typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;

typedef HDDEDATA (*PFNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

typedef struct tagDDEML_MSG_HOOK_DATA *PDDEML_MSG_HOOK_DATA;

typedef struct tagMONHSZSTRUCTA *PMONHSZSTRUCTA;

typedef PMONHSZSTRUCTA PMONHSZSTRUCT;

typedef struct tagMONHSZSTRUCTW *PMONHSZSTRUCTW;

typedef struct tagMONCBSTRUCT MONCBSTRUCT;

typedef struct tagMONLINKSTRUCT *PMONLINKSTRUCT;

typedef struct tagMONHSZSTRUCTW MONHSZSTRUCTW;

typedef struct tagMONERRSTRUCT MONERRSTRUCT;

#define XST_DATARCVD 6

#define XCLASS_NOTIFICATION 32768

#define MF_POSTMSGS 67108864

#define XTYP_MONITOR 33010

#define DMLERR_POSTMSG_FAILED 16396

#define XTYP_POKE 16528

#define CBF_FAIL_CONNECTIONS 8192

#define EC_DISABLE 8

#define DNS_FILTERON 4

#define EC_QUERYWAITING 2

#define TIMEOUT_ASYNC 4294967295

#define ST_BLOCKED 8

#define HDATA_APPOWNED 1

#define XST_ADVDATASENT 15

#define XTYP_WILDCONNECT 8418

#define XST_POKEACKRCVD 8

#define APPCMD_FILTERINITS 32

#define DMLERR_LAST 16401

#define XCLASS_MASK 64512

#define XTYP_XACT_COMPLETE 32896

#define MH_CREATE 1

#define DDE_FBUSY 16384

#define DDE_FACK 32768

#define ST_TERMINATED 32

#define MF_LINKS 536870912

#define APPCMD_CLIENTONLY 16

#define DDE_FNOTPROCESSED 0

#define MH_DELETE 3

#define DMLERR_UNADVACKTIMEOUT 16400

#define DNS_REGISTER 1

#define DDE_FAPPSTATUS 255

#define XST_EXECACKRCVD 10

#define CADV_LATEACK 65535

#define DDE_FACKRESERVED -49408

#define CBF_SKIP_DISCONNECTS 2097152

#define DDE_FRELEASE 8192

#define DDE_FDEFERUPD 16384

#define XST_UNADVACKRCVD 14

#define DMLERR_ADVACKTIMEOUT 16384

#define MH_KEEP 2

#define APPCLASS_MONITOR 1

#define MH_CLEANUP 4

#define EC_ENABLEALL 0

#define XTYPF_NODATA 4

#define DDE_FPOKRESERVED -8193

#define CP_WINNEUTRAL 1004

#define XTYP_CONNECT 4194

#define CP_WINANSI 1004

#define CBF_FAIL_REQUESTS 131072

#define DDE_FREQUESTED 4096

#define MAX_MONITORS 4

#define DMLERR_REENTRANCY 16397

#define APPCLASS_MASK 15

#define ST_ISSELF 256

#define XTYP_MASK 240

#define CBF_FAIL_ADVISES 16384

#define XTYP_REQUEST 8368

#define ST_CONNECTED 1

#define DMLERR_POKEACKTIMEOUT 16395

#define DMLERR_BUSY 16385

#define XCLASS_DATA 8192

#define XST_NULL 0

#define XST_UNADVSENT 12

#define XTYP_ADVSTOP 32832

#define CBF_SKIP_ALLNOTIFICATIONS 3932160

#define XST_CONNECTED 2

#define CBF_FAIL_SELFCONNECTIONS 4096

#define DMLERR_NO_CONV_ESTABLISHED 16394

#define XTYP_ADVREQ 8226

#define APPCLASS_STANDARD 0

#define DMLERR_DLL_USAGE 16388

#define DNS_FILTEROFF 8

#define DMLERR_LOW_MEMORY 16391

#define CP_WINUNICODE 1200

#define MF_ERRORS 268435456

#define DDE_FDATRESERVED -45057

#define XST_ADVDATAACKRCVD 16

#define ST_CLIENT 16

#define XST_INIT1 3

#define XST_INIT2 4

#define XTYP_ERROR 32770

#define XST_EXECSENT 9

#define MF_MASK 4278190080

#define DMLERR_MEMORY_ERROR 16392

#define XTYP_ADVDATA 16400

#define DNS_UNREGISTER 2

#define XTYPF_ACKREQ 8

#define APPCMD_MASK 4080

#define DDE_FADVRESERVED -49153

#define XST_ADVACKRCVD 13

#define XST_POKESENT 7

#define XTYP_SHIFT 4

#define XTYP_ADVSTART 4144

#define CBR_BLOCK -1

#define XST_INCOMPLETE 1

#define ST_ISLOCAL 4

#define CBF_SKIP_REGISTRATIONS 524288

#define XST_ADVSENT 11

#define CBF_SKIP_UNREGISTRATIONS 1048576

#define MF_CONV 1073741824

#define DMLERR_DLL_NOT_INITIALIZED 16387

#define ST_BLOCKNEXT 128

#define XCLASS_FLAGS 16384

#define DMLERR_DATAACKTIMEOUT 16386

#define MSGF_DDEMGR 32769

#define XTYPF_NOBLOCK 2

#define MF_CALLBACKS 134217728

#define MF_HSZ_INFO 16777216

#define CBF_SKIP_CONNECT_CONFIRMS 262144

#define CBF_FAIL_EXECUTES 32768

#define XST_REQSENT 5

#define DMLERR_INVALIDPARAMETER 16390

#define MF_SENDMSGS 33554432

#define ST_INLIST 64

#define DMLERR_UNFOUND_QUEUE_ID 16401

#define DMLERR_FIRST 16384

#define XTYP_REGISTER 32930

#define CBF_FAIL_ALLSVRXACTIONS 258048

#define XTYP_DISCONNECT 32962

#define XCLASS_BOOL 4096

#define DDE_FACKREQ 32768

#define DMLERR_NOTPROCESSED 16393

#define XTYP_UNREGISTER 32978

#define ST_ADVISE 2

#define CBF_FAIL_POKES 65536

#define DMLERR_SERVER_DIED 16398

#define DMLERR_EXECACKTIMEOUT 16389

#define XTYP_CONNECT_CONFIRM 32882

#define DMLERR_SYS_ERROR 16399

#define XTYP_EXECUTE 16464

#define QID_SYNC 4294967295

#define DMLERR_NO_ERROR 0

#define EC_ENABLEONE 128

typedef struct pvalueA pvalueA, *PpvalueA;

typedef struct pvalueA *PPVALUEA;

typedef PPVALUEA PPVALUE;

struct pvalueA {
    LPSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct value_entA value_entA, *Pvalue_entA;

struct value_entA {
    LPSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct pvalueA PVALUEA;

typedef ACCESS_MASK REGSAM;

typedef struct value_entA *PVALENTA;

typedef PVALENTA PVALENT;

typedef struct value_entW value_entW, *Pvalue_entW;

struct value_entW {
    LPWSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct pvalueW pvalueW, *PpvalueW;

typedef struct pvalueW PVALUEW;

struct pvalueW {
    LPWSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct val_context val_context, *Pval_context;

typedef struct val_context *PVALCONTEXT;

typedef DWORD (QUERYHANDLER)(LPVOID, PVALCONTEXT, DWORD, LPVOID, DWORD *, DWORD);

struct val_context {
    int valuelen;
    LPVOID value_context;
    LPVOID val_buff_ptr;
};

typedef struct provider_info provider_info, *Pprovider_info;

typedef struct provider_info REG_PROVIDER;

typedef QUERYHANDLER *PQUERYHANDLER;

struct provider_info {
    PQUERYHANDLER pi_R0_1val;
    PQUERYHANDLER pi_R0_allvals;
    PQUERYHANDLER pi_R3_1val;
    PQUERYHANDLER pi_R3_allvals;
    DWORD pi_flags;
    LPVOID pi_key_context;
};

typedef struct value_entA VALENTA;

typedef VALENTA VALENT;

typedef PVALUEA PVALUE;

typedef struct provider_info *PPROVIDER;

typedef struct value_entW *PVALENTW;

typedef struct pvalueW *PPVALUEW;

typedef struct value_entW VALENTW;

#define PROVIDER_KEEPS_VALUE_LENGTH 1

#define HKEY_LOCAL_MACHINE 2147483650

#define WIN31_CLASS 0

#define REASON_PLANNED_FLAG 2147483648

#define HKEY_USERS 2147483651

#define REASON_SERVICEHANG 196613

#define HKEY_DYN_DATA 2147483654

#define HKEY_CURRENT_USER 2147483649

#define REASON_OTHER 0

#define HKEY_PERFORMANCE_TEXT 2147483728

#define HKEY_PERFORMANCE_DATA 2147483652

#define REASON_UNSTABLE 327686

#define HKEY_CURRENT_CONFIG 2147483653

#define HKEY_PERFORMANCE_NLSTEXT 2147483744

#define REASON_SWHWRECONF 196612

#define REASON_UNKNOWN 255

#define HKEY_CLASSES_ROOT 2147483648

#define REASON_SWINSTALL 196610

#define REASON_HWINSTALL 65538

typedef struct IXMLDOMDocumentFragment IXMLDOMDocumentFragment, *PIXMLDOMDocumentFragment;

typedef struct IXMLDOMDocumentFragmentVtbl IXMLDOMDocumentFragmentVtbl, *PIXMLDOMDocumentFragmentVtbl;

typedef enum tagDOMNodeType {
    NODE_INVALID=0,
    NODE_ELEMENT=1,
    NODE_ATTRIBUTE=2,
    NODE_TEXT=3,
    NODE_CDATA_SECTION=4,
    NODE_ENTITY_REFERENCE=5,
    NODE_ENTITY=6,
    NODE_PROCESSING_INSTRUCTION=7,
    NODE_COMMENT=8,
    NODE_DOCUMENT=9,
    NODE_DOCUMENT_TYPE=10,
    NODE_DOCUMENT_FRAGMENT=11,
    NODE_NOTATION=12
} tagDOMNodeType;

typedef enum tagDOMNodeType DOMNodeType;

typedef struct IXMLDOMNode IXMLDOMNode, *PIXMLDOMNode;

typedef struct IXMLDOMNodeList IXMLDOMNodeList, *PIXMLDOMNodeList;

typedef struct IXMLDOMNamedNodeMap IXMLDOMNamedNodeMap, *PIXMLDOMNamedNodeMap;

typedef struct IXMLDOMDocument IXMLDOMDocument, *PIXMLDOMDocument;

typedef struct IXMLDOMNodeVtbl IXMLDOMNodeVtbl, *PIXMLDOMNodeVtbl;

typedef struct IXMLDOMNodeListVtbl IXMLDOMNodeListVtbl, *PIXMLDOMNodeListVtbl;

typedef struct IXMLDOMNamedNodeMapVtbl IXMLDOMNamedNodeMapVtbl, *PIXMLDOMNamedNodeMapVtbl;

typedef struct IXMLDOMDocumentVtbl IXMLDOMDocumentVtbl, *PIXMLDOMDocumentVtbl;

typedef struct IXMLDOMDocumentType IXMLDOMDocumentType, *PIXMLDOMDocumentType;

typedef struct IXMLDOMImplementation IXMLDOMImplementation, *PIXMLDOMImplementation;

typedef struct IXMLDOMElement IXMLDOMElement, *PIXMLDOMElement;

typedef struct IXMLDOMText IXMLDOMText, *PIXMLDOMText;

typedef struct IXMLDOMComment IXMLDOMComment, *PIXMLDOMComment;

typedef struct IXMLDOMCDATASection IXMLDOMCDATASection, *PIXMLDOMCDATASection;

typedef struct IXMLDOMProcessingInstruction IXMLDOMProcessingInstruction, *PIXMLDOMProcessingInstruction;

typedef struct IXMLDOMAttribute IXMLDOMAttribute, *PIXMLDOMAttribute;

typedef struct IXMLDOMEntityReference IXMLDOMEntityReference, *PIXMLDOMEntityReference;

typedef struct IXMLDOMParseError IXMLDOMParseError, *PIXMLDOMParseError;

typedef struct IXMLDOMDocumentTypeVtbl IXMLDOMDocumentTypeVtbl, *PIXMLDOMDocumentTypeVtbl;

typedef struct IXMLDOMImplementationVtbl IXMLDOMImplementationVtbl, *PIXMLDOMImplementationVtbl;

typedef struct IXMLDOMElementVtbl IXMLDOMElementVtbl, *PIXMLDOMElementVtbl;

typedef struct IXMLDOMTextVtbl IXMLDOMTextVtbl, *PIXMLDOMTextVtbl;

typedef struct IXMLDOMCommentVtbl IXMLDOMCommentVtbl, *PIXMLDOMCommentVtbl;

typedef struct IXMLDOMCDATASectionVtbl IXMLDOMCDATASectionVtbl, *PIXMLDOMCDATASectionVtbl;

typedef struct IXMLDOMProcessingInstructionVtbl IXMLDOMProcessingInstructionVtbl, *PIXMLDOMProcessingInstructionVtbl;

typedef struct IXMLDOMAttributeVtbl IXMLDOMAttributeVtbl, *PIXMLDOMAttributeVtbl;

typedef struct IXMLDOMEntityReferenceVtbl IXMLDOMEntityReferenceVtbl, *PIXMLDOMEntityReferenceVtbl;

typedef struct IXMLDOMParseErrorVtbl IXMLDOMParseErrorVtbl, *PIXMLDOMParseErrorVtbl;

struct IXMLDOMDocumentFragment {
    struct IXMLDOMDocumentFragmentVtbl *lpVtbl;
};

struct IXMLDOMProcessingInstruction {
    struct IXMLDOMProcessingInstructionVtbl *lpVtbl;
};

struct IXMLDOMCommentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMComment *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMComment *);
    ULONG (*Release)(struct IXMLDOMComment *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMComment *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMComment *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMComment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMComment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMComment *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMComment *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMComment *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMComment *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMComment *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMComment *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMComment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMComment *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMComment *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMComment *, long *);
    HRESULT (*substringData)(struct IXMLDOMComment *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMComment *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMComment *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMComment *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMComment *, long, long, BSTR);
};

struct IXMLDOMNodeList {
    struct IXMLDOMNodeListVtbl *lpVtbl;
};

struct IXMLDOMProcessingInstructionVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMProcessingInstruction *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMProcessingInstruction *);
    ULONG (*Release)(struct IXMLDOMProcessingInstruction *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMProcessingInstruction *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMProcessingInstruction *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMProcessingInstruction *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMProcessingInstruction *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMProcessingInstruction *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_target)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*get_data)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMProcessingInstruction *, BSTR);
};

struct IXMLDOMNodeListVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNodeList *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNodeList *);
    ULONG (*Release)(struct IXMLDOMNodeList *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNodeList *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNodeList *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNodeList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNodeList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_item)(struct IXMLDOMNodeList *, long, struct IXMLDOMNode **);
    HRESULT (*get_length)(struct IXMLDOMNodeList *, long *);
    HRESULT (*nextNode)(struct IXMLDOMNodeList *, struct IXMLDOMNode **);
    HRESULT (*reset)(struct IXMLDOMNodeList *);
    HRESULT (*get__newEnum)(struct IXMLDOMNodeList *, struct IUnknown **);
};

struct IXMLDOMElement {
    struct IXMLDOMElementVtbl *lpVtbl;
};

struct IXMLDOMAttribute {
    struct IXMLDOMAttributeVtbl *lpVtbl;
};

struct IXMLDOMDocumentTypeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocumentType *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocumentType *);
    ULONG (*Release)(struct IXMLDOMDocumentType *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocumentType *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocumentType *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocumentType *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocumentType *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocumentType *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocumentType *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocumentType *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocumentType *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocumentType *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_name)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (*get_entities)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*get_notations)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap **);
};

struct IXMLDOMText {
    struct IXMLDOMTextVtbl *lpVtbl;
};

struct IXMLDOMNodeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNode *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNode *);
    ULONG (*Release)(struct IXMLDOMNode *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNode *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNode *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNode *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNode *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMNode *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMNode *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMNode *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMNode *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMNode *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMNode *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMNode *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMNode *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMCDATASectionVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMCDATASection *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMCDATASection *);
    ULONG (*Release)(struct IXMLDOMCDATASection *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMCDATASection *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMCDATASection *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMCDATASection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMCDATASection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMCDATASection *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMCDATASection *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMCDATASection *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMCDATASection *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMCDATASection *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMCDATASection *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMCDATASection *, long *);
    HRESULT (*substringData)(struct IXMLDOMCDATASection *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMCDATASection *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMCDATASection *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMCDATASection *, long, long, BSTR);
    HRESULT (*splitText)(struct IXMLDOMCDATASection *, long, struct IXMLDOMText **);
};

struct IXMLDOMAttributeVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMAttribute *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMAttribute *);
    ULONG (*Release)(struct IXMLDOMAttribute *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMAttribute *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMAttribute *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMAttribute *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMAttribute *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMAttribute *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMAttribute *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMAttribute *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMAttribute *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_name)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (*get_value)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (*put_value)(struct IXMLDOMAttribute *, VARIANT);
};

struct IXMLDOMDocument {
    struct IXMLDOMDocumentVtbl *lpVtbl;
};

struct IXMLDOMImplementation {
    struct IXMLDOMImplementationVtbl *lpVtbl;
};

struct IXMLDOMTextVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMText *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMText *);
    ULONG (*Release)(struct IXMLDOMText *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMText *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMText *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMText *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMText *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMText *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMText *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMText *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMText *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMText *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMText *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMText *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMText *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMText *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMText *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMText *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMText *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMText *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMText *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMText *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMText *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMText *, long *);
    HRESULT (*substringData)(struct IXMLDOMText *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMText *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMText *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMText *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMText *, long, long, BSTR);
    HRESULT (*splitText)(struct IXMLDOMText *, long, struct IXMLDOMText **);
};

struct IXMLDOMEntityReferenceVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMEntityReference *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMEntityReference *);
    ULONG (*Release)(struct IXMLDOMEntityReference *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMEntityReference *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMEntityReference *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMEntityReference *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMEntityReference *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMEntityReference *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMEntityReference *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMEntityReference *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMEntityReference *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMEntityReference *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMEntityReference *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMComment {
    struct IXMLDOMCommentVtbl *lpVtbl;
};

struct IXMLDOMNamedNodeMapVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNamedNodeMap *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNamedNodeMap *);
    ULONG (*Release)(struct IXMLDOMNamedNodeMap *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNamedNodeMap *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNamedNodeMap *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNamedNodeMap *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNamedNodeMap *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*getNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode **);
    HRESULT (*setNamedItem)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_item)(struct IXMLDOMNamedNodeMap *, long, struct IXMLDOMNode **);
    HRESULT (*get_length)(struct IXMLDOMNamedNodeMap *, long *);
    HRESULT (*getQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*removeQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*nextNode)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode **);
    HRESULT (*reset)(struct IXMLDOMNamedNodeMap *);
    HRESULT (*get__newEnum)(struct IXMLDOMNamedNodeMap *, struct IUnknown **);
};

struct IXMLDOMNode {
    struct IXMLDOMNodeVtbl *lpVtbl;
};

struct IXMLDOMParseError {
    struct IXMLDOMParseErrorVtbl *lpVtbl;
};

struct IXMLDOMImplementationVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMImplementation *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMImplementation *);
    ULONG (*Release)(struct IXMLDOMImplementation *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMImplementation *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMImplementation *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMImplementation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMImplementation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*hasFeature)(struct IXMLDOMImplementation *, BSTR, BSTR, VARIANT_BOOL *);
};

struct IXMLDOMDocumentType {
    struct IXMLDOMDocumentTypeVtbl *lpVtbl;
};

struct IXMLDOMEntityReference {
    struct IXMLDOMEntityReferenceVtbl *lpVtbl;
};

struct IXMLDOMDocumentFragmentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocumentFragment *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocumentFragment *);
    ULONG (*Release)(struct IXMLDOMDocumentFragment *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocumentFragment *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocumentFragment *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocumentFragment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocumentFragment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocumentFragment *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocumentFragment *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMElementVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMElement *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMElement *);
    ULONG (*Release)(struct IXMLDOMElement *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMElement *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMElement *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMElement *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMElement *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMElement *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMElement *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMElement *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMElement *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMElement *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMElement *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMElement *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_tagName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (*getAttribute)(struct IXMLDOMElement *, BSTR, VARIANT *);
    HRESULT (*setAttribute)(struct IXMLDOMElement *, BSTR, VARIANT);
    HRESULT (*removeAttribute)(struct IXMLDOMElement *, BSTR);
    HRESULT (*getAttributeNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMAttribute **);
    HRESULT (*setAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute **);
    HRESULT (*removeAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute **);
    HRESULT (*getElementsByTagName)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*normalize)(struct IXMLDOMElement *);
};

struct IXMLDOMNamedNodeMap {
    struct IXMLDOMNamedNodeMapVtbl *lpVtbl;
};

struct IXMLDOMDocumentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMDocument *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMDocument *);
    ULONG (*Release)(struct IXMLDOMDocument *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMDocument *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMDocument *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMDocument *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMDocument *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMDocument *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMDocument *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMDocument *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMDocument *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMDocument *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMDocument *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMDocument *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_doctype)(struct IXMLDOMDocument *, struct IXMLDOMDocumentType **);
    HRESULT (*get_implementation)(struct IXMLDOMDocument *, struct IXMLDOMImplementation **);
    HRESULT (*get_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement **);
    HRESULT (*putref_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement *);
    HRESULT (*createElement)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMElement **);
    HRESULT (*createDocumentFragment)(struct IXMLDOMDocument *, struct IXMLDOMDocumentFragment **);
    HRESULT (*createTextNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMText **);
    HRESULT (*createComment)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMComment **);
    HRESULT (*createCDATASection)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMCDATASection **);
    HRESULT (*createProcessingInstruction)(struct IXMLDOMDocument *, BSTR, BSTR, struct IXMLDOMProcessingInstruction **);
    HRESULT (*createAttribute)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMAttribute **);
    HRESULT (*createEntityReference)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMEntityReference **);
    HRESULT (*getElementsByTagName)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*createNode)(struct IXMLDOMDocument *, VARIANT, BSTR, BSTR, struct IXMLDOMNode **);
    HRESULT (*nodeFromID)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode **);
    HRESULT (*load)(struct IXMLDOMDocument *, VARIANT, VARIANT_BOOL *);
    HRESULT (*get_readyState)(struct IXMLDOMDocument *, long *);
    HRESULT (*get_parseError)(struct IXMLDOMDocument *, struct IXMLDOMParseError **);
    HRESULT (*get_url)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (*get_async)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_async)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*abort)(struct IXMLDOMDocument *);
    HRESULT (*loadXML)(struct IXMLDOMDocument *, BSTR, VARIANT_BOOL *);
    HRESULT (*save)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*get_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*get_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*get_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (*put_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (*put_onreadystatechange)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*put_ondataavailable)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (*put_ontransformnode)(struct IXMLDOMDocument *, VARIANT);
};

struct IXMLDOMCDATASection {
    struct IXMLDOMCDATASectionVtbl *lpVtbl;
};

struct IXMLDOMParseErrorVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMParseError *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMParseError *);
    ULONG (*Release)(struct IXMLDOMParseError *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMParseError *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMParseError *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMParseError *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMParseError *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_errorCode)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_url)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_reason)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_srcText)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (*get_line)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_linepos)(struct IXMLDOMParseError *, long *);
    HRESULT (*get_filepos)(struct IXMLDOMParseError *, long *);
};

typedef struct XMLDocument XMLDocument, *PXMLDocument;

struct XMLDocument {
};

typedef struct IXMLAttribute IXMLAttribute, *PIXMLAttribute;

typedef struct IXMLAttributeVtbl IXMLAttributeVtbl, *PIXMLAttributeVtbl;

struct IXMLAttribute {
    struct IXMLAttributeVtbl *lpVtbl;
};

struct IXMLAttributeVtbl {
    HRESULT (*QueryInterface)(struct IXMLAttribute *, IID *, void **);
    ULONG (*AddRef)(struct IXMLAttribute *);
    ULONG (*Release)(struct IXMLAttribute *);
    HRESULT (*GetTypeInfoCount)(struct IXMLAttribute *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLAttribute *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_name)(struct IXMLAttribute *, BSTR *);
    HRESULT (*get_value)(struct IXMLAttribute *, BSTR *);
};

typedef struct IXMLDOMNotation IXMLDOMNotation, *PIXMLDOMNotation;

typedef struct IXMLDOMNotationVtbl IXMLDOMNotationVtbl, *PIXMLDOMNotationVtbl;

struct IXMLDOMNotation {
    struct IXMLDOMNotationVtbl *lpVtbl;
};

struct IXMLDOMNotationVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMNotation *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMNotation *);
    ULONG (*Release)(struct IXMLDOMNotation *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMNotation *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMNotation *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMNotation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMNotation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMNotation *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMNotation *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMNotation *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMNotation *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMNotation *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMNotation *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMNotation *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMNotation *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMNotation *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_publicId)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (*get_systemId)(struct IXMLDOMNotation *, VARIANT *);
};

typedef enum tagXMLEMEM_TYPE {
    XMLELEMTYPE_ELEMENT=0,
    XMLELEMTYPE_TEXT=1,
    XMLELEMTYPE_COMMENT=2,
    XMLELEMTYPE_DOCUMENT=3,
    XMLELEMTYPE_DTD=4,
    XMLELEMTYPE_PI=5,
    XMLELEMTYPE_OTHER=6
} tagXMLEMEM_TYPE;

typedef enum tagXMLEMEM_TYPE XMLELEM_TYPE;

typedef struct DOMFreeThreadedDocument DOMFreeThreadedDocument, *PDOMFreeThreadedDocument;

struct DOMFreeThreadedDocument {
};

typedef struct IXMLDOMEntity IXMLDOMEntity, *PIXMLDOMEntity;

typedef struct IXMLDOMEntityVtbl IXMLDOMEntityVtbl, *PIXMLDOMEntityVtbl;

struct IXMLDOMEntity {
    struct IXMLDOMEntityVtbl *lpVtbl;
};

struct IXMLDOMEntityVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMEntity *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMEntity *);
    ULONG (*Release)(struct IXMLDOMEntity *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMEntity *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMEntity *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMEntity *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMEntity *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMEntity *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMEntity *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMEntity *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMEntity *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMEntity *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMEntity *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMEntity *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMEntity *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMEntity *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_publicId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*get_systemId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (*get_notationName)(struct IXMLDOMEntity *, BSTR *);
};

typedef struct IXMLElement2 IXMLElement2, *PIXMLElement2;

typedef struct IXMLElement2Vtbl IXMLElement2Vtbl, *PIXMLElement2Vtbl;

struct IXMLElement2Vtbl {
    HRESULT (*QueryInterface)(struct IXMLElement2 *, IID *, void **);
    ULONG (*AddRef)(struct IXMLElement2 *);
    ULONG (*Release)(struct IXMLElement2 *);
    HRESULT (*GetTypeInfoCount)(struct IXMLElement2 *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLElement2 *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLElement2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLElement2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_tagName)(struct IXMLElement2 *, BSTR *);
    HRESULT (*put_tagName)(struct IXMLElement2 *, BSTR);
    HRESULT (*get_parent)(struct IXMLElement2 *, struct IXMLElement2 **);
    HRESULT (*setAttribute)(struct IXMLElement2 *, BSTR, VARIANT);
    HRESULT (*getAttribute)(struct IXMLElement2 *, BSTR, VARIANT *);
    HRESULT (*removeAttribute)(struct IXMLElement2 *, BSTR);
    HRESULT (*get_children)(struct IXMLElement2 *, struct IXMLElementCollection **);
    HRESULT (*get_type)(struct IXMLElement2 *, long *);
    HRESULT (*get_text)(struct IXMLElement2 *, BSTR *);
    HRESULT (*put_text)(struct IXMLElement2 *, BSTR);
    HRESULT (*addChild)(struct IXMLElement2 *, struct IXMLElement2 *, long, long);
    HRESULT (*removeChild)(struct IXMLElement2 *, struct IXMLElement2 *);
    HRESULT (*get_attributes)(struct IXMLElement2 *, struct IXMLElementCollection **);
};

struct IXMLElement2 {
    struct IXMLElement2Vtbl *lpVtbl;
};

typedef struct IXMLError IXMLError, *PIXMLError;

typedef struct IXMLErrorVtbl IXMLErrorVtbl, *PIXMLErrorVtbl;

typedef struct _xml_error _xml_error, *P_xml_error;

typedef struct _xml_error XML_ERROR;

struct IXMLError {
    struct IXMLErrorVtbl *lpVtbl;
};

struct _xml_error {
    uint _nLine;
    BSTR _pchBuf;
    uint _cchBuf;
    uint _ich;
    BSTR _pszFound;
    BSTR _pszExpected;
    DWORD _reserved1;
    DWORD _reserved2;
};

struct IXMLErrorVtbl {
    HRESULT (*QueryInterface)(struct IXMLError *, IID *, void **);
    ULONG (*AddRef)(struct IXMLError *);
    ULONG (*Release)(struct IXMLError *);
    HRESULT (*GetErrorInfo)(struct IXMLError *, XML_ERROR *);
};

typedef struct IXTLRuntime IXTLRuntime, *PIXTLRuntime;

typedef struct IXTLRuntimeVtbl IXTLRuntimeVtbl, *PIXTLRuntimeVtbl;

struct IXTLRuntime {
    struct IXTLRuntimeVtbl *lpVtbl;
};

struct IXTLRuntimeVtbl {
    HRESULT (*QueryInterface)(struct IXTLRuntime *, IID *, void **);
    ULONG (*AddRef)(struct IXTLRuntime *);
    ULONG (*Release)(struct IXTLRuntime *);
    HRESULT (*GetTypeInfoCount)(struct IXTLRuntime *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXTLRuntime *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXTLRuntime *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXTLRuntime *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (*get_nodeType)(struct IXTLRuntime *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXTLRuntime *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXTLRuntime *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXTLRuntime *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXTLRuntime *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_text)(struct IXTLRuntime *, BSTR *);
    HRESULT (*put_text)(struct IXTLRuntime *, BSTR);
    HRESULT (*get_specified)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXTLRuntime *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (*get_dataType)(struct IXTLRuntime *, VARIANT *);
    HRESULT (*put_dataType)(struct IXTLRuntime *, BSTR);
    HRESULT (*get_xml)(struct IXTLRuntime *, BSTR *);
    HRESULT (*transformNode)(struct IXTLRuntime *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXTLRuntime *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_prefix)(struct IXTLRuntime *, BSTR *);
    HRESULT (*get_baseName)(struct IXTLRuntime *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*uniqueID)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*depth)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*childNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*ancestorChildNumber)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode *, long *);
    HRESULT (*absoluteChildNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (*formatIndex)(struct IXTLRuntime *, long, BSTR, BSTR *);
    HRESULT (*formatNumber)(struct IXTLRuntime *, double, BSTR, BSTR *);
    HRESULT (*formatDate)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
    HRESULT (*formatTime)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
};

typedef struct IXMLDSOControl IXMLDSOControl, *PIXMLDSOControl;

typedef struct IXMLDSOControlVtbl IXMLDSOControlVtbl, *PIXMLDSOControlVtbl;

struct IXMLDSOControl {
    struct IXMLDSOControlVtbl *lpVtbl;
};

struct IXMLDSOControlVtbl {
    HRESULT (*QueryInterface)(struct IXMLDSOControl *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDSOControl *);
    ULONG (*Release)(struct IXMLDSOControl *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDSOControl *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDSOControl *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDSOControl *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDSOControl *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument **);
    HRESULT (*put_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument *);
    HRESULT (*get_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL *);
    HRESULT (*put_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL);
    HRESULT (*get_readyState)(struct IXMLDSOControl *, long *);
};

typedef struct IXMLHttpRequestVtbl IXMLHttpRequestVtbl, *PIXMLHttpRequestVtbl;

typedef struct IXMLHttpRequest IXMLHttpRequest, *PIXMLHttpRequest;

struct IXMLHttpRequestVtbl {
    HRESULT (*QueryInterface)(struct IXMLHttpRequest *, IID *, void **);
    ULONG (*AddRef)(struct IXMLHttpRequest *);
    ULONG (*Release)(struct IXMLHttpRequest *);
    HRESULT (*GetTypeInfoCount)(struct IXMLHttpRequest *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLHttpRequest *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLHttpRequest *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLHttpRequest *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*open)(struct IXMLHttpRequest *, BSTR, BSTR, VARIANT, VARIANT, VARIANT);
    HRESULT (*setRequestHeader)(struct IXMLHttpRequest *, BSTR, BSTR);
    HRESULT (*getResponseHeader)(struct IXMLHttpRequest *, BSTR, BSTR *);
    HRESULT (*getAllResponseHeaders)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*send)(struct IXMLHttpRequest *, VARIANT);
    HRESULT (*abort)(struct IXMLHttpRequest *);
    HRESULT (*get_status)(struct IXMLHttpRequest *, long *);
    HRESULT (*get_statusText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*get_responseXML)(struct IXMLHttpRequest *, struct IDispatch **);
    HRESULT (*get_responseText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (*get_responseBody)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (*get_responseStream)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (*get_readyState)(struct IXMLHttpRequest *, long *);
    HRESULT (*put_onreadystatechange)(struct IXMLHttpRequest *, struct IDispatch *);
};

struct IXMLHttpRequest {
    struct IXMLHttpRequestVtbl *lpVtbl;
};

typedef struct XMLHTTPRequest XMLHTTPRequest, *PXMLHTTPRequest;

struct XMLHTTPRequest {
};

typedef struct IXMLDOMCharacterDataVtbl IXMLDOMCharacterDataVtbl, *PIXMLDOMCharacterDataVtbl;

typedef struct IXMLDOMCharacterData IXMLDOMCharacterData, *PIXMLDOMCharacterData;

struct IXMLDOMCharacterDataVtbl {
    HRESULT (*QueryInterface)(struct IXMLDOMCharacterData *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDOMCharacterData *);
    ULONG (*Release)(struct IXMLDOMCharacterData *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDOMCharacterData *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDOMCharacterData *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDOMCharacterData *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDOMCharacterData *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_nodeName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_nodeValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_nodeValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (*get_nodeType)(struct IXMLDOMCharacterData *, DOMNodeType *);
    HRESULT (*get_parentNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_childNodes)(struct IXMLDOMCharacterData *, struct IXMLDOMNodeList **);
    HRESULT (*get_firstChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_lastChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_previousSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_nextSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_attributes)(struct IXMLDOMCharacterData *, struct IXMLDOMNamedNodeMap **);
    HRESULT (*insertBefore)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode **);
    HRESULT (*replaceChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*removeChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*appendChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode **);
    HRESULT (*hasChildNodes)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_ownerDocument)(struct IXMLDOMCharacterData *, struct IXMLDOMDocument **);
    HRESULT (*cloneNode)(struct IXMLDOMCharacterData *, VARIANT_BOOL, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypeString)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_text)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*put_text)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_specified)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_definition)(struct IXMLDOMCharacterData *, struct IXMLDOMNode **);
    HRESULT (*get_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (*get_dataType)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (*put_dataType)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_xml)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*transformNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, BSTR *);
    HRESULT (*selectNodes)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNodeList **);
    HRESULT (*selectSingleNode)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNode **);
    HRESULT (*get_parsed)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (*get_namespaceURI)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_prefix)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*get_baseName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*transformNodeToObject)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT);
    HRESULT (*get_data)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (*put_data)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*get_length)(struct IXMLDOMCharacterData *, long *);
    HRESULT (*substringData)(struct IXMLDOMCharacterData *, long, long, BSTR *);
    HRESULT (*appendData)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (*insertData)(struct IXMLDOMCharacterData *, long, BSTR);
    HRESULT (*deleteData)(struct IXMLDOMCharacterData *, long, long);
    HRESULT (*replaceData)(struct IXMLDOMCharacterData *, long, long, BSTR);
};

struct IXMLDOMCharacterData {
    struct IXMLDOMCharacterDataVtbl *lpVtbl;
};

typedef struct IXMLDocument2Vtbl IXMLDocument2Vtbl, *PIXMLDocument2Vtbl;

typedef struct IXMLDocument2 IXMLDocument2, *PIXMLDocument2;

struct IXMLDocument2Vtbl {
    HRESULT (*QueryInterface)(struct IXMLDocument2 *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDocument2 *);
    ULONG (*Release)(struct IXMLDocument2 *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDocument2 *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDocument2 *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDocument2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDocument2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_root)(struct IXMLDocument2 *, struct IXMLElement2 **);
    HRESULT (*get_fileSize)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_fileModifiedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_fileUpdatedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_URL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*put_URL)(struct IXMLDocument2 *, BSTR);
    HRESULT (*get_mimeType)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_readyState)(struct IXMLDocument2 *, long *);
    HRESULT (*get_charset)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*put_charset)(struct IXMLDocument2 *, BSTR);
    HRESULT (*get_version)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_doctype)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*get_dtdURL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (*createElement)(struct IXMLDocument2 *, VARIANT, VARIANT, struct IXMLElement2 **);
    HRESULT (*get_async)(struct IXMLDocument2 *, VARIANT_BOOL *);
    HRESULT (*put_async)(struct IXMLDocument2 *, VARIANT_BOOL);
};

struct IXMLDocument2 {
    struct IXMLDocument2Vtbl *lpVtbl;
};

typedef struct XMLDOMDocumentEventsVtbl XMLDOMDocumentEventsVtbl, *PXMLDOMDocumentEventsVtbl;

typedef struct XMLDOMDocumentEvents XMLDOMDocumentEvents, *PXMLDOMDocumentEvents;

struct XMLDOMDocumentEvents {
    struct XMLDOMDocumentEventsVtbl *lpVtbl;
};

struct XMLDOMDocumentEventsVtbl {
    HRESULT (*QueryInterface)(struct XMLDOMDocumentEvents *, IID *, void **);
    ULONG (*AddRef)(struct XMLDOMDocumentEvents *);
    ULONG (*Release)(struct XMLDOMDocumentEvents *);
    HRESULT (*GetTypeInfoCount)(struct XMLDOMDocumentEvents *, UINT *);
    HRESULT (*GetTypeInfo)(struct XMLDOMDocumentEvents *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct XMLDOMDocumentEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct XMLDOMDocumentEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct DOMDocument DOMDocument, *PDOMDocument;

struct DOMDocument {
};

typedef struct IXMLDocumentVtbl IXMLDocumentVtbl, *PIXMLDocumentVtbl;

typedef struct IXMLDocument IXMLDocument, *PIXMLDocument;

struct IXMLDocument {
    struct IXMLDocumentVtbl *lpVtbl;
};

struct IXMLDocumentVtbl {
    HRESULT (*QueryInterface)(struct IXMLDocument *, IID *, void **);
    ULONG (*AddRef)(struct IXMLDocument *);
    ULONG (*Release)(struct IXMLDocument *);
    HRESULT (*GetTypeInfoCount)(struct IXMLDocument *, UINT *);
    HRESULT (*GetTypeInfo)(struct IXMLDocument *, UINT, LCID, struct ITypeInfo **);
    HRESULT (*GetIDsOfNames)(struct IXMLDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (*Invoke)(struct IXMLDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (*get_root)(struct IXMLDocument *, struct IXMLElement **);
    HRESULT (*get_fileSize)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_fileModifiedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_fileUpdatedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_URL)(struct IXMLDocument *, BSTR *);
    HRESULT (*put_URL)(struct IXMLDocument *, BSTR);
    HRESULT (*get_mimeType)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_readyState)(struct IXMLDocument *, long *);
    HRESULT (*get_charset)(struct IXMLDocument *, BSTR *);
    HRESULT (*put_charset)(struct IXMLDocument *, BSTR);
    HRESULT (*get_version)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_doctype)(struct IXMLDocument *, BSTR *);
    HRESULT (*get_dtdURL)(struct IXMLDocument *, BSTR *);
    HRESULT (*createElement)(struct IXMLDocument *, VARIANT, VARIANT, struct IXMLElement **);
};

typedef struct XMLDSOControl XMLDSOControl, *PXMLDSOControl;

struct XMLDSOControl {
};

#define USHRT_MAX 65535

#define INT_MAX 2147483647

#define SHRT_MAX 32767

#define ULLONG_MAX -1

#define LONG_MIN -2147483648

#define LLONG_MAX 9223372036854775807

#define ULONG_MAX 4294967295

#define UCHAR_MAX 255

#define UINT_MAX 4294967295

#define SCHAR_MAX 127

#define SHRT_MIN -32768

#define CHAR_MAX 127

#define LLONG_MIN -9223372036854775808

#define INT_MIN -2147483648

#define SCHAR_MIN -128

#define MB_LEN_MAX 16

#define CHAR_MIN -128

#define LONG_MAX 2147483647

#define CHAR_BIT 8

typedef struct AsyncIUnknown AsyncIUnknown, *PAsyncIUnknown;

typedef struct AsyncIUnknownVtbl AsyncIUnknownVtbl, *PAsyncIUnknownVtbl;

struct AsyncIUnknownVtbl {
    HRESULT (*QueryInterface)(struct AsyncIUnknown *, IID *, void **);
    ULONG (*AddRef)(struct AsyncIUnknown *);
    ULONG (*Release)(struct AsyncIUnknown *);
    HRESULT (*Begin_QueryInterface)(struct AsyncIUnknown *, IID *);
    HRESULT (*Finish_QueryInterface)(struct AsyncIUnknown *, void **);
    HRESULT (*Begin_AddRef)(struct AsyncIUnknown *);
    ULONG (*Finish_AddRef)(struct AsyncIUnknown *);
    HRESULT (*Begin_Release)(struct AsyncIUnknown *);
    ULONG (*Finish_Release)(struct AsyncIUnknown *);
};

struct AsyncIUnknown {
    struct AsyncIUnknownVtbl *lpVtbl;
};

typedef struct IClassFactory *LPCLASSFACTORY;

typedef struct _PERF_INSTANCE_DEFINITION _PERF_INSTANCE_DEFINITION, *P_PERF_INSTANCE_DEFINITION;

struct _PERF_INSTANCE_DEFINITION {
    DWORD ByteLength;
    DWORD ParentObjectTitleIndex;
    DWORD ParentObjectInstance;
    LONG UniqueID;
    DWORD NameOffset;
    DWORD NameLength;
};

typedef struct _PERF_DATA_BLOCK _PERF_DATA_BLOCK, *P_PERF_DATA_BLOCK;

struct _PERF_DATA_BLOCK {
    WCHAR Signature[4];
    DWORD LittleEndian;
    DWORD Version;
    DWORD Revision;
    DWORD TotalByteLength;
    DWORD HeaderLength;
    DWORD NumObjectTypes;
    LONG DefaultObject;
    SYSTEMTIME SystemTime;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
    LARGE_INTEGER PerfTime100nSec;
    DWORD SystemNameLength;
    DWORD SystemNameOffset;
};

typedef struct _PERF_COUNTER_BLOCK _PERF_COUNTER_BLOCK, *P_PERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_BLOCK *PPERF_COUNTER_BLOCK;

struct _PERF_COUNTER_BLOCK {
    DWORD ByteLength;
};

typedef struct _PERF_COUNTER_DEFINITION _PERF_COUNTER_DEFINITION, *P_PERF_COUNTER_DEFINITION;

typedef struct _PERF_COUNTER_DEFINITION PERF_COUNTER_DEFINITION;

struct _PERF_COUNTER_DEFINITION {
    DWORD ByteLength;
    DWORD CounterNameTitleIndex;
    LPWSTR CounterNameTitle;
    DWORD CounterHelpTitleIndex;
    LPWSTR CounterHelpTitle;
    LONG DefaultScale;
    DWORD DetailLevel;
    DWORD CounterType;
    DWORD CounterSize;
    DWORD CounterOffset;
};

typedef struct _PERF_OBJECT_TYPE _PERF_OBJECT_TYPE, *P_PERF_OBJECT_TYPE;

typedef struct _PERF_OBJECT_TYPE PERF_OBJECT_TYPE;

struct _PERF_OBJECT_TYPE {
    DWORD TotalByteLength;
    DWORD DefinitionLength;
    DWORD HeaderLength;
    DWORD ObjectNameTitleIndex;
    LPWSTR ObjectNameTitle;
    DWORD ObjectHelpTitleIndex;
    LPWSTR ObjectHelpTitle;
    DWORD DetailLevel;
    DWORD NumCounters;
    LONG DefaultCounter;
    LONG NumInstances;
    DWORD CodePage;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
};

typedef struct _PERF_DATA_BLOCK *PPERF_DATA_BLOCK;

typedef DWORD (PM_COLLECT_PROC)(LPWSTR, LPVOID *, LPDWORD, LPDWORD);

typedef struct _PERF_INSTANCE_DEFINITION PERF_INSTANCE_DEFINITION;

typedef struct _PERF_OBJECT_TYPE *PPERF_OBJECT_TYPE;

typedef DWORD (PM_CLOSE_PROC)(void);

typedef struct _PERF_INSTANCE_DEFINITION *PPERF_INSTANCE_DEFINITION;

typedef DWORD (PM_QUERY_PROC)(LPDWORD, LPVOID *, LPDWORD, LPDWORD);

typedef struct _PERF_COUNTER_BLOCK PERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_DEFINITION *PPERF_COUNTER_DEFINITION;

typedef struct _PERF_DATA_BLOCK PERF_DATA_BLOCK;

typedef DWORD (PM_OPEN_PROC)(LPWSTR);

#define PERF_COUNTER_LARGE_RAWCOUNT 65792

#define PERF_SAMPLE_BASE 1073939457

#define PERF_COUNTER_RAWCOUNT 65536

#define PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE 6620416

#define PERF_RAW_BASE 1073939459

#define PERF_SAMPLE_COUNTER 4260864

#define MAX_PERF_OBJECTS_IN_QUERY_FUNCTION 64

#define PERF_COUNTER_QUEUELEN_TYPE 4523008

#define PERF_100NSEC_TIMER 542180608

#define PERF_RAW_FRACTION 537003008

#define PERF_COUNTER_LARGE_RAWCOUNT_HEX 256

#define PERF_DATA_VERSION 1

#define PERF_COUNTER_FRACTION 131072

#define PERF_COUNTER_QUEUELEN 327680

#define PERF_100NSEC_TIMER_INV 558957824

#define WINPERF_LOG_NONE 0

#define PERF_TIMER_100NS 1048576

#define PERF_TYPE_TEXT 2048

#define PERF_AVERAGE_BASE 1073939458

#define PERF_COUNTER_DELTA 4195328

#define PERF_NUMBER_DEC_1000 131072

#define PERF_DETAIL_EXPERT 300

#define PERF_TIMER_TICK 0

#define PERF_QUERY_GLOBAL 2147483649

#define PERF_COUNTER_PRECISION 458752

#define PERF_SIZE_DWORD 0

#define PERF_MULTI_COUNTER 33554432

#define PERF_NUMBER_DECIMAL 65536

#define PERF_SIZE_ZERO 512

#define PERF_TYPE_COUNTER 1024

#define PERF_PRECISION_OBJECT_TIMER 543622400

#define PERF_COUNTER_TIMER 541132032

#define PERF_TEXT_UNICODE 0

#define PERF_COUNTER_MULTI_TIMER_INV 591463680

#define PERF_TYPE_NUMBER 0

#define PERF_COUNTER_TIMER_INV 557909248

#define PERF_COUNTER_TEXT 2816

#define PERF_NO_UNIQUE_ID -1

#define PERF_DETAIL_WIZARD 400

#define PERF_DETAIL_NOVICE 100

#define PERF_COUNTER_HISTOGRAM 393216

#define PERF_COUNTER_MULTI_BASE 1107494144

#define PERF_COUNTER_HISTOGRAM_TYPE 2147483648

#define WINPERF_LOG_VERBOSE 3

#define PERF_COUNTER_BULK_COUNT 272696576

#define WINPERF_LOG_DEBUG 2

#define PERF_COUNTER_COUNTER 272696320

#define PERF_DELTA_BASE 8388608

#define PERF_SIZE_LARGE 256

#define PERF_COUNTER_ELAPSED 262144

#define PERF_QUERY_OBJECTS 2147483648

#define PERF_DISPLAY_PERCENT 536870912

#define PERF_PRECISION_TIMESTAMP 1073939712

#define WINPERF_LOG_USER 1

#define PERF_DATA_REVISION 1

#define PERF_NO_INSTANCES -1

#define PERF_COUNTER_NODATA 1073742336

#define PERF_DELTA_COUNTER 4194304

#define PERF_NUMBER_HEX 0

#define PERF_DETAIL_ADVANCED 200

#define PERF_100NSEC_MULTI_TIMER_INV 592512256

#define PERF_COUNTER_LARGE_QUEUELEN_TYPE 4523264

#define PERF_INVERSE_COUNTER 16777216

#define PERF_AVERAGE_TIMER 805438464

#define PERF_ELAPSED_TIME 807666944

#define PERF_DISPLAY_PER_SEC 268435456

#define PERF_COUNTER_100NS_QUEUELEN_TYPE 5571840

#define PERF_LARGE_RAW_BASE 1073939712

#define PERF_COUNTER_VALUE 0

#define PERF_TYPE_ZERO 3072

#define PERF_QUERY_COSTLY 2147483650

#define PERF_SAMPLE_FRACTION 549585920

#define PERF_LARGE_RAW_FRACTION 537003264

#define PERF_PRECISION_100NS_TIMER 542573824

#define PERF_COUNTER_RAWCOUNT_HEX 0

#define PERF_DISPLAY_SECONDS 805306368

#define PERF_COUNTER_RATE 65536

#define PERF_OBJ_TIME_TIMER 543229184

#define PERF_AVERAGE_BULK 1073874176

#define PERF_DISPLAY_NOSHOW 1073741824

#define PERF_TEXT_ASCII 65536

#define PERF_OBJECT_TIMER 2097152

#define PERF_COUNTER_BASE 196608

#define PERF_SIZE_VARIABLE_LEN 768

#define PERF_100NSEC_MULTI_TIMER 575735040

#define PERF_PRECISION_SYSTEM_TIMER 541525248

#define PERF_COUNTER_LARGE_DELTA 4195584

#define PERF_DISPLAY_NO_SUFFIX 0

#define PERF_COUNTER_MULTI_TIMER 574686464

typedef struct _COMMPROP _COMMPROP, *P_COMMPROP;

typedef struct _COMMPROP *LPCOMMPROP;

struct _COMMPROP {
    WORD wPacketLength;
    WORD wPacketVersion;
    DWORD dwServiceMask;
    DWORD dwReserved1;
    DWORD dwMaxTxQueue;
    DWORD dwMaxRxQueue;
    DWORD dwMaxBaud;
    DWORD dwProvSubType;
    DWORD dwProvCapabilities;
    DWORD dwSettableParams;
    DWORD dwSettableBaud;
    WORD wSettableData;
    WORD wSettableStopParity;
    DWORD dwCurrentTxQueue;
    DWORD dwCurrentRxQueue;
    DWORD dwProvSpec1;
    DWORD dwProvSpec2;
    WCHAR wcProvChar[1];
};

typedef struct tagHW_PROFILE_INFOA tagHW_PROFILE_INFOA, *PtagHW_PROFILE_INFOA;

typedef struct tagHW_PROFILE_INFOA *LPHW_PROFILE_INFOA;

struct tagHW_PROFILE_INFOA {
    DWORD dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
};

typedef struct _EXCEPTION_DEBUG_INFO _EXCEPTION_DEBUG_INFO, *P_EXCEPTION_DEBUG_INFO;

struct _EXCEPTION_DEBUG_INFO {
    EXCEPTION_RECORD ExceptionRecord;
    DWORD dwFirstChance;
};

typedef struct _CREATE_THREAD_DEBUG_INFO _CREATE_THREAD_DEBUG_INFO, *P_CREATE_THREAD_DEBUG_INFO;

typedef DWORD (*PTHREAD_START_ROUTINE)(LPVOID);

typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;

struct _CREATE_THREAD_DEBUG_INFO {
    HANDLE hThread;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
};

typedef struct tagHW_PROFILE_INFOW tagHW_PROFILE_INFOW, *PtagHW_PROFILE_INFOW;

struct tagHW_PROFILE_INFOW {
    DWORD dwDockInfo;
    WCHAR szHwProfileGuid[39];
    WCHAR szHwProfileName[80];
};

typedef struct _WIN32_FIND_DATAW _WIN32_FIND_DATAW, *P_WIN32_FIND_DATAW;

typedef struct _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

struct _WIN32_FIND_DATAW {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    WCHAR cFileName[260];
    WCHAR cAlternateFileName[14];
};

typedef struct _DCB _DCB, *P_DCB;

struct _DCB {
    DWORD DCBlength;
    DWORD BaudRate;
    DWORD fBinary:1;
    DWORD fParity:1;
    DWORD fOutxCtsFlow:1;
    DWORD fOutxDsrFlow:1;
    DWORD fDtrControl:2;
    DWORD fDsrSensitivity:1;
    DWORD fTXContinueOnXoff:1;
    DWORD fOutX:1;
    DWORD fInX:1;
    DWORD fErrorChar:1;
    DWORD fNull:1;
    DWORD fRtsControl:2;
    DWORD fAbortOnError:1;
    DWORD fDummy2:17;
    WORD wReserved;
    WORD XonLim;
    WORD XoffLim;
    BYTE ByteSize;
    BYTE Parity;
    BYTE StopBits;
    char XonChar;
    char XoffChar;
    char ErrorChar;
    char EofChar;
    char EvtChar;
    WORD wReserved1;
};

typedef struct _LOAD_DLL_DEBUG_INFO _LOAD_DLL_DEBUG_INFO, *P_LOAD_DLL_DEBUG_INFO;

struct _LOAD_DLL_DEBUG_INFO {
    HANDLE hFile;
    LPVOID lpBaseOfDll;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpImageName;
    WORD fUnicode;
};

typedef struct _STARTUPINFOW STARTUPINFOW;

typedef struct _STARTUPINFOA _STARTUPINFOA, *P_STARTUPINFOA;

typedef struct _STARTUPINFOA STARTUPINFOA;

struct _STARTUPINFOA {
    DWORD cb;
    LPSTR lpReserved;
    LPSTR lpDesktop;
    LPSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

typedef struct _TIME_ZONE_INFORMATION _TIME_ZONE_INFORMATION, *P_TIME_ZONE_INFORMATION;

struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _struct_323 _struct_323, *P_struct_323;

struct _struct_323 {
    DWORD dwCommittedSize;
    DWORD dwUnCommittedSize;
    LPVOID lpFirstBlock;
    LPVOID lpLastBlock;
};

typedef struct _struct_322 _struct_322, *P_struct_322;

struct _struct_322 {
    HANDLE hMem;
    DWORD dwReserved[3];
};

typedef struct _WIN32_STREAM_ID _WIN32_STREAM_ID, *P_WIN32_STREAM_ID;

struct _WIN32_STREAM_ID {
    DWORD dwStreamId;
    DWORD dwStreamAttributes;
    LARGE_INTEGER Size;
    DWORD dwStreamNameSize;
    WCHAR cStreamName[1];
};

typedef BOOL (*ENUMRESTYPEPROCA)(HMODULE, LPSTR, LONG_PTR);

typedef struct _struct_321 _struct_321, *P_struct_321;

struct _struct_321 {
    DWORD dwCommittedSize;
    DWORD dwUnCommittedSize;
    LPVOID lpFirstBlock;
    LPVOID lpLastBlock;
};

typedef struct _struct_320 _struct_320, *P_struct_320;

struct _struct_320 {
    HANDLE hMem;
    DWORD dwReserved[3];
};

typedef struct _SYSTEM_POWER_STATUS _SYSTEM_POWER_STATUS, *P_SYSTEM_POWER_STATUS;

struct _SYSTEM_POWER_STATUS {
    BYTE ACLineStatus;
    BYTE BatteryFlag;
    BYTE BatteryLifePercent;
    BYTE Reserved1;
    DWORD BatteryLifeTime;
    DWORD BatteryFullLifeTime;
};

typedef struct _SYSTEM_INFO _SYSTEM_INFO, *P_SYSTEM_INFO;

typedef struct _SYSTEM_INFO *LPSYSTEM_INFO;

typedef union _union_302 _union_302, *P_union_302;

typedef struct _struct_303 _struct_303, *P_struct_303;

struct _struct_303 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

union _union_302 {
    DWORD dwOemId;
    struct _struct_303 field1;
};

struct _SYSTEM_INFO {
    union _union_302 field0_0x0;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
};

typedef struct _EXIT_THREAD_DEBUG_INFO _EXIT_THREAD_DEBUG_INFO, *P_EXIT_THREAD_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;

struct _EXIT_THREAD_DEBUG_INFO {
    DWORD dwExitCode;
};

typedef struct _COMSTAT _COMSTAT, *P_COMSTAT;

typedef struct _COMSTAT COMSTAT;

struct _COMSTAT {
    DWORD fCtsHold:1;
    DWORD fDsrHold:1;
    DWORD fRlsdHold:1;
    DWORD fXoffHold:1;
    DWORD fXoffSent:1;
    DWORD fEof:1;
    DWORD fTxim:1;
    DWORD fReserved:25;
    DWORD cbInQue;
    DWORD cbOutQue;
};

typedef BOOL (*ENUMRESTYPEPROCW)(HMODULE, LPWSTR, LONG_PTR);

typedef struct _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;

typedef struct _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;

typedef struct _struct_531 _struct_531, *P_struct_531;

struct _struct_531 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

typedef struct _RIP_INFO _RIP_INFO, *P_RIP_INFO;

struct _RIP_INFO {
    DWORD dwError;
    DWORD dwType;
};

typedef struct _struct_305 _struct_305, *P_struct_305;

struct _struct_305 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

typedef BOOL (*ENUMRESLANGPROCW)(HMODULE, LPCWSTR, LPCWSTR, WORD, LONG_PTR);

typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);

typedef struct _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;

typedef union _union_292 _union_292, *P_union_292;

typedef struct _struct_293 _struct_293, *P_struct_293;

struct _struct_293 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_292 {
    struct _struct_293 field0;
    PVOID Pointer;
};

typedef struct _UNLOAD_DLL_DEBUG_INFO _UNLOAD_DLL_DEBUG_INFO, *P_UNLOAD_DLL_DEBUG_INFO;

struct _UNLOAD_DLL_DEBUG_INFO {
    LPVOID lpBaseOfDll;
};

typedef struct _struct_519 _struct_519, *P_struct_519;

struct _struct_519 {
    DWORD Offset;
    DWORD OffsetHigh;
};

typedef struct _PROCESS_INFORMATION *PPROCESS_INFORMATION;

typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;

typedef BOOL (*ENUMRESLANGPROCA)(HMODULE, LPCSTR, LPCSTR, WORD, LONG_PTR);

typedef struct _EVENTLOG_FULL_INFORMATION _EVENTLOG_FULL_INFORMATION, *P_EVENTLOG_FULL_INFORMATION;

typedef struct _EVENTLOG_FULL_INFORMATION EVENTLOG_FULL_INFORMATION;

struct _EVENTLOG_FULL_INFORMATION {
    DWORD dwFull;
};

typedef struct _MEMORYSTATUS _MEMORYSTATUS, *P_MEMORYSTATUS;

struct _MEMORYSTATUS {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    SIZE_T dwTotalPhys;
    SIZE_T dwAvailPhys;
    SIZE_T dwTotalPageFile;
    SIZE_T dwAvailPageFile;
    SIZE_T dwTotalVirtual;
    SIZE_T dwAvailVirtual;
};

typedef struct _BY_HANDLE_FILE_INFORMATION _BY_HANDLE_FILE_INFORMATION, *P_BY_HANDLE_FILE_INFORMATION;

struct _BY_HANDLE_FILE_INFORMATION {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD dwVolumeSerialNumber;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD nNumberOfLinks;
    DWORD nFileIndexHigh;
    DWORD nFileIndexLow;
};

typedef struct _DEBUG_EVENT _DEBUG_EVENT, *P_DEBUG_EVENT;

typedef struct _DEBUG_EVENT DEBUG_EVENT;

typedef union _union_315 _union_315, *P_union_315;

typedef struct _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;

typedef struct _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO _CREATE_PROCESS_DEBUG_INFO, *P_CREATE_PROCESS_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO _EXIT_PROCESS_DEBUG_INFO, *P_EXIT_PROCESS_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;

typedef struct _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO _OUTPUT_DEBUG_STRING_INFO, *P_OUTPUT_DEBUG_STRING_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;

typedef struct _RIP_INFO RIP_INFO;

struct _CREATE_PROCESS_DEBUG_INFO {
    HANDLE hFile;
    HANDLE hProcess;
    HANDLE hThread;
    LPVOID lpBaseOfImage;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
    LPVOID lpImageName;
    WORD fUnicode;
};

struct _EXIT_PROCESS_DEBUG_INFO {
    DWORD dwExitCode;
};

struct _OUTPUT_DEBUG_STRING_INFO {
    LPSTR lpDebugStringData;
    WORD fUnicode;
    WORD nDebugStringLength;
};

union _union_315 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

struct _DEBUG_EVENT {
    DWORD dwDebugEventCode;
    DWORD dwProcessId;
    DWORD dwThreadId;
    union _union_315 u;
};

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard=0,
    GetFileExMaxInfoLevel=1
} _GET_FILEEX_INFO_LEVELS;

typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;

typedef struct _MEMORYSTATUSEX _MEMORYSTATUSEX, *P_MEMORYSTATUSEX;

typedef struct _MEMORYSTATUSEX MEMORYSTATUSEX;

struct _MEMORYSTATUSEX {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    DWORDLONG ullTotalPhys;
    DWORDLONG ullAvailPhys;
    DWORDLONG ullTotalPageFile;
    DWORDLONG ullAvailPageFile;
    DWORDLONG ullTotalVirtual;
    DWORDLONG ullAvailVirtual;
    DWORDLONG ullAvailExtendedVirtual;
};

typedef LONG (*PTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);

typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

typedef struct _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;

typedef struct _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;

typedef struct _COMMCONFIG _COMMCONFIG, *P_COMMCONFIG;

typedef struct _DCB DCB;

struct _COMMCONFIG {
    DWORD dwSize;
    WORD wVersion;
    WORD wReserved;
    DCB dcb;
    DWORD dwProviderSubType;
    DWORD dwProviderOffset;
    DWORD dwProviderSize;
    WCHAR wcProviderData[1];
};

typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;

typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD;

typedef struct _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;

typedef struct _OFSTRUCT _OFSTRUCT, *P_OFSTRUCT;

struct _OFSTRUCT {
    BYTE cBytes;
    BYTE fFixedDisk;
    WORD nErrCode;
    WORD Reserved1;
    WORD Reserved2;
    CHAR szPathName[128];
};

typedef struct tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;

typedef struct _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;

typedef struct tagHW_PROFILE_INFOW HW_PROFILE_INFOW;

typedef struct _DEBUG_EVENT *LPDEBUG_EVENT;

typedef BOOL (*ENUMRESNAMEPROCA)(HMODULE, LPCSTR, LPSTR, LONG_PTR);

typedef struct _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;

typedef struct _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;

typedef BOOL (*ENUMRESNAMEPROCW)(HMODULE, LPCWSTR, LPWSTR, LONG_PTR);

typedef union _union_530 _union_530, *P_union_530;

union _union_530 {
    DWORD dwOemId;
    struct _struct_531 s;
};

typedef struct _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;

typedef struct _WIN32_STREAM_ID *LPWIN32_STREAM_ID;

typedef struct tagHW_PROFILE_INFOA HW_PROFILE_INFOA;

typedef HW_PROFILE_INFOA HW_PROFILE_INFO;

typedef struct _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;

typedef struct _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;

typedef struct _RIP_INFO *LPRIP_INFO;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA _WIN32_FILE_ATTRIBUTE_DATA, *P_WIN32_FILE_ATTRIBUTE_DATA;

struct _WIN32_FILE_ATTRIBUTE_DATA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
};

typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG;

typedef union _union_518 _union_518, *P_union_518;

union _union_518 {
    struct _struct_519 s;
    PVOID Pointer;
};

typedef struct _SYSTEMTIME *LPSYSTEMTIME;

typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION;

typedef struct _OFSTRUCT *POFSTRUCT;

typedef DWORD (*PFE_EXPORT_FUNC)(PBYTE, PVOID, ULONG);

typedef union _union_321 _union_321, *P_union_321;

union _union_321 {
    struct _struct_322 Block;
    struct _struct_323 Region;
};

typedef struct _COMMTIMEOUTS _COMMTIMEOUTS, *P_COMMTIMEOUTS;

typedef struct _COMMTIMEOUTS COMMTIMEOUTS;

struct _COMMTIMEOUTS {
    DWORD ReadIntervalTimeout;
    DWORD ReadTotalTimeoutMultiplier;
    DWORD ReadTotalTimeoutConstant;
    DWORD WriteTotalTimeoutMultiplier;
    DWORD WriteTotalTimeoutConstant;
};

typedef PCONTEXT LPCONTEXT;

typedef struct _FILETIME *LPFILETIME;

typedef struct _STARTUPINFOA *LPSTARTUPINFOA;

typedef LPSTARTUPINFOA LPSTARTUPINFO;

typedef struct _WIN32_FIND_DATAA _WIN32_FIND_DATAA, *P_WIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATAA;

typedef WIN32_FIND_DATAA WIN32_FIND_DATA;

struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef union _union_304 _union_304, *P_union_304;

union _union_304 {
    DWORD dwOemId;
    struct _struct_305 field1;
};

typedef struct _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;

typedef union _union_543 _union_543, *P_union_543;

union _union_543 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

typedef struct _MEMORYSTATUS MEMORYSTATUS;

typedef struct _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;

typedef union _union_317 _union_317, *P_union_317;

union _union_317 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef union _union_319 _union_319, *P_union_319;

union _union_319 {
    struct _struct_320 Block;
    struct _struct_321 Region;
};

typedef struct _WIN32_FIND_DATAA *PWIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAW *PWIN32_FIND_DATAW;

typedef void (*PFIBER_START_ROUTINE)(LPVOID);

typedef struct _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;

typedef struct _SYSTEM_INFO SYSTEM_INFO;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;

typedef struct _BY_HANDLE_FILE_INFORMATION *PBY_HANDLE_FILE_INFORMATION;

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchNameMatch=0,
    FindExSearchLimitToDirectories=1,
    FindExSearchLimitToDevices=2,
    FindExSearchMaxSearchOp=3
} _FINDEX_SEARCH_OPS;

typedef struct _PROCESS_HEAP_ENTRY _PROCESS_HEAP_ENTRY, *P_PROCESS_HEAP_ENTRY;

typedef struct _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;

struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    DWORD cbData;
    BYTE cbOverhead;
    BYTE iRegionIndex;
    WORD wFlags;
    union _union_319 field5_0xc;
};

typedef STARTUPINFOA STARTUPINFO;

typedef struct _COMMCONFIG COMMCONFIG;

typedef void (*PTIMERAPCROUTINE)(LPVOID, DWORD, DWORD);

typedef struct _COMMCONFIG *LPCOMMCONFIG;

typedef DWORD (*LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, DWORD, DWORD, HANDLE, HANDLE, LPVOID);

typedef struct _FILETIME *PFILETIME;

typedef struct _COMMPROP COMMPROP;

typedef struct _PROCESS_INFORMATION PROCESS_INFORMATION;

typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoStandard=0,
    FindExInfoMaxInfoLevel=1
} _FINDEX_INFO_LEVELS;

typedef struct _MEMORYSTATUSEX *LPMEMORYSTATUSEX;

typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;

typedef struct _TIME_ZONE_INFORMATION *PTIME_ZONE_INFORMATION;

typedef struct _OFSTRUCT *LPOFSTRUCT;

typedef DWORD (*PFE_IMPORT_FUNC)(PBYTE, PVOID, PULONG);

typedef struct _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;

typedef struct _SYSTEMTIME *PSYSTEMTIME;

typedef struct _COMSTAT *LPCOMSTAT;

typedef enum _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;

typedef struct _MEMORYSTATUS *LPMEMORYSTATUS;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;

typedef struct _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;

typedef struct _WIN32_FIND_DATAW WIN32_FIND_DATAW;

typedef struct _WIN32_STREAM_ID WIN32_STREAM_ID;

typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;

typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS;

typedef struct _EVENTLOG_FULL_INFORMATION *LPEVENTLOG_FULL_INFORMATION;

typedef struct _COMMTIMEOUTS *LPCOMMTIMEOUTS;

typedef struct _OFSTRUCT OFSTRUCT;

typedef PLDT_ENTRY LPLDT_ENTRY;

typedef struct _DCB *LPDCB;

typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;

typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;

typedef struct _PROCESS_HEAP_ENTRY *PPROCESS_HEAP_ENTRY;

typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;

typedef struct _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;

typedef enum _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;

typedef struct _OVERLAPPED OVERLAPPED;

#define AC_LINE_BACKUP_POWER 2

#define IGNORE 0

#define S_PERIOD512 0

#define AC_LINE_OFFLINE 0

#define GMEM_SHARE 8192

#define BAUD_128K 65536

#define COPY_FILE_FAIL_IF_EXISTS 1

#define PROFILE_USER 268435456

#define STD_ERROR_HANDLE -12

#define STD_INPUT_HANDLE -10

#define PIPE_SERVER_END 1

#define EXCEPTION_FLT_OVERFLOW 3221225617

#define SECURITY_VALID_SQOS_FLAGS 2031616

#define DTR_CONTROL_HANDSHAKE 2

#define FORMAT_MESSAGE_IGNORE_INSERTS 512

#define EV_EVENT1 2048

#define STARTF_USECOUNTCHARS 8

#define EV_EVENT2 4096

#define CBR_600 600

#define DRIVE_CDROM 5

#define BAUD_600 32

#define GMEM_FIXED 0

#define OUTPUT_DEBUG_STRING_EVENT 8

#define BACKUP_INVALID 0

#define DOCKINFO_USER_DOCKED 6

#define SP_SERIALCOMM 1

#define NMPWAIT_WAIT_FOREVER 4294967295

#define S_SERQFUL -4

#define SEM_NOGPFAULTERRORBOX 2

#define GMEM_MODIFY 128

#define EV_RXCHAR 1

#define SETDTR 5

#define PIPE_TYPE_BYTE 0

#define DDD_LUID_BROADCAST_DRIVE 16

#define OF_REOPEN 32768

#define PCF_PARITY_CHECK 8

#define FORMAT_MESSAGE_ALLOCATE_BUFFER 256

#define FILE_FLAG_RANDOM_ACCESS 268435456

#define PROCESS_HEAP_ENTRY_DDESHARE 32

#define CBR_256000 256000

#define EXCEPTION_NONCONTINUABLE_EXCEPTION 3221225509

#define CE_DNS 2048

#define TC_NORMAL 0

#define TC_SIGNAL 3

#define FORMAT_MESSAGE_FROM_SYSTEM 4096

#define HIGH_PRIORITY_CLASS 128

#define BAUD_9600 2048

#define FILE_MAP_READ 4

#define FILE_FLAG_NO_BUFFERING 536870912

#define FILE_USER_DISALLOWED 7

#define BACKUP_PROPERTY_DATA 6

#define S_QUEUEEMPTY 0

#define BATTERY_FLAG_HIGH 1

#define GMEM_ZEROINIT 64

#define CBR_115200 115200

#define EXCEPTION_FLT_STACK_CHECK 3221225618

#define OF_VERIFY 1024

#define LMEM_ZEROINIT 64

#define FS_FILE_ENCRYPTION 131072

#define WAIT_OBJECT_0 0

#define LMEM_VALID_FLAGS 3954

#define SP_HANDSHAKING 16

#define FILE_MAP_ALL_ACCESS 983071

#define SHUTDOWN_NORETRY 1

#define DRIVE_FIXED 3

#define LOGON32_LOGON_BATCH 4

#define STARTF_FORCEOFFFEEDBACK 128

#define MOVEFILE_REPLACE_EXISTING 1

#define DRIVE_RAMDISK 6

#define BAUD_7200 1024

#define DRIVE_REMOVABLE 2

#define FILE_TYPE_DISK 1

#define LMEM_DISCARDED 16384

#define GMEM_NODISCARD 32

#define EXCEPTION_FLT_UNDERFLOW 3221225619

#define EV_ERR 128

#define DETACHED_PROCESS 8

#define OPEN_ALWAYS 4

#define FORMAT_MESSAGE_FROM_STRING 1024

#define OF_CREATE 4096

#define CLRRTS 4

#define FILE_FLAG_WRITE_THROUGH 2147483648

#define GMEM_VALID_FLAGS 32626

#define TLS_OUT_OF_INDEXES 4294967295

#define S_STACCATO 2

#define PROGRESS_STOP 2

#define CLRBREAK 9

#define PST_UNSPECIFIED 0

#define S_SERMACT -3

#define EXCEPTION_INVALID_HANDLE 3221225480

#define CALLBACK_STREAM_SWITCH 1

#define PROGRESS_CANCEL 1

#define TIME_ZONE_ID_INVALID 4294967295

#define PST_MODEM 6

#define NMPWAIT_USE_DEFAULT_WAIT 0

#define CREATE_FORCEDOS 8192

#define BATTERY_FLAG_LOW 2

#define CBR_1200 1200

#define DOCKINFO_UNDOCKED 1

#define CE_MODE 32768

#define AC_LINE_ONLINE 1

#define DOCKINFO_USER_UNDOCKED 5

#define CREATE_BREAKAWAY_FROM_JOB 16777216

#define STD_OUTPUT_HANDLE -11

#define CREATE_THREAD_DEBUG_EVENT 2

#define PST_SCANNER 34

#define RTS_CONTROL_HANDSHAKE 2

#define DRIVE_REMOTE 4

#define COPY_FILE_OPEN_SOURCE_FOR_WRITE 4

#define GMEM_NOCOMPACT 16

#define SP_PARITY_CHECK 32

#define PCF_INTTIMEOUTS 128

#define BACKUP_OBJECT_ID 7

#define BATTERY_FLAG_UNKNOWN 255

#define MS_CTS_ON 16

#define CREATE_NEW_CONSOLE 16

#define INVALID_ATOM 0

#define SPACEPARITY 4

#define MAX_COMPUTERNAME_LENGTH 15

#define IDLE_PRIORITY_CLASS 64

#define NORMAL_PRIORITY_CLASS 32

#define SETBREAK 8

#define PIPE_CLIENT_END 0

#define BACKUP_LINK 5

#define S_PERIODVOICE 3

#define CE_BREAK 16

#define STARTF_USEFILLATTRIBUTE 16

#define CE_PTO 512

#define FILE_MAP_COPY 1

#define SP_DATABITS 4

#define FILE_UNKNOWN 5

#define SECURITY_EFFECTIVE_ONLY 524288

#define EXCEPTION_STACK_OVERFLOW 3221225725

#define LOCKFILE_EXCLUSIVE_LOCK 2

#define GET_TAPE_DRIVE_INFORMATION 1

#define STOPBITS_20 4

#define PST_NETWORK_BRIDGE 256

#define CE_FRAME 8

#define OF_WRITE 1

#define LMEM_DISCARDABLE 3840

#define LMEM_INVALID_HANDLE 32768

#define STOPBITS_15 2

#define STOPBITS_10 1

#define BACKUP_SECURITY_DATA 3

#define EV_RING 256

#define THREAD_PRIORITY_LOWEST -2

#define PARITY_ODD 512

#define BACKUP_DATA 1

#define EXCEPTION_FLT_INVALID_OPERATION 3221225616

#define BACKUP_REPARSE_DATA 8

#define PARITY_NONE 256

#define FS_FILE_COMPRESSION 16

#define EVENPARITY 2

#define HANDLE_FLAG_PROTECT_FROM_CLOSE 2

#define S_SERBDNT -5

#define FILE_TYPE_REMOTE 32768

#define IE_MEMORY -4

#define HANDLE_FLAG_INHERIT 1

#define PIPE_TYPE_MESSAGE 4

#define MS_RLSD_ON 128

#define DEBUG_ONLY_THIS_PROCESS 2

#define STREAM_NORMAL_ATTRIBUTE 0

#define SETXON 2

#define FILE_SYSTEM_DIR 4

#define OF_PROMPT 8192

#define INVALID_SET_FILE_POINTER -1

#define LPTR 64

#define SET_TAPE_MEDIA_INFORMATION 0

#define CBR_57600 57600

#define STARTF_FORCEONFEEDBACK 64

#define FS_CASE_SENSITIVE 1

#define S_THRESHOLD 1

#define FILE_FLAG_OVERLAPPED 1073741824

#define CREATE_FOR_IMPORT 1

#define GMEM_LOCKCOUNT 255

#define DOCKINFO_DOCKED 2

#define CBR_110 110

#define LPTx 128

#define SP_RLSD 64

#define TWOSTOPBITS 2

#define S_WHITE2048 6

#define S_PERIOD2048 2

#define FILE_FLAG_DELETE_ON_CLOSE 67108864

#define EV_RX80FULL 1024

#define EV_DSR 16

#define FS_VOL_IS_COMPRESSED 32768

#define RESETDEV 7

#define S_ALLTHRESHOLD 2

#define IE_BAUDRATE -12

#define GMEM_NOTIFY 16384

#define OF_SHARE_COMPAT 0

#define S_SERDVL -9

#define PROGRESS_CONTINUE 0

#define FILE_FLAG_FIRST_PIPE_INSTANCE 524288

#define IE_BADID -1

#define STARTF_USEHOTKEY 512

#define BAUD_1200 64

#define DATABITS_5 1

#define DATABITS_6 2

#define OF_CANCEL 2048

#define COMMPROP_INITIALIZED 3879531822

#define DATABITS_7 4

#define DATABITS_8 8

#define PROCESS_HEAP_ENTRY_BUSY 4

#define S_SERDTP -8

#define CREATE_SHARED_WOW_VDM 4096

#define EV_PERR 512

#define S_WHITEVOICE 7

#define INVALID_FILE_SIZE 4294967295

#define LMEM_MOVEABLE 2

#define NONZEROLPTR 0

#define PURGE_TXCLEAR 4

#define GMEM_NOT_BANKED 4096

#define GMEM_MOVEABLE 2

#define CBR_300 300

#define OF_DELETE 512

#define S_SERDSR -15

#define S_SERDST -16

#define TC_GP_TRAP 2

#define S_SERDSH -11

#define PCF_RTSCTS 2

#define LOGON32_LOGON_SERVICE 5

#define MOVEFILE_WRITE_THROUGH 8

#define SP_STOPBITS 8

#define SEM_FAILCRITICALERRORS 1

#define DATABITS_16 16

#define CREATE_FOR_DIR 2

#define CREATE_IGNORE_SYSTEM_DEFAULT 2147483648

#define EXCEPTION_ARRAY_BOUNDS_EXCEEDED 3221225612

#define PIPE_READMODE_MESSAGE 2

#define MOVEFILE_DELAY_UNTIL_REBOOT 4

#define CREATE_PRESERVE_CODE_AUTHZ_LEVEL 33554432

#define S_SEROFM -2

#define LMEM_FIXED 0

#define DTR_CONTROL_DISABLE 0

#define CE_RXOVER 1

#define PCF_SETXCHAR 32

#define LMEM_LOCKCOUNT 255

#define FILE_TYPE_CHAR 2

#define S_SERDPT -12

#define WAIT_ABANDONED_0 128

#define HW_PROFILE_GUIDLEN 39

#define DDD_NO_BROADCAST_SYSTEM 8

#define UNLOAD_DLL_DEBUG_EVENT 7

#define THREAD_PRIORITY_ERROR_RETURN 2147483647

#define LOCKFILE_FAIL_IMMEDIATELY 1

#define S_NORMAL 0

#define FILE_DIR_DISALLOWED 9

#define DTR_CONTROL_ENABLE 1

#define SP_BAUD 2

#define BAUD_19200 8192

#define CALLBACK_CHUNK_FINISHED 0

#define RIP_EVENT 9

#define EXCEPTION_PRIV_INSTRUCTION 3221225622

#define CE_OVERRUN 2

#define FILE_TYPE_UNKNOWN 0

#define OF_SHARE_DENY_WRITE 32

#define PARITY_MARK 2048

#define CREATE_SEPARATE_WOW_VDM 2048

#define DRIVE_UNKNOWN 0

#define CREATE_NEW 1

#define PIPE_ACCESS_INBOUND 1

#define OF_SHARE_DENY_NONE 64

#define PIPE_ACCESS_DUPLEX 3

#define FILE_FLAG_OPEN_REPARSE_POINT 2097152

#define THREAD_PRIORITY_IDLE -15

#define PCF_XONXOFF 16

#define S_SERDMD -10

#define INFINITE 4294967295

#define LOGON32_PROVIDER_DEFAULT 0

#define PST_LAT 257

#define LOGON32_LOGON_INTERACTIVE 2

#define S_SERDLN -6

#define MAXINTATOM 49152

#define EV_BREAK 64

#define BATTERY_FLAG_CRITICAL 4

#define LOAD_LIBRARY_AS_DATAFILE 2

#define SETRTS 3

#define DOCKINFO_USER_SUPPLIED 4

#define OPEN_EXISTING 3

#define BATTERY_LIFE_UNKNOWN 4294967295

#define PARITY_EVEN 1024

#define STREAM_CONTAINS_PROPERTIES 4

#define IE_HARDWARE -10

#define CREATE_ALWAYS 2

#define PIPE_READMODE_BYTE 0

#define STARTF_USEPOSITION 4

#define CREATE_SUSPENDED 4

#define CREATE_NEW_PROCESS_GROUP 512

#define SCS_WOW_BINARY 2

#define OFS_MAXPATHNAME 128

#define FORMAT_MESSAGE_FROM_HMODULE 2048

#define BAUD_115200 131072

#define CBR_14400 14400

#define STILL_ACTIVE 259

#define STARTF_USESHOWWINDOW 1

#define IE_DEFAULT -5

#define PROFILE_SERVER 1073741824

#define BAUD_14400 4096

#define CONTROL_C_EXIT 3221225786

#define PIPE_NOWAIT 1

#define ODDPARITY 1

#define SCS_DOS_BINARY 1

#define PCF_16BITMODE 512

#define PURGE_RXCLEAR 8

#define WAIT_IO_COMPLETION 192

#define EXCEPTION_IN_PAGE_ERROR 3221225478

#define CBR_38400 38400

#define EXCEPTION_DEBUG_EVENT 1

#define GMEM_LOWER 4096

#define EV_RXFLAG 2

#define EXCEPTION_ACCESS_VIOLATION 3221225477

#define PROGRESS_QUIET 3

#define BAUD_300 16

#define EXCEPTION_INVALID_DISPOSITION 3221225510

#define COPY_FILE_ALLOW_DECRYPTED_DESTINATION 8

#define SCS_OS216_BINARY 5

#define WAIT_ABANDONED 128

#define GMEM_DDESHARE 8192

#define FILE_END 2

#define GPTR 64

#define STARTF_USESTDHANDLES 256

#define SEM_NOOPENFILEERRORBOX 32768

#define PROCESS_HEAP_REGION 1

#define PIPE_ACCESS_OUTBOUND 2

#define TC_HARDERR 1

#define LOAD_DLL_DEBUG_EVENT 6

#define EXCEPTION_FLT_INEXACT_RESULT 3221225615

#define S_SERDFQ -13

#define FILE_FLAG_SEQUENTIAL_SCAN 134217728

#define REALTIME_PRIORITY_CLASS 256

#define RTS_CONTROL_DISABLE 0

#define FILE_SYSTEM_NOT_SUPPORT 6

#define SCS_PIF_BINARY 3

#define BATTERY_FLAG_NO_BATTERY 128

#define S_SERDDR -14

#define STREAM_CONTAINS_SECURITY 2

#define CREATE_NO_WINDOW 134217728

#define PST_PARALLELPORT 2

#define PST_TCPIP_TELNET 258

#define CBR_128000 128000

#define BAUD_110 2

#define CBR_4800 4800

#define DEBUG_PROCESS 1

#define EV_TXEMPTY 4

#define FIND_FIRST_EX_CASE_SENSITIVE 1

#define S_SERDCC -7

#define OF_SHARE_EXCLUSIVE 16

#define OF_READWRITE 2

#define SET_TAPE_DRIVE_INFORMATION 1

#define BACKUP_SPARSE_BLOCK 9

#define EXCEPTION_INT_OVERFLOW 3221225621

#define FILE_TYPE_PIPE 3

#define FORMAT_MESSAGE_MAX_WIDTH_MASK 255

#define BATTERY_PERCENTAGE_UNKNOWN 255

#define EFS_USE_RECOVERY_KEYS 1

#define DATABITS_16X 32

#define MAX_PROFILE_LEN 80

#define FILE_MAP_WRITE 2

#define GMEM_INVALID_HANDLE 32768

#define BAUD_1800 128

#define SCS_64BIT_BINARY 6

#define THREAD_PRIORITY_HIGHEST 2

#define BACKUP_ALTERNATE_DATA 4

#define BAUD_56K 32768

#define FILE_FLAG_POSIX_SEMANTICS 16777216

#define SETXOFF 1

#define LOAD_WITH_ALTERED_SEARCH_PATH 8

#define PST_FAX 33

#define PROCESS_HEAP_UNCOMMITTED_RANGE 2

#define FS_PERSISTENT_ACLS 8

#define PCF_DTRDSR 1

#define LOGON32_LOGON_UNLOCK 7

#define EXCEPTION_FLT_DIVIDE_BY_ZERO 3221225614

#define BAUD_38400 16384

#define OF_READ 0

#define CREATE_PROCESS_DEBUG_EVENT 3

#define MS_RING_ON 64

#define LHND 66

#define CBR_56000 56000

#define DDD_RAW_TARGET_PATH 1

#define BAUD_150 8

#define FORMAT_MESSAGE_ARGUMENT_ARRAY 8192

#define THREAD_PRIORITY_BELOW_NORMAL -1

#define FILE_ENCRYPTABLE 0

#define CBR_2400 2400

#define CLRDTR 6

#define PIPE_WAIT 0

#define FILE_READ_ONLY 8

#define CE_TXFULL 256

#define NONZEROLHND 2

#define DDD_REMOVE_DEFINITION 2

#define FILE_FLAG_OPEN_NO_RECALL 1048576

#define EXCEPTION_GUARD_PAGE 2147483649

#define BAUD_075 1

#define IE_NOPEN -3

#define EXCEPTION_FLT_DENORMAL_OPERAND 3221225613

#define LOGON32_PROVIDER_WINNT40 2

#define STREAM_MODIFIED_WHEN_READ 1

#define MUTEX_MODIFY_STATE 1

#define PURGE_TXABORT 1

#define S_PERIOD1024 1

#define OF_EXIST 16384

#define CREATE_DEFAULT_ERROR_MODE 67108864

#define LOGON32_PROVIDER_WINNT35 1

#define SEM_NOALIGNMENTFAULTEXCEPT 4

#define FS_UNICODE_STORED_ON_DISK 4

#define SECURITY_SQOS_PRESENT 1048576

#define THREAD_PRIORITY_NORMAL 0

#define FILE_IS_ENCRYPTED 1

#define RTS_CONTROL_TOGGLE 3

#define LMEM_MODIFY 128

#define EXIT_PROCESS_DEBUG_EVENT 5

#define MUTEX_ALL_ACCESS 2031617

#define INVALID_FILE_ATTRIBUTES -1

#define PCF_RLSD 4

#define HINSTANCE_ERROR 32

#define OF_SHARE_DENY_READ 48

#define STACK_SIZE_PARAM_IS_A_RESERVATION 65536

#define EV_RLSD 32

#define CE_OOP 4096

#define EXCEPTION_DATATYPE_MISALIGNMENT 2147483650

#define MS_DSR_ON 32

#define DONT_RESOLVE_DLL_REFERENCES 1

#define TRUNCATE_EXISTING 5

#define BATTERY_FLAG_CHARGING 8

#define PIPE_UNLIMITED_INSTANCES 255

#define BAUD_4800 512

#define S_WHITE512 4

#define GMEM_DISCARDED 16384

#define PROFILE_KERNEL 536870912

#define CBR_19200 19200

#define EXCEPTION_SINGLE_STEP 2147483652

#define IE_BYTESIZE -11

#define EV_CTS 8

#define THREAD_PRIORITY_TIME_CRITICAL 15

#define WAIT_FAILED 4294967295

#define PURGE_RXABORT 2

#define S_SERDVNA -1

#define PCF_SPECIALCHARS 256

#define BAUD_134_5 4

#define RTS_CONTROL_ENABLE 1

#define MOVEFILE_COPY_ALLOWED 2

#define STREAM_SPARSE_ATTRIBUTE 8

#define S_LEGATO 1

#define INVALID_HANDLE_VALUE -1

#define EXIT_THREAD_DEBUG_EVENT 4

#define OF_PARSE 256

#define BAUD_2400 256

#define SCS_THIS_PLATFORM_BINARY 0

#define DDD_EXACT_MATCH_ON_REMOVE 4

#define BAUD_USER 268435456

#define STARTF_USESIZE 2

#define AC_LINE_UNKNOWN 255

#define FILE_CURRENT 1

#define PROCESS_HEAP_ENTRY_MOVEABLE 16

#define LOGON32_LOGON_NETWORK 3

#define EXCEPTION_BREAKPOINT 2147483651

#define BACKUP_EA_DATA 2

#define PCF_TOTALTIMEOUTS 64

#define EXCEPTION_INT_DIVIDE_BY_ZERO 3221225620

#define COPY_FILE_RESTARTABLE 2

#define NMPWAIT_NOWAIT 1

#define PST_RS423 4

#define PST_RS422 3

#define EVENTLOG_FULL_INFO 0

#define CREATE_UNICODE_ENVIRONMENT 1024

#define FILE_ROOT_DIR 3

#define THREAD_PRIORITY_ABOVE_NORMAL 1

#define S_WHITE1024 5

#define ABOVE_NORMAL_PRIORITY_CLASS 32768

#define PST_RS449 5

#define LMEM_NOCOMPACT 16

#define GET_TAPE_MEDIA_INFORMATION 0

#define CE_RXPARITY 4

#define LOAD_IGNORE_CODE_AUTHZ_LEVEL 16

#define BAUD_57600 262144

#define SCS_POSIX_BINARY 4

#define ONESTOPBIT 0

#define STARTF_RUNFULLSCREEN 32

#define FILE_SYSTEM_ATTR 2

#define FS_CASE_IS_PRESERVED 2

#define NOPARITY 0

#define MARKPARITY 3

#define BELOW_NORMAL_PRIORITY_CLASS 16384

#define DRIVE_NO_ROOT_DIR 1

#define PST_RS232 1

#define EXCEPTION_ILLEGAL_INSTRUCTION 3221225501

#define CBR_9600 9600

#define SP_PARITY 1

#define IE_OPEN -2

#define GHND 66

#define GMEM_DISCARDABLE 256

#define SECURITY_CONTEXT_TRACKING 262144

#define FILE_BEGIN 0

#define PST_X25 259

#define ONE5STOPBITS 1

#define OVERWRITE_HIDDEN 4

#define SCS_32BIT_BINARY 0

#define FILE_FLAG_BACKUP_SEMANTICS 33554432

#define CE_IOE 1024

#define LMEM_NODISCARD 32

#define PARITY_SPACE 4096

typedef enum enum_3272 {
    INTRNCVT_OK=0,
    INTRNCVT_OVERFLOW=1,
    INTRNCVT_UNDERFLOW=2
} enum_3272;

typedef enum enum_3272 INTRNCVT_STATUS;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR _GENERIC_BINDING_ROUTINE_PAIR, *P_GENERIC_BINDING_ROUTINE_PAIR;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR GENERIC_BINDING_ROUTINE_PAIR;

typedef void * (*GENERIC_BINDING_ROUTINE)(void *);

typedef void (*GENERIC_UNBIND_ROUTINE)(void *, uchar *);

struct _GENERIC_BINDING_ROUTINE_PAIR {
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

typedef struct NDR_ALLOC_ALL_NODES_CONTEXT NDR_ALLOC_ALL_NODES_CONTEXT, *PNDR_ALLOC_ALL_NODES_CONTEXT;

struct NDR_ALLOC_ALL_NODES_CONTEXT {
};

typedef struct _COMM_FAULT_OFFSETS _COMM_FAULT_OFFSETS, *P_COMM_FAULT_OFFSETS;

typedef struct _COMM_FAULT_OFFSETS COMM_FAULT_OFFSETS;

struct _COMM_FAULT_OFFSETS {
    short CommOffset;
    short FaultOffset;
};

typedef struct ARRAY_INFO ARRAY_INFO, *PARRAY_INFO;

struct ARRAY_INFO {
    long Dimension;
    ulong *BufferConformanceMark;
    ulong *BufferVarianceMark;
    ulong *MaxCountArray;
    ulong *OffsetArray;
    ulong *ActualCountArray;
};

typedef struct _NDR_CS_ROUTINES _NDR_CS_ROUTINES, *P_NDR_CS_ROUTINES;

typedef struct _NDR_CS_ROUTINES NDR_CS_ROUTINES;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES _NDR_CS_SIZE_CONVERT_ROUTINES, *P_NDR_CS_SIZE_CONVERT_ROUTINES;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES NDR_CS_SIZE_CONVERT_ROUTINES;

typedef ulong error_status_t;

typedef void (*CS_TAG_GETTING_ROUTINE)(RPC_BINDING_HANDLE, int, ulong *, ulong *, ulong *, error_status_t *);

typedef enum _IDL_CS_CONVERT {
    IDL_CS_NO_CONVERT=0,
    IDL_CS_IN_PLACE_CONVERT=1,
    IDL_CS_NEW_BUFFER_CONVERT=2
} _IDL_CS_CONVERT;

typedef enum _IDL_CS_CONVERT IDL_CS_CONVERT;

typedef void (*CS_TYPE_NET_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (*CS_TYPE_TO_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, void *, ulong, byte *, ulong *, error_status_t *);

typedef void (*CS_TYPE_LOCAL_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (*CS_TYPE_FROM_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, byte *, ulong, ulong, void *, ulong *, error_status_t *);

struct _NDR_CS_ROUTINES {
    NDR_CS_SIZE_CONVERT_ROUTINES *pSizeConvertRoutines;
    CS_TAG_GETTING_ROUTINE *pTagGettingRoutines;
};

struct _NDR_CS_SIZE_CONVERT_ROUTINES {
    CS_TYPE_NET_SIZE_ROUTINE pfnNetSize;
    CS_TYPE_TO_NETCS_ROUTINE pfnToNetCs;
    CS_TYPE_LOCAL_SIZE_ROUTINE pfnLocalSize;
    CS_TYPE_FROM_NETCS_ROUTINE pfnFromNetCs;
};

typedef struct _XMIT_ROUTINE_QUINTUPLE _XMIT_ROUTINE_QUINTUPLE, *P_XMIT_ROUTINE_QUINTUPLE;

typedef struct _XMIT_ROUTINE_QUINTUPLE XMIT_ROUTINE_QUINTUPLE;

typedef struct _MIDL_STUB_MESSAGE _MIDL_STUB_MESSAGE, *P_MIDL_STUB_MESSAGE;

typedef struct _MIDL_STUB_MESSAGE *PMIDL_STUB_MESSAGE;

typedef void (*XMIT_HELPER_ROUTINE)(PMIDL_STUB_MESSAGE);

typedef struct NDR_POINTER_QUEUE_STATE NDR_POINTER_QUEUE_STATE, *PNDR_POINTER_QUEUE_STATE;

typedef struct _MIDL_STUB_DESC _MIDL_STUB_DESC, *P_MIDL_STUB_DESC;

typedef struct _FULL_PTR_XLAT_TABLES _FULL_PTR_XLAT_TABLES, *P_FULL_PTR_XLAT_TABLES;

typedef struct _struct_1164 _struct_1164, *P_struct_1164;

typedef struct _struct_1164 *NDR_SCONTEXT;

typedef struct _NDR_ASYNC_MESSAGE _NDR_ASYNC_MESSAGE, *P_NDR_ASYNC_MESSAGE;

typedef struct _NDR_ASYNC_MESSAGE *PNDR_ASYNC_MESSAGE;

typedef struct _NDR_CORRELATION_INFO _NDR_CORRELATION_INFO, *P_NDR_CORRELATION_INFO;

typedef struct _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO;

typedef struct CS_STUB_INFO CS_STUB_INFO, *PCS_STUB_INFO;

typedef struct _NDR_PROC_CONTEXT _NDR_PROC_CONTEXT, *P_NDR_PROC_CONTEXT;

typedef union _union_1196 _union_1196, *P_union_1196;

typedef void (*NDR_RUNDOWN)(void *);

typedef void (*EXPR_EVAL)(struct _MIDL_STUB_MESSAGE *);

typedef struct _MALLOC_FREE_STRUCT _MALLOC_FREE_STRUCT, *P_MALLOC_FREE_STRUCT;

typedef struct _MALLOC_FREE_STRUCT MALLOC_FREE_STRUCT;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE _USER_MARSHAL_ROUTINE_QUADRUPLE, *P_USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef void (*NDR_NOTIFY_ROUTINE)(void);

typedef struct _struct_1206 _struct_1206, *P_struct_1206;

typedef struct _struct_1207 _struct_1207, *P_struct_1207;

typedef enum enum_1202 {
    XLAT_SERVER=1,
    XLAT_CLIENT=2
} enum_1202;

typedef enum enum_1202 XLAT_SIDE;

typedef struct __GENERIC_BINDING_INFO __GENERIC_BINDING_INFO, *P__GENERIC_BINDING_INFO;

typedef struct __GENERIC_BINDING_INFO *PGENERIC_BINDING_INFO;

typedef ulong (*USER_MARSHAL_SIZING_ROUTINE)(ulong *, ulong, void *);

typedef uchar * (*USER_MARSHAL_MARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef uchar * (*USER_MARSHAL_UNMARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef void (*USER_MARSHAL_FREEING_ROUTINE)(ulong *, void *);

typedef struct _FULL_PTR_TO_REFID_ELEMENT _FULL_PTR_TO_REFID_ELEMENT, *P_FULL_PTR_TO_REFID_ELEMENT;

typedef struct _FULL_PTR_TO_REFID_ELEMENT *PFULL_PTR_TO_REFID_ELEMENT;

struct _MIDL_STUB_MESSAGE {
    PRPC_MESSAGE RpcMsg;
    uchar *Buffer;
    uchar *BufferStart;
    uchar *BufferEnd;
    uchar *BufferMark;
    ulong BufferLength;
    ulong MemorySize;
    uchar *Memory;
    int IsClient;
    int ReuseBuffer;
    struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE *pPointerQueueState;
    int IgnoreEmbeddedPointers;
    uchar *PointerBufferMark;
    uchar fBufferValid;
    uchar uFlags;
    ushort Unused2;
    ULONG_PTR MaxCount;
    ulong Offset;
    ulong ActualCount;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    uchar *StackTop;
    uchar *pPresentedType;
    uchar *pTransmitType;
    handle_t SavedHandle;
    struct _MIDL_STUB_DESC *StubDesc;
    struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;
    ulong FullPtrRefId;
    ulong PointerLength;
    int fInDontFree:1;
    int fDontCallFreeInst:1;
    int fInOnlyParam:1;
    int fHasReturn:1;
    int fHasExtensions:1;
    int fHasNewCorrDesc:1;
    int fUnused:10;
    int fUnused2:16;
    ulong dwDestContext;
    void *pvDestContext;
    NDR_SCONTEXT *SavedContextHandles;
    long ParamNumber;
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    PARRAY_INFO pArrayInfo;
    ulong *SizePtrCountArray;
    ulong *SizePtrOffsetArray;
    ulong *SizePtrLengthArray;
    void *pArgQueue;
    ulong dwStubPhase;
    void *LowStackMark;
    PNDR_ASYNC_MESSAGE pAsyncMsg;
    PNDR_CORRELATION_INFO pCorrInfo;
    uchar *pCorrMemory;
    void *pMemoryList;
    struct CS_STUB_INFO *pCSInfo;
    uchar *ConformanceMark;
    uchar *VarianceMark;
    INT_PTR Unused;
    struct _NDR_PROC_CONTEXT *pContext;
    INT_PTR Reserved51_1;
    INT_PTR Reserved51_2;
    INT_PTR Reserved51_3;
    INT_PTR Reserved51_4;
    INT_PTR Reserved51_5;
};

union _union_1196 {
    handle_t *pAutoHandle;
    handle_t *pPrimitiveHandle;
    PGENERIC_BINDING_INFO pGenericBindingInfo;
};

struct _MIDL_STUB_DESC {
    void *RpcInterfaceInformation;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    union _union_1196 IMPLICIT_HANDLE_INFO;
    NDR_RUNDOWN *apfnNdrRundownRoutines;
    GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs;
    EXPR_EVAL *apfnExprEval;
    XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple;
    uchar *pFormatTypes;
    int fCheckBounds;
    ulong Version;
    MALLOC_FREE_STRUCT *pMallocFreeStruct;
    long MIDLVersion;
    COMM_FAULT_OFFSETS *CommFaultOffsets;
    USER_MARSHAL_ROUTINE_QUADRUPLE *aUserMarshalQuadruple;
    NDR_NOTIFY_ROUTINE *NotifyRoutineTable;
    ULONG_PTR mFlags;
    NDR_CS_ROUTINES *CsRoutineTables;
    void *Reserved4;
    ULONG_PTR Reserved5;
};

struct _USER_MARSHAL_ROUTINE_QUADRUPLE {
    USER_MARSHAL_SIZING_ROUTINE pfnBufferSize;
    USER_MARSHAL_MARSHALLING_ROUTINE pfnMarshall;
    USER_MARSHAL_UNMARSHALLING_ROUTINE pfnUnmarshall;
    USER_MARSHAL_FREEING_ROUTINE pfnFree;
};

struct _MALLOC_FREE_STRUCT {
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
};

struct _FULL_PTR_TO_REFID_ELEMENT {
    struct _FULL_PTR_TO_REFID_ELEMENT *Next;
    void *Pointer;
    ulong RefId;
    uchar State;
};

struct NDR_POINTER_QUEUE_STATE {
};

struct _NDR_ASYNC_MESSAGE {
};

struct _struct_1207 {
    PFULL_PTR_TO_REFID_ELEMENT *XlatTable;
    ulong NumberOfBuckets;
    ulong HashMask;
};

struct _struct_1206 {
    void **XlatTable;
    uchar *StateTable;
    ulong NumberOfEntries;
};

struct _XMIT_ROUTINE_QUINTUPLE {
    XMIT_HELPER_ROUTINE pfnTranslateToXmit;
    XMIT_HELPER_ROUTINE pfnTranslateFromXmit;
    XMIT_HELPER_ROUTINE pfnFreeXmit;
    XMIT_HELPER_ROUTINE pfnFreeInst;
};

struct _struct_1164 {
    void *pad[2];
    void *userContext;
};

struct _NDR_CORRELATION_INFO {
};

struct _NDR_PROC_CONTEXT {
};

struct _FULL_PTR_XLAT_TABLES {
    struct _struct_1206 RefIdToPointer;
    struct _struct_1207 PointerToRefId;
    ulong NextRefId;
    XLAT_SIDE XlatSide;
};

struct __GENERIC_BINDING_INFO {
    void *pObj;
    uint Size;
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

struct CS_STUB_INFO {
    ulong WireCodeset;
    ulong DesiredReceivingCodeset;
    void *CSArrayInfo;
};

typedef struct _MIDL_STUBLESS_PROXY_INFO _MIDL_STUBLESS_PROXY_INFO, *P_MIDL_STUBLESS_PROXY_INFO;

typedef struct _MIDL_STUBLESS_PROXY_INFO MIDL_STUBLESS_PROXY_INFO;

typedef struct _MIDL_STUB_DESC MIDL_STUB_DESC;

typedef MIDL_STUB_DESC *PMIDL_STUB_DESC;

typedef uchar *PFORMAT_STRING;

typedef struct _MIDL_SYNTAX_INFO _MIDL_SYNTAX_INFO, *P_MIDL_SYNTAX_INFO;

typedef struct _MIDL_SYNTAX_INFO *PMIDL_SYNTAX_INFO;

struct _MIDL_STUBLESS_PROXY_INFO {
    PMIDL_STUB_DESC pStubDesc;
    PFORMAT_STRING ProcFormatString;
    ushort *FormatStringOffset;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

struct _MIDL_SYNTAX_INFO {
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE *DispatchTable;
    PFORMAT_STRING ProcString;
    ushort *FmtStringOffset;
    PFORMAT_STRING TypeString;
    void *aUserMarshalQuadruple;
    ULONG_PTR pReserved1;
    ULONG_PTR pReserved2;
};

typedef enum enum_1209 {
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
} enum_1209;

typedef enum enum_1209 PROXY_PHASE;

typedef struct _SCONTEXT_QUEUE _SCONTEXT_QUEUE, *P_SCONTEXT_QUEUE;

typedef struct _SCONTEXT_QUEUE SCONTEXT_QUEUE;

struct _SCONTEXT_QUEUE {
    ulong NumberOfObjects;
    NDR_SCONTEXT *ArrayOfObjects;
};

typedef enum enum_1208 {
    STUB_UNMARSHAL=0,
    STUB_CALL_SERVER=1,
    STUB_MARSHAL=2,
    STUB_CALL_SERVER_NO_HRESULT=3
} enum_1208;

typedef enum enum_1204 {
    XLAT_SERVER=1,
    XLAT_CLIENT=2
} enum_1204;

typedef enum enum_1210 {
    STUB_UNMARSHAL=0,
    STUB_CALL_SERVER=1,
    STUB_MARSHAL=2,
    STUB_CALL_SERVER_NO_HRESULT=3
} enum_1210;

typedef enum enum_1211 {
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
} enum_1211;

typedef long (*SERVER_ROUTINE)(void);

typedef enum _USER_MARSHAL_CB_TYPE {
    USER_MARSHAL_CB_BUFFER_SIZE=0,
    USER_MARSHAL_CB_MARSHALL=1,
    USER_MARSHAL_CB_UNMARSHALL=2,
    USER_MARSHAL_CB_FREE=3
} _USER_MARSHAL_CB_TYPE;

typedef enum _USER_MARSHAL_CB_TYPE USER_MARSHAL_CB_TYPE;

typedef union _union_1198 _union_1198, *P_union_1198;

union _union_1198 {
    handle_t *pAutoHandle;
    handle_t *pPrimitiveHandle;
    PGENERIC_BINDING_INFO pGenericBindingInfo;
};

typedef union _CLIENT_CALL_RETURN _CLIENT_CALL_RETURN, *P_CLIENT_CALL_RETURN;

union _CLIENT_CALL_RETURN {
    void *Pointer;
    LONG_PTR Simple;
};

typedef void *NDR_CCONTEXT;

typedef void * (RPC_CLIENT_ALLOC)(size_t);

typedef struct _SCONTEXT_QUEUE *PSCONTEXT_QUEUE;

typedef void (RPC_CLIENT_FREE)(void *);

typedef union _CLIENT_CALL_RETURN CLIENT_CALL_RETURN;

typedef enum enum_1208 STUB_PHASE;

typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO;

typedef void (*STUB_THUNK)(PMIDL_STUB_MESSAGE);

typedef ushort *PARAM_OFFSETTABLE;

typedef void *RPC_SS_THREAD_HANDLE;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR *PGENERIC_BINDING_ROUTINE_PAIR;

typedef void *PMIDL_XMIT_TYPE;

typedef struct _USER_MARSHAL_CB _USER_MARSHAL_CB, *P_USER_MARSHAL_CB;

struct _USER_MARSHAL_CB {
    ulong Flags;
    PMIDL_STUB_MESSAGE pStubMsg;
    PFORMAT_STRING pReserve;
    ulong Signature;
    USER_MARSHAL_CB_TYPE CBType;
    PFORMAT_STRING pFormat;
    PFORMAT_STRING pTypeFormat;
};

typedef struct _MIDL_SERVER_INFO_ _MIDL_SERVER_INFO_, *P_MIDL_SERVER_INFO_;

typedef struct _MIDL_SERVER_INFO_ *PMIDL_SERVER_INFO;

struct _MIDL_SERVER_INFO_ {
    PMIDL_STUB_DESC pStubDesc;
    SERVER_ROUTINE *DispatchTable;
    PFORMAT_STRING ProcString;
    ushort *FmtStringOffset;
    STUB_THUNK *ThunkTable;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

typedef struct _FULL_PTR_XLAT_TABLES FULL_PTR_XLAT_TABLES;

typedef struct _FULL_PTR_XLAT_TABLES *PFULL_PTR_XLAT_TABLES;

typedef struct _struct_1166 _struct_1166, *P_struct_1166;

struct _struct_1166 {
    void *pad[2];
    void *userContext;
};

typedef struct _XMIT_ROUTINE_QUINTUPLE *PXMIT_ROUTINE_QUINTUPLE;

typedef struct _NDR_USER_MARSHAL_INFO _NDR_USER_MARSHAL_INFO, *P_NDR_USER_MARSHAL_INFO;

typedef union _union_1225 _union_1225, *P_union_1225;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 _NDR_USER_MARSHAL_INFO_LEVEL1, *P_NDR_USER_MARSHAL_INFO_LEVEL1;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 NDR_USER_MARSHAL_INFO_LEVEL1;

struct _NDR_USER_MARSHAL_INFO_LEVEL1 {
    void *Buffer;
    ulong BufferSize;
    void * (*pfnAllocate)(size_t);
    void (*pfnFree)(void *);
    struct IRpcChannelBuffer *pRpcChannelBuffer;
    ULONG_PTR Reserved[5];
};

union _union_1225 {
    NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

struct _NDR_USER_MARSHAL_INFO {
    ulong InformationLevel;
    union _union_1225 field1_0x4;
};

typedef uchar *RPC_BUFPTR;

typedef struct _MIDL_FORMAT_STRING _MIDL_FORMAT_STRING, *P_MIDL_FORMAT_STRING;

typedef struct _MIDL_FORMAT_STRING MIDL_FORMAT_STRING;

struct _MIDL_FORMAT_STRING {
    short Pad;
    uchar Format[0];
};

typedef struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE;

typedef uchar boolean;

typedef void (*NDR_NOTIFY2_ROUTINE)(boolean);

typedef struct _USER_MARSHAL_CB USER_MARSHAL_CB;

typedef union _union_1227 _union_1227, *P_union_1227;

union _union_1227 {
    NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

typedef ulong RPC_LENGTH;

typedef double MIDL_uhyper;

typedef struct _FULL_PTR_TO_REFID_ELEMENT FULL_PTR_TO_REFID_ELEMENT;

typedef struct _NDR_USER_MARSHAL_INFO NDR_USER_MARSHAL_INFO;

typedef struct _MIDL_SERVER_INFO_ MIDL_SERVER_INFO;

typedef struct __GENERIC_BINDING_INFO GENERIC_BINDING_INFO;

typedef MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO;

typedef struct _struct_1209 _struct_1209, *P_struct_1209;

struct _struct_1209 {
    PFULL_PTR_TO_REFID_ELEMENT *XlatTable;
    ulong NumberOfBuckets;
    ulong HashMask;
};

typedef struct _struct_1208 _struct_1208, *P_struct_1208;

struct _struct_1208 {
    void **XlatTable;
    uchar *StateTable;
    ulong NumberOfEntries;
};

typedef byte cs_byte;

typedef ushort *PPARAM_OFFSETTABLE;

#define USER_MARSHAL_FC_USHORT 7

#define USER_MARSHAL_FC_ULONG 9

#define NDR_LOCAL_ENDIAN 16

#define TARGET_IS_NT351_OR_WIN95_OR_LATER 1

#define TARGET_IS_NT50_OR_LATER 1

#define USER_MARSHAL_FC_SMALL 3

#define NDR_LITTLE_ENDIAN 16

#define __RPCNDR_H_VERSION__ 500

#define USER_CALL_IS_ASYNC 256

#define NDR_VAX_FLOAT 256

#define NDR_ASCII_CHAR 0

#define USER_MARSHAL_FC_WCHAR 5

#define USER_MARSHAL_FC_CHAR 2

#define cbNDRContext 20

#define NDR_IBM_FLOAT 768

#define USER_MARSHAL_FC_SHORT 6

#define USER_CALL_NEW_CORRELATION_DESC 512

#define NDR_FLOAT_REP_MASK 65280

#define TARGET_IS_NT51_OR_LATER 1

#define USER_MARSHAL_FC_BYTE 1

#define NDR_BIG_ENDIAN 0

#define NDR_LOCAL_DATA_REPRESENTATION 16

#define USER_MARSHAL_FC_FLOAT 10

#define USER_MARSHAL_FC_LONG 8

#define USER_MARSHAL_FC_DOUBLE 12

#define NDR_EBCDIC_CHAR 1

#define USER_MARSHAL_FC_HYPER 11

#define NDR_INT_REP_MASK 240

#define NDR_IEEE_FLOAT 0

#define NDR_CHAR_REP_MASK 15

#define USER_MARSHAL_FC_USMALL 4

#define TARGET_IS_NT40_OR_LATER 1

typedef struct tagMONITORINFO tagMONITORINFO, *PtagMONITORINFO;

typedef struct tagMONITORINFO *LPMONITORINFO;

struct tagMONITORINFO {
    DWORD cbSize;
    RECT rcMonitor;
    RECT rcWork;
    DWORD dwFlags;
};

typedef BOOL (*DRAWSTATEPROC)(HDC, LPARAM, WPARAM, int, int);

typedef struct tagWNDCLASSA tagWNDCLASSA, *PtagWNDCLASSA;

typedef struct tagWNDCLASSA *LPWNDCLASSA;

typedef LPWNDCLASSA LPWNDCLASS;

typedef LRESULT (*WNDPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagWNDCLASSA {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
};

typedef struct tagMULTIKEYHELPA tagMULTIKEYHELPA, *PtagMULTIKEYHELPA;

typedef struct tagMULTIKEYHELPA *PMULTIKEYHELPA;

typedef PMULTIKEYHELPA PMULTIKEYHELP;

struct tagMULTIKEYHELPA {
    DWORD mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
};

typedef struct tagSERIALKEYSW tagSERIALKEYSW, *PtagSERIALKEYSW;

typedef struct tagSERIALKEYSW SERIALKEYSW;

struct tagSERIALKEYSW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszActivePort;
    LPWSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct tagSCROLLINFO tagSCROLLINFO, *PtagSCROLLINFO;

typedef struct tagSCROLLINFO SCROLLINFO;

struct tagSCROLLINFO {
    UINT cbSize;
    UINT fMask;
    int nMin;
    int nMax;
    UINT nPage;
    int nPos;
    int nTrackPos;
};

typedef struct tagSERIALKEYSA tagSERIALKEYSA, *PtagSERIALKEYSA;

typedef struct tagSERIALKEYSA SERIALKEYSA;

struct tagSERIALKEYSA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszActivePort;
    LPSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct tagMSGBOXPARAMSA tagMSGBOXPARAMSA, *PtagMSGBOXPARAMSA;

typedef struct tagHELPINFO tagHELPINFO, *PtagHELPINFO;

typedef struct tagHELPINFO *LPHELPINFO;

typedef void (*MSGBOXCALLBACK)(LPHELPINFO);

struct tagHELPINFO {
    UINT cbSize;
    int iContextType;
    int iCtrlId;
    HANDLE hItemHandle;
    DWORD_PTR dwContextId;
    POINT MousePos;
};

struct tagMSGBOXPARAMSA {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef struct tagWNDCLASSEXA tagWNDCLASSEXA, *PtagWNDCLASSEXA;

typedef struct tagWNDCLASSEXA *LPWNDCLASSEXA;

typedef LPWNDCLASSEXA LPWNDCLASSEX;

struct tagWNDCLASSEXA {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
};

typedef struct MENUITEMTEMPLATEHEADER MENUITEMTEMPLATEHEADER, *PMENUITEMTEMPLATEHEADER;

struct MENUITEMTEMPLATEHEADER {
    WORD versionNumber;
    WORD offset;
};

typedef struct tagMENUINFO tagMENUINFO, *PtagMENUINFO;

struct tagMENUINFO {
    DWORD cbSize;
    DWORD fMask;
    DWORD dwStyle;
    UINT cyMax;
    HBRUSH hbrBack;
    DWORD dwContextHelpID;
    ULONG_PTR dwMenuData;
};

typedef struct tagTPMPARAMS tagTPMPARAMS, *PtagTPMPARAMS;

typedef struct tagTPMPARAMS TPMPARAMS;

typedef TPMPARAMS *LPTPMPARAMS;

struct tagTPMPARAMS {
    UINT cbSize;
    RECT rcExclude;
};

typedef struct tagMENUINFO MENUINFO;

typedef struct tagTITLEBARINFO tagTITLEBARINFO, *PtagTITLEBARINFO;

typedef struct tagTITLEBARINFO *LPTITLEBARINFO;

struct tagTITLEBARINFO {
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[6];
};

typedef struct tagCBT_CREATEWNDW tagCBT_CREATEWNDW, *PtagCBT_CREATEWNDW;

typedef struct tagCREATESTRUCTW tagCREATESTRUCTW, *PtagCREATESTRUCTW;

struct tagCREATESTRUCTW {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCWSTR lpszName;
    LPCWSTR lpszClass;
    DWORD dwExStyle;
};

struct tagCBT_CREATEWNDW {
    struct tagCREATESTRUCTW *lpcs;
    HWND hwndInsertAfter;
};

typedef struct tagCBT_CREATEWNDA tagCBT_CREATEWNDA, *PtagCBT_CREATEWNDA;

typedef struct tagCREATESTRUCTA tagCREATESTRUCTA, *PtagCREATESTRUCTA;

struct tagCBT_CREATEWNDA {
    struct tagCREATESTRUCTA *lpcs;
    HWND hwndInsertAfter;
};

struct tagCREATESTRUCTA {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCSTR lpszName;
    LPCSTR lpszClass;
    DWORD dwExStyle;
};

typedef struct DLGITEMTEMPLATE DLGITEMTEMPLATE, *PDLGITEMTEMPLATE;

typedef struct DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;

struct DLGITEMTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    short x;
    short y;
    short cx;
    short cy;
    WORD id;
};

typedef struct tagACCESSTIMEOUT tagACCESSTIMEOUT, *PtagACCESSTIMEOUT;

typedef struct tagACCESSTIMEOUT ACCESSTIMEOUT;

struct tagACCESSTIMEOUT {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iTimeOutMSec;
};

typedef struct tagNCCALCSIZE_PARAMS tagNCCALCSIZE_PARAMS, *PtagNCCALCSIZE_PARAMS;

typedef struct tagWINDOWPOS tagWINDOWPOS, *PtagWINDOWPOS;

typedef struct tagWINDOWPOS *PWINDOWPOS;

struct tagWINDOWPOS {
    HWND hwnd;
    HWND hwndInsertAfter;
    int x;
    int y;
    int cx;
    int cy;
    UINT flags;
};

struct tagNCCALCSIZE_PARAMS {
    RECT rgrc[3];
    PWINDOWPOS lppos;
};

typedef struct tagCBTACTIVATESTRUCT tagCBTACTIVATESTRUCT, *PtagCBTACTIVATESTRUCT;

struct tagCBTACTIVATESTRUCT {
    BOOL fMouse;
    HWND hWndActive;
};

typedef struct tagUSEROBJECTFLAGS tagUSEROBJECTFLAGS, *PtagUSEROBJECTFLAGS;

typedef struct tagUSEROBJECTFLAGS USEROBJECTFLAGS;

struct tagUSEROBJECTFLAGS {
    BOOL fInherit;
    BOOL fReserved;
    DWORD dwFlags;
};

typedef struct DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;

typedef struct tagMENUBARINFO tagMENUBARINFO, *PtagMENUBARINFO;

typedef struct tagMENUBARINFO *LPMENUBARINFO;

struct tagMENUBARINFO {
    DWORD cbSize;
    RECT rcBar;
    HMENU hMenu;
    HWND hwndMenu;
    BOOL fBarFocused:1;
    BOOL fFocused:1;
};

typedef BOOL (*NAMEENUMPROCA)(LPSTR, LPARAM);

typedef NAMEENUMPROCA WINSTAENUMPROCA;

typedef WINSTAENUMPROCA WINSTAENUMPROC;

typedef struct tagCREATESTRUCTA *LPCREATESTRUCTA;

typedef LPCREATESTRUCTA LPCREATESTRUCT;

typedef struct tagMSGBOXPARAMSA *LPMSGBOXPARAMSA;

typedef struct tagHELPWININFOW tagHELPWININFOW, *PtagHELPWININFOW;

struct tagHELPWININFOW {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    WCHAR rgchMember[2];
};

typedef struct tagMSGBOXPARAMSW tagMSGBOXPARAMSW, *PtagMSGBOXPARAMSW;

typedef struct tagMSGBOXPARAMSW *LPMSGBOXPARAMSW;

struct tagMSGBOXPARAMSW {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpszText;
    LPCWSTR lpszCaption;
    DWORD dwStyle;
    LPCWSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef PVOID HDEVNOTIFY;

typedef HDEVNOTIFY *PHDEVNOTIFY;

typedef struct tagCOMPAREITEMSTRUCT tagCOMPAREITEMSTRUCT, *PtagCOMPAREITEMSTRUCT;

typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;

struct tagCOMPAREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    HWND hwndItem;
    UINT itemID1;
    ULONG_PTR itemData1;
    UINT itemID2;
    ULONG_PTR itemData2;
    DWORD dwLocaleId;
};

typedef struct tagWINDOWPLACEMENT tagWINDOWPLACEMENT, *PtagWINDOWPLACEMENT;

typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

typedef WINDOWPLACEMENT *PWINDOWPLACEMENT;

struct tagWINDOWPLACEMENT {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
};

typedef struct tagCBT_CREATEWNDA *LPCBT_CREATEWNDA;

typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;

typedef struct tagSCROLLBARINFO tagSCROLLBARINFO, *PtagSCROLLBARINFO;

struct tagSCROLLBARINFO {
    DWORD cbSize;
    RECT rcScrollBar;
    int dxyLineButton;
    int xyThumbTop;
    int xyThumbBottom;
    int reserved;
    DWORD rgstate[6];
};

typedef struct tagKBDLLHOOKSTRUCT tagKBDLLHOOKSTRUCT, *PtagKBDLLHOOKSTRUCT;

typedef struct tagKBDLLHOOKSTRUCT *LPKBDLLHOOKSTRUCT;

struct tagKBDLLHOOKSTRUCT {
    DWORD vkCode;
    DWORD scanCode;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMEASUREITEMSTRUCT tagMEASUREITEMSTRUCT, *PtagMEASUREITEMSTRUCT;

typedef struct tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;

struct tagMEASUREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemWidth;
    UINT itemHeight;
    ULONG_PTR itemData;
};

typedef struct tagTRACKMOUSEEVENT tagTRACKMOUSEEVENT, *PtagTRACKMOUSEEVENT;

typedef struct tagTRACKMOUSEEVENT TRACKMOUSEEVENT;

struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND hwndTrack;
    DWORD dwHoverTime;
};

typedef struct tagDEBUGHOOKINFO tagDEBUGHOOKINFO, *PtagDEBUGHOOKINFO;

struct tagDEBUGHOOKINFO {
    DWORD idThread;
    DWORD idThreadInstaller;
    LPARAM lParam;
    WPARAM wParam;
    int code;
};

typedef struct tagCWPSTRUCT tagCWPSTRUCT, *PtagCWPSTRUCT;

struct tagCWPSTRUCT {
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagUSEROBJECTFLAGS *PUSEROBJECTFLAGS;

typedef BOOL (*GRAYSTRINGPROC)(HDC, LPARAM, int);

typedef struct tagCOMBOBOXINFO tagCOMBOBOXINFO, *PtagCOMBOBOXINFO;

typedef struct tagCOMBOBOXINFO COMBOBOXINFO;

struct tagCOMBOBOXINFO {
    DWORD cbSize;
    RECT rcItem;
    RECT rcButton;
    DWORD stateButton;
    HWND hwndCombo;
    HWND hwndItem;
    HWND hwndList;
};

typedef struct tagMULTIKEYHELPA MULTIKEYHELPA;

typedef MULTIKEYHELPA MULTIKEYHELP;

typedef struct tagMINMAXINFO tagMINMAXINFO, *PtagMINMAXINFO;

typedef struct tagMINMAXINFO MINMAXINFO;

struct tagMINMAXINFO {
    POINT ptReserved;
    POINT ptMaxSize;
    POINT ptMaxPosition;
    POINT ptMinTrackSize;
    POINT ptMaxTrackSize;
};

typedef struct tagMENUITEMINFOW tagMENUITEMINFOW, *PtagMENUITEMINFOW;

typedef struct tagMENUITEMINFOW MENUITEMINFOW;

struct tagMENUITEMINFOW {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPWSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagMOUSEMOVEPOINT tagMOUSEMOVEPOINT, *PtagMOUSEMOVEPOINT;

typedef struct tagMOUSEMOVEPOINT *PMOUSEMOVEPOINT;

struct tagMOUSEMOVEPOINT {
    int x;
    int y;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagICONMETRICSA tagICONMETRICSA, *PtagICONMETRICSA;

struct tagICONMETRICSA {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTA lfFont;
};

typedef NMHDR *LPNMHDR;

typedef struct tagHIGHCONTRASTA tagHIGHCONTRASTA, *PtagHIGHCONTRASTA;

typedef struct tagHIGHCONTRASTA HIGHCONTRASTA;

typedef HIGHCONTRASTA HIGHCONTRAST;

struct tagHIGHCONTRASTA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszDefaultScheme;
};

typedef struct tagMDINEXTMENU tagMDINEXTMENU, *PtagMDINEXTMENU;

typedef struct tagMDINEXTMENU MDINEXTMENU;

struct tagMDINEXTMENU {
    HMENU hmenuIn;
    HMENU hmenuNext;
    HWND hwndNext;
};

typedef struct tagMULTIKEYHELPA *LPMULTIKEYHELPA;

typedef struct tagNONCLIENTMETRICSW tagNONCLIENTMETRICSW, *PtagNONCLIENTMETRICSW;

struct tagNONCLIENTMETRICSW {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTW lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;
};

typedef BOOL (*PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, ULONG_PTR);

typedef PROPENUMPROCEXA PROPENUMPROCEX;

typedef struct tagFILTERKEYS tagFILTERKEYS, *PtagFILTERKEYS;

typedef struct tagFILTERKEYS FILTERKEYS;

struct tagFILTERKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iWaitMSec;
    DWORD iDelayMSec;
    DWORD iRepeatMSec;
    DWORD iBounceMSec;
};

typedef DWORD HELPPOLY;

typedef struct tagCREATESTRUCTW *LPCREATESTRUCTW;

typedef struct tagMOUSEKEYS tagMOUSEKEYS, *PtagMOUSEKEYS;

typedef struct tagMOUSEKEYS *LPMOUSEKEYS;

struct tagMOUSEKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iMaxSpeed;
    DWORD iTimeToMaxSpeed;
    DWORD iCtrlSpeed;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;

typedef struct tagWNDCLASSW tagWNDCLASSW, *PtagWNDCLASSW;

typedef struct tagWNDCLASSW WNDCLASSW;

struct tagWNDCLASSW {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
};

typedef struct tagDELETEITEMSTRUCT tagDELETEITEMSTRUCT, *PtagDELETEITEMSTRUCT;

typedef struct tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;

struct tagDELETEITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    HWND hwndItem;
    ULONG_PTR itemData;
};

typedef struct tagWNDCLASSA WNDCLASSA;

typedef struct tagMSG *PMSG;

typedef struct tagMULTIKEYHELPW tagMULTIKEYHELPW, *PtagMULTIKEYHELPW;

typedef struct tagMULTIKEYHELPW *LPMULTIKEYHELPW;

struct tagMULTIKEYHELPW {
    DWORD mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
};

typedef struct tagCWPRETSTRUCT tagCWPRETSTRUCT, *PtagCWPRETSTRUCT;

struct tagCWPRETSTRUCT {
    LRESULT lResult;
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagMOUSEHOOKSTRUCT tagMOUSEHOOKSTRUCT, *PtagMOUSEHOOKSTRUCT;

typedef struct tagMOUSEHOOKSTRUCT *PMOUSEHOOKSTRUCT;

struct tagMOUSEHOOKSTRUCT {
    POINT pt;
    HWND hwnd;
    UINT wHitTestCode;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagACCEL tagACCEL, *PtagACCEL;

typedef struct tagACCEL *LPACCEL;

struct tagACCEL {
    BYTE fVirt;
    WORD key;
    WORD cmd;
};

typedef struct tagNONCLIENTMETRICSA tagNONCLIENTMETRICSA, *PtagNONCLIENTMETRICSA;

typedef struct tagNONCLIENTMETRICSA *PNONCLIENTMETRICSA;

typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS;

struct tagNONCLIENTMETRICSA {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTA lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;
};

typedef struct tagDROPSTRUCT tagDROPSTRUCT, *PtagDROPSTRUCT;

struct tagDROPSTRUCT {
    HWND hwndSource;
    HWND hwndSink;
    DWORD wFmt;
    ULONG_PTR dwData;
    POINT ptDrop;
    DWORD dwControlData;
};

typedef struct tagGUITHREADINFO tagGUITHREADINFO, *PtagGUITHREADINFO;

struct tagGUITHREADINFO {
    DWORD cbSize;
    DWORD flags;
    HWND hwndActive;
    HWND hwndFocus;
    HWND hwndCapture;
    HWND hwndMenuOwner;
    HWND hwndMoveSize;
    HWND hwndCaret;
    RECT rcCaret;
};

typedef struct tagMONITORINFOEXA tagMONITORINFOEXA, *PtagMONITORINFOEXA;

typedef struct tagMONITORINFOEXA *LPMONITORINFOEXA;

typedef LPMONITORINFOEXA LPMONITORINFOEX;

typedef struct tagMONITORINFO MONITORINFO;

struct tagMONITORINFOEXA {
    MONITORINFO field0_0x0;
    CHAR szDevice[32];
};

typedef struct tagWINDOWPOS WINDOWPOS;

typedef struct tagTOGGLEKEYS tagTOGGLEKEYS, *PtagTOGGLEKEYS;

typedef struct tagTOGGLEKEYS TOGGLEKEYS;

struct tagTOGGLEKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS;

typedef struct tagSOUNDSENTRYW tagSOUNDSENTRYW, *PtagSOUNDSENTRYW;

struct tagSOUNDSENTRYW {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPWSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagMENUGETOBJECTINFO tagMENUGETOBJECTINFO, *PtagMENUGETOBJECTINFO;

struct tagMENUGETOBJECTINFO {
    DWORD dwFlags;
    UINT uPos;
    HMENU hmenu;
    PVOID riid;
    PVOID pvObj;
};

typedef struct tagHELPWININFOA tagHELPWININFOA, *PtagHELPWININFOA;

typedef struct tagHELPWININFOA *PHELPWININFOA;

struct tagHELPWININFOA {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    CHAR rgchMember[2];
};

typedef struct tagMONITORINFOEXW tagMONITORINFOEXW, *PtagMONITORINFOEXW;

typedef struct tagMONITORINFOEXW MONITORINFOEXW;

struct tagMONITORINFOEXW {
    MONITORINFO field0_0x0;
    WCHAR szDevice[32];
};

typedef BOOL (*PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);

typedef struct tagMSLLHOOKSTRUCT tagMSLLHOOKSTRUCT, *PtagMSLLHOOKSTRUCT;

struct tagMSLLHOOKSTRUCT {
    POINT pt;
    DWORD mouseData;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMENUITEMINFOA tagMENUITEMINFOA, *PtagMENUITEMINFOA;

struct tagMENUITEMINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagMONITORINFOEXA MONITORINFOEXA;

typedef struct tagMULTIKEYHELPW MULTIKEYHELPW;

typedef struct tagHELPWININFOW *PHELPWININFOW;

typedef BOOL (*NAMEENUMPROCW)(LPWSTR, LPARAM);

typedef NAMEENUMPROCW DESKTOPENUMPROCW;

typedef BOOL (*PROPENUMPROCA)(HWND, LPCSTR, HANDLE);

typedef struct tagWNDCLASSA *PWNDCLASSA;

typedef PWNDCLASSA PWNDCLASS;

typedef struct DLGTEMPLATE DLGTEMPLATE, *PDLGTEMPLATE;

struct DLGTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    WORD cdit;
    short x;
    short y;
    short cx;
    short cy;
};

typedef struct tagMOUSEMOVEPOINT MOUSEMOVEPOINT;

typedef struct tagSTICKYKEYS tagSTICKYKEYS, *PtagSTICKYKEYS;

typedef struct tagSTICKYKEYS STICKYKEYS;

struct tagSTICKYKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef struct tagEVENTMSG tagEVENTMSG, *PtagEVENTMSG;

typedef struct tagEVENTMSG EVENTMSG;

struct tagEVENTMSG {
    UINT message;
    UINT paramL;
    UINT paramH;
    DWORD time;
    HWND hwnd;
};

typedef struct tagCBT_CREATEWNDW *LPCBT_CREATEWNDW;

typedef struct tagCWPRETSTRUCT *PCWPRETSTRUCT;

typedef struct tagWNDCLASSEXA *PWNDCLASSEXA;

typedef PWNDCLASSEXA PWNDCLASSEX;

typedef struct tagMSLLHOOKSTRUCT *LPMSLLHOOKSTRUCT;

typedef MENUINFO *LPCMENUINFO;

typedef struct tagNONCLIENTMETRICSW NONCLIENTMETRICSW;

typedef NAMEENUMPROCA DESKTOPENUMPROCA;

typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICSA;

typedef void (*SENDASYNCPROC)(HWND, UINT, ULONG_PTR, LRESULT);

typedef struct tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;

typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;

typedef struct tagWINDOWINFO tagWINDOWINFO, *PtagWINDOWINFO;

typedef WORD ATOM;

struct tagWINDOWINFO {
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
};

typedef struct tagMDICREATESTRUCTA tagMDICREATESTRUCTA, *PtagMDICREATESTRUCTA;

typedef struct tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;

typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT;

struct tagMDICREATESTRUCTA {
    LPCSTR szClass;
    LPCSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef void MENUTEMPLATEA;

typedef MENUTEMPLATEA MENUTEMPLATE;

typedef struct tagSOUNDSENTRYW *LPSOUNDSENTRYW;

typedef struct tagHARDWAREHOOKSTRUCT tagHARDWAREHOOKSTRUCT, *PtagHARDWAREHOOKSTRUCT;

typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;

struct tagHARDWAREHOOKSTRUCT {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
};

typedef struct tagICONMETRICSA ICONMETRICSA;

typedef ICONMETRICSA ICONMETRICS;

typedef BOOL (*MONITORENUMPROC)(HMONITOR, HDC, LPRECT, LPARAM);

typedef struct tagSTYLESTRUCT tagSTYLESTRUCT, *PtagSTYLESTRUCT;

typedef struct tagSTYLESTRUCT STYLESTRUCT;

struct tagSTYLESTRUCT {
    DWORD styleOld;
    DWORD styleNew;
};

typedef struct tagHELPWININFOA HELPWININFOA;

typedef HELPWININFOA HELPWININFO;

typedef struct DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;

typedef struct tagDRAWITEMSTRUCT tagDRAWITEMSTRUCT, *PtagDRAWITEMSTRUCT;

typedef struct tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;

struct tagDRAWITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemAction;
    UINT itemState;
    HWND hwndItem;
    HDC hDC;
    RECT rcItem;
    ULONG_PTR itemData;
};

typedef struct DLGTEMPLATE *LPCDLGTEMPLATEA;

typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE;

typedef struct tagSCROLLBARINFO *PSCROLLBARINFO;

typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;

typedef struct tagEVENTMSG *LPEVENTMSGMSG;

typedef int (*EDITWORDBREAKPROCA)(LPSTR, int, int, int);

typedef struct tagSCROLLBARINFO SCROLLBARINFO;

typedef int (*EDITWORDBREAKPROCW)(LPWSTR, int, int, int);

typedef SCROLLINFO *LPCSCROLLINFO;

typedef struct MENUITEMTEMPLATE MENUITEMTEMPLATE, *PMENUITEMTEMPLATE;

struct MENUITEMTEMPLATE {
    WORD mtOption;
    WORD mtID;
    WCHAR mtString[1];
};

typedef struct tagDROPSTRUCT *PDROPSTRUCT;

typedef struct tagEVENTMSG *PEVENTMSG;

typedef struct tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;

typedef struct tagICONMETRICSA *LPICONMETRICSA;

typedef struct tagMINIMIZEDMETRICS tagMINIMIZEDMETRICS, *PtagMINIMIZEDMETRICS;

struct tagMINIMIZEDMETRICS {
    UINT cbSize;
    int iWidth;
    int iHorzGap;
    int iVertGap;
    int iArrange;
};

typedef struct tagKBDLLHOOKSTRUCT KBDLLHOOKSTRUCT;

typedef struct tagDEBUGHOOKINFO *NPDEBUGHOOKINFO;

typedef WNDCLASSA WNDCLASS;

typedef struct tagWNDCLASSW *PWNDCLASSW;

typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;

typedef struct tagCWPRETSTRUCT *LPCWPRETSTRUCT;

typedef struct tagWNDCLASSEXW tagWNDCLASSEXW, *PtagWNDCLASSEXW;

typedef struct tagWNDCLASSEXW WNDCLASSEXW;

struct tagWNDCLASSEXW {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
    HICON hIconSm;
};

typedef struct tagWNDCLASSEXA WNDCLASSEXA;

typedef BOOL (*PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, ULONG_PTR);

typedef struct tagHELPWININFOA *LPHELPWININFOA;

typedef struct tagMSGBOXPARAMSW *PMSGBOXPARAMSW;

typedef struct DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;

typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;

typedef struct tagMSGBOXPARAMSA *PMSGBOXPARAMSA;

typedef struct tagHELPWININFOW *LPHELPWININFOW;

typedef struct tagMDINEXTMENU *PMDINEXTMENU;

typedef struct tagSERIALKEYSA *LPSERIALKEYSA;

typedef LPSERIALKEYSA LPSERIALKEYS;

typedef struct tagCOPYDATASTRUCT tagCOPYDATASTRUCT, *PtagCOPYDATASTRUCT;

typedef struct tagCOPYDATASTRUCT COPYDATASTRUCT;

struct tagCOPYDATASTRUCT {
    ULONG_PTR dwData;
    DWORD cbData;
    PVOID lpData;
};

typedef struct tagHIGHCONTRASTW tagHIGHCONTRASTW, *PtagHIGHCONTRASTW;

typedef struct tagHIGHCONTRASTW HIGHCONTRASTW;

struct tagHIGHCONTRASTW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszDefaultScheme;
};

typedef struct tagCURSORINFO tagCURSORINFO, *PtagCURSORINFO;

typedef struct tagCURSORINFO CURSORINFO;

struct tagCURSORINFO {
    DWORD cbSize;
    DWORD flags;
    HCURSOR hCursor;
    POINT ptScreenPos;
};

typedef struct tagCOPYDATASTRUCT *PCOPYDATASTRUCT;

typedef struct tagMENUBARINFO *PMENUBARINFO;

typedef struct tagSOUNDSENTRYA tagSOUNDSENTRYA, *PtagSOUNDSENTRYA;

struct tagSOUNDSENTRYA {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagMINIMIZEDMETRICS *PMINIMIZEDMETRICS;

typedef struct tagDRAWTEXTPARAMS tagDRAWTEXTPARAMS, *PtagDRAWTEXTPARAMS;

typedef struct tagDRAWTEXTPARAMS DRAWTEXTPARAMS;

struct tagDRAWTEXTPARAMS {
    UINT cbSize;
    int iTabLength;
    int iLeftMargin;
    int iRightMargin;
    UINT uiLengthDrawn;
};

typedef struct tagANIMATIONINFO tagANIMATIONINFO, *PtagANIMATIONINFO;

struct tagANIMATIONINFO {
    UINT cbSize;
    int iMinAnimate;
};

typedef struct tagMSG MSG;

typedef struct tagSTYLESTRUCT *LPSTYLESTRUCT;

typedef struct tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;

typedef struct tagACCEL ACCEL;

typedef struct tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;

typedef struct tagWINDOWINFO *PWINDOWINFO;

typedef struct tagICONMETRICSW tagICONMETRICSW, *PtagICONMETRICSW;

typedef struct tagICONMETRICSW *LPICONMETRICSW;

struct tagICONMETRICSW {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTW lfFont;
};

typedef LRESULT (*HOOKPROC)(int, WPARAM, LPARAM);

typedef struct tagCURSORSHAPE tagCURSORSHAPE, *PtagCURSORSHAPE;

struct tagCURSORSHAPE {
    int xHotSpot;
    int yHotSpot;
    int cx;
    int cy;
    int cbWidth;
    BYTE Planes;
    BYTE BitsPixel;
};

typedef struct tagCREATESTRUCTA CREATESTRUCTA;

typedef CREATESTRUCTA CREATESTRUCT;

typedef struct tagMENUITEMINFOA MENUITEMINFOA;

typedef MENUITEMINFOA *LPCMENUITEMINFOA;

typedef LPCMENUITEMINFOA LPCMENUITEMINFO;

typedef struct DLGTEMPLATE *LPCDLGTEMPLATEW;

typedef struct tagPAINTSTRUCT tagPAINTSTRUCT, *PtagPAINTSTRUCT;

typedef struct tagPAINTSTRUCT PAINTSTRUCT;

struct tagPAINTSTRUCT {
    HDC hdc;
    BOOL fErase;
    RECT rcPaint;
    BOOL fRestore;
    BOOL fIncUpdate;
    BYTE rgbReserved[32];
};

typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;

typedef struct tagCURSORSHAPE *LPCURSORSHAPE;

typedef struct tagCBT_CREATEWNDA CBT_CREATEWNDA;

typedef NONCLIENTMETRICSA NONCLIENTMETRICS;

typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;

typedef struct tagCBT_CREATEWNDW CBT_CREATEWNDW;

typedef struct tagCWPSTRUCT *NPCWPSTRUCT;

typedef struct tagMDICREATESTRUCTW tagMDICREATESTRUCTW, *PtagMDICREATESTRUCTW;

typedef struct tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;

struct tagMDICREATESTRUCTW {
    LPCWSTR szClass;
    LPCWSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef struct tagMDICREATESTRUCTA MDICREATESTRUCTA;

typedef MDICREATESTRUCTA MDICREATESTRUCT;

typedef struct tagDEBUGHOOKINFO *PDEBUGHOOKINFO;

typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;

typedef MONITORINFOEXA MONITORINFOEX;

typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;

typedef PROPENUMPROCA PROPENUMPROC;

typedef struct tagCOMPAREITEMSTRUCT *PCOMPAREITEMSTRUCT;

typedef PHELPWININFOA PHELPWININFO;

typedef struct tagGUITHREADINFO *LPGUITHREADINFO;

typedef struct tagWNDCLASSEXA *NPWNDCLASSEXA;

typedef struct tagHIGHCONTRASTA *LPHIGHCONTRASTA;

typedef LPHIGHCONTRASTA LPHIGHCONTRAST;

typedef LPICONMETRICSA LPICONMETRICS;

typedef struct tagWNDCLASSEXW *NPWNDCLASSEXW;

typedef WNDCLASSEXA WNDCLASSEX;

typedef struct tagALTTABINFO tagALTTABINFO, *PtagALTTABINFO;

struct tagALTTABINFO {
    DWORD cbSize;
    int cItems;
    int cColumns;
    int cRows;
    int iColFocus;
    int iRowFocus;
    int cxItem;
    int cyItem;
    POINT ptStart;
};

typedef struct tagSCROLLINFO *LPSCROLLINFO;

typedef struct tagWNDCLASSEXW *LPWNDCLASSEXW;

typedef NAMEENUMPROCW WINSTAENUMPROCW;

typedef void (*WINEVENTPROC)(HWINEVENTHOOK, DWORD, HWND, LONG, LONG, DWORD, DWORD);

typedef LPHELPWININFOA LPHELPWININFO;

typedef PVOID LPMENUTEMPLATEA;

typedef NPWNDCLASSEXA NPWNDCLASSEX;

typedef struct tagCWPSTRUCT *LPCWPSTRUCT;

typedef MENUITEMINFOW *LPCMENUITEMINFOW;

typedef struct tagEVENTMSG *NPEVENTMSG;

typedef PVOID LPMENUTEMPLATEW;

typedef struct tagHIGHCONTRASTW *LPHIGHCONTRASTW;

typedef struct tagMOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;

typedef MENUITEMINFOA MENUITEMINFO;

typedef SERIALKEYSA SERIALKEYS;

typedef struct FLASHWINFO FLASHWINFO, *PFLASHWINFO;

struct FLASHWINFO {
    UINT cbSize;
    HWND hwnd;
    DWORD dwFlags;
    UINT uCount;
    DWORD dwTimeout;
};

typedef struct tagICONMETRICSA *PICONMETRICSA;

typedef PICONMETRICSA PICONMETRICS;

typedef struct tagANIMATIONINFO ANIMATIONINFO;

typedef struct tagSCROLLBARINFO *LPSCROLLBARINFO;

typedef struct _ICONINFO _ICONINFO, *P_ICONINFO;

typedef struct _ICONINFO ICONINFO;

typedef ICONINFO *PICONINFO;

struct _ICONINFO {
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
};

typedef struct tagALTTABINFO ALTTABINFO;

typedef struct tagHELPINFO HELPINFO;

typedef HANDLE HDWP;

typedef struct tagCURSORINFO *PCURSORINFO;

typedef struct tagCWPSTRUCT CWPSTRUCT;

typedef struct tagMINMAXINFO *PMINMAXINFO;

typedef struct tagWINDOWINFO *LPWINDOWINFO;

typedef struct tagMULTIKEYHELPW *PMULTIKEYHELPW;

typedef struct tagSTICKYKEYS *LPSTICKYKEYS;

typedef struct tagPAINTSTRUCT *LPPAINTSTRUCT;

typedef struct tagCOMBOBOXINFO *LPCOMBOBOXINFO;

typedef DESKTOPENUMPROCA DESKTOPENUMPROC;

typedef struct tagCWPRETSTRUCT *NPCWPRETSTRUCT;

typedef struct tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;

typedef struct tagTITLEBARINFO *PTITLEBARINFO;

typedef struct tagSOUNDSENTRYA SOUNDSENTRYA;

typedef SOUNDSENTRYA SOUNDSENTRY;

typedef struct tagICONMETRICSW *PICONMETRICSW;

typedef struct tagFILTERKEYS *LPFILTERKEYS;

typedef struct tagCLIENTCREATESTRUCT tagCLIENTCREATESTRUCT, *PtagCLIENTCREATESTRUCT;

struct tagCLIENTCREATESTRUCT {
    HANDLE hWindowMenu;
    UINT idFirstChild;
};

typedef struct tagNONCLIENTMETRICSW *PNONCLIENTMETRICSW;

typedef struct tagMSGBOXPARAMSW MSGBOXPARAMSW;

typedef struct tagTOGGLEKEYS *LPTOGGLEKEYS;

typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;

typedef struct tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;

typedef struct tagKBDLLHOOKSTRUCT *PKBDLLHOOKSTRUCT;

typedef struct tagDROPSTRUCT DROPSTRUCT;

typedef CBT_CREATEWNDA CBT_CREATEWND;

typedef struct tagACCESSTIMEOUT *LPACCESSTIMEOUT;

typedef struct DLGTEMPLATE *LPDLGTEMPLATEA;

typedef LPDLGTEMPLATEA LPDLGTEMPLATE;

typedef struct tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

typedef struct tagMSGBOXPARAMSA MSGBOXPARAMSA;

typedef struct tagMENUINFO *LPMENUINFO;

typedef struct tagMDICREATESTRUCTW MDICREATESTRUCTW;

typedef void MENUTEMPLATEW;

typedef EDITWORDBREAKPROCA EDITWORDBREAKPROC;

typedef struct tagEVENTMSG *NPEVENTMSGMSG;

typedef struct tagMSLLHOOKSTRUCT MSLLHOOKSTRUCT;

typedef struct tagMSG *NPMSG;

typedef struct tagSOUNDSENTRYA *LPSOUNDSENTRYA;

typedef struct tagCURSORSHAPE CURSORSHAPE;

typedef struct tagEVENTMSG *LPEVENTMSG;

typedef struct tagANIMATIONINFO *LPANIMATIONINFO;

typedef struct tagHARDWAREHOOKSTRUCT *PHARDWAREHOOKSTRUCT;

typedef struct tagICONMETRICSW ICONMETRICSW;

typedef struct tagHELPWININFOW HELPWININFOW;

typedef struct tagCWPSTRUCT *PCWPSTRUCT;

typedef struct tagTRACKMOUSEEVENT *LPTRACKMOUSEEVENT;

typedef PMSGBOXPARAMSA PMSGBOXPARAMS;

typedef struct tagDROPSTRUCT *LPDROPSTRUCT;

typedef INT_PTR (*DLGPROC)(HWND, UINT, WPARAM, LPARAM);

typedef struct tagSERIALKEYSW *LPSERIALKEYSW;

typedef struct tagMENUGETOBJECTINFO MENUGETOBJECTINFO;

typedef LPMULTIKEYHELPA LPMULTIKEYHELP;

typedef struct tagMINIMIZEDMETRICS MINIMIZEDMETRICS;

typedef BOOL (*WNDENUMPROC)(HWND, LPARAM);

typedef void (*TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);

typedef struct tagMSLLHOOKSTRUCT *PMSLLHOOKSTRUCT;

typedef struct DLGTEMPLATE *LPDLGTEMPLATEW;

typedef struct tagWNDCLASSA *NPWNDCLASSA;

typedef LPSOUNDSENTRYA LPSOUNDSENTRY;

typedef MSGBOXPARAMSA MSGBOXPARAMS;

typedef struct tagALTTABINFO *PALTTABINFO;

typedef struct tagGUITHREADINFO GUITHREADINFO;

typedef struct tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;

typedef struct tagMOUSEKEYS MOUSEKEYS;

typedef struct tagCREATESTRUCTW CREATESTRUCTW;

typedef struct tagMENUITEMINFOA *LPMENUITEMINFOA;

typedef LPMENUITEMINFOA LPMENUITEMINFO;

typedef struct tagPAINTSTRUCT *PPAINTSTRUCT;

typedef struct tagMENUBARINFO MENUBARINFO;

typedef struct tagCWPRETSTRUCT CWPRETSTRUCT;

typedef struct tagWNDCLASSW *LPWNDCLASSW;

typedef struct tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;

typedef struct tagWNDCLASSEXW *PWNDCLASSEXW;

typedef struct tagPAINTSTRUCT *NPPAINTSTRUCT;

typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;

typedef struct tagALTTABINFO *LPALTTABINFO;

typedef struct tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;

typedef struct tagWINDOWPOS *LPWINDOWPOS;

typedef struct tagWNDCLASSW *NPWNDCLASSW;

typedef struct tagTITLEBARINFO TITLEBARINFO;

typedef struct tagMENUITEMINFOW *LPMENUITEMINFOW;

typedef struct tagWINDOWINFO WINDOWINFO;

typedef struct tagNCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;

typedef struct tagMOUSEMOVEPOINT *LPMOUSEMOVEPOINT;

typedef struct tagSOUNDSENTRYW SOUNDSENTRYW;

typedef LPMENUTEMPLATEA LPMENUTEMPLATE;

typedef struct tagEVENTMSG *PEVENTMSGMSG;

typedef struct tagMINMAXINFO *LPMINMAXINFO;

typedef struct tagCOMBOBOXINFO *PCOMBOBOXINFO;

typedef struct tagMENUGETOBJECTINFO *PMENUGETOBJECTINFO;

typedef NPWNDCLASSA NPWNDCLASS;

typedef struct tagMDINEXTMENU *LPMDINEXTMENU;

typedef WINDOWPLACEMENT *LPWINDOWPLACEMENT;

typedef struct tagMONITORINFOEXW *LPMONITORINFOEXW;

typedef struct tagHARDWAREHOOKSTRUCT *LPHARDWAREHOOKSTRUCT;

typedef struct tagCURSORINFO *LPCURSORINFO;

typedef struct tagGUITHREADINFO *PGUITHREADINFO;

#define SPI_GETTOGGLEKEYS 52

#define MF_SEPARATOR 2048

#define SB_LINEUP 0

#define IDTIMEOUT 32000

#define FKF_HOTKEYACTIVE 4

#define LLKHF_INJECTED 16

#define WVR_ALIGNLEFT 32

#define WS_EX_NOPARENTNOTIFY 4

#define EM_GETMARGINS 212

#define DT_PATH_ELLIPSIS 16384

#define WM_USER 1024

#define DESKTOP_JOURNALPLAYBACK 32

#define WM_VKEYTOITEM 46

#define TME_LEAVE 2

#define WINSTA_ACCESSCLIPBOARD 4

#define LBS_NOTIFY 1

#define SM_CXVSCROLL 2

#define SM_SAMEDISPLAYFORMAT 81

#define PRF_CHECKVISIBLE 1

#define SPI_SETTOGGLEKEYS 53

#define MWMO_WAITALL 1

#define WVR_ALIGNBOTTOM 64

#define WS_THICKFRAME 262144

#define DESKTOP_CREATEWINDOW 2

#define SMTO_ABORTIFHUNG 2

#define PBTF_APMRESUMEFROMFAILURE 1

#define RT_ANICURSOR 21

#define SPI_GETMENUDROPALIGNMENT 27

#define CF_METAFILEPICT 3

#define STATE_SYSTEM_INVISIBLE 32768

#define WH_MINHOOK -1

#define SM_CMONITORS 80

#define COLOR_INFOBK 24

#define WS_CLIPCHILDREN 33554432

#define RDW_INTERNALPAINT 2

#define UOI_NAME 2

#define VK_LEFT 37

#define MSGF_MAX 8

#define EDGE_SUNKEN 10

#define KLF_SETFORPROCESS 256

#define COLOR_3DLIGHT 22

#define DT_MODIFYSTRING 65536

#define HCBT_CLICKSKIPPED 6

#define MONITOR_DEFAULTTONULL 0

#define WM_MDICREATE 544

#define SOUND_SYSTEM_WARNING 6

#define WS_EX_LEFTSCROLLBAR 16384

#define INDEXID_OBJECT 0

#define HWND_DESKTOP 0

#define SM_XVIRTUALSCREEN 76

#define MKF_REPLACENUMBERS 128

#define MWMO_INPUTAVAILABLE 4

#define MNGOF_TOPGAP 1

#define SBM_SETRANGEREDRAW 230

#define SPI_GETMINIMIZEDMETRICS 43

#define QS_HOTKEY 128

#define WM_HANDHELDLAST 863

#define HSHELL_WINDOWDESTROYED 2

#define HCBT_DESTROYWND 4

#define WM_IME_KEYUP 657

#define FKF_INDICATOR 32

#define MIM_APPLYTOSUBMENUS 2147483648

#define MB_CANCELTRYCONTINUE 6

#define CDS_NORESET 268435456

#define CF_MAX 18

#define SPI_SETHOTTRACKING 4111

#define VK_SEPARATOR 108

#define BF_RIGHT 4

#define PBT_APMRESUMECRITICAL 6

#define PBT_APMPOWERSTATUSCHANGE 10

#define WM_GETTEXT 13

#define CTLCOLOR_EDIT 1

#define SPI_GETBORDER 5

#define DESKTOP_SWITCHDESKTOP 256

#define WM_COMPACTING 65

#define IDC_SIZENWSE 32642

#define MB_ICONMASK 240

#define SPI_GETCURSORSHADOW 4122

#define WM_MDIACTIVATE 546

#define MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID 16

#define VK_DELETE 46

#define LBS_SORT 2

#define ES_RIGHT 2

#define LBS_NOREDRAW 4

#define RT_STRING 6

#define MIIM_BITMAP 128

#define HELP_SETINDEX 5

#define DFCS_INACTIVE 256

#define WM_SPOOLERSTATUS 42

#define EM_FMTLINES 200

#define WM_NCLBUTTONDOWN 161

#define DLGC_STATIC 256

#define EM_SETPASSWORDCHAR 204

#define SS_RIGHTJUST 1024

#define LB_GETITEMDATA 409

#define DC_HASDEFID 21323

#define BS_AUTOCHECKBOX 3

#define SC_DEFAULT 61792

#define OBJID_HSCROLL 4294967290

#define RDW_NOERASE 32

#define STATE_SYSTEM_ALERT_LOW 67108864

#define SPI_SETMOUSETRAILS 93

#define WM_ENABLE 10

#define WM_NCMBUTTONDBLCLK 169

#define ODT_STATIC 5

#define SPI_SETSOUNDSENTRY 65

#define STN_CLICKED 0

#define BN_DISABLE 4

#define SIZEFULLSCREEN 2

#define WVR_ALIGNRIGHT 128

#define SM_MOUSEWHEELPRESENT 75

#define GMMP_USE_DISPLAY_POINTS 1

#define LLKHF_UP 128

#define DISP_CHANGE_BADPARAM -5

#define WS_EX_OVERLAPPEDWINDOW 768

#define HTCLIENT 1

#define HWND_BOTTOM 1

#define HC_ACTION 0

#define SWP_NOOWNERZORDER 512

#define EWX_LOGOFF 0

#define SPI_SETDESKWALLPAPER 20

#define TPM_CENTERALIGN 4

#define WM_NCMBUTTONDOWN 167

#define GW_HWNDPREV 3

#define CB_DIR 325

#define SPI_GETSCREENREADER 70

#define VK_RETURN 13

#define EVENT_SYSTEM_CAPTURESTART 8

#define BDR_SUNKENOUTER 2

#define DLGWINDOWEXTRA 30

#define ESB_DISABLE_RTDN 2

#define RT_FONT 8

#define BN_HILITE 2

#define VK_LMENU 164

#define WM_INITMENU 278

#define DLGC_RADIOBUTTON 64

#define WM_CREATE 1

#define EM_GETIMESTATUS 217

#define CB_SETITEMDATA 337

#define WVR_ALIGNTOP 16

#define SM_CXDOUBLECLK 36

#define WM_PALETTECHANGED 785

#define DCX_EXCLUDERGN 64

#define SPI_GETGRADIENTCAPTIONS 4104

#define WM_PRINTCLIENT 792

#define MF_HILITE 128

#define EMSIS_COMPOSITIONSTRING 1

#define RT_ACCELERATOR 9

#define CF_RIFF 11

#define IDC_UPARROW 32516

#define WM_QUERYNEWPALETTE 783

#define SM_REMOTESESSION 4096

#define SIF_DISABLENOSCROLL 8

#define BN_UNPUSHED 3

#define MOD_ALT 1

#define WHEEL_PAGESCROLL 4294967295

#define DT_BOTTOM 8

#define SC_CLOSE 61536

#define DDL_DRIVES 16384

#define EC_USEFONTINFO 65535

#define LR_DEFAULTSIZE 64

#define HTZOOM 9

#define FCONTROL 8

#define HELP_SETWINPOS 515

#define MB_ICONSTOP 16

#define STM_GETICON 369

#define SPI_GETUIEFFECTS 4158

#define DS_FIXEDSYS 8

#define LB_SETITEMHEIGHT 416

#define SPI_SETSELECTIONFADE 4117

#define WH_FOREGROUNDIDLE 11

#define WM_IME_KEYLAST 271

#define BDR_RAISEDOUTER 1

#define MOUSEEVENTF_ABSOLUTE 32768

#define AW_SLIDE 262144

#define ENUM_CURRENT_SETTINGS -1

#define LB_GETTEXT 393

#define LBS_NOINTEGRALHEIGHT 256

#define COLOR_3DHILIGHT 20

#define SPI_SETDOUBLECLICKTIME 32

#define EN_VSCROLL 1538

#define SM_CYDRAG 69

#define SM_CYDOUBLECLK 37

#define CB_RESETCONTENT 331

#define VK_NUMPAD0 96

#define LR_COPYDELETEORG 8

#define VK_NUMPAD2 98

#define VK_NUMPAD1 97

#define DT_RIGHT 2

#define COLOR_BTNSHADOW 16

#define WM_DEADCHAR 259

#define SM_CYSMCAPTION 51

#define ALERT_SYSTEM_INFORMATIONAL 1

#define WINEVENT_SKIPOWNTHREAD 1

#define MF_DEFAULT 4096

#define SW_MINIMIZE 6

#define WM_NCMOUSELEAVE 674

#define STM_GETIMAGE 371

#define SPI_SETKEYBOARDCUES 4107

#define IMAGE_CURSOR 2

#define ARW_BOTTOMRIGHT 1

#define SHOW_OPENWINDOW 1

#define HSHELL_LANGUAGE 8

#define SIF_RANGE 1

#define SPI_SETKEYBOARDSPEED 11

#define HCBT_KEYSKIPPED 7

#define WPF_SETMINPOSITION 1

#define BN_CLICKED 0

#define SIF_POS 4

#define DT_EDITCONTROL 8192

#define DI_COMPAT 4

#define SPI_SETMOUSE 4

#define EM_LINESCROLL 182

#define CBN_SELENDCANCEL 10

#define SPI_GETMENUSHOWDELAY 106

#define COLOR_DESKTOP 1

#define UOI_FLAGS 1

#define CF_DIF 5

#define PBT_APMQUERYSTANDBY 1

#define SPI_GETACTIVEWNDTRKZORDER 4108

#define WM_WINDOWPOSCHANGED 71

#define CF_DIB 8

#define ISMEX_CALLBACK 4

#define SETWALLPAPER_DEFAULT -1

#define CF_GDIOBJLAST 1023

#define DFC_CAPTION 1

#define MB_RIGHT 524288

#define VK_OEM_BACKTAB 245

#define WM_MENUCHAR 288

#define SM_CYEDGE 46

#define SC_KEYMENU 61696

#define SM_CXVIRTUALSCREEN 78

#define CTLCOLOR_BTN 3

#define DT_CALCRECT 1024

#define GA_ROOTOWNER 3

#define EWX_SHUTDOWN 1

#define MSGF_NEXTWINDOW 6

#define IDTRYAGAIN 10

#define WM_MOUSEFIRST 512

#define EM_REPLACESEL 194

#define EVENT_SYSTEM_DRAGDROPSTART 14

#define MNGOF_BOTTOMGAP 2

#define HTGROWBOX 4

#define WM_KILLFOCUS 8

#define EM_LINELENGTH 193

#define MF_BYCOMMAND 0

#define WM_GETMINMAXINFO 36

#define WA_INACTIVE 0

#define GCL_CBCLSEXTRA -20

#define SPI_GETSHOWIMEUI 110

#define FLASHW_CAPTION 1

#define CB_GETHORIZONTALEXTENT 349

#define TPM_VERNEGANIMATION 8192

#define CB_GETITEMHEIGHT 340

#define COLOR_HOTLIGHT 26

#define HCBT_ACTIVATE 5

#define SW_OTHERZOOM 2

#define CS_BYTEALIGNCLIENT 4096

#define SPI_GETWORKAREA 48

#define MSGF_MENU 2

#define VK_F6 117

#define VK_F7 118

#define VK_F4 115

#define VK_F5 116

#define VK_F2 113

#define VK_F3 114

#define WMSZ_BOTTOMLEFT 7

#define VK_F1 112

#define SSWF_NONE 0

#define VK_F8 119

#define VK_F9 120

#define SPI_SETMENUUNDERLINES 4107

#define SPI_GETMOUSETRAILS 94

#define HBMMENU_POPUP_MINIMIZE 11

#define WS_CAPTION 12582912

#define SM_CYMENUSIZE 55

#define SPI_GETMENUUNDERLINES 4106

#define HTMAXBUTTON 9

#define LR_SHARED 32768

#define DFCS_BUTTONCHECK 0

#define HELP_SETPOPUP_POS 13

#define MF_HELP 16384

#define EM_GETWORDBREAKPROC 209

#define WM_HOTKEY 786

#define PRF_NONCLIENT 2

#define WM_SHOWWINDOW 24

#define MFS_DEFAULT 4096

#define SPI_SETPOWEROFFACTIVE 86

#define HTERROR -2

#define LB_GETSEL 391

#define HCBT_SYSCOMMAND 8

#define SS_CENTER 1

#define CB_SHOWDROPDOWN 335

#define SB_LEFT 6

#define TPM_VERPOSANIMATION 4096

#define SOUND_SYSTEM_ERROR 4

#define LB_SETANCHORINDEX 412

#define AW_VER_POSITIVE 4

#define SPI_GETPOWEROFFACTIVE 84

#define DISP_CHANGE_NOTUPDATED -3

#define CB_GETLBTEXTLEN 329

#define BDR_SUNKEN 10

#define MOUSEEVENTF_XUP 256

#define WS_EX_STATICEDGE 131072

#define HWND_BROADCAST 65535

#define STATE_SYSTEM_MULTISELECTABLE 16777216

#define SPI_SETHANDHELD 78

#define DT_NOFULLWIDTHCHARBREAK 524288

#define MIM_MENUDATA 8

#define WH_GETMESSAGE 3

#define SPI_SETCURSORS 87

#define WM_POWER 72

#define BS_PUSHBUTTON 0

#define SPI_GETDEFAULTINPUTLANG 89

#define SM_CYBORDER 6

#define SPI_SETCURSORSHADOW 4123

#define WM_NOTIFY 78

#define EM_GETLINECOUNT 186

#define TPM_HORIZONTAL 0

#define WH_JOURNALPLAYBACK 1

#define SBS_HORZ 0

#define COLOR_3DHIGHLIGHT 20

#define PM_REMOVE 1

#define DEVICE_NOTIFY_WINDOW_HANDLE 0

#define EVENT_OBJECT_ACCELERATORCHANGE 32786

#define WH_KEYBOARD 2

#define SPI_SETBEEP 2

#define MNC_SELECT 3

#define GMDI_USEDISABLED 1

#define ALERT_SYSTEM_WARNING 2

#define DCX_CACHE 2

#define STN_DBLCLK 1

#define PM_NOREMOVE 0

#define DS_SHELLFONT 72

#define MB_ICONQUESTION 32

#define VK_HANGEUL 21

#define DC_TEXT 8

#define KF_UP 32768

#define SBS_BOTTOMALIGN 4

#define SS_ENDELLIPSIS 16384

#define SOUND_SYSTEM_MINIMIZE 9

#define STATE_SYSTEM_EXPANDED 512

#define SBM_GETSCROLLINFO 234

#define WS_CHILDWINDOW 1073741824

#define HWND_TOPMOST -1

#define ENUM_REGISTRY_SETTINGS -2

#define WM_SYSCOMMAND 274

#define LB_INSERTSTRING 385

#define GCL_MENUNAME -8

#define MK_MBUTTON 16

#define WM_SIZECLIPBOARD 779

#define EM_SETHANDLE 188

#define DISP_CHANGE_RESTART 1

#define SIZEICONIC 1

#define LLMHF_INJECTED 1

#define PBT_APMRESUMESUSPEND 7

#define MIIM_FTYPE 256

#define IDI_APPLICATION 32512

#define WS_ICONIC 536870912

#define HCF_CONFIRMHOTKEY 8

#define MNS_NOTIFYBYPOS 134217728

#define WSF_VISIBLE 1

#define NFR_ANSI 1

#define DT_TOP 0

#define WM_PAINTICON 38

#define HTOBJECT 19

#define SS_ETCHEDVERT 17

#define CS_IME 65536

#define WM_KEYLAST 265

#define VK_ICO_00 228

#define SB_RIGHT 7

#define ISMEX_REPLIED 8

#define SPI_SETKEYBOARDPREF 69

#define DS_ABSALIGN 1

#define SW_MAX 11

#define OBJID_NATIVEOM 4294967280

#define LB_SETITEMDATA 410

#define CS_BYTEALIGNWINDOW 8192

#define EN_MAXTEXT 1281

#define WM_MENUDRAG 291

#define KF_DLGMODE 2048

#define DFCS_MENUCHECK 1

#define DCX_WINDOW 1

#define WM_IME_SETCONTEXT 641

#define WM_MDIICONARRANGE 552

#define SM_CYVSCROLL 20

#define PWR_FAIL -1

#define BF_TOP 2

#define VK_NUMPAD4 100

#define VK_NUMPAD3 99

#define VK_NUMPAD6 102

#define VK_NUMPAD5 101

#define VK_NUMPAD8 104

#define VK_NUMPAD7 103

#define DWL_DLGPROC 4

#define VK_NUMPAD9 105

#define DT_END_ELLIPSIS 32768

#define EVENT_OBJECT_STATECHANGE 32778

#define MF_APPEND 256

#define EVENT_OBJECT_FOCUS 32773

#define IDC_APPSTARTING 32650

#define WS_MINIMIZE 536870912

#define VK_MULTIPLY 106

#define IDC_SIZENESW 32643

#define SPI_GETSERIALKEYS 62

#define EM_GETMODIFY 184

#define SSWF_CUSTOM 4

#define GR_USEROBJECTS 1

#define ES_PASSWORD 32

#define WM_DRAWCLIPBOARD 776

#define CBN_DROPDOWN 7

#define DI_IMAGE 2

#define PM_NOYIELD 2

#define WM_NEXTDLGCTL 40

#define VK_OEM_7 222

#define VK_OEM_6 221

#define VK_OEM_8 223

#define SM_CYSMSIZE 53

#define VK_OEM_1 186

#define VK_OEM_3 192

#define VK_OEM_2 191

#define VK_OEM_5 220

#define VK_OEM_4 219

#define MSGF_MESSAGEBOX 1

#define EVENT_OBJECT_SELECTIONADD 32775

#define ES_OEMCONVERT 1024

#define ISOLATIONAWARE_MANIFEST_RESOURCE_ID 2

#define VK_OEM_PA1 235

#define VK_OEM_PA2 236

#define VK_OEM_PA3 237

#define SSGF_NONE 0

#define PBT_APMRESUMEAUTOMATIC 18

#define SM_CYMAXTRACK 60

#define VK_OEM_FJ_LOYA 149

#define LB_GETANCHORINDEX 413

#define COLOR_APPWORKSPACE 12

#define SM_CYMIN 29

#define SPI_SETSERIALKEYS 63

#define DLGC_WANTTAB 2

#define CBN_SELCHANGE 1

#define SPI_GETSCREENSAVEACTIVE 16

#define SPI_GETGRIDGRANULARITY 18

#define DSS_RIGHT 32768

#define CF_TEXT 1

#define SPI_SETUIEFFECTS 4159

#define SWP_NOREPOSITION 512

#define MFT_RADIOCHECK 512

#define WM_IME_CHAR 646

#define MB_RETRYCANCEL 5

#define SW_SMOOTHSCROLL 16

#define WS_EX_RTLREADING 8192

#define HC_SYSMODALOFF 5

#define WM_NOTIFYFORMAT 85

#define SB_BOTH 3

#define EVENT_SYSTEM_SCROLLINGEND 19

#define VK_RWIN 92

#define UOI_USER_SID 4

#define STATE_SYSTEM_MOVEABLE 262144

#define CF_PRIVATELAST 767

#define HCBT_MINMAX 1

#define MDITILE_VERTICAL 0

#define CF_HDROP 15

#define QS_TIMER 16

#define MB_ICONASTERISK 64

#define SMTO_NOTIMEOUTIFNOTHUNG 8

#define VK_NUMLOCK 144

#define BS_DEFPUSHBUTTON 1

#define HSHELL_WINDOWACTIVATED 4

#define LB_SETCOUNT 423

#define VK_RBUTTON 2

#define WM_RENDERFORMAT 773

#define SM_SHOWSOUNDS 70

#define LR_COPYFROMRESOURCE 16384

#define CBS_OWNERDRAWVARIABLE 32

#define WM_RBUTTONUP 517

#define MB_ICONEXCLAMATION 48

#define IDH_MISSING_CONTEXT 28441

#define EM_SETREADONLY 207

#define SPI_SETICONS 88

#define HSHELL_TASKMAN 7

#define MOD_SHIFT 4

#define MF_MENUBREAK 64

#define DST_ICON 3

#define STATE_SYSTEM_ALERT_MEDIUM 134217728

#define VK_TAB 9

#define DOF_EXECUTABLE 32769

#define QS_MOUSEBUTTON 4

#define SPI_SETNONCLIENTMETRICS 42

#define ISMEX_SEND 1

#define GCL_HICON -14

#define WPF_RESTORETOMAXIMIZED 2

#define DCX_LOCKWINDOWUPDATE 1024

#define HELP_FORCEFILE 9

#define LR_LOADTRANSPARENT 32

#define BF_SOFT 4096

#define MF_BYPOSITION 1024

#define VK_KANA 21

#define DI_MASK 1

#define BS_BITMAP 128

#define SW_OTHERUNZOOM 4

#define DDL_HIDDEN 2

#define LB_SETLOCALE 421

#define RT_RCDATA 10

#define SB_LINEDOWN 1

#define WM_AFXLAST 895

#define SM_CYFRAME 33

#define MK_RBUTTON 2

#define FKF_HOTKEYSOUND 16

#define VK_EREOF 249

#define SPI_GETICONTITLELOGFONT 31

#define COLOR_INACTIVECAPTION 3

#define STATE_SYSTEM_SELECTED 2

#define DLGC_WANTMESSAGE 4

#define CB_GETCOUNT 326

#define VK_RIGHT 39

#define EM_SETRECT 179

#define COLOR_MENUHILIGHT 29

#define QS_ALLINPUT 1279

#define SPI_SETWHEELSCROLLLINES 105

#define ALERT_SYSTEM_ERROR 3

#define HCF_INDICATOR 32

#define PWR_SUSPENDRESUME 2

#define VK_FINAL 24

#define SS_SUNKEN 4096

#define CB_SETCURSEL 334

#define IDIGNORE 5

#define SC_HOTKEY 61776

#define TKF_AVAILABLE 2

#define WM_POWERBROADCAST 536

#define HBMMENU_MBAR_CLOSE_D 6

#define CB_GETDROPPEDSTATE 343

#define CS_HREDRAW 2

#define SPI_ICONVERTICALSPACING 24

#define WS_EX_LEFT 0

#define MK_SHIFT 4

#define HCBT_CREATEWND 3

#define BF_DIAGONAL_ENDBOTTOMLEFT 25

#define ARW_STARTTOP 2

#define MB_ABORTRETRYIGNORE 2

#define DLGC_WANTARROWS 1

#define VK_OEM_NEC_EQUAL 146

#define GWL_USERDATA -21

#define WM_MENURBUTTONUP 290

#define OBJID_VSCROLL 4294967291

#define HELP_INDEX 3

#define IDRETRY 4

#define IDI_QUESTION 32514

#define SKF_INDICATOR 32

#define DLGC_WANTCHARS 128

#define SPI_SETGRIDGRANULARITY 19

#define VK_MBUTTON 4

#define SM_CXMAXIMIZED 61

#define DM_SETDEFID 1025

#define SPI_SETBORDER 6

#define ODS_DEFAULT 32

#define WM_RBUTTONDBLCLK 518

#define ARW_RIGHT 0

#define DT_NOPREFIX 2048

#define SB_BOTTOM 7

#define QS_ALLEVENTS 1215

#define ES_UPPERCASE 8

#define SS_ICON 3

#define CF_OWNERDISPLAY 128

#define VK_OEM_RESET 233

#define SPI_GETSOUNDSENTRY 64

#define LBN_DBLCLK 2

#define WM_MBUTTONDOWN 519

#define CB_INITSTORAGE 353

#define LB_SETHORIZONTALEXTENT 404

#define GCL_CBWNDEXTRA -18

#define WM_CTLCOLORSCROLLBAR 311

#define WM_ICONERASEBKGND 39

#define DLGC_WANTALLKEYS 4

#define ODA_SELECT 2

#define WB_ISDELIMITER 2

#define LR_CREATEDIBSECTION 8192

#define ODS_CHECKED 8

#define OBJID_CARET 4294967288

#define PRF_OWNED 32

#define DC_GRADIENT 32

#define SM_YVIRTUALSCREEN 77

#define AW_VER_NEGATIVE 8

#define ISMEX_NOSEND 0

#define ODS_DISABLED 4

#define BS_CHECKBOX 2

#define MB_OKCANCEL 1

#define HELP_MULTIKEY 513

#define WS_DLGFRAME 4194304

#define HWND_NOTOPMOST -2

#define EVENT_SYSTEM_SWITCHSTART 20

#define WMSZ_RIGHT 2

#define WB_LEFT 0

#define HSHELL_WINDOWCREATED 1

#define LBS_NOSEL 16384

#define CS_CLASSDC 64

#define MB_OK 0

#define SM_CYFULLSCREEN 17

#define WM_GETICON 127

#define DT_WORD_ELLIPSIS 262144

#define SPI_SETTOOLTIPFADE 4121

#define DFCS_BUTTONRADIOMASK 2

#define DOF_MULTIPLE 32772

#define SERKF_AVAILABLE 2

#define VK_LBUTTON 1

#define SPI_SETFILTERKEYS 51

#define LBS_MULTIPLESEL 8

#define MDIS_ALLCHILDSTYLES 1

#define KEYEVENTF_EXTENDEDKEY 1

#define TPM_TOPALIGN 0

#define SPI_GETFILTERKEYS 50

#define HELP_CONTEXT 1

#define SPI_SETACCESSTIMEOUT 61

#define WINSTA_WRITEATTRIBUTES 16

#define TKF_CONFIRMHOTKEY 8

#define CHILDID_SELF 0

#define DLGC_DEFPUSHBUTTON 16

#define RT_FONTDIR 7

#define CF_DSPENHMETAFILE 142

#define EVENT_SYSTEM_SWITCHEND 21

#define VK_CRSEL 247

#define GWL_HINSTANCE -6

#define LR_LOADFROMFILE 16

#define BS_USERBUTTON 8

#define WS_EX_LAYOUTRTL 4194304

#define SPI_SETMOUSEKEYS 55

#define SPI_GETSTICKYKEYS 58

#define WM_IME_ENDCOMPOSITION 270

#define WH_KEYBOARD_LL 13

#define GCL_HMODULE -16

#define SM_CXMENUSIZE 54

#define WM_CTLCOLORDLG 310

#define WS_EX_DLGMODALFRAME 1

#define STATE_SYSTEM_ALERT_HIGH 268435456

#define DISP_CHANGE_FAILED -1

#define EM_SETWORDBREAKPROC 208

#define EM_EMPTYUNDOBUFFER 205

#define ES_LOWERCASE 16

#define SPI_GETPOWEROFFTIMEOUT 80

#define LB_GETSELITEMS 401

#define BS_BOTTOM 2048

#define SW_SCROLLCHILDREN 1

#define GMDI_GOINTOPOPUPS 2

#define ES_CENTER 1

#define SBS_SIZEBOXTOPLEFTALIGN 2

#define SS_WORDELLIPSIS 49152

#define MIM_BACKGROUND 2

#define WM_TIMECHANGE 30

#define IDC_IBEAM 32513

#define GWL_WNDPROC -4

#define WM_MOUSEMOVE 512

#define INPUTLANGCHANGE_FORWARD 2

#define DFCS_SCROLLCOMBOBOX 5

#define SKF_TWOKEYSOFF 256

#define RT_MANIFEST 24

#define WM_CTLCOLOREDIT 307

#define COLOR_WINDOW 5

#define MB_SETFOREGROUND 65536

#define SPI_SETLISTBOXSMOOTHSCROLLING 4103

#define DCX_VALIDATE 2097152

#define DDL_READWRITE 0

#define VK_SCROLL 145

#define DOF_DIRECTORY 32771

#define EM_SETLIMITTEXT 197

#define MA_ACTIVATEANDEAT 2

#define WM_NCMOUSEHOVER 672

#define SM_CXMENUCHECK 71

#define WM_NCHITTEST 132

#define SM_CXMIN 28

#define IDI_EXCLAMATION 32515

#define CBN_ERRSPACE -1

#define OBJID_SIZEGRIP 4294967289

#define WM_KEYFIRST 256

#define WM_MDISETMENU 560

#define FLASHW_STOP 0

#define MKF_AVAILABLE 2

#define BF_TOPRIGHT 6

#define EVENT_SYSTEM_MOVESIZESTART 10

#define SPI_ICONHORIZONTALSPACING 13

#define DFCS_SCROLLSIZEGRIP 8

#define CB_ADDSTRING 323

#define LB_GETTOPINDEX 398

#define SIZENORMAL 0

#define MFT_SEPARATOR 2048

#define SWP_NOSENDCHANGING 1024

#define SC_ZOOM 61488

#define WM_MOUSEWHEEL 522

#define STATE_SYSTEM_MARQUEED 8192

#define MB_ICONINFORMATION 64

#define OBJID_WINDOW 0

#define SPI_GETMOUSE 3

#define IMAGE_ENHMETAFILE 3

#define LB_CTLCODE 0

#define EN_CHANGE 768

#define SS_WHITERECT 6

#define WM_COMMAND 273

#define DFCS_SCROLLLEFT 2

#define WS_EX_WINDOWEDGE 256

#define SPI_SETDOUBLECLKWIDTH 29

#define WM_SYSKEYDOWN 260

#define WM_GETOBJECT 61

#define SM_CXFRAME 32

#define MKF_INDICATOR 32

#define COLOR_BTNTEXT 18

#define CB_SETTOPINDEX 348

#define IDC_ARROW 32512

#define ESB_DISABLE_RIGHT 2

#define SERKF_SERIALKEYSON 1

#define SM_CXSMSIZE 52

#define SC_MONITORPOWER 61808

#define MOUSEEVENTF_MOVE 1

#define SW_SHOWMINNOACTIVE 7

#define EWX_FORCE 4

#define IDC_CROSS 32515

#define MKF_CONFIRMHOTKEY 8

#define CTLCOLOR_STATIC 6

#define MFS_CHECKED 8

#define MOUSEEVENTF_LEFTDOWN 2

#define HTTOPRIGHT 14

#define SPI_GETMENUFADE 4114

#define SPI_GETACTIVEWINDOWTRACKING 4096

#define CB_ERR -1

#define QS_MOUSEMOVE 2

#define WVR_HREDRAW 256

#define RT_VERSION 16

#define GCLP_WNDPROC -24

#define STATE_SYSTEM_FOCUSED 4

#define LB_GETCOUNT 395

#define HCF_HOTKEYSOUND 16

#define WINSTA_EXITWINDOWS 64

#define TME_QUERY 1073741824

#define DESKTOP_JOURNALRECORD 16

#define BF_DIAGONAL_ENDTOPRIGHT 22

#define SPI_SETACTIVEWNDTRKTIMEOUT 8195

#define SS_REALSIZEIMAGE 2048

#define SPI_SETFASTTASKSWITCH 36

#define VK_LSHIFT 160

#define SWP_HIDEWINDOW 128

#define EM_SETRECTNP 180

#define EVENT_SYSTEM_FOREGROUND 3

#define CBN_EDITUPDATE 6

#define EM_GETTHUMB 190

#define VK_OEM_WSCTRL 238

#define BSM_ALLDESKTOPS 16

#define COLOR_GRADIENTACTIVECAPTION 27

#define WM_DRAWITEM 43

#define SM_CYCURSOR 14

#define VK_OEM_MINUS 189

#define DESKTOP_READOBJECTS 1

#define RT_MENU 4

#define WS_POPUP 2147483648

#define DO_PRINTFILE 1414419024

#define SM_CYMENU 15

#define QS_SENDMESSAGE 64

#define HTNOWHERE 0

#define CF_GDIOBJFIRST 768

#define OBJID_ALERT 4294967286

#define IDI_ERROR 32513

#define MFT_MENUBARBREAK 32

#define VK_NEXT 34

#define CBS_DISABLENOSCROLL 2048

#define TPM_VCENTERALIGN 16

#define EVENT_SYSTEM_MINIMIZESTART 22

#define SPI_SETSCREENREADER 71

#define LB_GETITEMRECT 408

#define GCL_HBRBACKGROUND -10

#define TPM_VERTICAL 64

#define MF_CHECKED 8

#define CB_GETLBTEXT 328

#define TPM_LEFTALIGN 0

#define LB_SELITEMRANGEEX 387

#define MA_NOACTIVATE 3

#define MF_POPUP 16

#define IDC_ICON 32641

#define CDS_SET_PRIMARY 16

#define SM_CXDRAG 68

#define SS_RIGHT 2

#define SBS_TOPALIGN 2

#define SM_RESERVED2 25

#define CBN_KILLFOCUS 4

#define SM_RESERVED1 24

#define SPI_GETKEYBOARDDELAY 22

#define SM_RESERVED4 27

#define SM_RESERVED3 26

#define DT_EXPANDTABS 64

#define VK_PLAY 250

#define HELP_CONTENTS 3

#define WM_SYSCOLORCHANGE 21

#define WM_CTLCOLORLISTBOX 308

#define HBMMENU_MBAR_MINIMIZE 3

#define SPI_GETKEYBOARDCUES 4106

#define IDH_GENERIC_HELP_BUTTON 28442

#define SKF_AVAILABLE 2

#define SWP_NOCOPYBITS 256

#define MIIM_ID 2

#define VK_PAUSE 19

#define MB_YESNOCANCEL 3

#define CBS_NOINTEGRALHEIGHT 1024

#define VK_OEM_CUSEL 239

#define DCX_CLIPCHILDREN 8

#define RT_MESSAGETABLE 11

#define VK_APPS 93

#define ISMEX_NOTIFY 2

#define WM_SETICON 128

#define OBJID_SOUND 4294967285

#define COLOR_GRADIENTINACTIVECAPTION 28

#define EM_SCROLLCARET 183

#define HTSYSMENU 3

#define SIF_ALL 23

#define SM_CXEDGE 45

#define DFC_BUTTON 4

#define DSS_NORMAL 0

#define SS_LEFT 0

#define COLOR_BTNHIGHLIGHT 20

#define CF_LOCALE 16

#define SPI_GETCOMBOBOXANIMATION 4100

#define WM_NULL 0

#define MINIMUM_RESERVED_MANIFEST_RESOURCE_ID 1

#define WM_PAINT 15

#define LBS_MULTICOLUMN 512

#define SPI_GETKEYBOARDSPEED 10

#define AW_BLEND 524288

#define SPI_SETCOMBOBOXANIMATION 4101

#define DOF_PROGMAN 1

#define VK_SNAPSHOT 44

#define SS_WHITEFRAME 9

#define GCLP_HICON -14

#define SC_SCREENSAVE 61760

#define SM_NETWORK 63

#define LB_DELETESTRING 386

#define VK_END 35

#define IDCANCEL 2

#define VK_LWIN 91

#define CBS_SORT 256

#define EM_GETPASSWORDCHAR 210

#define DT_NOCLIP 256

#define EM_CANUNDO 198

#define VK_ZOOM 251

#define WM_PAINTCLIPBOARD 777

#define RDW_ERASE 4

#define WS_EX_PALETTEWINDOW 392

#define ES_NUMBER 8192

#define DT_LEFT 0

#define CF_OEMTEXT 7

#define HWND_MESSAGE -3

#define DI_DEFAULTSIZE 8

#define VK_F21 132

#define VK_F20 131

#define DC_SMALLCAP 2

#define VK_SUBTRACT 109

#define SM_CXDLGFRAME 7

#define WM_SIZE 5

#define GCLP_HBRBACKGROUND -10

#define SPI_GETMOUSEKEYS 54

#define DFC_SCROLL 3

#define VK_F19 130

#define VK_F18 129

#define VK_F17 128

#define VK_F16 127

#define VK_F15 126

#define VK_F14 125

#define VK_F13 124

#define VK_F12 123

#define VK_F11 122

#define SBM_GETRANGE 227

#define VK_F10 121

#define EVENT_OBJECT_VALUECHANGE 32782

#define SWP_DRAWFRAME 32

#define ARW_TOPLEFT 2

#define MFT_BITMAP 4

#define WM_EXITSIZEMOVE 562

#define STATE_SYSTEM_VALID 1073741823

#define WM_KEYUP 257

#define SB_LINERIGHT 1

#define DLGC_HASSETSEL 8

#define BSM_INSTALLABLEDRIVERS 4

#define GA_ROOT 2

#define SPI_GETSHOWSOUNDS 56

#define IDCLOSE 8

#define MNC_EXECUTE 2

#define SPIF_SENDCHANGE 2

#define SSF_SOUNDSENTRYON 1

#define WM_MOUSEACTIVATE 33

#define EVENT_SYSTEM_MENUPOPUPEND 7

#define IDI_HAND 32513

#define DDL_DIRECTORY 16

#define FLASHW_TIMER 4

#define SOUND_SYSTEM_RESTOREDOWN 11

#define WM_CHARTOITEM 47

#define VK_F24 135

#define VK_F23 134

#define SPI_SETSHOWSOUNDS 57

#define VK_F22 133

#define ES_MULTILINE 4

#define MF_SYSMENU 8192

#define WM_CTLCOLORSTATIC 312

#define WH_CALLWNDPROC 4

#define WM_ENDSESSION 22

#define DEVICE_NOTIFY_SERVICE_HANDLE 1

#define FKF_CLICKON 64

#define HELP_KEY 257

#define HTHSCROLL 6

#define EIMES_CANCELCOMPSTRINFOCUS 2

#define VK_RSHIFT 161

#define DFCS_SCROLLRIGHT 3

#define EM_LINEINDEX 187

#define SS_BLACKFRAME 7

#define SLE_ERROR 1

#define DFCS_MENUBULLET 2

#define WH_MOUSE_LL 14

#define HTVSCROLL 7

#define STATE_SYSTEM_UNAVAILABLE 1

#define SBS_SIZEBOXBOTTOMRIGHTALIGN 4

#define RT_PLUGPLAY 19

#define EM_GETSEL 176

#define WM_APP 32768

#define PWR_SUSPENDREQUEST 1

#define EN_UPDATE 1024

#define CF_DSPTEXT 129

#define VK_BACK 8

#define GUI_INMENUMODE 4

#define SPI_SETSCREENSAVEACTIVE 17

#define CDS_VIDEOPARAMETERS 32

#define EVENT_OBJECT_DESCRIPTIONCHANGE 32781

#define EVENT_OBJECT_SELECTIONWITHIN 32777

#define CF_DIBV5 17

#define LR_MONOCHROME 1

#define MIIM_SUBMENU 4

#define WM_RENDERALLFORMATS 774

#define MIIM_STATE 1

#define MND_CONTINUE 0

#define EIMES_COMPLETECOMPSTRKILLFOCUS 4

#define EVENT_SYSTEM_MENUPOPUPSTART 6

#define IDI_INFORMATION 32516

#define SBS_LEFTALIGN 2

#define GA_PARENT 1

#define EM_LIMITTEXT 197

#define CB_MSGMAX 357

#define GCL_STYLE -26

#define SM_CYCAPTION 4

#define WH_HARDWARE 8

#define BF_BOTTOMRIGHT 12

#define DC_ACTIVE 1

#define SIZE_RESTORED 0

#define EWX_POWEROFF 8

#define MF_MOUSESELECT 32768

#define EN_ERRSPACE 1280

#define WM_ACTIVATE 6

#define WM_USERCHANGED 84

#define CB_GETTOPINDEX 347

#define WM_MENUCOMMAND 294

#define EVENT_SYSTEM_DIALOGEND 17

#define LB_SELITEMRANGE 411

#define BSF_FORCEIFHUNG 32

#define VK_DIVIDE 111

#define WM_PRINT 791

#define WM_MDICASCADE 551

#define WM_SETHOTKEY 50

#define HTSIZE 4

#define HTLEFT 10

#define SW_HIDE 0

#define COLOR_MENU 4

#define WS_HSCROLL 1048576

#define IDHOT_SNAPDESKTOP -2

#define LB_OKAY 0

#define VK_DOWN 40

#define BN_KILLFOCUS 7

#define EM_GETLIMITTEXT 213

#define SM_MOUSEPRESENT 19

#define KF_ALTDOWN 8192

#define SPI_SETSCREENSAVERRUNNING 97

#define ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID 3

#define SS_ETCHEDHORZ 16

#define SM_CXSMICON 49

#define WM_SETCURSOR 32

#define EDGE_ETCHED 6

#define SBS_VERT 1

#define LB_SETCOLUMNWIDTH 405

#define LB_RESETCONTENT 388

#define SKF_AUDIBLEFEEDBACK 64

#define SWP_ASYNCWINDOWPOS 16384

#define FALT 16

#define SS_LEFTNOWORDWRAP 12

#define SSF_INDICATOR 4

#define CB_GETDROPPEDWIDTH 351

#define SC_TASKLIST 61744

#define MIM_STYLE 16

#define WM_NCMOUSEMOVE 160

#define WM_CLEAR 771

#define MA_NOACTIVATEANDEAT 4

#define DDL_POSTMSGS 8192

#define STATE_SYSTEM_OFFSCREEN 65536

#define SPI_SETICONTITLELOGFONT 34

#define DDL_SYSTEM 4

#define WM_WINDOWPOSCHANGING 70

#define WM_SETTINGCHANGE 26

#define COLOR_WINDOWFRAME 6

#define EVENT_OBJECT_DEFACTIONCHANGE 32785

#define BS_RADIOBUTTON 4

#define LB_ADDFILE 406

#define CCHILDREN_TITLEBAR 5

#define HTBOTTOMRIGHT 17

#define LBN_SETFOCUS 4

#define MIIM_TYPE 16

#define SPI_SCREENSAVERRUNNING 97

#define HCBT_QS 2

#define WM_DELETEITEM 45

#define DFCS_CHECKED 1024

#define MDITILE_HORIZONTAL 1

#define WM_QUERYENDSESSION 17

#define STATE_SYSTEM_PROTECTED 536870912

#define SPI_SETLOWPOWERTIMEOUT 81

#define DCX_CLIPSIBLINGS 16

#define WM_QUIT 18

#define HELP_TCARD 32768

#define DESKTOP_CREATEMENU 4

#define HELP_PARTIALKEY 261

#define WINSTA_READSCREEN 512

#define GCL_HCURSOR -12

#define SM_CYMINSPACING 48

#define SS_BLACKRECT 4

#define CB_FINDSTRINGEXACT 344

#define EM_SETIMESTATUS 216

#define DDL_EXCLUSIVE 32768

#define LB_GETLOCALE 422

#define DOF_SHELLDATA 2

#define SPI_GETSNAPTODEFBUTTON 95

#define LBS_WANTKEYBOARDINPUT 1024

#define LB_SETTABSTOPS 402

#define CBS_LOWERCASE 16384

#define WM_CTLCOLORMSGBOX 306

#define WS_CHILD 1073741824

#define MOD_CONTROL 2

#define SPI_GETTOOLTIPANIMATION 4118

#define BM_GETSTATE 242

#define SC_MOUSEMENU 61584

#define SS_ELLIPSISMASK 49152

#define RT_ANIICON 22

#define STATE_SYSTEM_BUSY 2048

#define IDC_SIZENS 32645

#define SPI_SETWORKAREA 47

#define HSHELL_REDRAW 6

#define GUI_INMOVESIZE 2

#define BS_LEFTTEXT 32

#define WM_QUEUESYNC 35

#define VK_OEM_AX 225

#define LBN_KILLFOCUS 5

#define WS_BORDER 8388608

#define EM_LINEFROMCHAR 201

#define SPI_SETDEFAULTINPUTLANG 90

#define SM_CYVIRTUALSCREEN 79

#define IDC_HAND 32649

#define DS_MODALFRAME 128

#define COLOR_HIGHLIGHTTEXT 14

#define LB_INITSTORAGE 424

#define EVENT_OBJECT_HELPCHANGE 32784

#define CB_GETDROPPEDCONTROLRECT 338

#define BN_PAINT 1

#define HCBT_MOVESIZE 0

#define MFT_OWNERDRAW 256

#define DC_ICON 4

#define WS_SYSMENU 524288

#define COLOR_SCROLLBAR 0

#define EVENT_SYSTEM_MOVESIZEEND 11

#define SM_DBCSENABLED 42

#define EWX_REBOOT 2

#define QS_POSTMESSAGE 8

#define AW_HIDE 65536

#define SPI_SETDESKPATTERN 21

#define GCLP_MENUNAME -8

#define HBMMENU_MBAR_CLOSE 5

#define KLF_REPLACELANG 16

#define VK_OEM_AUTO 243

#define SPI_GETICONMETRICS 45

#define HWND_TOP 0

#define MF_END 128

#define HELP_TCARD_OTHER_CALLER 17

#define SPI_SETFONTSMOOTHING 75

#define EVENT_OBJECT_LOCATIONCHANGE 32779

#define IDC_SIZE 32640

#define DFCS_CAPTIONHELP 4

#define BS_AUTO3STATE 6

#define WS_EX_NOINHERITLAYOUT 1048576

#define WMSZ_TOP 3

#define CS_OWNDC 32

#define STM_MSGMAX 372

#define SPI_GETNONCLIENTMETRICS 41

#define DFCS_CAPTIONCLOSE 0

#define SPI_GETACCESSTIMEOUT 60

#define WC_DIALOG 32770

#define SS_ENHMETAFILE 15

#define ALERT_SYSTEM_QUERY 4

#define VK_CONTROL 17

#define SM_CXFULLSCREEN 16

#define DLGC_UNDEFPUSHBUTTON 32

#define DCX_NORESETATTRS 4

#define CB_GETCURSEL 327

#define WM_UNINITMENUPOPUP 293

#define MIIM_DATA 32

#define MIM_HELPID 4

#define IDC_SIZEWE 32644

#define SW_SHOW 5

#define DT_WORDBREAK 16

#define MF_MENUBARBREAK 32

#define EM_SETSEL 177

#define WS_GROUP 131072

#define SPI_GETANIMATION 72

#define DFCS_TRANSPARENT 2048

#define CB_SETLOCALE 345

#define EM_POSFROMCHAR 214

#define SC_MAXIMIZE 61488

#define KF_REPEAT 16384

#define WM_MOVE 3

#define BM_SETIMAGE 247

#define WH_MOUSE 7

#define MIIM_STRING 64

#define WM_MDIDESTROY 545

#define SW_SHOWMINIMIZED 2

#define WS_EX_TOOLWINDOW 128

#define BM_GETCHECK 240

#define MOUSEEVENTF_WHEEL 2048

#define DFCS_BUTTONRADIO 4

#define LB_SETTOPINDEX 407

#define STATE_SYSTEM_DEFAULT 256

#define BM_CLICK 245

#define BSM_ALLCOMPONENTS 0

#define GUI_POPUPMENUMODE 16

#define WM_COMMNOTIFY 68

#define TPM_RIGHTBUTTON 2

#define VK_HANJA 25

#define EVENT_SYSTEM_CONTEXTHELPSTART 12

#define GW_HWNDLAST 1

#define WM_IME_KEYDOWN 656

#define DM_REPOSITION 1026

#define MOD_WIN 8

#define BS_NOTIFY 16384

#define BSF_NOTIMEOUTIFNOTHUNG 64

#define VK_SLEEP 95

#define SKF_HOTKEYACTIVE 4

#define SIF_TRACKPOS 16

#define ARW_STARTRIGHT 1

#define DS_CONTEXTHELP 8192

#define WS_EX_ACCEPTFILES 16

#define SBM_SETRANGE 226

#define WM_ASKCBFORMATNAME 780

#define LR_DEFAULTCOLOR 0

#define SPI_SETFOREGROUNDFLASHCOUNT 8197

#define TPM_LEFTBUTTON 0

#define CBN_EDITCHANGE 5

#define TKF_INDICATOR 32

#define LB_DIR 397

#define GWLP_WNDPROC -4

#define SW_NORMAL 1

#define MB_RTLREADING 1048576

#define VK_HELP 47

#define MB_DEFBUTTON1 0

#define RT_CURSOR 1

#define MB_DEFBUTTON2 256

#define MB_DEFBUTTON3 512

#define MB_DEFBUTTON4 768

#define VK_EXSEL 248

#define CB_DELETESTRING 324

#define HTMENU 5

#define MOUSEEVENTF_MIDDLEUP 64

#define STATE_SYSTEM_SELFVOICING 524288

#define SW_MAXIMIZE 3

#define RT_BITMAP 2

#define LBS_DISABLENOSCROLL 4096

#define HBMMENU_MBAR_RESTORE 2

#define PBT_APMQUERYSTANDBYFAILED 3

#define ESB_DISABLE_UP 1

#define BS_PUSHLIKE 4096

#define RDW_NOINTERNALPAINT 16

#define EM_CHARFROMPOS 215

#define WM_MOUSELAST 526

#define SM_CYVTHUMB 9

#define STATE_SYSTEM_MIXED 32

#define SBM_SETPOS 224

#define SPI_GETFONTSMOOTHING 74

#define VK_PROCESSKEY 229

#define SC_VSCROLL 61552

#define CF_SYLK 4

#define MSGF_DIALOGBOX 0

#define WH_SHELL 10

#define EVENT_OBJECT_DESTROY 32769

#define WH_MSGFILTER -1

#define CTLCOLOR_LISTBOX 2

#define SM_SWAPBUTTON 23

#define CBS_UPPERCASE 8192

#define BST_CHECKED 1

#define GWL_STYLE -16

#define DFCS_BUTTON3STATE 8

#define HBMMENU_POPUP_MAXIMIZE 10

#define WVR_VREDRAW 512

#define SW_INVALIDATE 2

#define FKF_AVAILABLE 2

#define LB_FINDSTRINGEXACT 418

#define WM_RBUTTONDOWN 516

#define SOUND_SYSTEM_MAXIMIZE 8

#define DS_SETFOREGROUND 512

#define SPI_GETDRAGFULLWINDOWS 38

#define SPI_SETPENWINDOWS 49

#define MB_USERICON 128

#define EM_GETRECT 178

#define STATE_SYSTEM_COLLAPSED 1024

#define DFCS_ADJUSTRECT 8192

#define SPI_SETMENUDROPALIGNMENT 28

#define GWL_HWNDPARENT -8

#define SW_PARENTOPENING 3

#define WM_IME_CONTROL 643

#define WINSTA_READATTRIBUTES 2

#define SB_PAGEUP 2

#define CBN_SETFOCUS 3

#define DESKTOP_WRITEOBJECTS 128

#define SOUND_SYSTEM_BEEP 3

#define WM_PASTE 770

#define LBS_EXTENDEDSEL 2048

#define WM_ENTERMENULOOP 529

#define CBN_SELENDOK 9

#define TPM_BOTTOMALIGN 32

#define CB_SETDROPPEDWIDTH 352

#define CDS_TEST 2

#define RT_ICON 3

#define IDOK 1

#define MFS_UNCHECKED 0

#define IDNO 7

#define COLOR_WINDOWTEXT 8

#define SC_MOVE 61456

#define WMSZ_TOPLEFT 4

#define DFCS_SCROLLSIZEGRIPRIGHT 16

#define SOUND_SYSTEM_INFORMATION 7

#define WM_SYSCHAR 262

#define MNGO_NOINTERFACE 0

#define CWP_ALL 0

#define CB_INSERTSTRING 330

#define ATF_ONOFFFEEDBACK 2

#define MIM_MAXHEIGHT 1

#define SPI_GETHIGHCONTRAST 66

#define HC_NOREM 3

#define WM_SETFOCUS 7

#define ATF_TIMEOUTON 1

#define SM_CYICON 12

#define SWP_NOACTIVATE 16

#define MONITORINFOF_PRIMARY 1

#define LB_ITEMFROMPOINT 425

#define SM_CXICONSPACING 38

#define MIIM_CHECKMARKS 8

#define IDHOT_SNAPWINDOW -1

#define ARW_UP 4

#define LB_GETSELCOUNT 400

#define LB_SETCARETINDEX 414

#define HELP_CONTEXTPOPUP 8

#define FVIRTKEY 1

#define SPI_SETMOUSEBUTTONSWAP 33

#define STN_ENABLE 2

#define DFCS_SCROLLDOWN 1

#define SSTF_NONE 0

#define GCLP_HICONSM -34

#define VK_LCONTROL 162

#define BF_FLAT 16384

#define CBS_OWNERDRAWFIXED 16

#define PBT_APMQUERYSUSPEND 0

#define SPIF_SENDWININICHANGE 2

#define WM_INITMENUPOPUP 279

#define SPI_GETMENUANIMATION 4098

#define SPI_SETMINIMIZEDMETRICS 44

#define DFCS_SCROLLUP 0

#define WM_HSCROLLCLIPBOARD 782

#define FNOINVERT 2

#define WM_CTLCOLORBTN 309

#define CB_SETHORIZONTALEXTENT 350

#define SSTF_CHARS 1

#define RT_DLGINCLUDE 17

#define MB_TASKMODAL 8192

#define WS_EX_APPWINDOW 262144

#define WS_VSCROLL 2097152

#define TME_CANCEL 2147483648

#define SPI_GETSELECTIONFADE 4116

#define MF_OWNERDRAW 256

#define SOUND_SYSTEM_APPEND 14

#define DFCS_BUTTONRADIOIMAGE 1

#define SC_NEXTWINDOW 61504

#define VK_RMENU 165

#define EVENT_SYSTEM_SOUND 1

#define CWP_SKIPTRANSPARENT 4

#define WM_INITDIALOG 272

#define EVENT_OBJECT_REORDER 32772

#define VK_SHIFT 16

#define BS_VCENTER 3072

#define HTSIZEFIRST 10

#define WS_MAXIMIZEBOX 65536

#define ESB_ENABLE_BOTH 0

#define SHOW_OPENNOACTIVATE 4

#define DT_RTLREADING 131072

#define BF_LEFT 1

#define PBT_APMSUSPEND 4

#define SPIF_UPDATEINIFILE 1

#define SS_CENTERIMAGE 512

#define WM_COMPAREITEM 57

#define SB_THUMBPOSITION 4

#define FSHIFT 4

#define MFS_ENABLED 0

#define SOUND_SYSTEM_MENUCOMMAND 15

#define LB_SETCURSEL 390

#define WM_NCRBUTTONUP 165

#define SC_ICON 61472

#define WM_SETTEXT 12

#define DS_CENTER 2048

#define SM_CYICONSPACING 39

#define DSS_UNION 16

#define BS_RIGHT 512

#define MFS_UNHILITE 0

#define WM_STYLECHANGING 124

#define EVENT_MAX 2147483647

#define DWL_MSGRESULT 0

#define EVENT_OBJECT_SELECTIONREMOVE 32776

#define TKF_TOGGLEKEYSON 1

#define WB_RIGHT 1

#define SM_CYDLGFRAME 8

#define EVENT_SYSTEM_MENUSTART 4

#define OBJID_TITLEBAR 4294967294

#define DFC_POPUPMENU 5

#define SPI_SETDOUBLECLKHEIGHT 30

#define DO_DROPFILE 1162627398

#define CBS_SIMPLE 1

#define CB_GETLOCALE 346

#define HTRIGHT 11

#define EVENT_SYSTEM_ALERT 2

#define SM_CXCURSOR 13

#define TPM_RECURSE 1

#define COLOR_INACTIVECAPTIONTEXT 19

#define IMAGE_ICON 1

#define IDCONTINUE 11

#define VK_CAPITAL 20

#define MNC_CLOSE 1

#define SPI_GETWINDOWSEXTENSION 92

#define WS_EX_TRANSPARENT 32

#define ESB_DISABLE_DOWN 2

#define CS_SAVEBITS 2048

#define FLASHW_ALL 3

#define DWLP_MSGRESULT 0

#define MND_ENDMENU 1

#define WM_MDIGETACTIVE 553

#define VK_OEM_102 226

#define SLE_MINORERROR 2

#define MA_ACTIVATE 1

#define DST_PREFIXTEXT 2

#define DFCS_BUTTONPUSH 16

#define DST_COMPLEX 0

#define DDL_READONLY 1

#define BSM_VXDS 1

#define CBS_AUTOHSCROLL 64

#define LBS_HASSTRINGS 64

#define CTLCOLOR_SCROLLBAR 5

#define SPI_GETMOUSEHOVERTIME 102

#define SSWF_WINDOW 2

#define WVR_VALIDRECTS 1024

#define MFT_MENUBREAK 64

#define SPI_SETMENUSHOWDELAY 107

#define VK_OEM_ATTN 240

#define WINEVENT_OUTOFCONTEXT 0

#define ICON_BIG 1

#define BSF_QUERY 1

#define SPI_SETMOUSEHOVERWIDTH 99

#define WINSTA_ACCESSGLOBALATOMS 32

#define MF_ENABLED 0

#define DS_3DLOOK 4

#define FKF_CONFIRMHOTKEY 8

#define WMSZ_LEFT 1

#define HKL_PREV 0

#define TKF_HOTKEYACTIVE 4

#define HCF_AVAILABLE 2

#define SW_ERASE 4

#define BSF_IGNORECURRENTTASK 2

#define EVENT_OBJECT_CREATE 32768

#define SM_CYMENUCHECK 72

#define WM_NCPAINT 133

#define DSS_DISABLED 32

#define EVENT_MIN 1

#define SPI_SETDRAGWIDTH 76

#define AW_CENTER 16

#define WM_IME_NOTIFY 642

#define SPI_SETMOUSEHOVERTIME 103

#define LB_MSGMAX 435

#define STATE_SYSTEM_TRAVERSED 8388608

#define MNS_AUTODISMISS 268435456

#define DS_CENTERMOUSE 4096

#define SPI_GETSCREENSAVETIMEOUT 14

#define BSF_FLUSHDISK 4

#define VK_PRIOR 33

#define MB_SERVICE_NOTIFICATION_NT3X 262144

#define EVENT_SYSTEM_DRAGDROPEND 15

#define WINSTA_CREATEDESKTOP 8

#define COLOR_ACTIVECAPTION 2

#define HELP_CONTEXTMENU 10

#define VK_RCONTROL 163

#define DT_TABSTOP 128

#define LBN_ERRSPACE -2

#define VK_PRINT 42

#define SM_CYHSCROLL 3

#define SPI_SETANIMATION 73

#define SB_VERT 1

#define EVENT_OBJECT_PARENTCHANGE 32783

#define DWL_USER 8

#define HTCLOSE 20

#define LR_COLOR 2

#define WM_INPUTLANGCHANGE 81

#define SM_CYSCREEN 1

#define DST_BITMAP 4

#define MOUSEEVENTF_RIGHTUP 16

#define MWMO_ALERTABLE 2

#define ES_NOHIDESEL 256

#define BSF_NOHANG 8

#define BM_SETCHECK 241

#define WINSTA_ENUMERATE 256

#define STATE_SYSTEM_ANIMATED 16384

#define CW_USEDEFAULT 2147483648

#define STATE_SYSTEM_FOCUSABLE 1048576

#define SPI_GETMOUSESPEED 112

#define SPI_SETMENUFADE 4115

#define IDYES 6

#define WM_GETHOTKEY 51

#define WM_GETDLGCODE 135

#define MFT_RIGHTORDER 8192

#define TME_NONCLIENT 16

#define BF_DIAGONAL 16

#define SWP_DEFERERASE 8192

#define CDS_RESET 1073741824

#define SSTF_DISPLAY 3

#define CBS_DROPDOWN 2

#define WM_DESTROYCLIPBOARD 775

#define SPI_GETTOOLTIPFADE 4120

#define DS_CONTROL 1024

#define BF_MIDDLE 2048

#define BM_GETIMAGE 246

#define HTTOPLEFT 13

#define WM_MBUTTONUP 520

#define VK_ACCEPT 30

#define SPI_SETDRAGFULLWINDOWS 37

#define MDITILE_SKIPDISABLED 2

#define SS_USERITEM 10

#define MFT_STRING 0

#define MK_LBUTTON 1

#define HTSIZELAST 17

#define ODS_FOCUS 16

#define WM_IME_COMPOSITION 271

#define LB_GETCURSEL 392

#define SM_SECURE 44

#define WS_TABSTOP 65536

#define CDS_UPDATEREGISTRY 1

#define WM_CUT 768

#define DCX_INTERSECTUPDATE 512

#define MB_TOPMOST 262144

#define WS_DISABLED 134217728

#define SKF_STICKYKEYSON 1

#define BS_ICON 64

#define SM_CXMINSPACING 47

#define COLOR_HIGHLIGHT 13

#define SM_CYSIZE 31

#define BS_MULTILINE 8192

#define OBJID_MENU 4294967293

#define MOUSEEVENTF_MIDDLEDOWN 32

#define WS_EX_LTRREADING 0

#define SWP_NOREDRAW 8

#define EM_GETFIRSTVISIBLELINE 206

#define ES_LEFT 0

#define WM_MENUSELECT 287

#define SWP_SHOWWINDOW 64

#define VK_MODECHANGE 31

#define WS_CLIPSIBLINGS 67108864

#define ODT_BUTTON 4

#define DCX_PARENTCLIP 32

#define MF_DELETE 512

#define MF_STRING 0

#define GW_ENABLEDPOPUP 6

#define MNS_MODELESS 1073741824

#define STM_SETICON 368

#define SOUND_SYSTEM_MENUPOPUP 16

#define NF_REQUERY 4

#define TPM_HORNEGANIMATION 2048

#define ES_AUTOVSCROLL 64

#define DFCS_PUSHED 512

#define CS_VREDRAW 1

#define VK_HANGUL 21

#define GCL_HICONSM -34

#define HC_SKIP 2

#define BM_SETSTATE 243

#define CURSOR_SHOWING 1

#define WM_LBUTTONDBLCLK 515

#define EN_SETFOCUS 256

#define MSGF_SCROLLBAR 5

#define STATE_SYSTEM_HOTTRACKED 128

#define IDI_WARNING 32515

#define IDANI_OPEN 1

#define VK_PA1 253

#define RES_CURSOR 2

#define BROADCAST_QUERY_DENY 1112363332

#define EVENT_OBJECT_NAMECHANGE 32780

#define ES_WANTRETURN 4096

#define DS_NOFAILCREATE 16

#define MB_MODEMASK 12288

#define SPI_SETHIGHCONTRAST 67

#define RDW_ERASENOW 512

#define DS_SYSMODAL 2

#define SC_HSCROLL 61568

#define DCX_EXCLUDEUPDATE 256

#define FLASHW_TRAY 2

#define VK_SPACE 32

#define BSM_APPLICATIONS 8

#define DIFFERENCE 11

#define MB_NOFOCUS 32768

#define KLF_NOTELLSHELL 128

#define MB_DEFAULT_DESKTOP_ONLY 131072

#define SM_CMOUSEBUTTONS 43

#define SWP_NOMOVE 2

#define EM_SCROLL 181

#define NF_QUERY 3

#define CS_GLOBALCLASS 16384

#define MF_UNHILITE 0

#define ENDSESSION_LOGOFF 2147483648

#define VK_CONVERT 28

#define BDR_OUTER 3

#define BDR_SUNKENINNER 8

#define SC_SIZE 61440

#define DT_EXTERNALLEADING 512

#define BS_AUTORADIOBUTTON 9

#define DFCS_MENUARROW 0

#define HELP_FINDER 11

#define CB_SETEXTENDEDUI 341

#define DOF_DOCUMENT 32770

#define PRF_CHILDREN 16

#define DLGC_BUTTON 8192

#define COLOR_BTNHILIGHT 20

#define WM_DISPLAYCHANGE 126

#define MB_ICONWARNING 48

#define WM_CLOSE 16

#define BF_BOTTOMLEFT 9

#define SPI_SETLOWPOWERACTIVE 85

#define WM_IME_COMPOSITIONFULL 644

#define WMSZ_BOTTOM 6

#define SB_CTL 2

#define SOUND_SYSTEM_RESTOREUP 10

#define SPI_GETSCREENSAVERRUNNING 114

#define RDW_NOCHILDREN 64

#define WM_NCCALCSIZE 131

#define BS_TOP 1024

#define HBMMENU_POPUP_RESTORE 9

#define STATE_SYSTEM_READONLY 64

#define SPI_GETLOWPOWERACTIVE 83

#define SW_SHOWNOACTIVATE 4

#define HTBOTTOM 15

#define KLF_SUBSTITUTE_OK 2

#define SW_SHOWDEFAULT 10

#define CB_GETEDITSEL 320

#define HC_GETNEXT 1

#define HTCAPTION 2

#define SPI_GETKEYBOARDPREF 68

#define SSWF_DISPLAY 3

#define GWLP_ID -12

#define PBT_APMOEMEVENT 11

#define SPI_SETGRADIENTCAPTIONS 4105

#define IDH_CANCEL 28444

#define ODS_COMBOBOXEDIT 4096

#define GUI_CARETBLINKING 1

#define SPI_SETTOOLTIPANIMATION 4119

#define DS_SETFONT 64

#define UOI_TYPE 3

#define VK_OEM_FJ_MASSHOU 147

#define WM_KEYDOWN 256

#define WM_UNDO 772

#define MNS_DRAGDROP 536870912

#define WS_TILEDWINDOW 13565952

#define SPI_GETMOUSEHOVERHEIGHT 100

#define ARW_HIDE 8

#define IDABORT 3

#define HELP_SETCONTENTS 5

#define QS_INPUT 1031

#define LLKHF_EXTENDED 1

#define MB_SYSTEMMODAL 4096

#define WA_CLICKACTIVE 2

#define CBN_DBLCLK 2

#define HSHELL_GETMINRECT 5

#define ES_AUTOHSCROLL 128

#define BN_DBLCLK 5

#define PWR_CRITICALRESUME 3

#define DESKTOP_HOOKCONTROL 8

#define SIZE_MAXIMIZED 2

#define WH_MAXHOOK 14

#define VK_ESCAPE 27

#define WM_IME_REQUEST 648

#define HBMMENU_SYSTEM 1

#define STATE_SYSTEM_SELECTABLE 2097152

#define CDS_GLOBAL 8

#define QS_PAINT 32

#define SPI_SETMOUSESPEED 113

#define CTLCOLOR_MSGBOX 0

#define WM_WININICHANGE 26

#define COLOR_INACTIVEBORDER 11

#define LB_SELECTSTRING 396

#define LB_ERR -1

#define ESB_DISABLE_LEFT 1

#define SHOW_ICONWINDOW 2

#define COLOR_3DFACE 15

#define KL_NAMELENGTH 9

#define LB_GETTEXTLEN 394

#define MF_DISABLED 2

#define PWR_OK 1

#define WM_DEVICECHANGE 537

#define EDGE_RAISED 5

#define HBMMENU_MBAR_MINIMIZE_D 7

#define MFS_HILITE 128

#define SB_TOP 6

#define CB_SETEDITSEL 322

#define PRF_CLIENT 4

#define TPM_NONOTIFY 128

#define BST_UNCHECKED 0

#define GW_HWNDNEXT 2

#define KLF_REORDER 8

#define CB_SELECTSTRING 333

#define WM_IME_SELECT 645

#define EVENT_OBJECT_HIDE 32771

#define SS_OWNERDRAW 13

#define GW_HWNDFIRST 0

#define WM_GETFONT 49

#define SSTF_BORDER 2

#define SPI_SETICONMETRICS 46

#define BS_RIGHTBUTTON 32

#define WM_FONTCHANGE 29

#define WS_SIZEBOX 262144

#define VK_DECIMAL 110

#define VK_OEM_FJ_ROYA 150

#define WS_VISIBLE 268435456

#define SPI_SETACTIVEWNDTRKZORDER 4109

#define SM_CXMAXTRACK 59

#define WM_MDIREFRESHMENU 564

#define SM_CLEANBOOT 67

#define SPI_GETWHEELSCROLLLINES 104

#define WM_PENWINFIRST 896

#define SW_SHOWMAXIMIZED 3

#define ESB_DISABLE_BOTH 3

#define INDEXID_CONTAINER 0

#define RDW_VALIDATE 8

#define WM_NEXTMENU 531

#define INPUTLANGCHANGE_SYSCHARSET 1

#define BS_FLAT 32768

#define SPI_GETACTIVEWNDTRKTIMEOUT 8194

#define WS_EX_MDICHILD 64

#define BF_RECT 15

#define GWLP_USERDATA -21

#define QS_MOUSE 6

#define MB_HELP 16384

#define VK_NONAME 252

#define SB_LINELEFT 0

#define LBS_OWNERDRAWFIXED 16

#define SW_FORCEMINIMIZE 11

#define SS_ETCHEDFRAME 18

#define GW_CHILD 5

#define SC_SEPARATOR 61455

#define WM_NCLBUTTONDBLCLK 163

#define SPI_GETICONTITLEWRAP 25

#define MB_TYPEMASK 15

#define EVENT_SYSTEM_MINIMIZEEND 23

#define ODT_COMBOBOX 3

#define SW_PARENTCLOSING 1

#define SPI_GETBEEP 1

#define HELP_QUIT 2

#define WM_NCMBUTTONUP 168

#define PBT_APMRESUMESTANDBY 8

#define CB_LIMITTEXT 321

#define KF_EXTENDED 256

#define EIMES_GETCOMPSTRATONCE 1

#define WM_ERASEBKGND 20

#define CREATEPROCESS_MANIFEST_RESOURCE_ID 1

#define CF_ENHMETAFILE 14

#define RES_ICON 1

#define SMTO_BLOCK 1

#define CF_DSPMETAFILEPICT 131

#define SS_GRAYRECT 5

#define BS_LEFT 256

#define CSOUND_SYSTEM 16

#define IDI_ASTERISK 32516

#define MB_SERVICE_NOTIFICATION 2097152

#define MB_ICONERROR 16

#define WM_GETTEXTLENGTH 14

#define SWP_NOZORDER 4

#define WS_EX_CONTROLPARENT 65536

#define SPI_SETSTICKYKEYS 59

#define BN_SETFOCUS 6

#define WM_NCRBUTTONDBLCLK 166

#define VK_OEM_FJ_JISHO 146

#define VK_ICO_HELP 227

#define MSGF_USER 4096

#define SBS_SIZEBOX 8

#define CB_GETITEMDATA 336

#define BS_3STATE 5

#define DFCS_CAPTIONRESTORE 3

#define EM_SETTABSTOPS 203

#define WH_MAX 14

#define STATE_SYSTEM_CHECKED 16

#define BDR_RAISED 5

#define WM_LBUTTONUP 514

#define CF_BITMAP 2

#define IDH_NO_HELP 28440

#define WH_CALLWNDPROCRET 12

#define SBM_ENABLE_ARROWS 228

#define EN_KILLFOCUS 512

#define SM_CYSMICON 50

#define SS_NOTIFY 256

#define VK_EXECUTE 43

#define ARW_BOTTOMLEFT 0

#define ODS_HOTLIGHT 64

#define EVENT_SYSTEM_CAPTUREEND 9

#define SS_NOPREFIX 128

#define IDHELP 9

#define BF_MONO 32768

#define CB_ERRSPACE -2

#define KF_MENUMODE 4096

#define WM_CAPTURECHANGED 533

#define WM_PENWINLAST 911

#define WS_EX_RIGHT 4096

#define SPI_SETKEYBOARDDELAY 23

#define CBS_DROPDOWNLIST 3

#define WINSTA_ENUMDESKTOPS 1

#define WS_EX_CONTEXTHELP 1024

#define EVENT_SYSTEM_MENUEND 5

#define BF_ADJUST 8192

#define GMMP_USE_HIGH_RESOLUTION_POINTS 2

#define WM_MOVING 534

#define GCL_WNDPROC -24

#define SM_CXFIXEDFRAME 7

#define WM_CHAR 258

#define BN_UNHILITE 3

#define WM_NCCREATE 129

#define WM_COPYDATA 74

#define LBS_OWNERDRAWVARIABLE 32

#define MF_RIGHTJUSTIFY 16384

#define SM_MIDEASTENABLED 74

#define LR_VGACOLOR 128

#define WM_SYNCPAINT 136

#define MFS_DISABLED 3

#define WM_ACTIVATEAPP 28

#define SM_SLOWMACHINE 73

#define MNGO_NOERROR 1

#define MOUSEEVENTF_RIGHTDOWN 8

#define CF_WAVE 12

#define VK_OEM_ENLW 244

#define ESB_DISABLE_LTUP 1

#define SB_ENDSCROLL 8

#define HTTOP 12

#define SIZEZOOMHIDE 4

#define SM_CYFIXEDFRAME 8

#define VK_OEM_JUMP 234

#define DT_SINGLELINE 32

#define SERKF_INDICATOR 4

#define SKF_TRISTATE 128

#define WM_VSCROLLCLIPBOARD 778

#define WH_MIN -1

#define VK_ATTN 246

#define BF_DIAGONAL_ENDBOTTOMRIGHT 28

#define EM_SETMARGINS 211

#define GCLP_HCURSOR -12

#define MKF_MODIFIERS 64

#define WM_TIMER 275

#define ARW_TOPRIGHT 3

#define STATE_SYSTEM_LINKED 4194304

#define SBS_RIGHTALIGN 4

#define CDS_FULLSCREEN 4

#define SM_CYMAXIMIZED 62

#define SOUND_SYSTEM_QUESTION 5

#define WINEVENT_SKIPOWNPROCESS 2

#define SKF_CONFIRMHOTKEY 8

#define DISP_CHANGE_BADFLAGS -4

#define SM_CYSIZEFRAME 33

#define CTLCOLOR_MAX 7

#define DT_VCENTER 4

#define QS_ALLPOSTMESSAGE 256

#define WM_DESTROY 2

#define DESKTOP_ENUMERATE 64

#define SB_PAGERIGHT 3

#define CF_PRIVATEFIRST 512

#define EVENT_OBJECT_SHOW 32770

#define SM_CXICON 11

#define WS_POPUPWINDOW 2156396544

#define DF_ALLOWOTHERACCOUNTHOOK 1

#define DFCS_MONO 32768

#define STATE_SYSTEM_SIZEABLE 131072

#define VK_OEM_PERIOD 190

#define SWP_NOSIZE 1

#define SM_CXBORDER 5

#define SM_MENUDROPALIGNMENT 40

#define BN_PUSHED 2

#define VK_JUNJA 23

#define WA_ACTIVE 1

#define KLF_ACTIVATE 1

#define KEYEVENTF_KEYUP 2

#define CB_GETEXTENDEDUI 342

#define MFT_RIGHTJUSTIFY 16384

#define SPI_GETFASTTASKSWITCH 35

#define DCX_INTERSECTRGN 128

#define TPM_HORPOSANIMATION 1024

#define VK_KANJI 25

#define SM_CXMINIMIZED 57

#define CTLCOLOR_DLG 4

#define VK_ICO_CLEAR 230

#define SPI_SETPOWEROFFTIMEOUT 82

#define RDW_UPDATENOW 256

#define SM_CXMINTRACK 34

#define DSS_MONO 128

#define HBMMENU_CALLBACK -1

#define EVENT_OBJECT_SELECTION 32774

#define WM_CHILDACTIVATE 34

#define DS_LOCALEDIT 32

#define ARW_LEFT 0

#define CF_TIFF 6

#define HTREDUCE 8

#define VK_NONCONVERT 29

#define WS_EX_CLIENTEDGE 512

#define SS_GRAYFRAME 8

#define DISP_CHANGE_SUCCESSFUL 0

#define DT_INTERNAL 4096

#define WM_ENTERSIZEMOVE 561

#define MKF_HOTKEYSOUND 16

#define LBS_STANDARD 10485763

#define OBJID_SYSMENU 4294967295

#define HELP_HELPONHELP 4

#define STATE_SYSTEM_INDETERMINATE 32

#define CF_DSPBITMAP 130

#define SM_PENWINDOWS 41

#define SS_SIMPLE 11

#define SLE_WARNING 3

#define BST_INDETERMINATE 2

#define HKL_NEXT 1

#define COLOR_BTNFACE 15

#define IDI_WINLOGO 32517

#define SPI_SETICONTITLEWRAP 26

#define SOUND_SYSTEM_APPSTART 12

#define WM_MOUSEHOVER 673

#define VK_SELECT 41

#define WM_MEASUREITEM 44

#define WM_QUERYOPEN 19

#define WS_MAXIMIZE 16777216

#define DFCS_MENUARROWRIGHT 4

#define WM_SIZING 532

#define BF_BOTTOM 8

#define SPI_GETFOREGROUNDLOCKTIMEOUT 8192

#define MB_MISCMASK 49152

#define EM_UNDO 199

#define EM_GETLINE 196

#define PM_QS_POSTMESSAGE 9961472

#define VK_OEM_COMMA 188

#define EDGE_BUMP 9

#define RDW_NOFRAME 2048

#define HCBT_SETFOCUS 9

#define SIZE_MINIMIZED 1

#define GWL_EXSTYLE -20

#define ODT_LISTBOX 2

#define LR_LOADMAP3DCOLORS 4096

#define PBT_APMSTANDBY 5

#define IDH_OK 28443

#define DS_NOIDLEMSG 256

#define SW_SHOWNA 8

#define MF_INSERT 0

#define SC_RESTORE 61728

#define SOUND_SYSTEM_FAULT 13

#define OBJID_QUERYCLASSNAMEIDX 4294967284

#define MB_ICONHAND 16

#define STATE_SYSTEM_EXTSELECTABLE 33554432

#define HC_SYSMODALON 4

#define WM_MENUGETOBJECT 292

#define ODS_INACTIVE 128

#define WM_EXITMENULOOP 530

#define CS_NOCLOSE 512

#define STM_SETIMAGE 370

#define CWP_SKIPINVISIBLE 1

#define BS_CENTER 768

#define GW_OWNER 4

#define WM_CONTEXTMENU 123

#define MOUSEEVENTF_LEFTUP 4

#define SM_CXHTHUMB 10

#define SW_SHOWNORMAL 1

#define EC_LEFTMARGIN 1

#define WM_MDITILE 550

#define CBS_HASSTRINGS 512

#define WS_OVERLAPPEDWINDOW 13565952

#define SPI_LANGDRIVER 12

#define VK_CLEAR 12

#define SM_CXSCREEN 0

#define SIZEZOOMSHOW 3

#define DISP_CHANGE_BADMODE -2

#define MFS_GRAYED 3

#define RDW_FRAME 1024

#define WM_AFXFIRST 864

#define WM_SETFONT 48

#define SOUND_SYSTEM_STARTUP 1

#define SB_PAGELEFT 2

#define LBN_SELCHANGE 1

#define SPI_SETSCREENSAVETIMEOUT 15

#define BDR_INNER 12

#define SSF_AVAILABLE 2

#define HCF_HOTKEYAVAILABLE 64

#define WMSZ_BOTTOMRIGHT 8

#define WM_NCACTIVATE 134

#define LB_ADDSTRING 384

#define SPI_GETMOUSEHOVERWIDTH 98

#define BN_DOUBLECLICKED 5

#define SPI_SETCARETWIDTH 8199

#define SPI_SETMOUSEHOVERHEIGHT 101

#define WS_EX_RIGHTSCROLLBAR 0

#define BSM_NETDRIVER 2

#define WM_ENTERIDLE 289

#define RDW_ALLCHILDREN 128

#define SB_THUMBTRACK 5

#define EVENT_SYSTEM_DIALOGSTART 16

#define COLOR_BACKGROUND 1

#define MONITOR_DEFAULTTOPRIMARY 1

#define WM_SETREDRAW 11

#define DFCS_HOT 4096

#define DFCS_CAPTIONMAX 2

#define WM_NCRBUTTONDOWN 164

#define WM_TCARD 82

#define IDH_HELP 28445

#define CB_OKAY 0

#define WM_MDINEXT 548

#define SWP_FRAMECHANGED 32

#define GR_GDIOBJECTS 0

#define SC_CONTEXTHELP 61824

#define SB_HORZ 0

#define SKF_HOTKEYSOUND 16

#define GCLP_HMODULE -16

#define SPI_GETDESKWALLPAPER 115

#define ODA_DRAWENTIRE 1

#define FLASHW_TIMERNOFG 12

#define WM_IME_STARTCOMPOSITION 269

#define CF_PENDATA 10

#define SC_ARRANGE 61712

#define SPI_GETFOREGROUNDFLASHCOUNT 8196

#define HTTRANSPARENT -1

#define ICON_SMALL 0

#define TPM_RIGHTALIGN 8

#define SBM_GETPOS 225

#define WVR_REDRAW 768

#define WS_ACTIVECAPTION 1

#define BS_GROUPBOX 7

#define EM_SETMODIFY 185

#define SM_CMETRICS 97

#define WH_CBT 5

#define COLOR_ACTIVEBORDER 10

#define MB_APPLMODAL 0

#define HELPINFO_WINDOW 1

#define HC_NOREMOVE 3

#define WM_QUERYDRAGICON 55

#define WM_MBUTTONDBLCLK 521

#define SMTO_NORMAL 0

#define CS_DBLCLKS 8

#define LLKHF_ALTDOWN 32

#define COLOR_MENUBAR 30

#define HTBORDER 18

#define ARW_STARTMASK 3

#define PM_QS_PAINT 2097152

#define CB_FINDSTRING 332

#define BM_SETSTYLE 244

#define ES_READONLY 2048

#define SPI_SETLANGTOGGLE 91

#define SW_RESTORE 9

#define SBM_SETSCROLLINFO 233

#define EC_RIGHTMARGIN 2

#define WM_MOUSELEAVE 675

#define HELP_TCARD_DATA 16

#define HBMMENU_POPUP_CLOSE 8

#define SM_CXSIZEFRAME 32

#define WH_JOURNALRECORD 0

#define STN_DISABLE 3

#define MNS_CHECKORBMP 67108864

#define MKF_MOUSEKEYSON 1

#define VK_HOME 36

#define HOVER_DEFAULT 4294967295

#define PRF_ERASEBKGND 8

#define CBS_OEMCONVERT 128

#define METRICS_USEDEFAULT -1

#define SPI_GETLOWPOWERTIMEOUT 79

#define MF_UNCHECKED 0

#define COLOR_MENUTEXT 7

#define BF_DIAGONAL_ENDTOPLEFT 19

#define DM_GETDEFID 1024

#define SPI_SETACTIVEWINDOWTRACKING 4097

#define WM_HSCROLL 276

#define IDANI_CAPTION 3

#define VK_OEM_COPY 242

#define HELPINFO_MENUITEM 2

#define AW_HOR_POSITIVE 1

#define SS_TYPEMASK 31

#define STATE_SYSTEM_PRESSED 8

#define WH_SYSMSGFILTER 6

#define VK_UP 38

#define TME_HOVER 1

#define MNS_NOCHECK 2147483648

#define LBN_SELCANCEL 3

#define SSGF_DISPLAY 3

#define IDC_NO 32648

#define RT_HTML 23

#define WM_HELP 83

#define DFC_MENU 2

#define SM_CYMINIMIZED 58

#define MB_YESNO 4

#define SC_PREVWINDOW 61520

#define EVENT_SYSTEM_CONTEXTHELPEND 13

#define VK_OEM_FJ_TOUROKU 148

#define BST_PUSHED 4

#define PBT_APMBATTERYLOW 9

#define SM_CYKANJIWINDOW 18

#define BDR_RAISEDINNER 4

#define RT_VXD 20

#define SIF_PAGE 2

#define TKF_HOTKEYSOUND 16

#define CWP_SKIPDISABLED 2

#define LB_ERRSPACE -2

#define BS_TEXT 0

#define FKF_FILTERKEYSON 1

#define EM_GETHANDLE 189

#define SPI_SETFOREGROUNDLOCKTIMEOUT 8193

#define ODA_FOCUS 4

#define HCF_HIGHCONTRASTON 1

#define HCF_HOTKEYACTIVE 4

#define CF_PALETTE 9

#define WM_COPY 769

#define VK_ADD 107

#define ODT_MENU 1

#define SSWF_TITLE 1

#define MF_BITMAP 4

#define IDC_WAIT 32514

#define AW_HOR_NEGATIVE 2

#define SM_CXSIZE 30

#define SIZE_MAXSHOW 3

#define INPUTLANGCHANGE_BACKWARD 4

#define BST_FOCUS 8

#define WS_EX_TOPMOST 8

#define MF_CHANGE 128

#define PM_QS_INPUT 67567616

#define SOUND_SYSTEM_SHUTDOWN 2

#define STATE_SYSTEM_FLOATING 4096

#define EDS_RAWMODE 2

#define MF_USECHECKBITMAPS 512

#define WM_DEVMODECHANGE 27

#define MOUSEEVENTF_XDOWN 128

#define CCHILDREN_SCROLLBAR 5

#define WM_LBUTTONDOWN 513

#define SPI_GETCARETWIDTH 8198

#define GWLP_HINSTANCE -6

#define COLOR_INFOTEXT 23

#define LB_GETCARETINDEX 415

#define CALERT_SYSTEM 6

#define LBS_USETABSTOPS 128

#define IDC_SIZEALL 32646

#define WM_INPUTLANGCHANGEREQUEST 80

#define GWLP_HWNDPARENT -8

#define MOUSEEVENTF_VIRTUALDESK 16384

#define GW_MAX 6

#define VK_CANCEL 3

#define MKF_HOTKEYACTIVE 4

#define SM_DEBUG 22

#define PBT_APMQUERYSUSPENDFAILED 2

#define RDW_INVALIDATE 1

#define WM_VSCROLL 277

#define WM_NCLBUTTONUP 162

#define WM_CANCELJOURNAL 75

#define WINEVENT_INCONTEXT 4

#define SC_MINIMIZE 61472

#define ARW_DOWN 4

#define ALERT_SYSTEM_CRITICAL 5

#define SPI_SETDRAGHEIGHT 77

#define WS_OVERLAPPED 0

#define MK_CONTROL 8

#define NFR_UNICODE 2

#define WH_DEBUG 9

#define IDC_HELP 32651

#define WM_MDIRESTORE 547

#define HELP_WM_HELP 12

#define CF_UNICODETEXT 13

#define GCW_ATOM -32

#define SB_PAGEDOWN 3

#define HSHELL_ACTIVATESHELLWINDOW 3

#define LB_GETITEMHEIGHT 417

#define HTHELP 21

#define WM_CANCELMODE 31

#define SPI_GETLISTBOXSMOOTHSCROLLING 4102

#define QS_KEY 1

#define SS_BITMAP 14

#define LB_GETHORIZONTALEXTENT 403

#define WM_STYLECHANGED 125

#define VK_MENU 18

#define SPI_SETSNAPTODEFBUTTON 96

#define PM_QS_SENDMESSAGE 4194304

#define GUI_SYSTEMMENUMODE 8

#define WS_MINIMIZEBOX 131072

#define IMAGE_BITMAP 0

#define DI_NORMAL 3

#define MONITOR_DEFAULTTONEAREST 2

#define TPM_RETURNCMD 256

#define SHOW_FULLSCREEN 3

#define ORD_LANGDRIVER 1

#define CBN_CLOSEUP 8

#define DFCS_FLAT 16384

#define HELP_COMMAND 258

#define DC_INBUTTON 16

#define WHEEL_DELTA 120

#define DDL_ARCHIVE 32

#define SPI_SETMENUANIMATION 4099

#define WM_SYSDEADCHAR 263

#define HTMINBUTTON 8

#define OBJID_CLIENT 4294967292

#define MB_DEFMASK 3840

#define DFCS_CAPTIONMIN 1

#define VK_INSERT 45

#define SBS_SIZEGRIP 16

#define ODS_GRAYED 2

#define SM_ARRANGE 56

#define HIDE_WINDOW 0

#define SS_REALSIZECONTROL 64

#define WM_MDIMAXIMIZE 549

#define CB_SETITEMHEIGHT 339

#define AW_ACTIVATE 131072

#define SPI_GETHOTTRACKING 4110

#define WM_PARENTNOTIFY 528

#define DT_CENTER 1

#define BF_TOPLEFT 3

#define SM_CXHSCROLL 21

#define SPI_SETSHOWIMEUI 111

#define HTBOTTOMLEFT 16

#define BSF_POSTMESSAGE 16

#define EN_HSCROLL 1537

#define VK_OEM_FINISH 241

#define WM_CHANGECBCHAIN 781

#define VK_OEM_PLUS 187

#define WM_SYSKEYUP 261

#define SIZE_MAXHIDE 4

#define RT_DIALOG 5

#define MNC_IGNORE 0

#define BS_OWNERDRAW 11

#define MF_REMOVE 4096

#define DST_TEXT 1

#define WMSZ_TOPRIGHT 5

#define COLOR_3DDKSHADOW 21

#define GWL_ID -12

#define WM_PALETTEISCHANGING 784

#define SS_PATHELLIPSIS 32768

#define WM_NCDESTROY 130

#define COLOR_GRAYTEXT 17

#define LB_SETSEL 389

#define EVENT_SYSTEM_SCROLLINGSTART 18

#define WS_TILED 0

#define COLOR_CAPTIONTEXT 9

#define WM_HANDHELDFIRST 856

#define LBS_NODATA 8192

#define LR_COPYRETURNORG 4

#define ODS_SELECTED 1

#define CS_PARENTDC 128

#define SM_CYMINTRACK 35

#define WM_DROPFILES 563

#define COLOR_3DSHADOW 16

#define VK_OEM_CLEAR 254

#define OBJID_CURSOR 4294967287

#define LB_FINDSTRING 399

#define MF_GRAYED 1

typedef struct _ENUM_SERVICE_STATUS_PROCESSA _ENUM_SERVICE_STATUS_PROCESSA, *P_ENUM_SERVICE_STATUS_PROCESSA;

typedef struct _SERVICE_STATUS_PROCESS _SERVICE_STATUS_PROCESS, *P_SERVICE_STATUS_PROCESS;

typedef struct _SERVICE_STATUS_PROCESS SERVICE_STATUS_PROCESS;

struct _SERVICE_STATUS_PROCESS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
    DWORD dwProcessId;
    DWORD dwServiceFlags;
};

struct _ENUM_SERVICE_STATUS_PROCESSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _QUERY_SERVICE_CONFIGA _QUERY_SERVICE_CONFIGA, *P_QUERY_SERVICE_CONFIGA;

typedef struct _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;

struct _QUERY_SERVICE_CONFIGA {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPSTR lpBinaryPathName;
    LPSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPSTR lpDependencies;
    LPSTR lpServiceStartName;
    LPSTR lpDisplayName;
};

typedef struct _SERVICE_FAILURE_ACTIONSW _SERVICE_FAILURE_ACTIONSW, *P_SERVICE_FAILURE_ACTIONSW;

typedef struct _SC_ACTION _SC_ACTION, *P_SC_ACTION;

typedef struct _SC_ACTION SC_ACTION;

typedef enum _SC_ACTION_TYPE {
    SC_ACTION_NONE=0,
    SC_ACTION_RESTART=1,
    SC_ACTION_REBOOT=2,
    SC_ACTION_RUN_COMMAND=3
} _SC_ACTION_TYPE;

typedef enum _SC_ACTION_TYPE SC_ACTION_TYPE;

struct _SC_ACTION {
    SC_ACTION_TYPE Type;
    DWORD Delay;
};

struct _SERVICE_FAILURE_ACTIONSW {
    DWORD dwResetPeriod;
    LPWSTR lpRebootMsg;
    LPWSTR lpCommand;
    DWORD cActions;
    SC_ACTION *lpsaActions;
};

typedef void (*LPHANDLER_FUNCTION)(DWORD);

typedef struct _ENUM_SERVICE_STATUS_PROCESSA *LPENUM_SERVICE_STATUS_PROCESSA;

typedef struct _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESSA;

typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW _QUERY_SERVICE_LOCK_STATUSW, *P_QUERY_SERVICE_LOCK_STATUSW;

struct _QUERY_SERVICE_LOCK_STATUSW {
    DWORD fIsLocked;
    LPWSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef struct _SERVICE_STATUS _SERVICE_STATUS, *P_SERVICE_STATUS;

struct _SERVICE_STATUS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSW _ENUM_SERVICE_STATUS_PROCESSW, *P_ENUM_SERVICE_STATUS_PROCESSW;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW *LPENUM_SERVICE_STATUS_PROCESSW;

struct _ENUM_SERVICE_STATUS_PROCESSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA _QUERY_SERVICE_LOCK_STATUSA, *P_QUERY_SERVICE_LOCK_STATUSA;

struct _QUERY_SERVICE_LOCK_STATUSA {
    DWORD fIsLocked;
    LPSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef void (*LPSERVICE_MAIN_FUNCTIONW)(DWORD, LPWSTR *);

typedef struct _SERVICE_TABLE_ENTRYA _SERVICE_TABLE_ENTRYA, *P_SERVICE_TABLE_ENTRYA;

typedef void (*LPSERVICE_MAIN_FUNCTIONA)(DWORD, LPSTR *);

struct _SERVICE_TABLE_ENTRYA {
    LPSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONA lpServiceProc;
};

typedef struct _SERVICE_TABLE_ENTRYW _SERVICE_TABLE_ENTRYW, *P_SERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;

struct _SERVICE_TABLE_ENTRYW {
    LPWSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONW lpServiceProc;
};

typedef struct SERVICE_STATUS_HANDLE__ SERVICE_STATUS_HANDLE__, *PSERVICE_STATUS_HANDLE__;

typedef struct SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;

struct SERVICE_STATUS_HANDLE__ {
    int unused;
};

typedef struct _QUERY_SERVICE_CONFIGW _QUERY_SERVICE_CONFIGW, *P_QUERY_SERVICE_CONFIGW;

typedef struct _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;

struct _QUERY_SERVICE_CONFIGW {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPWSTR lpBinaryPathName;
    LPWSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPWSTR lpDependencies;
    LPWSTR lpServiceStartName;
    LPWSTR lpDisplayName;
};

typedef struct _SERVICE_DESCRIPTIONA _SERVICE_DESCRIPTIONA, *P_SERVICE_DESCRIPTIONA;

typedef struct _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTIONA;

typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;

struct _SERVICE_DESCRIPTIONA {
    LPSTR lpDescription;
};

typedef DWORD (*LPHANDLER_FUNCTION_EX)(DWORD, DWORD, LPVOID, LPVOID);

typedef struct _SERVICE_DESCRIPTIONA *LPSERVICE_DESCRIPTIONA;

typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION;

typedef struct _SERVICE_STATUS_PROCESS *LPSERVICE_STATUS_PROCESS;

typedef struct _ENUM_SERVICE_STATUSA _ENUM_SERVICE_STATUSA, *P_ENUM_SERVICE_STATUSA;

typedef struct _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;

typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS;

typedef struct _SERVICE_STATUS SERVICE_STATUS;

struct _ENUM_SERVICE_STATUSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;

typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;

typedef struct SC_HANDLE__ SC_HANDLE__, *PSC_HANDLE__;

struct SC_HANDLE__ {
    int unused;
};

typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;

typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;

typedef struct _SERVICE_DESCRIPTIONW _SERVICE_DESCRIPTIONW, *P_SERVICE_DESCRIPTIONW;

struct _SERVICE_DESCRIPTIONW {
    LPWSTR lpDescription;
};

typedef struct _SERVICE_FAILURE_ACTIONSA _SERVICE_FAILURE_ACTIONSA, *P_SERVICE_FAILURE_ACTIONSA;

typedef struct _SERVICE_FAILURE_ACTIONSA *LPSERVICE_FAILURE_ACTIONSA;

struct _SERVICE_FAILURE_ACTIONSA {
    DWORD dwResetPeriod;
    LPSTR lpRebootMsg;
    LPSTR lpCommand;
    DWORD cActions;
    SC_ACTION *lpsaActions;
};

typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;

typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;

typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;

typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;

typedef struct SC_HANDLE__ *SC_HANDLE;

typedef struct _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONSA;

typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_FAILURE_ACTIONSW *LPSERVICE_FAILURE_ACTIONSW;

typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;

typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO=0
} _SC_STATUS_TYPE;

typedef enum _SC_STATUS_TYPE SC_STATUS_TYPE;

typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO=0
} _SC_ENUM_TYPE;

typedef SC_HANDLE *LPSC_HANDLE;

typedef struct _SC_ACTION *LPSC_ACTION;

typedef struct _ENUM_SERVICE_STATUSW _ENUM_SERVICE_STATUSW, *P_ENUM_SERVICE_STATUSW;

typedef struct _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;

struct _ENUM_SERVICE_STATUSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_STATUS *LPSERVICE_STATUS;

typedef struct _SERVICE_DESCRIPTIONW SERVICE_DESCRIPTIONW;

typedef struct _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;

typedef struct _SERVICE_DESCRIPTIONW *LPSERVICE_DESCRIPTIONW;

typedef enum _SC_ENUM_TYPE SC_ENUM_TYPE;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW ENUM_SERVICE_STATUS_PROCESSW;

typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;

typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG;

typedef struct _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;

typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;

typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY;

typedef LPVOID SC_LOCK;

typedef struct _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;

typedef struct _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_FAILURE_ACTIONSW SERVICE_FAILURE_ACTIONSW;

#define SERVICE_QUERY_CONFIG 1

#define SC_MANAGER_LOCK 8

#define SERVICE_ACTIVE 1

#define SC_MANAGER_QUERY_LOCK_STATUS 16

#define SERVICE_STOP 32

#define SERVICE_CONFIG_DESCRIPTION 1

#define SERVICE_CONTROL_NETBINDENABLE 9

#define SERVICE_STOPPED 1

#define SERVICE_CONTROL_PARAMCHANGE 6

#define SERVICE_INACTIVE 2

#define SC_MANAGER_ALL_ACCESS 983103

#define SERVICE_ACCEPT_POWEREVENT 64

#define SERVICE_ACCEPT_SHUTDOWN 4

#define SC_MANAGER_ENUMERATE_SERVICE 4

#define SERVICE_CHANGE_CONFIG 2

#define SERVICE_QUERY_STATUS 4

#define SERVICE_CONTROL_INTERROGATE 4

#define SERVICE_INTERROGATE 128

#define SERVICE_PAUSED 7

#define SERVICE_USER_DEFINED_CONTROL 256

#define SERVICE_ACCEPT_HARDWAREPROFILECHANGE 32

#define SERVICE_RUNNING 4

#define SERVICE_RUNS_IN_SYSTEM_PROCESS 1

#define SERVICE_NO_CHANGE 4294967295

#define SERVICE_CONTROL_SHUTDOWN 5

#define SERVICE_CONFIG_FAILURE_ACTIONS 2

#define SERVICE_ALL_ACCESS 983551

#define SC_MANAGER_CONNECT 1

#define SERVICE_ACCEPT_STOP 1

#define SC_MANAGER_MODIFY_BOOT_CONFIG 32

#define SERVICE_CONTROL_HARDWAREPROFILECHANGE 12

#define SERVICE_ACCEPT_NETBINDCHANGE 16

#define SERVICE_CONTROL_SESSIONCHANGE 14

#define SERVICE_CONTROL_CONTINUE 3

#define SERVICE_CONTROL_NETBINDADD 7

#define SERVICE_CONTROL_PAUSE 2

#define SERVICE_STOP_PENDING 3

#define SERVICE_ACCEPT_PAUSE_CONTINUE 2

#define SERVICE_ACCEPT_SESSIONCHANGE 128

#define SERVICE_ACCEPT_PARAMCHANGE 8

#define SERVICE_PAUSE_PENDING 6

#define SERVICE_PAUSE_CONTINUE 64

#define SERVICE_CONTROL_STOP 1

#define SERVICE_CONTINUE_PENDING 5

#define SERVICE_STATE_ALL 3

#define SC_MANAGER_CREATE_SERVICE 2

#define SERVICE_ENUMERATE_DEPENDENTS 8

#define SERVICE_CONTROL_NETBINDDISABLE 10

#define SERVICE_START_PENDING 2

#define SERVICE_CONTROL_POWEREVENT 13

#define SERVICE_CONTROL_DEVICEEVENT 11

#define SERVICE_START 16

#define SERVICE_CONTROL_NETBINDREMOVE 8

#define LZERROR_READ -3

#define LZERROR_UNKNOWNALG -8

#define LZERROR_BADVALUE -7

#define LZERROR_BADOUTHANDLE -2

#define LZERROR_GLOBALLOC -5

#define LZERROR_GLOBLOCK -6

#define LZERROR_BADINHANDLE -1

#define LZERROR_WRITE -4

typedef enum tagCOWAIT_FLAGS {
    COWAIT_WAITALL=1,
    COWAIT_ALERTABLE=2
} tagCOWAIT_FLAGS;

typedef enum tagCOWAIT_FLAGS COWAIT_FLAGS;

typedef enum tagREGCLS {
    REGCLS_SINGLEUSE=0,
    REGCLS_MULTIPLEUSE=1,
    REGCLS_MULTI_SEPARATE=2,
    REGCLS_SUSPENDED=4,
    REGCLS_SURROGATE=8
} tagREGCLS;

typedef enum tagREGCLS REGCLS;

typedef enum tagCOINIT {
    COINIT_MULTITHREADED=0,
    COINIT_APARTMENTTHREADED=2,
    COINIT_DISABLE_OLE1DDE=4,
    COINIT_SPEED_OVER_MEMORY=8
} tagCOINIT;

typedef struct tagSTGOPTIONS tagSTGOPTIONS, *PtagSTGOPTIONS;

typedef struct tagSTGOPTIONS STGOPTIONS;

struct tagSTGOPTIONS {
    USHORT usVersion;
    USHORT reserved;
    ULONG ulSectorSize;
    WCHAR *pwcsTemplateFile;
};

typedef HRESULT (*LPFNCANUNLOADNOW)(void);

typedef enum tagCOINIT COINIT;

typedef enum tagSTDMSHLFLAGS {
    SMEXF_SERVER=1,
    SMEXF_HANDLER=2
} tagSTDMSHLFLAGS;

typedef HRESULT (*LPFNGETCLASSOBJECT)(IID *, IID *, LPVOID *);

typedef enum tagSTDMSHLFLAGS STDMSHLFLAGS;

#define STGM_WRITE 1

#define STG_LAYOUT_INTERLEAVED 1

#define STG_TOEND 4294967295

#define STGM_SHARE_EXCLUSIVE 16

#define ASYNC_MODE_DEFAULT 0

#define STGM_NOSCRATCH 1048576

#define ASYNC_MODE_COMPATIBILITY 1

#define STGOPTIONS_VERSION 2

#define STGM_DIRECT 0

#define STGM_SHARE_DENY_READ 48

#define STGM_TRANSACTED 65536

#define STGM_READWRITE 2

#define STGTY_REPEAT 256

#define COM_RIGHTS_EXECUTE 1

#define STGFMT_DOCUMENT 0

#define STGM_DELETEONRELEASE 67108864

#define STGM_NOSNAPSHOT 2097152

#define STG_LAYOUT_SEQUENTIAL 0

#define COM_RIGHTS_SAFE_FOR_SCRIPTING 2

#define STGM_SHARE_DENY_NONE 64

#define STGM_SIMPLE 134217728

#define STGFMT_ANY 4

#define STGFMT_STORAGE 0

#define STGM_CREATE 4096

#define MARSHALINTERFACE_MIN 500

#define STGFMT_FILE 3

#define CWCSTORAGENAME 32

#define STGFMT_DOCFILE 5

#define STGM_READ 0

#define STGFMT_NATIVE 1

#define STGM_CONVERT 131072

#define STGM_SHARE_DENY_WRITE 32

#define STGM_FAILIFTHERE 0

#define STGM_PRIORITY 262144

typedef struct IDirect3DResource8Vtbl IDirect3DResource8Vtbl, *PIDirect3DResource8Vtbl;

typedef struct IDirect3DResource8 IDirect3DResource8, *PIDirect3DResource8;

struct IDirect3DResource8Vtbl {
    HRESULT (*QueryInterface)(struct IDirect3DResource8 *, IID *, void **);
    ULONG (*AddRef)(struct IDirect3DResource8 *);
    ULONG (*Release)(struct IDirect3DResource8 *);
    HRESULT (*GetDevice)(struct IDirect3DResource8 *, struct IDirect3DDevice8 **);
    HRESULT (*SetPrivateData)(struct IDirect3DResource8 *, GUID *, void *, DWORD, DWORD);
    HRESULT (*GetPrivateData)(struct IDirect3DResource8 *, GUID *, void *, DWORD *);
    HRESULT (*FreePrivateData)(struct IDirect3DResource8 *, GUID *);
    DWORD (*SetPriority)(struct IDirect3DResource8 *, DWORD);
    DWORD (*GetPriority)(struct IDirect3DResource8 *);
    void (*PreLoad)(struct IDirect3DResource8 *);
    D3DRESOURCETYPE (*GetType)(struct IDirect3DResource8 *);
};

struct IDirect3DResource8 {
    struct IDirect3DResource8Vtbl *lpVtbl;
};

typedef struct IDirect3DVolumeTexture8 *PDIRECT3DVOLUMETEXTURE8;

typedef struct IDirect3DResource8 *PDIRECT3DRESOURCE8;

typedef struct IDirect3DSwapChain8 *LPDIRECT3DSWAPCHAIN8;

typedef struct IDirect3DVolume8 *LPDIRECT3DVOLUME8;

typedef struct IDirect3DVertexBuffer8 *PDIRECT3DVERTEXBUFFER8;

typedef struct IDirect3DIndexBuffer8 *PDIRECT3DINDEXBUFFER8;

typedef struct IDirect3DVolumeTexture8 *LPDIRECT3DVOLUMETEXTURE8;

typedef struct IDirect3DVertexBuffer8 *LPDIRECT3DVERTEXBUFFER8;

typedef struct IDirect3DVolume8 *PDIRECT3DVOLUME8;

typedef struct IDirect3DResource8 *LPDIRECT3DRESOURCE8;

typedef struct IDirect3DIndexBuffer8 *LPDIRECT3DINDEXBUFFER8;

typedef struct IDirect3DCubeTexture8 *PDIRECT3DCUBETEXTURE8;

typedef struct IDirect3D8 *PDIRECT3D8;

typedef struct IDirect3DSurface8 *PDIRECT3DSURFACE8;

typedef struct IDirect3D8 *LPDIRECT3D8;

typedef struct IDirect3DBaseTexture8 *LPDIRECT3DBASETEXTURE8;

typedef struct IDirect3DBaseTexture8 *PDIRECT3DBASETEXTURE8;

typedef struct IDirect3DDevice8 *PDIRECT3DDEVICE8;

typedef struct IDirect3DSwapChain8 *PDIRECT3DSWAPCHAIN8;

typedef struct IDirect3DTexture8 *PDIRECT3DTEXTURE8;

#define D3D_OK 0

#define D3DERR_UNSUPPORTEDCOLOROPERATION 2289436697

#define DIRECT3D_VERSION 2048

#define D3DERR_CONFLICTINGTEXTUREFILTER 2289436702

#define D3DERR_DEVICENOTRESET 2289436777

#define D3DERR_DRIVERINTERNALERROR 2289436711

#define D3DSGR_NO_CALIBRATION 0

#define D3DADAPTER_DEFAULT 0

#define D3DCREATE_FPU_PRESERVE 2

#define D3DERR_WRONGTEXTUREFORMAT 2289436696

#define D3DERR_UNSUPPORTEDALPHAOPERATION 2289436699

#define D3DCREATE_MIXED_VERTEXPROCESSING 128

#define D3DCREATE_SOFTWARE_VERTEXPROCESSING 32

#define D3DERR_UNSUPPORTEDALPHAARG 2289436700

#define D3DCURSOR_IMMEDIATE_UPDATE 1

#define D3DSPD_IUNKNOWN 1

#define D3DERR_UNSUPPORTEDFACTORVALUE 2289436703

#define D3DENUM_NO_WHQL_LEVEL 2

#define D3DERR_CONFLICTINGRENDERSTATE 2289436705

#define D3DPRESENT_BACK_BUFFERS_MAX 3

#define D3DERR_INVALIDCALL 2289436780

#define D3DERR_DEVICELOST 2289436776

#define D3DERR_CONFLICTINGTEXTUREPALETTE 2289436710

#define D3DSGR_CALIBRATE 1

#define D3DERR_UNSUPPORTEDTEXTUREFILTER 2289436706

#define D3DERR_TOOMANYOPERATIONS 2289436701

#define D3DCURRENT_DISPLAY_MODE 15728639

#define D3DERR_MOREDATA 2289436775

#define D3DERR_NOTFOUND 2289436774

#define D3DERR_NOTAVAILABLE 2289436778

#define D3DERR_DRIVERINVALIDCALL 2289436781

#define D3DCREATE_PUREDEVICE 16

#define D3DERR_INVALIDDEVICE 2289436779

#define D3DERR_UNSUPPORTEDCOLORARG 2289436698

#define D3DCREATE_HARDWARE_VERTEXPROCESSING 64

#define _FACD3D 2166

#define D3DCREATE_MULTITHREADED 4

#define D3D_SDK_VERSION 120

#define D3DERR_OUTOFVIDEOMEMORY 2289435004

typedef enum tagREGKIND {
    REGKIND_DEFAULT=0,
    REGKIND_REGISTER=1,
    REGKIND_NONE=2
} tagREGKIND;

typedef enum tagREGKIND REGKIND;

typedef struct tagPARAMDATA tagPARAMDATA, *PtagPARAMDATA;

typedef struct tagPARAMDATA PARAMDATA;

struct tagPARAMDATA {
    OLECHAR *szName;
    VARTYPE vt;
};

typedef struct tagMETHODDATA tagMETHODDATA, *PtagMETHODDATA;

typedef struct tagMETHODDATA *LPMETHODDATA;

struct tagMETHODDATA {
    OLECHAR *szName;
    PARAMDATA *ppdata;
    DISPID dispid;
    UINT iMeth;
    CALLCONV cc;
    UINT cArgs;
    WORD wFlags;
    VARTYPE vtReturn;
};

typedef struct tagMETHODDATA METHODDATA;

typedef struct tagINTERFACEDATA tagINTERFACEDATA, *PtagINTERFACEDATA;

typedef struct tagINTERFACEDATA INTERFACEDATA;

struct tagINTERFACEDATA {
    METHODDATA *pmethdata;
    UINT cMembers;
};

typedef struct tagINTERFACEDATA *LPINTERFACEDATA;

typedef struct UDATE UDATE, *PUDATE;

struct UDATE {
    SYSTEMTIME st;
    USHORT wDayOfYear;
};

typedef struct NUMPARSE NUMPARSE, *PNUMPARSE;

struct NUMPARSE {
    INT cDig;
    ULONG dwInFlags;
    ULONG dwOutFlags;
    INT cchUsed;
    INT nBaseShift;
    INT nPwr10;
};

typedef struct tagPARAMDATA *LPPARAMDATA;

#define VARIANT_CALENDAR_GREGORIAN 64

#define VAR_FORMAT_NOSUBSTITUTE 32

#define VAR_CALENDAR_GREGORIAN 256

#define VAR_CALENDAR_THAI 128

#define NUMPRS_LEADING_MINUS 16

#define VAR_TIMEVALUEONLY 1

#define ACTIVEOBJECT_STRONG 0

#define NUMPRS_DECIMAL 256

#define VARIANT_NOVALUEPROP 1

#define MEMBERID_NIL -1

#define DISPATCH_PROPERTYGET 2

#define NUMPRS_TRAILING_PLUS 8

#define NUMPRS_INEXACT 131072

#define STDOLE2_MINORVERNUM 0

#define STDOLE_MINORVERNUM 0

#define STDOLE_LCID 0

#define VAR_LOCALBOOL 16

#define NUMPRS_USE_ALL 4096

#define ID_DEFAULTINST -2

#define VAR_FOURDIGITYEARS 64

#define STDOLE_MAJORVERNUM 1

#define STDOLE2_MAJORVERNUM 2

#define NUMPRS_NEG 65536

#define LOCALE_USE_NLS 268435456

#define VARIANT_LOCALBOOL 16

#define LOAD_TLB_AS_64BIT 64

#define VARIANT_ALPHABOOL 2

#define NUMPRS_THOUSANDS 512

#define NUMPRS_PARENS 128

#define NUMPRS_CURRENCY 1024

#define DISPATCH_PROPERTYPUTREF 8

#define VAR_VALIDDATE 4

#define DISPATCH_PROPERTYPUT 4

#define NUMPRS_LEADING_PLUS 4

#define VARCMP_LT 0

#define VTDATEGRE_MAX 2958465

#define ACTIVEOBJECT_WEAK 1

#define VARCMP_EQ 1

#define VARIANT_CALENDAR_HIJRI 8

#define VARIANT_NOUSEROVERRIDE 4

#define NUMPRS_TRAILING_MINUS 32

#define DISPATCH_METHOD 1

#define STDOLE2_LCID 0

#define LOAD_TLB_AS_32BIT 32

#define NUMPRS_STD 8191

#define MASK_TO_RESET_TLB_BITS -97

#define VAR_DATEVALUEONLY 2

#define VAR_CALENDAR_HIJRI 8

#define NUMPRS_LEADING_WHITE 1

#define VTDATEGRE_MIN -657434

#define NUMPRS_HEX_OCT 64

#define NUMPRS_TRAILING_WHITE 2

#define VARIANT_CALENDAR_THAI 32

#define VARIANT_USE_NLS 128

#define VARCMP_GT 2

#define VARCMP_NULL 3

#define NUMPRS_EXPONENT 2048

typedef struct _LDBL12 _LDBL12, *P_LDBL12;

struct _LDBL12 {
    uchar ld12[12];
};

typedef struct _ldiv_t _ldiv_t, *P_ldiv_t;

typedef struct _ldiv_t ldiv_t;

struct _ldiv_t {
    long quot;
    long rem;
};

typedef void (*_secerr_handler_func)(int, void *);

typedef void (*_purecall_handler)(void);

typedef struct _div_t _div_t, *P_div_t;

struct _div_t {
    int quot;
    int rem;
};

typedef int (*_onexit_t)(void);

typedef struct _div_t div_t;

typedef struct _CRT_DOUBLE _CRT_DOUBLE, *P_CRT_DOUBLE;

struct _CRT_DOUBLE {
    double x;
};

#define _MAX_DRIVE 3

#define _OUT_TO_STDERR 1

#define _SECERR_BUFFER_OVERRUN 1

#define _MAX_PATH 260

#define EXIT_FAILURE 1

#define _MAX_FNAME 256

#define _MAX_DIR 256

#define _OUT_TO_DEFAULT 0

#define _MAX_EXT 256

#define _OUT_TO_MSGBOX 2

#define _CVTBUFSIZE 349

#define RAND_MAX 2147483647

#define _REPORT_ERRMODE 3

#define EXIT_SUCCESS 0

typedef struct png_color_8_struct png_color_8_struct, *Ppng_color_8_struct;

typedef struct png_color_8_struct png_color_8;

typedef png_color_8 *png_color_8p;

struct png_color_8_struct {
    png_byte red;
    png_byte green;
    png_byte blue;
    png_byte gray;
    png_byte alpha;
};

typedef struct png_info_struct png_info_struct, *Ppng_info_struct;

typedef struct png_color_struct png_color_struct, *Ppng_color_struct;

typedef struct png_color_struct png_color;

typedef png_color *png_colorp;

typedef struct png_text_struct png_text_struct, *Ppng_text_struct;

typedef struct png_text_struct png_text;

typedef png_text *png_textp;

typedef struct png_time_struct png_time_struct, *Ppng_time_struct;

typedef struct png_time_struct png_time;

typedef struct png_color_16_struct png_color_16_struct, *Ppng_color_16_struct;

typedef struct png_color_16_struct png_color_16;

struct png_color_struct {
    png_byte red;
    png_byte green;
    png_byte blue;
};

struct png_color_16_struct {
    png_byte index;
    png_uint_16 red;
    png_uint_16 green;
    png_uint_16 blue;
    png_uint_16 gray;
};

struct png_time_struct {
    png_uint_16 year;
    png_byte month;
    png_byte day;
    png_byte hour;
    png_byte minute;
    png_byte second;
};

struct png_info_struct {
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 valid;
    png_uint_32 rowbytes;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte bit_depth;
    png_byte color_type;
    png_byte compression_type;
    png_byte filter_type;
    png_byte interlace_type;
    png_byte channels;
    png_byte pixel_depth;
    png_byte spare_byte;
    png_byte signature[8];
    float gamma;
    png_byte srgb_intent;
    int num_text;
    int max_text;
    png_textp text;
    png_time mod_time;
    png_color_8 sig_bit;
    png_bytep trans;
    png_color_16 trans_values;
    png_color_16 background;
    png_uint_32 x_offset;
    png_uint_32 y_offset;
    png_byte offset_unit_type;
    png_uint_32 x_pixels_per_unit;
    png_uint_32 y_pixels_per_unit;
    png_byte phys_unit_type;
    png_uint_16p hist;
    float x_white;
    float y_white;
    float x_red;
    float y_red;
    float x_green;
    float y_green;
    float x_blue;
    float y_blue;
    png_charp pcal_purpose;
    png_int_32 pcal_X0;
    png_int_32 pcal_X1;
    png_charp pcal_units;
    png_charpp pcal_params;
    png_byte pcal_type;
    png_byte pcal_nparams;
};

struct png_text_struct {
    int compression;
    png_charp key;
    png_charp text;
    png_size_t text_length;
};

typedef struct png_struct_def png_struct_def, *Ppng_struct_def;

typedef struct png_struct_def png_struct;

typedef png_struct *png_structp;

typedef void (*png_flush_ptr)(png_structp);

typedef int jmp_buf[16];

typedef void (*png_error_ptr)(png_structp, png_const_charp);

typedef void (*png_rw_ptr)(png_structp, png_bytep, png_size_t);

typedef struct png_row_info_struct png_row_info_struct, *Ppng_row_info_struct;

typedef struct png_row_info_struct png_row_info;

typedef png_row_info *png_row_infop;

typedef void (*png_user_transform_ptr)(png_structp, png_row_infop, png_bytep);

typedef void (*png_read_status_ptr)(png_structp, png_uint_32, int);

typedef void (*png_write_status_ptr)(png_structp, png_uint_32, int);

typedef struct png_info_struct png_info;

typedef png_info *png_infop;

typedef void (*png_progressive_info_ptr)(png_structp, png_infop);

typedef void (*png_progressive_row_ptr)(png_structp, png_bytep, png_uint_32, int);

typedef void (*png_progressive_end_ptr)(png_structp, png_infop);

struct png_row_info_struct {
    png_uint_32 width;
    png_uint_32 rowbytes;
    png_byte color_type;
    png_byte bit_depth;
    png_byte channels;
    png_byte pixel_depth;
};

struct png_struct_def {
    jmp_buf jmpbuf;
    png_error_ptr error_fn;
    png_error_ptr warning_fn;
    png_voidp error_ptr;
    png_rw_ptr write_data_fn;
    png_rw_ptr read_data_fn;
    png_voidp io_ptr;
    png_user_transform_ptr read_user_transform_fn;
    png_user_transform_ptr write_user_transform_fn;
    png_voidp user_transform_ptr;
    png_byte user_transform_depth;
    png_byte user_transform_channels;
    png_uint_32 mode;
    png_uint_32 flags;
    png_uint_32 transformations;
    z_stream zstream;
    png_bytep zbuf;
    png_size_t zbuf_size;
    int zlib_level;
    int zlib_method;
    int zlib_window_bits;
    int zlib_mem_level;
    int zlib_strategy;
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 num_rows;
    png_uint_32 usr_width;
    png_uint_32 rowbytes;
    png_uint_32 irowbytes;
    png_uint_32 iwidth;
    png_uint_32 row_number;
    png_bytep prev_row;
    png_bytep row_buf;
    png_bytep sub_row;
    png_bytep up_row;
    png_bytep avg_row;
    png_bytep paeth_row;
    png_row_info row_info;
    png_uint_32 idat_size;
    png_uint_32 crc;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte chunk_name[5];
    png_byte compression;
    png_byte filter;
    png_byte interlaced;
    png_byte pass;
    png_byte do_filter;
    png_byte color_type;
    png_byte bit_depth;
    png_byte usr_bit_depth;
    png_byte pixel_depth;
    png_byte channels;
    png_byte usr_channels;
    png_byte sig_bytes;
    png_uint_16 filler;
    png_byte background_gamma_type;
    float background_gamma;
    png_color_16 background;
    png_color_16 background_1;
    png_flush_ptr output_flush_fn;
    png_uint_32 flush_dist;
    png_uint_32 flush_rows;
    int gamma_shift;
    float gamma;
    float screen_gamma;
    png_bytep gamma_table;
    png_bytep gamma_from_1;
    png_bytep gamma_to_1;
    png_uint_16pp gamma_16_table;
    png_uint_16pp gamma_16_from_1;
    png_uint_16pp gamma_16_to_1;
    png_color_8 sig_bit;
    png_color_8 shift;
    png_bytep trans;
    png_color_16 trans_values;
    png_read_status_ptr read_row_fn;
    png_write_status_ptr write_row_fn;
    png_progressive_info_ptr info_fn;
    png_progressive_row_ptr row_fn;
    png_progressive_end_ptr end_fn;
    png_bytep save_buffer_ptr;
    png_bytep save_buffer;
    png_bytep current_buffer_ptr;
    png_bytep current_buffer;
    png_uint_32 push_length;
    png_uint_32 skip_length;
    png_size_t save_buffer_size;
    png_size_t save_buffer_max;
    png_size_t buffer_size;
    png_size_t current_buffer_size;
    int process_mode;
    int cur_palette;
    png_size_t current_text_size;
    png_size_t current_text_left;
    png_charp current_text;
    png_charp current_text_ptr;
    png_bytep palette_lookup;
    png_bytep dither_index;
    png_uint_16p hist;
    png_byte heuristic_method;
    png_byte num_prev_filters;
    png_bytep prev_filters;
    png_uint_16p filter_weights;
    png_uint_16p inv_filter_weights;
    png_uint_16p filter_costs;
    png_uint_16p inv_filter_costs;
    png_charp time_buffer;
    png_byte rgb_to_gray_status;
    png_byte rgb_to_gray_red_coeff;
    png_byte rgb_to_gray_green_coeff;
    png_byte rgb_to_gray_blue_coeff;
    png_byte empty_plte_permitted;
};

typedef png_time *png_timep;

typedef png_time **png_timepp;

typedef png_structp version_1_0_5;

typedef png_color_16 *png_color_16p;

typedef png_color_16 **png_color_16pp;

typedef png_struct **png_structpp;

typedef png_text **png_textpp;

typedef png_row_info **png_row_infopp;

typedef void (*png_free_ptr)(png_structp, png_voidp);

typedef png_color **png_colorpp;

typedef png_color_8 **png_color_8pp;

typedef png_voidp (*png_malloc_ptr)(png_structp, png_size_t);

typedef png_info **png_infopp;

#define PNG_BACKGROUND_GAMMA_FILE 2

#define PNG_INTERLACE_NONE 0

#define PNG_RESOLUTION_LAST 2

#define PNG_CRC_QUIET_USE 4

#define PNG_COLOR_TYPE_GRAY 0

#define PNG_INFO_pHYs 128

#define PNG_INTERLACE_ADAM7 1

#define PNG_COMPRESSION_TYPE_DEFAULT 0

#define PNG_CRC_ERROR_QUIT 1

#define PNG_EQUATION_LINEAR 0

#define PNG_INFO_cHRM 4

#define PNG_RESOLUTION_METER 1

#define PNG_FILTER_PAETH 128

#define PNG_EQUATION_ARBITRARY 2

#define PNG_INFO_pCAL 1024

#define PNG_CRC_DEFAULT 0

#define PNG_RESOLUTION_UNKNOWN 0

#define PNG_TEXT_COMPRESSION_LAST 1

#define PNG_FILTER_HEURISTIC_DEFAULT 0

#define PNG_FILTER_VALUE_UP 2

#define PNG_CRC_WARN_USE 3

#define PNG_INFO_oFFs 256

#define PNG_EQUATION_HYPERBOLIC 3

#define PNG_BACKGROUND_GAMMA_SCREEN 1

#define PNG_INFO_gAMA 1

#define PNG_FILTER_VALUE_LAST 5

#define PNG_COLOR_TYPE_PALETTE 3

#define PNG_MAX_UINT 2147483647

#define PNG_FILLER_AFTER 1

#define PNG_BACKGROUND_GAMMA_UNKNOWN 0

#define PNG_OFFSET_LAST 2

#define PNG_sRGB_INTENT_ABSOLUTE 2

#define PNG_FILTER_HEURISTIC_WEIGHTED 2

#define PNG_OFFSET_PIXEL 0

#define PNG_INTERLACE_LAST 2

#define PNG_LIBPNG_VER 10005

#define PNG_FILTER_VALUE_AVG 3

#define PNG_INFO_hIST 64

#define PNG_FILLER_BEFORE 0

#define PNG_TEXT_COMPRESSION_zTXt 0

#define PNG_FILTER_HEURISTIC_LAST 3

#define PNG_FILTER_AVG 64

#define PNG_EQUATION_LAST 4

#define PNG_INFO_tRNS 16

#define PNG_INFO_sBIT 2

#define PNG_sRGB_INTENT_SATURATION 0

#define PNG_TEXT_COMPRESSION_zTXt_WR -2

#define PNG_FILTER_UP 32

#define PNG_TEXT_COMPRESSION_NONE_WR -3

#define PNG_COLOR_TYPE_RGB 2

#define PNG_sRGB_INTENT_RELATIVE 3

#define PNG_ALL_FILTERS 248

#define PNG_INFO_bKGD 32

#define PNG_CRC_NO_CHANGE 5

#define PNG_COLOR_TYPE_GRAY_ALPHA 4

#define PNG_FILTER_VALUE_NONE 0

#define PNG_FILTER_TYPE_BASE 0

#define PNG_INFO_tIME 512

#define PNG_COLOR_MASK_PALETTE 1

#define PNG_OFFSET_MICROMETER 1

#define PNG_FILTER_SUB 16

#define PNG_NO_FILTERS 0

#define PNG_BACKGROUND_GAMMA_UNIQUE 3

#define PNG_INFO_sRGB 2048

#define PNG_COLOR_MASK_COLOR 2

#define PNG_EQUATION_BASE_E 1

#define PNG_sRGB_INTENT_LAST 4

#define PNG_sRGB_INTENT_PERCEPTUAL 1

#define PNG_FILTER_VALUE_PAETH 4

#define PNG_FILTER_NONE 8

#define PNG_COMPRESSION_TYPE_BASE 0

#define PNG_INFO_PLTE 8

#define PNG_TEXT_COMPRESSION_NONE -1

#define PNG_COLOR_MASK_ALPHA 4

#define PNG_FILTER_HEURISTIC_UNWEIGHTED 1

#define PNG_CRC_WARN_DISCARD 2

#define PNG_FILTER_TYPE_DEFAULT 0

#define PNG_FILTER_VALUE_SUB 1

#define PNG_COLOR_TYPE_RGB_ALPHA 6

#define RPC_X_ENUM_VALUE_TOO_LARGE 1781

#define RPC_S_ASYNC_CALL_PENDING 997

#define RPC_S_OUT_OF_THREADS 164

#define RPC_X_NO_MEMORY 14

#define RPC_X_INVALID_BUFFER 1784

#define RPC_S_OUT_OF_MEMORY 14

#define RPC_S_TIMEOUT 1460

#define RPC_S_ACCESS_DENIED 5

#define RPC_X_SS_CONTEXT_MISMATCH 6

#define RPC_S_BUFFER_TOO_SMALL 122

#define RPC_S_INVALID_LEVEL 87

#define RPC_X_INVALID_BOUND 1734

#define RPC_S_INVALID_ARG 87

#define RPC_S_SERVER_OUT_OF_MEMORY 1130

#define RPC_X_PIPE_APP_MEMORY 14

#define RPC_S_OK 0

#define RPC_X_INVALID_TAG 1733

#define RPC_X_INVALID_PIPE_OPERATION 1831

#define RPC_S_INVALID_SECURITY_DESC 1338

#define RPC_S_UNKNOWN_PRINCIPAL 1332

typedef struct __JUMP_BUFFER __JUMP_BUFFER, *P__JUMP_BUFFER;

struct __JUMP_BUFFER {
    ulong Ebp;
    ulong Ebx;
    ulong Edi;
    ulong Esi;
    ulong Esp;
    ulong Eip;
    ulong Registration;
    ulong TryLevel;
    ulong Cookie;
    ulong UnwindFunc;
    ulong UnwindData[6];
};

typedef struct __JUMP_BUFFER _JUMP_BUFFER;

#define _JBLEN 16

typedef struct _COORD _COORD, *P_COORD;

typedef struct _COORD COORD;

struct _COORD {
    SHORT X;
    SHORT Y;
};

typedef struct _SMALL_RECT _SMALL_RECT, *P_SMALL_RECT;

struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD _WINDOW_BUFFER_SIZE_RECORD, *P_WINDOW_BUFFER_SIZE_RECORD;

struct _WINDOW_BUFFER_SIZE_RECORD {
    COORD dwSize;
};

typedef struct _CHAR_INFO _CHAR_INFO, *P_CHAR_INFO;

typedef struct _CHAR_INFO CHAR_INFO;

typedef union _union_612.conflict _union_612.conflict, *P_union_612.conflict;

union _union_612.conflict {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _CHAR_INFO {
    union _union_612.conflict Char;
    WORD Attributes;
};

typedef struct _INPUT_RECORD _INPUT_RECORD, *P_INPUT_RECORD;

typedef struct _INPUT_RECORD INPUT_RECORD;

typedef union _union_610 _union_610, *P_union_610;

typedef struct _KEY_EVENT_RECORD _KEY_EVENT_RECORD, *P_KEY_EVENT_RECORD;

typedef struct _KEY_EVENT_RECORD KEY_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD _MOUSE_EVENT_RECORD, *P_MOUSE_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;

typedef struct _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;

typedef struct _MENU_EVENT_RECORD _MENU_EVENT_RECORD, *P_MENU_EVENT_RECORD;

typedef struct _MENU_EVENT_RECORD MENU_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD _FOCUS_EVENT_RECORD, *P_FOCUS_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;

typedef union _union_604 _union_604, *P_union_604;

union _union_604 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _MENU_EVENT_RECORD {
    UINT dwCommandId;
};

struct _KEY_EVENT_RECORD {
    BOOL bKeyDown;
    WORD wRepeatCount;
    WORD wVirtualKeyCode;
    WORD wVirtualScanCode;
    union _union_604 uChar;
    DWORD dwControlKeyState;
};

struct _MOUSE_EVENT_RECORD {
    COORD dwMousePosition;
    DWORD dwButtonState;
    DWORD dwControlKeyState;
    DWORD dwEventFlags;
};

struct _FOCUS_EVENT_RECORD {
    BOOL bSetFocus;
};

union _union_610 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

struct _INPUT_RECORD {
    WORD EventType;
    union _union_610 Event;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFO _CONSOLE_SCREEN_BUFFER_INFO, *P_CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _SMALL_RECT SMALL_RECT;

struct _CONSOLE_SCREEN_BUFFER_INFO {
    COORD dwSize;
    COORD dwCursorPosition;
    WORD wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
};

typedef struct _CONSOLE_CURSOR_INFO _CONSOLE_CURSOR_INFO, *P_CONSOLE_CURSOR_INFO;

typedef struct _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;

struct _CONSOLE_CURSOR_INFO {
    DWORD dwSize;
    BOOL bVisible;
};

typedef struct _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;

typedef struct _KEY_EVENT_RECORD *PKEY_EVENT_RECORD;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CHAR_INFO *PCHAR_INFO;

typedef struct _CONSOLE_FONT_INFO _CONSOLE_FONT_INFO, *P_CONSOLE_FONT_INFO;

struct _CONSOLE_FONT_INFO {
    DWORD nFont;
    COORD dwFontSize;
};

typedef BOOL (*PHANDLER_ROUTINE)(DWORD);

typedef struct _FOCUS_EVENT_RECORD *PFOCUS_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD *PMOUSE_EVENT_RECORD;

typedef union _union_606 _union_606, *P_union_606;

union _union_606 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_963 _union_963, *P_union_963;

union _union_963 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_961 _union_961, *P_union_961;

union _union_961 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

typedef struct _WINDOW_BUFFER_SIZE_RECORD *PWINDOW_BUFFER_SIZE_RECORD;

typedef union _union_614 _union_614, *P_union_614;

union _union_614 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef union _union_612 _union_612, *P_union_612;

union _union_612 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

typedef struct _CONSOLE_FONT_INFO *PCONSOLE_FONT_INFO;

typedef struct _CONSOLE_FONT_INFO CONSOLE_FONT_INFO;

typedef struct _COORD *PCOORD;

typedef struct _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;

typedef union _union_955 _union_955, *P_union_955;

union _union_955 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

typedef struct _INPUT_RECORD *PINPUT_RECORD;

typedef struct _SMALL_RECT *PSMALL_RECT;

#define FROM_LEFT_1ST_BUTTON_PRESSED 1

#define ENABLE_PROCESSED_OUTPUT 1

#define NLS_DBCSCHAR 65536

#define CAPSLOCK_ON 128

#define COMMON_LVB_GRID_RVERTICAL 4096

#define NUMLOCK_ON 32

#define MOUSE_WHEELED 4

#define MOUSE_MOVED 1

#define BACKGROUND_BLUE 16

#define FROM_LEFT_2ND_BUTTON_PRESSED 4

#define LEFT_CTRL_PRESSED 8

#define FOREGROUND_BLUE 1

#define WINDOW_BUFFER_SIZE_EVENT 4

#define NLS_IME_DISABLE 536870912

#define COMMON_LVB_SBCSDBCS 768

#define FOCUS_EVENT 16

#define COMMON_LVB_UNDERSCORE 32768

#define FOREGROUND_INTENSITY 8

#define NLS_IME_CONVERSION 8388608

#define CTRL_LOGOFF_EVENT 5

#define RIGHTMOST_BUTTON_PRESSED 2

#define NLS_KATAKANA 131072

#define ENABLE_LINE_INPUT 2

#define BACKGROUND_GREEN 32

#define SCROLLLOCK_ON 64

#define FOREGROUND_RED 4

#define COMMON_LVB_GRID_HORIZONTAL 1024

#define COMMON_LVB_GRID_LVERTICAL 2048

#define CONSOLE_TEXTMODE_BUFFER 1

#define NLS_HIRAGANA 262144

#define NLS_ROMAN 4194304

#define COMMON_LVB_TRAILING_BYTE 512

#define COMMON_LVB_REVERSE_VIDEO 16384

#define COMMON_LVB_LEADING_BYTE 256

#define BACKGROUND_RED 64

#define ENABLE_MOUSE_INPUT 16

#define CTRL_BREAK_EVENT 1

#define FROM_LEFT_4TH_BUTTON_PRESSED 16

#define ENABLE_WRAP_AT_EOL_OUTPUT 2

#define KEY_EVENT 1

#define CTRL_SHUTDOWN_EVENT 6

#define MENU_EVENT 8

#define CTRL_CLOSE_EVENT 2

#define ENABLE_PROCESSED_INPUT 1

#define ENABLE_WINDOW_INPUT 8

#define NLS_ALPHANUMERIC 0

#define DOUBLE_CLICK 2

#define ENHANCED_KEY 256

#define LEFT_ALT_PRESSED 2

#define FOREGROUND_GREEN 2

#define CTRL_C_EVENT 0

#define MOUSE_EVENT 2

#define RIGHT_ALT_PRESSED 1

#define FROM_LEFT_3RD_BUTTON_PRESSED 8

#define RIGHT_CTRL_PRESSED 4

#define SHIFT_PRESSED 16

#define BACKGROUND_INTENSITY 128

#define ENABLE_ECHO_INPUT 4

typedef GUID FMTID;

typedef FMTID *LPFMTID;

typedef IID *LPIID;

typedef struct _DXFILELOADRESOURCE _DXFILELOADRESOURCE, *P_DXFILELOADRESOURCE;

struct _DXFILELOADRESOURCE {
    HMODULE hModule;
    LPCTSTR lpName;
    LPCTSTR lpType;
};

typedef struct IDirectXFileData IDirectXFileData, *PIDirectXFileData;

typedef struct IDirectXFileData *LPDIRECTXFILEDATA;

typedef struct IDirectXFileDataVtbl IDirectXFileDataVtbl, *PIDirectXFileDataVtbl;

typedef struct IDirectXFileObject IDirectXFileObject, *PIDirectXFileObject;

typedef struct IDirectXFileObject *LPDIRECTXFILEOBJECT;

typedef struct IDirectXFileObjectVtbl IDirectXFileObjectVtbl, *PIDirectXFileObjectVtbl;

struct IDirectXFileDataVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileData *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileData *);
    ULONG (*Release)(struct IDirectXFileData *);
    HRESULT (*GetName)(struct IDirectXFileData *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileData *, LPGUID);
    HRESULT (*GetData)(struct IDirectXFileData *, LPCSTR, DWORD *, void **);
    HRESULT (*GetType)(struct IDirectXFileData *, GUID **);
    HRESULT (*GetNextObject)(struct IDirectXFileData *, LPDIRECTXFILEOBJECT *);
    HRESULT (*AddDataObject)(struct IDirectXFileData *, LPDIRECTXFILEDATA);
    HRESULT (*AddDataReference)(struct IDirectXFileData *, LPCSTR, GUID *);
    HRESULT (*AddBinaryObject)(struct IDirectXFileData *, LPCSTR, GUID *, LPCSTR, LPVOID, DWORD);
};

struct IDirectXFileObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileObject *);
    ULONG (*Release)(struct IDirectXFileObject *);
    HRESULT (*GetName)(struct IDirectXFileObject *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileObject *, LPGUID);
};

struct IDirectXFileObject {
    struct IDirectXFileObjectVtbl *lpVtbl;
};

struct IDirectXFileData {
    struct IDirectXFileDataVtbl *lpVtbl;
};

typedef struct IDirectXFileEnumObject IDirectXFileEnumObject, *PIDirectXFileEnumObject;

typedef struct IDirectXFileEnumObjectVtbl IDirectXFileEnumObjectVtbl, *PIDirectXFileEnumObjectVtbl;

struct IDirectXFileEnumObject {
    struct IDirectXFileEnumObjectVtbl *lpVtbl;
};

struct IDirectXFileEnumObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileEnumObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileEnumObject *);
    ULONG (*Release)(struct IDirectXFileEnumObject *);
    HRESULT (*GetNextDataObject)(struct IDirectXFileEnumObject *, LPDIRECTXFILEDATA *);
    HRESULT (*GetDataObjectById)(struct IDirectXFileEnumObject *, GUID *, LPDIRECTXFILEDATA *);
    HRESULT (*GetDataObjectByName)(struct IDirectXFileEnumObject *, LPCSTR, LPDIRECTXFILEDATA *);
};

typedef struct IDirectXFileVtbl IDirectXFileVtbl, *PIDirectXFileVtbl;

typedef struct IDirectXFile IDirectXFile, *PIDirectXFile;

typedef DWORD DXFILELOADOPTIONS;

typedef struct IDirectXFileEnumObject *LPDIRECTXFILEENUMOBJECT;

typedef DWORD DXFILEFORMAT;

typedef struct IDirectXFileSaveObject IDirectXFileSaveObject, *PIDirectXFileSaveObject;

typedef struct IDirectXFileSaveObject *LPDIRECTXFILESAVEOBJECT;

typedef struct IDirectXFileSaveObjectVtbl IDirectXFileSaveObjectVtbl, *PIDirectXFileSaveObjectVtbl;

struct IDirectXFileSaveObjectVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileSaveObject *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileSaveObject *);
    ULONG (*Release)(struct IDirectXFileSaveObject *);
    HRESULT (*SaveTemplates)(struct IDirectXFileSaveObject *, DWORD, GUID **);
    HRESULT (*CreateDataObject)(struct IDirectXFileSaveObject *, GUID *, LPCSTR, GUID *, DWORD, LPVOID, LPDIRECTXFILEDATA *);
    HRESULT (*SaveData)(struct IDirectXFileSaveObject *, LPDIRECTXFILEDATA);
};

struct IDirectXFileVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFile *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFile *);
    ULONG (*Release)(struct IDirectXFile *);
    HRESULT (*CreateEnumObject)(struct IDirectXFile *, LPVOID, DXFILELOADOPTIONS, LPDIRECTXFILEENUMOBJECT *);
    HRESULT (*CreateSaveObject)(struct IDirectXFile *, LPCSTR, DXFILEFORMAT, LPDIRECTXFILESAVEOBJECT *);
    HRESULT (*RegisterTemplates)(struct IDirectXFile *, LPVOID, DWORD);
};

struct IDirectXFileSaveObject {
    struct IDirectXFileSaveObjectVtbl *lpVtbl;
};

struct IDirectXFile {
    struct IDirectXFileVtbl *lpVtbl;
};

typedef struct _DXFILELOADRESOURCE *LPDXFILELOADRESOURCE;

typedef struct IDirectXFileDataReferenceVtbl IDirectXFileDataReferenceVtbl, *PIDirectXFileDataReferenceVtbl;

typedef struct IDirectXFileDataReference IDirectXFileDataReference, *PIDirectXFileDataReference;

struct IDirectXFileDataReferenceVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileDataReference *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileDataReference *);
    ULONG (*Release)(struct IDirectXFileDataReference *);
    HRESULT (*GetName)(struct IDirectXFileDataReference *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileDataReference *, LPGUID);
    HRESULT (*Resolve)(struct IDirectXFileDataReference *, LPDIRECTXFILEDATA *);
};

struct IDirectXFileDataReference {
    struct IDirectXFileDataReferenceVtbl *lpVtbl;
};

typedef struct IDirectXFileEnumObject **LPLPDIRECTXFILEENUMOBJECT;

typedef struct IDirectXFileSaveObject **LPLPDIRECTXFILESAVEOBJECT;

typedef struct IDirectXFileBinary IDirectXFileBinary, *PIDirectXFileBinary;

typedef struct IDirectXFileBinary *LPDIRECTXFILEBINARY;

typedef struct IDirectXFileBinaryVtbl IDirectXFileBinaryVtbl, *PIDirectXFileBinaryVtbl;

struct IDirectXFileBinaryVtbl {
    HRESULT (*QueryInterface)(struct IDirectXFileBinary *, IID *, LPVOID *);
    ULONG (*AddRef)(struct IDirectXFileBinary *);
    ULONG (*Release)(struct IDirectXFileBinary *);
    HRESULT (*GetName)(struct IDirectXFileBinary *, LPSTR, LPDWORD);
    HRESULT (*GetId)(struct IDirectXFileBinary *, LPGUID);
    HRESULT (*GetSize)(struct IDirectXFileBinary *, DWORD *);
    HRESULT (*GetMimeType)(struct IDirectXFileBinary *, LPCSTR *);
    HRESULT (*Read)(struct IDirectXFileBinary *, LPVOID, DWORD, LPDWORD);
};

struct IDirectXFileBinary {
    struct IDirectXFileBinaryVtbl *lpVtbl;
};

typedef struct IDirectXFileBinary **LPLPDIRECTXFILEBINARY;

typedef struct _DXFILELOADRESOURCE DXFILELOADRESOURCE;

typedef struct IDirectXFile **LPLPDIRECTXFILE;

typedef struct IDirectXFile *LPDIRECTXFILE;

typedef struct _DXFILELOADMEMORY _DXFILELOADMEMORY, *P_DXFILELOADMEMORY;

typedef struct _DXFILELOADMEMORY DXFILELOADMEMORY;

struct _DXFILELOADMEMORY {
    LPVOID lpMemory;
    DWORD dSize;
};

typedef struct IDirectXFileData **LPLPDIRECTXFILEDATA;

typedef struct _DXFILELOADMEMORY *LPDXFILELOADMEMORY;

typedef struct IDirectXFileDataReference **LPLPDIRECTXFILEDATAREFERENCE;

typedef struct IDirectXFileObject **LPLPDIRECTXFILEOBJECT;

typedef struct IDirectXFileDataReference *LPDIRECTXFILEDATAREFERENCE;

#define DXFILELOAD_FROMMEMORY 2

#define DXFILE_OK 0

#define DXFILEERR_BADARRAYSIZE 2289435492

#define DXFILEFORMAT_TEXT 1

#define DXFILEERR_BADFILEFLOATSIZE 2289435487

#define DXFILEERR_NOMORESTREAMHANDLES 2289435497

#define DXFILEERR_BADFILECOMPRESSIONTYPE 2289435488

#define DXFILEERR_BADINTRINSICS 2289435496

#define DXFILEERR_NOMOREDATA 2289435498

#define DXFILELOAD_FROMFILE 0

#define DXFILELOAD_FROMURL 8

#define DXFILEERR_BADDATAREFERENCE 2289435493

#define DXFILEERR_BADTYPE 2289435476

#define DXFILEERR_BADRESOURCE 2289435484

#define DXFILEERR_INTERNALERROR 2289435494

#define DXFILELOAD_FROMSTREAM 4

#define _FACDD 2166

#define DXFILEFORMAT_BINARY 0

#define DXFILEERR_BADSTREAMHANDLE 2289435477

#define DXFILEERR_BADOBJECT 2289435474

#define DXFILEERR_URLNOTFOUND 2289435483

#define DXFILEERR_PARSEERROR 2289435490

#define DXFILEERR_BADVALUE 2289435475

#define DXFILELOAD_FROMRESOURCE 1

#define DXFILEERR_BADCACHEFILE 2289435499

#define DXFILEERR_NOINTERNET 2289435500

#define DXFILEERR_RESOURCENOTFOUND 2289435482

#define DXFILEERR_NOTEMPLATE 2289435491

#define DXFILEERR_BADFILETYPE 2289435485

#define DXFILEERR_NOMOREOBJECTS 2289435495

#define DXFILEERR_BADALLOC 2289435478

#define DXFILEERR_NOTFOUND 2289435479

#define DXFILEERR_FILENOTFOUND 2289435481

#define DXFILEERR_BADFILE 2289435489

#define DXFILEERR_BADFILEVERSION 2289435486

#define DXFILEFORMAT_COMPRESSED 2

#define DXFILEERR_NOTDONEYET 2289435480

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO _CMSG_KEY_AGREE_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER _CRYPT_ALGORITHM_IDENTIFIER, *P_CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPTOAPI_BLOB _CRYPTOAPI_BLOB, *P_CRYPTOAPI_BLOB;

typedef struct _CRYPTOAPI_BLOB CRYPT_DATA_BLOB;

typedef union _union_1089 _union_1089, *P_union_1089;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CRYPTOAPI_BLOB CRYPT_OBJID_BLOB;

typedef struct _CERT_ID _CERT_ID, *P_CERT_ID;

typedef struct _CERT_ID CERT_ID;

typedef struct _CERT_PUBLIC_KEY_INFO _CERT_PUBLIC_KEY_INFO, *P_CERT_PUBLIC_KEY_INFO;

typedef struct _CERT_PUBLIC_KEY_INFO CERT_PUBLIC_KEY_INFO;

typedef union _union_1048 _union_1048, *P_union_1048;

typedef struct _CRYPT_BIT_BLOB _CRYPT_BIT_BLOB, *P_CRYPT_BIT_BLOB;

typedef struct _CRYPT_BIT_BLOB CRYPT_BIT_BLOB;

typedef struct _CERT_ISSUER_SERIAL_NUMBER _CERT_ISSUER_SERIAL_NUMBER, *P_CERT_ISSUER_SERIAL_NUMBER;

typedef struct _CERT_ISSUER_SERIAL_NUMBER CERT_ISSUER_SERIAL_NUMBER;

typedef struct _CRYPTOAPI_BLOB CRYPT_HASH_BLOB;

typedef struct _CRYPTOAPI_BLOB CERT_NAME_BLOB;

typedef struct _CRYPTOAPI_BLOB CRYPT_INTEGER_BLOB;

struct _CRYPTOAPI_BLOB {
    DWORD cbData;
    BYTE *pbData;
};

struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
    DWORD cbSize;
    CRYPT_DATA_BLOB EncryptedKey;
};

struct _CRYPT_ALGORITHM_IDENTIFIER {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

struct _CRYPT_BIT_BLOB {
    DWORD cbData;
    BYTE *pbData;
    DWORD cUnusedBits;
};

struct _CERT_PUBLIC_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_BIT_BLOB PublicKey;
};

struct _CERT_ISSUER_SERIAL_NUMBER {
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
};

union _union_1048 {
    CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    CRYPT_HASH_BLOB KeyId;
    CRYPT_HASH_BLOB HashId;
};

struct _CERT_ID {
    DWORD dwIdChoice;
    union _union_1048 field1_0x4;
};

union _union_1089 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD dwOriginatorChoice;
    union _union_1089 field5_0x20;
    DWORD cKeyAgreeKeyEncryptInfo;
    PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO *rgpKeyAgreeKeyEncryptInfo;
    DWORD dwFlags;
};

typedef struct _CMSG_CTRL_DECRYPT_PARA _CMSG_CTRL_DECRYPT_PARA, *P_CMSG_CTRL_DECRYPT_PARA;

typedef ULONG_PTR HCRYPTPROV;

struct _CMSG_CTRL_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    DWORD dwRecipientIndex;
};

typedef struct _CERT_REVOCATION_CRL_INFO _CERT_REVOCATION_CRL_INFO, *P_CERT_REVOCATION_CRL_INFO;

typedef struct _CRL_CONTEXT _CRL_CONTEXT, *P_CRL_CONTEXT;

typedef struct _CRL_CONTEXT CRL_CONTEXT;

typedef CRL_CONTEXT *PCCRL_CONTEXT;

typedef struct _CRL_ENTRY _CRL_ENTRY, *P_CRL_ENTRY;

typedef struct _CRL_ENTRY *PCRL_ENTRY;

typedef struct _CRL_INFO _CRL_INFO, *P_CRL_INFO;

typedef struct _CRL_INFO *PCRL_INFO;

typedef void *HCERTSTORE;

typedef struct _CERT_EXTENSION _CERT_EXTENSION, *P_CERT_EXTENSION;

typedef struct _CERT_EXTENSION *PCERT_EXTENSION;

struct _CERT_REVOCATION_CRL_INFO {
    DWORD cbSize;
    PCCRL_CONTEXT pBaseCrlContext;
    PCCRL_CONTEXT pDeltaCrlContext;
    PCRL_ENTRY pCrlEntry;
    BOOL fDeltaCrlEntry;
};

struct _CRL_ENTRY {
    CRYPT_INTEGER_BLOB SerialNumber;
    FILETIME RevocationDate;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CRL_INFO {
    DWORD dwVersion;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    DWORD cCRLEntry;
    PCRL_ENTRY rgCRLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CERT_EXTENSION {
    LPSTR pszObjId;
    BOOL fCritical;
    CRYPT_OBJID_BLOB Value;
};

struct _CRL_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE *pbCrlEncoded;
    DWORD cbCrlEncoded;
    PCRL_INFO pCrlInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CROSS_CERT_DIST_POINTS_INFO _CROSS_CERT_DIST_POINTS_INFO, *P_CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CERT_ALT_NAME_INFO _CERT_ALT_NAME_INFO, *P_CERT_ALT_NAME_INFO;

typedef struct _CERT_ALT_NAME_INFO *PCERT_ALT_NAME_INFO;

typedef struct _CERT_ALT_NAME_ENTRY _CERT_ALT_NAME_ENTRY, *P_CERT_ALT_NAME_ENTRY;

typedef struct _CERT_ALT_NAME_ENTRY *PCERT_ALT_NAME_ENTRY;

typedef union _union_992 _union_992, *P_union_992;

typedef struct _CERT_OTHER_NAME _CERT_OTHER_NAME, *P_CERT_OTHER_NAME;

typedef struct _CERT_OTHER_NAME *PCERT_OTHER_NAME;

struct _CERT_ALT_NAME_INFO {
    DWORD cAltEntry;
    PCERT_ALT_NAME_ENTRY rgAltEntry;
};

struct _CROSS_CERT_DIST_POINTS_INFO {
    DWORD dwSyncDeltaTime;
    DWORD cDistPoint;
    PCERT_ALT_NAME_INFO rgDistPoint;
};

union _union_992 {
    PCERT_OTHER_NAME pOtherName;
    LPWSTR pwszRfc822Name;
    LPWSTR pwszDNSName;
    CERT_NAME_BLOB DirectoryName;
    LPWSTR pwszURL;
    CRYPT_DATA_BLOB IPAddress;
    LPSTR pszRegisteredID;
};

struct _CERT_ALT_NAME_ENTRY {
    DWORD dwAltNameChoice;
    union _union_992 field1_0x4;
};

struct _CERT_OTHER_NAME {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _CTL_FIND_USAGE_PARA _CTL_FIND_USAGE_PARA, *P_CTL_FIND_USAGE_PARA;

typedef struct _CTL_FIND_USAGE_PARA *PCTL_FIND_USAGE_PARA;

typedef struct _CTL_USAGE _CTL_USAGE, *P_CTL_USAGE;

typedef struct _CTL_USAGE CTL_USAGE;

typedef struct _CERT_INFO _CERT_INFO, *P_CERT_INFO;

typedef struct _CERT_INFO *PCERT_INFO;

struct _CTL_USAGE {
    DWORD cUsageIdentifier;
    LPSTR *rgpszUsageIdentifier;
};

struct _CTL_FIND_USAGE_PARA {
    DWORD cbSize;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    PCERT_INFO pSigner;
};

struct _CERT_INFO {
    DWORD dwVersion;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME NotBefore;
    FILETIME NotAfter;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    CRYPT_BIT_BLOB IssuerUniqueId;
    CRYPT_BIT_BLOB SubjectUniqueId;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CERT_STORE_PROV_INFO _CERT_STORE_PROV_INFO, *P_CERT_STORE_PROV_INFO;

typedef struct _CERT_STORE_PROV_INFO CERT_STORE_PROV_INFO;

typedef void *HCERTSTOREPROV;

typedef void *HCRYPTOIDFUNCADDR;

struct _CERT_STORE_PROV_INFO {
    DWORD cbSize;
    DWORD cStoreProvFunc;
    void **rgpvStoreProvFunc;
    HCERTSTOREPROV hStoreProv;
    DWORD dwStoreProvFlags;
    HCRYPTOIDFUNCADDR hStoreProvFuncAddr2;
};

typedef struct _CERT_CONTEXT _CERT_CONTEXT, *P_CERT_CONTEXT;

typedef struct _CERT_CONTEXT CERT_CONTEXT;

struct _CERT_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE *pbCertEncoded;
    DWORD cbCertEncoded;
    PCERT_INFO pCertInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CERT_CHAIN_CONTEXT _CERT_CHAIN_CONTEXT, *P_CERT_CHAIN_CONTEXT;

typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT;

typedef CERT_CHAIN_CONTEXT *PCCERT_CHAIN_CONTEXT;

typedef struct _CERT_TRUST_STATUS _CERT_TRUST_STATUS, *P_CERT_TRUST_STATUS;

typedef struct _CERT_TRUST_STATUS CERT_TRUST_STATUS;

typedef struct _CERT_SIMPLE_CHAIN _CERT_SIMPLE_CHAIN, *P_CERT_SIMPLE_CHAIN;

typedef struct _CERT_SIMPLE_CHAIN *PCERT_SIMPLE_CHAIN;

typedef struct _CERT_CHAIN_ELEMENT _CERT_CHAIN_ELEMENT, *P_CERT_CHAIN_ELEMENT;

typedef struct _CERT_CHAIN_ELEMENT *PCERT_CHAIN_ELEMENT;

typedef struct _CERT_TRUST_LIST_INFO _CERT_TRUST_LIST_INFO, *P_CERT_TRUST_LIST_INFO;

typedef struct _CERT_TRUST_LIST_INFO *PCERT_TRUST_LIST_INFO;

typedef CERT_CONTEXT *PCCERT_CONTEXT;

typedef struct _CERT_REVOCATION_INFO _CERT_REVOCATION_INFO, *P_CERT_REVOCATION_INFO;

typedef struct _CERT_REVOCATION_INFO *PCERT_REVOCATION_INFO;

typedef struct _CTL_USAGE *PCERT_ENHKEY_USAGE;

typedef struct _CTL_ENTRY _CTL_ENTRY, *P_CTL_ENTRY;

typedef struct _CTL_ENTRY *PCTL_ENTRY;

typedef struct _CTL_CONTEXT _CTL_CONTEXT, *P_CTL_CONTEXT;

typedef struct _CTL_CONTEXT CTL_CONTEXT;

typedef CTL_CONTEXT *PCCTL_CONTEXT;

typedef struct _CERT_REVOCATION_CRL_INFO *PCERT_REVOCATION_CRL_INFO;

typedef struct _CRYPT_ATTRIBUTE _CRYPT_ATTRIBUTE, *P_CRYPT_ATTRIBUTE;

typedef struct _CRYPT_ATTRIBUTE *PCRYPT_ATTRIBUTE;

typedef struct _CTL_INFO _CTL_INFO, *P_CTL_INFO;

typedef struct _CTL_INFO *PCTL_INFO;

typedef void *HCRYPTMSG;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_ATTR_BLOB;

struct _CERT_TRUST_STATUS {
    DWORD dwErrorStatus;
    DWORD dwInfoStatus;
};

struct _CERT_CHAIN_ELEMENT {
    DWORD cbSize;
    PCCERT_CONTEXT pCertContext;
    CERT_TRUST_STATUS TrustStatus;
    PCERT_REVOCATION_INFO pRevocationInfo;
    PCERT_ENHKEY_USAGE pIssuanceUsage;
    PCERT_ENHKEY_USAGE pApplicationUsage;
    LPCWSTR pwszExtendedErrorInfo;
};

struct _CERT_SIMPLE_CHAIN {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cElement;
    PCERT_CHAIN_ELEMENT *rgpElement;
    PCERT_TRUST_LIST_INFO pTrustListInfo;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
};

struct _CTL_INFO {
    DWORD dwVersion;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    CRYPT_INTEGER_BLOB SequenceNumber;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    DWORD cCTLEntry;
    PCTL_ENTRY rgCTLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CERT_REVOCATION_INFO {
    DWORD cbSize;
    DWORD dwRevocationResult;
    LPCSTR pszRevocationOid;
    LPVOID pvOidSpecificInfo;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
    PCERT_REVOCATION_CRL_INFO pCrlInfo;
};

struct _CTL_CONTEXT {
    DWORD dwMsgAndCertEncodingType;
    BYTE *pbCtlEncoded;
    DWORD cbCtlEncoded;
    PCTL_INFO pCtlInfo;
    HCERTSTORE hCertStore;
    HCRYPTMSG hCryptMsg;
    BYTE *pbCtlContent;
    DWORD cbCtlContent;
};

struct _CERT_CHAIN_CONTEXT {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cChain;
    PCERT_SIMPLE_CHAIN *rgpChain;
    DWORD cLowerQualityChainContext;
    PCCERT_CHAIN_CONTEXT *rgpLowerQualityChainContext;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
};

struct _CRYPT_ATTRIBUTE {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_ATTR_BLOB rgValue;
};

struct _CERT_TRUST_LIST_INFO {
    DWORD cbSize;
    PCTL_ENTRY pCtlEntry;
    PCCTL_CONTEXT pCtlContext;
};

struct _CTL_ENTRY {
    CRYPT_DATA_BLOB SubjectIdentifier;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE _CRYPT_ATTRIBUTE_TYPE_VALUE, *P_CRYPT_ATTRIBUTE_TYPE_VALUE;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE CRYPT_ATTRIBUTE_TYPE_VALUE;

struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _CERT_SIGNED_CONTENT_INFO _CERT_SIGNED_CONTENT_INFO, *P_CERT_SIGNED_CONTENT_INFO;

typedef struct _CERT_SIGNED_CONTENT_INFO CERT_SIGNED_CONTENT_INFO;

typedef struct _CRYPTOAPI_BLOB CRYPT_DER_BLOB;

struct _CERT_SIGNED_CONTENT_INFO {
    CRYPT_DER_BLOB ToBeSigned;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CRYPT_BIT_BLOB Signature;
};

typedef struct _CERT_SYSTEM_STORE_INFO _CERT_SYSTEM_STORE_INFO, *P_CERT_SYSTEM_STORE_INFO;

typedef struct _CERT_SYSTEM_STORE_INFO CERT_SYSTEM_STORE_INFO;

struct _CERT_SYSTEM_STORE_INFO {
    DWORD cbSize;
};

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO _CERT_KEY_USAGE_RESTRICTION_INFO, *P_CERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_POLICY_ID _CERT_POLICY_ID, *P_CERT_POLICY_ID;

typedef struct _CERT_POLICY_ID *PCERT_POLICY_ID;

struct _CERT_KEY_USAGE_RESTRICTION_INFO {
    DWORD cCertPolicyId;
    PCERT_POLICY_ID rgCertPolicyId;
    CRYPT_BIT_BLOB RestrictedKeyUsage;
};

struct _CERT_POLICY_ID {
    DWORD cCertPolicyElementId;
    LPSTR *rgpszCertPolicyElementId;
};

typedef struct _CRYPTOAPI_BLOB CRYPT_UINT_BLOB;

typedef struct _CRYPT_BLOB_ARRAY _CRYPT_BLOB_ARRAY, *P_CRYPT_BLOB_ARRAY;

typedef struct _CRYPT_BLOB_ARRAY CRYPT_BLOB_ARRAY;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DATA_BLOB;

struct _CRYPT_BLOB_ARRAY {
    DWORD cBlob;
    PCRYPT_DATA_BLOB rgBlob;
};

typedef struct _CMC_TAGGED_CERT_REQUEST _CMC_TAGGED_CERT_REQUEST, *P_CMC_TAGGED_CERT_REQUEST;

struct _CMC_TAGGED_CERT_REQUEST {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB SignedCertRequest;
};

typedef struct _CERT_CREATE_CONTEXT_PARA _CERT_CREATE_CONTEXT_PARA, *P_CERT_CREATE_CONTEXT_PARA;

typedef void (*PFN_CRYPT_FREE)(LPVOID);

struct _CERT_CREATE_CONTEXT_PARA {
    DWORD cbSize;
    PFN_CRYPT_FREE pfnFree;
    void *pvFree;
};

typedef struct _CRYPT_URL_ARRAY _CRYPT_URL_ARRAY, *P_CRYPT_URL_ARRAY;

typedef struct _CRYPT_URL_ARRAY *PCRYPT_URL_ARRAY;

struct _CRYPT_URL_ARRAY {
    DWORD cUrl;
    LPWSTR *rgwszUrl;
};

typedef struct _CRYPT_OID_INFO _CRYPT_OID_INFO, *P_CRYPT_OID_INFO;

typedef union _union_1045 _union_1045, *P_union_1045;

union _union_1045 {
    DWORD dwValue;
    ALG_ID Algid;
    DWORD dwLength;
};

struct _CRYPT_OID_INFO {
    DWORD cbSize;
    LPCSTR pszOID;
    LPCWSTR pwszName;
    DWORD dwGroupId;
    union _union_1045 field4_0x10;
    CRYPT_DATA_BLOB ExtraInfo;
};

typedef struct _CERT_CHAIN _CERT_CHAIN, *P_CERT_CHAIN;

typedef struct _CRYPTOAPI_BLOB *PCERT_BLOB;

typedef struct _CRYPT_KEY_PROV_INFO _CRYPT_KEY_PROV_INFO, *P_CRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_INFO CRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_PARAM _CRYPT_KEY_PROV_PARAM, *P_CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_KEY_PROV_PARAM *PCRYPT_KEY_PROV_PARAM;

struct _CRYPT_KEY_PROV_PARAM {
    DWORD dwParam;
    BYTE *pbData;
    DWORD cbData;
    DWORD dwFlags;
};

struct _CRYPT_KEY_PROV_INFO {
    LPWSTR pwszContainerName;
    LPWSTR pwszProvName;
    DWORD dwProvType;
    DWORD dwFlags;
    DWORD cProvParam;
    PCRYPT_KEY_PROV_PARAM rgProvParam;
    DWORD dwKeySpec;
};

struct _CERT_CHAIN {
    DWORD cCerts;
    PCERT_BLOB certs;
    CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

typedef struct _CMSG_CMS_SIGNER_INFO _CMSG_CMS_SIGNER_INFO, *P_CMSG_CMS_SIGNER_INFO;

typedef struct _CRYPT_ATTRIBUTES _CRYPT_ATTRIBUTES, *P_CRYPT_ATTRIBUTES;

typedef struct _CRYPT_ATTRIBUTES CRYPT_ATTRIBUTES;

struct _CRYPT_ATTRIBUTES {
    DWORD cAttr;
    PCRYPT_ATTRIBUTE rgAttr;
};

struct _CMSG_CMS_SIGNER_INFO {
    DWORD dwVersion;
    CERT_ID SignerId;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _PUBKEY _PUBKEY, *P_PUBKEY;

typedef struct _PUBKEY TEKPUBKEY;

struct _PUBKEY {
    DWORD magic;
    DWORD bitlen;
};

typedef struct _CERT_NAME_INFO _CERT_NAME_INFO, *P_CERT_NAME_INFO;

typedef struct _CERT_NAME_INFO *PCERT_NAME_INFO;

typedef struct _CERT_RDN _CERT_RDN, *P_CERT_RDN;

typedef struct _CERT_RDN *PCERT_RDN;

typedef struct _CERT_RDN_ATTR _CERT_RDN_ATTR, *P_CERT_RDN_ATTR;

typedef struct _CERT_RDN_ATTR *PCERT_RDN_ATTR;

typedef struct _CRYPTOAPI_BLOB CERT_RDN_VALUE_BLOB;

struct _CERT_RDN {
    DWORD cRDNAttr;
    PCERT_RDN_ATTR rgRDNAttr;
};

struct _CERT_RDN_ATTR {
    LPSTR pszObjId;
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

struct _CERT_NAME_INFO {
    DWORD cRDN;
    PCERT_RDN rgRDN;
};

typedef struct _CRYPT_PRIVATE_KEY_INFO _CRYPT_PRIVATE_KEY_INFO, *P_CRYPT_PRIVATE_KEY_INFO;

typedef struct _CRYPT_PRIVATE_KEY_INFO CRYPT_PRIVATE_KEY_INFO;

typedef BOOL (*PFN_IMPORT_PRIV_KEY_FUNC)(HCRYPTPROV, CRYPT_PRIVATE_KEY_INFO *, DWORD, void *);

typedef struct _CRYPT_ATTRIBUTES *PCRYPT_ATTRIBUTES;

struct _CRYPT_PRIVATE_KEY_INFO {
    DWORD Version;
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_DER_BLOB PrivateKey;
    PCRYPT_ATTRIBUTES pAttributes;
};

typedef struct _CMC_TAGGED_CERT_REQUEST CMC_TAGGED_CERT_REQUEST;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO _CMSG_ENCRYPTED_ENCODE_INFO, *P_CMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO *PCMSG_ENCRYPTED_ENCODE_INFO;

struct _CMSG_ENCRYPTED_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
};

typedef struct _CRYPTOAPI_BLOB CRL_BLOB;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    BOOL fCommercial;
};

typedef struct _CRYPT_SIGN_MESSAGE_PARA _CRYPT_SIGN_MESSAGE_PARA, *P_CRYPT_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_SIGN_MESSAGE_PARA *PCRYPT_SIGN_MESSAGE_PARA;

struct _CRYPT_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    PCCERT_CONTEXT pSigningCert;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    DWORD cMsgCert;
    PCCERT_CONTEXT *rgpMsgCert;
    DWORD cMsgCrl;
    PCCRL_CONTEXT *rgpMsgCrl;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS _CRYPT_RC2_CBC_PARAMETERS, *P_CRYPT_RC2_CBC_PARAMETERS;

struct _CRYPT_RC2_CBC_PARAMETERS {
    DWORD dwVersion;
    BOOL fIV;
    BYTE rgbIV[8];
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO _CMSG_MAIL_LIST_ENCRYPT_INFO, *P_CMSG_MAIL_LIST_ENCRYPT_INFO;

struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef CRYPT_ATTRIBUTES CMSG_ATTR;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef union _union_1058.conflict _union_1058.conflict, *P_union_1058.conflict;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE *PCRYPT_ATTRIBUTE_TYPE_VALUE;

typedef ULONG_PTR HCRYPTKEY;

union _union_1058.conflict {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeyChoice;
    union _union_1058.conflict field5_0x1c;
    CRYPT_DATA_BLOB KeyId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CRYPT_OID_INFO *PCRYPT_OID_INFO;

typedef struct _PUBKEY KEAPUBKEY;

typedef struct _CERT_ACCESS_DESCRIPTION _CERT_ACCESS_DESCRIPTION, *P_CERT_ACCESS_DESCRIPTION;

typedef struct _CERT_ALT_NAME_ENTRY CERT_ALT_NAME_ENTRY;

struct _CERT_ACCESS_DESCRIPTION {
    LPSTR pszAccessMethod;
    CERT_ALT_NAME_ENTRY AccessLocation;
};

typedef struct _CRL_DIST_POINTS_INFO _CRL_DIST_POINTS_INFO, *P_CRL_DIST_POINTS_INFO;

typedef struct _CRL_DIST_POINT _CRL_DIST_POINT, *P_CRL_DIST_POINT;

typedef struct _CRL_DIST_POINT *PCRL_DIST_POINT;

typedef struct _CRL_DIST_POINT_NAME _CRL_DIST_POINT_NAME, *P_CRL_DIST_POINT_NAME;

typedef struct _CRL_DIST_POINT_NAME CRL_DIST_POINT_NAME;

typedef struct _CERT_ALT_NAME_INFO CERT_ALT_NAME_INFO;

typedef union _union_1013 _union_1013, *P_union_1013;

union _union_1013 {
    CERT_ALT_NAME_INFO FullName;
};

struct _CRL_DIST_POINT_NAME {
    DWORD dwDistPointNameChoice;
    union _union_1013 field1_0x4;
};

struct _CRL_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    CRYPT_BIT_BLOB ReasonFlags;
    CERT_ALT_NAME_INFO CRLIssuer;
};

struct _CRL_DIST_POINTS_INFO {
    DWORD cDistPoint;
    PCRL_DIST_POINT rgDistPoint;
};

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *P_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO _CMSG_MAIL_LIST_RECIPIENT_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO *PCMSG_MAIL_LIST_RECIPIENT_INFO;

typedef union _union_1082 _union_1082, *P_union_1082;

union _union_1082 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
    DWORD dwRecipientIndex;
    DWORD dwKeyChoice;
    union _union_1082 field5_0x14;
};

struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
    DWORD dwVersion;
    CRYPT_DATA_BLOB KeyId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CERT_GENERAL_SUBTREE _CERT_GENERAL_SUBTREE, *P_CERT_GENERAL_SUBTREE;

typedef struct _CERT_GENERAL_SUBTREE CERT_GENERAL_SUBTREE;

struct _CERT_GENERAL_SUBTREE {
    CERT_ALT_NAME_ENTRY Base;
    DWORD dwMinimum;
    BOOL fMaximum;
    DWORD dwMaximum;
};

typedef struct _CMS_KEY_INFO _CMS_KEY_INFO, *P_CMS_KEY_INFO;

struct _CMS_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    BYTE *pbOID;
    DWORD cbOID;
};

typedef struct _CRYPT_KEY_LIMITS_V01 _CRYPT_KEY_LIMITS_V01, *P_CRYPT_KEY_LIMITS_V01;

typedef struct _CRYPT_KEY_LIMITS_V01 *PCRYPT_KEY_LIMITS;

struct _CRYPT_KEY_LIMITS_V01 {
    DWORD dwVersion;
    ALG_ID algId;
    DWORD dwMinKeyLength;
    DWORD dwMaxKeyLength;
    DWORD dwRequiredFlags;
    DWORD dwDisallowedFlags;
};

typedef struct _CRYPT_SMIME_CAPABILITIES _CRYPT_SMIME_CAPABILITIES, *P_CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITIES CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITY _CRYPT_SMIME_CAPABILITY, *P_CRYPT_SMIME_CAPABILITY;

typedef struct _CRYPT_SMIME_CAPABILITY *PCRYPT_SMIME_CAPABILITY;

struct _CRYPT_SMIME_CAPABILITIES {
    DWORD cCapability;
    PCRYPT_SMIME_CAPABILITY rgCapability;
};

struct _CRYPT_SMIME_CAPABILITY {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

typedef struct _CRYPTOAPI_BLOB CERT_BLOB;

typedef struct _CERT_NAME_CONSTRAINTS_INFO _CERT_NAME_CONSTRAINTS_INFO, *P_CERT_NAME_CONSTRAINTS_INFO;

typedef struct _CERT_GENERAL_SUBTREE *PCERT_GENERAL_SUBTREE;

struct _CERT_NAME_CONSTRAINTS_INFO {
    DWORD cPermittedSubtree;
    PCERT_GENERAL_SUBTREE rgPermittedSubtree;
    DWORD cExcludedSubtree;
    PCERT_GENERAL_SUBTREE rgExcludedSubtree;
};

typedef struct _CRL_REVOCATION_INFO _CRL_REVOCATION_INFO, *P_CRL_REVOCATION_INFO;

typedef struct _CRL_REVOCATION_INFO *PCRL_REVOCATION_INFO;

struct _CRL_REVOCATION_INFO {
    PCRL_ENTRY pCrlEntry;
    PCCRL_CONTEXT pCrlContext;
    PCCERT_CHAIN_CONTEXT pCrlIssuerChain;
};

typedef struct _CTL_FIND_SUBJECT_PARA _CTL_FIND_SUBJECT_PARA, *P_CTL_FIND_SUBJECT_PARA;

struct _CTL_FIND_SUBJECT_PARA {
    DWORD cbSize;
    PCTL_FIND_USAGE_PARA pUsagePara;
    DWORD dwSubjectType;
    void *pvSubject;
};

typedef struct _CERT_DH_PARAMETERS _CERT_DH_PARAMETERS, *P_CERT_DH_PARAMETERS;

typedef struct _CERT_DH_PARAMETERS *PCERT_DH_PARAMETERS;

struct _CERT_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
};

typedef struct _CERT_PHYSICAL_STORE_INFO _CERT_PHYSICAL_STORE_INFO, *P_CERT_PHYSICAL_STORE_INFO;

struct _CERT_PHYSICAL_STORE_INFO {
    DWORD cbSize;
    LPSTR pszOpenStoreProvider;
    DWORD dwOpenEncodingType;
    DWORD dwOpenFlags;
    CRYPT_DATA_BLOB OpenParameters;
    DWORD dwFlags;
    DWORD dwPriority;
};

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *P_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO _CMSG_SIGNED_ENCODE_INFO, *P_CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO _CMSG_ENVELOPED_ENCODE_INFO, *P_CMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO CMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO _CMSG_SIGNER_ENCODE_INFO, *P_CMSG_SIGNER_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO *PCMSG_SIGNER_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRL_BLOB;

struct _CMSG_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCERT_INFO *rgpRecipients;
};

struct _CMSG_SIGNED_ENCODE_INFO {
    DWORD cbSize;
    DWORD cSigners;
    PCMSG_SIGNER_ENCODE_INFO rgSigners;
    DWORD cCertEncoded;
    PCERT_BLOB rgCertEncoded;
    DWORD cCrlEncoded;
    PCRL_BLOB rgCrlEncoded;
};

struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    CMSG_SIGNED_ENCODE_INFO SignedInfo;
    CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

struct _CMSG_SIGNER_ENCODE_INFO {
    DWORD cbSize;
    PCERT_INFO pCertInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *P_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO _CMSG_KEY_AGREE_RECIPIENT_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO *PCMSG_KEY_AGREE_RECIPIENT_INFO;

typedef union _union_1073 _union_1073, *P_union_1073;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

union _union_1073 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
    DWORD dwVersion;
    DWORD dwOriginatorChoice;
    union _union_1073 field2_0x8;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO *rgpRecipientEncryptedKeys;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
    CERT_ID RecipientId;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    DWORD dwRecipientIndex;
    DWORD dwRecipientEncryptedKeyIndex;
    CRYPT_BIT_BLOB OriginatorPublicKey;
};

typedef struct _PUBKEYVER3 _PUBKEYVER3, *P_PUBKEYVER3;

typedef struct _PUBKEYVER3 DSSPUBKEY_VER3;

typedef struct _DSSSEED _DSSSEED, *P_DSSSEED;

typedef struct _DSSSEED DSSSEED;

struct _DSSSEED {
    DWORD counter;
    BYTE seed[20];
};

struct _PUBKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DSSSEED DSSSeed;
};

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef struct _CERT_CHAIN_POLICY_STATUS _CERT_CHAIN_POLICY_STATUS, *P_CERT_CHAIN_POLICY_STATUS;

typedef struct _CERT_CHAIN_POLICY_STATUS CERT_CHAIN_POLICY_STATUS;

struct _CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    DWORD dwError;
    LONG lChainIndex;
    LONG lElementIndex;
    void *pvExtraPolicyStatus;
};

typedef struct _CMC_DATA_INFO _CMC_DATA_INFO, *P_CMC_DATA_INFO;

typedef struct _CMC_TAGGED_ATTRIBUTE _CMC_TAGGED_ATTRIBUTE, *P_CMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_ATTRIBUTE *PCMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_REQUEST _CMC_TAGGED_REQUEST, *P_CMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_REQUEST *PCMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_CONTENT_INFO _CMC_TAGGED_CONTENT_INFO, *P_CMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_CONTENT_INFO *PCMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_OTHER_MSG _CMC_TAGGED_OTHER_MSG, *P_CMC_TAGGED_OTHER_MSG;

typedef struct _CMC_TAGGED_OTHER_MSG *PCMC_TAGGED_OTHER_MSG;

typedef struct _CRYPT_ATTRIBUTE CRYPT_ATTRIBUTE;

typedef union _union_1032 _union_1032, *P_union_1032;

typedef struct _CMC_TAGGED_CERT_REQUEST *PCMC_TAGGED_CERT_REQUEST;

struct _CMC_DATA_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedRequest;
    PCMC_TAGGED_REQUEST rgTaggedRequest;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

union _union_1032 {
    PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest;
};

struct _CMC_TAGGED_OTHER_MSG {
    DWORD dwBodyPartID;
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

struct _CMC_TAGGED_REQUEST {
    DWORD dwTaggedRequestChoice;
    union _union_1032 field1_0x4;
};

struct _CMC_TAGGED_CONTENT_INFO {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB EncodedContentInfo;
};

struct _CMC_TAGGED_ATTRIBUTE {
    DWORD dwBodyPartID;
    CRYPT_ATTRIBUTE Attribute;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO _CMSG_KEY_TRANS_ENCRYPT_INFO, *P_CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO *PCMSG_KEY_TRANS_ENCRYPT_INFO;

struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO CMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CRYPTOAPI_BLOB DATA_BLOB;

typedef struct _CTL_VERIFY_USAGE_STATUS _CTL_VERIFY_USAGE_STATUS, *P_CTL_VERIFY_USAGE_STATUS;

struct _CTL_VERIFY_USAGE_STATUS {
    DWORD cbSize;
    DWORD dwError;
    DWORD dwFlags;
    PCCTL_CONTEXT *ppCtl;
    DWORD dwCtlEntryIndex;
    PCCERT_CONTEXT *ppSigner;
    DWORD dwSignerIndex;
};

typedef struct _CERT_POLICY_QUALIFIER_INFO _CERT_POLICY_QUALIFIER_INFO, *P_CERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO CERT_POLICY_QUALIFIER_INFO;

struct _CERT_POLICY_QUALIFIER_INFO {
    LPSTR pszPolicyQualifierId;
    CRYPT_OBJID_BLOB Qualifier;
};

typedef struct _CERT_CRL_CONTEXT_PAIR _CERT_CRL_CONTEXT_PAIR, *P_CERT_CRL_CONTEXT_PAIR;

struct _CERT_CRL_CONTEXT_PAIR {
    PCCERT_CONTEXT pCertContext;
    PCCRL_CONTEXT pCrlContext;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO _CMC_ADD_ATTRIBUTES_INFO, *P_CMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMC_ADD_ATTRIBUTES_INFO *PCMC_ADD_ATTRIBUTES_INFO;

struct _CMC_ADD_ATTRIBUTES_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD *rgdwCertReference;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO _CMSG_SP3_COMPATIBLE_AUX_INFO, *P_CMSG_SP3_COMPATIBLE_AUX_INFO;

struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
    DWORD cbSize;
    DWORD dwFlags;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSA _CRYPT_PASSWORD_CREDENTIALSA, *P_CRYPT_PASSWORD_CREDENTIALSA;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALSA;

typedef CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS;

struct _CRYPT_PASSWORD_CREDENTIALSA {
    DWORD cbSize;
    LPSTR pszUsername;
    LPSTR pszPassword;
};

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _PUBKEYVER3 DHPUBKEY_VER3;

typedef struct _CRYPT_OID_FUNC_ENTRY _CRYPT_OID_FUNC_ENTRY, *P_CRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_OID_FUNC_ENTRY CRYPT_OID_FUNC_ENTRY;

struct _CRYPT_OID_FUNC_ENTRY {
    LPCSTR pszOID;
    void *pvFuncAddr;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _KEY_TYPE_SUBTYPE _KEY_TYPE_SUBTYPE, *P_KEY_TYPE_SUBTYPE;

struct _KEY_TYPE_SUBTYPE {
    DWORD dwKeySpec;
    GUID Type;
    GUID Subtype;
};

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA _CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *P_CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
    HKEY hKeyBase;
    LPWSTR pwszRegPath;
};

typedef struct _CRYPTPROTECT_PROMPTSTRUCT _CRYPTPROTECT_PROMPTSTRUCT, *P_CRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT *PCRYPTPROTECT_PROMPTSTRUCT;

struct _CRYPTPROTECT_PROMPTSTRUCT {
    DWORD cbSize;
    DWORD dwPromptFlags;
    HWND hwndApp;
    LPCWSTR szPrompt;
};

typedef struct _CMSG_RECIPIENT_ENCODE_INFO _CMSG_RECIPIENT_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCODE_INFO;

typedef union _union_1060.conflict _union_1060.conflict, *P_union_1060.conflict;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef union _union_1056 _union_1056, *P_union_1056;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER *PCRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CERT_ID *PCERT_ID;

union _union_1056 {
    PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
    PCERT_ID pSenderId;
};

struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    HCRYPTPROV hCryptProv;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
};

union _union_1060.conflict {
    PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList;
};

struct _CMSG_RECIPIENT_ENCODE_INFO {
    DWORD dwRecipientChoice;
    union _union_1060.conflict field1_0x4;
};

struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void *pvKeyEncryptionAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
    void *pvKeyWrapAuxInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    DWORD dwKeyChoice;
    union _union_1056 field8_0x30;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO *rgpRecipientEncryptedKeys;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

typedef struct _CERT_NAME_INFO CERT_NAME_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO *PCMSG_SIGNED_ENCODE_INFO;

typedef struct _CERT_REVOCATION_STATUS _CERT_REVOCATION_STATUS, *P_CERT_REVOCATION_STATUS;

struct _CERT_REVOCATION_STATUS {
    DWORD cbSize;
    DWORD dwIndex;
    DWORD dwError;
    DWORD dwReason;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
};

typedef struct _CRYPT_CREDENTIALS _CRYPT_CREDENTIALS, *P_CRYPT_CREDENTIALS;

struct _CRYPT_CREDENTIALS {
    DWORD cbSize;
    LPCSTR pszCredentialsOid;
    LPVOID pvCredentials;
};

typedef struct _CERT_X942_DH_VALIDATION_PARAMS _CERT_X942_DH_VALIDATION_PARAMS, *P_CERT_X942_DH_VALIDATION_PARAMS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS CERT_X942_DH_VALIDATION_PARAMS;

struct _CERT_X942_DH_VALIDATION_PARAMS {
    CRYPT_BIT_BLOB seed;
    DWORD pgenCounter;
};

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS _CRYPT_PKCS8_EXPORT_PARAMS, *P_CRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS *PCRYPT_PKCS8_EXPORT_PARAMS;

typedef BOOL (*PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER *, CRYPT_DATA_BLOB *, BYTE *, DWORD *, LPVOID);

struct _CRYPT_PKCS8_EXPORT_PARAMS {
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    LPSTR pszPrivateKeyObjId;
    PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc;
    LPVOID pVoidEncryptFunc;
};

typedef struct _CERT_POLICY_MAPPING _CERT_POLICY_MAPPING, *P_CERT_POLICY_MAPPING;

typedef struct _CERT_POLICY_MAPPING CERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPING {
    LPSTR pszIssuerDomainPolicy;
    LPSTR pszSubjectDomainPolicy;
};

typedef struct _CMC_STATUS_INFO _CMC_STATUS_INFO, *P_CMC_STATUS_INFO;

typedef struct _CMC_STATUS_INFO *PCMC_STATUS_INFO;

typedef union _union_1039 _union_1039, *P_union_1039;

typedef struct _CMC_PEND_INFO _CMC_PEND_INFO, *P_CMC_PEND_INFO;

typedef struct _CMC_PEND_INFO *PCMC_PEND_INFO;

union _union_1039 {
    DWORD dwFailInfo;
    PCMC_PEND_INFO pPendInfo;
};

struct _CMC_STATUS_INFO {
    DWORD dwStatus;
    DWORD cBodyList;
    DWORD *rgdwBodyList;
    LPWSTR pwszStatusString;
    DWORD dwOtherInfoChoice;
    union _union_1039 field5_0x14;
};

struct _CMC_PEND_INFO {
    CRYPT_DATA_BLOB PendToken;
    FILETIME PendTime;
};

typedef struct _CTL_FIND_SUBJECT_PARA CTL_FIND_SUBJECT_PARA;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *P_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedPrivateKey;
};

typedef struct _CRYPT_HASH_MESSAGE_PARA _CRYPT_HASH_MESSAGE_PARA, *P_CRYPT_HASH_MESSAGE_PARA;

typedef struct _CRYPT_HASH_MESSAGE_PARA *PCRYPT_HASH_MESSAGE_PARA;

struct _CRYPT_HASH_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS _CERT_AUTHORITY_INFO_ACCESS, *P_CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_AUTHORITY_INFO_ACCESS CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_ACCESS_DESCRIPTION *PCERT_ACCESS_DESCRIPTION;

struct _CERT_AUTHORITY_INFO_ACCESS {
    DWORD cAccDescr;
    PCERT_ACCESS_DESCRIPTION rgAccDescr;
};

typedef struct _CERT_CHAIN *PCERT_CHAIN;

typedef struct _CERT_KEY_CONTEXT _CERT_KEY_CONTEXT, *P_CERT_KEY_CONTEXT;

struct _CERT_KEY_CONTEXT {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
};

typedef struct _CMC_TAGGED_OTHER_MSG CMC_TAGGED_OTHER_MSG;

typedef struct _CTL_VERIFY_USAGE_PARA _CTL_VERIFY_USAGE_PARA, *P_CTL_VERIFY_USAGE_PARA;

struct _CTL_VERIFY_USAGE_PARA {
    DWORD cbSize;
    CRYPT_DATA_BLOB ListIdentifier;
    DWORD cCtlStore;
    HCERTSTORE *rghCtlStore;
    DWORD cSignerStore;
    HCERTSTORE *rghSignerStore;
};

typedef struct _CMC_TAGGED_REQUEST CMC_TAGGED_REQUEST;

typedef struct _CRYPT_VERIFY_MESSAGE_PARA _CRYPT_VERIFY_MESSAGE_PARA, *P_CRYPT_VERIFY_MESSAGE_PARA;

typedef PCCERT_CONTEXT (*PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *, DWORD, PCERT_INFO, HCERTSTORE);

struct _CRYPT_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    HCRYPTPROV hCryptProv;
    PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
    void *pvGetArg;
};

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA _CERT_SYSTEM_STORE_RELOCATE_PARA, *P_CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef union _union_1098 _union_1098, *P_union_1098;

typedef union _union_1099 _union_1099, *P_union_1099;

union _union_1098 {
    HKEY hKeyBase;
    void *pvBase;
};

union _union_1099 {
    void *pvSystemStore;
    LPCSTR pszSystemStore;
    LPCWSTR pwszSystemStore;
};

struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
    union _union_1098 field0_0x0;
    union _union_1099 field1_0x4;
};

typedef struct _CERT_STORE_PROV_FIND_INFO _CERT_STORE_PROV_FIND_INFO, *P_CERT_STORE_PROV_FIND_INFO;

typedef struct _CERT_STORE_PROV_FIND_INFO *PCERT_STORE_PROV_FIND_INFO;

struct _CERT_STORE_PROV_FIND_INFO {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD dwFindFlags;
    DWORD dwFindType;
    void *pvFindPara;
};

typedef BOOL (*PFN_EXPORT_PRIV_KEY_FUNC)(HCRYPTPROV, DWORD, LPSTR, DWORD, void *, CRYPT_PRIVATE_KEY_INFO *, DWORD *);

typedef struct _CERT_CHAIN_POLICY_PARA _CERT_CHAIN_POLICY_PARA, *P_CERT_CHAIN_POLICY_PARA;

struct _CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwFlags;
    void *pvExtraPolicyPara;
};

typedef struct _CMSG_ENVELOPED_ENCODE_INFO *PCMSG_ENVELOPED_ENCODE_INFO;

typedef ULONG_PTR HCRYPTHASH;

typedef struct _CERT_STORE_PROV_FIND_INFO CERT_STORE_PROV_FIND_INFO;

typedef CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO;

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CRYPT_URL_INFO _CRYPT_URL_INFO, *P_CRYPT_URL_INFO;

typedef struct _CRYPT_URL_INFO CRYPT_URL_INFO;

struct _CRYPT_URL_INFO {
    DWORD cbSize;
    DWORD dwSyncDeltaTime;
    DWORD cGroup;
    DWORD *rgcGroupEntry;
};

typedef struct _HMAC_Info _HMAC_Info, *P_HMAC_Info;

typedef struct _HMAC_Info HMAC_INFO;

struct _HMAC_Info {
    ALG_ID HashAlgid;
    BYTE *pbInnerString;
    DWORD cbInnerString;
    BYTE *pbOuterString;
    DWORD cbOuterString;
};

typedef struct _PUBKEY DHPUBKEY;

typedef struct _CMC_PEND_INFO CMC_PEND_INFO;

typedef struct _CERT_POLICY_INFO _CERT_POLICY_INFO, *P_CERT_POLICY_INFO;

struct _CERT_POLICY_INFO {
    LPSTR pszPolicyIdentifier;
    DWORD cPolicyQualifier;
    CERT_POLICY_QUALIFIER_INFO *rgPolicyQualifier;
};

typedef struct _CERT_EXTENSIONS _CERT_EXTENSIONS, *P_CERT_EXTENSIONS;

struct _CERT_EXTENSIONS {
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CMSG_CMS_SIGNER_INFO CMSG_CMS_SIGNER_INFO;

typedef struct _SCHANNEL_ALG _SCHANNEL_ALG, *P_SCHANNEL_ALG;

struct _SCHANNEL_ALG {
    DWORD dwUse;
    ALG_ID Algid;
    DWORD cBits;
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct _CERT_EXTENSIONS *PCERT_EXTENSIONS;

typedef struct _CTL_ANY_SUBJECT_INFO _CTL_ANY_SUBJECT_INFO, *P_CTL_ANY_SUBJECT_INFO;

typedef struct _CTL_ANY_SUBJECT_INFO CTL_ANY_SUBJECT_INFO;

struct _CTL_ANY_SUBJECT_INFO {
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    CRYPT_DATA_BLOB SubjectIdentifier;
};

typedef struct _CERT_NAME_VALUE _CERT_NAME_VALUE, *P_CERT_NAME_VALUE;

typedef struct _CERT_NAME_VALUE CERT_NAME_VALUE;

struct _CERT_NAME_VALUE {
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

typedef struct _CMSG_HASHED_ENCODE_INFO _CMSG_HASHED_ENCODE_INFO, *P_CMSG_HASHED_ENCODE_INFO;

struct _CMSG_HASHED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
};

typedef struct _CERT_CHAIN_POLICY_PARA CERT_CHAIN_POLICY_PARA;

typedef struct _PUBLICKEYSTRUC _PUBLICKEYSTRUC, *P_PUBLICKEYSTRUC;

typedef struct _PUBLICKEYSTRUC PUBLICKEYSTRUC;

struct _PUBLICKEYSTRUC {
    BYTE bType;
    BYTE bVersion;
    WORD reserved;
    ALG_ID aiKeyAlg;
};

typedef struct _CRYPT_URL_INFO *PCRYPT_URL_INFO;

typedef struct _CERT_TRUST_LIST_INFO CERT_TRUST_LIST_INFO;

typedef struct _CERT_X942_DH_PARAMETERS _CERT_X942_DH_PARAMETERS, *P_CERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_PARAMETERS *PCERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS *PCERT_X942_DH_VALIDATION_PARAMS;

struct _CERT_X942_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB j;
    PCERT_X942_DH_VALIDATION_PARAMS pValidationParams;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    DWORD dwUnauthAttrIndex;
};

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO _CERT_BASIC_CONSTRAINTS2_INFO, *P_CERT_BASIC_CONSTRAINTS2_INFO;

struct _CERT_BASIC_CONSTRAINTS2_INFO {
    BOOL fCA;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
};

typedef struct _CMC_DATA_INFO CMC_DATA_INFO;

typedef struct _CMS_DH_KEY_INFO _CMS_DH_KEY_INFO, *P_CMS_DH_KEY_INFO;

struct _CMS_DH_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    LPSTR pszContentEncObjId;
    CRYPT_DATA_BLOB PubInfo;
    void *pReserved;
};

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *P_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef BOOL (*PFN_CMSG_IMPORT_KEY_TRANS)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO _CMSG_KEY_TRANS_RECIPIENT_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO *PCMSG_KEY_TRANS_RECIPIENT_INFO;

struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
    DWORD dwVersion;
    CERT_ID RecipientId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
};

struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    DWORD dwRecipientIndex;
};

typedef struct _CRYPT_ENCODE_PARA _CRYPT_ENCODE_PARA, *P_CRYPT_ENCODE_PARA;

typedef LPVOID (*PFN_CRYPT_ALLOC)(size_t);

struct _CRYPT_ENCODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CERT_CHAIN_PARA _CERT_CHAIN_PARA, *P_CERT_CHAIN_PARA;

typedef struct _CERT_CHAIN_PARA CERT_CHAIN_PARA;

typedef struct _CERT_USAGE_MATCH _CERT_USAGE_MATCH, *P_CERT_USAGE_MATCH;

typedef struct _CERT_USAGE_MATCH CERT_USAGE_MATCH;

typedef struct _CTL_USAGE CERT_ENHKEY_USAGE;

struct _CERT_USAGE_MATCH {
    DWORD dwType;
    CERT_ENHKEY_USAGE Usage;
};

struct _CERT_CHAIN_PARA {
    DWORD cbSize;
    CERT_USAGE_MATCH RequestedUsage;
};

typedef struct _CRYPT_DECODE_PARA _CRYPT_DECODE_PARA, *P_CRYPT_DECODE_PARA;

struct _CRYPT_DECODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CRYPT_OID_INFO CRYPT_OID_INFO;

typedef CRYPT_OID_INFO *PCCRYPT_OID_INFO;

typedef BOOL (*PFN_CRYPT_ENUM_OID_INFO)(PCCRYPT_OID_INFO, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, void *, DWORD);

typedef struct _CRYPT_VERIFY_MESSAGE_PARA *PCRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA _CRYPT_KEY_VERIFY_MESSAGE_PARA, *P_CRYPT_KEY_VERIFY_MESSAGE_PARA;

struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
};

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR _CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *P_CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
    LPWSTR pwszName;
    LPWSTR pwszValue;
};

typedef struct _CRYPT_CSP_PROVIDER _CRYPT_CSP_PROVIDER, *P_CRYPT_CSP_PROVIDER;

typedef struct _CRYPT_CSP_PROVIDER CRYPT_CSP_PROVIDER;

struct _CRYPT_CSP_PROVIDER {
    DWORD dwKeySpec;
    LPWSTR pwszProviderName;
    CRYPT_BIT_BLOB Signature;
};

typedef BOOL (*PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(LPCWSTR, DWORD, void *, void *);

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA _CRYPT_KEY_SIGN_MESSAGE_PARA, *P_CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA *PCRYPT_KEY_SIGN_MESSAGE_PARA;

struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void *pvHashAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef CERT_STORE_PROV_FIND_INFO *PCCERT_STORE_PROV_FIND_INFO;

typedef struct _CERT_CRL_CONTEXT_PAIR CERT_CRL_CONTEXT_PAIR;

typedef struct _CRYPT_HASH_INFO _CRYPT_HASH_INFO, *P_CRYPT_HASH_INFO;

struct _CRYPT_HASH_INFO {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_HASH_BLOB Hash;
};

typedef struct _CMSG_RC2_AUX_INFO _CMSG_RC2_AUX_INFO, *P_CMSG_RC2_AUX_INFO;

typedef struct _CMSG_RC2_AUX_INFO CMSG_RC2_AUX_INFO;

struct _CMSG_RC2_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO _CRYPT_TIME_STAMP_REQUEST_INFO, *P_CRYPT_TIME_STAMP_REQUEST_INFO;

struct _CRYPT_TIME_STAMP_REQUEST_INFO {
    LPSTR pszTimeStampAlgorithm;
    LPSTR pszContentType;
    CRYPT_OBJID_BLOB Content;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CRL_ISSUING_DIST_POINT _CRL_ISSUING_DIST_POINT, *P_CRL_ISSUING_DIST_POINT;

struct _CRL_ISSUING_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    BOOL fOnlyContainsUserCerts;
    BOOL fOnlyContainsCACerts;
    CRYPT_BIT_BLOB OnlySomeReasonFlags;
    BOOL fIndirectCRL;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO *PCRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CMSG_CMS_RECIPIENT_INFO _CMSG_CMS_RECIPIENT_INFO, *P_CMSG_CMS_RECIPIENT_INFO;

typedef struct _CMSG_CMS_RECIPIENT_INFO *PCMSG_CMS_RECIPIENT_INFO;

typedef union _union_1076 _union_1076, *P_union_1076;

union _union_1076 {
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
};

struct _CMSG_CMS_RECIPIENT_INFO {
    DWORD dwRecipientChoice;
    union _union_1076 field1_0x4;
};

typedef struct _CERT_PRIVATE_KEY_VALIDITY _CERT_PRIVATE_KEY_VALIDITY, *P_CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CERT_PRIVATE_KEY_VALIDITY *PCERT_PRIVATE_KEY_VALIDITY;

struct _CERT_PRIVATE_KEY_VALIDITY {
    FILETIME NotBefore;
    FILETIME NotAfter;
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMC_RESPONSE_INFO _CMC_RESPONSE_INFO, *P_CMC_RESPONSE_INFO;

typedef struct _CMC_RESPONSE_INFO CMC_RESPONSE_INFO;

struct _CMC_RESPONSE_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *P_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DER_BLOB;

struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *P_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
    LPSTR pszOrganization;
    DWORD cNoticeNumbers;
    int *rgNoticeNumbers;
};

typedef struct _CERT_TEMPLATE_EXT _CERT_TEMPLATE_EXT, *P_CERT_TEMPLATE_EXT;

struct _CERT_TEMPLATE_EXT {
    LPSTR pszObjId;
    DWORD dwMajorVersion;
    BOOL fMinorVersion;
    DWORD dwMinorVersion;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS *PCERT_AUTHORITY_INFO_ACCESS;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    BOOL fCommercial;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO CRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO *PCERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA _CERT_CHAIN_FIND_BY_ISSUER_PARA, *P_CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef BOOL (*PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(PCCERT_CONTEXT, void *);

struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
    DWORD cbSize;
    LPCSTR pszUsageIdentifier;
    DWORD dwKeySpec;
    DWORD dwAcquirePrivateKeyFlags;
    DWORD cIssuer;
    CERT_NAME_BLOB *rgIssuer;
    PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
    void *pvFindArg;
};

typedef void *HCRYPTDEFAULTCONTEXT;

typedef struct _CRYPT_X942_OTHER_INFO _CRYPT_X942_OTHER_INFO, *P_CRYPT_X942_OTHER_INFO;

struct _CRYPT_X942_OTHER_INFO {
    LPSTR pszContentEncryptionObjId;
    BYTE rgbCounter[4];
    BYTE rgbKeyLength[4];
    CRYPT_DATA_BLOB PubInfo;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO _CERT_POLICY_MAPPINGS_INFO, *P_CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_POLICY_MAPPING *PCERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPINGS_INFO {
    DWORD cPolicyMapping;
    PCERT_POLICY_MAPPING rgPolicyMapping;
};

typedef struct _HTTPSPolicyCallbackData _HTTPSPolicyCallbackData, *P_HTTPSPolicyCallbackData;

typedef struct _HTTPSPolicyCallbackData *PHTTPSPolicyCallbackData;

typedef union _union_1154 _union_1154, *P_union_1154;

union _union_1154 {
    DWORD cbStruct;
    DWORD cbSize;
};

struct _HTTPSPolicyCallbackData {
    union _union_1154 field0_0x0;
    DWORD dwAuthType;
    DWORD fdwChecks;
    WCHAR *pwszServerName;
};

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION _CRYPT_ASYNC_RETRIEVAL_COMPLETION, *P_CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef void (*PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(LPVOID, DWORD, LPCSTR, LPSTR, LPVOID);

struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
    PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion;
    LPVOID pvCompletion;
};

typedef struct _CERT_REVOCATION_PARA _CERT_REVOCATION_PARA, *P_CERT_REVOCATION_PARA;

struct _CERT_REVOCATION_PARA {
    DWORD cbSize;
    PCCERT_CONTEXT pIssuerCert;
    DWORD cCertStore;
    HCERTSTORE *rgCertStore;
    HCERTSTORE hCrlStore;
    LPFILETIME pftTimeToUse;
};

typedef struct _CRL_ISSUING_DIST_POINT CRL_ISSUING_DIST_POINT;

typedef struct _CERT_REVOCATION_PARA CERT_REVOCATION_PARA;

typedef struct _CERT_SIGNED_CONTENT_INFO *PCERT_SIGNED_CONTENT_INFO;

typedef struct _CRL_FIND_ISSUED_FOR_PARA _CRL_FIND_ISSUED_FOR_PARA, *P_CRL_FIND_ISSUED_FOR_PARA;

struct _CRL_FIND_ISSUED_FOR_PARA {
    PCCERT_CONTEXT pSubjectCert;
    PCCERT_CONTEXT pIssuerCert;
};

typedef CRYPT_ATTRIBUTES *PCMSG_ATTR;

typedef struct _CRYPT_CREDENTIALS *PCRYPT_CREDENTIALS;

typedef struct _CRYPT_HASH_MESSAGE_PARA CRYPT_HASH_MESSAGE_PARA;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA _CERT_REGISTRY_STORE_ROAMING_PARA, *P_CERT_REGISTRY_STORE_ROAMING_PARA;

struct _CERT_REGISTRY_STORE_ROAMING_PARA {
    HKEY hKey;
    LPWSTR pwszStoreDirectory;
};

typedef struct _CMSG_SIGNER_INFO _CMSG_SIGNER_INFO, *P_CMSG_SIGNER_INFO;

struct _CMSG_SIGNER_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CMSG_SIGNER_INFO *PCMSG_SIGNER_INFO;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    PCMSG_SIGNER_INFO pSignerInfo;
};

typedef BOOL (*PFN_CMSG_STREAM_OUTPUT)(void *, BYTE *, DWORD, BOOL);

typedef struct _CERT_RDN_ATTR CERT_RDN_ATTR;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA *PCERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE _CERT_POLICY_QUALIFIER_USER_NOTICE, *P_CERT_POLICY_QUALIFIER_USER_NOTICE;

struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
    CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *pNoticeReference;
    LPWSTR pszDisplayText;
};

typedef struct _CERT_PHYSICAL_STORE_INFO *PCERT_PHYSICAL_STORE_INFO;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    CRYPT_DATA_BLOB blob;
};

typedef struct _CERT_REVOCATION_PARA *PCERT_REVOCATION_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_CONTROL)(HCERTSTOREPROV, DWORD, DWORD, void *);

typedef struct _CERT_CREATE_CONTEXT_PARA *PCERT_CREATE_CONTEXT_PARA;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO _CMSG_CONTENT_ENCRYPT_INFO, *P_CMSG_CONTENT_ENCRYPT_INFO;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO *PCMSG_RECIPIENT_ENCODE_INFO;

typedef void * (*PFN_CMSG_ALLOC)(size_t);

typedef void (*PFN_CMSG_FREE)(void *);

struct _CMSG_CONTENT_ENCRYPT_INFO {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients;
    PFN_CMSG_ALLOC pfnAlloc;
    PFN_CMSG_FREE pfnFree;
    DWORD dwEncryptFlags;
    HCRYPTKEY hContentEncryptKey;
    DWORD dwFlags;
};

typedef CERT_CRL_CONTEXT_PAIR *PCCERT_CRL_CONTEXT_PAIR;

typedef BOOL (*PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER, CRYPT_DATA_BLOB, BYTE *, DWORD *, LPVOID);

typedef HANDLE *PHCRYPTASYNC;

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef HANDLE HCERTCHAINENGINE;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT CRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CERT_KEY_ATTRIBUTES_INFO _CERT_KEY_ATTRIBUTES_INFO, *P_CERT_KEY_ATTRIBUTES_INFO;

struct _CERT_KEY_ATTRIBUTES_INFO {
    CRYPT_DATA_BLOB KeyId;
    CRYPT_BIT_BLOB IntendedKeyUsage;
    PCERT_PRIVATE_KEY_VALIDITY pPrivateKeyUsagePeriod;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO *PCMSG_CONTENT_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_KEY_TRANS)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, PCMSG_KEY_TRANS_ENCRYPT_INFO, DWORD, void *);

typedef struct _PUBKEY DSSPUBKEY;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS _CRYPT_PKCS8_IMPORT_PARAMS, *P_CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPTOAPI_BLOB CRYPT_DIGEST_BLOB;

typedef BOOL (*PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(CRYPT_PRIVATE_KEY_INFO *, HCRYPTPROV *, LPVOID);

struct _CRYPT_PKCS8_IMPORT_PARAMS {
    CRYPT_DIGEST_BLOB PrivateKey;
    PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc;
    LPVOID pVoidResolveFunc;
    PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc;
    LPVOID pVoidDecryptFunc;
};

typedef struct _CERT_KEY_ATTRIBUTES_INFO *PCERT_KEY_ATTRIBUTES_INFO;

typedef struct _CRYPT_DECODE_PARA CRYPT_DECODE_PARA;

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *P_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
    DWORD cOID;
    LPSTR *rgpszOID;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE *PCERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CTL_FIND_USAGE_PARA CTL_FIND_USAGE_PARA;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO CMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO _CMC_ADD_EXTENSIONS_INFO, *P_CMC_ADD_EXTENSIONS_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO *PCMC_ADD_EXTENSIONS_INFO;

struct _CMC_ADD_EXTENSIONS_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD *rgdwCertReference;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CERT_PAIR _CERT_PAIR, *P_CERT_PAIR;

struct _CERT_PAIR {
    CERT_BLOB Forward;
    CERT_BLOB Reverse;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA CRL_FIND_ISSUED_FOR_PARA;

typedef struct _CTL_USAGE_MATCH _CTL_USAGE_MATCH, *P_CTL_USAGE_MATCH;

typedef struct _CTL_USAGE_MATCH CTL_USAGE_MATCH;

struct _CTL_USAGE_MATCH {
    DWORD dwType;
    CTL_USAGE Usage;
};

typedef HANDLE HCRYPTASYNC;

typedef BOOL (*PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(HCRYPTASYNC);

typedef struct _CRL_INFO CRL_INFO;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO *PCERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_CHAIN_ENGINE_CONFIG _CERT_CHAIN_ENGINE_CONFIG, *P_CERT_CHAIN_ENGINE_CONFIG;

struct _CERT_CHAIN_ENGINE_CONFIG {
    DWORD cbSize;
    HCERTSTORE hRestrictedRoot;
    HCERTSTORE hRestrictedTrust;
    HCERTSTORE hRestrictedOther;
    DWORD cAdditionalStore;
    HCERTSTORE *rghAdditionalStore;
    DWORD dwFlags;
    DWORD dwUrlRetrievalTimeout;
    DWORD MaximumCachedCertificates;
    DWORD CycleDetectionModulus;
};

typedef struct _CMS_DH_KEY_INFO CMS_DH_KEY_INFO;

typedef struct _CERT_CRL_CONTEXT_PAIR *PCERT_CRL_CONTEXT_PAIR;

typedef struct _CERT_CREATE_CONTEXT_PARA CERT_CREATE_CONTEXT_PARA;

typedef struct _CERT_CHAIN CERT_CHAIN;

typedef struct _CMSG_HASHED_ENCODE_INFO CMSG_HASHED_ENCODE_INFO;

typedef struct _CERT_STORE_PROV_INFO *PCERT_STORE_PROV_INFO;

typedef BOOL (*PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(LPCSTR, DWORD, HCRYPTPROV, DWORD, void *, HCERTSTORE, PCERT_STORE_PROV_INFO);

typedef struct _CMS_DH_KEY_INFO *PCMS_DH_KEY_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO _CRYPT_RETRIEVE_AUX_INFO, *P_CRYPT_RETRIEVE_AUX_INFO;

struct _CRYPT_RETRIEVE_AUX_INFO {
    DWORD cbSize;
    FILETIME *pLastSyncTime;
};

typedef struct _CMSG_RC4_AUX_INFO _CMSG_RC4_AUX_INFO, *P_CMSG_RC4_AUX_INFO;

typedef struct _CMSG_RC4_AUX_INFO CMSG_RC4_AUX_INFO;

struct _CMSG_RC4_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CRYPTOAPI_BLOB *PCERT_NAME_BLOB;

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef BOOL (*PFN_CMSG_IMPORT_KEY_AGREE)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _HTTPSPolicyCallbackData HTTPSPolicyCallbackData;

typedef struct _CERT_REVOCATION_STATUS *PCERT_REVOCATION_STATUS;

typedef struct _CRYPT_KEY_PROV_INFO *PCRYPT_KEY_PROV_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO _CERT_POLICY_CONSTRAINTS_INFO, *P_CERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO *PCERT_POLICY_CONSTRAINTS_INFO;

struct _CERT_POLICY_CONSTRAINTS_INFO {
    BOOL fRequireExplicitPolicy;
    DWORD dwRequireExplicitPolicySkipCerts;
    BOOL fInhibitPolicyMapping;
    DWORD dwInhibitPolicyMappingSkipCerts;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPTOAPI_BLOB *PDATA_BLOB;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW _CRYPT_PASSWORD_CREDENTIALSW, *P_CRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW CRYPT_PASSWORD_CREDENTIALSW;

struct _CRYPT_PASSWORD_CREDENTIALSW {
    DWORD cbSize;
    LPWSTR pszUsername;
    LPWSTR pszPassword;
};

typedef struct _CERT_POLICIES_INFO _CERT_POLICIES_INFO, *P_CERT_POLICIES_INFO;

typedef struct _CERT_POLICY_INFO CERT_POLICY_INFO;

struct _CERT_POLICIES_INFO {
    DWORD cPolicyInfo;
    CERT_POLICY_INFO *rgPolicyInfo;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA *PCRL_FIND_ISSUED_FOR_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CERT_CHAIN_POLICY_STATUS *PCERT_CHAIN_POLICY_STATUS;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CRYPT_BLOB_ARRAY *PCRYPT_BLOB_ARRAY;

typedef void (*PFN_FREE_ENCODED_OBJECT_FUNC)(LPCSTR, PCRYPT_BLOB_ARRAY, LPVOID);

typedef struct _CERT_KEY_CONTEXT *PCERT_KEY_CONTEXT;

typedef CRYPT_OID_INFO CCRYPT_OID_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO *PCMSG_KEY_AGREE_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_KEY_AGREE)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, PCMSG_KEY_AGREE_ENCRYPT_INFO, DWORD, void *);

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CERT_DSS_PARAMETERS _CERT_DSS_PARAMETERS, *P_CERT_DSS_PARAMETERS;

typedef struct _CERT_DSS_PARAMETERS CERT_DSS_PARAMETERS;

struct _CERT_DSS_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB g;
};

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, void *, DWORD);

typedef struct _CRYPT_OBJID_TABLE _CRYPT_OBJID_TABLE, *P_CRYPT_OBJID_TABLE;

typedef struct _CRYPT_OBJID_TABLE *PCRYPT_OBJID_TABLE;

struct _CRYPT_OBJID_TABLE {
    DWORD dwAlgId;
    LPCSTR pszObjId;
};

typedef struct _CRYPT_SEQUENCE_OF_ANY _CRYPT_SEQUENCE_OF_ANY, *P_CRYPT_SEQUENCE_OF_ANY;

typedef struct _CRYPT_SEQUENCE_OF_ANY CRYPT_SEQUENCE_OF_ANY;

struct _CRYPT_SEQUENCE_OF_ANY {
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _KEY_TYPE_SUBTYPE KEY_TYPE_SUBTYPE;

typedef struct _CERT_KEY_ATTRIBUTES_INFO CERT_KEY_ATTRIBUTES_INFO;

typedef struct _CRYPT_HASH_INFO CRYPT_HASH_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO CRYPT_RETRIEVE_AUX_INFO;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO CERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO _CERT_BASIC_CONSTRAINTS_INFO, *P_CERT_BASIC_CONSTRAINTS_INFO;

struct _CERT_BASIC_CONSTRAINTS_INFO {
    CRYPT_BIT_BLOB SubjectType;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
    DWORD cSubtreesConstraint;
    CERT_NAME_BLOB *rgSubtreesConstraint;
};

typedef struct _CRYPTOAPI_BLOB *PCRYPT_HASH_BLOB;

typedef BOOL (*PFN_CERT_STORE_PROV_FREE_FIND_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, void *, DWORD);

typedef struct _CERT_TEMPLATE_EXT *PCERT_TEMPLATE_EXT;

typedef struct _SCHANNEL_ALG SCHANNEL_ALG;

typedef struct _PRIVKEYVER3 _PRIVKEYVER3, *P_PRIVKEYVER3;

typedef struct _PRIVKEYVER3 DSSPRIVKEY_VER3;

struct _PRIVKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DWORD bitlenX;
    DSSSEED DSSSeed;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSW *PCRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CERT_POLICY_INFO *PCERT_POLICY_INFO;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA *PCRYPT_PASSWORD_CREDENTIALSA;

typedef struct _CERT_POLICY_ID CERT_POLICY_ID;

typedef struct _CMSG_CTRL_DECRYPT_PARA CMSG_CTRL_DECRYPT_PARA;

typedef void (*PFN_CERT_STORE_PROV_CLOSE)(HCERTSTOREPROV, DWORD);

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *P_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    DWORD dwSignerIndex;
    DWORD dwSignerType;
    void *pvSigner;
};

typedef struct _CTL_INFO CTL_INFO;

typedef struct _CMC_STATUS_INFO CMC_STATUS_INFO;

typedef BOOL (*PFN_CRYPT_CANCEL_RETRIEVAL)(DWORD, void *);

typedef struct _HTTPSPolicyCallbackData *PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_SMIME_CAPABILITIES *PCRYPT_SMIME_CAPABILITIES;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO _CERT_AUTHORITY_KEY_ID2_INFO, *P_CERT_AUTHORITY_KEY_ID2_INFO;

struct _CERT_AUTHORITY_KEY_ID2_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_ALT_NAME_INFO AuthorityCertIssuer;
    CRYPT_INTEGER_BLOB AuthorityCertSerialNumber;
};

typedef struct _CERT_CHAIN_POLICY_PARA *PCERT_CHAIN_POLICY_PARA;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO *PCMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA _CRYPT_ENCRYPT_MESSAGE_PARA, *P_CRYPT_ENCRYPT_MESSAGE_PARA;

struct _CRYPT_ENCRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void *pvEncryptionAuxInfo;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRL_ISSUING_DIST_POINT *PCRL_ISSUING_DIST_POINT;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA CRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO CERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CRYPT_ENCODE_PARA *PCRYPT_ENCODE_PARA;

typedef struct _CTL_USAGE_MATCH *PCTL_USAGE_MATCH;

typedef struct _CERT_ACCESS_DESCRIPTION CERT_ACCESS_DESCRIPTION;

typedef struct _CRL_DIST_POINTS_INFO CRL_DIST_POINTS_INFO;

typedef struct _CERT_EXTENSION CERT_EXTENSION;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef void *HCRYPTOIDFUNCSET;

typedef struct _CMSG_STREAM_INFO _CMSG_STREAM_INFO, *P_CMSG_STREAM_INFO;

typedef struct _CMSG_STREAM_INFO *PCMSG_STREAM_INFO;

struct _CMSG_STREAM_INFO {
    DWORD cbContent;
    PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
    void *pvArg;
};

typedef struct _CERT_AUTHORITY_KEY_ID_INFO _CERT_AUTHORITY_KEY_ID_INFO, *P_CERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO CERT_AUTHORITY_KEY_ID_INFO;

struct _CERT_AUTHORITY_KEY_ID_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_NAME_BLOB CertIssuer;
    CRYPT_INTEGER_BLOB CertSerialNumber;
};

typedef struct _CERT_REQUEST_INFO _CERT_REQUEST_INFO, *P_CERT_REQUEST_INFO;

struct _CERT_REQUEST_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CERT_DSS_PARAMETERS *PCERT_DSS_PARAMETERS;

typedef struct _CERT_PUBLIC_KEY_INFO *PCERT_PUBLIC_KEY_INFO;

typedef BOOL (*PFN_CMSG_EXPORT_ENCRYPT_KEY)(HCRYPTPROV, HCRYPTKEY, PCERT_PUBLIC_KEY_INFO, PBYTE, PDWORD);

typedef PCRYPT_PASSWORD_CREDENTIALSA PCRYPT_PASSWORD_CREDENTIALS;

typedef struct _CERT_REQUEST_INFO *PCERT_REQUEST_INFO;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA CRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CRL_DIST_POINTS_INFO *PCRL_DIST_POINTS_INFO;

typedef struct _CPS_URLS _CPS_URLS, *P_CPS_URLS;

typedef struct _CPS_URLS *PCPS_URLS;

struct _CPS_URLS {
    LPWSTR pszURL;
    CRYPT_ALGORITHM_IDENTIFIER *pAlgorithm;
    CRYPT_DATA_BLOB *pDigest;
};

typedef struct _CRYPT_VERIFY_MESSAGE_PARA CRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CERT_CHAIN_ELEMENT CERT_CHAIN_ELEMENT;

typedef struct _CRYPT_URL_ARRAY CRYPT_URL_ARRAY;

typedef struct _CMC_TAGGED_CONTENT_INFO CMC_TAGGED_CONTENT_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_UINT_BLOB;

typedef struct _CMSG_CMS_RECIPIENT_INFO CMSG_CMS_RECIPIENT_INFO;

typedef struct _CERT_NAME_CONSTRAINTS_INFO *PCERT_NAME_CONSTRAINTS_INFO;

typedef struct _CRYPT_BIT_BLOB *PCRYPT_BIT_BLOB;

typedef struct _CERT_CHAIN_ENGINE_CONFIG *PCERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CMC_ADD_EXTENSIONS_INFO CMC_ADD_EXTENSIONS_INFO;

typedef struct _CRYPT_PRIVATE_KEY_INFO *PCRYPT_PRIVATE_KEY_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO *PCERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CTL_FIND_SUBJECT_PARA *PCTL_FIND_SUBJECT_PARA;

typedef struct _CERT_KEYGEN_REQUEST_INFO _CERT_KEYGEN_REQUEST_INFO, *P_CERT_KEYGEN_REQUEST_INFO;

struct _CERT_KEYGEN_REQUEST_INFO {
    DWORD dwVersion;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    LPWSTR pwszChallengeString;
};

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO CERT_AUTHORITY_KEY_ID2_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef struct _CERT_CHAIN_ENGINE_CONFIG CERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_FORTEZZA_DATA_PROP _CERT_FORTEZZA_DATA_PROP, *P_CERT_FORTEZZA_DATA_PROP;

struct _CERT_FORTEZZA_DATA_PROP {
    uchar SerialNumber[8];
    int CertIndex;
    uchar CertLabel[36];
};

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CPS_URLS CPS_URLS;

typedef struct _CRL_ENTRY CRL_ENTRY;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef struct _CRYPT_CONTENT_INFO _CRYPT_CONTENT_INFO, *P_CRYPT_CONTENT_INFO;

struct _CRYPT_CONTENT_INFO {
    LPSTR pszObjId;
    CRYPT_DER_BLOB Content;
};

typedef struct _KEY_TYPE_SUBTYPE *PKEY_TYPE_SUBTYPE;

typedef struct _PROV_ENUMALGS _PROV_ENUMALGS, *P_PROV_ENUMALGS;

typedef struct _PROV_ENUMALGS PROV_ENUMALGS;

struct _PROV_ENUMALGS {
    ALG_ID aiAlgid;
    DWORD dwBitLen;
    DWORD dwNameLen;
    CHAR szName[20];
};

typedef struct _CERT_FORTEZZA_DATA_PROP CERT_FORTEZZA_DATA_PROP;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA CERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_OTHER_NAME CERT_OTHER_NAME;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CERT_RDN CERT_RDN;

typedef struct _CMSG_RC4_AUX_INFO *PCMSG_RC4_AUX_INFO;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPTOAPI_BLOB CRYPT_ATTR_BLOB;

typedef union _union_1015 _union_1015, *P_union_1015;

union _union_1015 {
    CERT_ALT_NAME_INFO FullName;
};

typedef struct _CERT_X942_DH_PARAMETERS CERT_X942_DH_PARAMETERS;

typedef BOOL (*PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(PCMSG_CONTENT_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (*PFN_CRYPT_ENUM_KEYID_PROP)(CRYPT_HASH_BLOB *, DWORD, void *, void *, DWORD, DWORD *, void **, DWORD *);

typedef struct _CERT_REVOCATION_STATUS CERT_REVOCATION_STATUS;

typedef union _union_1034 _union_1034, *P_union_1034;

union _union_1034 {
    PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest;
};

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef void (*PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(LPSTR, LPVOID);

typedef struct _CTL_USAGE *PCTL_USAGE;

typedef struct _CMS_KEY_INFO *PCMS_KEY_INFO;

typedef union _union_1041 _union_1041, *P_union_1041;

union _union_1041 {
    DWORD dwFailInfo;
    PCMC_PEND_INFO pPendInfo;
};

typedef union _union_1047 _union_1047, *P_union_1047;

union _union_1047 {
    DWORD dwValue;
    ALG_ID Algid;
    DWORD dwLength;
};

typedef union _union_1050 _union_1050, *P_union_1050;

union _union_1050 {
    CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    CRYPT_HASH_BLOB KeyId;
    CRYPT_HASH_BLOB HashId;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO CMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMSG_CTRL_DECRYPT_PARA *PCMSG_CTRL_DECRYPT_PARA;

typedef struct _CERT_CHAIN_CONTEXT *PCERT_CHAIN_CONTEXT;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO CERT_KEY_USAGE_RESTRICTION_INFO;

typedef union _union_1058 _union_1058, *P_union_1058;

union _union_1058 {
    PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
    PCERT_ID pSenderId;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_TRUST_STATUS *PCERT_TRUST_STATUS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS *PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef union _union_1060 _union_1060, *P_union_1060;

union _union_1060 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

typedef union _union_1062 _union_1062, *P_union_1062;

union _union_1062 {
    PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList;
};

typedef struct _HTTPSPolicyCallbackData SSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA _CRYPT_DECRYPT_MESSAGE_PARA, *P_CRYPT_DECRYPT_MESSAGE_PARA;

struct _CRYPT_DECRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD cCertStore;
    HCERTSTORE *rghCertStore;
};

typedef union _union_1075 _union_1075, *P_union_1075;

union _union_1075 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

typedef union _union_1078 _union_1078, *P_union_1078;

union _union_1078 {
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
};

typedef struct _PROV_ENUMALGS_EX _PROV_ENUMALGS_EX, *P_PROV_ENUMALGS_EX;

typedef struct _PROV_ENUMALGS_EX PROV_ENUMALGS_EX;

struct _PROV_ENUMALGS_EX {
    ALG_ID aiAlgid;
    DWORD dwDefaultLen;
    DWORD dwMinLen;
    DWORD dwMaxLen;
    DWORD dwProtocols;
    DWORD dwNameLen;
    CHAR szName[20];
    DWORD dwLongNameLen;
    CHAR szLongName[40];
};

typedef struct _CRYPT_OID_FUNC_ENTRY *PCRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_CREDENTIALS CRYPT_CREDENTIALS;

typedef struct _CRYPT_CSP_PROVIDER *PCRYPT_CSP_PROVIDER;

typedef struct _CMSG_CMS_SIGNER_INFO *PCMSG_CMS_SIGNER_INFO;

typedef union _union_1084 _union_1084, *P_union_1084;

union _union_1084 {
    HCRYPTKEY hKeyEncryptionKey;
    void *pvKeyEncryptionKey;
};

typedef struct _CERT_SYSTEM_STORE_INFO *PCERT_SYSTEM_STORE_INFO;

typedef BOOL (*PFN_CERT_ENUM_SYSTEM_STORE)(void *, DWORD, PCERT_SYSTEM_STORE_INFO, void *, void *);

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO *PCMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _SCHANNEL_ALG *PSCHANNEL_ALG;

typedef struct _CERT_ISSUER_SERIAL_NUMBER *PCERT_ISSUER_SERIAL_NUMBER;

typedef struct _CMSG_SIGNER_INFO CMSG_SIGNER_INFO;

typedef union _union_1091 _union_1091, *P_union_1091;

union _union_1091 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

typedef BOOL (*PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef struct _CERT_REVOCATION_CRL_INFO CERT_REVOCATION_CRL_INFO;

typedef struct _CTL_VERIFY_USAGE_STATUS *PCTL_VERIFY_USAGE_STATUS;

typedef struct _CRYPT_RC2_CBC_PARAMETERS CRYPT_RC2_CBC_PARAMETERS;

typedef struct _CERT_PAIR *PCERT_PAIR;

typedef struct _CERT_POLICY95_QUALIFIER1 _CERT_POLICY95_QUALIFIER1, *P_CERT_POLICY95_QUALIFIER1;

struct _CERT_POLICY95_QUALIFIER1 {
    LPWSTR pszPracticesReference;
    LPSTR pszNoticeIdentifier;
    LPSTR pszNSINoticeIdentifier;
    DWORD cCPSURLs;
    CPS_URLS *rgCPSURLs;
};

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CMC_RESPONSE_INFO *PCMC_RESPONSE_INFO;

typedef struct _CERT_CONTEXT *PCERT_CONTEXT;

typedef BOOL (*PFN_CMSG_GEN_ENCRYPT_KEY)(HCRYPTPROV *, PCRYPT_ALGORITHM_IDENTIFIER, PVOID, PCERT_PUBLIC_KEY_INFO, PFN_CMSG_ALLOC, HCRYPTKEY *, PBYTE *, PDWORD);

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA *PCRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CRYPT_SEQUENCE_OF_ANY *PCRYPT_SEQUENCE_OF_ANY;

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef struct _CTL_CONTEXT *PCTL_CONTEXT;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO CMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef struct _CTL_ANY_SUBJECT_INFO *PCTL_ANY_SUBJECT_INFO;

typedef struct _CRYPT_SIGN_MESSAGE_PARA CRYPT_SIGN_MESSAGE_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (*PFN_CERT_STORE_PROV_DELETE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef struct _CTL_VERIFY_USAGE_PARA *PCTL_VERIFY_USAGE_PARA;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS CRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _PUBLICKEYSTRUC BLOBHEADER;

typedef struct _CRYPT_HASH_INFO *PCRYPT_HASH_INFO;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_DIGEST_BLOB;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_INTEGER_BLOB;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA *PCRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CERT_PHYSICAL_STORE_INFO CERT_PHYSICAL_STORE_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CERT_NAME_CONSTRAINTS_INFO CERT_NAME_CONSTRAINTS_INFO;

typedef struct _PRIVKEYVER3 DHPRIVKEY_VER3;

typedef struct _CERT_PAIR CERT_PAIR;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CMSG_SIGNER_ENCODE_INFO CMSG_SIGNER_ENCODE_INFO;

typedef struct _RSAPUBKEY _RSAPUBKEY, *P_RSAPUBKEY;

struct _RSAPUBKEY {
    DWORD magic;
    DWORD bitlen;
    DWORD pubexp;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE CERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CRYPTOAPI_BLOB *PCRYPT_OBJID_BLOB;

typedef struct _CRYPT_X942_OTHER_INFO *PCRYPT_X942_OTHER_INFO;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA CRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CRYPT_RC2_CBC_PARAMETERS *PCRYPT_RC2_CBC_PARAMETERS;

typedef BOOL (*PFN_CMSG_EXPORT_MAIL_LIST)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, PCMSG_MAIL_LIST_ENCRYPT_INFO, DWORD, void *);

typedef struct _CRYPT_ENCODE_PARA CRYPT_ENCODE_PARA;

typedef struct _CRYPT_X942_OTHER_INFO CRYPT_X942_OTHER_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _HMAC_Info *PHMAC_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO CERT_KEYGEN_REQUEST_INFO;

typedef struct _CERT_POLICIES_INFO *PCERT_POLICIES_INFO;

typedef BOOL (*PFN_CRYPT_ENUM_OID_FUNC)(DWORD, LPCSTR, LPCSTR, DWORD, DWORD *, LPCWSTR *, BYTE **, DWORD *, void *);

typedef struct _CTL_VERIFY_USAGE_PARA CTL_VERIFY_USAGE_PARA;

typedef BOOL (*PFN_CERT_ENUM_PHYSICAL_STORE)(void *, DWORD, LPCWSTR, PCERT_PHYSICAL_STORE_INFO, void *, void *);

typedef struct _CMSG_STREAM_INFO CMSG_STREAM_INFO;

typedef struct _CERT_REVOCATION_INFO CERT_REVOCATION_INFO;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA *PCERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CMSG_RC2_AUX_INFO *PCMSG_RC2_AUX_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CRL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCRL_CONTEXT, DWORD, void **, PCCRL_CONTEXT *);

typedef union _union_1100 _union_1100, *P_union_1100;

union _union_1100 {
    HKEY hKeyBase;
    void *pvBase;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef union _union_1101 _union_1101, *P_union_1101;

union _union_1101 {
    void *pvSystemStore;
    LPCSTR pszSystemStore;
    LPCWSTR pwszSystemStore;
};

typedef BOOL (*PFN_CMSG_IMPORT_ENCRYPT_KEY)(HCRYPTPROV, DWORD, PCRYPT_ALGORITHM_IDENTIFIER, PCRYPT_ALGORITHM_IDENTIFIER, PBYTE, DWORD, HCRYPTKEY *);

typedef struct _CMC_DATA_INFO *PCMC_DATA_INFO;

typedef union _union_994 _union_994, *P_union_994;

union _union_994 {
    PCERT_OTHER_NAME pOtherName;
    LPWSTR pwszRfc822Name;
    LPWSTR pwszDNSName;
    CERT_NAME_BLOB DirectoryName;
    LPWSTR pwszURL;
    CRYPT_DATA_BLOB IPAddress;
    LPSTR pszRegisteredID;
};

typedef struct _CRYPT_CONTENT_INFO CRYPT_CONTENT_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO *PCERT_AUTHORITY_KEY_ID2_INFO;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CERT)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCERT_CONTEXT, DWORD, void **, PCCERT_CONTEXT *);

typedef struct _CRYPT_KEY_LIMITS_V01 CRYPT_KEY_LIMITS;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO;

typedef struct _CERT_PRIVATE_KEY_VALIDITY CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CRYPT_OBJID_TABLE CRYPT_OBJID_TABLE;

typedef struct _CERT_POLICY95_QUALIFIER1 CERT_POLICY95_QUALIFIER1;

typedef union _union_1156 _union_1156, *P_union_1156;

union _union_1156 {
    DWORD cbStruct;
    DWORD cbSize;
};

typedef struct _CERT_INFO CERT_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO *PCERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CRL_CONTEXT *PCRL_CONTEXT;

typedef struct _CERT_POLICY95_QUALIFIER1 *PCERT_POLICY95_QUALIFIER1;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef struct _CERT_NAME_VALUE *PCERT_NAME_VALUE;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, PCCTL_CONTEXT *);

typedef struct _CERT_DH_PARAMETERS CERT_DH_PARAMETERS;

typedef struct _CROSS_CERT_DIST_POINTS_INFO CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA *PCRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CRL_REVOCATION_INFO CRL_REVOCATION_INFO;

typedef struct _CERT_USAGE_MATCH *PCERT_USAGE_MATCH;

typedef struct _CERT_EXTENSIONS CERT_EXTENSIONS;

typedef struct _CRYPT_SMIME_CAPABILITY CRYPT_SMIME_CAPABILITY;

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_WRITE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef struct _CRYPT_CONTENT_INFO *PCRYPT_CONTENT_INFO;

typedef struct _CRL_DIST_POINT CRL_DIST_POINT;

typedef struct _CERT_TEMPLATE_EXT CERT_TEMPLATE_EXT;

typedef struct _CERT_SIMPLE_CHAIN CERT_SIMPLE_CHAIN;

typedef struct _CERT_POLICIES_INFO CERT_POLICIES_INFO;

typedef struct _CROSS_CERT_DIST_POINTS_INFO *PCROSS_CERT_DIST_POINTS_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO *PCERT_KEYGEN_REQUEST_INFO;

typedef struct _CMS_KEY_INFO CMS_KEY_INFO;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef BOOL (*PFN_CERT_STORE_PROV_FIND_CTL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCTL_CONTEXT, DWORD, void **, PCCTL_CONTEXT *);

typedef struct _CTL_VERIFY_USAGE_STATUS CTL_VERIFY_USAGE_STATUS;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, PCCRL_CONTEXT *);

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CERT_KEY_CONTEXT CERT_KEY_CONTEXT;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO CERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CTL_ENTRY CTL_ENTRY;

typedef struct _CERT_REQUEST_INFO CERT_REQUEST_INFO;

typedef struct _CRYPT_RETRIEVE_AUX_INFO *PCRYPT_RETRIEVE_AUX_INFO;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPT_KEY_PROV_PARAM CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO *PCERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRL_DIST_POINT_NAME *PCRL_DIST_POINT_NAME;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CRYPT_DECODE_PARA *PCRYPT_DECODE_PARA;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO CMSG_CONTENT_ENCRYPT_INFO;

typedef BOOL (*PFN_CMSG_IMPORT_MAIL_LIST)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef struct _CERT_CHAIN_PARA *PCERT_CHAIN_PARA;

typedef struct _CMSG_HASHED_ENCODE_INFO *PCMSG_HASHED_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB *PCERT_RDN_VALUE_BLOB;

typedef struct _CMC_TAGGED_ATTRIBUTE CMC_TAGGED_ATTRIBUTE;

typedef struct _RSAPUBKEY RSAPUBKEY;

typedef BOOL (*PFN_CERT_STORE_PROV_READ_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, PCCERT_CONTEXT *);

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA *PCERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CERT_POLICY_MAPPINGS_INFO *PCERT_POLICY_MAPPINGS_INFO;

#define CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED 8

#define CRL_FIND_ISSUED_BY_BASE_FLAG 8

#define CALG_TEK 26123

#define ALG_SID_AES_128 14

#define CRYPTPROTECT_CRED_REGENERATE 128

#define CERT_QUERY_CONTENT_PKCS7_UNSIGNED 9

#define CERT_FIND_ISSUER_NAME 131076

#define X509_BITS_WITHOUT_TRAILING_ZEROES 51

#define ALG_CLASS_SIGNATURE 8192

#define CERT_FIND_PUBLIC_KEY 393216

#define X509_ANY_STRING 6

#define ALG_SID_DESX 4

#define CERT_TRUST_CTL_IS_NOT_TIME_VALID 131072

#define CMSG_SIGNED_AND_ENVELOPED 4

#define ALG_SID_SAFERSK64 7

#define CERT_QUERY_FORMAT_BASE64_ENCODED 2

#define CERT_INFO_SERIAL_NUMBER_FLAG 2

#define CERT_STORE_CTRL_RESYNC 1

#define CONTEXT_OID_CRL 2

#define CERT_TRUST_HAS_EXACT_MATCH_ISSUER 1

#define CERT_NAME_STR_REVERSE_FLAG 33554432

#define CERT_STORE_OPEN_EXISTING_FLAG 16384

#define CALG_AES_192 26127

#define CERT_STORE_PROV_FREE_FIND_CRL_FUNC 18

#define CERT_SYSTEM_STORE_USERS 393216

#define CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG 16384

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE 16

#define CERT_QUERY_FORMAT_FLAG_ALL 14

#define CMS_SIGNER_INFO 501

#define CRYPT_USER_PROTECTED 2

#define CRYPT_ACQUIRE_USE_PROV_INFO_FLAG 2

#define CRYPT_MODE_CBCOFMI 10

#define CMC_FAIL_TRY_LATER 12

#define PP_KEYEXCHANGE_ALG 14

#define CERT_COMPARE_SHA1_HASH 1

#define CRL_REASON_CA_COMPROMISE_FLAG 32

#define CRYPT_PUBKEY_ALG_OID_GROUP_ID 3

#define CERT_STORE_CTRL_AUTO_RESYNC 4

#define RSA_CSP_PUBLICKEYBLOB 19

#define CERT_TRUST_NO_ERROR 0

#define CMSG_ENCRYPT_PARAM 26

#define CRYPT_FLAG_SIGNING 32

#define KP_CERTIFICATE 26

#define CERT_FIND_CROSS_CERT_DIST_POINTS 1114112

#define KP_HIGHEST_VERSION 41

#define CERT_KEY_SPEC_PROP_ID 6

#define CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG 4

#define CERT_STORE_PROV_READ_CTL_FUNC 9

#define ALG_SID_SEAL 2

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT 2

#define CERT_RDN_ANY_TYPE 0

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ID 2

#define INTERNATIONAL_USAGE 1

#define CALG_KEA_KEYX 43524

#define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL 268435455

#define CRYPT_DATA_KEY 2048

#define CRL_DIST_POINT_ERR_INDEX_MASK 127

#define CRYPT_ENCRYPT 1

#define PROV_SSL 6

#define CMC_OTHER_INFO_FAIL_CHOICE 1

#define CMSG_RECIPIENT_COUNT_PARAM 17

#define URL_OID_CERTIFICATE_FRESHEST_CRL 6

#define CERT_TRUST_HAS_PREFERRED_ISSUER 256

#define CRYPT_NDR_ENCODING 2

#define CERT_STORE_DELETE_FLAG 16

#define CERT_FIND_SUBJECT_CERT 720896

#define CRL_FIND_ANY 0

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT 16

#define CERT_AUTO_ENROLL_PROP_ID 21

#define CERT_CLOSE_STORE_CHECK_FLAG 2

#define CERT_QUERY_CONTENT_CERT 1

#define CERT_FIND_NO_ENHKEY_USAGE_FLAG 8

#define CRYPT_OWF_REPL_LM_HASH 1

#define CRYPT_KEYID_ALLOC_FLAG 32768

#define CRYPT_GET_INSTALLED_OID_FUNC_FLAG 1

#define CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG 1073741824

#define PKCS_CONTENT_INFO_SEQUENCE_OF_ANY 23

#define CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG 131072

#define KP_CLEAR_KEY 27

#define CERT_OID_NAME_STR 2

#define CONTEXT_OID_CERTIFICATE 1

#define CALG_SKIPJACK 26122

#define ALG_SID_SSL3_MASTER 1

#define CMSG_SIGNER_INFO_PARAM 6

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT 32

#define CERT_VERIFY_TRUSTED_SIGNERS_FLAG 2

#define CERT_FIND_SUBJECT_ATTR 196615

#define CONTEXT_OID_CTL 3

#define CERT_NAME_URL_TYPE 7

#define CERT_TRUST_INVALID_POLICY_CONSTRAINTS 512

#define CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE 1

#define PROV_MS_EXCHANGE 5

#define CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG 1

#define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT 32768

#define CERT_NAME_DISABLE_IE4_UTF8_FLAG 65536

#define CERT_KEY_CERT_SIGN_KEY_USAGE 4

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG 16

#define CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG 2

#define CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG 1

#define CMSG_DATA_FLAG 2

#define CERT_KEY_ENCIPHERMENT_KEY_USAGE 32

#define CALG_AES_128 26126

#define ALG_TYPE_BLOCK 1536

#define CTL_CERT_SUBJECT_TYPE 2

#define CRYPT_LAST_OID_GROUP_ID 10

#define ALG_CLASS_DATA_ENCRYPT 24576

#define CERT_ENCIPHER_ONLY_KEY_USAGE 1

#define REVOCATION_OID_CRL_REVOCATION 1

#define CERT_COMPARE_ISSUER_OF 12

#define CERT_TRUST_PUB_ALLOW_TRUST_MASK 3

#define CMSG_CMS_ENCAPSULATED_CTL_FLAG 32768

#define CALG_SCHANNEL_MAC_KEY 19459

#define CONTEXT_OID_CAPI2_ANY 5

#define CERT_FIND_NO_CTL_USAGE_FLAG 8

#define CERT_DESCRIPTION_PROP_ID 13

#define CERT_TRUST_IS_NOT_TIME_NESTED 2

#define CERT_COMPARE_KEY_SPEC 9

#define CRYPT_READ 8

#define ALG_SID_AGREED_KEY_ANY 3

#define CERT_SYSTEM_STORE_SERVICES_ID 5

#define CRYPT_FLAG_TLS1 8

#define CRYPT_FORMAT_RDN_UNQUOTE 1024

#define CMSG_DETACHED_FLAG 4

#define CERT_LAST_USER_PROP_ID 65535

#define CRYPT_SIGN_ALG_OID_GROUP_ID 4

#define CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG 2147483648

#define CERT_RDN_INT4_STRING 11

#define CRYPT_DECODE_TO_BE_SIGNED_FLAG 2

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 1073741824

#define ALG_SID_DSS_DMS 2

#define CRYPT_ENCODE_DECODE_NONE 0

#define CMSG_SIGNER_COUNT_PARAM 5

#define CRYPT_IMPL_REMOVABLE 8

#define PKCS_7_ASN_ENCODING 65536

#define ALG_SID_IDEA 5

#define CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG 16384

#define PP_ENUMALGS_EX 22

#define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY 1024

#define CRYPT_STRING_BASE64REQUESTHEADER 3

#define CERT_UNICODE_VALUE_ERR_INDEX_MASK 65535

#define CRYPT_DECODE_SHARE_OID_STRING_FLAG 4

#define CERT_REGISTRY_STORE_CLIENT_GPT_FLAG 2147483648

#define PROV_RSA_SCHANNEL 12

#define CTL_FIND_NO_LIST_ID_CBDATA 4294967295

#define ALG_SID_SCHANNEL_MAC_KEY 3

#define CERT_FIND_MD5_HASH 262144

#define CRYPT_PREGEN 64

#define PKCS_ATTRIBUTES 48

#define PKCS_RC2_CBC_PARAMETERS 41

#define CERT_SMART_CARD_DATA_PROP_ID 16

#define CERT_DSS_S_LEN 20

#define CERT_CHAIN_REVOCATION_CHECK_END_CERT 268435456

#define CERT_STORE_PROV_WRITE_CERT_FUNC 2

#define KP_CLIENT_RANDOM 21

#define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE 16

#define CERT_STORE_ADD_NEWER 6

#define CONTEXT_OID_PKCS7 4

#define CRYPT_MATCH_ANY_ENCODING_TYPE 4294967295

#define PROV_EC_ECNRA_FULL 17

#define CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG 1

#define CRYPT_RC2_128BIT_VERSION 58

#define ALG_SID_3DES 3

#define CMSG_MAIL_LIST_HANDLE_KEY_CHOICE 1

#define CRYPT_STRING_HEX_ANY 8

#define CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST 1

#define CRYPTPROTECT_UI_FORBIDDEN 1

#define CERT_SYSTEM_STORE_CURRENT_SERVICE 262144

#define CRYPT_LITTLE_ENDIAN 1

#define CRYPTPROTECT_VERIFY_PROTECTION 64

#define CERT_STORE_PROV_PHYSICAL_W 14

#define CMSG_SIGNER_INFO_V3 3

#define CMSG_SIGNER_INFO_V1 1

#define CERT_STORE_MANIFOLD_FLAG 256

#define CMSG_KEY_AGREE_RECIPIENT 2

#define CERT_ALT_NAME_URL 7

#define CRYPT_MODE_CFBP 7

#define CMSG_SIGNER_UNAUTH_ATTR_PARAM 10

#define CERT_ARCHIVED_KEY_HASH_PROP_ID 65

#define CERT_PROT_ROOT_ONLY_LM_GPT_FLAG 8

#define CRYPT_OID_INFO_SIGN_KEY 4

#define CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 2

#define CRYPT_CREATE_IV 512

#define CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID 24

#define CRYPT_VERIFY_DATA_HASH 64

#define CERT_SET_KEY_CONTEXT_PROP_ID 1

#define CERT_TRUST_IS_UNTRUSTED_ROOT 32

#define PP_ENUMCONTAINERS 2

#define RSA1024BIT_KEY 67108864

#define X509_UNICODE_NAME 20

#define CMSG_ENCODE_SORTED_CTL_FLAG 1

#define CRYPT_FORMAT_SEMICOLON 256

#define CMSG_TRUSTED_SIGNER_FLAG 1

#define CRYPT_DESTROYKEY 4

#define CRYPT_FLAG_PCT1 1

#define CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG 1

#define X509_DSS_SIGNATURE 40

#define CRYPT_EXPORT 4

#define CMSG_VERIFY_SIGNER_NULL 4

#define PP_KEYSTORAGE 17

#define PP_SESSION_KEYSIZE 20

#define CERT_UNICODE_RDN_ERR_INDEX_SHIFT 22

#define CERT_INFO_SUBJECT_FLAG 7

#define KP_PRECOMP_SHA 25

#define X509_MULTI_BYTE_INTEGER 28

#define CERT_TRUST_IS_NOT_SIGNATURE_VALID 8

#define CMSG_CTRL_DEL_CRL 13

#define CMSG_MAIL_LIST_VERSION 4

#define CRYPT_STRING_BASE64 1

#define CRYPT_DECODE_ALLOC_FLAG 32768

#define ALG_TYPE_ANY 0

#define CERT_INFO_VERSION_FLAG 1

#define CERT_REGISTRY_STORE_REMOTE_FLAG 65536

#define PKCS_CTL 37

#define PROV_EC_ECNRA_SIG 15

#define CERT_FIND_CTL_USAGE 655360

#define URL_OID_CTL_ISSUER 3

#define CALG_HASH_REPLACE_OWF 32779

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL 3

#define CRYPTLIMIT_USING_PCT 1

#define CERT_COMPARE_EXISTING 13

#define CERT_CHAIN_THREAD_STORE_SYNC 2

#define CMC_STATUS 61

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL 5

#define PROV_STT_BRND 9

#define CRL_DIST_POINT_ISSUER_RDN_NAME 2

#define X509_ASN_ENCODING 1

#define CRYPTPROTECT_LAST_RESERVED_FLAGVAL 4294967295

#define CERT_SYSTEM_STORE_LOCATION_SHIFT 16

#define X509_NAME_VALUE 6

#define CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION 0

#define X509_OCTET_STRING 25

#define CERT_RDN_DISABLE_IE4_UTF8_FLAG 16777216

#define NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE 128

#define CRYPT_USER_KEYSET 4096

#define CRYPT_OID_INFO_ALGID_KEY 3

#define X942_DH_PARAMETERS 50

#define CERT_RDN_GENERAL_STRING 10

#define CERT_STORE_PROV_DELETE_CRL_FUNC 7

#define ALG_SID_HMAC 9

#define PROV_DSS_DH 13

#define X509_BASIC_CONSTRAINTS2 15

#define PUBLICKEYBLOBEX 10

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT 2

#define CRYPT_KEEP_TIME_VALID 128

#define CMSG_ENVELOPED_FLAG 8

#define CRYPT_MODE_CBCI 6

#define CERT_RENEWAL_PROP_ID 64

#define ALG_TYPE_DH 2560

#define CRYPT_INITIATOR 64

#define CERT_CHAIN_CACHE_END_CERT 1

#define KP_SALT 2

#define PP_CLIENT_HWND 1

#define PKCS_ENCRYPTED_PRIVATE_KEY_INFO 45

#define NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE 64

#define SORTED_CTL_EXT_HASH_BUCKET_OFFSET 12

#define CMSG_ATTR_CERT_COUNT_PARAM 31

#define CERT_QUERY_CONTENT_PKCS7_SIGNED 8

#define CRYPT_FORMAT_STR_MULTI_LINE 1

#define CMSG_VERIFY_SIGNER_CHAIN 3

#define ALG_TYPE_RSA 1024

#define ALG_SID_TEK 11

#define CRYPT_RETRIEVE_MULTIPLE_OBJECTS 1

#define PP_CONTAINER 6

#define CERT_CHAIN_TIMESTAMP_TIME 512

#define OPAQUEKEYBLOB 9

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG 2147483648

#define HP_HMAC_INFO 5

#define CERT_CROSS_CERT_DIST_POINTS_PROP_ID 23

#define CRYPT_REGISTER_LAST_INDEX 4294967295

#define CERT_INFO_EXTENSION_FLAG 11

#define PP_VERSION 5

#define CRYPT_RC2_64BIT_VERSION 120

#define ZERO_PADDING 3

#define CRYPT_MODE_ECB 2

#define ALG_SID_SSL3SHAMD5 8

#define CRYPT_RECIPIENT 16

#define CERT_VERIFY_UPDATED_CTL_FLAG 1

#define CALG_DSS_SIGN 8704

#define KP_SCHANNEL_ALG 20

#define PKCS_PRIVATE_KEY_INFO 44

#define CERT_STORE_PROV_CLOSE_FUNC 0

#define X509_CROSS_CERT_DIST_POINTS 58

#define X509_DH_PUBLICKEY 38

#define CMC_STATUS_CONFIRM_REQUIRED 5

#define CERT_QUERY_CONTENT_SERIALIZED_CERT 5

#define CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG 8

#define CRYPTPROTECT_LOCAL_MACHINE 4

#define PROV_STT_MER 7

#define CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG 512

#define CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG 8

#define HCCE_CURRENT_USER 0

#define CERT_FIND_SUBJECT_STR_W 524295

#define HP_HASHVAL 2

#define KP_PERMISSIONS 6

#define CRYPT_TYPE2_FORMAT 2

#define CERT_STORE_REVOCATION_FLAG 4

#define CERT_TRUST_INVALID_EXTENSION 256

#define CERT_SYSTEM_STORE_CURRENT_USER_ID 1

#define CRYPT_LAST_ALG_OID_GROUP_ID 4

#define USAGE_MATCH_TYPE_AND 0

#define CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST 2

#define X942_OTHER_INFO 52

#define ALG_SID_EXAMPLE 80

#define CERT_STORE_PROV_CONTROL_FUNC 13

#define CERT_FIND_SUBJECT_STR_A 458759

#define CERT_CTL_USAGE_PROP_ID 9

#define CERT_FIRST_RESERVED_PROP_ID 92

#define X509_AUTHORITY_KEY_ID 9

#define CRYPT_STRING_HEXASCII 5

#define CRYPTPROTECT_PROMPT_STRONG 8

#define CERT_STORE_PROV_SYSTEM_STORE_FLAG 8

#define CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG 32

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG 2147483648

#define CRYPT_ENCODE_ALLOC_FLAG 32768

#define CALG_RSA_KEYX 41984

#define CMSG_SIGNER_INFO_CMS_VERSION 3

#define X509_POLICY_MAPPINGS 56

#define CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION 1

#define CERT_CREATE_SELFSIGN_NO_SIGN 1

#define X509_ENHANCED_KEY_USAGE 36

#define CERT_RDN_FLAGS_MASK 4278190080

#define CERT_INFO_SUBJECT_UNIQUE_ID_FLAG 10

#define CALG_TLS1_MASTER 19462

#define CERT_KEY_PROV_INFO_PROP_ID 2

#define CMSG_ATTR_CERT_PARAM 32

#define PKCS_UTC_TIME 17

#define CERT_COMPARE_HASH 1

#define CERT_STORE_PROV_WRITE_ADD_FLAG 1

#define CERT_DECIPHER_ONLY_KEY_USAGE 128

#define CRYPT_FIRST 1

#define ALG_SID_SKIPJACK 10

#define CTL_FIND_ANY 0

#define CERT_STORE_SAVE_TO_FILENAME 4

#define CALG_RSA_SIGN 9216

#define X509_AUTHORITY_INFO_ACCESS 32

#define CERT_PVK_FILE_PROP_ID 12

#define CALG_3DES_112 26121

#define CALG_DES 26113

#define CMSG_CTRL_ADD_CRL 12

#define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL 8192

#define CERT_INFO_NOT_BEFORE_FLAG 5

#define CALG_SSL2_MASTER 19461

#define CMSG_COMPUTED_HASH_PARAM 22

#define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS 1024

#define CERT_STORE_UPDATE_KEYID_FLAG 1024

#define CERT_STORE_PROV_NO_PERSIST_FLAG 4

#define CMSG_CRYPT_RELEASE_CONTEXT_FLAG 32768

#define PP_SIGNATURE_ALG 15

#define CALG_DESX 26116

#define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS 128

#define CRYPT_ONLINE 128

#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID 7

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN 3

#define CMSG_CERT_PARAM 12

#define CERT_RDN_PRINTABLE_STRING 4

#define CRYPT_LOCALIZED_NAME_ENCODING_TYPE 0

#define CMSG_TYPE_PARAM 1

#define CRYPT_STRING_HEX 4

#define CERT_ENROLLMENT_PROP_ID 26

#define CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE 4

#define PP_PROVTYPE 16

#define CRYPT_SUCCEED 1

#define CRYPT_ACCUMULATIVE_TIMEOUT 2048

#define CRYPT_FORMAT_RDN_CRLF 512

#define SYMMETRICWRAPKEYBLOB 11

#define CMSG_HASHED 5

#define CMC_STATUS_NO_SUPPORT 4

#define ALG_SID_RIPEMD160 7

#define CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG 16

#define CERT_DSS_SIGNATURE_LEN 40

#define CERT_STORE_PROV_LDAP 16

#define CRYPT_ARCHIVE 256

#define CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 2048

#define CERT_STORE_PROV_READ_CERT_FUNC 1

#define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY 33554432

#define CRL_REASON_CESSATION_OF_OPERATION 5

#define KP_SALT_EX 10

#define CERT_FIND_KEY_SPEC 589824

#define PLAINTEXTKEYBLOB 8

#define CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED 512

#define CRYPT_MODE_CBCOFM 9

#define CUR_BLOB_VERSION 2

#define PROV_STT_ISS 11

#define CERT_CHAIN_POLICY_BASE 1

#define KP_CMS_KEY_INFO 37

#define CERT_ALT_NAME_IP_ADDRESS 8

#define CERT_UNICODE_IS_RDN_ATTRS_FLAG 1

#define CERT_CREATE_CONTEXT_SORTED_FLAG 2

#define ALG_TYPE_SECURECHANNEL 3072

#define CRYPTPROTECT_PROMPT_ON_PROTECT 2

#define CRYPT_FORMAT_CRLF 512

#define PROV_STT_ACQ 8

#define CMSG_HASHED_DATA_PKCS_1_5_VERSION 0

#define CERT_NAME_ISSUER_FLAG 1

#define CMSG_HASHED_DATA_V2 2

#define CMSG_HASHED_DATA_V0 0

#define CERT_ALT_NAME_REGISTERED_ID 9

#define KP_MODE_BITS 5

#define CERT_COMPARE_PROPERTY 5

#define ALG_CLASS_KEY_EXCHANGE 40960

#define KP_PUB_EX_LEN 28

#define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE 256

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK 255

#define CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG 1024

#define CERT_TRUST_PUB_ALLOW_END_USER_TRUST 0

#define CALG_3DES 26115

#define CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CERT_ALT_NAME_OTHER_NAME 1

#define CRYPT_MACHINE_DEFAULT 1

#define CERT_ENCODING_TYPE_MASK 65535

#define CALG_AGREEDKEY_ANY 43523

#define CERT_FIRST_USER_PROP_ID 32768

#define TIME_VALID_OID_GET_CTL 1

#define X509_BASIC_CONSTRAINTS 13

#define PKCS5_PADDING 1

#define AT_KEYEXCHANGE 1

#define CRYPT_DONT_CHECK_TIME_VALIDITY 512

#define CRYPT_ACQUIRE_CACHE_FLAG 1

#define KP_EFFECTIVE_KEYLEN 19

#define CERT_STORE_PROV_WRITE_CRL_FUNC 6

#define NETSCAPE_SIGN_CA_CERT_TYPE 1

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB 1

#define X509_ENUMERATED 29

#define CRYPT_BLOB_VER3 128

#define CRYPT_UI_PROMPT 4

#define PKCS12_IMPORT_RESERVED_MASK 4294901760

#define X509_ALTERNATE_NAME 12

#define X509_AUTHORITY_KEY_ID2 31

#define CERT_QUERY_CONTENT_FLAG_ALL 16382

#define PKCS_CONTENT_INFO 33

#define SCHANNEL_ENC_KEY 1

#define CERT_INFO_ISSUER_UNIQUE_ID_FLAG 9

#define X509_CERTIFICATE_TEMPLATE 64

#define X509_KEYGEN_REQUEST_TO_BE_SIGNED 21

#define CMC_FAIL_MUST_ARCHIVE_KEYS 6

#define CALG_AES_256 26128

#define CRL_REASON_CESSATION_OF_OPERATION_FLAG 4

#define CMSG_CTRL_DEL_SIGNER 7

#define ALG_TYPE_STREAM 2048

#define CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG 1

#define CERT_STORE_PROV_READ_CRL_FUNC 5

#define CMSG_CTRL_ADD_CMS_SIGNER_INFO 20

#define CERT_FIND_ENHKEY_USAGE 655360

#define CMSG_AUTHENTICATED_ATTRIBUTES_FLAG 8

#define CMSG_RECIPIENT_INFO_PARAM 19

#define CRL_FIND_ISSUED_BY 1

#define ALG_SID_KEA 4

#define CERT_ID_SHA1_HASH 3

#define CERT_CHAIN_POLICY_SSL 4

#define CMSG_UNPROTECTED_ATTR_PARAM 37

#define ALG_CLASS_MSG_ENCRYPT 16384

#define CERT_STORE_PROV_COLLECTION 11

#define CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM 35

#define PKCS_RSA_PRIVATE_KEY 43

#define CMSG_RECIPIENT_INDEX_PARAM 18

#define CMSG_CERT_COUNT_PARAM 11

#define CERT_LDAP_STORE_SIGN_FLAG 65536

#define CERT_STORE_PROV_DELETED_FLAG 2

#define HP_TLS1PRF_LABEL 6

#define CRYPT_INSTALL_OID_INFO_BEFORE_FLAG 1

#define CERT_QUERY_CONTENT_FLAG_PKCS10 2048

#define CRYPT_KEYID_DELETE_FLAG 16

#define CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG 2

#define CMSG_SIGNED_DATA_CMS_VERSION 3

#define CERT_STORE_CTRL_COMMIT_CLEAR_FLAG 2

#define KP_KEYEXCHANGE_PIN 32

#define PP_ENUMALGS 1

#define CERT_CREATE_SELFSIGN_NO_KEY_INFO 2

#define CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS 3840

#define CERT_RDN_GRAPHIC_STRING 8

#define CRYPT_POLICY_OID_GROUP_ID 8

#define CERT_COMPARE_MASK 65535

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 4

#define CMSG_DATA 1

#define CMSG_CONTENTS_OCTETS_FLAG 16

#define CERT_FIND_VALID_ENHKEY_USAGE_FLAG 32

#define CMSG_VERIFY_SIGNER_CERT 2

#define CMSG_SIGNER_AUTH_ATTR_PARAM 9

#define CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL 2

#define CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC 4

#define CERT_SIGNATURE_HASH_PROP_ID 15

#define X509_EXTENSIONS 5

#define CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG 131072

#define PROV_INTEL_SEC 22

#define CALG_SEAL 26626

#define X509_DSS_PARAMETERS 39

#define CERT_INFO_SIGNATURE_ALGORITHM_FLAG 3

#define CERT_ARCHIVED_PROP_ID 19

#define PP_KEYEXCHANGE_KEYSIZE 12

#define CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED 4

#define CRYPT_EXPORTABLE 1

#define CRL_REASON_SUPERSEDED 4

#define CRYPT_ASN_ENCODING 1

#define CERT_STORE_NO_CRYPT_RELEASE_FLAG 1

#define CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC 12

#define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE 32768

#define CERT_TRUST_IS_NOT_TIME_VALID 1

#define X509_DH_PARAMETERS 47

#define CERT_STORE_SAVE_AS_PKCS7 2

#define TIME_VALID_OID_FLUSH_CTL 1

#define CALG_SCHANNEL_ENC_KEY 19463

#define CRYPT_EXT_OR_ATTR_OID_GROUP_ID 6

#define CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG 256

#define CERT_RDN_T61_STRING 5

#define EXPORT_PRIVATE_KEYS 4

#define CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG 2

#define CMSG_ENVELOPED_DATA_CMS_VERSION 2

#define ALG_SID_RSA_ANY 0

#define PP_USE_HARDWARE_RNG 38

#define CRYPTLIMIT_USING_SGC 2

#define CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY 2147483648

#define CERT_NAME_STR_SEMICOLON_FLAG 1073741824

#define CMSG_HASH_ALGORITHM_PARAM 20

#define CMC_STATUS_FAILED 2

#define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY 2

#define PUBLICKEYBLOB 6

#define CERT_VERIFY_ALLOW_MORE_USAGE_FLAG 8

#define CRYPT_X942_KEY_LENGTH_BYTE_LENGTH 4

#define CRYPT_FAILED 0

#define CERT_STORE_ADD_USE_EXISTING 2

#define CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG 1

#define CALG_SSL3_SHAMD5 32776

#define CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID 2

#define ALG_SID_RSA_PKCS 1

#define PROV_EC_ECDSA_FULL 16

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG 2

#define ALG_SID_DH_EPHEM 2

#define CERT_NAME_ATTR_TYPE 3

#define CERT_COMPARE_CROSS_CERT_DIST_POINTS 17

#define ALG_SID_SHA 4

#define CERT_FRIENDLY_NAME_PROP_ID 11

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE 589824

#define CMC_FAIL_UNSUPORTED_EXT 5

#define CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG 16

#define CERT_TRUST_IS_CYCLIC 128

#define CMSG_CTRL_ADD_ATTR_CERT 14

#define ALG_TYPE_DSS 512

#define CMSG_VERSION_PARAM 30

#define CRYPT_FORMAT_SIMPLE 1

#define CERT_CREATE_CONTEXT_NO_ENTRY_FLAG 8

#define CERT_QUERY_CONTENT_PFX 12

#define CERT_CHAIN_ENABLE_SHARE_STORE 32

#define CMSG_ENCODED_SIGNER 28

#define CRYPT_FORMAT_COMMA 4096

#define CERT_STORE_PROV_SYSTEM_REGISTRY 13

#define X509_KEY_ATTRIBUTES 10

#define CRYPT_MAC 32

#define CRYPT_OID_INFO_OID_KEY 1

#define X509_CERT_PAIR 53

#define CRYPT_MODE_CTS 5

#define CRYPT_LDAP_SIGN_RETRIEVAL 65536

#define CERT_ENHKEY_USAGE_PROP_ID 9

#define NETSCAPE_SSL_CA_CERT_TYPE 4

#define PP_ENUMMANDROOTS 25

#define CERT_CHAIN_FIND_BY_ISSUER 1

#define URL_OID_CERTIFICATE_ISSUER 1

#define X509_NDR_ENCODING 2

#define CERT_RDN_TYPE_MASK 255

#define CMSG_INDEFINITE_LENGTH 4294967295

#define ALG_SID_RIPEMD 6

#define CTL_ENTRY_FROM_PROP_CHAIN_FLAG 1

#define ALG_SID_PCT1_MASTER 4

#define CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG 2

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_A 1

#define CRL_REASON_CA_COMPROMISE 2

#define CRYPT_MACHINE_KEYSET 32

#define CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG 65536

#define X509_BITS 26

#define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT 8192

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_W 2

#define CERT_STORE_LOCALIZED_NAME_PROP_ID 4096

#define CRYPT_TEMPLATE_OID_GROUP_ID 9

#define CERT_FIND_HASH 65536

#define CERT_STORE_CTL_CONTEXT 3

#define PKCS12_EXPORT_RESERVED_MASK 4294901760

#define TIME_VALID_OID_GET_CRL 2

#define CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG 4

#define CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC 8

#define CRL_REASON_KEY_COMPROMISE 1

#define PP_UNIQUE_CONTAINER 36

#define CMSG_KEY_TRANS_CMS_VERSION 2

#define CERT_QUERY_CONTENT_CRL 3

#define CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 65536

#define CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG 1

#define CMSG_INNER_CONTENT_TYPE_PARAM 4

#define CERT_STORE_SIGNATURE_FLAG 1

#define ALG_SID_SCHANNEL_MASTER_HASH 2

#define CERT_COMPARE_MD5_HASH 4

#define CERT_FORTEZZA_DATA_PROP_ID 18

#define CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG 4

#define CERT_LAST_RESERVED_PROP_ID 32767

#define CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG 1

#define CRYPT_IPSEC_HMAC_KEY 256

#define CERT_EXCLUDED_SUBTREE_BIT 2147483648

#define CMSG_VERIFY_SIGNER_PUBKEY 1

#define CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT 0

#define CERT_STORE_PROV_FILENAME_W 8

#define CERT_STORE_CERTIFICATE_CONTEXT 1

#define CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG 1

#define CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG 8

#define CERT_STORE_PROV_DELETE_CERT_FUNC 3

#define CERT_PUBKEY_HASH_RESERVED_PROP_ID 8

#define CERT_FIND_ISSUER_OF 786432

#define CERT_FIND_PROPERTY 327680

#define KP_KEYLEN 9

#define CERT_RDN_ENABLE_T61_UNICODE_FLAG 2147483648

#define CERT_STORE_PROV_FILENAME_A 7

#define PROV_STT_ROOT 10

#define CMSG_ENCRYPTED 6

#define CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC 16

#define CERT_QUERY_CONTENT_CTL 2

#define X509_CERT_REQUEST_TO_BE_SIGNED 4

#define CERT_TRUST_IS_NOT_VALID_FOR_USAGE 16

#define CRYPT_MODE_OFBP 8

#define ALG_SID_DH_SANDF 1

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED 256

#define CRYPT_SERVER 1024

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG 8

#define CMSG_CTRL_VERIFY_HASH 5

#define CERT_RDN_NUMERIC_STRING 3

#define CERT_VERIFY_NO_TIME_CHECK_FLAG 4

#define CERT_STORE_SHARE_STORE_FLAG 64

#define CERT_STORE_PROV_EXTERNAL_FLAG 1

#define CALG_HMAC 32777

#define CMC_RESPONSE 60

#define CRYPT_VERIFYCONTEXT 4026531840

#define CERT_STORE_ADD_REPLACE_EXISTING 3

#define CERT_NAME_STR_CRLF_FLAG 134217728

#define CMC_OTHER_INFO_NO_CHOICE 0

#define CRYPT_DELETE_KEYSET 16

#define CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG 2

#define NETSCAPE_SIGN_CERT_TYPE 16

#define CERT_STORE_NO_CRL_FLAG 65536

#define PP_KEYSET_SEC_DESCR 8

#define CERT_STORE_CTRL_COMMIT_FORCE_FLAG 1

#define ALG_SID_SAFERSK128 8

#define CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES 5

#define CMSG_SIGNER_INFO_PKCS_1_5_VERSION 1

#define CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG 2

#define CERT_COMPARE_CTL_USAGE 10

#define CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED 3

#define CMC_FAIL_POP_FAILED 9

#define CMC_FAIL_BAD_MESSAGE_CHECK 1

#define CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG 2147483648

#define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING 64

#define CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG 4

#define CTL_FIND_SUBJECT 4

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG 1

#define CRYPT_UPDATE_KEY 8

#define ALG_SID_RSA_ENTRUST 3

#define CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR 8

#define CRYPT_WRITE 16

#define CMSG_CTRL_DECRYPT 2

#define URL_OID_CRL_ISSUER 5

#define CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG 4

#define CALG_RC2 26114

#define CERT_FIND_OPTIONAL_CTL_USAGE_FLAG 1

#define CERT_STORE_PROV_FIND_CERT_FUNC 14

#define CRYPT_IMPL_MIXED 3

#define CRYPT_FIND_MACHINE_KEYSET_FLAG 2

#define ALG_SID_SCHANNEL_ENC_KEY 7

#define CERT_SYSTEM_STORE_SERVICES 327680

#define CRYPT_X942_PUB_INFO_BYTE_LENGTH 64

#define CALG_RC4 26625

#define CALG_RC5 26125

#define ALG_SID_RSA_MSATWORK 2

#define CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG 2

#define PP_KEYEXCHANGE_PIN 32

#define CERT_STORE_CRL_CONTEXT_FLAG 4

#define PP_APPLI_CERT 18

#define CRL_FIND_ISSUED_BY_AKI_FLAG 1

#define CRYPTPROTECT_PROMPT_RESERVED 4

#define CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG 32768

#define CRYPT_STRING_BASE64X509CRLHEADER 9

#define CRL_REASON_AFFILIATION_CHANGED_FLAG 16

#define CERT_KEY_PROV_HANDLE_PROP_ID 1

#define CERT_DATA_ENCIPHERMENT_KEY_USAGE 16

#define CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID 28

#define CRYPT_FIND_SILENT_KEYSET_FLAG 64

#define CERT_RDN_UNICODE_STRING 12

#define CERT_CHAIN_POLICY_NT_AUTH 6

#define CRYPT_ACQUIRE_SILENT_FLAG 64

#define CMSG_CMS_RECIPIENT_COUNT_PARAM 33

#define CERT_INFO_NOT_AFTER_FLAG 6

#define CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG 64

#define REPORT_NO_PRIVATE_KEY 1

#define CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG 512

#define CERT_COMPARE_SUBJECT_CERT 11

#define CERT_NON_REPUDIATION_KEY_USAGE 64

#define CRL_REASON_SUPERSEDED_FLAG 8

#define CMSG_CRL_PARAM 14

#define CTL_FIND_MD5_HASH 2

#define CRYPT_MODE_CFB 4

#define CRYPT_CREATE_SALT 4

#define CRYPT_NEWKEYSET 8

#define CERT_STORE_CTL_CONTEXT_FLAG 8

#define KP_KEYVAL 30

#define CRL_DIST_POINT_NO_NAME 0

#define CRYPT_OID_INFO_NAME_KEY 2

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID 8

#define CERT_STORE_ADD_ALWAYS 4

#define X509_CERT_POLICIES 16

#define CERT_IE30_RESERVED_PROP_ID 7

#define CRYPT_STRING_HEXADDR 10

#define CALG_NO_SIGN 8192

#define CALG_AES 26129

#define CMC_TAGGED_CERT_REQUEST_CHOICE 1

#define CRYPT_DONT_CACHE_RESULT 8

#define CERT_SYSTEM_STORE_USERS_ID 6

#define ALG_SID_TLS1PRF 10

#define PP_SYM_KEYSIZE 19

#define CRYPT_STRING_HEXASCIIADDR 11

#define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE 524288

#define CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG 524288

#define CMC_STATUS_SUCCESS 0

#define CERT_RDN_TELETEX_STRING 5

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID 9

#define URL_OID_CROSS_CERT_DIST_POINT 8

#define X509_KEY_USAGE 14

#define CALG_TLS1PRF 32778

#define CALG_CYLINK_MEK 26124

#define CERT_QUERY_CONTENT_FLAG_CERT_PAIR 8192

#define CERT_EFS_PROP_ID 17

#define X509_POLICY_CONSTRAINTS 57

#define CRYPT_MESSAGE_SILENT_KEYSET_FLAG 64

#define PROV_RSA_AES 24

#define HP_TLS1PRF_SEED 7

#define CERT_ACCESS_STATE_PROP_ID 14

#define CMSG_RC4_NO_SALT_FLAG 1073741824

#define PP_NAME 4

#define CERT_UNICODE_VALUE_ERR_INDEX_SHIFT 0

#define CERT_STORE_MAXIMUM_ALLOWED_FLAG 4096

#define CERT_TRUST_HAS_NAME_MATCH_ISSUER 4

#define CRL_FIND_ISSUED_FOR 3

#define CRL_REASON_AFFILIATION_CHANGED 3

#define PP_ADMIN_PIN 31

#define X509_CRL_DIST_POINTS 35

#define TIME_VALID_OID_GET_CRL_FROM_CERT 3

#define CERT_FIND_CERT_ID 1048576

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL 4

#define CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG 262144

#define CERT_RDN_VIDEOTEX_STRING 6

#define X509_DSS_PUBLICKEY 38

#define PKCS_SORTED_CTL 49

#define CERT_COMPARE_NAME 2

#define CRYPT_ASYNC_RETRIEVAL 16

#define CERT_END_ENTITY_SUBJECT_FLAG 64

#define CRYPT_STICKY_CACHE_RETRIEVAL 4096

#define CERT_SYSTEM_STORE_RELOCATE_FLAG 2147483648

#define CMSG_KEY_AGREE_STATIC_KEY_CHOICE 2

#define CERT_STORE_SET_LOCALIZED_NAME_FLAG 2

#define CERT_TRUST_IS_COMPLEX_CHAIN 65536

#define KP_X 14

#define KP_Y 15

#define AUTHTYPE_CLIENT 1

#define CRYPT_X931_FORMAT 4

#define CERT_FIND_SHA1_HASH 65536

#define CERT_FIND_PUBKEY_MD5_HASH 1179648

#define CERT_ALT_NAME_EDI_PARTY_NAME 6

#define PP_IMPTYPE 3

#define CRYPT_EXPORT_KEY 64

#define CERT_DSS_R_LEN 20

#define CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG 4

#define CMSG_SIGNER_HASH_ALGORITHM_PARAM 8

#define PKCS_SMIME_CAPABILITIES 42

#define CERT_FIND_VALID_CTL_USAGE_FLAG 32

#define ALG_SID_CYLINK_MEK 12

#define CRL_REASON_CERTIFICATE_HOLD_FLAG 2

#define ALG_CLASS_HASH 32768

#define CERT_CHAIN_POLICY_BASIC_CONSTRAINTS 5

#define CMSG_CTRL_DEL_ATTR_CERT 15

#define CERT_DATE_STAMP_PROP_ID 27

#define CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION 2

#define CERT_ALT_NAME_VALUE_ERR_INDEX_MASK 65535

#define CERT_STORE_PROV_WRITE_CTL_FUNC 10

#define CERT_STORE_READONLY_FLAG 32768

#define CERT_TRUST_IS_PARTIAL_CHAIN 65536

#define X509_CERT_CRL_TO_BE_SIGNED 3

#define CERT_CHAIN_POLICY_AUTHENTICODE 2

#define CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG 256

#define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID 262144

#define ALG_SID_ANY 0

#define CERT_COMPARE_PUBLIC_KEY 6

#define KP_PREHASH 34

#define URL_OID_CTL_NEXT_UPDATE 4

#define PROV_EC_ECDSA_SIG 14

#define TIME_VALID_OID_FLUSH_CRL 2

#define CERT_UNICODE_ATTR_ERR_INDEX_SHIFT 16

#define CERT_STORE_DELTA_CRL_FLAG 512

#define CERT_STORE_CTRL_NOTIFY_CHANGE 2

#define CRL_REASON_KEY_COMPROMISE_FLAG 64

#define CERT_FIND_SIGNATURE_HASH 917504

#define CERT_ALT_NAME_DIRECTORY_NAME 5

#define SCHANNEL_MAC_KEY 0

#define CRYPT_ACQUIRE_COMPARE_KEY_FLAG 4

#define SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG 1

#define CERT_STORE_PROV_FREE_FIND_CERT_FUNC 15

#define CERT_STORE_PROV_SERIALIZED 6

#define PKCS7_SIGNER_INFO 500

#define CMSG_BARE_CONTENT_PARAM 3

#define CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CERT_STORE_PROV_SYSTEM_REGISTRY_A 12

#define CERT_CHAIN_POLICY_AUTHENTICODE_TS 3

#define CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG 4

#define CTL_FIND_SAME_USAGE_FLAG 1

#define CMSG_ENCODING_TYPE_MASK 4294901760

#define SORTED_CTL_EXT_COUNT_OFFSET 4

#define CERT_NAME_STR_COMMA_FLAG 67108864

#define X509_UNICODE_ANY_STRING 24

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL 128

#define CERT_STORE_BASE_CRL_FLAG 256

#define CALG_DH_SF 43521

#define CERT_FIND_EXISTING 851968

#define CRYPT_ENCRYPT_ALG_OID_GROUP_ID 2

#define CMSG_SIGNED 2

#define CRYPTPROTECT_AUDIT 16

#define CRYPT_USER_DEFAULT 2

#define X509_ISSUING_DIST_POINT 54

#define KP_PRECOMP_MD5 24

#define CMSG_SIGNED_FLAG 4

#define CERT_FIND_ANY 0

#define CERT_NAME_FRIENDLY_DISPLAY_TYPE 5

#define CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG 32768

#define CERT_SYSTEM_STORE_MASK 4294901760

#define KP_SIGNATURE_PIN 33

#define CERT_TRUST_HAS_KEY_MATCH_ISSUER 2

#define CERT_UNICODE_ATTR_ERR_INDEX_MASK 63

#define CERT_STORE_PROV_DELETE_CTL_FUNC 11

#define CERT_INFO_ISSUER_FLAG 4

#define X509_SEQUENCE_OF_ANY 34

#define KP_PADDING 3

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL 64

#define CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_CTRL_KEY_TRANS_DECRYPT 16

#define CRYPT_FLAG_SSL2 2

#define CRYPT_FLAG_SSL3 4

#define CERT_RDN_ISO646_STRING 9

#define X509_KEY_USAGE_RESTRICTION 11

#define CERT_KEY_AGREEMENT_KEY_USAGE 8

#define CALG_SHA1 32772

#define CERT_STORE_NO_ISSUER_FLAG 131072

#define ALG_SID_AES 17

#define CERT_STORE_PROV_SYSTEM_REGISTRY_W 13

#define CRYPT_PSTORE 2

#define CERT_FIND_OR_ENHKEY_USAGE_FLAG 16

#define CRYPT_FORMAT_OID 4

#define CERT_CHAIN_USE_LOCAL_MACHINE_STORE 8

#define CRYPT_KEYID_SET_NEW_FLAG 8192

#define CMC_DATA 59

#define CRYPT_FIND_USER_KEYSET_FLAG 1

#define KP_MODE 4

#define PROV_FORTEZZA 4

#define CERT_TRUST_REVOCATION_STATUS_UNKNOWN 64

#define CMSG_SIGNER_ONLY_FLAG 2

#define CERT_RDN_OCTET_STRING 2

#define CERT_FIND_ISSUER_STR_A 458756

#define CMC_FAIL_NO_KEY_REUSE 10

#define CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG 128

#define CMSG_BARE_CONTENT_FLAG 1

#define CRYPT_MESSAGE_KEYID_SIGNER_FLAG 4

#define CRYPT_IMPL_SOFTWARE 2

#define CERT_COMPARE_ATTR 3

#define CRYPTPROTECT_CRED_SYNC 8

#define X509_CERT 1

#define CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG 8

#define CERT_COMPARE_KEY_IDENTIFIER 15

#define CRYPT_USERDATA 1

#define CMSG_SIGNED_DATA_V3 3

#define CALG_SSL3_MASTER 19457

#define CTL_FIND_SHA1_HASH 1

#define CMSG_SIGNED_DATA_V1 1

#define CERT_ID_KEY_IDENTIFIER 2

#define CERT_RDN_BMP_STRING 12

#define CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS 1

#define AT_SIGNATURE 2

#define CMSG_CTRL_MAIL_LIST_DECRYPT 18

#define CERT_FIND_ISSUER_STR_W 524292

#define CMC_STATUS_PENDING 3

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG 32768

#define CMSG_ENCRYPTED_FLAG 64

#define CRYPT_FORMAT_X509 2

#define CRYPT_SGCKEY 8192

#define CRYPT_HASH_ALG_OID_GROUP_ID 1

#define CERT_FIND_KEY_IDENTIFIER 983040

#define CERT_SHA1_HASH_PROP_ID 3

#define CERT_RDN_IA5_STRING 7

#define CRYPT_MODE_CBC 1

#define CRYPT_SGC_ENUM 4

#define PP_KEYX_KEYSIZE_INC 35

#define KEY_LENGTH_MASK 4294901760

#define PP_UI_PROMPT 21

#define CERT_SYSTEM_STORE_UNPROTECTED_FLAG 1073741824

#define CERT_PUBKEY_ALG_PARA_PROP_ID 22

#define CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG 1

#define CRYPT_SECRETDIGEST 1

#define CERT_STORE_CTRL_CANCEL_NOTIFY 5

#define CRL_DIST_POINT_ERR_INDEX_SHIFT 24

#define PP_KEYSET_TYPE 27

#define CRYPT_VOLATILE 4096

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT 4

#define CRYPT_DONT_VERIFY_SIGNATURE 256

#define CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE 8

#define ALG_SID_RC4 1

#define CERT_ALT_NAME_RFC822_NAME 2

#define CALG_MAC 32773

#define ALG_SID_RC2 2

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG 1

#define ALG_SID_RC5 13

#define CERT_STORE_PROV_SMART_CARD_W 15

#define PROV_DSS 3

#define CMSG_CMS_RECIPIENT_INFO_PARAM 36

#define CRYPT_STRING_BASE64HEADER 0

#define CTL_FIND_USAGE 3

#define RANDOM_PADDING 2

#define CERT_UNICODE_RDN_ERR_INDEX_MASK 1023

#define AUTHTYPE_SERVER 2

#define CERT_TRUST_IS_REVOKED 4

#define CALG_MD5 32771

#define CERT_COMPARE_SHIFT 16

#define CALG_MD2 32769

#define CALG_MD4 32770

#define PRIVATEKEYBLOB 7

#define CRYPT_NOHASHOID 1

#define CRL_DIST_POINT_FULL_NAME 1

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT 4

#define CERT_NAME_SIMPLE_DISPLAY_TYPE 4

#define USAGE_MATCH_TYPE_OR 1

#define X509_CHOICE_OF_TIME 30

#define CERT_STORE_SAVE_TO_FILENAME_W 4

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY 1

#define CRYPT_IMPORT_KEY 128

#define HP_ALGID 1

#define CERT_SYSTEM_STORE_LOCATION_MASK 16711680

#define CERT_SYSTEM_STORE_CURRENT_SERVICE_ID 4

#define CERT_STORE_SAVE_TO_FILENAME_A 3

#define CMC_ADD_ATTRIBUTES 63

#define CMSG_HASHED_DATA_CMS_VERSION 2

#define PP_CHANGE_PASSWORD 7

#define CRYPT_STRING_NOCR 2147483648

#define CERT_CHAIN_POLICY_MICROSOFT_ROOT 7

#define CMSG_SIGNED_AND_ENVELOPED_FLAG 16

#define CRYPT_DECRYPT 2

#define CERT_KEYGEN_REQUEST_V1 0

#define ALG_SID_TLS1_MASTER 6

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY 524288

#define CERT_CLOSE_STORE_FORCE_FLAG 1

#define CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED 10

#define CERT_CRL_SIGN_KEY_USAGE 2

#define CERT_NEXT_UPDATE_LOCATION_PROP_ID 10

#define CERT_COMPARE_ANY 0

#define CERT_SIMPLE_NAME_STR 1

#define PP_SIGNATURE_KEYSIZE 13

#define CERT_QUERY_OBJECT_BLOB 2

#define CERT_COMPARE_SIGNATURE_HASH 14

#define CRL_FIND_ISSUED_BY_SIGNATURE_FLAG 2

#define CERT_QUERY_CONTENT_FLAG_CERT 2

#define SORTED_CTL_EXT_FLAGS_OFFSET 0

#define CRYPT_FORMAT_RDN_REVERSE 2048

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG 4

#define CMSG_KEY_TRANS_RECIPIENT 1

#define X509_PUBLIC_KEY_INFO 8

#define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT 4096

#define CMSG_CRL_COUNT_PARAM 13

#define PP_SIGNATURE_PIN 33

#define KP_BLOCKLEN 8

#define CERT_ALT_NAME_DNS_NAME 3

#define URL_OID_CRL_FRESHEST_CRL 7

#define PKCS_TIME_REQUEST 18

#define CERT_MD5_HASH_PROP_ID 4

#define URL_OID_CERTIFICATE_CRL_DIST_POINT 2

#define CERT_STORE_PROV_REG 4

#define CERT_FIND_SUBJECT_STR 524295

#define ALG_SID_AES_256 16

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL 5

#define CMSG_KEY_TRANS_PKCS_1_5_VERSION 0

#define CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN 48

#define CERT_STORE_PROV_SYSTEM 10

#define CMSG_KEY_AGREE_ORIGINATOR_CERT 1

#define CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT 24

#define CMSG_USE_SIGNER_INDEX_FLAG 4

#define CRYPT_X942_COUNTER_BYTE_LENGTH 4

#define KP_PUB_PARAMS 39

#define CRL_V1 0

#define CRL_V2 1

#define PKCS_ATTRIBUTE 22

#define CRYPT_REGISTER_FIRST_INDEX 0

#define CRYPT_RDN_ATTR_OID_GROUP_ID 5

#define CMSG_CTRL_ADD_CERT 10

#define PROV_SPYRUS_LYNKS 20

#define KP_CMS_DH_KEY_INFO 38

#define CERT_QUERY_CONTENT_SERIALIZED_STORE 4

#define CMC_ADD_EXTENSIONS 62

#define X509_CRL_REASON_CODE 29

#define CERT_STORE_SHARE_CONTEXT_FLAG 128

#define CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS 7

#define CMSG_LENGTH_ONLY_FLAG 2

#define CERT_STORE_CRL_CONTEXT 2

#define CERT_STORE_PROV_FILENAME 8

#define CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG 4

#define CERT_TRUST_INVALID_NAME_CONSTRAINTS 2048

#define CMSG_ENCODED_MESSAGE 29

#define CRYPT_DECODE_NOCOPY_FLAG 1

#define PROV_DH_SCHANNEL 18

#define CERT_V1 0

#define CERT_COMPARE_PUBKEY_MD5_HASH 18

#define CERT_V2 1

#define CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG 2

#define CRYPT_SILENT 64

#define CMC_FAIL_INTERNAL_CA_ERROR 11

#define CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG 4

#define CERT_V3 2

#define ALG_SID_DSS_ANY 0

#define CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG 2

#define CALG_SHA 32772

#define CMC_FAIL_POP_REQUIRED 8

#define CERT_X500_NAME_STR 3

#define CMSG_CMS_ENCAPSULATED_CONTENT_FLAG 64

#define CMC_OTHER_INFO_PEND_CHOICE 2

#define CERT_REGISTRY_STORE_SERIALIZED_FLAG 131072

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CMSG_ALL_FLAGS -1

#define CERT_STORE_PROV_PKCS7 5

#define CERT_STORE_ALL_CONTEXT_FLAG -1

#define CRL_REASON_UNSPECIFIED 0

#define CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_DEFAULT_INSTALLABLE_FUNC_OID 1

#define CRYPT_RC2_40BIT_VERSION 160

#define CRYPT_OAEP 64

#define CERT_KEY_CONTEXT_PROP_ID 5

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG 1073741824

#define CERT_STORE_PROV_FREE_FIND_CTL_FUNC 21

#define CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC 22

#define CERT_QUERY_CONTENT_CERT_PAIR 13

#define CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG 8

#define PP_CONTEXT_INFO 11

#define CERT_SYSTEM_STORE_CURRENT_USER 65536

#define CERT_TRUST_IS_SELF_SIGNED 8

#define CERT_STORE_ENUM_ARCHIVED_FLAG 512

#define CRYPT_FASTSGC 2

#define CRYPT_STRING_ANY 7

#define CERT_QUERY_CONTENT_FLAG_CRL 8

#define CRYPT_DELETE_DEFAULT 4

#define CMSG_HASH_DATA_PARAM 21

#define CRYPT_CACHE_ONLY_RETRIEVAL 2

#define CERT_STORE_PROV_MSG 1

#define CTL_V1 0

#define CERT_STORE_PROV_SYSTEM_A 9

#define CERT_SUBJECT_NAME_MD5_HASH_PROP_ID 29

#define ALG_SID_CAST 6

#define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY 512

#define CRYPT_SSL2_FALLBACK 2

#define CRYPT_MODE_OFB 3

#define CMSG_CMS_RECIPIENT_INDEX_PARAM 34

#define X509_NAME_CONSTRAINTS 55

#define CMSG_HASHED_FLAG 32

#define KP_ADMIN_PIN 31

#define CERT_STORE_PROV_SYSTEM_W 10

#define CERT_NAME_STR_NO_PLUS_FLAG 536870912

#define CERT_STORE_CTRL_COMMIT 3

#define CERT_RDN_VISIBLE_STRING 9

#define CRYPT_NO_SALT 16

#define CRYPTPROTECT_NO_RECOVERY 32

#define CERT_QUERY_CONTENT_FLAG_CTL 4

#define NETSCAPE_SMIME_CERT_TYPE 32

#define PROV_RSA_SIG 2

#define X509_NAME 7

#define TIME_VALID_OID_FLUSH_CRL_FROM_CERT 3

#define CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR 9

#define CERT_HASH_PROP_ID 3

#define CRYPT_IMPL_HARDWARE 1

#define SIMPLEBLOB 1

#define ALG_SID_DSS_PKCS 1

#define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL 4

#define CERT_FIND_OR_CTL_USAGE_FLAG 16

#define CMSG_SIGNER_CERT_INFO_PARAM 7

#define CERT_STORE_SAVE_AS_STORE 1

#define CRYPT_FIRST_ALG_OID_GROUP_ID 1

#define CERT_QUERY_CONTENT_PKCS10 11

#define CALG_SCHANNEL_MASTER_HASH 19458

#define CRYPT_WIRE_ONLY_RETRIEVAL 4

#define CERT_STORE_PROV_FIND_CTL_FUNC 20

#define CERT_FILE_STORE_COMMIT_ENABLE_FLAG 65536

#define CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC 19

#define CERT_CONTEXT_REVOCATION_TYPE 1

#define CERT_NAME_EMAIL_TYPE 1

#define CMSG_ENCRYPTED_DIGEST 27

#define CRYPT_SEC_DESCR 1

#define X509_PKIX_POLICY_QUALIFIER_USERNOTICE 46

#define CERT_CREATE_CONTEXT_NOCOPY_FLAG 1

#define CMC_FAIL_BAD_ALG 0

#define CTL_ANY_SUBJECT_TYPE 1

#define CERT_RDN_UNIVERSAL_STRING 11

#define ALG_SID_MD2 1

#define CMSG_CTRL_VERIFY_SIGNATURE_EX 19

#define ALG_SID_MD5 3

#define CERT_STORE_PROV_SMART_CARD 15

#define ALG_SID_MD4 2

#define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL 262144

#define CERT_STORE_BACKUP_RESTORE_FLAG 2048

#define CERT_STORE_PROV_FIND_CRL_FUNC 17

#define ALG_SID_3DES_112 9

#define CERT_QUERY_OBJECT_FILE 1

#define CERT_STORE_CREATE_NEW_FLAG 8192

#define X509_MULTI_BYTE_UINT 38

#define CERT_NAME_DNS_TYPE 6

#define PP_SIG_KEYSIZE_INC 34

#define CRYPT_KEK 1024

#define KP_ALGID 7

#define CERT_RDN_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CROSS_CERT_DIST_POINT_ERR_INDEX_MASK 255

#define CRYPT_SF 256

#define CERT_SET_KEY_PROV_HANDLE_PROP_ID 1

#define CALG_PCT1_MASTER 19460

#define CMC_FAIL_BAD_IDENTITY 7

#define CERT_QUERY_CONTENT_SERIALIZED_CTL 6

#define X509_INTEGER 27

#define CRYPT_FLAG_IPSEC 16

#define KP_VERIFY_PARAMS 40

#define CRYPTPROTECT_PROMPT_ON_UNPROTECT 1

#define CMSG_CTRL_ADD_SIGNER 6

#define CMC_FAIL_BAD_CERT_ID 4

#define CRYPT_FORMAT_RDN_SEMICOLON 256

#define CRL_REASON_UNUSED_FLAG 128

#define CRYPT_IMPL_UNKNOWN 4

#define CMSG_ENVELOPED_RECIPIENT_V0 0

#define CMSG_ENVELOPED_RECIPIENT_V3 3

#define CMSG_ENVELOPED_RECIPIENT_V2 2

#define CMSG_ENVELOPED_RECIPIENT_V4 4

#define KP_IV 1

#define CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG 2

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN 536870912

#define CRYPT_GET_URL_FROM_EXTENSION 2

#define CERT_NAME_RDN_TYPE 2

#define CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG 2

#define CERT_COMPARE_NAME_STR_A 7

#define CERT_REGISTRY_STORE_ROAMING_FLAG 262144

#define ALG_SID_MAC 5

#define CERT_STORE_ADD_NEW 1

#define CERT_COMPARE_ENHKEY_USAGE 10

#define PP_KEY_TYPE_SUBTYPE 10

#define KP_G 12

#define KP_P 11

#define KP_Q 13

#define CERT_COMPARE_NAME_STR_W 8

#define CRYPT_RC2_56BIT_VERSION 52

#define CRYPT_NO_AUTH_RETRIEVAL 131072

#define CERT_SYSTEM_STORE_LOCAL_MACHINE 131072

#define CERT_TRUST_IS_OFFLINE_REVOCATION 16777216

#define CERT_FIND_ISSUER_STR 524292

#define ALG_CLASS_ALL 57344

#define CERT_QUERY_CONTENT_FLAG_PFX 4096

#define CERT_COMPARE_CERT_ID 16

#define CMSG_SIGNED_DATA_PKCS_1_5_VERSION 1

#define CERT_STORE_SAVE_TO_FILE 1

#define CTL_FIND_NO_SIGNER_PTR -1

#define CERT_ID_ISSUER_SERIAL_NUMBER 1

#define CRYPT_STRING_BASE64_ANY 6

#define CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG 1

#define PP_ENUMEX_SIGNING_PROT 40

#define X509_CERT_TO_BE_SIGNED 2

#define CRYPT_VERIFY_CONTEXT_SIGNATURE 32

#define CERT_STORE_PROV_FILE 3

#define CERT_STORE_PROV_MEMORY 2

#define CERT_STORE_SAVE_TO_MEMORY 2

#define CERT_ACCESS_STATE_SYSTEM_STORE_FLAG 2

#define NETSCAPE_SMIME_CA_CERT_TYPE 2

#define CERT_QUERY_CONTENT_SERIALIZED_CRL 7

#define CMSG_ENVELOPED_DATA_V0 0

#define CERT_OFFLINE_CRL_SIGN_KEY_USAGE 2

#define CERT_STORE_TIME_VALIDITY_FLAG 2

#define CMSG_ENVELOPED_DATA_V2 2

#define PKCS_7_NDR_ENCODING 131072

#define CMSG_ENVELOPED 3

#define ALG_SID_RSA_PGP 4

#define ALG_CLASS_ANY 0

#define CRL_REASON_REMOVE_FROM_CRL 8

#define CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG 16777216

#define CERT_DIGITAL_SIGNATURE_KEY_USAGE 128

#define CRL_REASON_CERTIFICATE_HOLD 6

#define CERT_REQUEST_V1 0

#define CMSG_MAX_LENGTH_FLAG 32

#define CRL_FIND_ISSUED_BY_DELTA_FLAG 4

#define KP_OAEP_PARAMS 36

#define CERT_STORE_CERTIFICATE_CONTEXT_FLAG 2

#define CERT_RDN_ENCODED_BLOB 1

#define HCCE_LOCAL_MACHINE 1

#define PROV_RNG 21

#define CRYPT_FORMAT_STR_NO_HEX 16

#define ALG_SID_DES 1

#define MAXUIDLEN 64

#define CERT_FIND_SUBJECT_NAME 131079

#define CERT_TRUST_INVALID_BASIC_CONSTRAINTS 1024

#define CALG_HUGHES_MD5 40963

#define CRL_FIND_EXISTING 2

#define KP_SERVER_RANDOM 22

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED 1024

#define ALG_SID_SSL2_MASTER 5

#define KP_RA 16

#define CERT_STORE_PROV_LDAP_W 16

#define CERT_EXTENDED_ERROR_INFO_PROP_ID 30

#define KP_RB 17

#define CRYPT_GET_URL_FROM_PROPERTY 1

#define SORTED_CTL_EXT_MAX_COLLISION_OFFSET 8

#define KP_RP 23

#define PP_SGC_INFO 37

#define CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY 2

#define CERT_REGISTRY_STORE_LM_GPT_FLAG 16777216

#define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT 134217728

#define PP_CERTCHAIN 9

#define PP_ENUMELECTROOTS 26

#define CERT_VERIFY_REV_CHAIN_FLAG 1

#define CRYPT_KEYID_MACHINE_FLAG 32

#define CERT_NAME_UPN_TYPE 8

#define CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES 7

#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY 458752

#define CMSG_SIGNER_CERT_ID_PARAM 38

#define CERT_NAME_STR_NO_QUOTING_FLAG 268435456

#define CMSG_MAIL_LIST_RECIPIENT 3

#define CERT_FIND_ISSUER_ATTR 196612

#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CMSG_CONTENT_PARAM 2

#define CMSG_CTRL_VERIFY_SIGNATURE 1

#define CRYPT_DELETEKEYSET 16

#define ALG_SID_AES_192 15

#define CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID 25

#define CERT_STORE_PROV_PHYSICAL 14

#define CRYPT_ENHKEY_USAGE_OID_GROUP_ID 7

#define CTL_FIND_EXISTING 5

#define CMSG_KEY_AGREE_VERSION 3

#define CERT_QUERY_FORMAT_FLAG_BINARY 2

#define PP_KEYSPEC 39

#define CERT_ACCESS_STATE_WRITE_PERSIST_FLAG 1

#define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT 16384

#define CRL_DIST_POINT_ERR_CRL_ISSUER_BIT 2147483648

#define CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG 1

#define CMSG_CTRL_DEL_CERT 11

#define KP_INFO 18

#define ALG_SID_SHA1 4

#define CMSG_CMS_SIGNER_INFO_PARAM 39

#define CRYPT_OFFLINE_CHECK_RETRIEVAL 16384

#define CRYPT_Y_ONLY 1

#define CERT_ALT_NAME_X400_ADDRESS 4

#define CRYPT_SGC 1

#define CERT_CA_SUBJECT_FLAG 128

#define PROV_RSA_FULL 1

#define CRYPT_STRING_BINARY 2

#define ALG_SID_HASH_REPLACE_OWF 11

#define CERT_QUERY_FORMAT_BINARY 1

#define PP_DELETEKEY 24

#define CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID 1

#define CMSG_ENVELOPE_ALGORITHM_PARAM 15

#define CMC_FAIL_BAD_TIME 3

#define CMC_FAIL_BAD_REQUEST 2

#define CERT_KEY_IDENTIFIER_PROP_ID 20

#define CMSG_CTRL_KEY_AGREE_DECRYPT 17

#define KP_PUB_EX_VAL 29

#define HP_HASHSIZE 4

#define CERT_RDN_UTF8_STRING 13

#define CRYPT_ARCHIVABLE 16384

#define CRYPT_NEXT 2

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG 1

#define PROV_REPLACE_OWF 23

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG 4

#define CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG 1

#define CALG_DH_EPHEM 43522

#define X509_UNICODE_NAME_VALUE 24

typedef uLong uLongf;

typedef int intf;

typedef uInt uIntf;

#define MAX_MEM_LEVEL 9


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_SET - /deps/mmsystem.h/defines/define_SEEK_SET */


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_CUR - /deps/mmsystem.h/defines/define_SEEK_CUR */

#define MAX_WBITS 15


/* WARNING! conflicting data type names: /deps/zconf.h/defines/define_SEEK_END - /deps/mmsystem.h/defines/define_SEEK_END */

typedef struct _PROPSHEETHEADERW _PROPSHEETHEADERW, *P_PROPSHEETHEADERW;

typedef union _union_1409.conflict _union_1409.conflict, *P_union_1409.conflict;

typedef union _union_1410 _union_1410, *P_union_1410;

typedef union _union_1411.conflict _union_1411.conflict, *P_union_1411.conflict;

typedef int (*PFNPROPSHEETCALLBACK)(HWND, UINT, LPARAM);

typedef union _union_1412.conflict _union_1412.conflict, *P_union_1412.conflict;

typedef union _union_1413.conflict _union_1413.conflict, *P_union_1413.conflict;

typedef struct _PROPSHEETPAGEW _PROPSHEETPAGEW, *P_PROPSHEETPAGEW;

typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW_V2;

typedef PROPSHEETPAGEW_V2 *LPCPROPSHEETPAGEW_V2;

typedef LPCPROPSHEETPAGEW_V2 LPCPROPSHEETPAGEW;

typedef union _union_1397.conflict _union_1397.conflict, *P_union_1397.conflict;

typedef union _union_1398 _union_1398, *P_union_1398;

typedef UINT (*LPFNPSPCALLBACKW)(HWND, UINT, struct _PROPSHEETPAGEW *);

typedef LPCDLGTEMPLATE PROPSHEETPAGE_RESOURCE;

union _union_1411.conflict {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE *phpage;
};

union _union_1410 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

union _union_1413.conflict {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

union _union_1409.conflict {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1412.conflict {
    HBITMAP hbmWatermark;
    LPCWSTR pszbmWatermark;
};

struct _PROPSHEETHEADERW {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1409.conflict field4_0x10;
    LPCWSTR pszCaption;
    UINT nPages;
    union _union_1410 field7_0x1c;
    union _union_1411.conflict field8_0x20;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1412.conflict field10_0x28;
    HPALETTE hplWatermark;
    union _union_1413.conflict field12_0x30;
};

union _union_1397.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1398 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1397.conflict field3_0xc;
    union _union_1398 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
};

typedef union _union_1388.conflict _union_1388.conflict, *P_union_1388.conflict;

union _union_1388.conflict {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1407.conflict _union_1407.conflict, *P_union_1407.conflict;

union _union_1407.conflict {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

typedef union _union_1391.conflict _union_1391.conflict, *P_union_1391.conflict;

union _union_1391.conflict {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef struct _PROPSHEETPAGEA_V3 _PROPSHEETPAGEA_V3, *P_PROPSHEETPAGEA_V3;

typedef struct _PROPSHEETPAGEA_V3 PROPSHEETPAGEA_V3;

typedef union _union_1392 _union_1392, *P_union_1392;

typedef struct _PROPSHEETPAGEA _PROPSHEETPAGEA, *P_PROPSHEETPAGEA;

typedef UINT (*LPFNPSPCALLBACKA)(HWND, UINT, struct _PROPSHEETPAGEA *);

typedef union _union_1389 _union_1389, *P_union_1389;

union _union_1392 {
    HICON hIcon;
    LPCSTR pszIcon;
};

struct _PROPSHEETPAGEA_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1391.conflict field3_0xc;
    union _union_1392 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

union _union_1389 {
    HICON hIcon;
    LPCSTR pszIcon;
};

struct _PROPSHEETPAGEA {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1388.conflict field3_0xc;
    union _union_1389 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA_V2;

typedef struct _PROPSHEETPAGEA_V1 _PROPSHEETPAGEA_V1, *P_PROPSHEETPAGEA_V1;

typedef struct _PROPSHEETPAGEA_V1 PROPSHEETPAGEA_V1;

typedef union _union_1385 _union_1385, *P_union_1385;

typedef union _union_1386 _union_1386, *P_union_1386;

union _union_1386 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1385 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1385 field3_0xc;
    union _union_1386 field4_0x10;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT *pcRefParent;
};

typedef struct _PROPSHEETPAGEW_V3 _PROPSHEETPAGEW_V3, *P_PROPSHEETPAGEW_V3;

typedef struct _PROPSHEETPAGEW_V3 PROPSHEETPAGEW_V3;

typedef PROPSHEETPAGEW_V3 PROPSHEETPAGEW_LATEST;

typedef union _union_1400.conflict _union_1400.conflict, *P_union_1400.conflict;

typedef union _union_1401 _union_1401, *P_union_1401;

union _union_1400.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1401 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1400.conflict field3_0xc;
    union _union_1401 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

typedef BOOL (*LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);

typedef BOOL (*LPFNADDPROPSHEETPAGES)(LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);

typedef struct _PROPSHEETHEADERA _PROPSHEETHEADERA, *P_PROPSHEETHEADERA;

typedef union _union_1403.conflict _union_1403.conflict, *P_union_1403.conflict;

typedef union _union_1404 _union_1404, *P_union_1404;

typedef union _union_1405.conflict _union_1405.conflict, *P_union_1405.conflict;

typedef union _union_1406.conflict _union_1406.conflict, *P_union_1406.conflict;

typedef PROPSHEETPAGEA_V2 *LPCPROPSHEETPAGEA_V2;

typedef LPCPROPSHEETPAGEA_V2 LPCPROPSHEETPAGEA;

union _union_1403.conflict {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1406.conflict {
    HBITMAP hbmWatermark;
    LPCSTR pszbmWatermark;
};

union _union_1404 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

union _union_1405.conflict {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE *phpage;
};

struct _PROPSHEETHEADERA {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1403.conflict field4_0x10;
    LPCSTR pszCaption;
    UINT nPages;
    union _union_1404 field7_0x1c;
    union _union_1405.conflict field8_0x20;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1406.conflict field10_0x28;
    HPALETTE hplWatermark;
    union _union_1407.conflict field12_0x30;
};

typedef struct _PROPSHEETHEADERW *LPPROPSHEETHEADERW;

typedef struct _PROPSHEETPAGEW_V1 _PROPSHEETPAGEW_V1, *P_PROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEW_V1 PROPSHEETPAGEW_V1;

typedef union _union_1394.conflict _union_1394.conflict, *P_union_1394.conflict;

typedef union _union_1395 _union_1395, *P_union_1395;

union _union_1394.conflict {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1395 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1394.conflict field3_0xc;
    union _union_1395 field4_0x10;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT *pcRefParent;
};

typedef PROPSHEETPAGEW_V2 PROPSHEETPAGEW;

typedef struct _PSHNOTIFY _PSHNOTIFY, *P_PSHNOTIFY;

struct _PSHNOTIFY {
    NMHDR hdr;
    LPARAM lParam;
};

typedef PROPSHEETPAGEA_V2 PROPSHEETPAGEA;

typedef union _union_1406 _union_1406, *P_union_1406;

union _union_1406 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

typedef struct _PROPSHEETHEADERA PROPSHEETHEADERA;

typedef union _union_1407 _union_1407, *P_union_1407;

union _union_1407 {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE *phpage;
};

typedef union _union_1408 _union_1408, *P_union_1408;

union _union_1408 {
    HBITMAP hbmWatermark;
    LPCSTR pszbmWatermark;
};

typedef union _union_1409 _union_1409, *P_union_1409;

union _union_1409 {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

typedef union _union_1402 _union_1402, *P_union_1402;

union _union_1402 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1403 _union_1403, *P_union_1403;

union _union_1403 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1405 _union_1405, *P_union_1405;

union _union_1405 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1400 _union_1400, *P_union_1400;

union _union_1400 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef struct _PROPSHEETHEADERA *LPPROPSHEETHEADERA;

typedef union _union_1413 _union_1413, *P_union_1413;

union _union_1413 {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE *phpage;
};

typedef union _union_1414 _union_1414, *P_union_1414;

union _union_1414 {
    HBITMAP hbmWatermark;
    LPCWSTR pszbmWatermark;
};

typedef union _union_1415 _union_1415, *P_union_1415;

union _union_1415 {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

typedef union _union_1411 _union_1411, *P_union_1411;

union _union_1411 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1412 _union_1412, *P_union_1412;

union _union_1412 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

typedef PROPSHEETPAGEA_V3 PROPSHEETPAGEA_LATEST;

typedef struct _PROPSHEETPAGEW_V3 *LPPROPSHEETPAGEW_V3;

typedef LPPROPSHEETPAGEW_V3 LPPROPSHEETPAGEW_LATEST;

typedef struct _PROPSHEETPAGEA *LPPROPSHEETPAGEA_V2;

typedef LPPROPSHEETPAGEA_V2 LPPROPSHEETPAGEA;

typedef struct _PROPSHEETPAGEW *LPPROPSHEETPAGEW_V2;

typedef LPPROPSHEETPAGEW_V2 LPPROPSHEETPAGEW;

typedef struct _PROPSHEETHEADERW PROPSHEETHEADERW;

typedef struct _PROPSHEETPAGEW_V1 *LPPROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEA_V3 *LPPROPSHEETPAGEA_V3;

typedef struct _PROPSHEETPAGEA_V1 *LPPROPSHEETPAGEA_V1;

typedef PROPSHEETPAGEA_V3 *LPCPROPSHEETPAGEA_V3;

typedef PROPSHEETPAGEA_V1 *LPCPROPSHEETPAGEA_V1;

typedef PROPSHEETHEADERA *LPCPROPSHEETHEADERA;

typedef LPPROPSHEETPAGEA_V3 LPPROPSHEETPAGEA_LATEST;

typedef PROPSHEETPAGEW_V3 *LPCPROPSHEETPAGEW_V3;

typedef LPCPROPSHEETPAGEW_V3 LPCPROPSHEETPAGEW_LATEST;

typedef PROPSHEETHEADERW *LPCPROPSHEETHEADERW;

typedef PROPSHEETPAGEW_V1 *LPCPROPSHEETPAGEW_V1;

typedef LPCPROPSHEETPAGEA_V3 LPCPROPSHEETPAGEA_LATEST;

typedef struct _PSHNOTIFY PSHNOTIFY;

typedef union _union_1387 _union_1387, *P_union_1387;

union _union_1387 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef struct _PSHNOTIFY *LPPSHNOTIFY;

typedef union _union_1388 _union_1388, *P_union_1388;

union _union_1388 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1394 _union_1394, *P_union_1394;

union _union_1394 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1396 _union_1396, *P_union_1396;

union _union_1396 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1397 _union_1397, *P_union_1397;

union _union_1397 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

typedef union _union_1390 _union_1390, *P_union_1390;

union _union_1390 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1391 _union_1391, *P_union_1391;

union _union_1391 {
    HICON hIcon;
    LPCSTR pszIcon;
};

typedef union _union_1393 _union_1393, *P_union_1393;

union _union_1393 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

typedef union _union_1399 _union_1399, *P_union_1399;

union _union_1399 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

#define PSN_WIZFINISH -208

#define PSH_WIZARDCONTEXTHELP 4096

#define PSP_HASHELP 32

#define PSCB_INITIALIZED 1

#define PSP_PREMATURE 1024

#define PROP_LG_CXDLG 252

#define WIZ_CYDLG 140

#define PSWIZB_DISABLEDFINISH 8

#define PSH_WIZARD97 16777216

#define PROP_MED_CYDLG 215

#define PSM_REBOOTSYSTEM 1130

#define PSN_HELP -205

#define MAXPROPPAGES 100

#define PSM_RESTARTWINDOWS 1129

#define PSM_SETTITLEW 1144

#define WIZ_BODYCX 184

#define PSP_USEHEADERSUBTITLE 8192

#define PSNRET_INVALID 1

#define PSH_WIZARD 32

#define PSM_PRESSBUTTON 1137

#define PSH_USEPAGELANG 2097152

#define PSN_FIRST -200

#define PSH_USEHBMWATERMARK 65536

#define PSM_SETFINISHTEXT 1139

#define PSP_USETITLE 8

#define PSBTN_APPLYNOW 4

#define PSM_SETTITLE 1135

#define PSM_SETHEADERSUBTITLEA 1151

#define PSM_SETHEADERSUBTITLEW 1152

#define PSM_QUERYSIBLINGS 1132

#define PSM_SETHEADERSUBTITLE 1151

#define PSBTN_FINISH 2

#define PSH_USEHBMHEADER 1048576

#define PSM_SETFINISHTEXTA 1139

#define PSM_GETTABCONTROL 1140

#define PSN_QUERYINITIALFOCUS -213

#define PSM_ADDPAGE 1127

#define PSM_CANCELTOCLOSE 1131

#define PSH_USEHPLWATERMARK 131072

#define PSM_GETCURRENTPAGEHWND 1142

#define PROP_LG_CYDLG 218

#define PSBTN_BACK 0

#define WIZ_CXDLG 276

#define PSM_SETHEADERTITLEW 1150

#define PSN_SETACTIVE -200

#define PSP_RTLREADING 16

#define PSWIZB_NEXT 2

#define PSP_DLGINDIRECT 1

#define PSWIZB_BACK 1

#define PSBTN_HELP 6

#define PSM_HWNDTOINDEX 1153

#define PSBTN_MAX 6

#define PSP_USEICONID 4

#define PSBTN_NEXT 1

#define PSH_HASHELP 512

#define PSH_WATERMARK 32768

#define PSM_SETFINISHTEXTW 1145

#define PSM_PAGETOINDEX 1155

#define PSM_SETHEADERTITLE 1149

#define PSH_USEPSTARTPAGE 64

#define PSN_APPLY -202

#define PSM_SETCURSEL 1125

#define PSN_KILLACTIVE -201

#define PSM_IDTOINDEX 1157

#define PROP_SM_CYDLG 188

#define ID_PSRESTARTWINDOWS 2

#define PSPCB_ADDREF 0

#define PSH_DEFAULT 0

#define PSM_SETWIZBUTTONS 1136

#define PSN_WIZNEXT -207

#define PSM_APPLY 1134

#define PSBTN_CANCEL 5

#define PSP_USEREFPARENT 64

#define PSN_WIZBACK -206

#define PSH_USECALLBACK 256

#define PROP_SM_CXDLG 212

#define PSM_REMOVEPAGE 1126

#define PSM_INDEXTOPAGE 1156

#define PSH_NOCONTEXTHELP 33554432

#define PSP_USECALLBACK 128

#define PSH_NOAPPLYNOW 128

#define PSM_SETHEADERTITLEA 1149

#define PSP_DEFAULT 0

#define PSH_RTLREADING 2048

#define PSM_CHANGED 1128

#define PSNRET_MESSAGEHANDLED 3

#define PSM_ISDIALOGMESSAGE 1141

#define PSP_USEHEADERTITLE 4096

#define PSH_HEADER 524288

#define PSP_USEHICON 2

#define PSH_PROPSHEETPAGE 8

#define PSP_HIDEHEADER 2048

#define PSH_MODELESS 1024

#define PSM_INSERTPAGE 1143

#define ID_PSREBOOTSYSTEM 3

#define PROP_MED_CXDLG 227

#define PSN_QUERYCANCEL -209

#define PSM_UNCHANGED 1133

#define PSH_STRETCHWATERMARK 262144

#define PSM_GETRESULT 1159

#define _WIN32_IE 1281

#define PSM_INDEXTOHWND 1154

#define PSN_TRANSLATEACCELERATOR -212

#define PSM_SETCURSELID 1138

#define PSNRET_NOERROR 0

#define PSH_PROPTITLE 1

#define PSCB_PRECREATE 2

#define PSWIZB_FINISH 4

#define PSM_SETTITLEA 1135

#define PSH_WIZARDHASFINISH 16

#define WIZ_CXBMP 80

#define PSN_LAST -299

#define PSH_USEICONID 4

#define PSM_INDEXTOID 1158

#define PSN_GETOBJECT -210

#define PSPCB_CREATE 2

#define PSBTN_OK 3

#define PSN_RESET -203

#define PSM_RECALCPAGESIZES 1160

#define PSH_USEHICON 2

#define PSH_WIZARD_LITE 4194304

#define PSPCB_RELEASE 1

#define PSNRET_INVALID_NOCHANGEPAGE 2

#define WIZ_BODYX 92

typedef HANDLE GLOBALHANDLE;


/* WARNING! conflicting data type names: /deps/WinDef.h/HINSTANCE - /deps/windef.h/HINSTANCE */


/* WARNING! conflicting data type names: /deps/WinDef.h/HMODULE - /deps/windef.h/HMODULE */

typedef int (*FARPROC)(void);

typedef HANDLE *SPHANDLE;

typedef BOOL *LPBOOL;


/* WARNING! conflicting data type names: /deps/WinDef.h/HCURSOR - /deps/windef.h/HCURSOR */


/* WARNING! conflicting data type names: /deps/WinDef.h/HFONT - /deps/windef.h/HFONT */

typedef HANDLE LOCALHANDLE;

typedef char *PSZ;


/* WARNING! conflicting data type names: /deps/WinDef.h/HDC - /deps/windef.h/HDC */

typedef USHORT *PUSHORT;

typedef WORD *LPWORD;


/* WARNING! conflicting data type names: /deps/WinDef.h/HICON - /deps/windef.h/HICON */


/* WARNING! conflicting data type names: /deps/WinDef.h/HBITMAP - /deps/windef.h/HBITMAP */

typedef uint *PUINT;


/* WARNING! conflicting data type names: /deps/WinDef.h/HWND - /deps/windef.h/HWND */

typedef SIZE *PSIZEL;

typedef HANDLE HLOCAL;

typedef int (*NEARPROC)(void);


/* WARNING! conflicting data type names: /deps/WinDef.h/LPRECT - /deps/windef.h/LPRECT */

typedef int *PINT;

typedef FLOAT *PFLOAT;

typedef int (*PROC)(void);


/* WARNING! conflicting data type names: /deps/WinDef.h/HBRUSH - /deps/windef.h/HBRUSH */

typedef UCHAR *PUCHAR;

typedef DWORD *LPCOLORREF;

typedef int *LPINT;

typedef BOOL *PBOOL;


/* WARNING! conflicting data type names: /deps/WinDef.h/HMENU - /deps/windef.h/HMENU */


/* WARNING! conflicting data type names: /deps/WinDef.h/LPFILETIME - /deps/winbase.h/LPFILETIME */

typedef HANDLE *LPHANDLE;


/* WARNING! conflicting data type names: /deps/WinDef.h/HTASK - /deps/windef.h/HTASK */

typedef int HFILE;

typedef void *LPCVOID;

typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;

typedef struct tagCAFLT tagCAFLT, *PtagCAFLT;

struct tagCAFLT {
    ULONG cElems;
    FLOAT *pElems;
};

typedef struct tagCADATE tagCADATE, *PtagCADATE;

typedef struct tagCADATE CADATE;

struct tagCADATE {
    ULONG cElems;
    DATE *pElems;
};

typedef struct tagCACLSID tagCACLSID, *PtagCACLSID;

typedef struct tagCACLSID CACLSID;

struct tagCACLSID {
    ULONG cElems;
    CLSID *pElems;
};

typedef struct IPropertyStorage IPropertyStorage, *PIPropertyStorage;

typedef struct IPropertyStorageVtbl IPropertyStorageVtbl, *PIPropertyStorageVtbl;

typedef struct tagPROPSPEC tagPROPSPEC, *PtagPROPSPEC;

typedef struct tagPROPSPEC PROPSPEC;

typedef struct tagPROPVARIANT tagPROPVARIANT, *PtagPROPVARIANT;

typedef struct tagPROPVARIANT PROPVARIANT;

typedef struct IEnumSTATPROPSTG IEnumSTATPROPSTG, *PIEnumSTATPROPSTG;

typedef struct tagSTATPROPSETSTG tagSTATPROPSETSTG, *PtagSTATPROPSETSTG;

typedef struct tagSTATPROPSETSTG STATPROPSETSTG;

typedef union _union_2426 _union_2426, *P_union_2426;

typedef union _union_2421 _union_2421, *P_union_2421;

typedef struct IEnumSTATPROPSTGVtbl IEnumSTATPROPSTGVtbl, *PIEnumSTATPROPSTGVtbl;

typedef struct tagSTATPROPSTG tagSTATPROPSTG, *PtagSTATPROPSTG;

typedef struct tagSTATPROPSTG STATPROPSTG;

typedef struct _struct_2422 _struct_2422, *P_struct_2422;

typedef WORD PROPVAR_PAD1;

typedef WORD PROPVAR_PAD2;

typedef WORD PROPVAR_PAD3;

typedef union _union_2423 _union_2423, *P_union_2423;

typedef struct tagVersionedStream tagVersionedStream, *PtagVersionedStream;

typedef struct tagVersionedStream *LPVERSIONEDSTREAM;

typedef struct tagCAC tagCAC, *PtagCAC;

typedef struct tagCAC CAC;

typedef struct tagCAUB tagCAUB, *PtagCAUB;

typedef struct tagCAUB CAUB;

typedef struct tagCAI tagCAI, *PtagCAI;

typedef struct tagCAI CAI;

typedef struct tagCAUI tagCAUI, *PtagCAUI;

typedef struct tagCAUI CAUI;

typedef struct tagCAL tagCAL, *PtagCAL;

typedef struct tagCAL CAL;

typedef struct tagCAUL tagCAUL, *PtagCAUL;

typedef struct tagCAUL CAUL;

typedef struct tagCAH tagCAH, *PtagCAH;

typedef struct tagCAH CAH;

typedef struct tagCAUH tagCAUH, *PtagCAUH;

typedef struct tagCAUH CAUH;

typedef struct tagCAFLT CAFLT;

typedef struct tagCADBL tagCADBL, *PtagCADBL;

typedef struct tagCADBL CADBL;

typedef struct tagCABOOL tagCABOOL, *PtagCABOOL;

typedef struct tagCABOOL CABOOL;

typedef struct tagCASCODE tagCASCODE, *PtagCASCODE;

typedef struct tagCASCODE CASCODE;

typedef struct tagCACY tagCACY, *PtagCACY;

typedef struct tagCACY CACY;

typedef struct tagCAFILETIME tagCAFILETIME, *PtagCAFILETIME;

typedef struct tagCAFILETIME CAFILETIME;

typedef struct tagCACLIPDATA tagCACLIPDATA, *PtagCACLIPDATA;

typedef struct tagCACLIPDATA CACLIPDATA;

typedef struct tagCABSTR tagCABSTR, *PtagCABSTR;

typedef struct tagCABSTR CABSTR;

typedef struct tagCABSTRBLOB tagCABSTRBLOB, *PtagCABSTRBLOB;

typedef struct tagCABSTRBLOB CABSTRBLOB;

typedef struct tagCALPSTR tagCALPSTR, *PtagCALPSTR;

typedef struct tagCALPSTR CALPSTR;

typedef struct tagCALPWSTR tagCALPWSTR, *PtagCALPWSTR;

typedef struct tagCALPWSTR CALPWSTR;

typedef struct tagCAPROPVARIANT tagCAPROPVARIANT, *PtagCAPROPVARIANT;

typedef struct tagCAPROPVARIANT CAPROPVARIANT;

struct IPropertyStorageVtbl {
    HRESULT (*QueryInterface)(struct IPropertyStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPropertyStorage *);
    ULONG (*Release)(struct IPropertyStorage *);
    HRESULT (*ReadMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *);
    HRESULT (*WriteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *, PROPID);
    HRESULT (*DeleteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *);
    HRESULT (*ReadPropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (*WritePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (*DeletePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *);
    HRESULT (*Commit)(struct IPropertyStorage *, DWORD);
    HRESULT (*Revert)(struct IPropertyStorage *);
    HRESULT (*Enum)(struct IPropertyStorage *, struct IEnumSTATPROPSTG **);
    HRESULT (*SetTimes)(struct IPropertyStorage *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (*SetClass)(struct IPropertyStorage *, IID *);
    HRESULT (*Stat)(struct IPropertyStorage *, STATPROPSETSTG *);
};

union _union_2426 {
    PROPID propid;
    LPOLESTR lpwstr;
};

struct tagCABOOL {
    ULONG cElems;
    VARIANT_BOOL *pElems;
};

struct tagCAC {
    ULONG cElems;
    CHAR *pElems;
};

struct tagCASCODE {
    ULONG cElems;
    SCODE *pElems;
};

struct tagCAH {
    ULONG cElems;
    LARGE_INTEGER *pElems;
};

struct tagCAL {
    ULONG cElems;
    LONG *pElems;
};

struct tagCADBL {
    ULONG cElems;
    DOUBLE *pElems;
};

struct tagCABSTRBLOB {
    ULONG cElems;
    BSTRBLOB *pElems;
};

struct tagCAFILETIME {
    ULONG cElems;
    FILETIME *pElems;
};

struct tagCABSTR {
    ULONG cElems;
    BSTR *pElems;
};

struct tagCAUL {
    ULONG cElems;
    ULONG *pElems;
};

struct tagCAUB {
    ULONG cElems;
    UCHAR *pElems;
};

struct tagCALPSTR {
    ULONG cElems;
    LPSTR *pElems;
};

struct tagCAI {
    ULONG cElems;
    SHORT *pElems;
};

struct tagCACY {
    ULONG cElems;
    CY *pElems;
};

struct tagCAPROPVARIANT {
    ULONG cElems;
    PROPVARIANT *pElems;
};

struct tagCAUH {
    ULONG cElems;
    ULARGE_INTEGER *pElems;
};

struct tagCAUI {
    ULONG cElems;
    USHORT *pElems;
};

struct tagCALPWSTR {
    ULONG cElems;
    LPWSTR *pElems;
};

struct tagCACLIPDATA {
    ULONG cElems;
    CLIPDATA *pElems;
};

union _union_2423 {
    CHAR cVal;
    UCHAR bVal;
    SHORT iVal;
    USHORT uiVal;
    LONG lVal;
    ULONG ulVal;
    INT intVal;
    UINT uintVal;
    LARGE_INTEGER hVal;
    ULARGE_INTEGER uhVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    FILETIME filetime;
    CLSID *puuid;
    CLIPDATA *pclipdata;
    BSTR bstrVal;
    BSTRBLOB bstrblobVal;
    BLOB blob;
    LPSTR pszVal;
    LPWSTR pwszVal;
    struct IUnknown *punkVal;
    struct IDispatch *pdispVal;
    struct IStream *pStream;
    struct IStorage *pStorage;
    LPVERSIONEDSTREAM pVersionedStream;
    LPSAFEARRAY parray;
    CAC cac;
    CAUB caub;
    CAI cai;
    CAUI caui;
    CAL cal;
    CAUL caul;
    CAH cah;
    CAUH cauh;
    CAFLT caflt;
    CADBL cadbl;
    CABOOL cabool;
    CASCODE cascode;
    CACY cacy;
    CADATE cadate;
    CAFILETIME cafiletime;
    CACLSID cauuid;
    CACLIPDATA caclipdata;
    CABSTR cabstr;
    CABSTRBLOB cabstrblob;
    CALPSTR calpstr;
    CALPWSTR calpwstr;
    CAPROPVARIANT capropvar;
    CHAR *pcVal;
    UCHAR *pbVal;
    SHORT *piVal;
    USHORT *puiVal;
    LONG *plVal;
    ULONG *pulVal;
    INT *pintVal;
    UINT *puintVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    DECIMAL *pdecVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    struct IUnknown **ppunkVal;
    struct IDispatch **ppdispVal;
    LPSAFEARRAY *pparray;
    PROPVARIANT *pvarVal;
};

struct _struct_2422 {
    VARTYPE vt;
    PROPVAR_PAD1 wReserved1;
    PROPVAR_PAD2 wReserved2;
    PROPVAR_PAD3 wReserved3;
    union _union_2423 field4_0x8;
};

union _union_2421 {
    struct _struct_2422 field0;
    DECIMAL decVal;
};

struct IEnumSTATPROPSTG {
    struct IEnumSTATPROPSTGVtbl *lpVtbl;
};

struct tagPROPVARIANT {
    union _union_2421 field0_0x0;
};

struct tagVersionedStream {
    GUID guidVersion;
    struct IStream *pStream;
};

struct tagPROPSPEC {
    ULONG ulKind;
    union _union_2426 field1_0x4;
};

struct IPropertyStorage {
    struct IPropertyStorageVtbl *lpVtbl;
};

struct tagSTATPROPSETSTG {
    FMTID fmtid;
    CLSID clsid;
    DWORD grfFlags;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD dwOSVersion;
};

struct tagSTATPROPSTG {
    LPOLESTR lpwstrName;
    PROPID propid;
    VARTYPE vt;
};

struct IEnumSTATPROPSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATPROPSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATPROPSTG *);
    ULONG (*Release)(struct IEnumSTATPROPSTG *);
    HRESULT (*Next)(struct IEnumSTATPROPSTG *, ULONG, STATPROPSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATPROPSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATPROPSTG *);
    HRESULT (*Clone)(struct IEnumSTATPROPSTG *, struct IEnumSTATPROPSTG **);
};

typedef struct IPropertyStorage *LPPROPERTYSTORAGE;

typedef struct IPropertySetStorageVtbl IPropertySetStorageVtbl, *PIPropertySetStorageVtbl;

typedef struct IPropertySetStorage IPropertySetStorage, *PIPropertySetStorage;

typedef struct IEnumSTATPROPSETSTG IEnumSTATPROPSETSTG, *PIEnumSTATPROPSETSTG;

typedef struct IEnumSTATPROPSETSTGVtbl IEnumSTATPROPSETSTGVtbl, *PIEnumSTATPROPSETSTGVtbl;

struct IEnumSTATPROPSETSTG {
    struct IEnumSTATPROPSETSTGVtbl *lpVtbl;
};

struct IPropertySetStorageVtbl {
    HRESULT (*QueryInterface)(struct IPropertySetStorage *, IID *, void **);
    ULONG (*AddRef)(struct IPropertySetStorage *);
    ULONG (*Release)(struct IPropertySetStorage *);
    HRESULT (*Create)(struct IPropertySetStorage *, IID *, CLSID *, DWORD, DWORD, struct IPropertyStorage **);
    HRESULT (*Open)(struct IPropertySetStorage *, IID *, DWORD, struct IPropertyStorage **);
    HRESULT (*Delete)(struct IPropertySetStorage *, IID *);
    HRESULT (*Enum)(struct IPropertySetStorage *, struct IEnumSTATPROPSETSTG **);
};

struct IEnumSTATPROPSETSTGVtbl {
    HRESULT (*QueryInterface)(struct IEnumSTATPROPSETSTG *, IID *, void **);
    ULONG (*AddRef)(struct IEnumSTATPROPSETSTG *);
    ULONG (*Release)(struct IEnumSTATPROPSETSTG *);
    HRESULT (*Next)(struct IEnumSTATPROPSETSTG *, ULONG, STATPROPSETSTG *, ULONG *);
    HRESULT (*Skip)(struct IEnumSTATPROPSETSTG *, ULONG);
    HRESULT (*Reset)(struct IEnumSTATPROPSETSTG *);
    HRESULT (*Clone)(struct IEnumSTATPROPSETSTG *, struct IEnumSTATPROPSETSTG **);
};

struct IPropertySetStorage {
    struct IPropertySetStorageVtbl *lpVtbl;
};

typedef struct tagPROPVARIANT *LPPROPVARIANT;

typedef struct IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;

typedef enum PIDMSI_STATUS_VALUE {
    PIDMSI_STATUS_NORMAL=0,
    PIDMSI_STATUS_NEW=1,
    PIDMSI_STATUS_PRELIM=2,
    PIDMSI_STATUS_DRAFT=3,
    PIDMSI_STATUS_INPROGRESS=4,
    PIDMSI_STATUS_EDIT=5,
    PIDMSI_STATUS_REVIEW=6,
    PIDMSI_STATUS_PROOF=7,
    PIDMSI_STATUS_FINAL=8,
    PIDMSI_STATUS_OTHER=32767
} PIDMSI_STATUS_VALUE;

typedef struct tagVersionedStream VERSIONEDSTREAM;

typedef struct IEnumSTATPROPSTG *LPENUMSTATPROPSTG;

typedef struct IPropertySetStorage *LPPROPERTYSETSTORAGE;

#define PIDSI_PAGECOUNT 14

#define PIDSI_CREATE_DTM 12

#define PIDMSI_STATUS 7

#define PIDSI_REVNUMBER 9

#define PRSPEC_INVALID 4294967295

#define PID_MAX_READONLY 3221225471

#define PIDSI_COMMENTS 6

#define PID_ILLEGAL 4294967295

#define PIDSI_WORDCOUNT 15

#define PIDSI_SUBJECT 3

#define PIDSI_LASTPRINTED 11

#define PROPSETFLAG_ANSI 2

#define PIDDSI_COMPANY 15

#define PRSPEC_PROPID 1

#define PIDSI_DOC_SECURITY 19

#define PIDSI_AUTHOR 4

#define PIDSI_THUMBNAIL 17

#define PID_FIRST_NAME_DEFAULT 4095

#define PIDSI_KEYWORDS 5

#define PID_MIN_READONLY 2147483648

#define PIDMSI_SUPPLIER 3

#define PIDMSI_EDITOR 2

#define PID_FIRST_USABLE 2

#define PIDDSI_SLIDECOUNT 7

#define CCH_MAX_PROPSTG_NAME 31

#define PROPSETFLAG_UNBUFFERED 4

#define PIDSI_LASTAUTHOR 8

#define PIDMSI_SEQUENCE_NO 5

#define PROPSETFLAG_NONSIMPLE 1

#define PID_SECURITY 2147483650

#define PROPSETFLAG_DEFAULT 0

#define PROPSET_BEHAVIOR_CASE_SENSITIVE 1

#define PID_DICTIONARY 0

#define PIDSI_TEMPLATE 7

#define PID_MODIFY_TIME 2147483649

#define PIDSI_EDITTIME 10

#define PIDDI_THUMBNAIL 2

#define PIDDSI_HEADINGPAIR 12

#define PIDMSI_RATING 9

#define PIDMSI_PRODUCTION 10

#define PROPSETFLAG_CASE_SENSITIVE 8

#define PIDMSI_SOURCE 4

#define PIDMSI_OWNER 8

#define PIDDSI_PRESFORMAT 3

#define PIDSI_APPNAME 18

#define PIDDSI_BYTECOUNT 4

#define PID_CODEPAGE 1

#define PIDSI_TITLE 2

#define PIDDSI_CATEGORY 2

#define PRSPEC_LPWSTR 0

#define PIDDSI_SCALE 11

#define PIDDSI_MMCLIPCOUNT 10

#define PIDDSI_DOCPARTS 13

#define PIDDSI_PARCOUNT 6

#define PID_LOCALE 2147483648

#define PIDMSI_COPYRIGHT 11

#define PROPSETHDR_OSVERSION_UNKNOWN 4294967295

#define PID_BEHAVIOR 2147483651

#define PIDDSI_NOTECOUNT 8

#define PIDDSI_LINKSDIRTY 16

#define PIDDSI_MANAGER 14

#define PIDDSI_HIDDENCOUNT 9

#define PIDMSI_PROJECT 6

#define PIDSI_LASTSAVE_DTM 13

#define PIDSI_CHARCOUNT 16

#define PIDDSI_LINECOUNT 5

typedef struct _ACTION_HEADER _ACTION_HEADER, *P_ACTION_HEADER;

typedef struct _ACTION_HEADER ACTION_HEADER;

struct _ACTION_HEADER {
    ULONG transport_id;
    USHORT action_code;
    USHORT reserved;
};

typedef struct _FIND_NAME_HEADER _FIND_NAME_HEADER, *P_FIND_NAME_HEADER;

struct _FIND_NAME_HEADER {
    WORD node_count;
    UCHAR reserved;
    UCHAR unique_group;
};

typedef struct _FIND_NAME_BUFFER _FIND_NAME_BUFFER, *P_FIND_NAME_BUFFER;

struct _FIND_NAME_BUFFER {
    UCHAR length;
    UCHAR access_control;
    UCHAR frame_control;
    UCHAR destination_addr[6];
    UCHAR source_addr[6];
    UCHAR routing_info[18];
};

typedef struct _NAME_BUFFER _NAME_BUFFER, *P_NAME_BUFFER;

typedef struct _NAME_BUFFER NAME_BUFFER;

struct _NAME_BUFFER {
    UCHAR name[16];
    UCHAR name_num;
    UCHAR name_flags;
};

typedef struct _LANA_ENUM _LANA_ENUM, *P_LANA_ENUM;

typedef struct _LANA_ENUM LANA_ENUM;

struct _LANA_ENUM {
    UCHAR length;
    UCHAR lana[255];
};

typedef struct _ACTION_HEADER *PACTION_HEADER;

typedef struct _SESSION_BUFFER _SESSION_BUFFER, *P_SESSION_BUFFER;

struct _SESSION_BUFFER {
    UCHAR lsn;
    UCHAR state;
    UCHAR local_name[16];
    UCHAR remote_name[16];
    UCHAR rcvs_outstanding;
    UCHAR sends_outstanding;
};

typedef struct _FIND_NAME_HEADER *PFIND_NAME_HEADER;

typedef struct _SESSION_BUFFER SESSION_BUFFER;

typedef struct _FIND_NAME_HEADER FIND_NAME_HEADER;

typedef struct _NCB _NCB, *P_NCB;

typedef struct _NCB NCB;

struct _NCB {
    UCHAR ncb_command;
    UCHAR ncb_retcode;
    UCHAR ncb_lsn;
    UCHAR ncb_num;
    PUCHAR ncb_buffer;
    WORD ncb_length;
    UCHAR ncb_callname[16];
    UCHAR ncb_name[16];
    UCHAR ncb_rto;
    UCHAR ncb_sto;
    void (*ncb_post)(struct _NCB *);
    UCHAR ncb_lana_num;
    UCHAR ncb_cmd_cplt;
    UCHAR ncb_reserve[10];
    HANDLE ncb_event;
};

typedef struct _SESSION_HEADER _SESSION_HEADER, *P_SESSION_HEADER;

typedef struct _SESSION_HEADER SESSION_HEADER;

struct _SESSION_HEADER {
    UCHAR sess_name;
    UCHAR num_sess;
    UCHAR rcv_dg_outstanding;
    UCHAR rcv_any_outstanding;
};

typedef struct _SESSION_HEADER *PSESSION_HEADER;

typedef struct _ADAPTER_STATUS _ADAPTER_STATUS, *P_ADAPTER_STATUS;

typedef struct _ADAPTER_STATUS ADAPTER_STATUS;

struct _ADAPTER_STATUS {
    UCHAR adapter_address[6];
    UCHAR rev_major;
    UCHAR reserved0;
    UCHAR adapter_type;
    UCHAR rev_minor;
    WORD duration;
    WORD frmr_recv;
    WORD frmr_xmit;
    WORD iframe_recv_err;
    WORD xmit_aborts;
    DWORD xmit_success;
    DWORD recv_success;
    WORD iframe_xmit_err;
    WORD recv_buff_unavail;
    WORD t1_timeouts;
    WORD ti_timeouts;
    DWORD reserved1;
    WORD free_ncbs;
    WORD max_cfg_ncbs;
    WORD max_ncbs;
    WORD xmit_buf_unavail;
    WORD max_dgram_size;
    WORD pending_sess;
    WORD max_cfg_sess;
    WORD max_sess;
    WORD max_sess_pkt_size;
    WORD name_count;
};

typedef struct _FIND_NAME_BUFFER FIND_NAME_BUFFER;

typedef struct _NAME_BUFFER *PNAME_BUFFER;

typedef struct _SESSION_BUFFER *PSESSION_BUFFER;

typedef struct _ADAPTER_STATUS *PADAPTER_STATUS;

typedef struct _FIND_NAME_BUFFER *PFIND_NAME_BUFFER;

typedef struct _LANA_ENUM *PLANA_ENUM;

typedef struct _NCB *PNCB;

#define NRC_CMDTMO 5

#define NCBNAMSZ 16

#define NCBSENDNA 113

#define NRC_SNUMOUT 8

#define HANGUP_COMPLETE 5

#define NCBCHAINSENDNA 114

#define NRC_IFBUSY 33

#define NRC_NORES 9

#define UNIQUE_NAME 0

#define NRC_INVADDRESS 57

#define HANGUP_PENDING 4

#define NRC_MAXAPPS 54

#define NRC_ACTSES 15

#define NRC_NOCALL 20

#define NCBRESET 50

#define NRC_ENVNOTDEF 52

#define NRC_ILLCMD 3

#define NCBASTAT 51

#define NCBDELNAME 49

#define NCBTRACE 121

#define NCBADDGRNAME 54

#define NRC_GOODRET 0

#define NCBSSTAT 52

#define NCBACTION 119

#define NRC_TOOMANY 34

#define NCBRECV 21

#define NRC_NAMERR 23

#define NCBHANGUP 18

#define NRC_LOCTFUL 17

#define NRC_DUPNAME 13

#define DUPLICATE 6

#define NRC_PENDING 255

#define NCBRECVANY 22

#define NCBDGSENDBC 34

#define DUPLICATE_DEREG 7

#define NCBDGRECV 33

#define NRC_SABORT 24

#define NCBENUM 55

#define SESSION_ESTABLISHED 3

#define NRC_CMDCAN 11

#define NRC_NAMCONF 25

#define NRC_INVDDID 59

#define NRC_CANOCCR 36

#define NRC_NORESOURCES 56

#define NCBDGRECVBC 35

#define NCBADDNAME 48

#define NRC_NOSAPS 55

#define NCBCHAINSEND 23

#define REGISTERED 4

#define DEREGISTERED 5

#define NRC_LOCKFAIL 60

#define REGISTERING 0

#define NRC_NAMTFUL 14

#define NRC_SYSTEM 64

#define NRC_OSRESNOTAV 53

#define NRC_NOWILD 21

#define NRC_BUFLEN 1

#define MAX_LANA 254

#define NRC_INUSE 22

#define NCBFINDNAME 120

#define NRC_REMTFUL 18

#define ASYNCH 128

#define NRC_BRIDGE 35

#define NRC_SCLOSED 10

#define NRC_ILLNN 19

#define NCBDGSEND 32

#define NRC_OPENERR 63

#define NCBCALL 16

#define NRC_DUPENV 48

#define NCBLISTEN 17

#define SESSION_ABORTED 6

#define GROUP_NAME 128

#define NCBCANCEL 53

#define NRC_INCOMP 6

#define LISTEN_OUTSTANDING 1

#define NCBUNLINK 112

#define NCBLANSTALERT 115

#define NRC_CANCEL 38

#define CALL_PENDING 2

#define NCBSEND 20

#define NAME_FLAGS_MASK 135

#define NRC_BADDR 7

typedef enum Difficulty {
    EASY=0,
    NORMAL=1,
    HARD=2,
    LUNATIC=3,
    EXTRA=4
} Difficulty;

typedef struct RenderVertexInfo RenderVertexInfo, *PRenderVertexInfo;

struct RenderVertexInfo {
    D3DXVECTOR3 position;
    struct D3DXVECTOR2 textureUV;
};

typedef struct Pbg3Parser Pbg3Parser, *PPbg3Parser;

typedef struct IPbg3Parser IPbg3Parser, *PIPbg3Parser;

typedef struct Pbg3FileAbstraction Pbg3FileAbstraction, *PPbg3FileAbstraction;

typedef struct Pbg3ParserVtbl Pbg3ParserVtbl, *PPbg3ParserVtbl;

typedef struct FileAbstraction FileAbstraction, *PFileAbstraction;

typedef struct FileAbstractionVtable FileAbstractionVtable, *PFileAbstractionVtable;

struct FileAbstraction {
    struct FileAbstractionVtable *vtbl;
    HANDLE handle;
    uint access;
};

struct Pbg3FileAbstraction {
    struct FileAbstraction base;
};

struct IPbg3Parser {
    struct Pbg3ParserVtbl *vtbl;
    uint offsetInFile;
    uint fileSize;
    int curByte;
    byte bitIdxInCurByte;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    uint someKindOfCrc;
};

struct Pbg3Parser {
    struct IPbg3Parser base;
    struct Pbg3FileAbstraction fileAbstraction; /* Created by retype action */
};

struct FileAbstractionVtable {
    int (*Open)(struct FileAbstraction *, LPCSTR, char *);
    void (*Close)(struct FileAbstraction *);
    BOOL (*Read)(struct FileAbstraction *, char *, DWORD, LPDWORD);
    BOOL (*Write)(struct FileAbstraction *, LPCVOID, DWORD, LPDWORD);
    byte (*ReadByte)(struct FileAbstraction *);
    byte (*WriteByte)(struct FileAbstraction *, byte);
    int (*Seek)(struct FileAbstraction *, long, DWORD);
    DWORD (*Tell)(struct FileAbstraction *);
    DWORD (*GetSize)(struct FileAbstraction *);
    HLOCAL (*ReadRemaining)(struct FileAbstraction *, uint);
};

struct Pbg3ParserVtbl {
    bool (*ReadBit)(struct Pbg3Parser *);
    void *ReadInt;
    void *ReadByteAssumeAligned;
    void *SeekToOffset;
    void *SeekToNextByte;
    void *ReadByteAlignedData;
    void *GetLastWriteTime;
    void *operator_delete;
};

typedef struct MidiOutput MidiOutput, *PMidiOutput;

typedef struct MidiTimer MidiTimer, *PMidiTimer;

typedef struct MidiTrack MidiTrack, *PMidiTrack;

typedef struct MidiDevice MidiDevice, *PMidiDevice;

typedef struct MidiOutputVtbl MidiOutputVtbl, *PMidiOutputVtbl;

struct MidiTimer {
    struct MidiOutputVtbl *vtbl;
    UINT timerId;
    TIMECAPS timeCaps;
};

struct MidiDevice {
    HMIDIOUT handle;
    undefined4 deviceID;
};

struct MidiOutput {
    struct MidiTimer timer;
    MIDIHDR *midiHeaders[32];
    int midiHeadersCursor;
    byte *midiFileData[32];
    int num_tracks;
    undefined4 format;
    int divisons;
    int unk120;
    undefined4 unk124;
    uint unk128;
    uint unk12c;
    uint unk130;
    uint unk134;
    struct MidiTrack *tracks;
    struct MidiDevice midiOutDev;
    undefined unk144[384];
    byte unk2c4;
    undefined field17_0x2c5;
    undefined field18_0x2c6;
    undefined field19_0x2c7;
    float unk2c8;
    uint unk2cc;
    uint unk2d0;
    uint unk2d4;
    uint unk2d8;
    uint unk2dc;
    uint unk2e0;
    uint unk2e4;
    uint unk2e8;
    int unk2ec;
    uint unk2f0;
    uint unk2f4;
    uint unk2f8;
    uint unk2fc;
};

struct MidiOutputVtbl {
};

struct MidiTrack {
    uint track_playing;
    uint unk4;
    uint track_length;
    byte opcode;
    undefined field4_0xd;
    undefined field5_0xe;
    undefined field6_0xf;
    void *trackData;
    void *curTrackDataCursor;
    void *unk18;
    uint unk1c;
};

typedef struct ScreenEffect ScreenEffect, *PScreenEffect;

struct ScreenEffect {
    int field0_0x0;
    struct ChainElem *calcChainElement;
    struct ChainElem *drawChainElement;
    uint field3_0xc;
    uint field4_0x10;
    int field5_0x14;
    int field6_0x18;
    int field7_0x1c;
    int field8_0x20;
    struct ZunTimer timer;
};

typedef struct PlayerRect PlayerRect, *PPlayerRect;

struct PlayerRect {
    struct D3DXVECTOR2 position1;
    struct D3DXVECTOR2 size1;
};

typedef struct AsciiManagerString AsciiManagerString, *PAsciiManagerString;

struct AsciiManagerString {
    char text[64];
    D3DXVECTOR3 position;
    D3DCOLOR color;
    struct D3DXVECTOR2 scale;
    undefined4 isSelected;
    undefined4 isGui;
};

typedef enum EclValueType {
    ECL_VALUE_TYPE_INT=0,
    EVL_VALUE_TYPE_FLOAT=1,
    ECL_VALUE_TYPE_READONLY=2,
    ECL_VALUE_TYPE_UNDEFINED=3
} EclValueType;

typedef struct PlayerBullet PlayerBullet, *PPlayerBullet;

struct PlayerBullet {
    struct AnmVm vm;
    D3DXVECTOR3 field1_0x110;
    D3DXVECTOR3 field2_0x11c;
    float field3_0x128;
    float field4_0x12c;
    float field5_0x130;
    float field6_0x134;
    float field7_0x138;
    float field8_0x13c;
    struct ZunTimer field9_0x140;
    short field10_0x14c;
    short field11_0x14e;
    short field12_0x150;
    short field13_0x152;
    short field14_0x154;
};

typedef struct Pbg3Archive Pbg3Archive, *PPbg3Archive;

typedef struct Pbg3Entry Pbg3Entry, *PPbg3Entry;

struct Pbg3Archive {
    struct Pbg3Parser *parser;
    int unk;
    int numOfEntries;
    int fileTableOffset;
    struct Pbg3Entry *entries;
};

struct Pbg3Entry {
    uint unk1; /* Created by retype action */
    uint unk2; /* Created by retype action */
    uint uncompressedSize; /* Created by retype action */
    uint dataOffset; /* Created by retype action */
    uint checksum; /* Created by retype action */
    char filename[256];
};

typedef struct UnkVars476264 UnkVars476264, *PUnkVars476264;

struct UnkVars476264 {
    int var1;
    int var2;
    int var3;
};

typedef struct AsciiManager AsciiManager, *PAsciiManager;

typedef struct StageMenu StageMenu, *PStageMenu;

typedef struct AsciiManagerPopup AsciiManagerPopup, *PAsciiManagerPopup;

struct AsciiManagerPopup {
    char digits[8];
    D3DXVECTOR3 position;
    D3DCOLOR color;
    struct ZunTimer timer;
    uchar inUse;
    uchar characterCount;
};

struct StageMenu { /* This is a menu that appears when we are in-game. There are two: the normal menu (when you hit the menu button) and the retry menu (when you die with no lives remaining) */
    int curState;
    int numFrames;
    struct AnmVm vms0[6];
    struct AnmVm vm1;
};

struct AsciiManager {
    struct AnmVm vm0;
    struct AnmVm vm1;
    struct AsciiManagerString strings[256];
    int numStrings;
    D3DCOLOR color;
    struct D3DXVECTOR2 scale;
    int isGui;
    int isSelected;
    int nextPopupIndex1;
    int nextPopupIndex2;
    undefined4 unk3;
    struct StageMenu game_menu;
    struct StageMenu retry_menu;
    struct AsciiManagerPopup popups[515];
};

typedef struct Enemy Enemy, *PEnemy;

typedef struct EnemyEclContext EnemyEclContext, *PEnemyEclContext;

typedef struct EnemyBulletShooter EnemyBulletShooter, *PEnemyBulletShooter;

typedef struct EnemyLaserShooter EnemyLaserShooter, *PEnemyLaserShooter;

typedef struct Effect Effect, *PEffect;

typedef struct EclRawInstr EclRawInstr, *PEclRawInstr;

struct EnemyEclContext {
    struct EclRawInstr *current_instr;
    struct ZunTimer time;
    void *func_set_func;
    int var0;
    int var1;
    int var2;
    int var3;
    float float0;
    float float1;
    float float2;
    float float3;
    int var4;
    int var5;
    int var6;
    int var7;
    int compare_register;
    ushort sub_id;
};

struct EnemyLaserShooter {
    ushort sprite;
    ushort color;
    D3DXVECTOR3 position;
    float angle;
    undefined4 field4_0x14;
    float speed;
    undefined4 field6_0x1c;
    float start_offset;
    float end_offset;
    float start_length;
    float width;
    int start_time;
    int duration;
    int stop_time;
    int graze_delay;
    int graze_distance;
    undefined4 field16_0x44;
    ushort type;
    uint field18_0x4c;
    uint field19_0x50;
};

struct EnemyBulletShooter {
    ushort sprite;
    ushort color;
    D3DXVECTOR3 position;
    float angle1;
    float angle2;
    float speed1;
    float speed2;
    float ex_floats[4];
    int ex_ints[4];
    int field9_0x40;
    ushort count1;
    ushort count2;
    ushort aim_mode;
    uint flags;
    int sfx;
};

struct Enemy {
    struct AnmVm primary_vm;
    struct AnmVm vms[8];
    struct EnemyEclContext current_context;
    struct EnemyEclContext saved_context_stack[8];
    int stack_depth;
    int field5_0xc40;
    short death_callback_sub;
    short interrupts[16];
    int run_interrupt;
    D3DXVECTOR3 position;
    D3DXVECTOR3 hitbox_dimensions;
    D3DXVECTOR3 axis_speed;
    float angle;
    float angular_velocity;
    float speed;
    float acceleration;
    D3DXVECTOR3 shoot_offset;
    D3DXVECTOR3 move_interp;
    D3DXVECTOR3 move_interp_start_pos;
    struct ZunTimer move_interp_timer;
    int move_interp_start_time;
    float bullet_rank_speed_low;
    float bullet_rank_speed_high;
    ushort bullet_rank_amount1_low;
    ushort bullet_rank_amount1_high;
    ushort bullet_rank_amount2_low;
    ushort bullet_rank_amount2_high;
    int life;
    int max_life;
    int score;
    struct ZunTimer boss_timer;
    union D3DCOLORUNION color;
    struct EnemyBulletShooter bullet_props;
    int shoot_interval;
    struct ZunTimer shoot_interval_timer;
    struct EnemyLaserShooter laser_props;
    void *lasers[32];
    int laser_store;
    byte death_anm1;
    byte death_anm2;
    byte death_anm3;
    enum ItemType item_drop;
    byte boss_id;
    byte field43_0xe41;
    struct ZunTimer field44_0xe44;
    byte flags1;
    byte flags2;
    byte flags3;
    byte anm_ex_flags;
    short anm_ex_defaults;
    short anm_ex_far_left;
    short anm_ex_far_right;
    short anm_ex_left;
    short anm_ex_right;
    struct D3DXVECTOR2 lower_move_limit;
    struct D3DXVECTOR2 upper_move_limit;
    struct Effect *effect_array[12];
    int effect_idx;
    float effect_distance;
    int life_callback_threshold;
    int life_callback_sub;
    int timer_callback_threshold;
    int timer_callback_sub;
    float field63_0xeb8;
    struct ZunTimer field64_0xebc;
};

struct Effect {
    struct AnmVm vm;
    D3DXVECTOR3 pos1;
    float field2_0x11c;
    float field3_0x120;
    float field4_0x124;
    float field5_0x128;
    float field6_0x12c;
    float field7_0x130;
    D3DXVECTOR3 field8_0x134;
    D3DXVECTOR3 pos2;
    struct D3DXQUATERNION field10_0x14c;
    float field11_0x15c;
    float __angle_related;
    struct ZunTimer timer;
    undefined4 field14_0x170;
    int (*effect_update_callback)(struct Effect *);
    byte in_use_flag;
    byte effect_id;
    byte field18_0x17a;
    undefined field19_0x17b;
};

struct EclRawInstr {
    int time;
    short opcode;
    short offset_to_next;
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    int ecl_var_id;
    float float_var_1;
    float float_var_2;
    float float_var_3;
    ushort field11_0x1c;
    undefined field12_0x1e;
    undefined field13_0x1f;
    ushort field14_0x20;
};

typedef struct Bullet Bullet, *PBullet;

typedef struct BulletTypeVms BulletTypeVms, *PBulletTypeVms;

struct BulletTypeVms {
    struct AnmVm vm0;
    struct AnmVm spawn_effect_short;
    struct AnmVm spawn_effect_medium;
    struct AnmVm spawn_effect_long;
    struct AnmVm spawn_effect_short_with_memset;
    float field5_0x550;
    float field6_0x554;
    undefined field7_0x558;
    undefined field8_0x559;
    undefined field9_0x55a;
    undefined field10_0x55b;
    byte field11_0x55c;
    byte field12_0x55d;
    undefined field13_0x55e;
    undefined field14_0x55f;
};

struct Bullet {
    struct BulletTypeVms vms;
    D3DXVECTOR3 pos;
    D3DXVECTOR3 velocity;
    D3DXVECTOR3 ex_4_acceleration;
    float speed;
    float ex_5_float_0;
    float dir_change__speed_arg;
    float angle;
    float ex_5_float_1;
    float dir_change__rotation_arg;
    struct ZunTimer timer;
    int ex_5_int_0;
    int dir_change__interval;
    int dir_change__num_times;
    int dir_change__max_times;
    ushort ex_flags;
    ushort color;
    undefined2 field17_0x5bc;
    ushort state;
    ushort field19_0x5c0;
    byte field20_0x5c2;
    byte field21_0x5c3;
};

typedef struct EnemyManager EnemyManager, *PEnemyManager;

struct EnemyManager {
    char *stg_enm_anm_filename;
    char *stg_enm2_anm_filename;
    struct Enemy template;
    struct Enemy enemies[256];
    struct Enemy dummy_enemy_for_failed_spawns;
    struct Enemy *bosses[8];
    ushort random_item_spawn_index;
    ushort random_item_table_index;
    int enemy_count_real;
    undefined field9_0xee5c0;
    undefined field10_0xee5c1;
    undefined field11_0xee5c2;
    undefined field12_0xee5c3;
    undefined field13_0xee5c4;
    undefined field14_0xee5c5;
    undefined field15_0xee5c6;
    undefined field16_0xee5c7;
    int spellcard_capture;
    int spellcard_bonus;
    int spellcard_number;
    undefined field20_0xee5d4;
    undefined field21_0xee5d5;
    undefined field22_0xee5d6;
    undefined field23_0xee5d7;
    undefined field24_0xee5d8;
    undefined field25_0xee5d9;
    undefined field26_0xee5da;
    undefined field27_0xee5db;
    void *timeline_instr;
    struct ZunTimer timeline_time;
};


/* WARNING! conflicting data type names: /th06/test - /test */

typedef struct ResultScreenUnk3ab0 ResultScreenUnk3ab0, *PResultScreenUnk3ab0;

typedef struct Hscr Hscr, *PHscr;

typedef struct Th6k Th6k, *PTh6k;

struct Th6k {
    uint magic;
    ushort th6k_len;
    ushort unk_len;
    char version?;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
};

struct ResultScreenUnk3ab0 {
    struct ResultScreenUnk3ab0 *unk1;
    struct ResultScreenUnk3ab0 *unk2__ResultScreenUnk3ab0;
    struct Hscr *unk3;
};

struct Hscr {
    struct Th6k base;
    uint score;
    byte character; /* range is 0-3. Bottom bit is spellcard, top bit is character (0 = reimu, 2 = marisa) */
    byte difficulty;
    byte stage;
    char name[9];
};

typedef struct BulletManager BulletManager, *PBulletManager;

typedef struct Laser Laser, *PLaser;

struct Laser {
    struct AnmVm vm0;
    struct AnmVm vm1;
    D3DXVECTOR3 pos;
    float angle;
    float start_offset;
    float end_offset;
    float start_length;
    float width;
    float speed;
    int start_time;
    int graze_delay;
    int duration;
    int end_time;
    int graze_interval;
    int in_use;
    struct ZunTimer timer;
    short flags;
    short color;
    byte state;
};

struct BulletManager {
    struct BulletTypeVms bullet_type_templates[16];
    struct Bullet bullets[640];
    struct Laser lasers[64];
    int next_bullet_index;
    int bullet_count;
    struct ZunTimer time;
    char *etama_anm_filename;
};

typedef struct GuiImpl GuiImpl, *PGuiImpl;

typedef struct GuiMsgVm GuiMsgVm, *PGuiMsgVm;

typedef struct GuiImplChildB GuiImplChildB, *PGuiImplChildB;

typedef struct MsgRawHeader MsgRawHeader, *PMsgRawHeader;

struct GuiImplChildB {
    D3DXVECTOR3 field0_0x0;
    int field1_0xc;
    int field2_0x10;
    struct ZunTimer field3_0x14;
};

struct GuiMsgVm {
    struct MsgRawHeader *msg_file;
    void *current_instr;
    uint current_msg_idx;
    struct ZunTimer timer;
    int frames_elapsed_during_pause;
    struct AnmVm portraits[2];
    struct AnmVm dialogue_lines[2];
    struct AnmVm intro_lines[2];
    D3DCOLOR text_colors_A[4];
    D3DCOLOR text_colors_B[4];
    uint font_size;
    uint ignore_wait_counter;
    byte dialogue_skippable;
};

struct GuiImpl {
    struct AnmVm vms[26];
    byte field1_0x1ba0;
    undefined field2_0x1ba1[3];
    struct AnmVm vm1;
    struct AnmVm vm2;
    struct AnmVm vm3;
    struct AnmVm vm4;
    struct AnmVm vm5;
    struct AnmVm vm6;
    struct AnmVm vm7;
    struct AnmVm vm8;
    struct AnmVm vm9;
    struct GuiMsgVm msg;
    uint field13_0x2bdc;
    uint stage_score;
    struct GuiImplChildB field15_0x2be4;
    struct GuiImplChildB field16_0x2c04;
    struct GuiImplChildB field17_0x2c24;
};

struct MsgRawHeader {
    int num_entries;
    void *entries;
};

typedef struct PlayerInner PlayerInner, *PPlayerInner;

typedef struct PlayerUnknown PlayerUnknown, *PPlayerUnknown;

struct PlayerUnknown {
    float field0_0x0;
    float field1_0x4;
    float field2_0x8;
};

struct PlayerInner {
    int field0_0x0;
    int field1_0x4;
    struct ZunTimer field2_0x8;
    void *bombCalc;
    void *bombDraw;
    undefined field5_0x1c[64];
    struct PlayerUnknown field6_0x5c[4];
    undefined field7_0x8c[48];
    int field8_0xbc[8];
    undefined field9_0xdc[64];
    struct AnmVm field10_0x11c[32];
};

typedef struct Pbg3FileName Pbg3FileName, *PPbg3FileName;

struct Pbg3FileName {
    byte filename[32];
};

typedef struct ReplayData ReplayData, *PReplayData;

typedef uint uint32_t;

typedef ushort uint16_t;

typedef struct StageReplayData StageReplayData, *PStageReplayData;

typedef struct ReplayDataInput ReplayDataInput, *PReplayDataInput;

struct ReplayDataInput {
    uint frame_num;
    ushort input_key;
    undefined2 padding;
};

struct ReplayData {
    char *magic;
    ushort version;
    byte shottype_chara;
    byte difficulty;
    uint32_t checksum;
    uint16_t padding_bytes;
    uint8_t key;
    undefined field7_0xf;
    char date[9];
    undefined field9_0x19;
    undefined field10_0x1a;
    undefined field11_0x1b;
    undefined field12_0x1c;
    undefined field13_0x1d;
    undefined field14_0x1e;
    undefined field15_0x1f;
    undefined field16_0x20;
    undefined field17_0x21;
    undefined field18_0x22;
    undefined field19_0x23;
    undefined field20_0x24;
    undefined field21_0x25;
    undefined field22_0x26;
    undefined field23_0x27;
    undefined field24_0x28;
    undefined field25_0x29;
    undefined field26_0x2a;
    undefined field27_0x2b;
    undefined field28_0x2c;
    undefined field29_0x2d;
    undefined field30_0x2e;
    undefined field31_0x2f;
    undefined field32_0x30;
    undefined field33_0x31;
    undefined field34_0x32;
    undefined field35_0x33;
    struct StageReplayData *stage_score[7];
};

struct StageReplayData {
    uint score;
    ushort random_seed;
    ushort unk6;
    byte power;
    byte lives_remaining;
    byte bombs_remaining;
    byte rank;
    byte power_item_count_for_score;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    struct ReplayDataInput replay_inputs[53998];
};

typedef struct ControllerMapping ControllerMapping, *PControllerMapping;

struct ControllerMapping {
    short shootButton;
    short bombButton;
    short focusButton;
    short menuButton;
    short upButton;
    short downButton;
    short leftButton;
    short rightButton;
    short skipButton;
};

typedef struct struct struct, *Pstruct;

struct struct {
    float field0_0x0;
    float field1_0x4;
    float field2_0x8;
    float field3_0xc;
    void *field4_0x10;
    void *field5_0x14;
};

typedef struct Player Player, *PPlayer;

typedef byte u8;

typedef struct ShottypeData ShottypeData, *PShottypeData;

struct ShottypeData {
    float field0_0x0;
    float field1_0x4;
    float field2_0x8;
    float field3_0xc;
    void *field4_0x10;
    void *field5_0x14;
};

struct Player {
    struct AnmVm vm0;
    struct AnmVm vm1[3];
    D3DXVECTOR3 position;
    u8 field3_0x44c[12];
    D3DXVECTOR3 field4_0x458;
    D3DXVECTOR3 field5_0x464;
    D3DXVECTOR3 field6_0x470;
    D3DXVECTOR3 field7_0x47c;
    D3DXVECTOR3 field8_0x488;
    D3DXVECTOR3 field9_0x494;
    D3DXVECTOR3 field10_0x4a0[2];
    D3DXVECTOR3 field11_0x4b8[32];
    D3DXVECTOR3 field12_0x638[32];
    int field13_0x7b8[32];
    int field14_0x838[32];
    struct PlayerRect field15_0x8b8[16];
    struct ZunTimer field16_0x9b8[2];
    float field17_0x9d0;
    float field18_0x9d4;
    int field19_0x9d8;
    int field20_0x9dc;
    byte field21_0x9e0;
    byte field22_0x9e1;
    byte field23_0x9e2;
    byte field24_0x9e3;
    byte field25_0x9e4;
    struct ZunTimer timer_related;
    struct ShottypeData field27_0x9f4;
    int field28_0xa0c;
    float field29_0xa10;
    int field30_0xa14;
    short field31_0xa18;
    D3DXVECTOR3 position_of_last_enemy_hit;
    struct PlayerBullet bullets[80];
    struct ZunTimer field34_0x75a8;
    struct ZunTimer field35_0x75b4;
    void *field36_0x75c0;
    void *field37_0x75c4;
    struct PlayerInner inner;
    struct ChainElem *onTick;
    struct ChainElem *onDraw1;
    struct ChainElem *onDraw2;
};

typedef struct Gui Gui, *PGui;

struct Gui {
    uint flags;
    struct GuiImpl *impl;
    float field2_0x8;
    float blue_spellcard_bar_length;
    uint field4_0x10;
    int ecl_set_lives;
    int ecl_spellcard_related;
    int field7_0x1c;
    bool boss_present;
    float boss_health_bar1;
    float boss_health_bar2;
};

typedef struct Chain Chain, *PChain;

struct Chain {
    struct ChainElem calcChain;
    struct ChainElem drawChain;
    DWORD midiOutputDeviceCount;
    undefined4 unk;
};

typedef struct zRect zRect, *PzRect;

struct zRect {
    float left;
    float top;
    float right;
    float bottom;
};

typedef struct EffectManager EffectManager, *PEffectManager;

struct EffectManager {
    int next_index;
    struct EffectManager *next;
    struct Effect effects[512];
    struct Effect dummy_effect_for_failed_spawns;
};

typedef struct Rng Rng, *PRng;

struct Rng {
    ushort seed;
    uint generationCount;
};

typedef enum MainMenuVMs {
    INNER_REPLAY_INFO_VM=97,
    REPLAY_LIST_VM=98
} MainMenuVMs;

typedef struct ResultScreen ResultScreen, *PResultScreen;

typedef struct ScoreDat ScoreDat, *PScoreDat;

struct ResultScreen {
    struct ScoreDat *scoredat;
    int field1_0x4;
    int unk_8;
    int field3_0xc;
    int unk_10;
    undefined field5_0x14;
    undefined field6_0x15;
    undefined field7_0x16;
    undefined field8_0x17;
    int field9_0x18;
    undefined field10_0x1c;
    undefined field11_0x1d;
    undefined field12_0x1e;
    undefined field13_0x1f;
    int possibly_selected_character;
    int field15_0x24;
    int field16_0x28;
    int *field17_0x2c;
    undefined field18_0x30;
    undefined field19_0x31;
    undefined field20_0x32;
    undefined field21_0x33;
    undefined field22_0x34;
    undefined field23_0x35;
    undefined field24_0x36;
    undefined field25_0x37;
    undefined field26_0x38;
    undefined field27_0x39;
    undefined field28_0x3a;
    undefined field29_0x3b;
    undefined field30_0x3c;
    undefined field31_0x3d;
    undefined field32_0x3e;
    undefined field33_0x3f;
    struct AnmVm unk_40;
    struct AnmVm field35_0x150;
    struct AnmVm field36_0x260;
    struct AnmVm field37_0x370;
    struct AnmVm field38_0x480;
    struct AnmVm field39_0x590;
    struct AnmVm field40_0x6a0;
    struct AnmVm field41_0x7b0;
    struct AnmVm field42_0x8c0;
    struct AnmVm field43_0x9d0;
    struct AnmVm field44_0xae0;
    struct AnmVm field45_0xbf0;
    struct AnmVm field46_0xd00;
    struct AnmVm field47_0xe10;
    struct AnmVm field48_0xf20;
    struct AnmVm field49_0x1030;
    struct AnmVm field50_0x1140;
    struct AnmVm field51_0x1250;
    struct AnmVm field52_0x1360;
    struct AnmVm field53_0x1470;
    struct AnmVm field54_0x1580;
    struct AnmVm field55_0x1690;
    struct AnmVm field56_0x17a0;
    struct AnmVm field57_0x18b0;
    struct AnmVm field58_0x19c0;
    struct AnmVm field59_0x1ad0;
    struct AnmVm field60_0x1be0;
    struct AnmVm field61_0x1cf0;
    struct AnmVm field62_0x1e00;
    struct AnmVm field63_0x1f10;
    struct AnmVm field64_0x2020;
    struct AnmVm field65_0x2130;
    struct AnmVm field66_0x2240;
    struct AnmVm field67_0x2350;
    struct AnmVm field68_0x2460;
    struct AnmVm field69_0x2570;
    struct AnmVm field70_0x2680;
    struct AnmVm field71_0x2790;
    struct AnmVm unk_28a0;
    struct AnmVm field73_0x29b0;
    struct AnmVm field74_0x2ac0;
    struct AnmVm field75_0x2bd0;
    struct AnmVm field76_0x2ce0;
    struct AnmVm field77_0x2df0;
    struct AnmVm field78_0x2f00;
    struct AnmVm field79_0x3010;
    struct AnmVm field80_0x3120;
    struct AnmVm field81_0x3230;
    struct AnmVm field82_0x3340;
    struct AnmVm field83_0x3450;
    struct AnmVm field84_0x3560;
    struct AnmVm field85_0x3670;
    struct AnmVm field86_0x3780;
    struct AnmVm field87_0x3890;
    struct AnmVm unk_39a0;
    struct ResultScreenUnk3ab0 unk_3ab0[20];
    struct Hscr default_scores[5][4][10];
    struct Hscr hscr;
    undefined field92_0x519c;
    undefined field93_0x519d;
    undefined field94_0x519e;
    undefined field95_0x519f;
    undefined field96_0x51a0;
    undefined field97_0x51a1;
    undefined field98_0x51a2;
    undefined field99_0x51a3;
    undefined field100_0x51a4;
    undefined field101_0x51a5;
    undefined field102_0x51a6;
    undefined field103_0x51a7;
    struct ChainElem *calc_chain;
    struct ChainElem *draw_chain;
    undefined field106_0x51b0;
    undefined field107_0x51b1;
    undefined field108_0x51b2;
    undefined field109_0x51b3;
    undefined field110_0x51b4;
    undefined field111_0x51b5;
    undefined field112_0x51b6;
    undefined field113_0x51b7;
    undefined field114_0x51b8;
    undefined field115_0x51b9;
    undefined field116_0x51ba;
    undefined field117_0x51bb;
    undefined field118_0x51bc;
    undefined field119_0x51bd;
    undefined field120_0x51be;
    undefined field121_0x51bf;
    undefined field122_0x51c0;
    undefined field123_0x51c1;
    undefined field124_0x51c2;
    undefined field125_0x51c3;
    undefined field126_0x51c4;
    undefined field127_0x51c5;
    undefined field128_0x51c6;
    undefined field129_0x51c7;
    undefined field130_0x51c8;
    undefined field131_0x51c9;
    undefined field132_0x51ca;
    undefined field133_0x51cb;
    undefined field134_0x51cc;
    undefined field135_0x51cd;
    undefined field136_0x51ce;
    undefined field137_0x51cf;
    undefined field138_0x51d0;
    undefined field139_0x51d1;
    undefined field140_0x51d2;
    undefined field141_0x51d3;
    undefined field142_0x51d4;
    undefined field143_0x51d5;
    undefined field144_0x51d6;
    undefined field145_0x51d7;
    undefined field146_0x51d8;
    undefined field147_0x51d9;
    undefined field148_0x51da;
    undefined field149_0x51db;
    undefined field150_0x51dc;
    undefined field151_0x51dd;
    undefined field152_0x51de;
    undefined field153_0x51df;
    undefined field154_0x51e0;
    undefined field155_0x51e1;
    undefined field156_0x51e2;
    undefined field157_0x51e3;
    undefined field158_0x51e4;
    undefined field159_0x51e5;
    undefined field160_0x51e6;
    undefined field161_0x51e7;
    undefined field162_0x51e8;
    undefined field163_0x51e9;
    undefined field164_0x51ea;
    undefined field165_0x51eb;
    undefined field166_0x51ec;
    undefined field167_0x51ed;
    undefined field168_0x51ee;
    undefined field169_0x51ef;
    undefined field170_0x51f0;
    undefined field171_0x51f1;
    undefined field172_0x51f2;
    undefined field173_0x51f3;
    undefined field174_0x51f4;
    undefined field175_0x51f5;
    undefined field176_0x51f6;
    undefined field177_0x51f7;
    undefined field178_0x51f8;
    undefined field179_0x51f9;
    undefined field180_0x51fa;
    undefined field181_0x51fb;
    undefined field182_0x51fc;
    undefined field183_0x51fd;
    undefined field184_0x51fe;
    undefined field185_0x51ff;
    undefined field186_0x5200;
    undefined field187_0x5201;
    undefined field188_0x5202;
    undefined field189_0x5203;
    undefined field190_0x5204;
    undefined field191_0x5205;
    undefined field192_0x5206;
    undefined field193_0x5207;
    undefined field194_0x5208;
    undefined field195_0x5209;
    undefined field196_0x520a;
    undefined field197_0x520b;
    undefined field198_0x520c;
    undefined field199_0x520d;
    undefined field200_0x520e;
    undefined field201_0x520f;
    undefined field202_0x5210;
    undefined field203_0x5211;
    undefined field204_0x5212;
    undefined field205_0x5213;
    undefined field206_0x5214;
    undefined field207_0x5215;
    undefined field208_0x5216;
    undefined field209_0x5217;
    undefined field210_0x5218;
    undefined field211_0x5219;
    undefined field212_0x521a;
    undefined field213_0x521b;
    undefined field214_0x521c;
    undefined field215_0x521d;
    undefined field216_0x521e;
    undefined field217_0x521f;
    undefined field218_0x5220;
    undefined field219_0x5221;
    undefined field220_0x5222;
    undefined field221_0x5223;
    undefined field222_0x5224;
    undefined field223_0x5225;
    undefined field224_0x5226;
    undefined field225_0x5227;
    undefined field226_0x5228;
    undefined field227_0x5229;
    undefined field228_0x522a;
    undefined field229_0x522b;
    undefined field230_0x522c;
    undefined field231_0x522d;
    undefined field232_0x522e;
    undefined field233_0x522f;
    undefined field234_0x5230;
    undefined field235_0x5231;
    undefined field236_0x5232;
    undefined field237_0x5233;
    undefined field238_0x5234;
    undefined field239_0x5235;
    undefined field240_0x5236;
    undefined field241_0x5237;
    undefined field242_0x5238;
    undefined field243_0x5239;
    undefined field244_0x523a;
    undefined field245_0x523b;
    undefined field246_0x523c;
    undefined field247_0x523d;
    undefined field248_0x523e;
    undefined field249_0x523f;
    undefined field250_0x5240;
    undefined field251_0x5241;
    undefined field252_0x5242;
    undefined field253_0x5243;
    undefined field254_0x5244;
    undefined field255_0x5245;
    undefined field256_0x5246;
    undefined field257_0x5247;
    undefined field258_0x5248;
    undefined field259_0x5249;
    undefined field260_0x524a;
    undefined field261_0x524b;
    undefined field262_0x524c;
    undefined field263_0x524d;
    undefined field264_0x524e;
    undefined field265_0x524f;
    undefined field266_0x5250;
    undefined field267_0x5251;
    undefined field268_0x5252;
    undefined field269_0x5253;
    undefined field270_0x5254;
    undefined field271_0x5255;
    undefined field272_0x5256;
    undefined field273_0x5257;
    undefined field274_0x5258;
    undefined field275_0x5259;
    undefined field276_0x525a;
    undefined field277_0x525b;
    undefined field278_0x525c;
    undefined field279_0x525d;
    undefined field280_0x525e;
    undefined field281_0x525f;
    undefined field282_0x5260;
    undefined field283_0x5261;
    undefined field284_0x5262;
    undefined field285_0x5263;
    undefined field286_0x5264;
    undefined field287_0x5265;
    undefined field288_0x5266;
    undefined field289_0x5267;
    undefined field290_0x5268;
    undefined field291_0x5269;
    undefined field292_0x526a;
    undefined field293_0x526b;
    undefined field294_0x526c;
    undefined field295_0x526d;
    undefined field296_0x526e;
    undefined field297_0x526f;
    undefined field298_0x5270;
    undefined field299_0x5271;
    undefined field300_0x5272;
    undefined field301_0x5273;
    undefined field302_0x5274;
    undefined field303_0x5275;
    undefined field304_0x5276;
    undefined field305_0x5277;
    undefined field306_0x5278;
    undefined field307_0x5279;
    undefined field308_0x527a;
    undefined field309_0x527b;
    undefined field310_0x527c;
    undefined field311_0x527d;
    undefined field312_0x527e;
    undefined field313_0x527f;
    undefined field314_0x5280;
    undefined field315_0x5281;
    undefined field316_0x5282;
    undefined field317_0x5283;
    undefined field318_0x5284;
    undefined field319_0x5285;
    undefined field320_0x5286;
    undefined field321_0x5287;
    undefined field322_0x5288;
    undefined field323_0x5289;
    undefined field324_0x528a;
    undefined field325_0x528b;
    undefined field326_0x528c;
    undefined field327_0x528d;
    undefined field328_0x528e;
    undefined field329_0x528f;
    undefined field330_0x5290;
    undefined field331_0x5291;
    undefined field332_0x5292;
    undefined field333_0x5293;
    undefined field334_0x5294;
    undefined field335_0x5295;
    undefined field336_0x5296;
    undefined field337_0x5297;
    undefined field338_0x5298;
    undefined field339_0x5299;
    undefined field340_0x529a;
    undefined field341_0x529b;
    undefined field342_0x529c;
    undefined field343_0x529d;
    undefined field344_0x529e;
    undefined field345_0x529f;
    undefined field346_0x52a0;
    undefined field347_0x52a1;
    undefined field348_0x52a2;
    undefined field349_0x52a3;
    undefined field350_0x52a4;
    undefined field351_0x52a5;
    undefined field352_0x52a6;
    undefined field353_0x52a7;
    undefined field354_0x52a8;
    undefined field355_0x52a9;
    undefined field356_0x52aa;
    undefined field357_0x52ab;
    undefined field358_0x52ac;
    undefined field359_0x52ad;
    undefined field360_0x52ae;
    undefined field361_0x52af;
    undefined field362_0x52b0;
    undefined field363_0x52b1;
    undefined field364_0x52b2;
    undefined field365_0x52b3;
    undefined field366_0x52b4;
    undefined field367_0x52b5;
    undefined field368_0x52b6;
    undefined field369_0x52b7;
    undefined field370_0x52b8;
    undefined field371_0x52b9;
    undefined field372_0x52ba;
    undefined field373_0x52bb;
    undefined field374_0x52bc;
    undefined field375_0x52bd;
    undefined field376_0x52be;
    undefined field377_0x52bf;
    undefined field378_0x52c0;
    undefined field379_0x52c1;
    undefined field380_0x52c2;
    undefined field381_0x52c3;
    undefined field382_0x52c4;
    undefined field383_0x52c5;
    undefined field384_0x52c6;
    undefined field385_0x52c7;
    undefined field386_0x52c8;
    undefined field387_0x52c9;
    undefined field388_0x52ca;
    undefined field389_0x52cb;
    undefined field390_0x52cc;
    undefined field391_0x52cd;
    undefined field392_0x52ce;
    undefined field393_0x52cf;
    undefined field394_0x52d0;
    undefined field395_0x52d1;
    undefined field396_0x52d2;
    undefined field397_0x52d3;
    undefined field398_0x52d4;
    undefined field399_0x52d5;
    undefined field400_0x52d6;
    undefined field401_0x52d7;
    undefined field402_0x52d8;
    undefined field403_0x52d9;
    undefined field404_0x52da;
    undefined field405_0x52db;
    undefined field406_0x52dc;
    undefined field407_0x52dd;
    undefined field408_0x52de;
    undefined field409_0x52df;
    undefined field410_0x52e0;
    undefined field411_0x52e1;
    undefined field412_0x52e2;
    undefined field413_0x52e3;
    undefined field414_0x52e4;
    undefined field415_0x52e5;
    undefined field416_0x52e6;
    undefined field417_0x52e7;
    undefined field418_0x52e8;
    undefined field419_0x52e9;
    undefined field420_0x52ea;
    undefined field421_0x52eb;
    undefined field422_0x52ec;
    undefined field423_0x52ed;
    undefined field424_0x52ee;
    undefined field425_0x52ef;
    undefined field426_0x52f0;
    undefined field427_0x52f1;
    undefined field428_0x52f2;
    undefined field429_0x52f3;
    undefined field430_0x52f4;
    undefined field431_0x52f5;
    undefined field432_0x52f6;
    undefined field433_0x52f7;
    undefined field434_0x52f8;
    undefined field435_0x52f9;
    undefined field436_0x52fa;
    undefined field437_0x52fb;
    undefined field438_0x52fc;
    undefined field439_0x52fd;
    undefined field440_0x52fe;
    undefined field441_0x52ff;
    undefined field442_0x5300;
    undefined field443_0x5301;
    undefined field444_0x5302;
    undefined field445_0x5303;
    undefined field446_0x5304;
    undefined field447_0x5305;
    undefined field448_0x5306;
    undefined field449_0x5307;
    undefined field450_0x5308;
    undefined field451_0x5309;
    undefined field452_0x530a;
    undefined field453_0x530b;
    undefined field454_0x530c;
    undefined field455_0x530d;
    undefined field456_0x530e;
    undefined field457_0x530f;
    undefined field458_0x5310;
    undefined field459_0x5311;
    undefined field460_0x5312;
    undefined field461_0x5313;
    undefined field462_0x5314;
    undefined field463_0x5315;
    undefined field464_0x5316;
    undefined field465_0x5317;
    undefined field466_0x5318;
    undefined field467_0x5319;
    undefined field468_0x531a;
    undefined field469_0x531b;
    undefined field470_0x531c;
    undefined field471_0x531d;
    undefined field472_0x531e;
    undefined field473_0x531f;
    undefined field474_0x5320;
    undefined field475_0x5321;
    undefined field476_0x5322;
    undefined field477_0x5323;
    undefined field478_0x5324;
    undefined field479_0x5325;
    undefined field480_0x5326;
    undefined field481_0x5327;
    undefined field482_0x5328;
    undefined field483_0x5329;
    undefined field484_0x532a;
    undefined field485_0x532b;
    undefined field486_0x532c;
    undefined field487_0x532d;
    undefined field488_0x532e;
    undefined field489_0x532f;
    undefined field490_0x5330;
    undefined field491_0x5331;
    undefined field492_0x5332;
    undefined field493_0x5333;
    undefined field494_0x5334;
    undefined field495_0x5335;
    undefined field496_0x5336;
    undefined field497_0x5337;
    undefined field498_0x5338;
    undefined field499_0x5339;
    undefined field500_0x533a;
    undefined field501_0x533b;
    undefined field502_0x533c;
    undefined field503_0x533d;
    undefined field504_0x533e;
    undefined field505_0x533f;
    undefined field506_0x5340;
    undefined field507_0x5341;
    undefined field508_0x5342;
    undefined field509_0x5343;
    undefined field510_0x5344;
    undefined field511_0x5345;
    undefined field512_0x5346;
    undefined field513_0x5347;
    undefined field514_0x5348;
    undefined field515_0x5349;
    undefined field516_0x534a;
    undefined field517_0x534b;
    undefined field518_0x534c;
    undefined field519_0x534d;
    undefined field520_0x534e;
    undefined field521_0x534f;
    undefined field522_0x5350;
    undefined field523_0x5351;
    undefined field524_0x5352;
    undefined field525_0x5353;
    undefined field526_0x5354;
    undefined field527_0x5355;
    undefined field528_0x5356;
    undefined field529_0x5357;
    undefined field530_0x5358;
    undefined field531_0x5359;
    undefined field532_0x535a;
    undefined field533_0x535b;
    undefined field534_0x535c;
    undefined field535_0x535d;
    undefined field536_0x535e;
    undefined field537_0x535f;
    undefined field538_0x5360;
    undefined field539_0x5361;
    undefined field540_0x5362;
    undefined field541_0x5363;
    undefined field542_0x5364;
    undefined field543_0x5365;
    undefined field544_0x5366;
    undefined field545_0x5367;
    undefined field546_0x5368;
    undefined field547_0x5369;
    undefined field548_0x536a;
    undefined field549_0x536b;
    undefined field550_0x536c;
    undefined field551_0x536d;
    undefined field552_0x536e;
    undefined field553_0x536f;
    undefined field554_0x5370;
    undefined field555_0x5371;
    undefined field556_0x5372;
    undefined field557_0x5373;
    undefined field558_0x5374;
    undefined field559_0x5375;
    undefined field560_0x5376;
    undefined field561_0x5377;
    undefined field562_0x5378;
    undefined field563_0x5379;
    undefined field564_0x537a;
    undefined field565_0x537b;
    undefined field566_0x537c;
    undefined field567_0x537d;
    undefined field568_0x537e;
    undefined field569_0x537f;
    undefined field570_0x5380;
    undefined field571_0x5381;
    undefined field572_0x5382;
    undefined field573_0x5383;
    undefined field574_0x5384;
    undefined field575_0x5385;
    undefined field576_0x5386;
    undefined field577_0x5387;
    undefined field578_0x5388;
    undefined field579_0x5389;
    undefined field580_0x538a;
    undefined field581_0x538b;
    undefined field582_0x538c;
    undefined field583_0x538d;
    undefined field584_0x538e;
    undefined field585_0x538f;
    undefined field586_0x5390;
    undefined field587_0x5391;
    undefined field588_0x5392;
    undefined field589_0x5393;
    undefined field590_0x5394;
    undefined field591_0x5395;
    undefined field592_0x5396;
    undefined field593_0x5397;
    undefined field594_0x5398;
    undefined field595_0x5399;
    undefined field596_0x539a;
    undefined field597_0x539b;
    undefined field598_0x539c;
    undefined field599_0x539d;
    undefined field600_0x539e;
    undefined field601_0x539f;
    undefined field602_0x53a0;
    undefined field603_0x53a1;
    undefined field604_0x53a2;
    undefined field605_0x53a3;
    undefined field606_0x53a4;
    undefined field607_0x53a5;
    undefined field608_0x53a6;
    undefined field609_0x53a7;
    undefined field610_0x53a8;
    undefined field611_0x53a9;
    undefined field612_0x53aa;
    undefined field613_0x53ab;
    undefined field614_0x53ac;
    undefined field615_0x53ad;
    undefined field616_0x53ae;
    undefined field617_0x53af;
    undefined field618_0x53b0;
    undefined field619_0x53b1;
    undefined field620_0x53b2;
    undefined field621_0x53b3;
    undefined field622_0x53b4;
    undefined field623_0x53b5;
    undefined field624_0x53b6;
    undefined field625_0x53b7;
    undefined field626_0x53b8;
    undefined field627_0x53b9;
    undefined field628_0x53ba;
    undefined field629_0x53bb;
    undefined field630_0x53bc;
    undefined field631_0x53bd;
    undefined field632_0x53be;
    undefined field633_0x53bf;
    undefined field634_0x53c0;
    undefined field635_0x53c1;
    undefined field636_0x53c2;
    undefined field637_0x53c3;
    undefined field638_0x53c4;
    undefined field639_0x53c5;
    undefined field640_0x53c6;
    undefined field641_0x53c7;
    undefined field642_0x53c8;
    undefined field643_0x53c9;
    undefined field644_0x53ca;
    undefined field645_0x53cb;
    undefined field646_0x53cc;
    undefined field647_0x53cd;
    undefined field648_0x53ce;
    undefined field649_0x53cf;
    undefined field650_0x53d0;
    undefined field651_0x53d1;
    undefined field652_0x53d2;
    undefined field653_0x53d3;
    undefined field654_0x53d4;
    undefined field655_0x53d5;
    undefined field656_0x53d6;
    undefined field657_0x53d7;
    undefined field658_0x53d8;
    undefined field659_0x53d9;
    undefined field660_0x53da;
    undefined field661_0x53db;
    undefined field662_0x53dc;
    undefined field663_0x53dd;
    undefined field664_0x53de;
    undefined field665_0x53df;
    undefined field666_0x53e0;
    undefined field667_0x53e1;
    undefined field668_0x53e2;
    undefined field669_0x53e3;
    undefined field670_0x53e4;
    undefined field671_0x53e5;
    undefined field672_0x53e6;
    undefined field673_0x53e7;
    undefined field674_0x53e8;
    undefined field675_0x53e9;
    undefined field676_0x53ea;
    undefined field677_0x53eb;
    undefined field678_0x53ec;
    undefined field679_0x53ed;
    undefined field680_0x53ee;
    undefined field681_0x53ef;
    undefined field682_0x53f0;
    undefined field683_0x53f1;
    undefined field684_0x53f2;
    undefined field685_0x53f3;
    undefined field686_0x53f4;
    undefined field687_0x53f5;
    undefined field688_0x53f6;
    undefined field689_0x53f7;
    undefined field690_0x53f8;
    undefined field691_0x53f9;
    undefined field692_0x53fa;
    undefined field693_0x53fb;
    undefined field694_0x53fc;
    undefined field695_0x53fd;
    undefined field696_0x53fe;
    undefined field697_0x53ff;
    undefined field698_0x5400;
    undefined field699_0x5401;
    undefined field700_0x5402;
    undefined field701_0x5403;
    undefined field702_0x5404;
    undefined field703_0x5405;
    undefined field704_0x5406;
    undefined field705_0x5407;
    undefined field706_0x5408;
    undefined field707_0x5409;
    undefined field708_0x540a;
    undefined field709_0x540b;
    undefined field710_0x540c;
    undefined field711_0x540d;
    undefined field712_0x540e;
    undefined field713_0x540f;
    undefined field714_0x5410;
    undefined field715_0x5411;
    undefined field716_0x5412;
    undefined field717_0x5413;
    undefined field718_0x5414;
    undefined field719_0x5415;
    undefined field720_0x5416;
    undefined field721_0x5417;
    undefined field722_0x5418;
    undefined field723_0x5419;
    undefined field724_0x541a;
    undefined field725_0x541b;
    undefined field726_0x541c;
    undefined field727_0x541d;
    undefined field728_0x541e;
    undefined field729_0x541f;
    undefined field730_0x5420;
    undefined field731_0x5421;
    undefined field732_0x5422;
    undefined field733_0x5423;
    undefined field734_0x5424;
    undefined field735_0x5425;
    undefined field736_0x5426;
    undefined field737_0x5427;
    undefined field738_0x5428;
    undefined field739_0x5429;
    undefined field740_0x542a;
    undefined field741_0x542b;
    undefined field742_0x542c;
    undefined field743_0x542d;
    undefined field744_0x542e;
    undefined field745_0x542f;
    undefined field746_0x5430;
    undefined field747_0x5431;
    undefined field748_0x5432;
    undefined field749_0x5433;
    undefined field750_0x5434;
    undefined field751_0x5435;
    undefined field752_0x5436;
    undefined field753_0x5437;
    undefined field754_0x5438;
    undefined field755_0x5439;
    undefined field756_0x543a;
    undefined field757_0x543b;
    undefined field758_0x543c;
    undefined field759_0x543d;
    undefined field760_0x543e;
    undefined field761_0x543f;
    undefined field762_0x5440;
    undefined field763_0x5441;
    undefined field764_0x5442;
    undefined field765_0x5443;
    undefined field766_0x5444;
    undefined field767_0x5445;
    undefined field768_0x5446;
    undefined field769_0x5447;
    undefined field770_0x5448;
    undefined field771_0x5449;
    undefined field772_0x544a;
    undefined field773_0x544b;
    undefined field774_0x544c;
    undefined field775_0x544d;
    undefined field776_0x544e;
    undefined field777_0x544f;
    undefined field778_0x5450;
    undefined field779_0x5451;
    undefined field780_0x5452;
    undefined field781_0x5453;
    undefined field782_0x5454;
    undefined field783_0x5455;
    undefined field784_0x5456;
    undefined field785_0x5457;
    undefined field786_0x5458;
    undefined field787_0x5459;
    undefined field788_0x545a;
    undefined field789_0x545b;
    undefined field790_0x545c;
    undefined field791_0x545d;
    undefined field792_0x545e;
    undefined field793_0x545f;
    undefined field794_0x5460;
    undefined field795_0x5461;
    undefined field796_0x5462;
    undefined field797_0x5463;
    undefined field798_0x5464;
    undefined field799_0x5465;
    undefined field800_0x5466;
    undefined field801_0x5467;
    undefined field802_0x5468;
    undefined field803_0x5469;
    undefined field804_0x546a;
    undefined field805_0x546b;
    undefined field806_0x546c;
    undefined field807_0x546d;
    undefined field808_0x546e;
    undefined field809_0x546f;
    undefined field810_0x5470;
    undefined field811_0x5471;
    undefined field812_0x5472;
    undefined field813_0x5473;
    undefined field814_0x5474;
    undefined field815_0x5475;
    undefined field816_0x5476;
    undefined field817_0x5477;
    undefined field818_0x5478;
    undefined field819_0x5479;
    undefined field820_0x547a;
    undefined field821_0x547b;
    undefined field822_0x547c;
    undefined field823_0x547d;
    undefined field824_0x547e;
    undefined field825_0x547f;
    undefined field826_0x5480;
    undefined field827_0x5481;
    undefined field828_0x5482;
    undefined field829_0x5483;
    undefined field830_0x5484;
    undefined field831_0x5485;
    undefined field832_0x5486;
    undefined field833_0x5487;
    undefined field834_0x5488;
    undefined field835_0x5489;
    undefined field836_0x548a;
    undefined field837_0x548b;
    undefined field838_0x548c;
    undefined field839_0x548d;
    undefined field840_0x548e;
    undefined field841_0x548f;
    undefined field842_0x5490;
    undefined field843_0x5491;
    undefined field844_0x5492;
    undefined field845_0x5493;
    undefined field846_0x5494;
    undefined field847_0x5495;
    undefined field848_0x5496;
    undefined field849_0x5497;
    undefined field850_0x5498;
    undefined field851_0x5499;
    undefined field852_0x549a;
    undefined field853_0x549b;
    undefined field854_0x549c;
    undefined field855_0x549d;
    undefined field856_0x549e;
    undefined field857_0x549f;
    undefined field858_0x54a0;
    undefined field859_0x54a1;
    undefined field860_0x54a2;
    undefined field861_0x54a3;
    undefined field862_0x54a4;
    undefined field863_0x54a5;
    undefined field864_0x54a6;
    undefined field865_0x54a7;
    undefined field866_0x54a8;
    undefined field867_0x54a9;
    undefined field868_0x54aa;
    undefined field869_0x54ab;
    undefined field870_0x54ac;
    undefined field871_0x54ad;
    undefined field872_0x54ae;
    undefined field873_0x54af;
    undefined field874_0x54b0;
    undefined field875_0x54b1;
    undefined field876_0x54b2;
    undefined field877_0x54b3;
    undefined field878_0x54b4;
    undefined field879_0x54b5;
    undefined field880_0x54b6;
    undefined field881_0x54b7;
    undefined field882_0x54b8;
    undefined field883_0x54b9;
    undefined field884_0x54ba;
    undefined field885_0x54bb;
    undefined field886_0x54bc;
    undefined field887_0x54bd;
    undefined field888_0x54be;
    undefined field889_0x54bf;
    undefined field890_0x54c0;
    undefined field891_0x54c1;
    undefined field892_0x54c2;
    undefined field893_0x54c3;
    undefined field894_0x54c4;
    undefined field895_0x54c5;
    undefined field896_0x54c6;
    undefined field897_0x54c7;
    undefined field898_0x54c8;
    undefined field899_0x54c9;
    undefined field900_0x54ca;
    undefined field901_0x54cb;
    undefined field902_0x54cc;
    undefined field903_0x54cd;
    undefined field904_0x54ce;
    undefined field905_0x54cf;
    undefined field906_0x54d0;
    undefined field907_0x54d1;
    undefined field908_0x54d2;
    undefined field909_0x54d3;
    undefined field910_0x54d4;
    undefined field911_0x54d5;
    undefined field912_0x54d6;
    undefined field913_0x54d7;
    undefined field914_0x54d8;
    undefined field915_0x54d9;
    undefined field916_0x54da;
    undefined field917_0x54db;
    undefined field918_0x54dc;
    undefined field919_0x54dd;
    undefined field920_0x54de;
    undefined field921_0x54df;
    undefined field922_0x54e0;
    undefined field923_0x54e1;
    undefined field924_0x54e2;
    undefined field925_0x54e3;
    undefined field926_0x54e4;
    undefined field927_0x54e5;
    undefined field928_0x54e6;
    undefined field929_0x54e7;
    undefined field930_0x54e8;
    undefined field931_0x54e9;
    undefined field932_0x54ea;
    undefined field933_0x54eb;
    undefined field934_0x54ec;
    undefined field935_0x54ed;
    undefined field936_0x54ee;
    undefined field937_0x54ef;
    undefined field938_0x54f0;
    undefined field939_0x54f1;
    undefined field940_0x54f2;
    undefined field941_0x54f3;
    undefined field942_0x54f4;
    undefined field943_0x54f5;
    undefined field944_0x54f6;
    undefined field945_0x54f7;
    undefined field946_0x54f8;
    undefined field947_0x54f9;
    undefined field948_0x54fa;
    undefined field949_0x54fb;
    undefined field950_0x54fc;
    undefined field951_0x54fd;
    undefined field952_0x54fe;
    undefined field953_0x54ff;
    undefined field954_0x5500;
    undefined field955_0x5501;
    undefined field956_0x5502;
    undefined field957_0x5503;
    undefined field958_0x5504;
    undefined field959_0x5505;
    undefined field960_0x5506;
    undefined field961_0x5507;
    undefined field962_0x5508;
    undefined field963_0x5509;
    undefined field964_0x550a;
    undefined field965_0x550b;
    undefined field966_0x550c;
    undefined field967_0x550d;
    undefined field968_0x550e;
    undefined field969_0x550f;
    undefined field970_0x5510;
    undefined field971_0x5511;
    undefined field972_0x5512;
    undefined field973_0x5513;
    undefined field974_0x5514;
    undefined field975_0x5515;
    undefined field976_0x5516;
    undefined field977_0x5517;
    undefined field978_0x5518;
    undefined field979_0x5519;
    undefined field980_0x551a;
    undefined field981_0x551b;
    undefined field982_0x551c;
    undefined field983_0x551d;
    undefined field984_0x551e;
    undefined field985_0x551f;
    undefined field986_0x5520;
    undefined field987_0x5521;
    undefined field988_0x5522;
    undefined field989_0x5523;
    undefined field990_0x5524;
    undefined field991_0x5525;
    undefined field992_0x5526;
    undefined field993_0x5527;
    undefined field994_0x5528;
    undefined field995_0x5529;
    undefined field996_0x552a;
    undefined field997_0x552b;
    undefined field998_0x552c;
    undefined field999_0x552d;
    undefined field1000_0x552e;
    undefined field1001_0x552f;
    undefined field1002_0x5530;
    undefined field1003_0x5531;
    undefined field1004_0x5532;
    undefined field1005_0x5533;
    undefined field1006_0x5534;
    undefined field1007_0x5535;
    undefined field1008_0x5536;
    undefined field1009_0x5537;
    undefined field1010_0x5538;
    undefined field1011_0x5539;
    undefined field1012_0x553a;
    undefined field1013_0x553b;
    undefined field1014_0x553c;
    undefined field1015_0x553d;
    undefined field1016_0x553e;
    undefined field1017_0x553f;
    undefined field1018_0x5540;
    undefined field1019_0x5541;
    undefined field1020_0x5542;
    undefined field1021_0x5543;
    undefined field1022_0x5544;
    undefined field1023_0x5545;
    undefined field1024_0x5546;
    undefined field1025_0x5547;
    undefined field1026_0x5548;
    undefined field1027_0x5549;
    undefined field1028_0x554a;
    undefined field1029_0x554b;
    undefined field1030_0x554c;
    undefined field1031_0x554d;
    undefined field1032_0x554e;
    undefined field1033_0x554f;
    undefined field1034_0x5550;
    undefined field1035_0x5551;
    undefined field1036_0x5552;
    undefined field1037_0x5553;
    undefined field1038_0x5554;
    undefined field1039_0x5555;
    undefined field1040_0x5556;
    undefined field1041_0x5557;
    undefined field1042_0x5558;
    undefined field1043_0x5559;
    undefined field1044_0x555a;
    undefined field1045_0x555b;
    undefined field1046_0x555c;
    undefined field1047_0x555d;
    undefined field1048_0x555e;
    undefined field1049_0x555f;
    undefined field1050_0x5560;
    undefined field1051_0x5561;
    undefined field1052_0x5562;
    undefined field1053_0x5563;
    undefined field1054_0x5564;
    undefined field1055_0x5565;
    undefined field1056_0x5566;
    undefined field1057_0x5567;
    undefined field1058_0x5568;
    undefined field1059_0x5569;
    undefined field1060_0x556a;
    undefined field1061_0x556b;
    undefined field1062_0x556c;
    undefined field1063_0x556d;
    undefined field1064_0x556e;
    undefined field1065_0x556f;
    undefined field1066_0x5570;
    undefined field1067_0x5571;
    undefined field1068_0x5572;
    undefined field1069_0x5573;
    undefined field1070_0x5574;
    undefined field1071_0x5575;
    undefined field1072_0x5576;
    undefined field1073_0x5577;
    undefined field1074_0x5578;
    undefined field1075_0x5579;
    undefined field1076_0x557a;
    undefined field1077_0x557b;
    undefined field1078_0x557c;
    undefined field1079_0x557d;
    undefined field1080_0x557e;
    undefined field1081_0x557f;
    undefined field1082_0x5580;
    undefined field1083_0x5581;
    undefined field1084_0x5582;
    undefined field1085_0x5583;
    undefined field1086_0x5584;
    undefined field1087_0x5585;
    undefined field1088_0x5586;
    undefined field1089_0x5587;
    undefined field1090_0x5588;
    undefined field1091_0x5589;
    undefined field1092_0x558a;
    undefined field1093_0x558b;
    undefined field1094_0x558c;
    undefined field1095_0x558d;
    undefined field1096_0x558e;
    undefined field1097_0x558f;
    undefined field1098_0x5590;
    undefined field1099_0x5591;
    undefined field1100_0x5592;
    undefined field1101_0x5593;
    undefined field1102_0x5594;
    undefined field1103_0x5595;
    undefined field1104_0x5596;
    undefined field1105_0x5597;
    undefined field1106_0x5598;
    undefined field1107_0x5599;
    undefined field1108_0x559a;
    undefined field1109_0x559b;
    undefined field1110_0x559c;
    undefined field1111_0x559d;
    undefined field1112_0x559e;
    undefined field1113_0x559f;
    undefined field1114_0x55a0;
    undefined field1115_0x55a1;
    undefined field1116_0x55a2;
    undefined field1117_0x55a3;
    undefined field1118_0x55a4;
    undefined field1119_0x55a5;
    undefined field1120_0x55a6;
    undefined field1121_0x55a7;
    undefined field1122_0x55a8;
    undefined field1123_0x55a9;
    undefined field1124_0x55aa;
    undefined field1125_0x55ab;
    undefined field1126_0x55ac;
    undefined field1127_0x55ad;
    undefined field1128_0x55ae;
    undefined field1129_0x55af;
    undefined field1130_0x55b0;
    undefined field1131_0x55b1;
    undefined field1132_0x55b2;
    undefined field1133_0x55b3;
    undefined field1134_0x55b4;
    undefined field1135_0x55b5;
    undefined field1136_0x55b6;
    undefined field1137_0x55b7;
    undefined field1138_0x55b8;
    undefined field1139_0x55b9;
    undefined field1140_0x55ba;
    undefined field1141_0x55bb;
    undefined field1142_0x55bc;
    undefined field1143_0x55bd;
    undefined field1144_0x55be;
    undefined field1145_0x55bf;
    undefined field1146_0x55c0;
    undefined field1147_0x55c1;
    undefined field1148_0x55c2;
    undefined field1149_0x55c3;
    undefined field1150_0x55c4;
    undefined field1151_0x55c5;
    undefined field1152_0x55c6;
    undefined field1153_0x55c7;
    undefined field1154_0x55c8;
    undefined field1155_0x55c9;
    undefined field1156_0x55ca;
    undefined field1157_0x55cb;
    undefined field1158_0x55cc;
    undefined field1159_0x55cd;
    undefined field1160_0x55ce;
    undefined field1161_0x55cf;
    undefined field1162_0x55d0;
    undefined field1163_0x55d1;
    undefined field1164_0x55d2;
    undefined field1165_0x55d3;
    undefined field1166_0x55d4;
    undefined field1167_0x55d5;
    undefined field1168_0x55d6;
    undefined field1169_0x55d7;
    undefined field1170_0x55d8;
    undefined field1171_0x55d9;
    undefined field1172_0x55da;
    undefined field1173_0x55db;
    undefined field1174_0x55dc;
    undefined field1175_0x55dd;
    undefined field1176_0x55de;
    undefined field1177_0x55df;
    undefined field1178_0x55e0;
    undefined field1179_0x55e1;
    undefined field1180_0x55e2;
    undefined field1181_0x55e3;
    undefined field1182_0x55e4;
    undefined field1183_0x55e5;
    undefined field1184_0x55e6;
    undefined field1185_0x55e7;
    undefined field1186_0x55e8;
    undefined field1187_0x55e9;
    undefined field1188_0x55ea;
    undefined field1189_0x55eb;
    undefined field1190_0x55ec;
    undefined field1191_0x55ed;
    undefined field1192_0x55ee;
    undefined field1193_0x55ef;
    undefined field1194_0x55f0;
    undefined field1195_0x55f1;
    undefined field1196_0x55f2;
    undefined field1197_0x55f3;
    undefined field1198_0x55f4;
    undefined field1199_0x55f5;
    undefined field1200_0x55f6;
    undefined field1201_0x55f7;
    undefined field1202_0x55f8;
    undefined field1203_0x55f9;
    undefined field1204_0x55fa;
    undefined field1205_0x55fb;
    undefined field1206_0x55fc;
    undefined field1207_0x55fd;
    undefined field1208_0x55fe;
    undefined field1209_0x55ff;
    undefined field1210_0x5600;
    undefined field1211_0x5601;
    undefined field1212_0x5602;
    undefined field1213_0x5603;
    undefined field1214_0x5604;
    undefined field1215_0x5605;
    undefined field1216_0x5606;
    undefined field1217_0x5607;
    undefined field1218_0x5608;
    undefined field1219_0x5609;
    undefined field1220_0x560a;
    undefined field1221_0x560b;
    undefined field1222_0x560c;
    undefined field1223_0x560d;
    undefined field1224_0x560e;
    undefined field1225_0x560f;
    undefined field1226_0x5610;
    undefined field1227_0x5611;
    undefined field1228_0x5612;
    undefined field1229_0x5613;
    undefined field1230_0x5614;
    undefined field1231_0x5615;
    undefined field1232_0x5616;
    undefined field1233_0x5617;
    undefined field1234_0x5618;
    undefined field1235_0x5619;
    undefined field1236_0x561a;
    undefined field1237_0x561b;
    undefined field1238_0x561c;
    undefined field1239_0x561d;
    undefined field1240_0x561e;
    undefined field1241_0x561f;
    undefined field1242_0x5620;
    undefined field1243_0x5621;
    undefined field1244_0x5622;
    undefined field1245_0x5623;
    undefined field1246_0x5624;
    undefined field1247_0x5625;
    undefined field1248_0x5626;
    undefined field1249_0x5627;
    undefined field1250_0x5628;
    undefined field1251_0x5629;
    undefined field1252_0x562a;
    undefined field1253_0x562b;
    undefined field1254_0x562c;
    undefined field1255_0x562d;
    undefined field1256_0x562e;
    undefined field1257_0x562f;
    undefined field1258_0x5630;
    undefined field1259_0x5631;
    undefined field1260_0x5632;
    undefined field1261_0x5633;
    undefined field1262_0x5634;
    undefined field1263_0x5635;
    undefined field1264_0x5636;
    undefined field1265_0x5637;
    undefined field1266_0x5638;
    undefined field1267_0x5639;
    undefined field1268_0x563a;
    undefined field1269_0x563b;
    undefined field1270_0x563c;
    undefined field1271_0x563d;
    undefined field1272_0x563e;
    undefined field1273_0x563f;
    undefined field1274_0x5640;
    undefined field1275_0x5641;
    undefined field1276_0x5642;
    undefined field1277_0x5643;
    undefined field1278_0x5644;
    undefined field1279_0x5645;
    undefined field1280_0x5646;
    undefined field1281_0x5647;
    undefined field1282_0x5648;
    undefined field1283_0x5649;
    undefined field1284_0x564a;
    undefined field1285_0x564b;
    undefined field1286_0x564c;
    undefined field1287_0x564d;
    undefined field1288_0x564e;
    undefined field1289_0x564f;
    undefined field1290_0x5650;
    undefined field1291_0x5651;
    undefined field1292_0x5652;
    undefined field1293_0x5653;
    undefined field1294_0x5654;
    undefined field1295_0x5655;
    undefined field1296_0x5656;
    undefined field1297_0x5657;
    undefined field1298_0x5658;
    undefined field1299_0x5659;
    undefined field1300_0x565a;
    undefined field1301_0x565b;
    undefined field1302_0x565c;
    undefined field1303_0x565d;
    undefined field1304_0x565e;
    undefined field1305_0x565f;
    undefined field1306_0x5660;
    undefined field1307_0x5661;
    undefined field1308_0x5662;
    undefined field1309_0x5663;
    undefined field1310_0x5664;
    undefined field1311_0x5665;
    undefined field1312_0x5666;
    undefined field1313_0x5667;
    undefined field1314_0x5668;
    undefined field1315_0x5669;
    undefined field1316_0x566a;
    undefined field1317_0x566b;
    undefined field1318_0x566c;
    undefined field1319_0x566d;
    undefined field1320_0x566e;
    undefined field1321_0x566f;
    char date[9];
    undefined field1323_0x5679;
    undefined field1324_0x567a;
    undefined field1325_0x567b;
    undefined field1326_0x567c;
    undefined field1327_0x567d;
    undefined field1328_0x567e;
    undefined field1329_0x567f;
    undefined field1330_0x5680;
    undefined field1331_0x5681;
    undefined field1332_0x5682;
    undefined field1333_0x5683;
    uint score;
    undefined field1335_0x5688;
    undefined field1336_0x5689;
    undefined field1337_0x568a;
    undefined field1338_0x568b;
    undefined field1339_0x568c;
    undefined field1340_0x568d;
    undefined field1341_0x568e;
    undefined field1342_0x568f;
    undefined field1343_0x5690;
    undefined field1344_0x5691;
    undefined field1345_0x5692;
    undefined field1346_0x5693;
    undefined field1347_0x5694;
    undefined field1348_0x5695;
    undefined field1349_0x5696;
    undefined field1350_0x5697;
    undefined field1351_0x5698;
    undefined field1352_0x5699;
    undefined field1353_0x569a;
    undefined field1354_0x569b;
    undefined field1355_0x569c;
    undefined field1356_0x569d;
    undefined field1357_0x569e;
    undefined field1358_0x569f;
    undefined field1359_0x56a0;
    undefined field1360_0x56a1;
    undefined field1361_0x56a2;
    undefined field1362_0x56a3;
    undefined field1363_0x56a4;
    undefined field1364_0x56a5;
    undefined field1365_0x56a6;
    undefined field1366_0x56a7;
    undefined field1367_0x56a8;
    undefined field1368_0x56a9;
    undefined field1369_0x56aa;
    undefined field1370_0x56ab;
    undefined field1371_0x56ac;
    undefined field1372_0x56ad;
    undefined field1373_0x56ae;
    undefined field1374_0x56af;
};

struct ScoreDat {
    byte xorseed[2];
    ushort csum;
    byte unk[4];
    uint data_offset;
    struct ResultScreenUnk3ab0 *unk2;
    uint file_length;
};

typedef struct MainMenu MainMenu, *PMainMenu;

typedef enum GameState {
    STATE_STARTUP=0,
    STATE_PRE_INPUT=1 /* screen before you press anything */,
    STATE_MAIN_MENU=2,
    STATE_OPTIONS=3,
    STATE_QUIT=4,
    STATE_KEYCONFIG=5,
    STATE_DIFFICULTY_LOAD=6,
    STATE_DIFFICULTY_SELECT=7,
    STATE_CHARACTER_LOAD=8,
    STATE_CHARACTER_SELECT=9,
    STATE_SCORE=10,
    STATE_SHOT_SELECT=11,
    STATE_REPLAY_LOAD=12,
    STATE_REPLAY_ANIM=13,
    STATE_REPLAY_UNLOAD=14,
    STATE_REPLAY_SELECT=15,
    STATE_MUSIC_ROOM=16,
    STATE_PRACTICE_LVL_SELECT=17
} GameState;

struct MainMenu {
    struct AnmVm vmList[122];
    uint cursor;
    undefined padding[64];
    uint unk_81e4;
    int chosenReplay;
    int replayFilesNum;
    enum GameState gameState;
    int stateTimer;
    int idleFrames;
    uint unk_81fc;
    D3DCOLOR maybe_menu_text_color;
    D3DCOLOR color2;
    D3DCOLOR color1;
    uint unk_820c;
    uint isActive; /* 60 when menu ready, 0 otherwise */
    uint wasActive;
    undefined field16_0x8218[4];
    struct ControllerMapping controlMapping;
    undefined field18_0x822e[2];
    byte colorMode16bit; /* Created by retype action */
    bool windowed;
    byte frameskipConfig; /* Created by retype action */
    undefined field22_0x8233;
    struct ChainElem *chain_calc;
    struct ChainElem *chain_draw;
    char replayFilePaths[60][512];
    char replayFileName[60][8];
    struct ReplayData replayFileData[60]; /* Created by retype action */
    struct ReplayData *currentReplay;
    int timeRelatedArrSize;
    float timeRelatedArr[16];
    undefined field31_0x10f24;
    undefined field32_0x10f25;
    undefined field33_0x10f26;
    undefined field34_0x10f27;
    uint unk_10f28;
    uint unk_10f2c;
    uint lastFrameTime;
};

typedef struct ReplayManager ReplayManager, *PReplayManager;

struct ReplayManager {
    uint frame_id;
    struct ReplayData *data;
    int is_demo;
    char *replay_file;
    undefined field4_0x10;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    undefined field8_0x14;
    undefined field9_0x15;
    undefined field10_0x16;
    undefined field11_0x17;
    undefined field12_0x18;
    undefined field13_0x19;
    undefined field14_0x1a;
    undefined field15_0x1b;
    undefined field16_0x1c;
    undefined field17_0x1d;
    undefined field18_0x1e;
    undefined field19_0x1f;
    undefined field20_0x20;
    undefined field21_0x21;
    undefined field22_0x22;
    undefined field23_0x23;
    undefined field24_0x24;
    undefined field25_0x25;
    undefined field26_0x26;
    undefined field27_0x27;
    undefined field28_0x28;
    undefined field29_0x29;
    undefined field30_0x2a;
    undefined field31_0x2b;
    undefined field32_0x2c;
    undefined field33_0x2d;
    undefined field34_0x2e;
    undefined field35_0x2f;
    undefined field36_0x30;
    undefined field37_0x31;
    undefined field38_0x32;
    undefined field39_0x33;
    undefined field40_0x34;
    undefined field41_0x35;
    undefined field42_0x36;
    undefined field43_0x37;
    undefined field44_0x38;
    undefined field45_0x39;
    undefined field46_0x3a;
    undefined field47_0x3b;
    undefined field48_0x3c;
    undefined field49_0x3d;
    undefined field50_0x3e;
    undefined field51_0x3f;
    undefined field52_0x40;
    undefined field53_0x41;
    undefined field54_0x42;
    undefined field55_0x43;
    ushort field56_0x44;
    undefined field57_0x46;
    undefined field58_0x47;
    struct ReplayDataInput *replay_inputs;
    struct ReplayDataInput *replayInputAddresses[7];
    struct ChainElem *calc_chain;
    struct ChainElem *draw_chain;
    struct ChainElem *demo_calc_chain;
};


/* WARNING! conflicting data type names: /th06/ItemManager - /ItemManager */

typedef struct GameErrorContext GameErrorContext, *PGameErrorContext;

struct GameErrorContext {
    char m_Buffer[2048];
    char *m_BufferEnd;
    bool m_ShowMessageBox;
};

typedef struct DifficultyInfo DifficultyInfo, *PDifficultyInfo;

struct DifficultyInfo {
    uint rank;
    uint min_rank;
    uint max_rank;
};

typedef struct UnknownEffectsVars476298 UnknownEffectsVars476298, *PUnknownEffectsVars476298;

struct UnknownEffectsVars476298 {
    int anmFileIndex;
    int (*update_callback)(struct Effect *);
};

typedef struct Supervisor Supervisor, *PSupervisor;

typedef struct GameConfiguration GameConfiguration, *PGameConfiguration;

typedef enum MusicMode {
    OFF=0,
    WAV=1,
    MIDI=2
} MusicMode;

typedef enum DefaultDifficulty {
    EASY=0,
    NORMAL=1,
    HARD=2,
    LUNATIC=3
} DefaultDifficulty;

struct GameConfiguration {
    struct ControllerMapping controllerMapping;
    undefined field1_0x12;
    undefined field2_0x13;
    int version; /* 0xAABB where AA is major and BB is minor */
    byte lifeCount;
    byte bombCount;
    byte colorMode16bit;
    enum MusicMode musicMode; /* 0 = off, 1 = wav, 2 = midi */
    byte playSounds; /* 0 = off, 1 = on */
    enum DefaultDifficulty defaultDifficulty;
    bool windowed;
    byte frameskipConfig; /* 0 = fullspeed, 1 = 1/2 speed, 2 = 1/4 speed */
    ushort padAxisX;
    ushort padAxisY;
    undefined field14_0x24;
    undefined field15_0x25;
    undefined field16_0x26;
    undefined field17_0x27;
    undefined field18_0x28;
    undefined field19_0x29;
    undefined field20_0x2a;
    undefined field21_0x2b;
    undefined field22_0x2c;
    undefined field23_0x2d;
    undefined field24_0x2e;
    undefined field25_0x2f;
    undefined field26_0x30;
    undefined field27_0x31;
    undefined field28_0x32;
    undefined field29_0x33;
    uint opts;
};

struct Supervisor {
    HINSTANCE hInstance;
    struct IDirect3D8 *d3dIface;
    struct IDirect3DDevice8 *d3dDevice;
    struct IDirectInput8A *directInput;
    LPDIRECTINPUTDEVICE8A keyboard;
    LPDIRECTINPUTDEVICE8A controller;
    struct DIDEVCAPS controllerCaps;
    HWND hwndGameWindow;
    D3DMATRIX viewMatrix; /* Created by retype action */
    D3DMATRIX projectionMatrix;
    D3DVIEWPORT8 viewport;
    D3DPRESENT_PARAMETERS presentParameters;
    struct GameConfiguration cfg;
    undefined field13_0x14c;
    undefined field14_0x14d;
    undefined field15_0x14e;
    undefined field16_0x14f;
    undefined field17_0x150;
    undefined field18_0x151;
    undefined field19_0x152;
    undefined field20_0x153;
    undefined field21_0x154;
    undefined field22_0x155;
    undefined field23_0x156;
    undefined field24_0x157;
    undefined field25_0x158;
    undefined field26_0x159;
    undefined field27_0x15a;
    undefined field28_0x15b;
    undefined field29_0x15c;
    undefined field30_0x15d;
    undefined field31_0x15e;
    undefined field32_0x15f;
    undefined field33_0x160;
    undefined field34_0x161;
    undefined field35_0x162;
    undefined field36_0x163;
    byte lifeCount;
    byte bombCount;
    undefined field39_0x166;
    undefined field40_0x167;
    undefined field41_0x168;
    undefined field42_0x169;
    undefined field43_0x16a;
    undefined field44_0x16b;
    undefined field45_0x16c;
    undefined field46_0x16d;
    undefined field47_0x16e;
    undefined field48_0x16f;
    undefined field49_0x170;
    undefined field50_0x171;
    undefined field51_0x172;
    undefined field52_0x173;
    undefined field53_0x174;
    undefined field54_0x175;
    undefined field55_0x176;
    undefined field56_0x177;
    undefined field57_0x178;
    undefined field58_0x179;
    undefined field59_0x17a;
    undefined field60_0x17b;
    undefined field61_0x17c;
    undefined field62_0x17d;
    undefined field63_0x17e;
    undefined field64_0x17f;
    undefined field65_0x180;
    undefined field66_0x181;
    undefined field67_0x182;
    undefined field68_0x183;
    int calcCount;
    int wantedState;
    int curState;
    int wantedState2;
    int unk194;
    int unk198;
    int isInEnding;
    int vsyncEnabled;
    uint lastFrameTime;
    float effectiveFramerateMultiplier;
    float framerateMultiplier;
    struct MidiOutput *midi_output;
    float unk_frame_related1;
    float unk_frames_related2;
    struct Pbg3Archive *pbg3Archives[16];
    struct Pbg3FileName pbg3FileName[16];
    byte hasD3dHardwareVertexProcessing;
    byte lockableBackbuffer;
    byte colorMode16Bits;
    undefined field88_0x3ff;
    uint startup_time_for_menu_music;
    D3DCAPS8 d3dCaps;
};

typedef enum GameConfigurationRenderOpts {
    USE_D3D_HW_TEXTURE_BLENDING=0,
    DONT_USE_VERTEX_BUF=1,
    FORCE_16BIT_COLOR_MODE=2,
    CLEAR_BACKBUFFER_ON_REFRESH=3,
    DISPLAY_MINIMUM_GRAPHICS=4,
    SUPPRESS_USE_OF_GOROUD_SHADING=5,
    TURN_OFF_DEPTH_TEST=6,
    FORCE_60FPS=7,
    NO_COLOR_COMP=8,
    REFERENCE_RASTERIZER_MODE=9,
    DONT_USE_FOG=10,
    NO_DIRECTINPUT_PAD=11
} GameConfigurationRenderOpts;

typedef struct GameManager GameManager, *PGameManager;

typedef struct Catk Catk, *PCatk;

typedef struct Clrd Clrd, *PClrd;

typedef struct Pscr Pscr, *PPscr;

struct Pscr {
    struct Th6k base;
    int score;
    byte character;
    byte difficulty;
    byte stage;
};

struct Clrd {
    struct Th6k base;
    byte difficulty_cleared_with_retries[5];
    byte difficulty_cleared_without_retries[5];
    byte character_shottype;
    undefined field4_0x17;
};

struct Catk {
    struct Th6k base;
    uint unk_c;
    ushort idx;
    byte name_csum; /* Created by retype action */
    byte unk_13;
    uint unk_14;
    byte name[32];
    uint num_attempts;
    short num_successes;
    short unk_3e;
};

struct GameManager {
    uint gui_score;
    uint score;
    undefined4 field2_0x8;
    uint high_score;
    enum Difficulty difficulty;
    uint graze_in_stage;
    uint unk_0x18;
    uint unk_0x1c;
    uint unk_0x20;
    uint unk_0x24;
    uint unk_0x28;
    uint unk_0x2c;
    struct Catk catk[64];
    struct Clrd clrd[4];
    struct Pscr pscr[96];
    ushort current_power;
    undefined field16_0x1812;
    undefined field17_0x1813;
    ushort point_items_collected_in_stage;
    undefined field19_0x1816;
    undefined field20_0x1817;
    byte num_retries;
    byte power_item_count_for_score;
    byte lives_remaining;
    byte bombs_remaining;
    byte field25_0x181c;
    byte character;
    byte shottype;
    byte is_in_game_menu;
    byte is_in_retry_menu;
    byte is_in_menu;
    byte unk_1822;
    byte unk_1823;
    byte demo_mode;
    byte unk_1825;
    byte unk_1826;
    byte unk_1827;
    int unk_1828;
    char replay_file[256];
    undefined field39_0x192c[256];
    int unk_1a2c;
    uint unk_1a30;
    int current_stage;
    undefined4 field43_0x1a38;
    struct D3DXVECTOR2 arcade_region_top_left_pos;
    struct D3DXVECTOR2 arcade_region_size;
    float unk_1a4c;
    float unk_1a50;
    float unk_1a54;
    float unk_1a58;
    int unk_1a5c;
    D3DXVECTOR3 stage_camera_facing_dir;
    uint counat;
    int rank;
    int max_rank;
    int min_rank;
    int subrank;
};

typedef enum RenderResult {
    RENDER_RESULT_KEEP_RUNNING=0,
    RENDER_RESULT_EXIT_SUCCESS=1,
    RENDER_RESULT_EXIT_ERROR=2
} RenderResult;

typedef enum SupervisorState {
    SUPERVISOR_STATE_INIT=0,
    SUPERVISOR_STATE_MAINMENU=1,
    SUPERVISOR_STATE_GAMEMANAGER=2,
    SUPERVISOR_STATE_GAMEMANAGER_REINIT=3,
    SUPERVISOR_STATE_EXITSUCCESS=4,
    SUPERVISOR_STATE_EXITERROR=5,
    SUPERVISOR_STATE_RESULTSCREEN=6,
    SUPERVISOR_STATE_RESULTSCREEN_FROMGAME=7,
    SUPERVISOR_STATE_MAINMENU_REPLAY=8,
    SUPERVISOR_STATE_MUSICROOM=9,
    SUPERVISOR_STATE_ENDING=10
} SupervisorState;

typedef struct EclManager EclManager, *PEclManager;

struct EclManager { /* Size is unknown */
    void *ecl_file;
    void *sub_table;
    void *timeline;
};

typedef enum SpellcardState {
    NOT_RUNNING=0,
    RUNNING=1,
    RAN_FOR_60_FRAMES=2
} SpellcardState;

typedef struct Pbg3Archive *FileAbstractionToPbgArchive;

typedef struct Pbg3Archive *test.conflict;

typedef enum EclInsn {
    ECL_INSNNOP=0,
    ECL_INSN_NOP=0,
    ECL_INSNENEMY_DELETE=1,
    ECL_INSN_ENEMY_DELETE=1,
    ECL_INSNJUMP=2,
    ECL_INSN_JUMP=2,
    ECL_INSNJUMP_DEC=3,
    ECL_INSN_JUMP_DEC=3,
    ECL_INSNSET_INT=4,
    ECL_INSN_SET_INT=4,
    ECL_INSNSET_FLOAT=5,
    ECL_INSN_SET_FLOAT=5,
    ECL_INSNSET_INT_RAND_BOUND=6,
    ECL_INSN_SET_INT_RAND_BOUND=6,
    ECL_INSNSET_INT_RAND_BOUND_MIN=7,
    ECL_INSN_SET_INT_RAND_BOUND_MIN=7,
    ECL_INSNSET_FLOAT_RAND_BOUND=8,
    ECL_INSN_SET_FLOAT_RAND_BOUND=8,
    ECL_INSNSET_FLOAT_RAND_BOUND_MIN=9,
    ECL_INSN_SET_FLOAT_RAND_BOUND_MIN=9,
    ECL_INSNSET_VAR_SELF_X=10,
    ECL_INSN_SET_VAR_SELF_X=10,
    ECL_INSNSET_VAR_SELF_Y=11,
    ECL_INSN_SET_VAR_SELF_Y=11,
    ECL_INSNSET_VAR_SELF_Z=12,
    ECL_INSN_SET_VAR_SELF_Z=12,
    ECL_INSNMATH_INT_ADD=13,
    ECL_INSN_MATH_INT_ADD=13,
    ECL_INSNMATH_INT_SUB=14,
    ECL_INSN_MATH_INT_SUB=14,
    ECL_INSNMATH_INT_MUL=15,
    ECL_INSN_MATH_INT_MUL=15,
    ECL_INSNMATH_INT_DIV=16,
    ECL_INSN_MATH_INT_DIV=16,
    ECL_INSNMATH_INT_MOD=17,
    ECL_INSN_MATH_INT_MOD=17,
    ECL_INSNMATH_INC=18,
    ECL_INSN_MATH_INC=18,
    ECL_INSNMATH_DEC=19,
    ECL_INSN_MATH_DEC=19,
    ECL_INSNMATH_FLOAT_ADD=20,
    ECL_INSN_MATH_FLOAT_ADD=20,
    ECL_INSNMATH_FLOAT_SUB=21,
    ECL_INSN_MATH_FLOAT_SUB=21,
    ECL_INSNMATH_FLOAT_MUL=22,
    ECL_INSN_MATH_FLOAT_MUL=22,
    ECL_INSNMATH_FLOAT_DIV=23,
    ECL_INSN_MATH_FLOAT_DIV=23,
    ECL_INSNMATH_FLOAT_MOD=24,
    ECL_INSN_MATH_FLOAT_MOD=24,
    ECL_INSNMATH_ATAN2=25,
    ECL_INSN_MATH_ATAN2=25,
    ECL_INSNMATH_NORM_ANGLE=26,
    ECL_INSN_MATH_NORM_ANGLE=26,
    ECL_INSNCMP_INT=27,
    ECL_INSN_CMP_INT=27,
    ECL_INSNCMP_FLOAT=28,
    ECL_INSN_CMP_FLOAT=28,
    ECL_INSNJUMP_LSS=29,
    ECL_INSN_JUMP_LSS=29,
    ECL_INSNJUMP_LEQ=30,
    ECL_INSN_JUMP_LEQ=30,
    ECL_INSNJUMP_EQU=31,
    ECL_INSN_JUMP_EQU=31,
    ECL_INSNJUMP_GRE=32,
    ECL_INSN_JUMP_GRE=32,
    ECL_INSNJUMP_GEQ=33,
    ECL_INSN_JUMP_GEQ=33,
    ECL_INSNJUMP_NEQ=34,
    ECL_INSN_JUMP_NEQ=34,
    ECL_INSNCALL=35,
    ECL_INSN_CALL=35,
    ECL_INSNRET=36,
    ECL_INSN_RET=36,
    ECL_INSNCALL_LSS=37,
    ECL_INSN_CALL_LSS=37,
    ECL_INSNCALL_LEQ=38,
    ECL_INSN_CALL_LEQ=38,
    ECL_INSNCALL_EQU=39,
    ECL_INSN_CALL_EQU=39,
    ECL_INSNCALL_GRE=40,
    ECL_INSN_CALL_GRE=40,
    ECL_INSNCALL_GEQ=41,
    ECL_INSN_CALL_GEQ=41,
    ECL_INSNCALL_NEQ=42,
    ECL_INSN_CALL_NEQ=42,
    ECL_INSNMOVE_POSITION=43,
    ECL_INSN_MOVE_POSITION=43,
    ECL_INSNMOVE_AXIS_VELOCITY=44,
    ECL_INSN_MOVE_AXIS_VELOCITY=44,
    ECL_INSNMOVE_VELOCITY=45,
    ECL_INSN_MOVE_VELOCITY=45,
    ECL_INSNMOVE_ANGULAR_VELOCITY=46,
    ECL_INSN_MOVE_ANGULAR_VELOCITY=46,
    ECL_INSNMOVE_SPEED=47,
    ECL_INSN_MOVE_SPEED=47,
    ECL_INSNMOVE_ACCELERATION=48,
    ECL_INSN_MOVE_ACCELERATION=48,
    ECL_INSNMOVE_RAND=49,
    ECL_INSN_MOVE_RAND=49,
    ECL_INSNMOVE_RAND_IN_BOUNDS=50,
    ECL_INSN_MOVE_RAND_IN_BOUNDS=50,
    ECL_INSNMOVE_AT_PLAYER=51,
    ECL_INSN_MOVE_AT_PLAYER=51,
    ECL_INSNMOVE_DIR_TIME_DECELERATE=52,
    ECL_INSN_MOVE_DIR_TIME_DECELERATE=52,
    ECL_INSNMOVE_DIR_TIME_DECELERATE_FAST=53,
    ECL_INSN_MOVE_DIR_TIME_DECELERATE_FAST=53,
    ECL_INSNMOVE_DIR_TIME_ACCELERATE=54,
    ECL_INSN_MOVE_DIR_TIME_ACCELERATE=54,
    ECL_INSNMOVE_DIR_TIME_ACCELERATE_FAST=55,
    ECL_INSN_MOVE_DIR_TIME_ACCELERATE_FAST=55,
    ECL_INSNMOVE_POSITION_TIME_LINEAR=56,
    ECL_INSN_MOVE_POSITION_TIME_LINEAR=56,
    ECL_INSNMOVE_POSITION_TIME_DECELERATE=57,
    ECL_INSN_MOVE_POSITION_TIME_DECELERATE=57,
    ECL_INSNMOVE_POSITION_TIME_DECELERATE_FAST=58,
    ECL_INSN_MOVE_POSITION_TIME_DECELERATE_FAST=58,
    ECL_INSNMOVE_POSITION_TIME_ACCELERATE=59,
    ECL_INSN_MOVE_POSITION_TIME_ACCELERATE=59,
    ECL_INSNMOVE_POSITION_TIME_ACCELERATE_FAST=60,
    ECL_INSN_MOVE_POSITION_TIME_ACCELERATE_FAST=60,
    ECL_INSNMOVE_TIME_DECELERATE=61,
    ECL_INSN_MOVE_TIME_DECELERATE=61,
    ECL_INSNMOVE_TIME_DECELERATE_FAST=62,
    ECL_INSN_MOVE_TIME_DECELERATE_FAST=62,
    ECL_INSNMOVE_TIME_ACCELERATE=63,
    ECL_INSN_MOVE_TIME_ACCELERATE=63,
    ECL_INSNMOVE_TIME_ACCELERATE_FAST=64,
    ECL_INSN_MOVE_TIME_ACCELERATE_FAST=64,
    ECL_INSNMOVE_BOUNDS_SET=65,
    ECL_INSN_MOVE_BOUNDS_SET=65,
    ECL_INSNMOVE_BOUNDS_DISABLE=66,
    ECL_INSN_MOVE_BOUNDS_DISABLE=66,
    ECL_INSNBULLET_FAN_AIMED=67,
    ECL_INSN_BULLET_FAN_AIMED=67,
    ECL_INSNBULLET_FAN=68,
    ECL_INSN_BULLET_FAN=68,
    ECL_INSNBULLET_CIRCLE_AIMED=69,
    ECL_INSN_BULLET_CIRCLE_AIMED=69,
    ECL_INSNBULLET_CIRCLE=70,
    ECL_INSN_BULLET_CIRCLE=70,
    ECL_INSNBULLET_OFFSET_CIRCLE_AIMED=71,
    ECL_INSN_BULLET_OFFSET_CIRCLE_AIMED=71,
    ECL_INSNBULLET_OFFSET_CIRCLE=72,
    ECL_INSN_BULLET_OFFSET_CIRCLE=72,
    ECL_INSNBULLET_RANDOM_ANGLE=73,
    ECL_INSN_BULLET_RANDOM_ANGLE=73,
    ECL_INSNBULLET_RANDOM_SPEED=74,
    ECL_INSN_BULLET_RANDOM_SPEED=74,
    ECL_INSNBULLET_RANDOM=75,
    ECL_INSN_BULLET_RANDOM=75,
    ECL_INSNSHOOT_INTERVAL=76,
    ECL_INSN_SHOOT_INTERVAL=76,
    ECL_INSNSHOOT_INTERVAL_DELAYED=77,
    ECL_INSN_SHOOT_INTERVAL_DELAYED=77,
    ECL_INSNSHOOT_DISABLE=78,
    ECL_INSN_SHOOT_DISABLE=78,
    ECL_INSNSHOOT_ENABLE=79,
    ECL_INSN_SHOOT_ENABLE=79,
    ECL_INSNSHOOT_NOW=80,
    ECL_INSN_SHOOT_NOW=80,
    ECL_INSNSHOOT_OFFSET=81,
    ECL_INSN_SHOOT_OFFSET=81,
    ECL_INSNBULLET_EFFECTS=82,
    ECL_INSN_BULLET_EFFECTS=82,
    ECL_INSNBULLET_CANCEL=83,
    ECL_INSN_BULLET_CANCEL=83,
    ECL_INSNBULLET_SOUND=84,
    ECL_INSN_BULLET_SOUND=84,
    ECL_INSNLASER_CREATE=85,
    ECL_INSN_LASER_CREATE=85,
    ECL_INSNLASER_CREATE_AIMED=86,
    ECL_INSN_LASER_CREATE_AIMED=86,
    ECL_INSNLASER_INDEX=87,
    ECL_INSN_LASER_INDEX=87,
    ECL_INSNLASER_ROTATE=88,
    ECL_INSN_LASER_ROTATE=88,
    ECL_INSNLASER_ROTATE_FROM_PLAYER=89,
    ECL_INSN_LASER_ROTATE_FROM_PLAYER=89,
    ECL_INSNLASER_OFFSET=90,
    ECL_INSN_LASER_OFFSET=90,
    ECL_INSNLASER_TEST=91,
    ECL_INSN_LASER_TEST=91,
    ECL_INSNLASER_CANCEL=92,
    ECL_INSN_LASER_CANCEL=92,
    ECL_INSNSPELLCARD_START=93,
    ECL_INSN_SPELLCARD_START=93,
    ECL_INSNSPELLCARD_END=94,
    ECL_INSN_SPELLCARD_END=94,
    ECL_INSNENEMY_CREATE=95,
    ECL_INSN_ENEMY_CREATE=95,
    ECL_INSNENEMY_KILL_ALL=96,
    ECL_INSN_ENEMY_KILL_ALL=96,
    ECL_INSNANM_SET_MAIN=97,
    ECL_INSN_ANM_SET_MAIN=97,
    ECL_INSNANM_SET_POSES=98,
    ECL_INSN_ANM_SET_POSES=98,
    ECL_INSNANM_SET_SLOT=99,
    ECL_INSN_ANM_SET_SLOT=99,
    ECL_INSNANM_DEATH_EFFECTS=100,
    ECL_INSN_ANM_DEATH_EFFECTS=100,
    ECL_INSNBOSS_SET=101,
    ECL_INSN_BOSS_SET=101,
    ECL_INSNSPELLCARD_EFFECT=102,
    ECL_INSN_SPELLCARD_EFFECT=102,
    ECL_INSNENEMY_SET_HITBOX=103,
    ECL_INSN_ENEMY_SET_HITBOX=103,
    ECL_INSNENEMY_FLAG_COLLISION=104,
    ECL_INSN_ENEMY_FLAG_COLLISION=104,
    ECL_INSNENEMY_FLAG_CAN_TAKE_DAMAGE=105,
    ECL_INSN_ENEMY_FLAG_CAN_TAKE_DAMAGE=105,
    ECL_INSNEFFECT_SOUND=106,
    ECL_INSN_EFFECT_SOUND=106,
    ECL_INSNENEMY_FLAG_DEATH=107,
    ECL_INSN_ENEMY_FLAG_DEATH=107,
    ECL_INSNDEATH_CALLBACK_SUB=108,
    ECL_INSN_DEATH_CALLBACK_SUB=108,
    ECL_INSNENEMY_INTERRUPT_SET=109,
    ECL_INSN_ENEMY_INTERRUPT_SET=109,
    ECL_INSNENEMY_INTERRUPT=110,
    ECL_INSN_ENEMY_INTERRUPT=110,
    ECL_INSNENEMY_LIFE_SET=111,
    ECL_INSN_ENEMY_LIFE_SET=111,
    ECL_INSNBOSS_TIMER_SET=112,
    ECL_INSN_BOSS_TIMER_SET=112,
    ECL_INSNLIFE_CALLBACK_THRESHOLD=113,
    ECL_INSN_LIFE_CALLBACK_THRESHOLD=113,
    ECL_INSNLIFE_CALLBACK_SUB=114,
    ECL_INSN_LIFE_CALLBACK_SUB=114,
    ECL_INSNTIMER_CALLBACK_THRESHOLD=115,
    ECL_INSN_TIMER_CALLBACK_THRESHOLD=115,
    ECL_INSNTIMER_CALLBACK_SUB=116,
    ECL_INSN_TIMER_CALLBACK_SUB=116,
    ECL_INSNENEMY_FLAG_INTERACTABLE=117,
    ECL_INSN_ENEMY_FLAG_INTERACTABLE=117,
    ECL_INSNEFFECT_PARTICLE=118,
    ECL_INSN_EFFECT_PARTICLE=118,
    ECL_INSNDROP_ITEMS=119,
    ECL_INSN_DROP_ITEMS=119,
    ECL_INSNANM_FLAG_ROTATION=120,
    ECL_INSN_ANM_FLAG_ROTATION=120,
    ECL_INSNEX_INS_CALL=121,
    ECL_INSN_EX_INS_CALL=121,
    ECL_INSNEX_INS_REPEAT=122,
    ECL_INSN_EX_INS_REPEAT=122,
    ECL_INSNTIME_SET=123,
    ECL_INSN_TIME_SET=123,
    ECL_INSNDROP_ITEM_ID=124,
    ECL_INSN_DROP_ITEM_ID=124,
    ECL_INSNSTD_UNPAUSE=125,
    ECL_INSN_STD_UNPAUSE=125,
    ECL_INSNBOSS_SET_LIFE_COUNT=126,
    ECL_INSN_BOSS_SET_LIFE_COUNT=126,
    ECL_INSNDEBUG_WATCH=127,
    ECL_INSN_DEBUG_WATCH=127,
    ECL_INSNANM_INTERRUPT_MAIN=128,
    ECL_INSN_ANM_INTERRUPT_MAIN=128,
    ECL_INSNANM_INTERRUPT_SLOT=129,
    ECL_INSN_ANM_INTERRUPT_SLOT=129,
    ECL_INSNENEMY_FLAG_DISABLE_CALL_STACK=130,
    ECL_INSN_ENEMY_FLAG_DISABLE_CALL_STACK=130,
    ECL_INSNBULLET_RANK_INFLUENCE=131,
    ECL_INSN_BULLET_RANK_INFLUENCE=131,
    ECL_INSNENEMY_FLAG_INVISIBLE=132,
    ECL_INSN_ENEMY_FLAG_INVISIBLE=132,
    ECL_INSNBOSS_TIMER_CLEAR=133,
    ECL_INSN_BOSS_TIMER_CLEAR=133
} EclInsn;

typedef struct Pbg3Parser *FileAbstractionToPbg3Parser;

typedef struct AnmRawScript AnmRawScript, *PAnmRawScript;

struct AnmRawScript {
    uint id;
    struct AnmRawInstr *firstInstruction;
};

typedef struct Vertex_TEX1_XYZRWH Vertex_TEX1_XYZRWH, *PVertex_TEX1_XYZRWH;

struct Vertex_TEX1_XYZRWH {
    struct D3DXVECTOR4 pos;
    struct D3DXVECTOR2 textureUV;
};

typedef struct Vertex_DIFFUSE_XYZRWH Vertex_DIFFUSE_XYZRWH, *PVertex_DIFFUSE_XYZRWH;

struct Vertex_DIFFUSE_XYZRWH {
    struct D3DXVECTOR4 pos;
    D3DCOLOR diffuse;
};

typedef struct Vertex_TEX1_DIFFUSE_XYZRWH Vertex_TEX1_DIFFUSE_XYZRWH, *PVertex_TEX1_DIFFUSE_XYZRWH;

struct Vertex_TEX1_DIFFUSE_XYZRWH {
    struct D3DXVECTOR4 pos;
    D3DCOLOR color;
    struct D3DXVECTOR2 textureUV;
};

typedef struct AnmRawSprite AnmRawSprite, *PAnmRawSprite;

struct AnmRawSprite {
    uint id;
    struct D3DXVECTOR2 offset;
    struct D3DXVECTOR2 size;
};

typedef struct AnmManager AnmManager, *PAnmManager;

typedef struct AnmRawEntry AnmRawEntry, *PAnmRawEntry;

struct AnmManager {
    struct AnmLoadedSprite sprites[2048];
    struct AnmVm virtualMachine;
    struct IDirect3DTexture8 *textures[264];
    void *imageDataArray[256];
    int maybeLoadedSpriteCount;
    struct AnmRawInstr *scripts[2048];
    int spriteIndices[2048];
    struct AnmRawEntry *anmFiles[128]; /* Created by retype action */
    uint anmFilesSpriteIndexOffsets[128];
    struct IDirect3DSurface8 *surfaces[32];
    struct IDirect3DSurface8 *surfacesBis[32];
    D3DXIMAGE_INFO surfaceSourceInfo[32];
    D3DCOLOR currentTextureFactor;
    struct IDirect3DTexture8 *currentTexture;
    uchar currentBlendMode;
    uchar currentColorOp;
    uchar currentVertexShader;
    uchar currentZWriteDisable;
    struct AnmLoadedSprite *currentSprite;
    struct IDirect3DVertexBuffer8 *vertexBuffer;
    struct RenderVertexInfo vertexBufferContents[4];
    int screenshot_textureId;
    int screenshot_left;
    int screenshot_top;
    int screenshot_width;
    int screenshot_height;
};

struct AnmRawEntry {
    int numSprites;
    int numScripts;
    int textureIdx;
    int width;
    int height;
    int format;
    int color_key;
    int name_offset;
    int spriteIdxOffset;
    int mipmap_name_offset;
    int version;
    int unk3;
    int texture_offset;
    int has_data;
    int next_offset;
    int unk4;
    uint spriteOffsets[10];
    struct AnmRawScript scripts[10];
};

typedef struct Vertex_TEX1_DIFFUSE_XYZ Vertex_TEX1_DIFFUSE_XYZ, *PVertex_TEX1_DIFFUSE_XYZ;

struct Vertex_TEX1_DIFFUSE_XYZ {
    D3DXVECTOR3 position;
    D3DCOLOR diffuse;
    struct D3DXVECTOR2 textureUV;
};

typedef struct AnmRawTexture AnmRawTexture, *PAnmRawTexture;

struct AnmRawTexture {
    uint magic;
    ushort zero;
    ushort format;
    ushort width;
    ushort height;
    uint size;
};

typedef struct StdRawObject StdRawObject, *PStdRawObject;

typedef struct StdRawQuadBasic StdRawQuadBasic, *PStdRawQuadBasic;

struct StdRawQuadBasic {
    short type;
    short byteSize;
    short anmScript;
    short vmIndex;
    D3DXVECTOR3 position;
    struct D3DXVECTOR2 size;
};

struct StdRawObject {
    ushort id;
    uchar field1_0x2;
    uchar flags;
    D3DXVECTOR3 position;
    D3DXVECTOR3 size;
    struct StdRawQuadBasic firstQuad;
};

typedef struct StdRawInstr StdRawInstr, *PStdRawInstr;

struct StdRawInstr {
    int field0_0x0;
    ushort field1_0x4;
    ushort field2_0x6;
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    undefined field11_0x10;
    undefined field12_0x11;
    undefined field13_0x12;
    undefined field14_0x13;
};

typedef struct StdRawInstrArgs StdRawInstrArgs, *PStdRawInstrArgs;

struct StdRawInstrArgs {
    int values[3];
};

typedef struct StdRawHeader StdRawHeader, *PStdRawHeader;

struct StdRawHeader {
    ushort objectsCount;
    ushort quadsCount;
    uint offsetToInstances;
    uint offsetToScript;
    uint field4_0xc;
    char stageName[128];
    char bgmNames[4][128];
    char bgmPaths[4][128];
    undefined field8_0x490;
    undefined field9_0x491;
    undefined field10_0x492;
    undefined field11_0x493;
    undefined field12_0x494;
    undefined field13_0x495;
    undefined field14_0x496;
    undefined field15_0x497;
    undefined field16_0x498;
    undefined field17_0x499;
    undefined field18_0x49a;
    undefined field19_0x49b;
    undefined field20_0x49c;
    undefined field21_0x49d;
    undefined field22_0x49e;
    undefined field23_0x49f;
    undefined field24_0x4a0;
    undefined field25_0x4a1;
    undefined field26_0x4a2;
    undefined field27_0x4a3;
    undefined field28_0x4a4;
    undefined field29_0x4a5;
    undefined field30_0x4a6;
    undefined field31_0x4a7;
    undefined field32_0x4a8;
    undefined field33_0x4a9;
    undefined field34_0x4aa;
    undefined field35_0x4ab;
    undefined field36_0x4ac;
    undefined field37_0x4ad;
    undefined field38_0x4ae;
    undefined field39_0x4af;
    undefined field40_0x4b0;
    undefined field41_0x4b1;
    undefined field42_0x4b2;
    undefined field43_0x4b3;
    undefined field44_0x4b4;
    undefined field45_0x4b5;
    undefined field46_0x4b6;
    undefined field47_0x4b7;
    undefined field48_0x4b8;
    undefined field49_0x4b9;
    undefined field50_0x4ba;
    undefined field51_0x4bb;
    undefined field52_0x4bc;
    undefined field53_0x4bd;
    undefined field54_0x4be;
    undefined field55_0x4bf;
    undefined field56_0x4c0;
    undefined field57_0x4c1;
    undefined field58_0x4c2;
    undefined field59_0x4c3;
    undefined field60_0x4c4;
    undefined field61_0x4c5;
    undefined field62_0x4c6;
    undefined field63_0x4c7;
    undefined field64_0x4c8;
    undefined field65_0x4c9;
    undefined field66_0x4ca;
    undefined field67_0x4cb;
    undefined field68_0x4cc;
    undefined field69_0x4cd;
    undefined field70_0x4ce;
    undefined field71_0x4cf;
};

typedef struct Stage Stage, *PStage;

typedef struct StdRawInstance StdRawInstance, *PStdRawInstance;

typedef struct StageCameraSky StageCameraSky, *PStageCameraSky;

struct StageCameraSky {
    float nearPlane;
    float farPlane;
    D3DCOLOR color;
};

struct Stage {
    struct AnmVm *quadVms;
    byte *stdData;
    int quadCount;
    int objectsCount;
    struct StdRawObject **objects;
    struct StdRawInstance *objectInstances;
    struct StdRawInstr *beginningOfScript;
    struct ZunTimer scriptTime;
    int instructionIndex;
    struct ZunTimer timer;
    uint stage;
    D3DXVECTOR3 position;
    struct StageCameraSky skyFog;
    struct StageCameraSky skyFogInterpInitial;
    struct StageCameraSky skyFogInterpFinal;
    int skyFogInterpDuration;
    struct ZunTimer skyFogInterpTimer;
    byte skyFogNeedsSetup;
    enum SpellcardState spellcardState;
    int ticksSinceSpellcardStarted;
    struct AnmVm field20_0x88;
    struct AnmVm field21_0x198;
    uchar unpauseFlag;
    D3DXVECTOR3 facingDirInterpInitial;
    D3DXVECTOR3 facingDirInterpFinal;
    int facingDirInterpDuration;
    struct ZunTimer facingDirInterpTimer;
    D3DXVECTOR3 positionInterpFinal;
    int positionInterpEndTime;
    D3DXVECTOR3 positionInterpInitial;
    int positionInterpStartTime;
};

struct StdRawInstance {
    ushort id;
    ushort field1_0x2;
    D3DXVECTOR3 position;
};

typedef struct unk unk, *Punk;

struct unk {
    void *unk0;
    int unk4;
    int unk8;
    int unkc;
};

typedef ushort u16;

typedef float f32;

typedef short i16;

typedef sbyte i8;


/* WARNING! conflicting data type names: /d3d8/LPWORD - /deps/WinDef.h/LPWORD */

#define _M_IX86 300

#define _USE_ATTRIBUTES_FOR_SAL 0

#define _WIN32_WINNT 1024

#define _USE_DECLSPECS_FOR_SAL 0

#define _WIN32_WINDOWS 1024

#define WINVER 2304

#define _INTEGRAL_MAX_BITS 32

#define _MSC_VER 1200


/* WARNING! conflicting data type names: /PE/IMAGE_OPTIONAL_HEADER32 - /deps/winnt.h/IMAGE_OPTIONAL_HEADER32 */

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct {
    dword NameOffset;
    dword NameIsString;
};


/* WARNING! conflicting data type names: /PE/IMAGE_FILE_HEADER - /deps/winnt.h/IMAGE_FILE_HEADER */


/* WARNING! conflicting data type names: /PE/IMAGE_NT_HEADERS32 - /deps/winnt.h/IMAGE_NT_HEADERS32 */


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DIRECTORY_ENTRY - /deps/winnt.h/IMAGE_RESOURCE_DIRECTORY_ENTRY */


/* WARNING! conflicting data type names: /PE/IMAGE_SECTION_HEADER - /deps/winnt.h/IMAGE_SECTION_HEADER */

typedef union Misc Misc, *PMisc;

union Misc {
    dword PhysicalAddress;
    dword VirtualSize;
};


/* WARNING! conflicting data type names: /PE/IMAGE_DATA_DIRECTORY - /deps/winnt.h/IMAGE_DATA_DIRECTORY */


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DATA_ENTRY - /deps/winnt.h/IMAGE_RESOURCE_DATA_ENTRY */

typedef enum SectionFlags {
    IMAGE_SCN_TYPE_NO_PAD=8,
    IMAGE_SCN_RESERVED_0001=16,
    IMAGE_SCN_CNT_CODE=32,
    IMAGE_SCN_CNT_INITIALIZED_DATA=64,
    IMAGE_SCN_CNT_UNINITIALIZED_DATA=128,
    IMAGE_SCN_LNK_OTHER=256,
    IMAGE_SCN_LNK_INFO=512,
    IMAGE_SCN_RESERVED_0040=1024,
    IMAGE_SCN_LNK_REMOVE=2048,
    IMAGE_SCN_LNK_COMDAT=4096,
    IMAGE_SCN_GPREL=32768,
    IMAGE_SCN_MEM_16BIT=131072,
    IMAGE_SCN_MEM_PURGEABLE=131072,
    IMAGE_SCN_MEM_LOCKED=262144,
    IMAGE_SCN_MEM_PRELOAD=524288,
    IMAGE_SCN_ALIGN_1BYTES=1048576,
    IMAGE_SCN_ALIGN_2BYTES=2097152,
    IMAGE_SCN_ALIGN_4BYTES=3145728,
    IMAGE_SCN_ALIGN_8BYTES=4194304,
    IMAGE_SCN_ALIGN_16BYTES=5242880,
    IMAGE_SCN_ALIGN_32BYTES=6291456,
    IMAGE_SCN_ALIGN_64BYTES=7340032,
    IMAGE_SCN_ALIGN_128BYTES=8388608,
    IMAGE_SCN_ALIGN_256BYTES=9437184,
    IMAGE_SCN_ALIGN_512BYTES=10485760,
    IMAGE_SCN_ALIGN_1024BYTES=11534336,
    IMAGE_SCN_ALIGN_2048BYTES=12582912,
    IMAGE_SCN_ALIGN_4096BYTES=13631488,
    IMAGE_SCN_ALIGN_8192BYTES=14680064,
    IMAGE_SCN_LNK_NRELOC_OVFL=16777216,
    IMAGE_SCN_MEM_DISCARDABLE=33554432,
    IMAGE_SCN_MEM_NOT_CACHED=67108864,
    IMAGE_SCN_MEM_NOT_PAGED=134217728,
    IMAGE_SCN_MEM_SHARED=268435456,
    IMAGE_SCN_MEM_EXECUTE=536870912,
    IMAGE_SCN_MEM_READ=1073741824,
    IMAGE_SCN_MEM_WRITE=2147483648
} SectionFlags;


/* WARNING! conflicting data type names: /PE/IMAGE_RESOURCE_DIRECTORY - /deps/winnt.h/IMAGE_RESOURCE_DIRECTORY */

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion;

union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion {
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;
    dword Name;
    word Id;
};

typedef struct UnknownSub3c UnknownSub3c, *PUnknownSub3c;

struct UnknownSub3c {
    float field0_0x0;
    int field1_0x4;
    int field2_0x8;
    int field3_0xc;
    int field4_0x10;
    float field5_0x14;
    int field6_0x18;
    int field7_0x1c;
    int field8_0x20;
    int field9_0x24;
    float field10_0x28;
    int field11_0x2c;
    int field12_0x30;
    int field13_0x34;
    int field14_0x38;
    float field15_0x3c;
};

typedef struct astruct astruct, *Pastruct;

struct astruct {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    undefined field8_0x8;
    undefined field9_0x9;
    undefined field10_0xa;
    undefined field11_0xb;
    undefined field12_0xc;
    undefined field13_0xd;
    undefined field14_0xe;
    undefined field15_0xf;
    undefined field16_0x10;
    undefined field17_0x11;
    undefined field18_0x12;
    undefined field19_0x13;
    short *field20_0x14;
    undefined field21_0x18;
    undefined field22_0x19;
    undefined field23_0x1a;
    undefined field24_0x1b;
    undefined field25_0x1c;
    undefined field26_0x1d;
    undefined field27_0x1e;
    undefined field28_0x1f;
    undefined field29_0x20;
    undefined field30_0x21;
    undefined field31_0x22;
    undefined field32_0x23;
    undefined field33_0x24;
    undefined field34_0x25;
    undefined field35_0x26;
    undefined field36_0x27;
    undefined field37_0x28;
    undefined field38_0x29;
    undefined field39_0x2a;
    undefined field40_0x2b;
    undefined field41_0x2c;
    undefined field42_0x2d;
    undefined field43_0x2e;
    undefined field44_0x2f;
    undefined field45_0x30;
    undefined field46_0x31;
    undefined field47_0x32;
    undefined field48_0x33;
    short *field49_0x34;
};

typedef struct Unknown Unknown, *PUnknown;

struct Unknown { /* Old variant of AnmVm (TODO remove me) */
    undefined4 field0_0x0;
    undefined4 field1_0x4;
    undefined4 field2_0x8;
    undefined4 field3_0xc;
    undefined4 field4_0x10;
    undefined4 field5_0x14;
    float field6_0x18;
    float field7_0x1c;
    undefined4 field8_0x20;
    undefined4 field9_0x24;
    undefined4 field10_0x28;
    undefined4 field11_0x2c;
    struct ZunTimer field12_0x30;
    struct UnknownSub3c field13_0x3c;
    int field14_0x7c;
    uint field15_0x80;
    undefined2 field16_0x84;
    undefined2 field17_0x86;
    undefined2 field18_0x88;
    undefined2 field19_0x8a;
    undefined2 field20_0x8c;
    undefined field21_0x8e;
    undefined field22_0x8f;
    undefined field23_0x90;
    undefined field24_0x91;
    undefined field25_0x92;
    undefined field26_0x93;
    undefined field27_0x94;
    undefined field28_0x95;
    undefined field29_0x96;
    undefined field30_0x97;
    float field31_0x98;
    undefined field32_0x9c;
    undefined field33_0x9d;
    undefined field34_0x9e;
    undefined field35_0x9f;
    undefined field36_0xa0;
    undefined field37_0xa1;
    undefined field38_0xa2;
    undefined field39_0xa3;
    undefined field40_0xa4;
    undefined field41_0xa5;
    undefined field42_0xa6;
    undefined field43_0xa7;
    undefined field44_0xa8;
    undefined field45_0xa9;
    undefined field46_0xaa;
    undefined field47_0xab;
    undefined field48_0xac;
    undefined field49_0xad;
    undefined field50_0xae;
    undefined field51_0xaf;
    short field52_0xb0;
    undefined field53_0xb2;
    undefined field54_0xb3;
    undefined field55_0xb4;
    undefined field56_0xb5;
    undefined field57_0xb6;
    undefined field58_0xb7;
    undefined field59_0xb8;
    undefined field60_0xb9;
    undefined field61_0xba;
    undefined field62_0xbb;
    undefined field63_0xbc;
    undefined field64_0xbd;
    undefined field65_0xbe;
    undefined field66_0xbf;
    struct AnmLoadedSprite *field67_0xc0;
};

typedef struct CD3DXImage CD3DXImage, *PCD3DXImage;

struct CD3DXImage {
    undefined4 field0_0x0;
    undefined4 field1_0x4;
    undefined field2_0x8;
    undefined field3_0x9;
    undefined field4_0xa;
    undefined field5_0xb;
    int left;
    int top;
    int right;
    int bottom;
    undefined4 field10_0x1c;
    undefined4 field11_0x20;
    undefined4 field12_0x24;
    undefined4 field13_0x28;
    undefined4 field14_0x2c;
};

typedef struct EHExceptionRecord EHExceptionRecord, *PEHExceptionRecord;

struct EHExceptionRecord { /* PlaceHolder Structure */
};

typedef struct FrameInfo FrameInfo, *PFrameInfo;

struct FrameInfo { /* PlaceHolder Structure */
};

typedef struct CDocObjectServer CDocObjectServer, *PCDocObjectServer;

struct CDocObjectServer { /* PlaceHolder Structure */
};

typedef struct _s_CatchableType _s_CatchableType, *P_s_CatchableType;

struct _s_CatchableType { /* PlaceHolder Structure */
};

typedef struct EHRegistrationNode EHRegistrationNode, *PEHRegistrationNode;

struct EHRegistrationNode { /* PlaceHolder Structure */
};

typedef struct COleDispParams COleDispParams, *PCOleDispParams;

struct COleDispParams { /* PlaceHolder Structure */
};

typedef struct _s_ThrowInfo _s_ThrowInfo, *P_s_ThrowInfo;

struct _s_ThrowInfo { /* PlaceHolder Structure */
};

